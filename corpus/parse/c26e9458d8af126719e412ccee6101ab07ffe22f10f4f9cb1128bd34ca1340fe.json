{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/rebilly.com/2.1/openapi.yaml",
			"byteSize": 869451,
			"content": "openapi: 3.0.3\nservers:\n  - description: Sandbox Server.\n    url: https://api-sandbox.rebilly.com\n  - description: Live Server.\n    url: https://api.rebilly.com\ninfo:\n  contact:\n    email: integrations@rebilly.com\n    name: Rebilly API Support\n    url: https://www.rebilly.com/contact/\n  description: \u003e\n    # Introduction\n\n    The Rebilly API is built on HTTP.  Our API is RESTful.  It has predictable\n\n    resource URLs.  It returns HTTP response codes to indicate errors.  It also\n\n    accepts and returns JSON in the HTTP body.  You can use your favorite\n\n    HTTP/REST library for your programming language to use Rebilly's API, or\n\n    you can use one of our SDKs (currently available in [PHP](https://github.com/Rebilly/rebilly-php)\n\n    and [Javascript](https://github.com/Rebilly/rebilly-js-sdk)).\n\n\n    We have other APIs that are also available.  Every action from our [app](https://app.rebilly.com)\n\n    is supported by an API which is documented and available for use so that you\n\n    may automate any workflows necessary.  This document contains the most commonly\n\n    integrated resources.\n\n\n    # Authentication\n\n\n    When you sign up for an account, you are given your first secret API key.\n\n    You can generate additional API keys, and delete API keys (as you may\n\n    need to rotate your keys in the future). You authenticate to the\n\n    Rebilly API by providing your secret key in the request header.\n\n\n    Rebilly offers three forms of authentication:  secret key, publishable key, JSON Web Tokens, and public signature key.\n\n    - [Secret API key](#section/Authentication/SecretApiKey): used for requests made\n      from the server side. Never share these keys. Keep them guarded and secure.\n    - [Publishable API key](#section/Authentication/PublishableApiKey): used for \n      requests from the client side. For now can only be used to create \n      a [Payment Token](#operation/PostToken) and \n      a [File token](#operation/PostFile).\n    - [JWT](#section/Authentication/JWT): short lifetime tokens that can be assigned a specific expiration time.\n\n\n    Never share your secret keys. Keep them guarded and secure.\n\n\n    \u0026lt;!-- ReDoc-Inject: \u0026lt;security-definitions\u0026gt; --\u0026gt;\n\n\n    # Errors\n\n    Rebilly follow's the error response format proposed in [RFC 7807](https://tools.ietf.org/html/rfc7807) also known as Problem Details for HTTP APIs.  As with our normal API responses, your client must be prepared to gracefully handle additional members of the response.\n\n\n    ## Forbidden\n\n    \u0026lt;RedocResponse pointer={\"#/components/responses/Forbidden\"} /\u0026gt;\n\n\n    ## Conflict\n\n    \u0026lt;RedocResponse pointer={\"#/components/responses/Conflict\"} /\u0026gt;\n\n\n    ## NotFound\n\n    \u0026lt;RedocResponse pointer={\"#/components/responses/NotFound\"} /\u0026gt;\n\n\n    ## Unauthorized\n\n    \u0026lt;RedocResponse pointer={\"#/components/responses/Unauthorized\"} /\u0026gt;\n\n\n    ## ValidationError\n\n    \u0026lt;RedocResponse pointer={\"#/components/responses/ValidationError\"} /\u0026gt;\n\n\n    # SDKs\n\n\n    Rebilly offers a Javascript SDK and a PHP SDK to help interact with\n\n    the API.  However, no SDK is required to use the API.\n\n\n    Rebilly also offers [FramePay](https://docs.rebilly.com/docs/developer-docs/framepay/),\n     a client-side iFrame-based solution to help\n    create payment tokens while minimizing PCI DSS compliance burdens\n\n    and maximizing the customizability. [FramePay](https://docs.rebilly.com/docs/developer-docs/framepay/)\n\n    is interacting with the [payment tokens creation operation](#operation/PostToken).\n\n\n    ## Javascript SDK\n\n\n    Installation and usage instructions can be found [here](https://docs.rebilly.com/docs/developer-docs/sdks).\n\n    SDK code examples are included in these docs.\n\n\n    ## PHP SDK\n\n    For all PHP SDK examples provided in these docs you will need to configure the `$client`.\n\n    You may do it like this:\n\n\n    ```php\n\n    $client = new Rebilly\\Client([\n        'apiKey' =\u0026gt; 'YourApiKeyHere',\n        'baseUrl' =\u0026gt; 'https://api.rebilly.com',\n    ]);\n\n    ```\n\n\n    # Using filter with collections\n\n    Rebilly provides collections filtering. You can use `?filter` param on collections to define which records should be shown in the response.\n\n\n    Here is filter format description:\n\n\n    - Fields and values in filter are separated with `:`: `?filter=firstName:John`.\n\n\n    - Sub-fields are separated with `.`: `?filter=billingAddress.country:US`.\n\n\n    - Multiple filters are separated with `;`: `?filter=firstName:John;lastName:Doe`. They will be joined with `AND` logic. In this example: `firstName:John` AND `lastName:Doe`.\n\n\n    - You can use multiple values using `,` as values separator: `?filter=firstName:John,Bob`. Multiple values specified for a field will be joined with `OR` logic. In this example: `firstName:John` OR `firstName:Bob`.\n\n\n    - To negate the filter use `!`: `?filter=firstName:!John`. Note that you can negate multiple values like this: `?filter=firstName:!John,!Bob`. This filter rule will exclude all Johns and Bobs from the response.\n\n\n    - You can use range filters like this: `?filter=amount:1..10`.\n\n\n    - You can use gte (greater than or equals) filter like this: `?filter=amount:1..`, or lte (less than or equals) than filter like this: `?filter=amount:..10`. This also works for datetime-based fields.\n\n\n    - You can create some [predefined values lists](https://user-api-docs.rebilly.com/#tag/Lists) and use them in filter: `?filter=firstName:@yourListName`. You can also exclude list values: `?filter=firstName:!@yourListName`.\n\n\n    - Datetime-based fields accept values formatted using RFC 3339 like this: `?filter=createdTime:2021-02-14T13:30:00Z`. \n\n\n    # Expand to include embedded objects\n\n    Rebilly provides the ability to pre-load additional \n\n    objects with a request. \n\n\n    You can use `?expand` param on most requests to expand\n\n    and include embedded objects within the\n\n    `_embedded` property of the response.\n\n\n    The `_embedded` property contains an array of \n\n    objects keyed by the expand parameter value(s).\n\n\n    You may expand multiple objects by passing them\n\n    as comma-separated to the expand value like so:\n\n\n    ```\n\n    ?expand=recentInvoice,customer\n\n    ```\n\n\n    And in the response, you would see:\n\n\n    ```\n\n    \"_embedded\": [\n        \"recentInvoice\": {...},\n        \"customer\": {...}\n    ]\n\n    ```\n\n    Expand may be utilitized not only on `GET` requests but also on `PATCH`, `POST`, `PUT` requests too.\n\n\n\n    # Getting started guide\n\n\n    Rebilly's API has over 300 operations.  That's more than you'll \n\n    need to implement your use cases.  If you have a use \n\n    case you would like to implement, please consult us for\n\n    feedback on the best API operations for the task.\n\n\n    Our getting started guide will demonstrate a basic order form use\n\n    case.  It will allow us to highlight core resources\n\n    in Rebilly that will be helpful for many other use cases\n\n    too.\n\n\n    Within 25 minutes, you'll have sent API requests (via our console)\n\n    to create a subscription order.\n  license:\n    name: Rebilly\n    url: https://www.rebilly.com/api-license/\n  termsOfService: https://www.rebilly.com/terms-of-use/\n  title: Rebilly REST API\n  version: \"2.1\"\n  x-apisguru-categories:\n    - payment\n    - ecommerce\n  x-logo:\n    backgroundColor: \"#0033A0\"\n    url: https://rebilly-core.redoc.ly/rb_apiLogo.svg\n  x-origin:\n    - format: openapi\n      url: https://api-reference.rebilly.com/openapi.json\n      version: \"3.0\"\n  x-providerName: rebilly.com\nsecurity:\n  - SecretApiKey: []\n  - JWT: []\ntags:\n  - description: |\n      3D Secure is a way to authenticate and protect transactions.  Typically,\n      it's only possible to protect the initial transaction in an order\n      with 3D Secure.\n    name: 3D Secure\n  - description: \u003e\n      AML, also known as Anti-Money-Laundering is an endpoint that\n      searches multiple\n\n      PEP, Sanctions, and Adverse Media lists for listed identities or media for screening\n\n      purposes. Used during some transaction processing and on Contact creation, it helps\n\n      determine whether someone is blocklisted or has political or economic sanctions against\n\n      them.\n    name: AML\n  - description: |\n      Bank Accounts are a type of payment instrument used to collect\n      ACH (echeck) payments, similar to how a payment\n      card would be used to for a credit card payment.\n    name: Bank Accounts\n  - description: |\n      Your blocklists contains values of customerIds, email addresses,\n      ipAddresses, bank identification numbers, countries or payment cards that\n      you do NOT want to do business with. They are a good tool for managing\n      risk. A blocklist entry that expires after a period of time we call a\n      greylist.\n    name: Blocklists\n  - description: \u003e\n      Coupons allows to apply different types of discounts to Invoices,\n      Orders and Plans. Redeemed Coupons will be applied only to Invoices with\n      the same currency.\n    name: Coupons\n  - description: |\n      Customers are your customers, sometimes known as accounts, clients,\n      members, patrons, or players in other systems.\n    name: Customers\n  - description: \u003e\n      The customers timeline keeps an audit trail of changes and activity\n      for each customer.\n    name: Customers Timeline\n  - description: \u003e\n      Customer KYC files uploaded on behalf of a customer, tagged with a\n      document type and submitted for validation.\n    name: KYC Documents\n  - description: \u003e\n      Create authentication credentials, login, logout, and verify your\n      customers.\n    name: Customer Authentication\n  - description: |\n      Create additional custom fields for particular resources.  You may name,\n      describe, and determine the type of the schema.\n    name: Custom Fields\n  - description: |\n      Handle disputes (chargebacks and retrievals).\n    name: Disputes\n  - description: \u003e\n      A File is an entity that can store a physical file and some\n      metadata. It also provides an easy access to\n\n      its size, mime-type, user-defined tags and description thus allowing easy sorting and searching among stored\n\n      files.\n\n      There are several methods of file uploading available: multipart/form-data encoded form, RAW POST (by sending\n\n      file contents as POST body), fetching from URL (by providing the file URL via 'url' param)\n\n      Attachment is an entity that is used to link a File to one or multiple objects like Customer, Dispute, Payment,\n\n      Transaction, Order, Plan, Product, Invoice, Note. That allows to quickly find and use files related to\n\n      those specific entities.\n    name: Files\n  - description: \u003e\n      Invoices leave a record for both you and your customer of the\n      products sold.\n    name: Invoices\n  - description: \u003e\n      The Payment Instrument allows you to accept a variety of payment\n      methods through a single API.\n    name: Payment Instruments\n  - description: \u003e\n      Payment cards are a type of payment instrument used for credit and\n      debit card\n\n      sales.  Rebilly securely vaults the full payment card number, and can pass it\n\n      onward securely to any gateway account to transact business.\n    name: Payment Cards\n  - description: \u003e\n      PayPal Accounts are used for paying with PayPal.  We can generate a\n      BAID (billing\n\n      agreement id) which will allow for recurring billing.\n    name: PayPal Accounts\n  - description: \u003e\n      Payment tokens are used to reduce the scope of PCI DSS\n      compliance.  A payment\n\n      token can be made using a different authentication scheme (refer to the public key\n\n      authentication scheme in the Authentication section), which allows you to\n\n      create a payment token directly from the browser, bypassing the need to send\n\n      sensitive cardholder info to your servers.  We recommend using this with our\n\n      Rebilly.js library, which helps you wire a form into this API resource and create\n\n      payment tokens.\n    name: Payment Tokens\n  - description: \u003e\n      Plans are a template for making a subscription.  For example, you\n      may have a plan\n\n      that has a 30-day free trial followed by a recurring charge of $19.95 per month\n\n      until canceled.  The combination of the plan and a request to make an order\n\n      will apply those instructions to create the invoices according to the plan's\n\n      schedule.\n    name: Plans\n  - description: |\n      A product describes what you sell (goods or services).\n      A product determines how what you sell appears on invoices and receipts.\n      The pricing for products is set in Plans.  One product can have many\n      plans.\n    name: Products\n  - description: \u003e\n      The Rebilly Reporting API is currently experimental. You may see\n\n      the [Reports API Documentation here](https://reports-api-docs.rebilly.com).\n    name: Reports\n  - description: |\n      Search data including customers, invoices, orders, transactions and more.\n    name: Search\n  - description: \u003e\n      A shipping zone contains regions and countries that you ship to.\n      Each shipping zone has its own shipping rates.\n    name: Shipping Zones\n  - description: \u003e\n      An order applies a plan's template to create invoice(s) for a\n      customer, optionally at the appropriate scheduled intervals. A\n      subscription order may also determine if the payment is collected\n      automatically (with autopay set true).\n    name: Orders\n  - description: |\n      Tag customers to better organize your data.\n    name: Tags\n  - description: |\n      You can map a product to a tax category.  The tax category is used by\n      tax providers to calculate taxes for invoices.\n    name: Taxes\n  - description: |\n      Get and refund transactions.\n    name: Transactions\n  - description: \u003e\n      The Rebilly User API is primarily for our GUI apps.  You may see\n\n      the [User API Documentation here](https://user-api-docs.rebilly.com).\n\n      A User represents a person who can login to Rebilly, and take actions subject to\n\n      their granted permissions.  It has resources less commonly integrated by\n\n      3rd parties.\n    name: Users\npaths:\n  /3dsecure:\n    get:\n      operationId: Get3DSecureCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ThreeDSecure\"\n                type: array\n          description: A list was retrieved successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Retrieve a list of ThreeDSecure entries\n      tags:\n        - 3D Secure\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            // all parameters are optional\n\n            const firstCollection = await api.threeDSecure.getAll();\n\n\n            // alternatively you can specify one or more of them\n\n            const params = {limit: 20, offset: 100}; \n\n            const secondCollection = await api.threeDSecure.getAll(params);\n\n\n            // access the collection items, each item is a Member\n\n            secondCollection.items.forEach(entry =\u0026gt; console.log(entry.fields.customerId));\n      x-sdk-operation-name: getAll\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Create a ThreeDSecure entry.\n      operationId: Post3DSecure\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ThreeDSecure\"\n        description: ThreeDSecure resource.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThreeDSecure\"\n          description: ThreeDSecure entry was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create a ThreeDSecure entry\n      tags:\n        - 3D Secure\n      x-code-samples:\n        - lang: JavaScript\n          source: |-\n            // first set the properties for the new entry\n            const data = {\n                customerId: 'foobar-001',\n                websiteId: 'my-website-id',\n                paymentCardId: 'a-certain-card-id',\n                gatewayAccountId: 'main-gateway-id',\n                enrolled: 'Y',\n                // enrollment electronic \n                // commerce indicator\n                enrollmentEci: 'abc',\n                // electronic commerce indicator\n                eci: 0,\n                // cardholder authentication verification value\n                cavv: '1234',\n                // transaction Id\n                xid: 'er9349gju09u40394guj',\n                payerAuthResponseStatus: 'Y',\n                signatureVerification: 'Y',\n                amount: 12.99,\n                currency: 'USD'\n            };\n\n            const entry = await api.threeDSecure.create({data});\n      x-sdk-operation-name: create\n  \"/3dsecure/{id}\":\n    get:\n      description: |\n        Retrieve a ThreeDSecure entry with specified identifier string.\n      operationId: Get3DSecure\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThreeDSecure\"\n          description: ThreeDSecure entry was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a ThreeDSecure entry\n      tags:\n        - 3D Secure\n      x-code-samples:\n        - lang: JavaScript\n          source: |-\n            const entry = await api.threeDSecure.get({id: 'foobar-001'});\n            console.log(entry.fields.customerId);\n      x-sdk-operation-name: get\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n  /aml:\n    get:\n      description: \u003e\n        Search multiple PEP/Sanctions/Adverse Media lists with first and\n        last name to find any blocklisted identities.\n\n        Performs a fuzzy search including soundex. Not all fields are guaranteed to be filled.\n      operationId: GetAmlEntry\n      parameters:\n        - $ref: \"#/components/parameters/organizationId\"\n        - description: First name of individual to search.\n          in: query\n          name: firstName\n          required: true\n          schema:\n            type: string\n        - description: Last name of individual to search.\n          in: query\n          name: lastName\n          required: true\n          schema:\n            type: string\n        - description: Date of birth in format YYYY-MM-DD.\n          in: query\n          name: dob\n          required: false\n          schema:\n            type: string\n        - description: Country of individual as an ISO Alpha-2 code.\n          in: query\n          name: country\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AML\"\n                type: array\n          description: An array of objects representing hits, or an empty array if none\n            are found.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n      summary: Search PEP/Sanctions/Adverse Media lists\n      tags:\n        - AML\n      x-sdk-operation-name: getAll\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n  /attachments:\n    get:\n      description: \u003e\n        Retrieve a list of attachments.\n\n        You may sort by the id, name, relatedId, relatedType, fileId, createdTime, and updatedTime.\n      operationId: GetAttachmentCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionFilter\"\n        - $ref: \"#/components/parameters/collectionQuery\"\n        - $ref: \"#/components/parameters/collectionExpand\"\n        - $ref: \"#/components/parameters/collectionFields\"\n        - $ref: \"#/components/parameters/collectionSort\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Attachment\"\n                type: array\n          description: A list of Attachments was retrieved successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Retrieve a list of Attachments\n      tags:\n        - Files\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $attachments = $client-\u0026gt;attachments()-\u0026gt;search([\n                'filter' =\u0026gt; 'relatedType:customer',\n            ]);\n        - lang: JavaScript\n          source: \u003e-\n            // all parameters are optional\n\n            const firstCollection = await api.files.getAllAttachments();\n\n\n            // alternatively you can specify one or more of them\n\n            const params = {limit: 20, offset: 100, sort: '-createdTime'}; \n\n            const secondCollection = await api.files.getAllAttachments(params);\n\n\n            // access the collection items, each item is a Member\n\n            secondCollection.items.forEach(attachment =\u0026gt; console.log(attachment.fields.relatedType));\n      x-sdk-operation-name: getAllAttachments\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Create an Attachment.\n      operationId: PostAttachment\n      requestBody:\n        $ref: \"#/components/requestBodies/Attachment\"\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Attachment\"\n          description: Attachment was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create an Attachment\n      tags:\n        - Files\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $attachmentForm = new Rebilly\\Entities\\Attachment();\n\n            $attachmentForm-\u0026gt;setFileId('fileId');\n\n            $attachmentForm-\u0026gt;setRelatedType($attachmentForm::TYPE_CUSTOMER);\n\n            $attachmentForm-\u0026gt;setRelatedId('customerId');\n\n\n            try {\n                $attachment = $client-\u0026gt;attachments()-\u0026gt;create($attachmentForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: |-\n            // define the attachment\n            const data = {\n                // previously uploaded file ID\n                fileId: 'my-file-id',\n                relatedType: 'customer',\n                relatedId: 'my-customer-id',\n                name: 'an attachment',\n                description: `the customer's file`\n            };\n\n            const attachment = await api.files.attach({data});\n            console.log(attachment.fields.id);\n      x-sdk-operation-name: attach\n  \"/attachments/{id}\":\n    delete:\n      description: |\n        Delete the Attachment with predefined identifier string.\n      operationId: DeleteAttachment\n      responses:\n        \"204\":\n          description: Attachment was deleted.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Delete an Attachment\n      tags:\n        - Files\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $client-\u0026gt;attachments()-\u0026gt;delete('attachmentId');\n        - lang: JavaScript\n          source: |-\n            const request = await api.files.detach({id: 'my-attachment-id'});\n\n            // the request does not return any fields but\n            // you can confirm the success using the status code\n            console.log(request.response.status); // 204\n      x-sdk-operation-name: detach\n    get:\n      description: |\n        Retrieve a Attachment with specified identifier string.\n      operationId: GetAttachment\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Attachment\"\n          description: Attachment was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve an Attachment\n      tags:\n        - Files\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $attachment = $client-\u0026gt;attachments()-\u0026gt;load('attachmentId');\n        - lang: JavaScript\n          source: \u003e-\n            const attachment = await api.files.getAttachment({id: 'foobar-001'});\n\n            console.log(attachment.fields.relatedType);\n      x-sdk-operation-name: getAttachment\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    put:\n      description: |\n        Update the Attachment with predefined ID.\n      operationId: PutAttachment\n      requestBody:\n        $ref: \"#/components/requestBodies/Attachment\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Attachment\"\n          description: Attachment was updated.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Attachment\"\n          description: Attachment was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Update the Attachment with predefined ID\n      tags:\n        - Files\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $attachmentForm = new Rebilly\\Entities\\Attachment();\n\n            $attachmentForm-\u0026gt;setFileId('fileId');\n\n            $attachmentForm-\u0026gt;setRelatedType($attachmentForm::TYPE_CUSTOMER);\n\n            $attachmentForm-\u0026gt;setRelatedId('customerId');\n\n\n            try {\n                $attachment = $client-\u0026gt;attachments()-\u0026gt;update('attachmentId', $attachmentForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: \u003e-\n            // define the values to update\n\n            const data = {\n                relatedType: 'customer',\n                relatedId: 'my-customer-id',\n                name: 'an attachment',\n                description: `the customer's file`\n            };\n\n\n            const attachment = await api.files.updateAttachment({id: 'foobar-001', data});\n      x-sdk-operation-name: updateAttachment\n  /authentication-options:\n    get:\n      description: |\n        Read current authentication options.\n      operationId: GetAuthenticationOption\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AuthenticationOptions\"\n                type: array\n          description: Current authentication options was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Read current authentication options\n      tags:\n        - Customer Authentication\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $authenticationOptions = $client-\u0026gt;authenticationOptions()-\u0026gt;load();\n        - lang: JavaScript\n          source: |-\n            const options = await api.customerAuthentication.getAuthOptions();\n            console.log(options.fields.credentialTtl);\n      x-sdk-operation-name: getAuthOptions\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n    put:\n      description: |\n        Change options.\n      operationId: PutAuthenticationOption\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AuthenticationOptions\"\n        description: Authentication Options resource.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AuthenticationOptions\"\n          description: Authentication Options were updated.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Change authentication options\n      tags:\n        - Customer Authentication\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $authenticationOptionsForm = new\n            Rebilly\\Entities\\AuthenticationOptions();\n\n            // Regular expression below matches any password with 6+ length that contains alphabet symbols and/or numbers.\n\n            $authenticationOptionsForm-\u0026gt;setPasswordPattern('/^[a-zA-Z0-9]{6,}$/');\n\n\n            try {\n                $authenticationOptions = $client-\u0026gt;authenticationOptions()-\u0026gt;update($authenticationOptionsForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: \u003e-\n            // first set the properties for the authentication options\n\n            const data = {\n                passwordPattern: null,\n                credentialTtl: 10,\n                authTokenTtl: 20,\n                resetTokenTtl: 30\n            };\n\n\n            const options = await api.customerAuthentication.updateAuthOptions({data});\n\n            console.log(options.fields.credentialTtl);\n      x-sdk-operation-name: updateAuthOptions\n  /authentication-tokens:\n    get:\n      description: |\n        Retrieve a list of auth tokens.\n      operationId: GetAuthenticationTokenCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/AuthenticationToken\"\n                type: array\n          description: A list of auth tokens was retrieved successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Retrieve a list of auth tokens\n      tags:\n        - Customer Authentication\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $authenticationTokens = $client-\u0026gt;authenticationTokens()-\u0026gt;search([\n                'filter' =\u0026gt; 'customerId:testCustomer',\n            ]);\n        - lang: JavaScript\n          source: \u003e-\n            // all parameters are optional\n\n            const firstCollection = await api.customerAuthentication.getAllAuthTokens();\n\n\n            // alternatively you can specify one or more of them\n\n            const params = {limit: 20, offset: 100}; \n\n            const secondCollection = await api.customerAuthentication.getAllAuthTokens(params);\n\n\n            // access the collection items, each item is a Member\n\n            secondCollection.items.forEach(token =\u0026gt; console.log(token.fields.username));\n      x-sdk-operation-name: getAllAuthTokens\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Login a customer.\n      operationId: PostAuthenticationToken\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AuthenticationToken\"\n        description: AuthenticationToken resource.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AuthenticationToken\"\n          description: Login successful.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      security:\n        - SecretApiKey: []\n        - JWT: []\n        - PublishableApiKey: []\n      summary: Login\n      tags:\n        - Customer Authentication\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $authenticationForm = new Rebilly\\Entities\\AuthenticationToken();\n\n            $authenticationForm-\u0026gt;setUsername('username');\n\n            $authenticationForm-\u0026gt;setPassword('test123');\n\n\n            try {\n                $authenticationToken = $client-\u0026gt;authenticationTokens()-\u0026gt;login($authenticationForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: |-\n            const data = {\n                username: 'foobar',\n                password: 'fuubar'\n\n                // optionally you can define an `expiredTime` to \n                // limit the duration of the session token\n\n                //expiredTime: '2017-09-18T19:17:39Z'\n            };\n            const session = await api.customerAuthentication.login({data});\n            console.log(session.fields.token);\n      x-sdk-operation-name: login\n  \"/authentication-tokens/{token}\":\n    delete:\n      description: |\n        Logout a customer.\n      operationId: DeleteAuthenticationToken\n      responses:\n        \"204\":\n          description: Customer was logged out.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      security:\n        - SecretApiKey: []\n        - JWT: []\n        - PublishableApiKey: []\n      summary: Logout a customer\n      tags:\n        - Customer Authentication\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $client-\u0026gt;authenticationTokens()-\u0026gt;logout('token');\n        - lang: JavaScript\n          source: |-\n            const token = 'dcf6e32f2daee457a1db8ce5fdfbe200';\n            const request = await api.customerAuthentication.logout({token});\n\n            // the request does not return any fields but\n            // you can confirm the success using the status code\n            console.log(request.response.status); // 204\n      x-sdk-operation-name: logout\n    get:\n      description: |\n        Verify an authentication token.\n      operationId: GetAuthenticationTokenVerification\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AuthenticationToken\"\n          description: Authentication Token was verified.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      security:\n        - SecretApiKey: []\n        - JWT: []\n        - PublishableApiKey: []\n      summary: Verify\n      tags:\n        - Customer Authentication\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $isVerified = $client-\u0026gt;authenticationTokens()-\u0026gt;verify('token');\n        - lang: JavaScript\n          source: \u003e-\n            const token = 'dcf6e32f2daee457a1db8ce5fdfbe200';\n\n            const verification = await api.customerAuthentication.verify({token});\n\n            // if the the token is valid then no error will be thrown\n\n            console.log(verification.reponse.status) // 200\n      x-sdk-operation-name: verify\n    parameters:\n      - description: The token identifier string.\n        in: path\n        name: token\n        required: true\n        schema:\n          type: string\n      - $ref: \"#/components/parameters/organizationId\"\n  \"/authentication-tokens/{token}/exchange\":\n    parameters:\n      - description: The token identifier string.\n        in: path\n        name: token\n        required: true\n        schema:\n          type: string\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: \u003e\n        Exchange Authentication Token for JWT.\n\n\n        It will also invalidate an Authentication Token by default (so it can only be exchanged once).\n      operationId: PostAuthenticationTokenExchange\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CustomerJWT\"\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerJWT\"\n          description: Authentication Token exchanged for JWT.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      security:\n        - SecretApiKey: []\n        - JWT: []\n        - PublishableApiKey: []\n      summary: Exchange\n      tags:\n        - Customer Authentication\n      x-sdk-operation-name: exchangeToken\n  /bank-accounts:\n    get:\n      description: |\n        Retrieve a list of Bank Accounts.\n      operationId: GetBankAccountCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionQuery\"\n        - $ref: \"#/components/parameters/collectionSort\"\n        - $ref: \"#/components/parameters/collectionFilter\"\n        - $ref: \"#/components/parameters/collectionExpand\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/BankAccount\"\n                type: array\n          description: A list of Bank Accounts was retrieved successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Retrieve a list of bank accounts\n      tags:\n        - Bank Accounts\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $bankAccounts = $client-\u0026gt;bankAccounts()-\u0026gt;search([\n                'filter' =\u0026gt; 'customerId:testId',\n            ]);\n        - lang: JavaScript\n          source: \u003e-\n            // all parameters are optional\n\n            const firstCollection = await api.bankAccounts.getAll();\n\n\n            // alternatively you can specify one or more of them\n\n            const params = {limit: 20, offset: 100, sort: '-createdTime'}; \n\n            const secondCollection = await api.bankAccounts.getAll(params);\n\n\n            // access the collection items, each item is a Member\n\n            secondCollection.items.forEach(bankAccount =\u0026gt; console.log(bankAccount.fields.status));\n      x-sdk-operation-name: getAll\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Create a Bank Account.\n      operationId: PostBankAccount\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: \"#/components/schemas/BankAccountCreateToken\"\n                - $ref: \"#/components/schemas/BankAccountCreatePlain\"\n        description: BankAccount resource.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BankAccount\"\n          description: Bank Account was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create a Bank Account\n      tags:\n        - Bank Accounts\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $bankAccountForm = new Rebilly\\Entities\\BankAccount();\n\n            $bankAccountForm-\u0026gt;setCustomerId('customerId');\n\n            $bankAccountForm-\u0026gt;setRoutingNumber('0123456');\n\n            $bankAccountForm-\u0026gt;setAccountNumber('0123456');\n\n            $bankAccountForm-\u0026gt;setAccountType('checking');\n\n            $bankAccountForm-\u0026gt;setBillingAddress([\n                'firstName' =\u0026gt; 'John',\n                'lastName' =\u0026gt; 'Doe',\n                'organization' =\u0026gt; 'Test LTD',\n                'address' =\u0026gt; 'Test street 5',\n                'address2' =\u0026gt; 'Test house 5',\n                'city' =\u0026gt; 'New York',\n                'region' =\u0026gt; 'Long Island',\n                'country' =\u0026gt; 'US',\n                'postalCode' =\u0026gt; '123456',\n                'emails' =\u0026gt; [\n                    [\n                        'label' =\u0026gt; 'main',\n                        'value' =\u0026gt; 'johndoe@testemail.com',\n                        'primary' =\u0026gt; true,\n                    ],\n                    [\n                        'label' =\u0026gt; 'secondary',\n                        'value' =\u0026gt; 'otheremail@testemail.com',\n                    ],\n                ],\n                'phoneNumbers' =\u0026gt; [\n                    [\n                        'label' =\u0026gt; 'work',\n                        'value' =\u0026gt; '+123456789',\n                        'primary' =\u0026gt; true,\n                    ],\n                    [\n                        'label' =\u0026gt; 'home',\n                        'value' =\u0026gt; '+9874654321',\n                    ],\n                ],\n            ]);\n\n\n            try {\n                $bankAccount = $client-\u0026gt;bankAccounts()-\u0026gt;create($bankAccountForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: \u003e-\n            // first set the required properties for the new bank account\n\n            const data = {\n                bankName: 'My Fake Financial',\n                routingNumber: '12345678',\n                accountNumber: '12345678',\n                accountType: 'checking',\n                customerId: 'acme-001'\n            };\n\n\n            // the ID is optional\n\n            const firstKey = await api.bankAccounts.create({data});\n\n\n            // or you can provide one\n\n            const secondKey = await api.bankAccounts.create({id: 'my-second-id', data});\n      x-sdk-operation-name: create\n  \"/bank-accounts/{id}\":\n    get:\n      description: |\n        Retrieve a Bank Account with specified identifier string.\n      operationId: GetBankAccount\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BankAccount\"\n          description: Bank Account was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a Bank Account\n      tags:\n        - Bank Accounts\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $bankAccount = $client-\u0026gt;bankAccounts()-\u0026gt;load('bankAccountId');\n        - lang: JavaScript\n          source: |-\n            const bankAccount = await api.bankAccounts.get({id: 'foobar-001'});\n            console.log(bankAccount.fields.status);\n      x-sdk-operation-name: get\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    patch:\n      description: \u003e\n        Update bank account's values except for the account number and\n        routing. number.\n      operationId: PatchBankAccount\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BankAccountUpdatePlain\"\n        description: Bank Account.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BankAccount\"\n          description: Bank Account was updated.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Update a bank account's values\n      tags:\n        - Bank Accounts\n      x-code-samples:\n        - lang: JavaScript\n          source: |\n            // properties to be updated\n            const data = {\n                bankName: 'Your Fake Financial',\n                accountType: 'savings',\n                billingAddress: {\n                    firstName: 'John'\n                }\n            };\n\n            api.bankAccounts.patch({id: 'id-to-update', data});\n      x-sdk-operation-name: patch\n    put:\n      description: |\n        Create or update a BankAccount with predefined identifier string.\n      operationId: PutBankAccount\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: \"#/components/schemas/BankAccountCreateToken\"\n                - $ref: \"#/components/schemas/BankAccountCreatePlain\"\n        description: BankAccount resource.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BankAccount\"\n          description: BankAccount was updated.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BankAccount\"\n          description: BankAccount was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create a Bank Account with predefined ID\n      tags:\n        - Bank Accounts\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $bankAccountForm = new Rebilly\\Entities\\BankAccount();\n\n            $bankAccountForm-\u0026gt;setCustomerId('customerId');\n\n            $bankAccountForm-\u0026gt;setRoutingNumber('0123456');\n\n            $bankAccountForm-\u0026gt;setAccountNumber('0123456');\n\n            $bankAccountForm-\u0026gt;setAccountType('checking');\n\n            $bankAccountForm-\u0026gt;setBillingAddress([\n                'firstName' =\u0026gt; 'John',\n                'lastName' =\u0026gt; 'Doe',\n                'organization' =\u0026gt; 'Test LTD',\n                'address' =\u0026gt; 'Test street 5',\n                'address2' =\u0026gt; 'Test house 5',\n                'city' =\u0026gt; 'New York',\n                'region' =\u0026gt; 'Long Island',\n                'country' =\u0026gt; 'US',\n                'postalCode' =\u0026gt; '123456',\n                'emails' =\u0026gt; [\n                    [\n                        'label' =\u0026gt; 'main',\n                        'value' =\u0026gt; 'johndoe@testemail.com',\n                        'primary' =\u0026gt; true,\n                    ],\n                    [\n                        'label' =\u0026gt; 'secondary',\n                        'value' =\u0026gt; 'otheremail@testemail.com',\n                    ],\n                ],\n                'phoneNumbers' =\u0026gt; [\n                    [\n                        'label' =\u0026gt; 'work',\n                        'value' =\u0026gt; '+123456789',\n                        'primary' =\u0026gt; true,\n                    ],\n                    [\n                        'label' =\u0026gt; 'home',\n                        'value' =\u0026gt; '+9874654321',\n                    ],\n                ],\n            ]);\n\n\n            try {\n                $bankAccount = $client-\u0026gt;customers()-\u0026gt;create($bankAccountForm, 'bankAccountId');\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: \u003e-\n            // first set the required properties for the new bank account\n\n            const data = {\n                bankName: 'My Fake Financial',\n                routingNumber: '12345678',\n                accountNumber: '12345678',\n                accountType: 'checking',\n                customerId: 'acme-001'\n            };\n\n\n            // the ID is optional\n\n            const firstKey = await api.bankAccounts.create({data});\n\n\n            // or you can provide one\n\n            const secondKey = await api.bankAccounts.create({id: 'my-second-id', data});\n      x-sdk-operation-name: update\n  \"/bank-accounts/{id}/deactivation\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Deactivate a Bank Account.\n      operationId: PostBankAccountDeactivation\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BankAccount\"\n          description: Bank Account was deactivated.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n      summary: Deactivate a Bank Account\n      tags:\n        - Bank Accounts\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $bankAccount =\n            $client-\u0026gt;bankAccounts()-\u0026gt;deactivate('bankAccountId');\n        - lang: JavaScript\n          source: \u003e-\n            const bankAccount = await api.bankAccounts.deactivate({id:\n            'id-to-deactivate'});\n\n\n            // the bank account status will be updated to reflect the modification\n\n            console.log(bankAccount.fields.status);\n      x-sdk-operation-name: deactivate\n  /blocklists:\n    get:\n      description: |\n        Retrieve a list of blocklists.\n      operationId: GetBlocklistCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionSort\"\n        - $ref: \"#/components/parameters/collectionFilter\"\n        - $ref: \"#/components/parameters/collectionQuery\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Blocklist\"\n                type: array\n          description: A list of Blocklists was retrieved successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Retrieve a list of blocklists\n      tags:\n        - Blocklists\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $blocklists = $client-\u0026gt;blocklists()-\u0026gt;search([\n                'filter' =\u0026gt; 'value:testValue',\n            ]);\n        - lang: JavaScript\n          source: \u003e\n            // all parameters are optional\n\n            const firstCollection = await api.blocklists.getAll();\n\n\n            // alternatively you can specify one or more of them\n\n            const params = {limit: 20, offset: 100, sort: '-createdTime'};\n\n            const secondCollection = await api.blocklists.getAll(params);\n\n\n            // access the collection items, each item is a Member\n\n            secondCollection.items.forEach(blocklistItem =\u0026gt; console.log(blocklistItem.fields.status));\n      x-sdk-operation-name: getAll\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Create a blocklist.\n      operationId: PostBlocklist\n      requestBody:\n        $ref: \"#/components/requestBodies/Blocklist\"\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Blocklist\"\n          description: Blocklist was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create a blocklist\n      tags:\n        - Blocklists\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $blocklistForm = new Rebilly\\Entities\\Blocklist();\n\n            $blocklistForm-\u0026gt;setType($blocklistForm::TYPE_EMAIL);\n\n            $blocklistForm-\u0026gt;setValue('test@test.com');\n\n            $blocklistForm-\u0026gt;setExpiredTime('2025-01-01 05:00:00');\n\n\n            try {\n                $blocklist = $client-\u0026gt;blocklists()-\u0026gt;create($blocklistForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: \u003e\n            // first set the required properties for the new blocklist item\n\n            const data = {\n                type: 'ip-address',\n                value: '63.118.98.100'\n\n                // optionally provide an `expirationTime` to make\n                // the item expire and function like a `greylist`\n\n                // expirationTime: '2017-09-18T21:50:44Z'\n            };\n\n\n            // the ID is optional\n\n            const firstKey = await api.blocklists.create({data});\n\n\n            // or you can provide one\n\n            const secondKey = await api.blocklists.create({id: 'my-second-id', data});\n      x-sdk-operation-name: create\n  \"/blocklists/{id}\":\n    delete:\n      description: |\n        Delete a blocklist with predefined identifier string.\n      operationId: DeleteBlocklist\n      responses:\n        \"204\":\n          description: Blocklist was deleted.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Delete a blocklist\n      tags:\n        - Blocklists\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $client-\u0026gt;blocklists()-\u0026gt;delete('blocklistId');\n        - lang: JavaScript\n          source: |\n            const request = await api.blocklists.delete({id: 'my-second-key'});\n\n            // the request does not return any fields but\n            // you can confirm the success using the status code\n            console.log(request.response.status); // 204\n      x-sdk-operation-name: delete\n    get:\n      description: |\n        Retrieve a blocklist with specified identifier string.\n      operationId: GetBlocklist\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Blocklist\"\n          description: Blocklist was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a blocklist\n      tags:\n        - Blocklists\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $blocklist = $client-\u0026gt;blocklists()-\u0026gt;load('blocklistId');\n        - lang: JavaScript\n          source: |\n            const blocklistItem = await api.blocklists.get({id: 'foobar-001'});\n            console.log(blocklistItem.fields.status);\n      x-sdk-operation-name: get\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    put:\n      description: |\n        Create a blocklist with predefined identifier string.\n      operationId: PutBlocklist\n      requestBody:\n        $ref: \"#/components/requestBodies/Blocklist\"\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Blocklist\"\n          description: Blocklist was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Blocklist exist and cannot be updated.\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create a blocklist with predefined ID\n      tags:\n        - Blocklists\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $blocklistForm = new Rebilly\\Entities\\Blocklist();\n\n            $blocklistForm-\u0026gt;setType($blocklistForm::TYPE_EMAIL);\n\n            $blocklistForm-\u0026gt;setValue('test@test.com');\n\n            $blocklistForm-\u0026gt;setExpiredTime('2025-01-01 05:00:00');\n\n\n            try {\n                $blocklist = $client-\u0026gt;blocklists()-\u0026gt;create($blocklistForm, 'blocklistId');\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: \u003e\n            // first set the required properties for the new blocklist item\n\n            const data = {\n                type: 'ip-address',\n                value: '63.118.98.100'\n\n                // optionally provide an `expirationTime` to make\n                // the item expire and function like a `greylist`\n\n                // expirationTime: '2017-09-18T21:50:44Z'\n            };\n\n\n            // the ID is optional\n\n            const firstKey = await api.blocklists.create({data});\n\n\n            // or you can provide one\n\n            const secondKey = await api.blocklists.create({id: 'my-second-id', data});\n      x-sdk-operation-name: update\n  /coupons:\n    get:\n      description: |\n        Retrieve a list of coupons.\n      operationId: GetCouponCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionFilter\"\n        - $ref: \"#/components/parameters/collectionQuery\"\n        - $ref: \"#/components/parameters/collectionSort\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Coupon\"\n                type: array\n          description: A list of coupons was retrieved successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Retrieve a list of coupons\n      tags:\n        - Coupons\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $coupons = $client-\u0026gt;coupons()-\u0026gt;search([\n                'filter' =\u0026gt; 'status:issued',\n            ]);\n        - lang: JavaScript\n          source: \u003e-\n            // all parameters are optional\n\n            const firstCollection = await api.coupons.getAll();\n\n\n            // alternatively you can specify one or more of them\n\n            const params = {limit: 20, offset: 100, sort: '-createdTime'}; \n\n            const secondCollection = await api.coupons.getAll(params);\n\n\n            // access the collection items, each item is a Member\n\n            secondCollection.items.forEach(coupon =\u0026gt; console.log(coupon.fields.status));\n      x-sdk-operation-name: getAll\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Create a coupon.\n      operationId: PostCoupon\n      requestBody:\n        $ref: \"#/components/requestBodies/Coupon\"\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Coupon\"\n          description: Coupon was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create a coupon\n      tags:\n        - Coupons\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $couponForm = new Rebilly\\Entities\\Coupons\\Coupon();\n\n\n            $discountArray = [\n                'currency' =\u0026gt; 'USD',\n                'amount' =\u0026gt; 1.99,\n            ];\n\n\n            $discountForm = new \\Rebilly\\Entities\\Coupons\\Discounts\\Fixed($discountArray);\n\n            $couponForm-\u0026gt;setDiscount($discountForm);\n\n            // Coupon can be used right now\n\n            $couponForm-\u0026gt;setIssuedTime(date('Y-m-d H:i:s'));\n\n\n            $restrictionArray = [\n                'quantity' =\u0026gt; 2,\n            ];\n\n\n            $restrictionForm = new Rebilly\\Entities\\Coupons\\Restrictions\\DiscountsPerRedemption($restrictionArray);\n\n\n            $couponForm-\u0026gt;setRestrictions([$restrictionForm]);\n\n\n            try {\n                $coupon = $client-\u0026gt;coupons()-\u0026gt;create($couponForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: \u003e\n            // first set the required properties for the new coupon\n\n            const data = {\n                description: 'a new coupon',\n                issuedTime: '2017-09-19T20:46:44Z',\n                discount: {\n                    type: 'percent',\n                    value: 12\n                },\n                restrictions: [{\n                    type: 'discounts-per-redemption',\n                    quantity: 12\n                }]\n            };\n\n\n            // the ID is optional\n\n            const firstKey = await api.coupons.create({data});\n\n\n            // or you can provide one\n\n            const secondKey = await api.coupons.create({id: 'my-second-id', data});\n      x-sdk-operation-name: create\n  /coupons-redemptions:\n    get:\n      operationId: GetCouponRedemptionCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionFilter\"\n        - $ref: \"#/components/parameters/collectionQuery\"\n        - $ref: \"#/components/parameters/collectionSort\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CouponRedemption\"\n                type: array\n          description: Coupons redemptions were retrieved successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Retrieve a list of coupon redemptions\n      tags:\n        - Coupons\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $couponRedemptions = $client-\u0026gt;couponsRedemptions()-\u0026gt;search([\n                'filter' =\u0026gt; 'customerId:testCustomer',\n            ]);\n        - lang: JavaScript\n          source: \u003e-\n            // all parameters are optional\n\n            const firstCollection = await api.coupons.getAllRedemptions();\n\n\n            // alternatively you can specify one or more of them\n\n            const params = {limit: 20, offset: 100, sort: '-createdTime'}; \n\n            const secondCollection = await api.coupons.getAllRedemptions(params);\n\n\n            // access the collection items, each item is a Member\n\n            secondCollection.items.forEach(coupon =\u0026gt; console.log(coupon.fields.status));\n      x-sdk-operation-name: getAllRedemptions\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Redeem a coupon.\n      operationId: PostCouponRedemption\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CouponRedemption\"\n        description: Redeem a coupon.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CouponRedemption\"\n          description: Coupon was redeemed.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Redeem a coupon\n      tags:\n        - Coupons\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $redemptionForm = new Rebilly\\Entities\\Coupons\\Redemption();\n\n            $redemptionForm-\u0026gt;setCustomerId('customerId');\n\n            $redemptionForm-\u0026gt;setCouponId('couponId');\n\n\n            $restrictionArray = [\n                'type' =\u0026gt; Rebilly\\Entities\\Coupons\\Restriction::TYPE_DISCOUNTS_PER_REDEMPTION,\n                'quantity' =\u0026gt; 2,\n            ];\n\n\n            $restrictionForm = new Rebilly\\Entities\\Coupons\\Restriction([\n                $restrictionArray,\n            ]);\n\n\n            $redemptionForm-\u0026gt;setAdditionalRestrictions($restrictionForm);\n\n\n            try {\n                $couponRedemption = $client-\u0026gt;couponsRedemptions()-\u0026gt;redeem($redemptionForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: |\n            // build the redemption data\n            const data = {\n              couponId: 'my-best-coupon',\n              customerId: 'foobar-001'\n            };\n\n            const redemption = await api.coupons.redeem({data});\n            console.log(redemption.fields.id);\n      x-sdk-operation-name: redeem\n  \"/coupons-redemptions/{id}\":\n    get:\n      operationId: GetCouponRedemption\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CouponRedemption\"\n          description: Retrieve a coupon redemption with specified identifier string.\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a coupon redemption with specified identifier string\n      tags:\n        - Coupons\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $couponRedemption =\n            $client-\u0026gt;couponsRedemptions()-\u0026gt;load('redemptionId');\n        - lang: JavaScript\n          source: \u003e-\n            const redemption = await api.coupons.getRedemption({id: 'foobar-001'});\n\n            console.log(redemption.fields.id);\n      x-sdk-operation-name: getRedemption\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n  \"/coupons-redemptions/{id}/cancel\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      operationId: PostCouponRedemptionCancellation\n      responses:\n        \"201\":\n          description: Cancel a coupon redemption.\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Cancel a coupon redemption\n      tags:\n        - Coupons\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $client-\u0026gt;couponsRedemptions()-\u0026gt;cancel('id');\n        - lang: JavaScript\n          source: \u003e-\n            const cancellation = await api.coupons.cancelRedemption({id:\n            'foobar-001'});\n\n\n            // the request does not return any fields but\n\n            // you can confirm the success using the status code\n\n            console.log(cancellation.response.status); // 201\n      x-sdk-operation-name: cancelRedemption\n  \"/coupons/{id}\":\n    get:\n      description: |\n        Retrieve a coupon with specified coupon ID string.\n      operationId: GetCoupon\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Coupon\"\n          description: Coupon was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a coupon\n      tags:\n        - Coupons\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $coupon = $client-\u0026gt;coupons()-\u0026gt;load('couponId');\n        - lang: JavaScript\n          source: |\n            const coupon = await api.coupons.get({couponId: 'foobar-001'});\n            console.log(coupon.fields.status);\n      x-sdk-operation-name: get\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    put:\n      description: |\n        Create or update a coupon with predefined coupon ID.\n      operationId: PutCoupon\n      requestBody:\n        $ref: \"#/components/requestBodies/Coupon\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Coupon\"\n          description: Coupon was updated.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Coupon\"\n          description: Coupon was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create or update a coupon with predefined coupon ID\n      tags:\n        - Coupons\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $couponForm = new Rebilly\\Entities\\Coupons\\Coupon();\n\n\n            $discountArray = [\n                'type' =\u0026gt; Rebilly\\Entities\\Coupons\\Discount::TYPE_FIXED,\n                'currency' =\u0026gt; 'USD',\n                'amount' =\u0026gt; 1.99,\n            ];\n\n\n            $discountForm = new Rebilly\\Entities\\Coupons\\Discount($discountArray);\n\n            $couponForm-\u0026gt;setDiscount($discountForm);\n\n\n            $restrictionArray = [\n                'type' =\u0026gt; Rebilly\\Entities\\Coupons\\Restriction::TYPE_DISCOUNTS_PER_REDEMPTION,\n                'quantity' =\u0026gt; 2,\n            ];\n\n\n            $restrictionForm = new Rebilly\\Entities\\Coupons\\Restriction([\n                $restrictionArray,\n            ]);\n\n\n            $couponForm-\u0026gt;setRestrictions($restrictionForm);\n\n\n            try {\n                $coupon = $client-\u0026gt;coupons()-\u0026gt;create($couponForm, 'couponId');\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: \u003e\n            // creating a coupon\n\n            const data = {\n                description: 'a new coupon',\n                issuedTime: '2017-09-19T20:46:44Z',\n                discount: {\n                    type: 'percent',\n                    value: 12\n                },\n                restrictions: [{\n                    type: 'discounts-per-redemption',\n                    quantity: 12\n                }]\n            };\n\n\n            // the ID is optional\n\n            const firstKey = await api.coupons.create({data});\n\n\n            // or you can provide one\n\n            const secondKey = await api.coupons.create({id: 'my-second-id', data});\n\n\n\n            // updating a coupon\n\n            const data = {\n                description: 'a small update'\n            };\n\n\n            const coupon = await api.coupons.update({id: 'my-second-id', data});\n      x-sdk-operation-name: update\n  \"/coupons/{id}/expiration\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Set a coupon's expiry time with the specified coupon ID.\n        The expiredTime of a coupon must be greater than its issuedTime.\n        This cannot be performed on expired coupons.\n      operationId: PostCouponExpiration\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CouponExpiration\"\n        description: Coupon resource.\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Coupon\"\n          description: Coupon expiration was successfully set.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: The coupon is already expired and has been redeemed, unable to.\n            reschedule expiration.\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Set a coupon's expiration time\n      tags:\n        - Coupons\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e\n            const data = {\n                expiredTime: \"2020-05-25T18:51:14Z\"\n            }\n\n\n            const coupon = await api.coupons.setExpiration({id: 'my-second-id', data});\n      x-sdk-operation-name: setExpiration\n  /credentials:\n    get:\n      description: |\n        Retrieve a list of credentials.\n      operationId: GetCredentialCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Credential\"\n                type: array\n          description: A list of Credentials was retrieved successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Retrieve a list of credentials\n      tags:\n        - Customer Authentication\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $customerCredentials = $client-\u0026gt;customerCredentials()-\u0026gt;search([\n                'filter' =\u0026gt; 'customerId:testCustomer',\n            ]);\n        - lang: JavaScript\n          source: \u003e-\n            // all parameters are optional\n\n            const firstCollection = await api.customerAuthentication.getAllCredentials();\n\n\n            // alternatively you can specify one or more of them\n\n            const params = {limit: 20, offset: 100}; \n\n            const secondCollection = await api.customerAuthentication.getAllCredentials(params);\n\n\n            // access the collection items, each item is a Member\n\n            secondCollection.items.forEach(credential =\u0026gt; console.log(credential.fields.customerId));\n      x-sdk-operation-name: getAllCredentials\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Create a credential.\n      operationId: PostCredential\n      requestBody:\n        $ref: \"#/components/requestBodies/Credential\"\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Credential\"\n          description: Credential was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create a credential\n      tags:\n        - Customer Authentication\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $customerCredentialForm = new Rebilly\\Entities\\CustomerCredential();\n\n            $customerCredentialForm-\u0026gt;setCustomerId('customerId');\n\n            $customerCredentialForm-\u0026gt;setUsername('test');\n\n            $customerCredentialForm-\u0026gt;setPassword('1234');\n\n\n            try {\n                $customerCredential = $client-\u0026gt;customerCredentials()-\u0026gt;create($customerCredentialForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: \u003e-\n            // first set the required properties for the new credential\n\n            const data = {\n                username: 'foobar',\n                password: 'fuubar',\n                customerId: 'foobar-0001'\n\n                // optionally you can define an `expiredTime` to \n                // limit the duration of the credential\n\n                //expiredTime: '2017-09-18T19:17:39Z'\n            };\n\n\n            // the ID is optional\n\n            const firstCredential = await api.customerAuthentication.createCredential({data});\n\n\n            // or you can provide one\n\n            const secondCredential = await api.customerAuthentication.createCredential({id: 'my-second-id', data});\n      x-sdk-operation-name: createCredential\n  \"/credentials/{id}\":\n    delete:\n      description: |\n        Delete a credential with predefined identifier string.\n      operationId: DeleteCredential\n      responses:\n        \"204\":\n          description: Credential was deleted.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Delete a credential\n      tags:\n        - Customer Authentication\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $client-\u0026gt;customerCredentials()-\u0026gt;delete('credentialId');\n        - lang: JavaScript\n          source: \u003e-\n            const request = await api.customerAuthentication.deleteCredential({id:\n            'my-second-key'});\n\n\n            // the request does not return any fields but\n\n            // you can confirm the success using the status code\n\n            console.log(request.response.status); // 204\n      x-sdk-operation-name: deleteCredential\n    get:\n      description: |\n        Retrieve a credential with specified identifier string.\n      operationId: GetCredential\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Credential\"\n          description: Credential was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a credential\n      tags:\n        - Customer Authentication\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $customerCredential =\n            $client-\u0026gt;customerCredentials()-\u0026gt;load('credentialId');\n        - lang: JavaScript\n          source: \u003e-\n            const credential = await api.customerAuthentication.getCredential({id:\n            'my-first-id'});\n\n            console.log(credential.fields.customerId);\n      x-sdk-operation-name: getCredential\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    put:\n      description: |\n        Create or update a credential with predefined identifier string.\n      operationId: PutCredential\n      requestBody:\n        $ref: \"#/components/requestBodies/Credential\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Credential\"\n          description: Credential was updated.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Credential\"\n          description: Credential was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create or update a credential with predefined ID\n      tags:\n        - Customer Authentication\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $customerCredentialForm = new Rebilly\\Entities\\CustomerCredential();\n\n            $customerCredentialForm-\u0026gt;setCustomerId('customerId');\n\n            $customerCredentialForm-\u0026gt;setUsername('test');\n\n            $customerCredentialForm-\u0026gt;setPassword('1234');\n\n\n            try {\n                $customerCredential = $client-\u0026gt;customerCredentials()-\u0026gt;update('credentialId', $customerCredentialForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: \u003e-\n            // creating a new credential\n\n            const data = {\n                username: 'foobar',\n                password: 'fuubar',\n                customerId: 'foobar-0001'\n\n                // optionally you can define an `expiredTime` to \n                // limit the duration of the credential\n\n                //expiredTime: '2017-09-18T19:17:39Z'\n            };\n\n\n            // the ID is optional\n\n            const firstCredential = await api.customerAuthentication.createCredential({data});\n\n\n            // or you can provide one\n\n            const secondCredential = await api.customerAuthentication.createCredential({id: 'my-second-id', data});\n\n\n\n\n\n            // updating a credential\n\n            const data = {\n                username: 'foobar',\n                password: 'hell0'\n            };\n\n\n            const secondCredential = await api.customerAuthentication.updateCredential({id: 'my-second-id', data});\n      x-sdk-operation-name: updateCredential\n  \"/custom-fields/{resource}\":\n    get:\n      description: |\n        Retrieve a schema of Custom Fields for the given resource type.\n      operationId: GetCustomFieldCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                description: The list of custom fields.\n                items:\n                  $ref: \"#/components/schemas/CustomField\"\n                type: array\n          description: A schema of Custom Fields was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Retrieve Custom Fields\n      tags:\n        - Custom Fields\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $customFields = $client-\u0026gt;customFields()-\u0026gt;search('customers', [\n                'filter' =\u0026gt; 'type:boolean',\n            ]);\n        - lang: JavaScript\n          source: \u003e-\n            // all parameters except `resource` are optional\n\n            const firstCollection = await api.customFields.getAll({resource: 'customers'});\n\n\n            // alternatively you can specify one or more of them\n\n            const params = {resource: 'customers', limit: 20, offset: 100}; \n\n            const secondCollection = await api.customFields.getAll(params);\n\n\n            // access the collection items, each item is a Member\n\n            secondCollection.items.forEach(customField =\u0026gt; console.log(customField.fields.description));\n      x-sdk-operation-name: getAll\n    parameters:\n      - $ref: \"#/components/parameters/customFieldResource\"\n      - $ref: \"#/components/parameters/organizationId\"\n  \"/custom-fields/{resource}/{name}\":\n    get:\n      description: |\n        Retrieve a schema of the given Custom Field for the given resource type.\n      operationId: GetCustomField\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomField\"\n          description: A schema of the Custom Field was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a Custom Field\n      tags:\n        - Custom Fields\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $customField = $client-\u0026gt;customFields()-\u0026gt;load('customers',\n            'testFieldName');\n        - lang: JavaScript\n          source: \u003e-\n            const customField = await api.customFields.get({resource: 'customers',\n            name: 'dob'});\n\n            console.log(customField.fields.description);\n      x-sdk-operation-name: get\n    parameters:\n      - $ref: \"#/components/parameters/customFieldResource\"\n      - description: The custom field's identifier string.\n        in: path\n        name: name\n        required: true\n        schema:\n          maxLength: 60\n          pattern: ^[\\w-]+$\n          type: string\n      - $ref: \"#/components/parameters/organizationId\"\n    put:\n      description: \u003e\n        Create or alter a schema of the given Custom Field for the given\n        resource. type.\n      operationId: PutCustomField\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CustomField\"\n        description: Custom Fields schema of the given resource type.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomField\"\n          description: The Custom Field was updated.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomField\"\n          description: The Custom Fields was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: \u003e\n            The schema is in use: remove all the associated data in order to\n            remove or alter the schema.\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create or alter a Custom Field\n      tags:\n        - Custom Fields\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $customFieldForm = new Rebilly\\Entities\\CustomField();\n\n            $customFieldForm-\u0026gt;setType($customFieldForm::TYPE_BOOLEAN);\n\n\n            try {\n                $customField = $client-\u0026gt;customFields()-\u0026gt;update('customers', 'testFieldName', $customFieldForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: |\n            // creating a custom field\n            const data = {\n                name: 'Date of Birth',\n                type: 'date',\n                description: `The customer's date of birth`\n            };\n\n            // define the entire payload\n            const params = {resource: 'customers', name: 'dob', data};\n\n            // create the custom field\n            const customField = await api.customFields.create(params);\n\n            // or update the custom field\n            const customField = await api.customFields.update(params);\n\n            // you can verify if the custom field is used\n            console.log(customField.fields.isUsed);\n      x-sdk-operation-name: create\n  /customer-timeline-custom-events:\n    get:\n      description: |\n        Retrieve a list of customer timeline custom event types.\n      operationId: GetCustomerTimelineCustomEventTypeCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionFilter\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CustomerTimelineCustomEvent\"\n                type: array\n          description: A list of customer timeline custom event types was retrieved\n            successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Retrieve a list of customer timeline custom event types\n      tags:\n        - Customers Timeline\n      x-sdk-operation-name: getAll\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Create Customer Timeline custom event type.\n      operationId: PostCustomerTimelineCustomEventType\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CustomerTimelineCustomEvent\"\n        description: Customer Timeline Custom Event Type resource.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerTimelineCustomEvent\"\n          description: Customer Timeline Custom Event Type was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create Customer Timeline custom event type\n      tags:\n        - Customers\n      x-sdk-operation-name: create\n  \"/customer-timeline-custom-events/{id}\":\n    get:\n      description: |\n        Retrieve customer timeline custom event type.\n      operationId: GetCustomerTimelineCustomEventType\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerTimelineCustomEvent\"\n          description: Customer Timeline custom event type was retrieved successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Retrieve customer timeline custom event type with specified identifier\n        string\n      tags:\n        - Customers Timeline\n      x-sdk-operation-name: get\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n  /customer-timeline-events:\n    get:\n      description: |\n        Retrieve a list of customer timeline messages for all customers.\n      operationId: GetCustomerTimelineEventCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionFilter\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CustomerTimeline\"\n                type: array\n          description: A list of customer timeline messages was retrieved successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Retrieve a list of customer timeline messages for all customers\n      tags:\n        - Customers Timeline\n      x-sdk-operation-name: getCustomerTimelineMessages\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n  /customers:\n    get:\n      description: |\n        Retrieve a list of customers.\n      operationId: GetCustomerCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionFilter\"\n        - $ref: \"#/components/parameters/collectionQuery\"\n        - $ref: \"#/components/parameters/collectionExpand\"\n        - $ref: \"#/components/parameters/collectionFields\"\n        - $ref: \"#/components/parameters/collectionSort\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Customer\"\n                type: array\n          description: A list of Customers was retrieved successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Retrieve a list of customers\n      tags:\n        - Customers\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $customers = $client-\u0026gt;customers()-\u0026gt;search([\n                'filter' =\u0026gt; 'firstName:John',\n            ]);\n        - lang: JavaScript\n          source: \u003e-\n            // all parameters are optional\n\n            const firstCollection = await api.customers.getAll();\n\n\n            // alternatively you can specify one or more of them\n\n            const params = {limit: 20, offset: 100, sort: '-createdTime'}; \n\n            const secondCollection = await api.customers.getAll(params);\n\n\n            // access the collection items, each item is a Member\n\n            secondCollection.items.forEach(customer =\u0026gt; console.log(customer.fields.primaryAddress.firstName));\n\n\n\n\n            // alternatively you can get the collection as a CSV\n\n\n            // all parameters are optional\n\n            const firstFile = await api.customers.downloadCSV();\n\n\n            // alternatively you can specify one or more of them\n\n            const params = {limit: 20, offset: 100, sort: '-createdTime'}; \n\n            const secondFile = await api.customers.downloadCSV(params);\n\n\n            // access the file data to view the CSV content \n\n            console.log(secondFile.data);\n      x-sdk-operation-name: getAll\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: \u003e\n        Create a customer without a predefined ID.\n\n        The customer's primary address\n\n        will be used as the default address for payment\n\n        instruments, subscriptions and invoices if none\n\n        are provided.\n\n\n        If you wish to create the customer with a predefined\n\n        ID (which we recommend to prevent duplication), you\n\n        may use our `PUT` request described below.\n\n\n        Read our guide to [preventing duplicates](https://api-guides.rebilly.com/core-concepts/preventing-duplicates)\n\n        to understand more.\n      operationId: PostCustomer\n      requestBody:\n        $ref: \"#/components/requestBodies/Customer\"\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/Customer\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create a customer (without an ID)\n      tags:\n        - Customers\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $customerForm = new Rebilly\\Entities\\Customer();\n            $customerForm-\u0026gt;setPrimaryAddress([\n                'firstName' =\u0026gt; 'John',\n                'lastName' =\u0026gt; 'Doe',\n                'organization' =\u0026gt; 'Test LTD',\n                'address' =\u0026gt; 'Test street 5',\n                'address2' =\u0026gt; 'Test house 5',\n                'city' =\u0026gt; 'New York',\n                'region' =\u0026gt; 'Long Island',\n                'country' =\u0026gt; 'US',\n                'postalCode' =\u0026gt; '123456',\n                'emails' =\u0026gt; [\n                    [\n                        'label' =\u0026gt; 'main',\n                        'value' =\u0026gt; 'johndoe@testemail.com',\n                        'primary' =\u0026gt; true,\n                    ],\n                    [\n                        'label' =\u0026gt; 'secondary',\n                        'value' =\u0026gt; 'otheremail@testemail.com',\n                    ],\n                ],\n                'phoneNumbers' =\u0026gt; [\n                    [\n                        'label' =\u0026gt; 'work',\n                        'value' =\u0026gt; '+123456789',\n                        'primary' =\u0026gt; true,\n                    ],\n                    [\n                        'label' =\u0026gt; 'home',\n                        'value' =\u0026gt; '+9874654321',\n                    ],\n                ],\n            ]);\n\n            try {\n                $customer = $client-\u0026gt;customers()-\u0026gt;create($customerForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: \u003e-\n            // first set the properties for the new customer\n\n            const data = {\n                primaryAddress: {\n                    firstName: 'John',\n                    lastName: 'Doe',\n                    emails: [{\n                        label: 'main',\n                        value: 'john.doe+test@grr.la',\n                        primary: true\n                    }],\n                }\n            };\n\n\n            // the ID is optional\n\n            const firstCustomer = await api.customers.create({data});\n\n\n            // or you can provide one\n\n            const secondCustomer = await api.customers.create({id: 'my-second-id', data});\n      x-sdk-operation-name: create\n  \"/customers/{id}\":\n    delete:\n      description: Merge one duplicate customer to another target customer and delete\n        the. former.\n      operationId: DeleteCustomer\n      parameters:\n        - description: The customer identifier to get the data of the deleted duplicate\n            customer.\n          in: query\n          name: targetCustomerId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Customer has been merged and removed.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Merge and delete a customer\n      tags:\n        - Customers\n      x-sdk-operation-name: merge\n    get:\n      description: |\n        Retrieve a customer with specified identifier string.\n      operationId: GetCustomer\n      parameters:\n        - $ref: \"#/components/parameters/collectionExpand\"\n        - $ref: \"#/components/parameters/collectionFields\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Customer\"\n          description: Customer was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a customer\n      tags:\n        - Customers\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $customers = $client-\u0026gt;customers()-\u0026gt;load('myCustomerId');\n        - lang: JavaScript\n          source: |-\n            const customer = await api.customers.get({id: 'foobar-001'});\n            console.log(customer.fields.primaryAddress.firstName);\n      x-sdk-operation-name: get\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    put:\n      description: \u003e\n        Create or update (upsert) a customer with predefined identifier\n        string.\n\n        Read our guide to [preventing duplicates](https://api-guides.rebilly.com/core-concepts/preventing-duplicates)\n\n        to understand more.\n      operationId: PutCustomer\n      requestBody:\n        $ref: \"#/components/requestBodies/Customer\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/Customer\"\n        \"201\":\n          $ref: \"#/components/responses/Customer\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Upsert a customer with predefined ID\n      tags:\n        - Customers\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $customerForm = new Rebilly\\Entities\\Customer();\n\n            $customerForm-\u0026gt;setPrimaryAddress([\n                'firstName' =\u0026gt; 'John',\n                'lastName' =\u0026gt; 'Doe',\n                'organization' =\u0026gt; 'Test LTD',\n                'address' =\u0026gt; 'Test street 5',\n                'address2' =\u0026gt; 'Test house 5',\n                'city' =\u0026gt; 'New York',\n                'region' =\u0026gt; 'Long Island',\n                'country' =\u0026gt; 'US',\n                'postalCode' =\u0026gt; '123456',\n                'emails' =\u0026gt; [\n                    [\n                        'label' =\u0026gt; 'main',\n                        'value' =\u0026gt; 'johndoe@testemail.com',\n                        'primary' =\u0026gt; true,\n                    ],\n                    [\n                        'label' =\u0026gt; 'secondary',\n                        'value' =\u0026gt; 'otheremail@testemail.com',\n                    ],\n                ],\n                'phoneNumbers' =\u0026gt; [\n                    [\n                        'label' =\u0026gt; 'work',\n                        'value' =\u0026gt; '+123456789',\n                        'primary' =\u0026gt; true,\n                    ],\n                    [\n                        'label' =\u0026gt; 'home',\n                        'value' =\u0026gt; '+9874654321',\n                    ],\n                ],\n            ]);\n\n\n            try {\n                $customer = $client-\u0026gt;customers()-\u0026gt;update('myCustomerId', $customerForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: \u003e-\n            // creating a customer\n\n            const data = {\n                primaryAddress: {\n                    firstName: 'John',\n                    lastName: 'Doe',\n                    emails: [{\n                        label: 'main',\n                        value: 'john.doe+test@grr.la',\n                        primary: true\n                    }],\n                }\n            };\n\n\n            // the ID is optional\n\n            const firstCustomer = await api.customers.create({data});\n\n\n            // or you can provide one\n\n            const secondCustomer = await api.customers.create({id: 'my-second-id', data});\n\n\n\n\n            // updating a customer\n\n            const data = {\n                primaryAddress: {\n                    firstName: 'Johnny',\n                    lastName: 'Doe',\n                    emails: [{\n                        label: 'main',\n                        value: 'johnny.doe+test@grr.la',\n                        primary: true\n                    }],\n                }\n            };\n\n\n            const customer = await api.customers.update({id: 'my-second-id', data});\n      x-sdk-operation-name: update\n  \"/customers/{id}/lead-source\":\n    delete:\n      description: |\n        Delete a Lead Source that belongs to a certain customer.\n      operationId: DeleteCustomerLeadSource\n      responses:\n        \"204\":\n          description: Lead Source was deleted.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n      summary: Delete a Lead Source for a customer\n      tags:\n        - Customers\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $customer =\n            $client-\u0026gt;customers()-\u0026gt;deleteLeadSource('myCustomerId');\n        - lang: JavaScript\n          source: \u003e-\n            const request = await api.customers.deleteLeadSource({id:\n            'my-second-id'});\n\n\n            // the request does not return any fields but\n\n            // you can confirm the success using the status code\n\n            console.log(request.response.status); // 204\n      x-sdk-operation-name: deleteLeadSource\n    get:\n      description: |\n        Retrieve a Lead Source of given customer.\n      operationId: GetCustomerLeadSource\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LeadSource\"\n          description: Lead Source was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a customer's Lead Source\n      tags:\n        - Customers\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $customer = $client-\u0026gt;customers()-\u0026gt;load('myCustomerId');\n            $leadSource = $customer-\u0026gt;getLeadSource();\n        - lang: JavaScript\n          source: \u003e-\n            const lead = await api.customers.getLeadSource({id: 'my-second-id'});\n\n            console.log(lead.fields.affiliate);\n      x-sdk-operation-name: getLeadSource\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    put:\n      description: |\n        Create a Lead Source for a customer.\n      operationId: PutCustomerLeadSource\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LeadSource\"\n        description: Lead Source resource.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LeadSource\"\n          description: Lead Source was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create a Lead Source for a customer\n      tags:\n        - Customers\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $leadSourceForm = new Rebilly\\Entities\\LeadSource();\n\n            $leadSourceForm-\u0026gt;setSource('TestSource');\n\n            $leadSourceForm-\u0026gt;setCampaign('TestCampaign');\n\n\n            try {\n                $customer = $client-\u0026gt;customers()-\u0026gt;updateLeadSource('myCustomerId', $leadSourceForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: \u003e-\n            // first set the properties for the new lead source\n\n            const data = {\n                medium: 'foobar',\n                source: 'www.google.com',\n                campaign: 'my-first-campaign',\n                term: 'subscriptions',\n                content: 'subscription business',\n                affiliate: 'Acme',\n                subAffiliate: null,\n                salesAgent: null,\n                clickId: null,\n                path: null,\n                ipAddress: '12.34.56.78',\n                currency: 'USD',\n                amount: 0\n            };\n\n\n            const lead = await api.customers.createLeadSource({id: 'my-second-id', data});\n      x-sdk-operation-name: createLeadSource\n  \"/customers/{id}/timeline\":\n    get:\n      description: |\n        Retrieve a list of customer timeline messages.\n      operationId: GetCustomerTimelineCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionFilter\"\n        - $ref: \"#/components/parameters/collectionSort\"\n        - $ref: \"#/components/parameters/collectionQuery\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CustomerTimeline\"\n                type: array\n          description: A list of customer timeline messages was retrieved successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Retrieve a list of customer timeline messages\n      tags:\n        - Customers Timeline\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            // all parameters are optional except for the `id`\n\n            const firstCollection = await api.customers\n                .getAllTimelineMessages({id: 'my-customer'});\n\n            // alternatively you can specify one or more of them\n\n            const params = {id: 'my-customer', limit: 20, offset: 100};\n\n            const secondCollection = await api.customers.getAllTimelineMessages(params);\n\n\n            // access the collection items, each item is a Member\n\n            secondCollection.items\n                .forEach(message =\u0026gt; console.log(message.fields.eventType));\n      x-sdk-operation-name: getAllTimelineMessages\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Create a customer Timeline comment or custom defined event.\n      operationId: PostCustomerTimeline\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CustomerTimeline\"\n        description: Customer Timeline resource.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerTimeline\"\n          description: Customer Timeline comment or custom defined event was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create a customer Timeline comment or custom defined event\n      tags:\n        - Customers Timeline\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            // Create a comment\n\n            const firstComment = await api\n                .customers.createTimelineComment({id: 'my-customer-id', data: {message: 'Your comment here'}});\n\n            // Using params object, mentions and references\n\n            const message = `Example of mentions @user@mydomain.com and references #customers-customer-id`;\n\n            const params = {\n                id: 'my-customer-id',\n                data: {\n                    message,\n                },\n            };\n\n            const secondComment = await api.customers.createTimelineComment(params);\n      x-sdk-operation-name: createTimelineComment\n  \"/customers/{id}/timeline/{messageId}\":\n    delete:\n      description: |\n        Delete a Customer Timeline message with predefined identifier string.\n      operationId: DeleteCustomerTimeline\n      responses:\n        \"204\":\n          description: Customer Timeline message was deleted.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n      summary: Delete a Customer Timeline message\n      tags:\n        - Customers Timeline\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            const request = await api.customers\n                .deleteTimelineMessage({id: 'foobar-001', messageId: 'message-202'});\n\n            // the request does not return any fields but\n\n            // you can confirm the success using the status code\n\n            console.log(request.response.status); // 204\n      x-sdk-operation-name: deleteTimelineMessage\n    get:\n      description: |\n        Retrieve a customer message with specified identifier string.\n      operationId: GetCustomerTimeline\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerTimeline\"\n          description: Customer message was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a customer Timeline message\n      tags:\n        - Customers Timeline\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            const message = await api.customers\n                .getTimelineMessage({id: 'foobar-001', messageId: 'message-202'});\n            console.log(message.fields.eventType);\n      x-sdk-operation-name: getTimelineMessage\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - description: The Customer Timeline message ID.\n        in: path\n        name: messageId\n        required: true\n        schema:\n          type: string\n      - $ref: \"#/components/parameters/organizationId\"\n  \"/customers/{id}/upcoming-invoices\":\n    get:\n      description: \u003e\n        Retrieve a list of upcoming invoices from the subscriptions which\n        belong to. the given customer.\n\n        The endpoint is temporary before upcoming invoices get a complete integration.\n      operationId: GetCustomerUpcomingInvoiceCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionExpand\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Invoice\"\n                type: array\n          description: Upcoming invoices are retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve customer's upcoming invoices\n      tags:\n        - Invoices\n      x-sdk-operation-name: getAllUpcomingInvoices\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n  /digital-wallets/validation:\n    post:\n      description: |\n        [FramePay](https://docs.rebilly.com/docs/developer-docs/framepay/)\n        is the recommended way to use when validating a digital wallet session.\n      operationId: PostDigitalWalletValidation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DigitalWalletValidation\"\n        description: Digital wallet validation request.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DigitalWalletValidation\"\n          description: Digital wallet validation was made.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      security:\n        - PublishableApiKey: []\n        - SecretApiKey: []\n        - JWT: []\n      summary: Validate a digital wallet session\n      tags:\n        - Payment Tokens\n      x-sdk-operation-name: create\n  /disputes:\n    get:\n      description: |\n        Retrieve a list of disputes.\n      operationId: GetDisputeCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionFilter\"\n        - $ref: \"#/components/parameters/collectionSort\"\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionQuery\"\n        - $ref: \"#/components/parameters/collectionExpand\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Dispute\"\n                type: array\n          description: A list of disputes was retrieved successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Retrieve a list of disputes\n      tags:\n        - Disputes\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $disputes = $client-\u0026gt;disputes()-\u0026gt;search([\n                'filter' =\u0026gt; 'transactionId:testId',\n            ]);\n        - lang: JavaScript\n          source: \u003e-\n            // all parameters are optional\n\n            const firstCollection = await api.disputes.getAll();\n\n\n            // alternatively you can specify one or more of them\n\n            const params = {limit: 20, offset: 100, sort: '-createdTime'}; \n\n            const secondCollection = await api.disputes.getAll(params);\n\n\n            // access the collection items, each item is a Member\n\n            secondCollection.items.forEach(dispute =\u0026gt; console.log(dispute.fields.transactionId));\n\n\n\n\n            // alternatively, you can get disputes as a CSV file\n\n            // all parameters are optional\n\n            const firstFile = await api.disputes.downloadCSV();\n\n\n            // alternatively you can specify one or more of them\n\n            const params = {limit: 20, offset: 100, sort: '-createdTime'}; \n\n            const secondFile = await api.disputes.downloadCSV(params);\n\n\n            // access the file data to view the CSV content \n\n            console.log(secondFile.data);\n      x-sdk-operation-name: getAll\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Create a dispute.\n      operationId: PostDispute\n      requestBody:\n        $ref: \"#/components/requestBodies/Dispute\"\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Dispute\"\n          description: Dispute was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create a dispute\n      tags:\n        - Disputes\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $disputeForm = new Rebilly\\Entities\\Dispute();\n            $disputeForm-\u0026gt;setTransactionId('transactionId');\n            $disputeForm-\u0026gt;setCurrency('USD');\n            $disputeForm-\u0026gt;setAmount(10);\n            $disputeForm-\u0026gt;setReasonCode(1000);\n            $disputeForm-\u0026gt;setType($disputeForm::TYPE_1CB);\n            $disputeForm-\u0026gt;setStatus($disputeForm::STATUS_RESPONSE_NEEDED);\n            $disputeForm-\u0026gt;setPostedTime('2025-01-01 05:00:00');\n\n            try {\n                $dispute = $client-\u0026gt;disputes()-\u0026gt;create($disputeForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: \u003e-\n            // first set the properties for the new dispute\n\n            const data = {\n                transactionId: 'my-transaction-id',\n                currency: 'USD',\n                amount: 5,\n                reasonCode: '1000',\n                type: 'first-chargeback',\n                status: 'response-needed',\n                acquirerReferenceNumber: '143543',\n                postedTime: '2017-09-19T20:46:48Z',\n                deadlineTime: '2017-09-19T20:46:48Z'\n            };\n\n\n            // the ID is optional\n\n            const firstdispute = await api.disputes.create({data});\n\n\n            // or you can provide one\n\n            const secondDispute = await api.disputes.create({id: 'my-second-id', data});\n      x-sdk-operation-name: create\n  \"/disputes/{id}\":\n    get:\n      description: |\n        Retrieve a dispute with specified identifier string.\n      operationId: GetDispute\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Dispute\"\n          description: Dispute was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a dispute\n      tags:\n        - Disputes\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $dispute = $client-\u0026gt;disputes()-\u0026gt;load('disputeId');\n        - lang: JavaScript\n          source: |-\n            const dispute = await api.disputes.get({id: 'foobar-001'});\n            console.log(dispute.fields.firstName);\n      x-sdk-operation-name: get\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    put:\n      description: |\n        Create or update a Dispute with predefined identifier string.\n      operationId: PutDispute\n      requestBody:\n        $ref: \"#/components/requestBodies/Dispute\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Dispute\"\n          description: Dispute was updated.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Dispute\"\n          description: Dispute was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create or update a Dispute with predefined ID\n      tags:\n        - Disputes\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $disputeForm = new Rebilly\\Entities\\Dispute();\n\n            $disputeForm-\u0026gt;setTransactionId('transactionId');\n\n            $disputeForm-\u0026gt;setCurrency('USD');\n\n            $disputeForm-\u0026gt;setAmount(10);\n\n            $disputeForm-\u0026gt;setReasonCode(1000);\n\n            $disputeForm-\u0026gt;setType($disputeForm::TYPE_1CB);\n\n            $disputeForm-\u0026gt;setStatus($disputeForm::STATUS_RESPONSE_NEEDED);\n\n            $disputeForm-\u0026gt;setPostedTime('2025-01-01 05:00:00');\n\n\n            try {\n                $dispute = $client-\u0026gt;disputes()-\u0026gt;update('disputeId', $dispute);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: \u003e-\n            // creating a dispute\n\n            const data = {\n                transactionId: 'my-transaction-id',\n                currency: 'USD',\n                amount: 5,\n                reasonCode: '1000',\n                type: 'first-chargeback',\n                status: 'response-needed',\n                acquirerReferenceNumber: '143543',\n                postedTime: '2017-09-19T20:46:48Z',\n                deadlineTime: '2017-09-19T20:46:48Z'\n            };\n\n\n            // the ID is optional\n\n            const firstdispute = await api.disputes.create({data});\n\n\n            // or you can provide one\n\n            const secondDispute = await api.disputes.create({id: 'my-second-id', data});\n\n\n\n\n            // updating a dispute\n\n            const data = {\n                transactionId: 'my-other-transaction-id',\n                currency: 'USD',\n                amount: 5,\n                reasonCode: '1000',\n                type: 'first-chargeback',\n                status: 'response-needed',\n                acquirerReferenceNumber: '143543',\n                postedTime: '2017-09-19T20:46:48Z',\n                deadlineTime: '2017-09-19T20:46:48Z'\n            };\n\n\n            const dispute = await api.disputes.update({id: 'my-second-id', data});\n      x-sdk-operation-name: update\n  /files:\n    get:\n      description: |\n        Retrieve a list of files.\n      operationId: GetFileCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionFilter\"\n        - $ref: \"#/components/parameters/collectionQuery\"\n        - $ref: \"#/components/parameters/collectionExpand\"\n        - $ref: \"#/components/parameters/collectionFields\"\n        - $ref: \"#/components/parameters/collectionSort\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/File\"\n                type: array\n          description: A list of Files was retrieved successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Retrieve a list of files\n      tags:\n        - Files\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $files = $client-\u0026gt;files()-\u0026gt;search([\n                'filter' =\u0026gt; 'name:TestFile',\n            ]);\n        - lang: JavaScript\n          source: \u003e-\n            // all parameters are optional\n\n            const firstCollection = await api.files.getAll();\n\n\n            // alternatively you can specify one or more of them\n\n            const params = {limit: 20, offset: 100, sort: '-createdTime'}; \n\n            const secondCollection = await api.files.getAll(params);\n\n\n            // access the collection items, each item is a Member\n\n            secondCollection.items.forEach(file =\u0026gt; console.log(file.fields.name));\n      x-sdk-operation-name: getAll\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: \u003e\n        Additionally, a file can be sent with:.\n         - multipart/form-data POST request: in this case all property names are the same as the JSON ones (`file` is an uploaded file)\n         - file body request: the file body is sent as the request body, with the appropriate `Content-Type`. No additional\n         properties can be set along the request data\n\n        The following file types only are allowed:\n         - jpg\n         - png\n         - gif\n         - pdf\n         - mp3\n\n\n        If using a Publishable Api Key, only private files can be created. The files can later on be modified or used using\n         a secret API key.\n      operationId: PostFile\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: \"#/components/schemas/FileCreateFromInline\"\n                - $ref: \"#/components/schemas/FileCreateFromUrl\"\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/File\"\n          description: File was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      security:\n        - SecretApiKey: []\n        - JWT: []\n        - PublishableApiKey: []\n      summary: Create a file\n      tags:\n        - Files\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $fileForm = new Rebilly\\Entities\\File();\n            $fileForm-\u0026gt;setUrl('http://test.com/somefile.jpg');\n\n            try {\n                $file = $client-\u0026gt;files()-\u0026gt;create($fileForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: \u003e-\n            // using a FileList to fetch a file\n\n            const fileObject = fileList[0];\n\n\n            const addedFile = await api.files.upload({fileObject});\n\n\n\n\n\n            // or, upload and update a file at the same time\n\n\n            // using a FileList to fetch a file\n\n            const fileObject = fileList[0];\n\n\n            // define file data\n\n            const data = {\n                description: 'my new file',\n                tags: ['original']\n            };\n\n\n            const addedFile = await api.files.uploadAndUpdate({fileObject, data});\n      x-sdk-operation-name: upload\n  \"/files/{id}\":\n    delete:\n      description: |\n        Delete the File with predefined identifier string.\n      operationId: DeleteFile\n      responses:\n        \"204\":\n          description: File was deleted.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Delete a File\n      tags:\n        - Files\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $client-\u0026gt;files()-\u0026gt;delete('fileId');\n        - lang: JavaScript\n          source: \u003e-\n            // simply delete a file\n\n            const request = await api.files.delete({id: 'my-file-id'});\n\n\n            // the request does not return any fields but\n\n            // you can confirm the success using the status code\n\n            console.log(request.response.status); // 204\n\n\n\n\n\n            // or, delete a file and its related resource attachments\n\n            // use this method to remove the file completely from all resources at once.\n\n\n            const request = await api.files.detachAndDelete({id: 'my-file-id'});\n\n\n            // the request does not return any fields but\n\n            // you can confirm the success using the status code\n\n            console.log(request.response.status); // 204\n      x-sdk-operation-name: delete\n    get:\n      description: |\n        Retrieve a File with specified identifier string.\n      operationId: GetFile\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/File\"\n          description: File was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a File Record\n      tags:\n        - Files\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $file = $client-\u0026gt;files()-\u0026gt;load('fileId');\n        - lang: JavaScript\n          source: |-\n            const file = await api.files.get({id: 'foobar-001'});\n            console.log(file.fields.name);\n      x-sdk-operation-name: get\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    put:\n      description: \u003e\n        Update the File with predefined ID. Note that file can be uploaded\n        with POST. only.\n      operationId: PutFile\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/File\"\n        description: File resource.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/File\"\n          description: File was updated.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Update the File with predefined ID\n      tags:\n        - Files\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $fileForm = new Rebilly\\Entities\\File();\n            $fileForm-\u0026gt;setDescription('This is a test file');\n\n            try {\n                $file = $client-\u0026gt;files()-\u0026gt;update('fileId', $fileForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: \u003e-\n            // define the values to update\n\n            const data = {\n                name: 'new file name',\n                description: 'a fitting description',\n                tags: ['original']\n            };\n\n\n            const file = await api.files.update({id: 'my-file-id', data});\n\n\n\n\n\n            // or, upload and update a file at the same time\n\n\n            // using a FileList to fetch a file\n\n            const fileObject = fileList[0];\n\n\n            // define file data\n\n            const data = {\n                description: 'my new file',\n                tags: ['original']\n            };\n\n\n            const addedFile = await api.files.uploadAndUpdate({fileObject, data});\n      x-sdk-operation-name: update\n  \"/files/{id}/download\":\n    get:\n      description: |\n        Download a file.\n      operationId: GetFileDownload\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                readOnly: true\n                type: string\n          description: The file was retrieved successfully.\n          headers:\n            Content-Length:\n              description: The number of bytes in the file.\n              schema:\n                type: integer\n            Content-Type:\n              description: The MIME type of the file.\n              schema:\n                type: string\n        \"302\":\n          $ref: \"#/components/responses/Found\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Download a file\n      tags:\n        - Files\n      x-code-samples:\n        - lang: JavaScript\n          source: |-\n            const file = await api.files.download({id: 'my-file-id'});\n\n            // access the file ArrayBuffer to view the content \n            console.log(file.data);\n      x-sdk-operation-name: download\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n      - $ref: \"#/components/parameters/imageSize\"\n  \"/files/{id}/download{extension}\":\n    get:\n      description: |\n        Download image in specific format. Images are converted server-side.\n      operationId: GetFileDownloadExtension\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                readOnly: true\n                type: string\n          description: The file was retrieved successfully.\n          headers:\n            Content-Length:\n              description: The number of bytes in the file.\n              schema:\n                type: integer\n            Content-Type:\n              description: The MIME type of the file.\n              schema:\n                type: string\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Download image in specific format\n      tags:\n        - Files\n      x-sdk-operation-name: downloadWithExtension\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - description: File extension which also indicates the desired file format.\n        in: path\n        name: extension\n        required: true\n        schema:\n          enum:\n            - .png\n            - .jpg\n            - .gif\n          type: string\n      - $ref: \"#/components/parameters/organizationId\"\n  /invoices:\n    get:\n      description: |\n        Retrieve a list of invoices.\n      operationId: GetInvoiceCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionFilter\"\n        - $ref: \"#/components/parameters/collectionSort\"\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionQuery\"\n        - $ref: \"#/components/parameters/collectionExpand\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Invoice\"\n                type: array\n          description: A list of invoices was retrieved successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Retrieve a list of invoices\n      tags:\n        - Invoices\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $invoices = $client-\u0026gt;invoices()-\u0026gt;search([\n                'filter' =\u0026gt; 'customerId:testCustomerId',\n            ]);\n        - lang: JavaScript\n          source: \u003e-\n            // all parameters are optional\n\n            const firstCollection = await api.invoices.getAll();\n\n\n            // alternatively you can specify one or more of them\n\n            const params = {limit: 20, offset: 100, sort: '-createdTime'}; \n\n            const secondCollection = await api.invoices.getAll(params);\n\n\n            // access the collection items, each item is a Member\n\n            secondCollection.items.forEach(invoice =\u0026gt; console.log(invoice.fields.firstName));\n\n\n\n\n            // alternatively, download as a CSV file\n\n            // all parameters are optional\n\n            const firstFile = await api.invoices.downloadCSV();\n\n\n            // alternatively you can specify one or more of them\n\n            const params = {limit: 20, offset: 100, sort: '-createdTime'}; \n\n            const secondFile = await api.invoices.downloadCSV(params);\n\n\n            // access the file data to view the CSV content \n\n            console.log(secondFile.data);\n      x-sdk-operation-name: getAll\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Create an invoice.\n      operationId: PostInvoice\n      requestBody:\n        $ref: \"#/components/requestBodies/Invoice\"\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n          description: Invoice was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create an invoice\n      tags:\n        - Invoices\n      x-code-samples:\n        - lang: PHP\n          source: |\n            \u0026lt;?\n            $invoiceForm = new Rebilly\\Entities\\Invoice();\n            $invoiceForm-\u0026gt;setCustomerId('customerId');\n            $invoiceForm-\u0026gt;setWebsiteId('websiteId');\n            $invoiceForm-\u0026gt;setCurrency('USD');\n            $invoiceForm-\u0026gt;setBillingAddress([\n                'firstName' =\u0026gt; 'John',\n                'lastName' =\u0026gt; 'Doe',\n                'organization' =\u0026gt; 'Test LTD',\n                'address' =\u0026gt; 'Test street 5',\n                'address2' =\u0026gt; 'Test house 5',\n                'city' =\u0026gt; 'New York',\n                'region' =\u0026gt; 'Long Island',\n                'country' =\u0026gt; 'US',\n                'postalCode' =\u0026gt; '123456',\n                'emails' =\u0026gt; [\n                    [\n                        'label' =\u0026gt; 'main',\n                        'value' =\u0026gt; 'johndoe@testemail.com',\n                        'primary' =\u0026gt; true,\n                    ],\n                    [\n                        'label' =\u0026gt; 'secondary',\n                        'value' =\u0026gt; 'otheremail@testemail.com',\n                    ],\n                ],\n                'phoneNumbers' =\u0026gt; [\n                    [\n                        'label' =\u0026gt; 'work',\n                        'value' =\u0026gt; '+123456789',\n                        'primary' =\u0026gt; true,\n                    ],\n                    [\n                        'label' =\u0026gt; 'home',\n                        'value' =\u0026gt; '+9874654321',\n                    ],\n                ],\n            ]);\n\n            try {\n                $invoice = $client-\u0026gt;invoices()-\u0026gt;create($invoiceForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: \u003e-\n            // first set the properties for the new invoice\n\n            const data = {\n                customerId: 'foobar-0001',\n                websiteId: 'my-main-website',\n                currency: 'USD',\n                billingAddress: {\n                    firstName: 'Johnny',\n                    lastName: 'Brown',\n                    emails: [{\n                        label: 'main',\n                        value: 'johnny+test@grr.la',\n                        primary: true\n                    }],\n                },\n                deliveryAddress: {\n                    firstName: 'Johnny',\n                    lastName: 'Brown',\n                    emails: [{\n                        label: 'main',\n                        value: 'johnny+test@grr.la',\n                        primary: true\n                    }],\n                },\n                notes: `customer's first invoice`,\n            };\n\n\n            // the ID is optional\n\n            const firstInvoice = await api.invoices.create({data});\n\n\n            // or you can provide one\n\n            const secondInvoice = await api.invoices.create({id: 'my-second-id', data});\n      x-sdk-operation-name: create\n  \"/invoices/{id}\":\n    get:\n      description: |\n        Retrieve an invoice with specified identifier string.\n      operationId: GetInvoice\n      parameters:\n        - $ref: \"#/components/parameters/mediaTypeJsonPdf\"\n        - $ref: \"#/components/parameters/collectionExpand\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n            application/pdf:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n          description: Invoice was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve an invoice\n      tags:\n        - Invoices\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $invoice = $client-\u0026gt;invoices()-\u0026gt;load('invoiceId');\n        - lang: JavaScript\n          source: |-\n            const invoice = await api.invoices.get({id: 'foobar-001'});\n            console.log(invoice.fields.primaryAddress.firstName);\n\n\n            // alternatively, download as a PDF file\n            const pdf = await api.invoices.downloadPDF({id: 'foobar-001'});\n            // the invoice's data in arraybuffer format\n            console.log(pdf.data);\n      x-sdk-operation-name: get\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    put:\n      description: |\n        Create or update an invoice with predefined identifier string.\n      operationId: PutInvoice\n      requestBody:\n        $ref: \"#/components/requestBodies/Invoice\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n          description: Invoice was updated.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n          description: Invoice was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create or update an invoice with predefined ID\n      tags:\n        - Invoices\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            \u0026lt;?\n\n            $invoiceForm = new Rebilly\\Entities\\Invoice();\n\n            $invoiceForm-\u0026gt;setCustomerId('customerId');\n\n            $invoiceForm-\u0026gt;setWebsiteId('websiteId');\n\n            $invoiceForm-\u0026gt;setCurrency('USD');\n\n            $invoiceForm-\u0026gt;setBillingAddress([\n                'firstName' =\u0026gt; 'John',\n                'lastName' =\u0026gt; 'Doe',\n                'organization' =\u0026gt; 'Test LTD',\n                'address' =\u0026gt; 'Test street 5',\n                'address2' =\u0026gt; 'Test house 5',\n                'city' =\u0026gt; 'New York',\n                'region' =\u0026gt; 'Long Island',\n                'country' =\u0026gt; 'US',\n                'postalCode' =\u0026gt; '123456',\n                'emails' =\u0026gt; [\n                    [\n                        'label' =\u0026gt; 'main',\n                        'value' =\u0026gt; 'johndoe@testemail.com',\n                        'primary' =\u0026gt; true,\n                    ],\n                    [\n                        'label' =\u0026gt; 'secondary',\n                        'value' =\u0026gt; 'otheremail@testemail.com',\n                    ],\n                ],\n                'phoneNumbers' =\u0026gt; [\n                    [\n                        'label' =\u0026gt; 'work',\n                        'value' =\u0026gt; '+123456789',\n                        'primary' =\u0026gt; true,\n                    ],\n                    [\n                        'label' =\u0026gt; 'home',\n                        'value' =\u0026gt; '+9874654321',\n                    ],\n                ],\n            ]);\n\n\n            try {\n                $invoice = $client-\u0026gt;invoices()-\u0026gt;update('invoiceId', $invoiceForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: \u003e-\n            // creating an invoice\n\n            const data = {\n                customerId: 'foobar-0001',\n                websiteId: 'my-main-website',\n                currency: 'USD',\n                billingAddress: {\n                    firstName: 'Johnny',\n                    lastName: 'Brown',\n                    emails: [{\n                        label: 'main',\n                        value: 'johnny+test@grr.la',\n                        primary: true\n                    }],\n                },\n                deliveryAddress: {\n                    firstName: 'Johnny',\n                    lastName: 'Brown',\n                    emails: [{\n                        label: 'main',\n                        value: 'johnny+test@grr.la',\n                        primary: true\n                    }],\n                },\n                notes: `customer's first invoice`,\n            };\n\n\n            // the ID is optional\n\n            const firstInvoice = await api.invoices.create({data});\n\n\n            // or you can provide one\n\n            const secondInvoice = await api.invoices.create({id: 'my-second-id', data});\n\n\n\n\n            // updating an invoice\n\n            const data = {\n                customerId: 'foobar-0001',\n                websiteId: 'my-main-website',\n                currency: 'USD',\n                billingAddress: {\n                    firstName: 'Johnny',\n                    lastName: 'Brown',\n                    emails: [{\n                        label: 'main',\n                        value: 'johnny+test@grr.la',\n                        primary: true\n                    }],\n                },\n                deliveryAddress: {\n                    firstName: 'Johnny',\n                    lastName: 'Brown',\n                    emails: [{\n                        label: 'main',\n                        value: 'johnny+test@grr.la',\n                        primary: true\n                    }],\n                },\n                notes: `customer's first invoice`,\n            };\n\n\n            const invoice = await api.invoices.update({id: 'my-second-id', data});\n      x-sdk-operation-name: update\n  \"/invoices/{id}/abandon\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Abandon an invoice with specified identifier string.\n      operationId: PostInvoiceAbandonment\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n          description: Invoice was abandoned successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Abandon an invoice\n      tags:\n        - Invoices\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $invoice = $client-\u0026gt;invoices()-\u0026gt;abandon('invoiceId');\n        - lang: JavaScript\n          source: \u003e-\n            const abandonedInvoice = await api.invoices.abandon({id:\n            'my-invoice-id'});\n\n            console.log(abandonedInvoice.fields.status);\n      x-sdk-operation-name: abandon\n  \"/invoices/{id}/issue\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: \u003e\n        Issue an invoice with specified identifier string. It must be in\n        `draft` status.\n      operationId: PostInvoiceIssuance\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/InvoiceIssue\"\n        description: InvoiceIssue resource.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n          description: Invoice was issued successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n      summary: Issue an invoice\n      tags:\n        - Invoices\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $invoice = $client-\u0026gt;invoices()-\u0026gt;issue('invoiceId', '2025-01-01\n            05:00:00');\n        - lang: JavaScript\n          source: \u003e-\n            // define the issued time\n\n            const data = {\n                issuedTime: \"2017-09-19T20:46:51Z\"\n            };\n\n\n            // issue the invoice without an issued time\n\n            const firstInvoice = await api.invoices.issue({id: 'my-first-id'});\n\n\n            // or include it\n\n            const secondInvoice = await api.invoices.issue({id: 'my-second-id', data});\n      x-sdk-operation-name: issue\n  \"/invoices/{id}/items\":\n    get:\n      description: |\n        Retrieve an invoice items with specified invoice identifier string.\n      operationId: GetInvoiceItemCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionExpand\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/InvoiceItem\"\n                type: array\n          description: Invoice items were retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve invoice items\n      tags:\n        - Invoices\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $invoiceItems = $client-\u0026gt;invoiceItems()-\u0026gt;search('invoiceId', [\n                'filter' =\u0026gt; 'quantity:5',\n            ]);\n        - lang: JavaScript\n          source: \u003e-\n            // get the top 20 invoice items for this ID\n\n            const invoiceItems = await api.invoices.getAllInvoiceItems({id: 'my-invoice-id', limit: 20});\n\n            invoiceItems.items.forEach(item =\u0026gt; console.log(item.fields.description));\n      x-sdk-operation-name: getAllInvoiceItems\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Create an invoice item.\n      operationId: PostInvoiceItem\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/InvoiceItem\"\n        description: InvoiceItem resource.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvoiceItem\"\n          description: InvoiceItem was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create an invoice item\n      tags:\n        - Invoices\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $invoiceItemForm = new Rebilly\\Entities\\InvoiceItem();\n\n            $invoiceItemForm-\u0026gt;setType($invoiceItemForm::TYPE_DEBIT);\n\n            $invoiceItemForm-\u0026gt;setUnitPrice(0.99);\n\n            $invoiceItemForm-\u0026gt;setQuantity(5);\n\n\n            try {\n                $invoiceItem = $client-\u0026gt;invoiceItems()-\u0026gt;create($invoiceItemForm, 'invoiceId');\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: \u003e-\n            // first set the properties for the new invoice item\n\n            const data = {\n                type: 'debit', \n                unitPrice: 5\n            };\n\n\n            const invoiceItem = await api.invoices.createInvoiceItem({id: 'my-second-id', data});\n      x-sdk-operation-name: createInvoiceItem\n  \"/invoices/{id}/recalculate\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: \u003e\n        Recalculate an invoice with specified identifier string.\n\n        It will recalculate shipping rates, taxes, discounts. It is useful when coupon was revoked or customer redeemed coupon after invoice was issued and you want to apply it to this invoice.\n      operationId: PostInvoiceRecalculation\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n          description: Invoice was recalculated successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n      summary: Recalculate an invoice\n      tags:\n        - Invoices\n      x-sdk-operation-name: recalculate\n  \"/invoices/{id}/reissue\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: \u003e\n        Reissue an invoice with specified identifier string. It must be\n        issued. (status must be `unpaid` or `past-due`).\n      operationId: PostInvoiceReissuance\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/InvoiceReissue\"\n        description: InvoiceReissue resource.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n          description: Invoice was reissued successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n      summary: Reissue an invoice\n      tags:\n        - Invoices\n      x-sdk-operation-name: reissue\n  \"/invoices/{id}/timeline\":\n    get:\n      description: |\n        Retrieve a list of invoice timeline messages.\n      operationId: GetInvoiceTimelineCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionFilter\"\n        - $ref: \"#/components/parameters/collectionSort\"\n        - $ref: \"#/components/parameters/collectionQuery\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/InvoiceTimeline\"\n                type: array\n          description: A list of invoice timeline messages was retrieved successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Retrieve a list of invoice timeline messages\n      tags:\n        - Invoices\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            // all parameters are optional except for the `id`\n\n            const firstCollection = await api.invoices\n                .getAllTimelineMessages({id: 'my-invoice'});\n\n            // alternatively you can specify one or more of them\n\n            const params = {id: 'my-invoice', limit: 20, offset: 100};\n\n            const secondCollection = await api.invoices.getAllTimelineMessages(params);\n\n\n            // access the collection items, each item is a Member\n\n            secondCollection.items\n                .forEach(message =\u0026gt; console.log(message.fields.eventType));\n      x-sdk-operation-name: getAllTimelineMessages\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Create an invoice Timeline comment.\n      operationId: PostInvoiceTimeline\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/InvoiceTimeline\"\n        description: Invoice Timeline resource.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvoiceTimeline\"\n          description: Invoice Timeline comment was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create an invoice Timeline comment\n      tags:\n        - Invoices\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            // Create a comment\n\n            const firstComment = await api\n                .invoices.createTimelineComment({id: 'my-invoice-id', data: {message: 'Your comment here'}});\n\n            // Using params object, mentions and references\n\n            const message = `Example of mentions @user@mydomain.com and references #invoice-subscription-id`;\n\n            const params = {\n                id: 'my-invoice-id',\n                data: {\n                    message,\n                },\n            };\n\n            const secondComment = await api.invoices.createTimelineComment(params);\n      x-sdk-operation-name: createTimelineComment\n  \"/invoices/{id}/timeline/{messageId}\":\n    delete:\n      description: |\n        Delete an Invoice Timeline message with predefined identifier string.\n      operationId: DeleteInvoiceTimeline\n      responses:\n        \"204\":\n          description: Invoice Timeline message was deleted.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n      summary: Delete an Invoice Timeline message\n      tags:\n        - Invoices\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            const request = await api.invoices\n                .deleteTimelineMessage({id: 'foobar-001', messageId: 'message-202'});\n\n            // the request does not return any fields but\n\n            // you can confirm the success using the status code\n\n            console.log(request.response.status); // 204\n      x-sdk-operation-name: deleteTimelineMessage\n    get:\n      description: |\n        Retrieve a invoice message with specified identifier string.\n      operationId: GetInvoiceTimeline\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvoiceTimeline\"\n          description: Invoice message was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve an Invoice Timeline message\n      tags:\n        - Invoices\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            const message = await api.invoices\n                .getTimelineMessage({id: 'foobar-001', messageId: 'message-202'});\n            console.log(message.fields.eventType);\n      x-sdk-operation-name: getTimelineMessage\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - description: The Invoice Timeline message ID.\n        in: path\n        name: messageId\n        required: true\n        schema:\n          type: string\n      - $ref: \"#/components/parameters/organizationId\"\n  \"/invoices/{id}/transaction\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: \u003e\n        Apply a transaction to an invoice. The invoice must be unpaid. The\n        transaction must have a non-zero unused amount (not fully applied to\n        other invoices).\n      operationId: PostInvoiceTransaction\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/InvoiceTransaction\"\n        description: InvoiceTransaction resource.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n          description: Transaction was applied to invoice successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Apply a transaction to an invoice\n      tags:\n        - Invoices\n      x-code-samples:\n        - lang: JavaScript\n          source: |\n            const params = {\n                id: 'my-invoice-id', \n                transactionId: 'my-transaction-id',\n                amount: 12,99 \n            };\n\n            const invoice = await api.invoices.applyTransaction(params);\n      x-sdk-operation-name: applyTransaction\n  \"/invoices/{id}/transaction-allocations\":\n    get:\n      description: Get the precise amounts from a transaction allocated as invoice payments.\n      operationId: GetInvoiceTransactionAllocationCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/InvoiceTransactionAllocation\"\n                type: array\n          description: List of allocations was retrieved successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Get transaction amounts allocated to an invoice\n      tags:\n        - Invoices\n      x-sdk-operation-name: getAllTransactionAllocations\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n  \"/invoices/{id}/void\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Void an invoice with specified identifier string.\n      operationId: PostInvoiceVoid\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n          description: Invoice was voided successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Void an invoice\n      tags:\n        - Invoices\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $invoice = $client-\u0026gt;invoices()-\u0026gt;void('invoiceId');\n        - lang: JavaScript\n          source: \u003e-\n            const voidedInvoice = await api.invoices.void({id: 'my-invoice-id'});\n\n            console.log(voidedInvoice.fields.status);\n      x-sdk-operation-name: void\n  /kyc-documents:\n    get:\n      description: |\n        Retrieve a list of KYC documents.\n      operationId: GetKycDocumentCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionFilter\"\n        - $ref: \"#/components/parameters/collectionSort\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/KycDocument-2\"\n                type: array\n          description: A list of KYC documents was retrieved successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Retrieve a list of KYC documents\n      tags:\n        - KYC Documents\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            // all parameters are optional\n\n            const firstCollection = await api.kycDocuments.getAll();\n\n\n            // alternatively you can specify one or more of them\n\n            const params = {limit: 20, offset: 100, sort: '-createdTime'};\n\n            const secondCollection = await api.kycDocuments.getAll(params);\n\n\n            // access the collection items, each item is a Member\n\n            secondCollection.items.forEach(document =\u0026gt; console.log(document.fields.documentType));\n      x-sdk-operation-name: getAll\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Create a KYC Document.\n      operationId: PostKycDocument\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/KycDocument-2\"\n        description: Kyc document resource.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KycDocument-2\"\n          description: Kyc document was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create a KYC Document\n      tags:\n        - KYC Documents\n      x-code-samples:\n        - lang: JavaScript\n          source: |-\n            // All fields are required\n            const data = {\n                fieldId: '4f6cf35x-2c4y-483z-a0a9-158621f77a21',\n                customerId: '4f6cf35x-2c4y-483z-a0a9-158621f77a21',\n                documentType: 'identity-proof'\n            };\n\n            const firstKycDocument = await api.kycDocuments.create({data});\n      x-sdk-operation-name: create\n  \"/kyc-documents/{id}\":\n    get:\n      description: Retrieve a KYC document with specified identifier string.\n      operationId: GetKycDocument\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KycDocument-2\"\n          description: KYC document was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a KYC Document\n      tags:\n        - KYC Documents\n      x-code-samples:\n        - lang: JavaScript\n          source: |-\n            const document = await api.kycDocuments.get({id: 'foobar-001'});\n            console.log(document.fields.documentType);\n      x-sdk-operation-name: get\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    put:\n      description: Create or update a KYC document with predefined identifier string.\n      operationId: PutKycDocument\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/KycDocument-2\"\n        description: KYC document resource.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KycDocument-2\"\n          description: KYC document was updated.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KycDocument-2\"\n          description: KYC document was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create or update a KYC document with predefined ID\n      tags:\n        - KYC Documents\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            // define the values to update\n\n            const data = {\n                status: 'accepted'\n            };\n\n\n            const document = await api.kycDocuments.update({id: 'my-second-id', data});\n      x-sdk-operation-name: update\n  \"/kyc-documents/{id}/acceptance\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: \u003e\n        Marks that status of the document as `accepted`. Updates the review\n        time and reviewer information. Intended to be used for manual overrides.\n      operationId: PostKycDocumentAcceptance\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KycDocument-2\"\n          description: KYC document acceptance was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Accept a KYC document\n      tags:\n        - KYC Documents\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            const acceptedDocument = await api.kycDocuments.accept({id:\n            'my-second-id'});\n\n            console.log(acceptedDocument.fields.status);\n      x-sdk-operation-name: accept\n  \"/kyc-documents/{id}/matches\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: \u003e\n        Updates a KYC document's documentMatches. Intended to be used for\n        manual overrides.\n      operationId: PostKycDocumentMatches\n      requestBody:\n        content:\n          application/json:\n            schema:\n              anyOf:\n                - $ref: \"#/components/schemas/IdentityMatches\"\n                - $ref: \"#/components/schemas/AddressMatches\"\n        description: Kyc document resource.\n        required: true\n      responses:\n        \"204\":\n          description: KYC document's documentMatches were updated.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Update a KYC document's documentMatches\n      tags:\n        - KYC Documents\n      x-sdk-operation-name: matches\n  \"/kyc-documents/{id}/rejection\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: \u003e\n        Marks that status of the document as `rejected`. Updates the review\n        time and reviewer information. Intended to be used for manual overrides.\n      operationId: PostKycDocumentRejection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/KycDocumentRejection\"\n        description: KYC document resource.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KycDocument-2\"\n          description: KYC document rejection was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Reject a KYC document\n      tags:\n        - KYC Documents\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            const data = {\n                type: 'document-expired',\n                message: 'Document is expired'\n            }\n\n            const rejectedDocument = await api.kycDocuments.reject({id: 'my-second-id', data});\n\n            console.log(rejectedDocument.fields.rejectionReason.type);\n      x-sdk-operation-name: reject\n  \"/kyc-documents/{id}/review\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: Mark the KYC document as reviewed. Updates the review time and\n        reviewer. information.\n      operationId: PostKycDocumentReview\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KycDocument-2\"\n          description: KYC document was reviewed.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Review a KYC document\n      tags:\n        - KYC Documents\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            const reviewedDocument = await api.kycDocuments.review({id:\n            'my-second-id'});\n\n            console.log(reviewedDocument.fields.status);\n      x-sdk-operation-name: review\n  /kyc-requests:\n    get:\n      description: |\n        Retrieve a list of KYC requests.\n      operationId: GetKycRequestCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionFilter\"\n        - $ref: \"#/components/parameters/collectionSort\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/KycRequest\"\n                type: array\n          description: A list of KYC requests was retrieved successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Retrieve a list of KYC requests\n      tags:\n        - KYC Documents\n      x-sdk-operation-name: getAll\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Create a KYC Request.\n      operationId: PostKycRequest\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/KycRequest\"\n        description: Kyc request resource.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KycRequest\"\n          description: Kyc request was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create a KYC Request\n      tags:\n        - KYC Documents\n      x-sdk-operation-name: create\n  \"/kyc-requests/{id}\":\n    delete:\n      description: |\n        Delete the KYC request with the predefined identifier string.\n      operationId: DeleteKycRequest\n      responses:\n        \"204\":\n          description: The KYC request was deleted.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Delete the KYC request\n      tags:\n        - KYC Documents\n      x-sdk-operation-name: delete\n    get:\n      description: Retrieve a KYC request with specified identifier string.\n      operationId: GetKycRequest\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KycRequest\"\n          description: KYC request was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a KYC request\n      tags:\n        - KYC Documents\n      x-sdk-operation-name: get\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    patch:\n      description: Update a KYC request.\n      operationId: PatchKycRequest\n      requestBody:\n        $ref: \"#/components/requestBodies/PatchKycRequest\"\n        description: KYC document resource.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KycRequest\"\n          description: KYC request was updated.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Update a KYC request\n      tags:\n        - KYC Documents\n      x-sdk-operation-name: update\n  /password-tokens:\n    get:\n      description: |\n        Retrieve a list of tokens.\n      operationId: GetPasswordTokenCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ResetPasswordToken\"\n                type: array\n          description: A list of Reset Password Tokens was retrieved successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Retrieve a list of tokens\n      tags:\n        - Customer Authentication\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            // all parameters are optional\n\n            const firstCollection = await api.customerAuthentication.getAllResetPasswordTokens();\n\n\n            // alternatively you can specify one or more of them\n\n            const params = {limit: 20, offset: 100}; \n\n            const secondCollection = await api.customerAuthentication.getAllResetPasswordTokens(params);\n\n\n            // access the collection items, each item is a Member\n\n            secondCollection.items.forEach(token =\u0026gt; console.log(token.fields.token));\n      x-sdk-operation-name: getAllResetPasswordTokens\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Create a Reset Password Token.\n      operationId: PostPasswordToken\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ResetPasswordToken\"\n        description: ResetPasswordToken resource.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResetPasswordToken\"\n          description: Reset Password Token was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create a Reset Password Token\n      tags:\n        - Customer Authentication\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            // first set the required properties for the new credential\n\n            const data = {\n                username: 'foobar',\n                password: 'fuubar',\n                // the `credential` expects \n                // the customer credential's ID\n                credential: 'foobar-0001'\n\n                // optionally you can define an `expiredTime` to \n                // limit the duration of the reset token\n\n                //expiredTime: '2017-09-18T19:17:39Z'\n            };\n\n\n            const resetToken = await api.customerAuthentication.createResetPasswordToken({data});\n      x-sdk-operation-name: createResetPasswordToken\n  \"/password-tokens/{id}\":\n    delete:\n      description: |\n        Delete a Reset Password Token with predefined identifier string.\n      operationId: DeletePasswordToken\n      responses:\n        \"204\":\n          description: ResetPasswordToken was deleted.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n      summary: Delete a Reset Password Token\n      tags:\n        - Customer Authentication\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            const request = await\n            api.customerAuthentication.deleteResetPasswordToken({id:\n            'my-second-key'});\n\n\n            // the request does not return any fields but\n\n            // you can confirm the success using the status code\n\n            console.log(request.response.status); // 204\n      x-sdk-operation-name: deleteResetPasswordToken\n    get:\n      description: |\n        Retrieve a Reset Password Token with specified identifier string.\n      operationId: GetPasswordToken\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResetPasswordToken\"\n          description: ResetPasswordToken was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a Reset Password Token\n      tags:\n        - Customer Authentication\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            const token = await\n            api.customerAuthentication.getResetPasswordToken({id:\n            'my-first-id'});\n\n            console.log(token.fields.credential);\n      x-sdk-operation-name: getResetPasswordToken\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n  /payment-cards:\n    get:\n      description: |\n        Retrieve a list of Payments Cards.\n      operationId: GetPaymentCardCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionFilter\"\n        - $ref: \"#/components/parameters/collectionSort\"\n        - $ref: \"#/components/parameters/collectionQuery\"\n        - $ref: \"#/components/parameters/collectionExpand\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PaymentCard\"\n                type: array\n          description: A list of Payment Card was retrieved successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Retrieve a list of Payment Cards\n      tags:\n        - Payment Cards\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $paymentCards = $client-\u0026gt;paymentCards()-\u0026gt;search([\n                'filter' =\u0026gt; 'status:active',\n            ]);\n        - lang: JavaScript\n          source: \u003e-\n            // all parameters are optional\n\n            const firstCollection = await api.paymentCards.getAll();\n\n\n            // alternatively you can specify one or more of them\n\n            const params = {limit: 20, offset: 100, sort: '-createdTime'}; \n\n            const secondCollection = await api.paymentCards.getAll(params);\n\n\n            // access the collection items, each item is a Member\n\n            secondCollection.items.forEach(paymentCard =\u0026gt; console.log(paymentCard.fields.customerId));\n      x-sdk-operation-name: getAll\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Create a Payment Card.\n      operationId: PostPaymentCard\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: \"#/components/schemas/PaymentCardCreateToken\"\n                - $ref: \"#/components/schemas/PaymentCardCreatePlain\"\n        description: PaymentCard resource.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PaymentCard\"\n          description: Payment Card was updated.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PaymentCard\"\n          description: Payment Card was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create a Payment Card\n      tags:\n        - Payment Cards\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $paymentCardForm = new Rebilly\\Entities\\PaymentCard();\n\n            $paymentCardForm-\u0026gt;setCustomerId('customerId');\n\n            $paymentCardForm-\u0026gt;setPan('4111111111111111');\n\n            $paymentCardForm-\u0026gt;setExpYear(2025);\n\n            $paymentCardForm-\u0026gt;setExpMonth(8);\n\n            $paymentCardForm-\u0026gt;setBillingAddress([\n                'firstName' =\u0026gt; 'John',\n                'lastName' =\u0026gt; 'Doe',\n                'organization' =\u0026gt; 'Test LTD',\n                'address' =\u0026gt; 'Test street 5',\n                'address2' =\u0026gt; 'Test house 5',\n                'city' =\u0026gt; 'New York',\n                'region' =\u0026gt; 'Long Island',\n                'country' =\u0026gt; 'US',\n                'postalCode' =\u0026gt; '123456',\n                'emails' =\u0026gt; [\n                    [\n                        'label' =\u0026gt; 'main',\n                        'value' =\u0026gt; 'johndoe@testemail.com',\n                        'primary' =\u0026gt; true,\n                    ],\n                    [\n                        'label' =\u0026gt; 'secondary',\n                        'value' =\u0026gt; 'otheremail@testemail.com',\n                    ],\n                ],\n                'phoneNumbers' =\u0026gt; [\n                    [\n                        'label' =\u0026gt; 'work',\n                        'value' =\u0026gt; '+123456789',\n                        'primary' =\u0026gt; true,\n                    ],\n                    [\n                        'label' =\u0026gt; 'home',\n                        'value' =\u0026gt; '+9874654321',\n                    ],\n                ],\n            ]);\n\n\n            try {\n                $paymentCard = $client-\u0026gt;paymentCards()-\u0026gt;create($paymentCardForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: \u003e\n            // first set the properties for the new payment card\n\n            const data = {\n                pan: '4111111111111111',\n                expYear: 2022,\n                expMonth: 11,\n                cvv: '123',\n                billingAddress: {\n                  firstName: 'Johnny',\n                  lastName: 'Brown',\n                  emails: [{\n                      label: 'main',\n                      value: 'johnny+test@grr.la',\n                      primary: true\n                  }]\n                },\n                // the customer ID for which\n                // we are adding a payment card\n                customerId: 'foobar-0001'\n            };\n\n\n            // the ID is optional\n\n            const firstCard = await api.paymentCards.create({data});\n\n\n            // or you can provide one\n\n            const secondCard = await api.paymentCards.create({id: 'my-second-key', data});\n      x-sdk-operation-name: create\n  \"/payment-cards/{id}\":\n    get:\n      description: |\n        Retrieve a Payment Card with specified identifier string.\n      operationId: GetPaymentCard\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PaymentCard\"\n          description: Payment card was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a Payment Card\n      tags:\n        - Payment Cards\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $paymentCard = $client-\u0026gt;paymentCards()-\u0026gt;load('paymentCardId');\n        - lang: JavaScript\n          source: |-\n            const paymentCard = await api.paymentCards.get({id: 'foobar-001'});\n            console.log(paymentCard.fields.customerId);\n      x-sdk-operation-name: get\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    patch:\n      description: |\n        Update any of the payment card's values except for the pan.\n      operationId: PatchPaymentCard\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PaymentCardUpdatePlain\"\n        description: Payment card.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PaymentCard\"\n          description: Payment card was updated.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Update a payment card's values\n      tags:\n        - Payment Cards\n      x-sdk-operation-name: patch\n    put:\n      operationId: PutPaymentCard\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: \"#/components/schemas/PaymentCardCreateToken\"\n                - $ref: \"#/components/schemas/PaymentCardCreatePlain\"\n        description: Payment card.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PaymentCard\"\n          description: Payment card was updated.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PaymentCard\"\n          description: Payment card was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Payment card already exists and cannot be updated.\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create a payment card with predefined ID\n      tags:\n        - Payment Cards\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $paymentCardForm = new Rebilly\\Entities\\PaymentCard();\n\n            $paymentCardForm-\u0026gt;setCustomerId('customerId');\n\n            $paymentCardForm-\u0026gt;setPan('4111111111111111');\n\n            $paymentCardForm-\u0026gt;setExpYear(2025);\n\n            $paymentCardForm-\u0026gt;setExpMonth(8);\n\n            $paymentCardForm-\u0026gt;setBillingAddress([\n                'firstName' =\u0026gt; 'John',\n                'lastName' =\u0026gt; 'Doe',\n                'organization' =\u0026gt; 'Test LTD',\n                'address' =\u0026gt; 'Test street 5',\n                'address2' =\u0026gt; 'Test house 5',\n                'city' =\u0026gt; 'New York',\n                'region' =\u0026gt; 'Long Island',\n                'country' =\u0026gt; 'US',\n                'postalCode' =\u0026gt; '123456',\n                'emails' =\u0026gt; [\n                    [\n                        'label' =\u0026gt; 'main',\n                        'value' =\u0026gt; 'johndoe@testemail.com',\n                        'primary' =\u0026gt; true,\n                    ],\n                    [\n                        'label' =\u0026gt; 'secondary',\n                        'value' =\u0026gt; 'otheremail@testemail.com',\n                    ],\n                ],\n                'phoneNumbers' =\u0026gt; [\n                    [\n                        'label' =\u0026gt; 'work',\n                        'value' =\u0026gt; '+123456789',\n                        'primary' =\u0026gt; true,\n                    ],\n                    [\n                        'label' =\u0026gt; 'home',\n                        'value' =\u0026gt; '+9874654321',\n                    ],\n                ],\n            ]);\n\n\n            try {\n                $paymentCard = $client-\u0026gt;paymentCards()-\u0026gt;create($paymentCardForm, 'paymentCardId');\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: \u003e\n            // first set the properties for the new payment card\n\n            const data = {\n                pan: '4111111111111111',\n                expYear: 2022,\n                expMonth: 11,\n                cvv: '123',\n                billingAddress: {\n                  firstName: 'Johnny',\n                  lastName: 'Brown',\n                  emails: [{\n                      label: 'main',\n                      value: 'johnny+test@grr.la',\n                      primary: true\n                  }]\n                },\n                // the customer ID for which\n                // we are adding a payment card\n                customerId: 'foobar-0001'\n            };\n\n\n            // the ID is optional\n\n            const firstCard = await api.paymentCards.create({data});\n\n\n            // or you can provide one\n\n            const secondCard = await api.paymentCards.create({id: 'my-second-key', data});\n      x-sdk-operation-name: update\n  \"/payment-cards/{id}/deactivation\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Deactivate a Payment Card.\n      operationId: PostPaymentCardDeactivation\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PaymentCard\"\n          description: Payment Card was deactivated.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n      summary: Deactivate a Payment Card\n      tags:\n        - Payment Cards\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $client-\u0026gt;paymentCards()-\u0026gt;deactivate('paymentCardId');\n        - lang: JavaScript\n          source: \u003e-\n            const paymentCard = await api.paymentCards.deactivate({id:\n            'my-second-key'});\n\n            console.log(paymentCard.fields.status);\n      x-sdk-operation-name: deactivate\n  /payment-instruments:\n    get:\n      description: |\n        Retrieve a list of payment instruments.\n      operationId: GetPaymentInstrumentCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionFilter\"\n        - $ref: \"#/components/parameters/collectionSort\"\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionQuery\"\n        - $ref: \"#/components/parameters/collectionExpand\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PaymentInstrument-2\"\n                type: array\n          description: A list of payment instruments was retrieved successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Retrieve a list of payment instruments\n      tags:\n        - Payment Instruments\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $paymentInstruments = $client-\u0026gt;paymentInstruments()-\u0026gt;search([\n                'filter' =\u0026gt; 'status:active;method:payment-card',\n            ]);\n        - lang: JavaScript\n          source: \u003e\n            // all parameters are optional\n\n            const firstCollection = await api.paymentInstruments.getAll();\n\n\n            // alternatively you can specify one or more of them\n\n            const params = {limit: 20, offset: 100, sort: '-createdTime'};\n\n            const secondCollection = await api.paymentInstruments.getAll(params);\n\n\n            // access the collection items, each item is a Member\n\n            secondCollection.items.forEach(paymentInstrument =\u0026gt; console.log(paymentInstrument.fields.customerId));\n      x-sdk-operation-name: getAll\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: \u003e\n        Create a payment instrument.\n\n        If such payment card or bank account payment instrument already exists then updates it instead.\n      operationId: PostPaymentInstrument\n      requestBody:\n        $ref: \"#/components/requestBodies/PostPaymentInstrument\"\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PaymentInstrument-2\"\n          description: Payment instrument was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"303\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PaymentInstrument-2\"\n          description: Payment instrument was updated.\n          headers:\n            Location:\n              $ref: \"#/components/headers/Location\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create a Payment Instrument\n      tags:\n        - Payment Instruments\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $paymentInstrumentForm = new Rebilly\\Entities\\CommonPaymentInstrument();\n\n            $paymentInstrumentForm-\u0026gt;setCustomerId('customerId');\n\n            $paymentInstrumentForm-\u0026gt;setPan('4111111111111111');\n\n            $paymentInstrumentForm-\u0026gt;setExpYear(2025);\n\n            $paymentInstrumentForm-\u0026gt;setExpMonth(8);\n\n            $paymentInstrumentForm-\u0026gt;setBillingAddress([\n                'firstName' =\u0026gt; 'John',\n                'lastName' =\u0026gt; 'Doe',\n                'organization' =\u0026gt; 'Test LTD',\n                'address' =\u0026gt; 'Test street 5',\n                'address2' =\u0026gt; 'Test house 5',\n                'city' =\u0026gt; 'New York',\n                'region' =\u0026gt; 'Long Island',\n                'country' =\u0026gt; 'US',\n                'postalCode' =\u0026gt; '123456',\n                'emails' =\u0026gt; [\n                    [\n                        'label' =\u0026gt; 'main',\n                        'value' =\u0026gt; 'johndoe@testemail.com',\n                        'primary' =\u0026gt; true,\n                    ],\n                    [\n                        'label' =\u0026gt; 'secondary',\n                        'value' =\u0026gt; 'otheremail@testemail.com',\n                    ],\n                ],\n                'phoneNumbers' =\u0026gt; [\n                    [\n                        'label' =\u0026gt; 'work',\n                        'value' =\u0026gt; '+123456789',\n                        'primary' =\u0026gt; true,\n                    ],\n                    [\n                        'label' =\u0026gt; 'home',\n                        'value' =\u0026gt; '+9874654321',\n                    ],\n                ],\n            ]);\n\n\n            try {\n                $paymentInstrument = $client-\u0026gt;paymentInstruments()-\u0026gt;create($paymentInstrumentForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n\n\n            // Alternatively you can specify a payment token\n\n            $paymentInstrumentForm = new Rebilly\\Entities\\CommonPaymentInstrument();\n\n            $paymentInstrumentForm-\u0026gt;setCustomerId('customerId');\n\n            $paymentInstrumentForm-\u0026gt;setToken('payment-token');\n\n\n            try {\n                $paymentInstrument = $client-\u0026gt;paymentInstruments()-\u0026gt;create($paymentInstrumentForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: \u003e\n            // first set the properties for the new payment card instrument\n\n            const data = {\n                method: 'payment-card',\n                pan: '4111111111111111',\n                expYear: 2025,\n                expMonth: 11,\n                cvv: '123',\n                billingAddress: {\n                  firstName: 'Johnny',\n                  lastName: 'Brown',\n                  emails: [{\n                      label: 'main',\n                      value: 'johnny+test@grr.la',\n                      primary: true\n                  }]\n                },\n                // the customer ID for which\n                // we are adding a payment card instrument\n                customerId: 'foobar-0001'\n            };\n\n\n            const firstPaymentInstrument = await api.paymentInstruments.create({data});\n\n\n            // alternatively you can specify a payment token\n\n            const tokenData = {\n                token: 'payment-token',\n                // the customer ID for which\n                // we are adding a payment card instrument\n                customerId: 'foobar-0001'\n            };\n\n\n            const secondPaymentInstrument = await api.paymentInstruments.create({tokenData});\n      x-sdk-operation-name: create\n  \"/payment-instruments/{id}\":\n    get:\n      description: |\n        Retrieve a payment instrument by ID.\n      operationId: GetPaymentInstrument\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PaymentInstrument-2\"\n          description: Payment Instrument was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a Payment Instrument\n      tags:\n        - Payment Instruments\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $paymentInstrument =\n            $client-\u0026gt;paymentInstruments()-\u0026gt;load('paymentInstrumentId');\n        - lang: JavaScript\n          source: \u003e\n            const paymentInstrument = await api.paymentInstruments.get({id:\n            'payment-instrument-id'});\n\n\n            console.log(paymentInstrument.fields.customerId);\n      x-sdk-operation-name: get\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    patch:\n      description: Update allowed payment instrument's values.\n      operationId: PatchPaymentInstrument\n      requestBody:\n        $ref: \"#/components/requestBodies/PatchPaymentInstrument\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PaymentInstrument-2\"\n          description: Payment instrument was updated.\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Update a Payment Instrument's values\n      tags:\n        - Payment Instruments\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $paymentInstrumentForm = new Rebilly\\Entities\\CommonPaymentInstrument();\n\n            $paymentInstrumentForm-\u0026gt;setCvv('123');\n\n            $paymentInstrumentForm-\u0026gt;setExpYear(2025);\n\n            $paymentInstrumentForm-\u0026gt;setExpMonth(12);\n\n            $paymentInstrumentForm-\u0026gt;setBillingAddress([\n                'firstName' =\u0026gt; 'John',\n            ]);\n\n\n            try {\n                $paymentInstrument = $client-\u0026gt;paymentInstruments()-\u0026gt;update('paymentInstrumentId', $paymentInstrumentForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n\n\n            // Alternatively you can specify a partial token\n\n            $paymentInstrumentForm = new Rebilly\\Entities\\CommonPaymentInstrument();\n\n            $paymentInstrumentForm-\u0026gt;setToken('partial-token');\n\n            $paymentInstrumentForm-\u0026gt;setBillingAddress([\n                'firstName' =\u0026gt; 'John',\n            ]);\n\n\n            try {\n                $paymentInstrument = $client-\u0026gt;paymentInstruments()-\u0026gt;update('paymentInstrumentId', $paymentInstrumentForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: |\n            // payment instrument properties to be updated\n            const data = {\n                cvv: '123',\n                expMonth: 12,\n                expYear: 2025,\n                billingAddress: {\n                    firstName: 'John'\n                }\n            };\n\n            api.paymentInstruments.patch({id: 'id-to-update', data});\n\n            // alternatively you can specify a partial token\n            const tokenData = {\n                token: 'partial-token',\n                billingAddress: {\n                    firstName: 'John'\n                },\n                customFields: {\n                    foo: 'bar'\n                }\n            };\n\n            api.paymentInstruments.patch({id: 'id-to-update', tokenData});\n      x-sdk-operation-name: update\n  \"/payment-instruments/{id}/deactivation\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Deactivate a payment instrument.\n      operationId: PostPaymentInstrumentDeactivation\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PaymentInstrument-2\"\n          description: Payment instrument was deactivated.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n      summary: Deactivate a payment instrument\n      tags:\n        - Payment Instruments\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $client-\u0026gt;paymentInstruments()-\u0026gt;deactivate('paymentInstrumentId');\n        - lang: JavaScript\n          source: \u003e\n            const paymentInstrument = await api.paymentInstruments.deactivate({id:\n            'id-to-deactivate'});\n\n\n            console.log(paymentInstrument.fields.status);\n      x-sdk-operation-name: deactivate\n  /payouts:\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Create a transaction of type `credit`.\n      operationId: PostPayout\n      requestBody:\n        $ref: \"#/components/requestBodies/PayoutRequest\"\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Transaction\"\n          description: Transaction was created.\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create a credit transaction\n      tags:\n        - Transactions\n      x-sdk-operation-name: create\n  /paypal-accounts:\n    get:\n      description: |\n        Retrieve a list of PayPal Accounts.\n      operationId: GetPayPalAccountCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionFilter\"\n        - $ref: \"#/components/parameters/collectionSort\"\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionQuery\"\n        - $ref: \"#/components/parameters/collectionExpand\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PayPalAccount\"\n                type: array\n          description: A list of PayPal Accounts was retrieved successfully.\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Retrieve a list of PayPal accounts\n      tags:\n        - PayPal Accounts\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $payPalAccounts = $client-\u0026gt;payPalAccounts()-\u0026gt;search([\n                'filter' =\u0026gt; 'status:active',\n            ]);\n        - lang: JavaScript\n          source: \u003e-\n            // all parameters are optional\n\n            const firstCollection = await api.paypalAccounts.getAll();\n\n\n            // alternatively you can specify one or more of them\n\n            const params = {limit: 20, offset: 100, sort: '-createdTime'}; \n\n            const secondCollection = await api.paypalAccounts.getAll(params);\n\n\n            // access the collection items, each item is a Member\n\n            secondCollection.items.forEach(paypalAccount =\u0026gt; console.log(paypalAccount.fields.customerId));\n      x-sdk-operation-name: getAll\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Create a PayPal Account.\n      operationId: PostPayPalAccount\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PayPalAccount\"\n        description: PayPalAccount resource.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PayPalAccount\"\n          description: PayPal Account was created.\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create a PayPal Account\n      tags:\n        - PayPal Accounts\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $payPalForm = new Rebilly\\Entities\\PayPalAccount();\n\n            $payPalForm-\u0026gt;setCustomerId('customerId');\n\n            $payPalForm-\u0026gt;setBillingAddress([\n                'firstName' =\u0026gt; 'John',\n                'lastName' =\u0026gt; 'Doe',\n                'organization' =\u0026gt; 'Test LTD',\n                'address' =\u0026gt; 'Test street 5',\n                'address2' =\u0026gt; 'Test house 5',\n                'city' =\u0026gt; 'New York',\n                'region' =\u0026gt; 'Long Island',\n                'country' =\u0026gt; 'US',\n                'postalCode' =\u0026gt; '123456',\n                'emails' =\u0026gt; [\n                    [\n                        'label' =\u0026gt; 'main',\n                        'value' =\u0026gt; 'johndoe@testemail.com',\n                        'primary' =\u0026gt; true,\n                    ],\n                    [\n                        'label' =\u0026gt; 'secondary',\n                        'value' =\u0026gt; 'otheremail@testemail.com',\n                    ],\n                ],\n                'phoneNumbers' =\u0026gt; [\n                    [\n                        'label' =\u0026gt; 'work',\n                        'value' =\u0026gt; '+123456789',\n                        'primary' =\u0026gt; true,\n                    ],\n                    [\n                        'label' =\u0026gt; 'home',\n                        'value' =\u0026gt; '+9874654321',\n                    ],\n                ],\n            ]);\n\n\n            try {\n                $payPalAccount = $client-\u0026gt;payPalAccounts()-\u0026gt;create($payPalForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: \u003e-\n            // first set the properties for the new paypal account\n\n            const data = {\n                username: 'myPaypalUser',\n                billingAddress: {\n                  firstName: 'Johnny',\n                  lastName: 'Brown',\n                  emails: [{\n                      label: 'main',\n                      value: 'johnny+test@grr.la',\n                      primary: true\n                  }]  \n                },\n                // the customer ID for which\n                // we are adding a paypal account\n                customerId: 'foobar-0001'\n            };\n\n\n            // the ID is optional\n\n            const firstCard = await api.paypalAccounts.create({data});\n\n\n            // or you can provide one\n\n            const secondCard = await api.paypalAccounts.create({id: 'my-second-key', data});\n      x-sdk-operation-name: create\n  \"/paypal-accounts/{id}\":\n    get:\n      description: |\n        Retrieve a PayPal Account with specified identifier string.\n      operationId: GetPayPalAccount\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PayPalAccount\"\n          description: PayPal Account was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a PayPal Account\n      tags:\n        - PayPal Accounts\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $payPalAccount =\n            $client-\u0026gt;payPalAccounts()-\u0026gt;load('payPalAccountId');\n        - lang: JavaScript\n          source: \u003e-\n            const paypalAccount = await api.paypalAccounts.get({id: 'foobar-001'});\n\n            console.log(paypalAccount.fields.customerId);\n      x-sdk-operation-name: get\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    put:\n      operationId: PutPayPalAccount\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PayPalAccount\"\n        description: PayPal Account.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PayPalAccount\"\n          description: PayPal Account was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: PayPal Account exist and cannot be updated.\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create a PayPal account with predefined ID\n      tags:\n        - PayPal Accounts\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $payPalForm = new Rebilly\\Entities\\PayPalAccount();\n\n            $payPalForm-\u0026gt;setCustomerId('customerId');\n\n            $payPalForm-\u0026gt;setBillingAddress([\n                'firstName' =\u0026gt; 'John',\n                'lastName' =\u0026gt; 'Doe',\n                'organization' =\u0026gt; 'Test LTD',\n                'address' =\u0026gt; 'Test street 5',\n                'address2' =\u0026gt; 'Test house 5',\n                'city' =\u0026gt; 'New York',\n                'region' =\u0026gt; 'Long Island',\n                'country' =\u0026gt; 'US',\n                'postalCode' =\u0026gt; '123456',\n                'emails' =\u0026gt; [\n                    [\n                        'label' =\u0026gt; 'main',\n                        'value' =\u0026gt; 'johndoe@testemail.com',\n                        'primary' =\u0026gt; true,\n                    ],\n                    [\n                        'label' =\u0026gt; 'secondary',\n                        'value' =\u0026gt; 'otheremail@testemail.com',\n                    ],\n                ],\n                'phoneNumbers' =\u0026gt; [\n                    [\n                        'label' =\u0026gt; 'work',\n                        'value' =\u0026gt; '+123456789',\n                        'primary' =\u0026gt; true,\n                    ],\n                    [\n                        'label' =\u0026gt; 'home',\n                        'value' =\u0026gt; '+9874654321',\n                    ],\n                ],\n            ]);\n\n\n            try {\n                $payPalAccount = $client-\u0026gt;payPalAccounts()-\u0026gt;create($payPalForm, 'payPalAccountId');\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: \u003e-\n            // first set the properties for the new paypal account\n\n            const data = {\n                username: 'myPaypalUser',\n                billingAddress: {\n                  firstName: 'Johnny',\n                  lastName: 'Brown',\n                  emails: [{\n                      label: 'main',\n                      value: 'johnny+test@grr.la',\n                      primary: true\n                  }]  \n                },\n                // the customer ID for which\n                // we are adding a paypal account\n                customerId: 'foobar-0001'\n            };\n\n\n            // the ID is optional\n\n            const firstCard = await api.paypalAccounts.create({data});\n\n\n            // or you can provide one\n\n            const secondCard = await api.paypalAccounts.create({id: 'my-second-key', data});\n      x-sdk-operation-name: update\n  \"/paypal-accounts/{id}/deactivation\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Deactivate a PayPal Account.\n      operationId: PostPayPalAccountDeactivation\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PayPalAccount\"\n          description: PayPal Account was deactivated.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n      summary: Deactivate a PayPal Account\n      tags:\n        - PayPal Accounts\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $client-\u0026gt;payPalAccounts()-\u0026gt;deactivate('payPalAccountId');\n        - lang: JavaScript\n          source: \u003e-\n            // first set the properties for the activation\n\n            const data = {\n                websiteId: 'my-main-website',\n                // currency three letter code\n                currency: 'USD',\n                gatewayAccountId: 'my-main-gateway',\n                amount: 12.99,\n                redirectURLs: {\n                    success: 'https://www.acme.com/success',\n                    decline: 'https://www.acme.com/decline',\n                    cancel: 'https://www.acme.com/cancel',\n                    error: 'https://www.acme.com/error'\n                }\n            };\n\n\n            const paypalAccount = await api.paypalAccounts.activate({id: 'my-second-key', data});\n      x-sdk-operation-name: deactivate\n  /plans:\n    get:\n      description: |\n        Retrieve a list of plans.\n      operationId: GetPlanCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionFilter\"\n        - $ref: \"#/components/parameters/collectionSort\"\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionQuery\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Plan\"\n                type: array\n          description: A list of Plans was retrieved successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Retrieve a list of plans\n      tags:\n        - Plans\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $plans = $client-\u0026gt;plans()-\u0026gt;search([\n                'filter' =\u0026gt; 'name:TestPlan',\n            ]);\n        - lang: JavaScript\n          source: \u003e-\n            // all parameters are optional\n\n            const firstCollection = await api.plans.getAll();\n\n\n            // alternatively you can specify one or more of them\n\n            const params = {limit: 20, offset: 100, sort: '-createdTime'}; \n\n            const secondCollection = await api.plans.getAll(params);\n\n\n            // access the collection items, each item is a Member\n\n            secondCollection.items.forEach(plan =\u0026gt; console.log(plan.fields.name));\n      x-sdk-operation-name: getAll\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Create a plan.\n      operationId: PostPlan\n      requestBody:\n        $ref: \"#/components/requestBodies/Plan\"\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Plan\"\n          description: Plan was created.\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create a plan\n      tags:\n        - Plans\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $planForm = new Rebilly\\Entities\\Plan();\n            $planForm-\u0026gt;setName('TestPlan');\n            $planForm-\u0026gt;setCurrency('USD');\n            $planForm-\u0026gt;setTrialAmount(1);\n            $planForm-\u0026gt;setTrialPeriodUnit('day');\n            $planForm-\u0026gt;setTrialPeriodLength(1);\n            $planForm-\u0026gt;setProductId('test-product');\n\n            try {\n                $plan = $client-\u0026gt;plans()-\u0026gt;create($planForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: \u003e-\n            // first set the properties for the new plan\n\n            const data = {\n                name: 'My strongest plan',\n                currency: 'USD',\n                setupAmount: 12.99,\n                // you could also include a trial if needed\n                recurringPeriodUnit: 'month',\n                recurringPeriodLength: 1,\n                recurringAmount: 25.99\n            };\n\n\n            // the ID is optional\n\n            const firstPlan = await api.plans.create({data});\n\n\n            // or you can provide one\n\n            const secondPlan = await api.plans.create({id: 'my-second-key', data});\n      x-sdk-operation-name: create\n  \"/plans/{id}\":\n    delete:\n      description: |\n        Delete a Plan with predefined identifier string.\n      operationId: DeletePlan\n      responses:\n        \"204\":\n          description: Plan was deleted.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n      summary: Delete a Plan\n      tags:\n        - Plans\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $client-\u0026gt;plans()-\u0026gt;delete('planId');\n        - lang: JavaScript\n          source: |-\n            const request = await api.plans.delete({id: 'my-second-key'});\n\n            // the request does not return any fields but\n            // you can confirm the success using the status code\n            console.log(request.response.status); // 204\n      x-sdk-operation-name: delete\n    get:\n      description: |\n        Retrieve a plan with specified identifier string.\n      operationId: GetPlan\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Plan\"\n          description: Plan was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a plan\n      tags:\n        - Plans\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $plan = $client-\u0026gt;plans()-\u0026gt;load('planId');\n        - lang: JavaScript\n          source: |-\n            const plan = await api.plans.get({id: 'foobar-001'});\n            console.log(plan.fields.name);\n      x-sdk-operation-name: get\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    put:\n      description: |\n        Create or update a Plan with predefined identifier string.\n      operationId: PutPlan\n      requestBody:\n        $ref: \"#/components/requestBodies/Plan\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Plan\"\n          description: Plan was updated.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Plan\"\n          description: Plan was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create or update a Plan with predefined ID\n      tags:\n        - Plans\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $planForm = new Rebilly\\Entities\\Plan();\n            $planForm-\u0026gt;setName('TestPlan');\n            $planForm-\u0026gt;setCurrency('USD');\n            $planForm-\u0026gt;setTrialAmount(1);\n            $planForm-\u0026gt;setTrialPeriodUnit('day');\n            $planForm-\u0026gt;setTrialPeriodLength(1);\n\n            try {\n                $plan = $client-\u0026gt;plans()-\u0026gt;update('planId', $planForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: \u003e-\n            // first set the properties for the new plan\n\n            const data = {\n                name: 'My strongest plan',\n                currency: 'USD',\n                setupAmount: 12.99,\n                // you could also include a trial if needed\n                recurringPeriodUnit: 'month',\n                recurringPeriodLength: 1,\n                recurringAmount: 25.99\n            };\n\n\n            // the ID is optional\n\n            const firstPlan = await api.plans.create({data});\n\n\n            // or you can provide one\n\n            const secondPlan = await api.plans.create({id: 'my-second-key', data});\n      x-sdk-operation-name: update\n  /products:\n    get:\n      description: |\n        Retrieve a list of products.\n      operationId: GetProductCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionFilter\"\n        - $ref: \"#/components/parameters/collectionSort\"\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionQuery\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Product\"\n                type: array\n          description: A list of products was retrieved successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Retrieve a list of products\n      tags:\n        - Products\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            // all parameters are optional\n\n            const firstCollection = await api.products.getAll();\n\n\n            // alternatively you can specify one or more of them\n\n            const params = {limit: 20, offset: 100, sort: '-createdTime'}; \n\n            const secondCollection = await api.products.getAll(params);\n\n\n            // access the collection items, each item is a Member\n\n            secondCollection.items.forEach(product =\u0026gt; console.log(product.fields.name));\n      x-sdk-operation-name: getAll\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Create a Product.\n      operationId: PostProduct\n      requestBody:\n        $ref: \"#/components/requestBodies/Product\"\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Product\"\n          description: Product was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create a Product\n      tags:\n        - Products\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            // first set the properties for the new product\n\n            const data = {\n                name: 'my first product',\n                description: 'made to be of the highest quality',\n                taxCategoryId: '',\n                requiresShipping: true,\n                accountingCode: '100',\n                customFields: []\n            };\n\n\n            // the ID is optional\n\n            const firstProduct = await api.products.create({data});\n\n\n            // or you can provide one\n\n            const secondProduct = await api.products.create({id: 'my-second-key', data});\n      x-sdk-operation-name: create\n  \"/products/{id}\":\n    delete:\n      description: |\n        Delete a product with predefined identifier string.\n      operationId: DeleteProduct\n      responses:\n        \"204\":\n          description: Product was deleted.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Delete a product\n      tags:\n        - Products\n      x-code-samples:\n        - lang: JavaScript\n          source: |-\n            const request = await api.products.delete({id: 'my-second-key'});\n\n            // the request does not return any fields but\n            // you can confirm the success using the status code\n            console.log(request.response.status); // 204\n      x-sdk-operation-name: delete\n    get:\n      description: |\n        Retrieve a product with specified identifier string.\n      operationId: GetProduct\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Product\"\n          description: Product was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a product\n      tags:\n        - Products\n      x-code-samples:\n        - lang: JavaScript\n          source: |-\n            const product = await api.products.get({id: 'foobar-001'});\n            console.log(product.fields.name);\n      x-sdk-operation-name: get\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    put:\n      description: |\n        Create a product with predefined identifier string.\n      operationId: PutProduct\n      requestBody:\n        $ref: \"#/components/requestBodies/Product\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Product\"\n          description: Product was updated.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Product\"\n          description: Product was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create a product with predefined ID\n      tags:\n        - Products\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            // creating a new product\n\n            const data = {\n                name: 'my first product',\n                description: 'made to be of the highest quality',\n                taxCategoryId: '',\n                requiresShipping: true,\n                accountingCode: '100',\n                customFields: []\n            };\n\n\n            // the ID is optional\n\n            const firstProduct = await api.products.create({data});\n\n\n            // or you can provide one\n\n            const secondProduct = await api.products.create({id: 'my-second-key', data});\n\n\n\n\n            // updating a product\n\n            const data = {\n                name: 'my first product',\n                description: 'made to be of the highest quality',\n                taxCategoryId: '20010',\n                requiresShipping: false,\n                accountingCode: '77',\n                customFields: []\n            };\n\n\n            const product = await api.products.update({id: 'my-second-key', data});\n      x-sdk-operation-name: update\n  /ready-to-pay:\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: \u003e\n        Get available payment methods for a specific transaction or a\n        purchase.\n\n\n        The payment methods order shown to a customer **SHOULD** be the same as the order in the response.\n\n\n        The list of available methods is generated from available [Gateway Accounts](https://user-api-docs.rebilly.com/tag/Gateway-Accounts)\n\n        intersected with the last matched [Rules Engine](https://user-api-docs.rebilly.com/tag/Rules#operation/PutEventRule)\n\n        `adjust-ready-to-pay` action on `ready-to-pay-requested` event.\n\n\n        If there were no actions matched for the specific request – all methods supported by the Gateway Accounts are sent.\n\n\n        To invert this behavior – place an all-matching rule at the very end of the `ready-to-pay-requested` event in\n\n        Rules Engine with an empty `paymentMethods` property of the `adjust-ready-to-pay` action.\n      operationId: PostReadyToPay\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CoreReadyToPay\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReadyToPayMethods\"\n          description: Payment methods retrieved.\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Ready to Pay\n      tags:\n        - Transactions\n      x-sdk-operation-name: readyToPay\n  /search:\n    get:\n      description: \u003e\n        Search merchant's data to return resources such as customers,\n        invoices, orders, transactions.\n      operationId: GetSearch\n      parameters:\n        - $ref: \"#/components/parameters/collectionSort\"\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - description: The default search. It will search across resources and many fields.\n          in: query\n          name: q\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Search\"\n                type: array\n          description: Results keyed by resource.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Search merchant data\n      tags:\n        - Search\n      x-sdk-operation-name: get\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n  /shipping-zones:\n    get:\n      description: |\n        Retrieve a list of shipping zones.\n      operationId: GetShippingZoneCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionFilter\"\n        - $ref: \"#/components/parameters/collectionSort\"\n        - $ref: \"#/components/parameters/collectionQuery\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ShippingZone\"\n                type: array\n          description: A list of shipping zones was retrieved successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Retrieve a list of shipping zones\n      tags:\n        - Shipping Zones\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            // all parameters are optional\n\n            const firstCollection = await api.shippingZones.getAll();\n\n\n            // alternatively you can specify one or more of them\n\n            const params = {limit: 20, offset: 100, sort: '-createdTime'}; \n\n            const secondCollection = await api.shippingZones.getAll(params);\n\n\n            // access the collection items, each item is a Member\n\n            secondCollection.items.forEach(shippingZone =\u0026gt; console.log(shippingZone.fields.name));\n      x-sdk-operation-name: getAll\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Create a Shipping Zone.\n      operationId: PostShippingZone\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ShippingZone\"\n        description: Shipping Zone resource.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ShippingZone\"\n          description: Shipping Zone was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create a Shipping Zone\n      tags:\n        - Shipping Zones\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            // first set the properties for the new shipping zone\n\n            const data = {\n                name: 'free shipping',\n                rates: [\n                    {\n                        name: 'free shipping',\n                        price: 0,\n                        currency: 'USD'\n                    }\n                ],\n                countries: ['US']\n            };\n\n\n            // the ID is optional\n\n            const firstZone = await api.shippingZones.create({data});\n\n\n            // or you can provide one\n\n            const secondZone = await api.shippingZones.create({id: 'my-second-key', data});\n      x-sdk-operation-name: create\n  \"/shipping-zones/{id}\":\n    delete:\n      description: |\n        Delete a shipping zone with predefined identifier string.\n      operationId: DeleteShippingZone\n      responses:\n        \"204\":\n          description: Shipping zone was deleted.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Delete a shipping zone\n      tags:\n        - Shipping Zones\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            const request = await api.shippingZones.delete({id: 'my-second-key'});\n\n\n            // the request does not return any fields but\n\n            // you can confirm the success using the status code\n\n            console.log(request.response.status); // 204\n      x-sdk-operation-name: delete\n    get:\n      description: |\n        Retrieve a shipping zone with specified identifier string.\n      operationId: GetShippingZone\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ShippingZone\"\n          description: Shipping zone was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a shipping zone\n      tags:\n        - Shipping Zones\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            const shippingZone = await api.shippingZones.get({id: 'foobar-001'});\n\n            console.log(shippingZone.fields.name);\n      x-sdk-operation-name: get\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    put:\n      description: |\n        Create a shipping zone with predefined identifier string.\n      operationId: PutShippingZone\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ShippingZone\"\n        description: Shipping zone resource.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ShippingZone\"\n          description: Shipping zone was updated.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ShippingZone\"\n          description: Shipping zone was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create a shipping zone with predefined ID\n      tags:\n        - Shipping Zones\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            // creating a new shipping zone\n\n            const data = {\n                name: 'free shipping',\n                rates: [\n                    {\n                        name: 'free shipping',\n                        price: 0,\n                        currency: 'USD'\n                    }\n                ],\n                countries: ['US']\n            };\n\n\n            // the ID is optional\n\n            const firstZone = await api.shippingZones.create({data});\n\n\n            // or you can provide one\n\n            const secondZone = await api.shippingZones.create({id: 'my-second-key', data});\n\n\n\n\n            // updating a shipping zone\n\n            const data = {\n                name: 'normal shipping',\n                rates: [\n                    {\n                        name: 'flat rate',\n                        price: 9.99,\n                        currency: 'USD'\n                    }\n                ],\n                // when null it will match any country\n                countries: null\n            };\n\n\n            const shippingZone = await api.shippingZones.update({id: 'my-second-key', data});\n      x-sdk-operation-name: update\n  /subscription-cancellations:\n    get:\n      description: Retrieve a list of cancellations for all subscriptions.\n      operationId: GetSubscriptionCancellationCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionFilter\"\n        - $ref: \"#/components/parameters/collectionSort\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SubscriptionCancellation\"\n                type: array\n          description: A list of cancellations was retrieved successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Retrieve a list of cancellations\n      tags:\n        - Orders\n      x-sdk-operation-name: getAll\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: Cancel an order or preview the cancellation parameters before that.\n      operationId: PostSubscriptionCancellation\n      requestBody:\n        $ref: \"#/components/requestBodies/SubscriptionCancellation\"\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SubscriptionCancellation\"\n          description: Cancellation was created, the order is or will be deactivated.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Cancel an order\n      tags:\n        - Orders\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $subscriptionCancelForm = new Rebilly\\Entities\\SubscriptionCancel();\n\n            $subscriptionCancelForm-\u0026gt;setEffectiveTime(new DateTime());\n\n\n            try {\n                $subscription = $client-\u0026gt;subscriptions()-\u0026gt;cancel('subscriptionId', $subscriptionCancelForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: \u003e-\n            const data = {\n                subscriptionId: 'subscription-id-to-delete',\n                churnTime: '2020-06-10T13:55:51Z',\n            }\n\n\n            // the ID is optional\n\n            const firstSubscriptionCancellation = await api.subscriptionCancellations.create({data});\n\n\n            // or you can provide one\n\n            const secondSubscriptionCancellation = await api.subscriptionCancellations.create({id: 'custom-cancellation-id', data});\n      x-sdk-operation-name: create\n  \"/subscription-cancellations/{id}\":\n    delete:\n      description: Delete an order's cancellation. Only draft can be deleted.\n      operationId: DeleteSubscriptionCancellation\n      responses:\n        \"204\":\n          description: Cancellaton was deleted.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n      summary: Delete a cancellation\n      tags:\n        - Orders\n      x-sdk-operation-name: delete\n    get:\n      description: Retrieve an order сancellation with specified identifier string.\n      operationId: GetSubscriptionCancellation\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SubscriptionCancellation\"\n          description: Cancellation was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve an order сancellation\n      tags:\n        - Orders\n      x-sdk-operation-name: get\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    put:\n      description: Cancel a subscription.\n      operationId: PutSubscriptionCancellation\n      requestBody:\n        $ref: \"#/components/requestBodies/SubscriptionCancellation\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SubscriptionCancellation\"\n          description: Cancellation was updated, the order is or will be deactivated.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SubscriptionCancellation\"\n          description: Cancellation was created, the order is or will be deactivated.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Cancel an order\n      tags:\n        - Orders\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            const data = {\n                subscriptionId: 'subscription-id-to-delete',\n                churnTime: '2020-06-10T13:55:51Z',\n            }\n\n\n            // the ID is optional\n\n            const firstSubscriptionCancellation = await api.subscriptionCancellations.create({data});\n\n\n            // or you can provide one\n\n            const secondSubscriptionCancellation = await api.subscriptionCancellations.create({id: 'custom-cancellation-id', data});\n      x-sdk-operation-name: update\n  /subscription-reactivations:\n    get:\n      description: Retrieve a list of reactivations for all subscriptions.\n      operationId: GetSubscriptionReactivationCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionFilter\"\n        - $ref: \"#/components/parameters/collectionSort\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/SubscriptionReactivation\"\n                type: array\n          description: A list of reactivations was retrieved successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Retrieve a list of reactivations\n      tags:\n        - Orders\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e\n            // all parameters are optional\n\n            const firstCollection = await api.subscriptionReactivations.getAll();\n\n\n            // alternatively you can specify one or more of them\n\n            const params = {limit: 20, offset: 100, sort: '-createdTime'};\n\n            const secondCollection = await api.subscriptionReactivations.getAll(params);\n\n\n            // access the collection items, each item is a Member\n\n            secondCollection.items.forEach(subscription =\u0026gt; console.log(subscription.fields.customerId));\n      x-sdk-operation-name: getAll\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: Reactivate a subscription.\n      operationId: PostSubscriptionReactivation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SubscriptionReactivation\"\n        description: Reactivation resource.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SubscriptionReactivation\"\n          description: \u003e\n            Reactivation was created, the order is active and won't be.\n            deactivated.\n\n            If there was a cancellation with status \"confirmed\", it is revoked.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Reactivate an order\n      tags:\n        - Orders\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e\n            const data = {\n                subscriptionId: '4f6cf35x-2c4y-483z-a0a9-158621f77a21',\n                description: 'reactivation-reason',\n                effectiveTime: '2020-06-10T13:55:51Z',\n                renewalTime: '2020-07-10T13:55:51Z'\n            };\n\n\n            const reactivatedSubscription = await api.subscriptionReactivations.reactivate({data});\n      x-sdk-operation-name: reactivate\n  \"/subscription-reactivations/{id}\":\n    get:\n      description: Retrieve an order reactivation with specified identifier string.\n      operationId: GetSubscriptionReactivation\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SubscriptionReactivation\"\n          description: Reactivation was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve an order reactivation\n      tags:\n        - Orders\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e\n            const subscription = await api.subscriptionReactivations.get({id:\n            'foobar-001'});\n\n            console.log(subscription.fields.description);\n      x-sdk-operation-name: get\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n  /subscriptions:\n    get:\n      description: |\n        Retrieve a list of orders.\n      operationId: GetSubscriptionCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionFilter\"\n        - $ref: \"#/components/parameters/collectionSort\"\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionQuery\"\n        - $ref: \"#/components/parameters/subscriptionExpand\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Subscription\"\n                type: array\n          description: A list of subscriptions was retrieved successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Retrieve a list of orders\n      tags:\n        - Orders\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $subscriptions = $client-\u0026gt;subscriptions()-\u0026gt;search([\n                'filter' =\u0026gt; 'customerId:testCustomerId',\n            ]);\n        - lang: JavaScript\n          source: \u003e-\n            // all parameters are optional\n\n            const firstCollection = await api.subscriptions.getAll();\n\n\n            // alternatively you can specify one or more of them\n\n            const params = {limit: 20, offset: 100, sort: '-createdTime'}; \n\n            const secondCollection = await api.subscriptions.getAll(params);\n\n\n            // access the collection items, each item is a Member\n\n            secondCollection.items.forEach(subscription =\u0026gt; console.log(subscription.fields.customerId));\n\n\n\n\n            // alternatively, download as CSV file\n\n\n            // all parameters are optional\n\n            const firstFile = await api.subscriptions.downloadCSV();\n\n\n            // alternatively you can specify one or more of them\n\n            const params = {limit: 20, offset: 100, sort: '-createdTime'}; \n\n            const secondFile = await api.subscriptions.downloadCSV(params);\n\n\n            // access the file data to view the CSV content \n\n            console.log(secondFile.data);\n      x-sdk-operation-name: getAll\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Create an order. Consider using the upsert.\n        operation to accomplish this task.\n      operationId: PostSubscription\n      parameters:\n        - $ref: \"#/components/parameters/subscriptionExpand\"\n      requestBody:\n        $ref: \"#/components/requestBodies/Subscription\"\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Subscription\"\n          description: Order was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create an order\n      tags:\n        - Orders\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $subscriptionForm = new Rebilly\\Entities\\Subscription();\n\n            $subscriptionForm-\u0026gt;setCustomerId('customerId');\n\n            $subscriptionForm-\u0026gt;setWebsiteId('websiteId');\n\n            $subscriptionForm-\u0026gt;setItems([\n                [\n                    'planId' =\u0026gt; 'my-plan',\n                    'quantity' =\u0026gt; 1,\n                ],\n            ]);\n\n            $subscriptionForm-\u0026gt;setBillingAddress([\n                'firstName' =\u0026gt; 'John',\n                'lastName' =\u0026gt; 'Doe',\n                'organization' =\u0026gt; 'Test LTD',\n                'address' =\u0026gt; 'Test street 5',\n                'address2' =\u0026gt; 'Test house 5',\n                'city' =\u0026gt; 'New York',\n                'region' =\u0026gt; 'Long Island',\n                'country' =\u0026gt; 'US',\n                'postalCode' =\u0026gt; '123456',\n                'emails' =\u0026gt; [\n                    [\n                        'label' =\u0026gt; 'main',\n                        'value' =\u0026gt; 'johndoe@testemail.com',\n                        'primary' =\u0026gt; true,\n                    ],\n                    [\n                        'label' =\u0026gt; 'secondary',\n                        'value' =\u0026gt; 'otheremail@testemail.com',\n                    ],\n                ],\n                'phoneNumbers' =\u0026gt; [\n                    [\n                        'label' =\u0026gt; 'work',\n                        'value' =\u0026gt; '+123456789',\n                        'primary' =\u0026gt; true,\n                    ],\n                    [\n                        'label' =\u0026gt; 'home',\n                        'value' =\u0026gt; '+9874654321',\n                    ],\n                ],\n            ]);\n\n\n            try {\n                $subscription = $client-\u0026gt;subscriptions()-\u0026gt;create($subscriptionForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: \u003e-\n            // first set the properties for the new subscription\n\n            const data = {\n                customerId: 'foobar-0001',\n                websiteId: 'my-main-website',\n                items: [\n                    { planId: 'my-plan-id', quantity: '1' },\n                ],\n                // you can append this subscription to\n                // an existing invoice by passing its ID\n                initialInvoiceId: 'my-existing-invoice-id',\n                billingAddress: {\n                    firstName: 'Johnny',\n                    lastName: 'Brown',\n                    emails: [{\n                        label: 'main',\n                        value: 'johnny+test@grr.la',\n                        primary: true\n                    }],\n                },\n                deliveryAddress: {\n                    firstName: 'Johnny',\n                    lastName: 'Brown',\n                    emails: [{\n                        label: 'main',\n                        value: 'johnny+test@grr.la',\n                        primary: true\n                    }],\n                },\n                quantity: 1,\n                customFields: {}\n            };\n\n\n            // the ID is optional\n\n            const firstInvoice = await api.subscriptions.create({data});\n\n\n            // or you can provide one\n\n            const secondInvoice = await api.subscriptions.create({id: 'my-second-id', data});\n      x-sdk-operation-name: create\n  \"/subscriptions/{id}\":\n    get:\n      description: |\n        Retrieve an order with specified identifier string.\n      operationId: GetSubscription\n      parameters:\n        - $ref: \"#/components/parameters/subscriptionExpand\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Subscription\"\n          description: Order was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve an order\n      tags:\n        - Orders\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $subscription = $client-\u0026gt;subscriptions()-\u0026gt;load('subscriptionId');\n        - lang: JavaScript\n          source: \u003e-\n            const subscription = await api.subscriptions.get({id: 'foobar-001'});\n\n            console.log(subscription.fields.billingAddress.firstName);\n      x-sdk-operation-name: get\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    put:\n      description: |\n        Create or update an order with predefined identifier string.\n      operationId: PutSubscription\n      parameters:\n        - $ref: \"#/components/parameters/subscriptionExpand\"\n      requestBody:\n        $ref: \"#/components/requestBodies/Subscription\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Subscription\"\n          description: Order was updated.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Subscription\"\n          description: Order was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Upsert an order with predefined ID\n      tags:\n        - Orders\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $subscriptionForm = new Rebilly\\Entities\\Subscription();\n\n            $subscriptionForm-\u0026gt;setCustomerId('customerId');\n\n            $subscriptionForm-\u0026gt;setWebsiteId('websiteId');\n\n            $subscriptionForm-\u0026gt;setItems($subscriptionForm-\u0026gt;createItems([\n                'planId' =\u0026gt; 'my-plan',\n                'quantity' =\u0026gt; 1,\n            ]));\n\n            $subscriptionForm-\u0026gt;setBillingAddress([\n                'firstName' =\u0026gt; 'John',\n                'lastName' =\u0026gt; 'Doe',\n                'organization' =\u0026gt; 'Test LTD',\n                'address' =\u0026gt; 'Test street 5',\n                'address2' =\u0026gt; 'Test house 5',\n                'city' =\u0026gt; 'New York',\n                'region' =\u0026gt; 'Long Island',\n                'country' =\u0026gt; 'US',\n                'postalCode' =\u0026gt; '123456',\n                'emails' =\u0026gt; [\n                    [\n                        'label' =\u0026gt; 'main',\n                        'value' =\u0026gt; 'johndoe@testemail.com',\n                        'primary' =\u0026gt; true,\n                    ],\n                    [\n                        'label' =\u0026gt; 'secondary',\n                        'value' =\u0026gt; 'otheremail@testemail.com',\n                    ],\n                ],\n                'phoneNumbers' =\u0026gt; [\n                    [\n                        'label' =\u0026gt; 'work',\n                        'value' =\u0026gt; '+123456789',\n                        'primary' =\u0026gt; true,\n                    ],\n                    [\n                        'label' =\u0026gt; 'home',\n                        'value' =\u0026gt; '+9874654321',\n                    ],\n                ],\n            ]);\n\n\n            try {\n                $subscription = $client-\u0026gt;subscriptions()-\u0026gt;update('subscriptionId', $subscriptionForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: \u003e-\n            // creating a subscription\n\n            const data = {\n                customerId: 'foobar-0001',\n                websiteId: 'my-main-website',\n                planId: 'my-plan-id',\n                // you can append this subscription to\n                // an existing invoice by passing its ID\n                initialInvoiceId: 'my-existing-invoice-id',\n                billingAddress: {\n                    firstName: 'Johnny',\n                    lastName: 'Brown',\n                    emails: [{\n                        label: 'main',\n                        value: 'johnny+test@grr.la',\n                        primary: true\n                    }],\n                },\n                deliveryAddress: {\n                    firstName: 'Johnny',\n                    lastName: 'Brown',\n                    emails: [{\n                        label: 'main',\n                        value: 'johnny+test@grr.la',\n                        primary: true\n                    }],\n                },\n                quantity: 1,\n                customFields: {}\n            };\n\n\n            // the ID is optional\n\n            const firstInvoice = await api.subscriptions.create({data});\n\n\n            // or you can provide one\n\n            const secondInvoice = await api.subscriptions.create({id: 'my-second-id', data});\n\n\n\n\n            // updating a subscription\n\n            const data = {\n                // determines if a payment attempt will be automatic\n                autopay: false,\n                // set the next renewal time\n                renewalTime: '2018-09-26T15:34:29Z'\n            };\n\n\n            const subscription = await api.subscriptions.update({id: 'my-second-id', data});\n      x-sdk-operation-name: update\n  \"/subscriptions/{id}/change-items\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: \u003e\n        Change an order's items or quantities and designate when and if\n        there should be pro-rata credits given.\n      operationId: PostSubscriptionItemsChange\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SubscriptionChange\"\n        description: Change items request.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Subscription\"\n          description: Order was changed.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Change an order's items\n      tags:\n        - Orders\n      x-sdk-operation-name: changeItems\n  \"/subscriptions/{id}/interim-invoice\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: \u003e\n        Issue an interim invoice for a subscription, typically used in\n        conjunction. with plan changes and pro rata adjustments.\n\n        This process creates an invoice, adds the subscription's line items to the invoice, and issues the invoice, and applies\n\n        payment to it if a transaction id is supplied.\n      operationId: PostSubscriptionInterimInvoice\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SubscriptionInvoice\"\n        description: Issue an interim invoice.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n          description: Invoice was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Issue an interim invoice for a subscription order\n      tags:\n        - Orders\n      x-sdk-operation-name: createInterimInvoice\n  \"/subscriptions/{id}/timeline\":\n    get:\n      description: |\n        Retrieve a list of order timeline messages.\n      operationId: GetSubscriptionTimelineCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionFilter\"\n        - $ref: \"#/components/parameters/collectionSort\"\n        - $ref: \"#/components/parameters/collectionQuery\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/OrderTimeline\"\n                type: array\n          description: A list of order timeline messages was retrieved successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n      summary: Retrieve a list of order timeline messages\n      tags:\n        - Orders\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            // all parameters are optional except for the `id`\n\n            const firstCollection = await api.subscriptions\n                .getAllTimelineMessages({id: 'my-transaction'});\n\n            // alternatively you can specify one or more of them\n\n            const params = {id: 'my-transaction', limit: 20, offset: 100};\n\n            const secondCollection = await api.subscriptions.getAllTimelineMessages(params);\n\n\n            // access the collection items, each item is a Member\n\n            secondCollection.items\n                .forEach(message =\u0026gt; console.log(message.fields.eventType));\n      x-sdk-operation-name: getAllTimelineMessages\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Create an order Timeline comment.\n      operationId: PostSubscriptionTimeline\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OrderTimeline\"\n        description: Order Timeline resource.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OrderTimeline\"\n          description: Order Timeline comment was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create an order Timeline comment\n      tags:\n        - Orders\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            // Create a comment\n\n            const firstComment = await api\n                .subscriptions.createTimelineComment({id: 'my-subscription-id', data: {message: 'Your comment here'}});\n\n            // Using params object, mentions and references\n\n            const message = `Example of mentions @user@mydomain.com and references #subscriptions-subscription-id`;\n\n            const params = {\n                id: 'my-subscription-id',\n                data: {\n                    message,\n                },\n            };\n\n            const secondComment = await api.subscriptions.createTimelineComment(params);\n      x-sdk-operation-name: createTimelineComment\n  \"/subscriptions/{id}/timeline/{messageId}\":\n    delete:\n      description: |\n        Delete an Order Timeline message with predefined identifier string.\n      operationId: DeleteSubscriptionTimeline\n      responses:\n        \"204\":\n          description: Order Timeline message was deleted.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n      summary: Delete an Order Timeline message\n      tags:\n        - Orders\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            const request = await api.subscriptions\n                .deleteTimelineMessage({id: 'foobar-001', messageId: 'message-202'});\n\n            // the request does not return any fields but\n\n            // you can confirm the success using the status code\n\n            console.log(request.response.status); // 204\n      x-sdk-operation-name: deleteTimelineMessage\n    get:\n      description: |\n        Retrieve a order message with specified identifier string.\n      operationId: GetSubscriptionTimeline\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OrderTimeline\"\n          description: Order message was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve an Order Timeline message\n      tags:\n        - Orders\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            const message = await api.subscriptions\n                .getTimelineMessage({id: 'foobar-001', messageId: 'message-202'});\n            console.log(message.fields.eventType);\n      x-sdk-operation-name: getTimelineMessage\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - description: The Order Timeline message ID.\n        in: path\n        name: messageId\n        required: true\n        schema:\n          type: string\n      - $ref: \"#/components/parameters/organizationId\"\n  \"/subscriptions/{id}/upcoming-invoices\":\n    get:\n      description: \u003e\n        Retrieve an upcoming invoice from the specified subscription order.\n\n        The endpoint is temporary before upcoming invoices get a complete integration.\n      operationId: GetSubscriptionUpcomingInvoiceCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionExpand\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Invoice\"\n                type: array\n          description: Upcoming invoices are retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve subscription order's upcoming invoice\n      tags:\n        - Orders\n      x-sdk-operation-name: getAllUpcomingInvoices\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n  \"/subscriptions/{id}/upcoming-invoices/{invoiceId}/issue\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - description: The Upcoming Invoice ID.\n        in: path\n        name: invoiceId\n        required: true\n        schema:\n          type: string\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: \u003e\n        Issue an upcoming invoice with specified identifier string for early pay.\n      operationId: PostUpcomingInvoiceIssuance\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/InvoiceIssue\"\n        description: InvoiceIssue resource.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n          description: Upcoming Invoice was issued successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n      summary: Issue an upcoming invoice for early pay\n      tags:\n        - Orders\n      x-sdk-operation-name: issueUpcomingInvoice\n  /tags:\n    get:\n      description: |\n        Retrieve a list of tags.\n      operationId: GetTagCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionFilter\"\n        - $ref: \"#/components/parameters/collectionQuery\"\n        - $ref: \"#/components/parameters/collectionSort\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Tag\"\n                type: array\n          description: A list of tags was retrieved successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Retrieve a list of tags\n      tags:\n        - Tags\n      x-sdk-operation-name: getAll\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Create a tag.\n      operationId: PostTag\n      requestBody:\n        $ref: \"#/components/requestBodies/Tag\"\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Tag\"\n          description: Tag was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create a tag\n      tags:\n        - Tags\n      x-sdk-operation-name: create\n  \"/tags/{tag}\":\n    delete:\n      description: |\n        Delete a tag.\n        It's an asynchronous operation.\n      operationId: DeleteTag\n      responses:\n        \"204\":\n          description: Tag was deleted.\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Delete a tag\n      tags:\n        - Tags\n      x-sdk-operation-name: delete\n    get:\n      description: |\n        Retrieve a tag.\n      operationId: GetTag\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Tag\"\n          description: Tag with specified name was retrieved successfully.\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a tag\n      tags:\n        - Tags\n      x-sdk-operation-name: get\n    parameters:\n      - $ref: \"#/components/parameters/tag\"\n      - $ref: \"#/components/parameters/organizationId\"\n    patch:\n      description: |\n        Update a tag.\n      operationId: PatchTag\n      requestBody:\n        $ref: \"#/components/requestBodies/Tag\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Tag\"\n          description: Tag was updated.\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Update a tag\n      tags:\n        - Tags\n      x-sdk-operation-name: update\n  \"/tags/{tag}/customers\":\n    delete:\n      description: |\n        Untag a list of customers.\n        If the customer from the list is already untagged it will be ignored.\n        It's an asynchronous operation.\n      operationId: DeleteTagCustomerCollection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                customerIds:\n                  description: The list of customer IDs.\n                  items:\n                    type: string\n                  maxItems: 1000\n                  minItems: 1\n                  type: array\n              required:\n                - customerIds\n              type: object\n        required: true\n      responses:\n        \"204\":\n          description: Customers was untagged.\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Untag a list of customers\n      tags:\n        - Tags\n      x-sdk-operation-name: untagCustomers\n    parameters:\n      - $ref: \"#/components/parameters/tag\"\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Tag a list of customers.\n        If the customer from the list is already tagged it will be ignored.\n        It's an asynchronous operation.\n      operationId: PostTagCustomerCollection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                customerIds:\n                  description: The list of customer IDs.\n                  items:\n                    type: string\n                  maxItems: 1000\n                  minItems: 1\n                  type: array\n              required:\n                - customerIds\n              type: object\n        required: true\n      responses:\n        \"204\":\n          description: Customers was tagged.\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Tag a list of customers\n      tags:\n        - Tags\n      x-sdk-operation-name: tagCustomers\n  \"/tags/{tag}/customers/{customerId}\":\n    delete:\n      description: |\n        Untag a customer.\n      operationId: DeleteTagCustomer\n      responses:\n        \"204\":\n          description: Customer was untagged.\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Untag a customer\n      tags:\n        - Tags\n      x-sdk-operation-name: untagCustomer\n    parameters:\n      - $ref: \"#/components/parameters/tag\"\n      - $ref: \"#/components/parameters/customerId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Tag a customer.\n      operationId: PostTagCustomer\n      responses:\n        \"204\":\n          description: Customer was tagged.\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Tag a customer\n      tags:\n        - Tags\n      x-sdk-operation-name: tagCustomer\n  /tokens:\n    get:\n      description: |\n        Retrieve a list of tokens.\n      operationId: GetTokenCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/CompositeToken\"\n                type: array\n          description: A list of tokens was retrieved successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Retrieve a list of tokens\n      tags:\n        - Payment Tokens\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $paymentCardTokens = $client-\u0026gt;paymentCardTokens()-\u0026gt;search([\n                'filter' =\u0026gt; 'token:string',\n            ]);\n        - lang: JavaScript\n          source: \u003e-\n            // all parameters are optional\n\n            const firstCollection = await api.paymentTokens.getAll();\n\n\n            // alternatively you can specify one or more of them\n\n            const params = {limit: 20, offset: 100}; \n\n            const secondCollection = await api.paymentTokens.getAll(params);\n\n\n            // access the collection items, each item is a Member\n\n            secondCollection.items.forEach(paymentToken =\u0026gt; console.log(paymentToken.fields.id));\n      x-sdk-operation-name: getAll\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        [FramePay](https://docs.rebilly.com/docs/developer-docs/framepay/)\n        is the recommended way to\n        create a payment token because it minimizes\n        PCI DSS compliance.  Once a payment token\n        is created, it can only be used once.\n\n        A payment token expires upon first use\n        or within 30 minutes of the token creation\n        (whichever comes first).\n      operationId: PostToken\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CompositeToken\"\n        description: PaymentToken resource.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CompositeToken\"\n          description: Token was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      security:\n        - PublishableApiKey: []\n        - SecretApiKey: []\n        - JWT: []\n      summary: Create a payment token\n      tags:\n        - Payment Tokens\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $paymentCardTokenForm = new Rebilly\\Entities\\PaymentCardToken();\n\n            $paymentCardTokenForm-\u0026gt;setBillingAddress([\n                'firstName' =\u0026gt; 'John',\n                'lastName' =\u0026gt; 'Doe',\n                'organization' =\u0026gt; 'Test LTD',\n                'address' =\u0026gt; 'Test street 5',\n                'address2' =\u0026gt; 'Test house 5',\n                'city' =\u0026gt; 'New York',\n                'region' =\u0026gt; 'Long Island',\n                'country' =\u0026gt; 'US',\n                'postalCode' =\u0026gt; '123456',\n                'emails' =\u0026gt; [\n                    [\n                        'label' =\u0026gt; 'main',\n                        'value' =\u0026gt; 'johndoe@testemail.com',\n                        'primary' =\u0026gt; true,\n                    ],\n                    [\n                        'label' =\u0026gt; 'secondary',\n                        'value' =\u0026gt; 'otheremail@testemail.com',\n                    ],\n                ],\n                'phoneNumbers' =\u0026gt; [\n                    [\n                        'label' =\u0026gt; 'work',\n                        'value' =\u0026gt; '+123456789',\n                        'primary' =\u0026gt; true,\n                    ],\n                    [\n                        'label' =\u0026gt; 'home',\n                        'value' =\u0026gt; '+9874654321',\n                    ],\n                ],\n            ]);\n\n\n            $paymentInstrumentForm = new Entities\\PaymentInstruments\\PaymentCardPaymentInstrument();\n\n            $paymentInstrumentForm-\u0026gt;setPan('4111111111111111');\n\n            $paymentInstrumentForm-\u0026gt;setExpYear(2025);\n\n            $paymentInstrumentForm-\u0026gt;setExpMonth(8);\n\n            $paymentInstrumentForm-\u0026gt;setCvv(123);\n\n\n            $paymentCardTokenForm-\u0026gt;setPaymentInstrument($paymentInstrumentForm);\n\n\n            try {\n                $paymentCardToken = $client-\u0026gt;paymentCardTokens()-\u0026gt;create($paymentCardTokenForm);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: |\n            // first set the properties for the new payment token\n            const data = {\n                method: 'payment-card',\n                paymentInstrument: {\n                    pan: '4111111111111111',\n                    expYear: 2022,\n                    expMonth: 12,\n                    cvv: '123'\n                },\n                billingAddress: {\n                  firstName: 'Johnny',\n                  lastName: 'Brown',\n                  emails: [{\n                      label: 'main',\n                      value: 'johnny+test@grr.la',\n                      primary: true\n                  }]\n                }\n            };\n\n            const token = await api.paymentTokens.create({data});\n      x-sdk-operation-name: create\n  \"/tokens/{token}\":\n    get:\n      description: |\n        Retrieve a token with specified identifier string.\n      operationId: GetToken\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CompositeToken\"\n          description: Token was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      security:\n        - PublishableApiKey: []\n      summary: Retrieve a token\n      tags:\n        - Payment Tokens\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $paymentCardToken = $client-\u0026gt;paymentCardTokens()-\u0026gt;load('tokenId');\n        - lang: JavaScript\n          source: \u003e-\n            const paymentToken = await api.paymentTokens.get({id: 'foobar-001'});\n\n            console.log(paymentToken.fields.method);\n      x-sdk-operation-name: get\n    parameters:\n      - description: The token identifier string.\n        in: path\n        name: token\n        required: true\n        schema:\n          type: string\n      - $ref: \"#/components/parameters/organizationId\"\n  /transactions:\n    get:\n      description: |\n        Retrieve a list of transactions.\n      operationId: GetTransactionCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionFilter\"\n        - $ref: \"#/components/parameters/collectionQuery\"\n        - $ref: \"#/components/parameters/collectionSort\"\n        - $ref: \"#/components/parameters/collectionExpand\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/Transaction\"\n                type: array\n          description: A list of transactions was retrieved successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Retrieve a list of transactions\n      tags:\n        - Transactions\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $transactions = $client-\u0026gt;transactions()-\u0026gt;search([\n                'filter' =\u0026gt; 'result:approved',\n            ]);\n        - lang: JavaScript\n          source: \u003e-\n            // all parameters are optional\n\n            const firstCollection = await api.transactions.getAll();\n\n\n            // alternatively you can specify one or more of them\n\n            const params = {limit: 20, offset: 100, sort: '-createdTime'}; \n\n            const secondCollection = await api.transactions.getAll(params);\n\n\n            // access the collection items, each item is a Member\n\n            secondCollection.items.forEach(transaction =\u0026gt; console.log(transaction.fields.type));\n\n\n\n\n            // alternatively, download as a CSV file\n\n\n            // all parameters are optional\n\n            const firstFile = await api.transactions.downloadCSV();\n\n\n            // alternatively you can specify one or more of them\n\n            const params = {limit: 20, offset: 100, sort: '-createdTime'}; \n\n            const secondFile = await api.transactions.downloadCSV(params);\n\n\n            // access the file data to view the CSV content \n\n            console.log(secondFile.data);\n      x-sdk-operation-name: getAll\n    parameters:\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Create a transaction of type `sale` or `authorize`.\n        This endpoint supports two main styles of transactions:\n          1. A real-time decision and response.\n          2. User approval/interaction is required.\n\n        A real-time decision is very familiar.  You send a request, and\n        inspect the `result` of the response for `approved` or `declined`.\n\n        However, many transactions, especially those for alternative\n        methods, require the user to interact with a 3rd party.  You\n        may be able to envision PayPal, for example, the user must\n        give permission to complete the payment (or accept the\n        billing agreement).\n\n        Even payment cards may require user approval in the case of\n        3D secure authentication.  In the event that approval is\n        required, you will receive a response back and notice\n        that the `result` is `unknown`.  You will find that the\n        `status` is `waiting-approval`. And you will find in the\n        `_links` section of the response a link for the `approvalUrl`.\n\n        In this case you would either open the `approvalUrl` in an\n        iframe or in a pop (better workflow for mobile).\n      operationId: PostTransaction\n      parameters:\n        - $ref: \"#/components/parameters/collectionExpand\"\n      requestBody:\n        $ref: \"#/components/requestBodies/TransactionRequest\"\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Transaction\"\n          description: Transaction was created.\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create a transaction\n      tags:\n        - Transactions\n      x-code-samples:\n        - lang: JavaScript\n          source: |\n            // first set the properties for the new transaction\n            const data = {\n                customerId: 'foobar-0001',\n                websiteId: 'my-main-website',\n                paymentInstrument: {\n                    method: 'payment-card',\n                    paymentCardId: 'my-payment-card-id',\n                    gatewayAccountId: 'my-gateway-account-id'\n                },\n                currency: 'USD',\n                amount: 12.99,\n                description: 'manual transaction',\n\n                // optionally you can specify a scheduled time\n                // to process the transaction at a later date\n                // scheduledTime: '2017-09-28T16:13:44Z'\n            };\n\n            const transaction = await api.transactions.create({data});\n      x-sdk-operation-name: create\n  \"/transactions/{id}\":\n    get:\n      description: |\n        Retrieve a Transaction with specified identifier string.\n      operationId: GetTransaction\n      parameters:\n        - $ref: \"#/components/parameters/collectionExpand\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Transaction\"\n          description: Transaction was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a Transaction\n      tags:\n        - Transactions\n      x-code-samples:\n        - lang: PHP\n          source: |\n            $transaction = $client-\u0026gt;transactions()-\u0026gt;load('transactionId');\n        - lang: JavaScript\n          source: |-\n            const transaction = await api.transactions.get({id: 'foobar-001'});\n            console.log(transaction.fields.billingAddress.firstName);\n      x-sdk-operation-name: get\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    patch:\n      description: |\n        Update a transaction's custom fields.\n      operationId: PatchTransaction\n      requestBody:\n        $ref: \"#/components/requestBodies/PatchTransactionRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Transaction\"\n          description: Transaction was updated successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Update a transaction\n      tags:\n        - Transactions\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            try {\n                $transaction = $client-\u0026gt;transactions()-\u0026gt;patch($transactionId, $data);\n            } catch (UnprocessableEntityException $e) {\n                echo $e-\u0026gt;getMessage();\n            }\n        - lang: JavaScript\n          source: \u003e\n            // first set the custom fields to update for the transaction\n\n            const data = {\n                customFields: {\n                    'myCustomField': 'myCustomData',\n                    'myOtherField': 'myOtherData',        \n                }\n            };\n\n\n            const transaction = await api.transactions.patch({id: 'my-transaction-id', data});\n      x-sdk-operation-name: patch\n  \"/transactions/{id}/query\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: \u003e\n        Query a Transaction with a specified identifier string.\n\n        The query will contact the gateway account to find the result and amount/currency.\n\n        The response should be analyzed.  If deemed appropriate, the transaction could be updated using the Transaction Update API.\n      operationId: PostTransactionQuery\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TransactionQuery\"\n          description: Transaction was queried successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Query a Transaction\n      tags:\n        - Transactions\n      x-sdk-operation-name: query\n  \"/transactions/{id}/refund\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: \u003e\n        Refund a Transaction with specified identifier string.\n\n        Note that the refund will be in the same currency as the original transaction.\n      operationId: PostTransactionRefund\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TransactionRefund\"\n        description: Transaction resource.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Transaction\"\n          description: Transaction was refunded successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Refund a Transaction\n      tags:\n        - Transactions\n      x-code-samples:\n        - lang: PHP\n          source: \u003e\n            $transaction = $client-\u0026gt;transactions()-\u0026gt;refund('transactionId',\n            1.99);\n        - lang: JavaScript\n          source: \u003e-\n            // define the refund amount\n\n            const data = {\n                amount: 12.99\n            };\n\n\n            const refund = await api.transactions.switch({id: 'my-transaction-id', data});\n\n            console.log(refund.fields.status);\n      x-sdk-operation-name: refund\n  \"/transactions/{id}/timeline\":\n    get:\n      description: |\n        Retrieve a list of transaction timeline messages.\n      operationId: GetTransactionTimelineCollection\n      parameters:\n        - $ref: \"#/components/parameters/collectionLimit\"\n        - $ref: \"#/components/parameters/collectionOffset\"\n        - $ref: \"#/components/parameters/collectionFilter\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/TransactionTimeline\"\n                type: array\n          description: A list of transaction timeline messages was retrieved successfully.\n          headers:\n            Pagination-Limit:\n              $ref: \"#/components/headers/Pagination-Limit\"\n            Pagination-Offset:\n              $ref: \"#/components/headers/Pagination-Offset\"\n            Pagination-Total:\n              $ref: \"#/components/headers/Pagination-Total\"\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n      summary: Retrieve a list of transaction timeline messages\n      tags:\n        - Transactions\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            // all parameters are optional except for the `id`\n\n            const firstCollection = await api.transactions\n                .getAllTimelineMessages({id: 'my-transaction'});\n\n            // alternatively you can specify one or more of them\n\n            const params = {id: 'my-transaction', limit: 20, offset: 100};\n\n            const secondCollection = await api.transactions.getAllTimelineMessages(params);\n\n\n            // access the collection items, each item is a Member\n\n            secondCollection.items\n                .forEach(message =\u0026gt; console.log(message.fields.eventType));\n      x-sdk-operation-name: getAllTimelineMessages\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: |\n        Create a transaction Timeline comment.\n      operationId: PostTransactionTimeline\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TransactionTimeline\"\n        description: Transaction Timeline resource.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TransactionTimeline\"\n          description: Transaction Timeline comment was created.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/ValidationError\"\n      summary: Create a transaction Timeline comment\n      tags:\n        - Transactions\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            // Create a comment\n\n            const firstComment = await api\n                .transactions.createTimelineComment({id: 'my-transaction-id', data: {message: 'Your comment here'}});\n\n            // Using params object, mentions and references\n\n            const message = `Example of mentions @user@mydomain.com and references #transactions-transaction-id`;\n\n            const params = {\n                id: 'my-transaction-id',\n                data: {\n                    message,\n                },\n            };\n\n            const secondComment = await api.transactions.createTimelineComment(params);\n      x-sdk-operation-name: createTimelineComment\n  \"/transactions/{id}/timeline/{messageId}\":\n    delete:\n      description: |\n        Delete a Transaction Timeline message with predefined identifier string.\n      operationId: DeleteTransactionTimeline\n      responses:\n        \"204\":\n          description: Transaction Timeline message was deleted.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"409\":\n          $ref: \"#/components/responses/Conflict\"\n      summary: Delete a Transaction Timeline message\n      tags:\n        - Transactions\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            const request = await api.transactions\n                .deleteTimelineMessage({id: 'foobar-001', messageId: 'message-202'});\n\n            // the request does not return any fields but\n\n            // you can confirm the success using the status code\n\n            console.log(request.response.status); // 204\n      x-sdk-operation-name: deleteTimelineMessage\n    get:\n      description: |\n        Retrieve a timeline message with specified identifier string.\n      operationId: GetTransactionTimeline\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TransactionTimeline\"\n          description: Timeline message was retrieved successfully.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Retrieve a transaction Timeline message\n      tags:\n        - Transactions\n      x-code-samples:\n        - lang: JavaScript\n          source: \u003e-\n            const message = await api.transactions\n                .getTimelineMessage({id: 'foobar-001', messageId: 'message-202'});\n            console.log(message.fields.eventType);\n      x-sdk-operation-name: getTimelineMessage\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - description: The Transaction Timeline message ID.\n        in: path\n        name: messageId\n        required: true\n        schema:\n          type: string\n      - $ref: \"#/components/parameters/organizationId\"\n  \"/transactions/{id}/update\":\n    parameters:\n      - $ref: \"#/components/parameters/resourceId\"\n      - $ref: \"#/components/parameters/organizationId\"\n    post:\n      description: Update a Transaction manually to completed status with given result\n        with optional currency and amount.\n      operationId: PostTransactionUpdate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TransactionUpdate\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Transaction\"\n          description: Transaction was updated.\n          headers:\n            Rate-Limit-Limit:\n              $ref: \"#/components/headers/Rate-Limit-Limit\"\n            Rate-Limit-Remaining:\n              $ref: \"#/components/headers/Rate-Limit-Remaining\"\n            Rate-Limit-Reset:\n              $ref: \"#/components/headers/Rate-Limit-Reset\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n      summary: Update a Transaction status\n      tags:\n        - Transactions\n      x-sdk-operation-name: update\ncomponents:\n  headers:\n    Location:\n      description: The location of the related resource.\n      schema:\n        format: url\n        type: string\n    Pagination-Limit:\n      description: Items per page limit.\n      schema:\n        type: integer\n    Pagination-Offset:\n      description: Pagination offset.\n      schema:\n        type: integer\n    Pagination-Total:\n      description: Total items count.\n      schema:\n        type: integer\n    Rate-Limit-Limit:\n      description: The number of allowed requests in the current period.\n      schema:\n        type: integer\n    Rate-Limit-Remaining:\n      description: The number of remaining requests in the current period.\n      schema:\n        type: integer\n    Rate-Limit-Reset:\n      description: \u003e\n        The date in format defined by [RFC\n        822](https://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1)\n\n        when the current period will reset.\n      schema:\n        type: string\n  parameters:\n    collectionExpand:\n      description: \u003e\n        Expand a response to get a full related object included inside of\n        the `_embedded` path in the response.\n\n        It accepts a comma-separated list of objects to expand.\n\n        See the [expand guide](https://api-reference.rebilly.com/#section/Expand-to-include-embedded-objects) for more info.\n      in: query\n      name: expand\n      schema:\n        type: string\n    collectionFields:\n      description: Limit the returned fields to the list specified, separated by\n        comma. Note that id is always returned.\n      in: query\n      name: fields\n      schema:\n        type: string\n    collectionFilter:\n      description: \u003e\n        The collection items filter requires a special format.\n\n        Use \",\" for multiple allowed values.  Use \";\" for multiple fields.\n\n        See the [filter guide](https://api-reference.rebilly.com/#section/Using-filter-with-collections) for more options and examples about this format.\n      in: query\n      name: filter\n      schema:\n        type: string\n    collectionLimit:\n      description: The collection items limit.\n      in: query\n      name: limit\n      schema:\n        maximum: 1000\n        minimum: 0\n        type: integer\n    collectionOffset:\n      description: The collection items offset.\n      in: query\n      name: offset\n      schema:\n        minimum: 0\n        type: integer\n    collectionQuery:\n      description: The partial search of the text fields.\n      in: query\n      name: q\n      schema:\n        type: string\n    collectionSort:\n      description: The collection items sort field and order (prefix with \"-\" for\n        descending sort).\n      explode: false\n      in: query\n      name: sort\n      schema:\n        items:\n          type: string\n        type: array\n      style: form\n    customFieldResource:\n      description: The resource type string.\n      in: path\n      name: resource\n      required: true\n      schema:\n        enum:\n          - customers\n          - payment-instruments\n          - subscriptions\n          - transactions\n          - websites\n          - products\n          - plans\n          - bump-offers\n        type: string\n    customerId:\n      description: The customer identifier string.\n      in: path\n      name: customerId\n      required: true\n      schema:\n        maxLength: 50\n        pattern: ^[@~\\-\\.\\w]+$\n        type: string\n    imageSize:\n      description: Resize image to specified size. Supports any sizes from 10x10 to\n        2000x2000 (format `{width}x{height}`). The image will be returned in the\n        original size if the value is invalid. This parameter will be ignored\n        for non-image files.\n      in: query\n      name: imageSize\n      schema:\n        example: 700x700\n        pattern: ^[1-9]{1}[0-9]{1,3}x[1-9]{1}[0-9]{1,3}$\n        type: string\n    mediaTypeJsonPdf:\n      description: The response media type.\n      in: header\n      name: Accept\n      schema:\n        default: application/json\n        enum:\n          - application/json\n          - application/pdf\n        type: string\n    organizationId:\n      description: Organization identifier in scope of which need to perform request\n        (if not specified, the default organization will be used).\n      in: header\n      name: Organization-Id\n      required: false\n      schema:\n        $ref: \"#/components/schemas/ResourceId\"\n    resourceId:\n      description: The resource identifier string.\n      in: path\n      name: id\n      required: true\n      schema:\n        maxLength: 50\n        pattern: ^[@~\\-\\.\\w]+$\n        type: string\n    subscriptionExpand:\n      description: \u003e\n        Expand a response to get a full related object included inside of\n        the `_embedded` path in the response.\n\n        To expand multiple objects, it accepts a comma-separated list of objects (example: `expand=recentInvoice,initialInvoice`).\n\n        Available arguments are:\n          - recentInvoice\n          - initialInvoice\n          - customer\n          - website\n\n        See the [expand guide](https://api-reference.rebilly.com/#section/Expand-to-include-embedded-objects) for more info.\n      in: query\n      name: expand\n      schema:\n        type: string\n    tag:\n      description: The tag name.\n      in: path\n      name: tag\n      required: true\n      schema:\n        pattern: ^[@~\\-\\.\\w\\s]+$\n        type: string\n  requestBodies:\n    Attachment:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Attachment\"\n      description: Attachment resource.\n      required: true\n    Blocklist:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Blocklist\"\n      description: Blocklist resource.\n      required: true\n    Coupon:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Coupon\"\n      description: Coupon resource.\n      required: true\n    Credential:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Credential\"\n      description: Credential resource.\n      required: true\n    Customer:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Customer\"\n      description: Customer resource.\n      required: true\n    Customer-2:\n      content:\n        application/json:\n          schema:\n            properties:\n              _embedded:\n                properties:\n                  customer:\n                    $ref: \"#/components/schemas/Customer\"\n                type: object\n              _links:\n                description: The links related to resource.\n                items:\n                  anyOf:\n                    - $ref: \"#/components/schemas/CustomerLink\"\n                minItems: 1\n                type: array\n              customerId:\n                description: The customer ID.\n                type: string\n              eventType:\n                $ref: \"#/components/schemas/GlobalWebhookEventType\"\n      description: Customer webhook request body resource.\n    Dispute:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Dispute\"\n      description: Dispute resource.\n      required: true\n    Dispute-2:\n      content:\n        application/json:\n          schema:\n            properties:\n              _embedded:\n                properties:\n                  dispute:\n                    $ref: \"#/components/schemas/Dispute\"\n                type: object\n              _links:\n                description: The links related to resource.\n                items:\n                  anyOf:\n                    - $ref: \"#/components/schemas/DisputeLink\"\n                minItems: 1\n                type: array\n              disputeId:\n                description: The dispute ID.\n                type: string\n              eventType:\n                $ref: \"#/components/schemas/GlobalWebhookEventType\"\n      description: Dispute webhook request body resource.\n    ExperianCheckPerformed:\n      content:\n        application/json:\n          schema:\n            properties:\n              _embedded:\n                description: Customer object.\n                properties:\n                  customer:\n                    $ref: \"#/components/schemas/Customer\"\n                type: object\n              _links:\n                description: The links related to resource.\n                items:\n                  anyOf:\n                    - $ref: \"#/components/schemas/CustomerLink\"\n                minItems: 1\n                type: array\n              customerId:\n                description: The ID of the checked customer.\n                type: string\n              errorCode:\n                description: Error code produced by the Experian system.\n                example: \"001\"\n                type: string\n              errorMessage:\n                description: Error message produced by the Experian system.\n                example: \"Authentication Error: Bad Username or Password\"\n                type: string\n              eventType:\n                $ref: \"#/components/schemas/GlobalWebhookEventType\"\n              outcome:\n                description: The check decision where `1` - record matches, `0` - no matches\n                  found, `-1` - record mismatches.\n                enum:\n                  - -1\n                  - 0\n                  - 1\n                example: 1\n                type: integer\n              reason:\n                description: The text representation of the outcome.\n                example: Individual has a 90 percent or greater match to forename surname\n                  premise postcode with ID verified and DOB\n                type: string\n      description: Experian check performed webhook request body resource.\n    GatewayAccount:\n      content:\n        application/json:\n          schema:\n            properties:\n              _embedded:\n                properties:\n                  gatewayAccount:\n                    $ref: \"#/components/schemas/GatewayAccount\"\n                type: object\n              _links:\n                description: The links related to resource.\n                items:\n                  anyOf:\n                    - $ref: \"#/components/schemas/GatewayAccountLink\"\n                minItems: 1\n                type: array\n              eventType:\n                $ref: \"#/components/schemas/GlobalWebhookEventType\"\n              gatewayAccountId:\n                description: The gateway account ID.\n                type: string\n      description: Gateway account limit was reached body resource.\n    GatewayAccountAndGatewayAccountLimit:\n      content:\n        application/json:\n          schema:\n            properties:\n              _embedded:\n                properties:\n                  gatewayAccount:\n                    $ref: \"#/components/schemas/GatewayAccount\"\n                  gatewayAccountLimit:\n                    $ref: \"#/components/schemas/GatewayAccountLimit\"\n                type: object\n              _links:\n                description: The links related to resource.\n                items:\n                  anyOf:\n                    - $ref: \"#/components/schemas/GatewayAccountLink\"\n                    - $ref: \"#/components/schemas/GatewayAccountLimitLink\"\n                minItems: 2\n                type: array\n              eventType:\n                $ref: \"#/components/schemas/GlobalWebhookEventType\"\n              gatewayAccountId:\n                description: The gateway account ID.\n                type: string\n      description: Gateway account limit was reached body resource.\n    Invoice:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Invoice\"\n      description: Invoice resource.\n      required: true\n    Invoice-2:\n      content:\n        application/json:\n          schema:\n            properties:\n              _embedded:\n                properties:\n                  invoice:\n                    $ref: \"#/components/schemas/Invoice\"\n                type: object\n              _links:\n                description: The links related to resource.\n                items:\n                  anyOf:\n                    - $ref: \"#/components/schemas/InvoiceLink\"\n                minItems: 1\n                type: array\n              eventType:\n                $ref: \"#/components/schemas/GlobalWebhookEventType\"\n              invoiceId:\n                description: The invoice ID.\n                type: string\n      description: Invoice webhook request body resource.\n    InvoiceAndSubscription:\n      content:\n        application/json:\n          schema:\n            properties:\n              _embedded:\n                properties:\n                  invoice:\n                    $ref: \"#/components/schemas/Invoice\"\n                  subscription:\n                    $ref: \"#/components/schemas/Subscription\"\n                type: object\n              _links:\n                description: The links related to resource.\n                items:\n                  anyOf:\n                    - $ref: \"#/components/schemas/SubscriptionLink\"\n                    - $ref: \"#/components/schemas/InvoiceLink\"\n                minItems: 2\n                type: array\n              eventType:\n                $ref: \"#/components/schemas/GlobalWebhookEventType\"\n              invoiceId:\n                description: The invoice ID.\n                type: string\n              subscriptionId:\n                description: The order ID.\n                type: string\n      description: Invoice and Order webhook request body resource.\n    InvoiceAndTransaction:\n      content:\n        application/json:\n          schema:\n            properties:\n              _embedded:\n                properties:\n                  invoice:\n                    $ref: \"#/components/schemas/Invoice\"\n                  transaction:\n                    $ref: \"#/components/schemas/Transaction\"\n                type: object\n              _links:\n                description: The links related to resource.\n                items:\n                  anyOf:\n                    - $ref: \"#/components/schemas/TransactionLink\"\n                    - $ref: \"#/components/schemas/InvoiceLink\"\n                minItems: 2\n                type: array\n              eventType:\n                $ref: \"#/components/schemas/GlobalWebhookEventType\"\n              invoiceId:\n                description: The invoice ID.\n                type: string\n              transactionId:\n                description: The transaction ID.\n                type: string\n      description: Invoice and Transaction webhook request body resource.\n    KycDocument:\n      content:\n        application/json:\n          schema:\n            properties:\n              _embedded:\n                properties:\n                  customer:\n                    $ref: \"#/components/schemas/Customer\"\n                  kycDocument:\n                    $ref: \"#/components/schemas/KycDocument-2\"\n                type: object\n              _links:\n                description: The links related to resource.\n                items:\n                  anyOf:\n                    - $ref: \"#/components/schemas/CustomerLink\"\n                    - $ref: \"#/components/schemas/FileLink\"\n                    - $ref: \"#/components/schemas/KycDocumentLink\"\n                minItems: 3\n                type: array\n              customerId:\n                description: The customer ID.\n                type: string\n              eventType:\n                $ref: \"#/components/schemas/GlobalWebhookEventType\"\n              fileId:\n                description: The file ID.\n                type: string\n              kycDocumentId:\n                description: The KYC document ID.\n                type: string\n      description: KYC document webhook request body resource.\n    MergedCustomer:\n      content:\n        application/json:\n          schema:\n            properties:\n              _embedded:\n                description: Customer object.\n                properties:\n                  targetCustomer:\n                    $ref: \"#/components/schemas/Customer\"\n                type: object\n              _links:\n                description: The links related to resource.\n                items:\n                  anyOf:\n                    - $ref: \"#/components/schemas/CustomerLink\"\n                minItems: 1\n                type: array\n              duplicatedCustomer:\n                $ref: \"#/components/schemas/Customer\"\n              eventType:\n                $ref: \"#/components/schemas/GlobalWebhookEventType\"\n              targetCustomerId:\n                description: The ID of the customer containing the merged data.\n                type: string\n      description: Merged customer webhook request body resource.\n    PatchKycRequest:\n      content:\n        application/json:\n          schema:\n            allOf:\n              - properties:\n                  customerId:\n                    readOnly: true\n              - $ref: \"#/components/schemas/KycRequest\"\n    PatchPaymentInstrument:\n      content:\n        application/json:\n          schema:\n            oneOf:\n              - $ref: \"#/components/schemas/PaymentInstrumentUpdateToken\"\n              - $ref: \"#/components/schemas/PaymentCardUpdatePlain\"\n              - $ref: \"#/components/schemas/BankAccountUpdatePlain\"\n      description: PaymentInstrument resource.\n      required: true\n    PatchTransactionRequest:\n      content:\n        application/json:\n          schema:\n            properties:\n              customFields:\n                $ref: \"#/components/schemas/ResourceCustomFields\"\n            type: object\n      description: Use the patch transaction request to modify custom fields.\n      required: true\n    PaymentCard:\n      content:\n        application/json:\n          schema:\n            properties:\n              _embedded:\n                properties:\n                  paymentCard:\n                    $ref: \"#/components/schemas/PaymentCard\"\n                type: object\n              _links:\n                description: The links related to resource.\n                items:\n                  anyOf:\n                    - $ref: \"#/components/schemas/PaymentCardLink\"\n                minItems: 1\n                type: array\n              eventType:\n                $ref: \"#/components/schemas/GlobalWebhookEventType\"\n              paymentCardId:\n                description: The payment card ID.\n                type: string\n      description: Payment card webhook request body resource.\n    PayoutRequest:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/PayoutRequest\"\n      description: Transaction resource.\n      required: true\n    Plan:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Plan\"\n      description: Plan resource.\n      required: true\n    PostPaymentInstrument:\n      content:\n        application/json:\n          schema:\n            anyOf:\n              - $ref: \"#/components/schemas/PaymentInstrumentCreateToken\"\n              - $ref: \"#/components/schemas/PaymentCardCreatePlain\"\n              - $ref: \"#/components/schemas/BankAccountCreatePlain\"\n              - $ref: \"#/components/schemas/PayPalAccount\"\n      description: PaymentInstrument resource.\n      required: true\n    Product:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Product\"\n      description: Product resource.\n      required: true\n    Subscription:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Subscription\"\n      description: Order resource.\n      required: true\n    Subscription-2:\n      content:\n        application/json:\n          schema:\n            properties:\n              _embedded:\n                properties:\n                  subscription:\n                    $ref: \"#/components/schemas/Subscription\"\n                type: object\n              _links:\n                description: The links related to resource.\n                items:\n                  anyOf:\n                    - $ref: \"#/components/schemas/SubscriptionLink\"\n                minItems: 1\n                type: array\n              eventType:\n                $ref: \"#/components/schemas/GlobalWebhookEventType\"\n              subscriptionId:\n                description: The order ID.\n                type: string\n      description: Order webhook request body resource.\n    SubscriptionCancellation:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/SubscriptionCancellation\"\n      description: Cancellation resource.\n      required: true\n    Tag:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Tag\"\n      description: Tag resource.\n      required: true\n    Transaction:\n      content:\n        application/json:\n          schema:\n            properties:\n              _embedded:\n                properties:\n                  transaction:\n                    $ref: \"#/components/schemas/Transaction\"\n                type: object\n              _links:\n                description: The links related to resource.\n                items:\n                  anyOf:\n                    - $ref: \"#/components/schemas/TransactionLink\"\n                minItems: 1\n                type: array\n              eventType:\n                $ref: \"#/components/schemas/GlobalWebhookEventType\"\n              transactionId:\n                description: The transaction ID.\n                type: string\n      description: Transaction webhook request body resource.\n    TransactionRequest:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/TransactionRequest\"\n      description: Transaction resource.\n      required: true\n  responses:\n    Conflict:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Conflict.\n    Customer:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Customer\"\n      description: Customer.\n      headers:\n        Rate-Limit-Limit:\n          $ref: \"#/components/headers/Rate-Limit-Limit\"\n        Rate-Limit-Remaining:\n          $ref: \"#/components/headers/Rate-Limit-Remaining\"\n        Rate-Limit-Reset:\n          $ref: \"#/components/headers/Rate-Limit-Reset\"\n    Forbidden:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Access forbidden.\n    Found:\n      description: Resource was moved.\n      headers:\n        Location:\n          schema:\n            type: string\n    NotFound:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Resource was not found.\n    Unauthorized:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n      description: Unauthorized access, invalid credentials was used.\n    ValidationError:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/InvalidError\"\n      description: Invalid data was sent.\n  schemas:\n    A1Gateway:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: A1Gateway credentials object.\n              properties:\n                accountId:\n                  description: A1Gateway account ID.\n                  type: string\n                password:\n                  description: A1Gateway password.\n                  format: password\n                  type: string\n              required:\n                - accountId\n                - password\n              type: object\n            threeDSecureServer:\n              $ref: \"#/components/schemas/A1Gateway3dsServers\"\n          required:\n            - credentials\n          type: object\n      description: A1Gateway config.\n    A1Gateway3dsServers:\n      description: A1Gateway 3DS Servers.\n      discriminator:\n        mapping:\n          Other: \"#/components/schemas/Other\"\n          Paay3dsServer: \"#/components/schemas/Paay3dsServer\"\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/ThreeDSecureServerName\"\n          enum:\n            - Paay3dsServer\n            - Other\n      required:\n        - name\n      type: object\n    AML:\n      properties:\n        _links:\n          description: The links related to resource, including links provided by the list.\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        address:\n          description: Addresses related to the identity.\n          items:\n            properties:\n              address:\n                description: Street Address Line 1.\n                nullable: true\n                readOnly: true\n                type: string\n              address2:\n                description: Street Address Line 2.\n                nullable: true\n                readOnly: true\n                type: string\n              birthplace:\n                default: false\n                description: This address is their birth place.\n                readOnly: true\n                type: boolean\n              city:\n                description: City.\n                nullable: true\n                readOnly: true\n                type: string\n              country:\n                description: Country.\n                nullable: true\n                readOnly: true\n                type: string\n              region:\n                description: State/Province/Region.\n                nullable: true\n                readOnly: true\n                type: string\n            type: object\n          readOnly: true\n          type: array\n        aliases:\n          description: List of aliases, if any.\n          items:\n            properties:\n              authenticity:\n                description: The level of confidence in the alias.\n                enum:\n                  - strong\n                  - weak\n                  - unknown\n                readOnly: true\n                type: string\n              firstName:\n                description: First name of alias.\n                readOnly: true\n                type: string\n              lastName:\n                description: Last name of alias.\n                readOnly: true\n                type: string\n            type: object\n          readOnly: true\n          type: array\n        comments:\n          description: Extra information (the content varies per list).\n          nullable: true\n          readOnly: true\n          type: string\n        confidence:\n          description: The source list's confidence in information.\n          enum:\n            - weak\n            - medium\n            - strong\n            - very-strong\n          readOnly: true\n          type: string\n        dob:\n          description: One or more possible dates of birth.\n          items:\n            description: Date of birth.\n            example: 1706-01-17T00:00:00.000Z\n            format: date\n            readOnly: true\n            type: string\n          readOnly: true\n          type: array\n        firstName:\n          description: First Name.\n          example: Benjamin\n          readOnly: true\n          type: string\n        gender:\n          description: Gender of returned identity (if `type` is `individual`).\n          nullable: true\n          readOnly: true\n          type: string\n        lastName:\n          description: Last Name. `null` if it is a single-name entity.\n          example: Franklin\n          nullable: true\n          readOnly: true\n          type: string\n        legalBasis:\n          description: List of references to legal documents if they exist.\n          items:\n            type: string\n          readOnly: true\n          type: array\n        nationality:\n          description: The nationality of the identity.\n          readOnly: true\n          type: string\n        passport:\n          description: Passport information.\n          items:\n            properties:\n              number:\n                description: Passport number.\n                readOnly: true\n                type: string\n              registrationDate:\n                description: Passport registration date.\n                format: date\n                readOnly: true\n                type: string\n            type: object\n          readOnly: true\n          type: array\n        regime:\n          description: Regime.\n          example: United States Government\n          nullable: true\n          readOnly: true\n          type: string\n        source:\n          description: Which list this came from.\n          readOnly: true\n          type: string\n        sourceType:\n          description: The list type.\n          enum:\n            - pep\n            - sanctions\n            - adverse-media\n          readOnly: true\n          type: string\n        title:\n          description: The title of their position.\n          example:\n            - Postmaster General\n            - Ambassador to France\n            - Ambassador to Sweden\n            - Supreme Executive Council of Commonwealth of Pennsylvania\n          items:\n            type: string\n          nullable: true\n          readOnly: true\n          type: array\n        type:\n          description: The record type.\n          enum:\n            - individual\n            - entity\n          readOnly: true\n          type: string\n      type: object\n    AchPlaidFeature:\n      properties:\n        expirationTime:\n          description: The expiration time of a `linkToken`.\n          format: date-time\n          type: string\n        linkToken:\n          description: The Plaid `linkToken` for frontend integrations.\n          type: string\n        name:\n          description: The feature name.\n          enum:\n            - Plaid\n          type: string\n      title: Plaid\n      type: object\n    Acl:\n      items:\n        properties:\n          permissions:\n            allOf:\n              - $ref: \"#/components/schemas/AclPermissions\"\n            description: Specify individual permission here if creating a restricted API\n              key. Use wildcard `*` for full access.\n          scope:\n            allOf:\n              - $ref: \"#/components/schemas/ApiKeyScope\"\n            description: Api Key scope.\n        required:\n          - scope\n          - permissions\n        type: object\n      type: array\n    AclPermissions:\n      example:\n        - PostFile\n        - StorefrontGetAccount\n        - StorefrontGetWebsite\n        - StorefrontGetKycDocumentCollection\n        - StorefrontGetKycDocument\n        - StorefrontPostKycDocument\n      items:\n        format: operationId\n        type: string\n      type: array\n    AcquirerName:\n      description: The acquirer name.\n      enum:\n        - Adyen\n        - Alipay\n        - AIB\n        - Airpay\n        - ApcoPay\n        - AsiaPaymentGateway\n        - AstroPay Card\n        - Ipay Options\n        - B+S\n        - Bambora\n        - BitPay\n        - Bank of America\n        - Bank of Moscow\n        - Bank of Rebilly\n        - Bank One\n        - BMO Harris Bank\n        - Borgun\n        - BraintreePayments\n        - Cardknox\n        - CASHlib\n        - CashToCode\n        - Catalunya Caixa\n        - CCAvenue\n        - Chase\n        - ChinaUnionPay\n        - CIM\n        - Circle\n        - Citadel\n        - Clearhaus\n        - CODVoucher\n        - CoinPayments\n        - Conekta\n        - Coppr\n        - Credorax\n        - Cryptonator\n        - CyberSource\n        - dLocal\n        - Dragonphoenix\n        - EBANX\n        - ecoPayz\n        - EcorePay\n        - Elavon\n        - EMS\n        - EPG\n        - Euteller\n        - eZeeWallet\n        - ezyEFT\n        - Fifth Third Bank\n        - Finrax\n        - First Data Buypass\n        - First Data Nashville\n        - First Data North\n        - First Data Omaha\n        - FinTecSystems\n        - Flexepin\n        - Forte\n        - FundSend\n        - Gigadat\n        - Global East\n        - Gooney\n        - Gpaysafe\n        - Heartland\n        - HiPay\n        - HSBC\n        - iCanPay\n        - ICEPAY\n        - iCheque\n        - Ilixium\n        - Ingenico\n        - INOVAPAY\n        - Intuit\n        - Jeton\n        - Khelocard\n        - Konnektive\n        - loonie\n        - LPG\n        - Masapay\n        - Merrick\n        - Mission Valley Bank\n        - MiFinity\n        - Moneris\n        - MuchBetter\n        - MyFatoorah\n        - NATWEST\n        - Neosurf\n        - Netbanking\n        - Neteller\n        - NinjaWallet\n        - NMI\n        - NuaPay\n        - OchaPay\n        - Onlineueberweisen\n        - OnRamp\n        - Other\n        - Panamerican\n        - Panda Bank\n        - Paramount\n        - ParamountEft\n        - ParamountInterac\n        - Pay4fun\n        - PayCash\n        - PayClub\n        - PaymentAsia\n        - PaymenTechnologies\n        - PaymentsOS\n        - Paymero\n        - Paynetics\n        - PayPal\n        - Payr\n        - PayTabs\n        - PayULatam\n        - Payvision\n        - Piastrix\n        - Peoples Trust Company\n        - PostFinance\n        - Privatbank\n        - Prosa\n        - QQPay\n        - Rapyd\n        - RBC\n        - RBS WorldPay\n        - RealTime\n        - Rotessa\n        - SaltarPay\n        - SecureTrading\n        - SecurionPay\n        - Skrill\n        - SmartInvoice\n        - SMSVoucher\n        - Sofort\n        - SparkPay\n        - State Bank of Mauritius\n        - Stripe\n        - TBI\n        - TestProcessor\n        - ToditoCash\n        - Trustly\n        - TrustPay\n        - TrustsPay\n        - TSYS\n        - TWINT\n        - UPayCard\n        - Vantiv\n        - VCreditos\n        - VoicePay\n        - Wallet88\n        - WeChat Pay\n        - Wells Fargo\n        - Wing Hang Bank\n        - Wirecard\n        - WorldPay\n        - XPay\n        - Zimpler\n        - Zotapay\n      type: string\n    AddressMatches:\n      properties:\n        city:\n          description: The customer city if it was matched, null otherwise.\n          example: London\n          type: string\n        date:\n          description: The date on the document proving the document is recent.\n          example: 2021-01-01T00:00:00.000Z\n          format: date\n          type: string\n        firstName:\n          description: The customer first name if it was matched, null otherwise.\n          example: John\n          type: string\n        lastName:\n          description: The customer last name if it was matched, null otherwise.\n          example: Doe\n          type: string\n        line1:\n          description: The customer address if it was matched, null otherwise.\n          example: 36 Craven St\n          type: string\n        phone:\n          description: The phone of the company or agency that sent the document.\n          example: (123) 456-7890\n          type: string\n        postalCode:\n          description: The customer postal code if it was matched, null otherwise.\n          example: WC2N 5NF\n          type: string\n        region:\n          description: The customer region if it was matched, null otherwise.\n          example: London\n          type: string\n        uniqueWords:\n          description: The number of unique words in the document.\n          example: 175\n          type: integer\n        uniqueWordsResult:\n          description: Flag that indicates if the unique words passed the threshold.\n          example: true\n          readOnly: true\n          type: boolean\n        wordCount:\n          description: The number of words in the document.\n          example: 350\n          type: integer\n        wordCountResult:\n          description: Flag that indicates if the word count passed the threshold.\n          example: true\n          readOnly: true\n          type: boolean\n      type: object\n    Adyen:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Adyen credentials object.\n              properties:\n                apiKey:\n                  description: Adyen api key.\n                  format: password\n                  type: string\n                merchantAccount:\n                  description: Adyen merchant account.\n                  type: string\n              required:\n                - merchantAccount\n                - apiKey\n              type: object\n            settings:\n              description: Adyen settings object.\n              properties:\n                url:\n                  description: Adyen post URL.\n                  type: string\n              required:\n                - url\n              type: object\n          required:\n            - credentials\n            - settings\n          type: object\n      description: Adyen config.\n    Airpay:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Airpay credentials object.\n              properties:\n                apiKey:\n                  description: Airpay api key.\n                  format: password\n                  type: string\n                merchantId:\n                  description: Airpay merchant ID.\n                  type: string\n                password:\n                  description: Airpay password.\n                  format: password\n                  type: string\n                username:\n                  description: Airpay username.\n                  type: string\n              required:\n                - username\n                - merchantId\n                - password\n                - apiKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Airpay config.\n    AlternativePaymentInstrument:\n      description: Alternative payment method instrument.\n      properties:\n        method:\n          $ref: \"#/components/schemas/PaymentMethod\"\n        paymentInstrumentId:\n          description: The payment instrument ID.\n      required:\n        - method\n      title: Alternative instrument\n      type: object\n    AlternativePaymentInstrument-2:\n      properties:\n        _embedded:\n          description: Any embedded objects available that are requested by the `expand`\n            querystring parameter.\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/CustomerEmbed\"\n          minItems: 1\n          readOnly: true\n          type: array\n        _links:\n          description: Links related to the resource.\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/SelfLink\"\n              - $ref: \"#/components/schemas/CustomerLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        billingAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: The billing address.\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The payment instrument created time.\n        customFields:\n          $ref: \"#/components/schemas/ResourceCustomFields\"\n        customerId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Customer's ID.\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The payment instrument ID.\n        method:\n          allOf:\n            - $ref: \"#/components/schemas/AlternativePaymentMethods\"\n          description: The method of payment instrument.\n        riskMetadata:\n          $ref: \"#/components/schemas/RiskMetadata\"\n        status:\n          description: The payment instrument status.\n          enum:\n            - active\n            - deactivated\n          type: string\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The payment instrument updated time.\n      title: Alternative instrument\n      type: object\n    AlternativePaymentMethods:\n      enum:\n        - cash\n        - check\n        - paypal\n        - AdvCash\n        - Alfa-click\n        - Alipay\n        - AstroPay Card\n        - AstroPay-GO\n        - bank-transfer\n        - bank-transfer-2\n        - bank-transfer-3\n        - bank-transfer-4\n        - bank-transfer-5\n        - bank-transfer-6\n        - bank-transfer-7\n        - bank-transfer-8\n        - bank-transfer-9\n        - Beeline\n        - Belfius-direct-net\n        - bitcoin\n        - Boleto\n        - cash-deposit\n        - CASHlib\n        - CashToCode\n        - China UnionPay\n        - CODVoucher\n        - Conekta-oxxo\n        - Cupon-de-pagos\n        - cryptocurrency\n        - domestic-cards\n        - echeck\n        - ecoPayz\n        - ecoVoucher\n        - EPS\n        - ePay.bg\n        - eZeeWallet\n        - Flexepin\n        - Giropay\n        - Gpaysafe\n        - Google Pay\n        - iDebit\n        - iDEAL\n        - ING-homepay\n        - INOVAPAY-pin\n        - INOVAPAY-wallet\n        - InstaDebit\n        - instant-bank-transfer\n        - Interac\n        - Interac-online\n        - Interac-eTransfer\n        - invoice\n        - iWallet\n        - Jeton\n        - jpay\n        - Khelocard\n        - Klarna\n        - loonie\n        - Megafon\n        - MiFinity-eWallet\n        - miscellaneous\n        - Bancontact\n        - MTS\n        - MuchBetter\n        - Neosurf\n        - Netbanking\n        - Neteller\n        - Nordea-Solo\n        - OchaPay\n        - online-bank-transfer\n        - Onlineueberweisen\n        - oriental-wallet\n        - OXXO\n        - Pagsmile-deposit-express\n        - Pagsmile-lottery\n        - PayCash\n        - Payeer\n        - PaymentAsia-crypto\n        - Paymero\n        - Perfect-money\n        - Piastrix\n        - plaid-account\n        - PayTabs\n        - Paysafecard\n        - Paysafecash\n        - Pay4Fun\n        - PinPay\n        - phone\n        - PhonePe\n        - POLi\n        - PostFinance-card\n        - PostFinance-e-finance\n        - Przelewy24\n        - QIWI\n        - QQPay\n        - Resurs\n        - SEPA\n        - Skrill\n        - Skrill Rapid Transfer\n        - SMSVoucher\n        - Sofort\n        - SparkPay\n        - swift-dbt\n        - Tele2\n        - Terminaly-RF\n        - ToditoCash-card\n        - Trustly\n        - UPayCard\n        - UPI\n        - VCreditos\n        - VenusPoint\n        - voucher\n        - voucher-2\n        - voucher-3\n        - voucher-4\n        - Webmoney\n        - Webpay\n        - Webpay-2\n        - Webpay Card\n        - WeChat Pay\n        - XPay-P2P\n        - XPay-QR\n        - Yandex-money\n        - Zotapay\n        - Zimpler\n      type: string\n    AlternativePaymentToken:\n      allOf:\n        - $ref: \"#/components/schemas/CommonPaymentToken\"\n      properties:\n        billingAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: The billing address object.\n        method:\n          allOf:\n            - $ref: \"#/components/schemas/AlternativePaymentMethods\"\n          description: The token payment method.\n      required:\n        - method\n        - billingAddress\n      title: Alternative payment token.\n      type: object\n    AmexVPC:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: AmexVPC credentials object.\n              properties:\n                accessCode:\n                  description: Access Code.\n                  format: password\n                  type: string\n                merchantId:\n                  description: Merchant ID.\n                  type: string\n                password:\n                  description: Password (used for refund, void and capture).\n                  format: password\n                  type: string\n                user:\n                  description: User (used for refund, void and capture).\n                  type: string\n              required:\n                - merchantId\n                - accessCode\n                - user\n                - password\n              type: object\n            settings:\n              description: AmexVPC settings object.\n              properties:\n                url:\n                  description: Virtual Payment Client URL.\n                  type: string\n              required:\n                - url\n              type: object\n          required:\n            - credentials\n            - settings\n          type: object\n      description: AmexVPC config.\n    AmountAdjustment:\n      discriminator:\n        mapping:\n          discount: \"#/components/schemas/discount\"\n          partial: \"#/components/schemas/partial\"\n        propertyName: method\n      properties:\n        method:\n          enum:\n            - none\n            - partial\n            - discount\n          type: string\n      required:\n        - method\n      type: object\n    AmountAdjustmentTolerance:\n      description: Tolerance percentage for settled amount.\n      example: 5\n      maximum: 5\n      minimum: 0\n      type: integer\n    ApcoPay:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: ApcoPay credentials object.\n              properties:\n                MerchantID:\n                  description: ApcoPay merchant ID.\n                  type: string\n                MerchantPassword:\n                  description: ApcoPay merchant password.\n                  format: password\n                  type: string\n                profileID:\n                  description: ApcoPay profile ID.\n                  type: string\n                secretWord:\n                  description: ApcoPay secret word.\n                  format: password\n                  type: string\n              required:\n                - profileID\n                - secretWord\n                - MerchantID\n                - MerchantPassword\n              type: object\n            settings:\n              properties:\n                method:\n                  description: ApcoPay's method.\n                  enum:\n                    - AFTERPAY\n                    - IDEAL\n                    - CREDITCLICK\n                    - BANCONTACT\n                    - ONLINEUBERWEISEN\n                  type: string\n              required:\n                - method\n              type: object\n          required:\n            - credentials\n          type: object\n      description: ApcoPay config.\n    ApiKeyScope:\n      example:\n        organizationId:\n          - organizationId-id-1\n      properties:\n        customFieldName:\n          description: The array of custom field names.\n          items:\n            maxLength: 60\n            pattern: ^[\\w-]+$\n            type: string\n          type: array\n        organizationId:\n          description: The array of account identifier strings.\n          items:\n            allOf:\n              - $ref: \"#/components/schemas/ResourceId\"\n          type: array\n        planId:\n          description: The array of plan identifier strings.\n          items:\n            allOf:\n              - $ref: \"#/components/schemas/ResourceId\"\n          type: array\n        productId:\n          description: The array of product identifier strings.\n          items:\n            allOf:\n              - $ref: \"#/components/schemas/ResourceId\"\n          type: array\n      type: object\n    ApplePayValidation:\n      allOf:\n        - $ref: \"#/components/schemas/DigitalWalletValidation\"\n        - properties:\n            type:\n              type: string\n            validationRequest:\n              description: The validation request.\n              properties:\n                displayName:\n                  description: A name of your store, suitable for display.\n                  example: My Store\n                  type: string\n                domainName:\n                  description: \u003e\n                    The domain where the client code like FramePay is executed. Should\n                    be registered in the Apple Pay console by Rebilly before\n                    using.\n                  example: www.example.com\n                  type: string\n                validationURL:\n                  description: The URL provided by the Apple Pay SDK to perform the validation.\n                  type: string\n              type: object\n              writeOnly: true\n            validationResponse:\n              description: The validation response to use by the Apple Pay SDK to proceed.\n              readOnly: true\n              type: object\n          required:\n            - validationRequest\n          type: object\n      description: Apple Pay session validation.\n    ApprovalUrlLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - approvalUrl\n          type: string\n      required:\n        - rel\n      type: object\n    AsiaPaymentGateway:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: AsiaPaymentGateway credentials object.\n              properties:\n                merchantNumber:\n                  description: AsiaPaymentGateway merchant number.\n                  type: string\n                secretKey:\n                  description: AsiaPaymentGateway secret key for hash.\n                  format: password\n                  type: string\n              required:\n                - merchantNumber\n                - secretKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: AsiaPaymentGateway config.\n    AstroPayCard:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: AstroPay Card credentials object.\n              properties:\n                api_key:\n                  description: One Touch Astropay API key.\n                  format: password\n                  type: string\n                secret_key:\n                  description: AstroPay Card secret key.\n                  format: password\n                  type: string\n                x_login:\n                  description: AstroPay Card login.\n                  type: string\n                x_tran_key:\n                  description: AstroPay Card transaction key.\n                  format: password\n                  type: string\n              required:\n                - x_login\n                - x_tran_key\n                - secret_key\n              type: object\n            settings:\n              description: AstroPay Card settings object.\n              properties:\n                oneTouchApi:\n                  default: false\n                  description: Use One Touch Astropay API.\n                  type: boolean\n              type: object\n          required:\n            - credentials\n          type: object\n      description: AstroPay Card config.\n    Attachment:\n      properties:\n        _embedded:\n          description: Any embedded objects available that are requested by the `expand`\n            querystring parameter.\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/FileEmbed\"\n          minItems: 1\n          readOnly: true\n          type: array\n        _links:\n          description: The links related to resource.\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/SelfLink\"\n              - $ref: \"#/components/schemas/FileLink\"\n              - $ref: \"#/components/schemas/AttachmentResourceLink\"\n          minItems: 3\n          readOnly: true\n          type: array\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Creation date/time.\n        description:\n          description: The Attachment description.\n          type: string\n        fileId:\n          description: Linked File object id.\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          readOnly: true\n        name:\n          description: The Original Attachment name.\n          type: string\n        relatedId:\n          description: Linked object Id.\n          type: string\n        relatedType:\n          description: Linked object type.\n          enum:\n            - customer\n            - dispute\n            - gateway-timeline-comment\n            - invoice\n            - organization\n            - payment\n            - plan\n            - product\n            - subscription\n            - transaction\n            - customer-timeline-comment\n            - transaction-timeline-comment\n            - order-timeline-comment\n          type: string\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Latest update date/time.\n      required:\n        - fileId\n        - relatedId\n        - relatedType\n      type: object\n    AttachmentResourceLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - customer\n            - dispute\n            - invoice\n            - payment\n            - plan\n            - product\n            - subscription\n            - transaction\n          type: string\n      required:\n        - rel\n      type: object\n    AuthTransactionEmbed:\n      description: Auth Transaction object.\n      properties:\n        authTransaction:\n          $ref: \"#/components/schemas/Transaction\"\n      readOnly: true\n      type: object\n    AuthTransactionLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - authTransaction\n          type: string\n      required:\n        - rel\n      type: object\n    AuthenticationOptions:\n      properties:\n        authTokenTtl:\n          description: The default lifetime of the auth-token in seconds.\n          type: integer\n        credentialTtl:\n          description: The default lifetime of the credential in seconds.\n          type: integer\n        otpRequired:\n          description: Should OTP be required to exchange token.\n          type: boolean\n        passwordPattern:\n          description: Allowed password pattern.\n          type: string\n        resetTokenTtl:\n          description: The default lifetime of the reset-token in seconds.\n          type: integer\n      type: object\n    AuthenticationToken:\n      discriminator:\n        mapping:\n          password: \"#/components/schemas/password\"\n          passwordless: \"#/components/schemas/passwordless\"\n        propertyName: mode\n      properties:\n        credentialId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The credential's ID.\n          readOnly: true\n        mode:\n          default: password\n          description: The token's generation mode.\n          enum:\n            - password\n            - passwordless\n          type: string\n          writeOnly: true\n        otpRequired:\n          description: Should OTP be required to exchange this token.\n          type: boolean\n        token:\n          description: The token identifier string.\n          readOnly: true\n          type: string\n      type: object\n    AuthenticationTokenMetadata:\n      properties:\n        _links:\n          description: The links related to resource.\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        expiredTime:\n          description: Token's expired time.\n          format: date-time\n          type: string\n      type: object\n    AuthorizeNet:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                apiLoginId:\n                  description: AuthorizeNet Gateway api login ID.\n                  type: string\n                transactionKey:\n                  description: AuthorizeNet Gateway Transaction Key.\n                  format: password\n                  type: string\n              required:\n                - apiLoginId\n                - transactionKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: AuthorizeNet Gateway config.\n    BBANInstrument:\n      allOf:\n        - $ref: \"#/components/schemas/BankAccountInstrument\"\n        - properties:\n            accountNumber:\n              description: Bank Account Number.\n              pattern: ^[0-9]+$\n              type: string\n              writeOnly: true\n            accountType:\n              description: Bank Account Type.\n              enum:\n                - checking\n                - savings\n                - other\n              type: string\n            bankName:\n              description: Bank name.\n              type: string\n            bic:\n              description: Bank Identifier Code.\n              type: string\n            last4:\n              description: Bank Account Number's last 4 digits.\n              readOnly: true\n              type: string\n            routingNumber:\n              description: Bank Routing Number.\n              pattern: ^[0-9]+$\n              type: string\n          required:\n            - accountNumber\n            - routingNumber\n            - accountType\n          type: object\n      description: Bank account BBAN instrument.\n    BBANType:\n      description: BBAN type object.\n      properties:\n        accountNumber:\n          description: Bank's account number.\n          pattern: ^[0-9]+$\n          type: string\n        accountNumberType:\n          default: BBAN\n          description: \u003e-\n            Bank's Account Number type. A valid value is basic bank account\n            number (BBAN) or international bank account number (IBAN).\n\n            This is the object for the BBAN.\n          enum:\n            - IBAN\n            - BBAN\n          type: string\n        accountType:\n          description: Bank's account type.\n          enum:\n            - checking\n            - savings\n            - other\n          type: string\n        bankName:\n          description: Bank's name.\n          type: string\n        bic:\n          description: Bank Identifier Code.\n          type: string\n        billingAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: The billing address.\n        customFields:\n          $ref: \"#/components/schemas/ResourceCustomFields\"\n        customerId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Customer's ID.\n        method:\n          description: The method of payment instrument.\n          enum:\n            - ach\n          type: string\n        riskMetadata:\n          $ref: \"#/components/schemas/RiskMetadata\"\n        routingNumber:\n          description: Bank's routing number.\n          pattern: ^[0-9]+$\n          type: string\n      required:\n        - method\n        - customerId\n        - accountNumberType\n        - accountNumber\n        - routingNumber\n        - accountType\n        - billingAddress\n      type: object\n    Bambora:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                apiPasscode:\n                  description: Bambora Gateway API Passcode.\n                  format: password\n                  type: string\n                merchantId:\n                  description: Bambora Gateway merchant ID.\n                  type: string\n              required:\n                - merchantId\n                - apiPasscode\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Bambora Gateway config.\n    BankAccount:\n      allOf:\n        - $ref: \"#/components/schemas/CommonBankAccount\"\n        - properties:\n            _embedded:\n              description: Any embedded objects available that are requested by the `expand`\n                querystring parameter.\n              items:\n                anyOf:\n                  - $ref: \"#/components/schemas/CustomerEmbed\"\n              minItems: 1\n              readOnly: true\n              type: array\n            _links:\n              description: The links related to resource.\n              items:\n                anyOf:\n                  - $ref: \"#/components/schemas/SelfLink\"\n                  - $ref: \"#/components/schemas/CustomerLink\"\n              minItems: 1\n              readOnly: true\n              type: array\n    BankAccountCreatePlain:\n      anyOf:\n        - $ref: \"#/components/schemas/BBANType\"\n        - $ref: \"#/components/schemas/IBANType\"\n    BankAccountCreateToken:\n      properties:\n        customFields:\n          $ref: \"#/components/schemas/ResourceCustomFields\"\n        customerId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The Customer's ID.\n        token:\n          description: BankAccountToken ID.\n          type: string\n      required:\n        - customerId\n        - token\n      type: object\n    BankAccountEmbed:\n      description: Bank Account object.\n      properties:\n        bankAccount:\n          $ref: \"#/components/schemas/BankAccount\"\n      readOnly: true\n      type: object\n    BankAccountInstrument:\n      description: The bank account BBAN or IBAN instrument.\n      discriminator:\n        mapping:\n          BBAN: \"#/components/schemas/BBANInstrument\"\n          IBAN: \"#/components/schemas/IBANInstrument\"\n        propertyName: accountNumberType\n      properties:\n        accountNumberType:\n          default: BBAN\n          description: Bank's Account Number type. A valid value is basic bank account\n            number (BBAN) or international bank account number (IBAN).\n          enum:\n            - IBAN\n            - BBAN\n          type: string\n      required:\n        - accountNumberType\n      type: object\n    BankAccountToken:\n      allOf:\n        - $ref: \"#/components/schemas/CommonPaymentToken\"\n      properties:\n        billingAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: The billing address object.\n        method:\n          description: The token payment method.\n          enum:\n            - ach\n            - echeck\n          type: string\n        paymentInstrument:\n          $ref: \"#/components/schemas/BankAccountInstrument\"\n      required:\n        - method\n        - paymentInstrument\n        - billingAddress\n      title: Bank Account Token.\n      type: object\n    BankAccountUpdatePlain:\n      properties:\n        accountType:\n          description: Bank's account type.\n          enum:\n            - checking\n            - savings\n            - other\n          type: string\n        bankName:\n          description: Bank's name.\n          type: string\n        billingAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: The billing address.\n        customFields:\n          $ref: \"#/components/schemas/ResourceCustomFields\"\n      type: object\n    BitPay:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: BitPay credentials object.\n              properties:\n                token:\n                  description: BitPay merchant API token.\n                  format: password\n                  type: string\n              required:\n                - token\n              type: object\n          required:\n            - credentials\n          type: object\n      description: BitPay Gateway config.\n    BlankProblem:\n      additionalProperties: true\n      description: The Problem Details JSON Object\n        [[RFC7807](https://tools.ietf.org/html/rfc7807)].\n      minProperties: 1\n      properties:\n        status:\n          description: The HTTP status code.\n          maximum: 599\n          minimum: 400\n          type: integer\n        title:\n          description: A short, human-readable summary of the problem type. It SHOULD NOT\n            change from occurrence to occurrence of the problem, except for\n            purposes of localization.\n          type: string\n      type: object\n    Blocklist:\n      properties:\n        _links:\n          description: The links related to resource.\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The blocklist created time.\n        expirationTime:\n          description: The blocklist expiration time.\n          format: date-time\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The blocklist identifier string.\n          readOnly: true\n        type:\n          description: The blocklist type.\n          enum:\n            - payment-card\n            - bank-account\n            - customer-id\n            - email\n            - email-domain\n            - ip-address\n            - country\n            - fingerprint\n            - bin\n            - address\n          type: string\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The blocklist updated time.\n        value:\n          description: The blocklist value.\n          type: string\n      required:\n        - type\n        - value\n      type: object\n    BlueSnap:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: BlueSnap credentials object.\n              properties:\n                password:\n                  description: BlueSnap merchant's api password.\n                  format: password\n                  type: string\n                username:\n                  description: BlueSnap merchant's api username.\n                  type: string\n              required:\n                - username\n                - password\n              type: object\n          required:\n            - credentials\n          type: object\n      description: BlueSnap config.\n    BraintreePayments:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                merchantAccountId:\n                  description: BraintreePayments merchant account ID.\n                  format: password\n                  type: string\n                merchantId:\n                  description: BraintreePayments merchant ID.\n                  format: password\n                  type: string\n                privateKey:\n                  description: BraintreePayments Private Key.\n                  format: password\n                  type: string\n                publicKey:\n                  description: BraintreePayments Public Key.\n                  type: string\n              required:\n                - publicKey\n                - privateKey\n                - merchantId\n                - merchantAccountId\n              type: object\n          required:\n            - credentials\n          type: object\n      description: BraintreePayments Gateway config.\n    BrowserData:\n      description: Browser data used for 3DS and risk scoring.\n      properties:\n        colorDepth:\n          description: The browser's color depth in bits per pixel obtained using the\n            `screen.colorDepth` property.\n          example: 24\n          maximum: 48\n          minimum: 1\n          type: integer\n        isJavaEnabled:\n          description: Whether Java is enabled in a browser or not. Value is returned from\n            the `navigator.javaEnabled` property.\n          type: boolean\n        language:\n          description: The browser's language settings returned from the\n            `navigator.language` property.\n          example: en-US\n          maxLength: 8\n          type: string\n        screenHeight:\n          description: The browser's screen height returned from the `screen.height`\n            property.\n          example: 1080\n          maximum: 65535\n          minimum: 0\n          type: integer\n        screenWidth:\n          description: The browser's screen width returned from the `screen.width` property.\n          example: 1920\n          maximum: 65535\n          minimum: 0\n          type: integer\n        timeZoneOffset:\n          description: \u003e\n            The browser's time zone offset in minutes from UTC.\n\n            A positive offset indicates the local time is behind UTC, and negative is ahead.\n\n            Can find it with `(new Date()).getTimezoneOffset()` property.\n          example: 300\n          maximum: 1410\n          minimum: -1410\n          type: integer\n      required:\n        - colorDepth\n        - isJavaEnabled\n        - language\n        - screenWidth\n        - screenHeight\n        - timeZoneOffset\n      title: Browser data\n      type: object\n    CASHlib:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: CASHlib credentials object.\n              properties:\n                apiKey:\n                  description: CASHlib API Key.\n                  format: password\n                  type: string\n                merchantId:\n                  description: CASHlib merchant id.\n                  type: string\n              required:\n                - apiKey\n                - merchantId\n              type: object\n          required:\n            - credentials\n          type: object\n      description: CASHlib config.\n    CCAvenue:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: CCAvenue credentials object.\n              properties:\n                accessCode:\n                  description: CCAvenue access code.\n                  format: password\n                  type: string\n                merchantId:\n                  description: CCAvenue merchant id.\n                  type: string\n                workingKey:\n                  description: CCAvenue working key.\n                  format: password\n                  type: string\n              required:\n                - merchantId\n                - accessCode\n                - workingKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: CCAvenue config.\n    CODVoucher:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: COD Voucher credentials object.\n              properties:\n                apiKey:\n                  description: COD Voucher API key.\n                  format: password\n                  type: string\n                apiSecret:\n                  description: COD Voucher API secret.\n                  format: password\n                  type: string\n              required:\n                - apiKey\n                - apiSecret\n              type: object\n          required:\n            - credentials\n          type: object\n      description: COD Voucher config.\n    CardinalCommerce3dsServer:\n      allOf:\n        - $ref: \"#/components/schemas/Payvision3dsServers\"\n        - properties:\n            merchantId:\n              description: Cardinal MerchantId.\n              type: string\n            processorId:\n              description: Cardinal ProcessorId.\n              type: string\n            transactionPwd:\n              description: Cardinal TransactionPwd.\n              format: password\n              type: string\n          required:\n            - merchantId\n            - processorId\n            - transactionPwd\n          type: object\n      description: CardinalCommerce 3DS Server Credentials.\n    Cardknox:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                xKey:\n                  description: Cardknox xKey.\n                  format: password\n                  type: string\n              required:\n                - xKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Cardknox Gateway config.\n    CashInstrument:\n      description: Cash payment instrument object.\n      properties:\n        method:\n          enum:\n            - cash\n          type: string\n        receivedBy:\n          description: The receiver's name.\n          type: string\n      required:\n        - method\n      title: Cash\n      type: object\n    CashToCode:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: CashToCode credentials object.\n              properties:\n                cashToCodePassword:\n                  description: CashToCode credentials password.\n                  format: password\n                  type: string\n                cashToCodeUsername:\n                  description: CashToCode credentials Username.\n                  type: string\n                merchantPassword:\n                  description: Merchant credentials password.\n                  format: password\n                  type: string\n                merchantUsername:\n                  description: Merchant credentials Username.\n                  type: string\n              required:\n                - cashToCodeUsername\n                - cashToCodePassword\n                - merchantUsername\n                - merchantPassword\n              type: object\n            settings:\n              properties:\n                amounts:\n                  description: Amounts for which to allow transactions.\n                  items:\n                    format: double\n                    minimum: 0\n                    type: number\n                  type: array\n                skipAmountSelection:\n                  default: false\n                  description: Skip amount selection screen.\n                  type: boolean\n              type: object\n          required:\n            - credentials\n          type: object\n      description: CashToCode config.\n    Cashflows:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                authId:\n                  description: Cashflows Gateway auth ID.\n                  type: string\n                authPassword:\n                  description: Cashflows Gateway auth password.\n                  format: password\n                  type: string\n              required:\n                - authPassword\n                - authId\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Cashflows Gateway config.\n    CauriPayment:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: CauriPayment credentials object.\n              properties:\n                privateKey:\n                  description: CauriPayment merchant's private key.\n                  format: password\n                  type: string\n                publicKey:\n                  description: CauriPayment merchant's public key.\n                  type: string\n              required:\n                - publicKey\n                - privateKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: CauriPayment config.\n    Cayan:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                merchantKey:\n                  description: Cayan Gateway merchant key.\n                  format: password\n                  type: string\n                merchantName:\n                  description: Cayan Gateway merchant name.\n                  type: string\n                merchantSiteId:\n                  description: Cayan Gateway merchant site ID.\n                  type: string\n              required:\n                - merchantSiteId\n                - merchantName\n                - merchantKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Cayan Gateway config.\n    Chase:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                coNumber:\n                  description: Chase Gateway CO Number used for delimited file reports.\n                  type: string\n                divisionId:\n                  description: Chase Gateway division ID.\n                  type: string\n                partialAuth:\n                  default: false\n                  description: Support for Partial Auths.\n                  type: boolean\n                password:\n                  description: Chase Gateway Net Connect password.\n                  format: password\n                  type: string\n                username:\n                  description: Chase Gateway Net Connect username.\n                  type: string\n              required:\n                - username\n                - password\n                - coNumber\n                - divisionId\n                - partialAuth\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Chase Gateway config.\n    CheckInstrument:\n      description: Check payment instrument object.\n      properties:\n        method:\n          enum:\n            - cash\n          type: string\n        reference:\n          description: Reference data.\n          type: string\n      required:\n        - method\n      title: Check\n      type: object\n    Circle:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Circle credentials object.\n              properties:\n                apiKey:\n                  format: password\n                  type: string\n              required:\n                - apiKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Circle config.\n    Citadel:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Citadel credentials object.\n              properties:\n                password:\n                  description: Password.\n                  format: password\n                  type: string\n                storeId:\n                  description: Store ID.\n                  type: string\n                storeName:\n                  description: Store name.\n                  type: string\n                username:\n                  description: Username.\n                  type: string\n              required:\n                - storeName\n                - storeId\n                - username\n                - password\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Citadel config.\n    Clearhaus:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                apiKey:\n                  description: Clearhaus api key.\n                  format: password\n                  type: string\n              required:\n                - apiKey\n              type: object\n            threeDSecureServer:\n              $ref: \"#/components/schemas/Clearhaus3dsServers\"\n          required:\n            - credentials\n          type: object\n      description: Clearhaus Gateway config.\n    Clearhaus3dsServer:\n      allOf:\n        - $ref: \"#/components/schemas/Clearhaus3dsServers\"\n        - properties:\n            acquirerBin:\n              description: Acquiring institution identification code.\n              type: string\n            apiKey:\n              description: 3DS Server Api key.\n              format: password\n              type: string\n            merchantId:\n              description: Merchant account ID or Card Acceptor ID provided by the acquiring\n                bank.\n              type: string\n          required:\n            - merchantId\n            - acquirerBin\n            - apiKey\n          type: object\n      description: Clearhaus 3DS Server Credentials.\n    Clearhaus3dsServers:\n      description: Clearhaus 3DS Servers.\n      discriminator:\n        mapping:\n          Clearhaus3dsServer: \"#/components/schemas/Clearhaus3dsServer\"\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/ThreeDSecureServerName\"\n          enum:\n            - Clearhaus3dsServers\n      required:\n        - name\n      type: object\n    CoinPayments:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: CoinPayments credentials object.\n              properties:\n                ipnSecret:\n                  format: password\n                  type: string\n                privateKey:\n                  format: password\n                  type: string\n                publicKey:\n                  type: string\n              required:\n                - publicKey\n                - privateKey\n                - ipnSecret\n              type: object\n          required:\n            - credentials\n          type: object\n      description: CoinPayments config.\n    CommonBankAccount:\n      properties:\n        accountNumberType:\n          default: BBAN\n          description: Bank's account number type. A valid value is basic bank account\n            number (BBAN) or international bank account number (IBAN).\n          enum:\n            - BBAN\n            - IBAN\n          type: string\n        accountType:\n          description: Bank's account type.\n          enum:\n            - checking\n            - savings\n            - other\n          type: string\n        bankName:\n          description: Bank's name.\n          type: string\n        bic:\n          description: Bank Identifier Code.\n          type: string\n        billingAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: The billing address.\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Bank account created time.\n        customFields:\n          $ref: \"#/components/schemas/ResourceCustomFields\"\n        customerId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The customer's ID.\n        fingerprint:\n          description: A unique value to identify the bank account. It contains\n            alphanumeric values.\n          readOnly: true\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The payment instrument ID.\n          readOnly: true\n        last4:\n          description: The last 4 digits of the bank account.\n          readOnly: true\n          type: string\n        method:\n          description: The method of payment instrument.\n          enum:\n            - ach\n          readOnly: true\n          type: string\n        riskMetadata:\n          $ref: \"#/components/schemas/RiskMetadata\"\n        routingNumber:\n          description: Bank's routing number.\n          type: string\n        status:\n          description: Bank account status.\n          enum:\n            - active\n            - deactivated\n          readOnly: true\n          type: string\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Bank account updated time.\n      title: Bank Account\n      type: object\n    CommonInvoice:\n      properties:\n        abandonedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Invoice abandoned time.\n          x-sortable: true\n        amount:\n          description: The invoice's amount.\n          format: double\n          readOnly: true\n          type: number\n          x-basic: true\n          x-sortable: true\n          x-type: Money\n        amountDue:\n          description: The invoice's due amount.\n          format: double\n          readOnly: true\n          type: number\n          x-sortable: true\n          x-type: Money\n        autopayRetryNumber:\n          default: 0\n          description: Invoice autopay retry number.\n          minimum: 0\n          readOnly: true\n          type: integer\n          x-sortable: true\n        autopayScheduledTime:\n          description: Invoice autopay scheduled time.\n          format: date-time\n          type: string\n          x-sortable: true\n        billingAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: Invoice's billing address.\n        collectionPeriod:\n          description: Collection period - difference between paidTime and issuedTime in\n            days.\n          readOnly: true\n          type: integer\n          x-sortable: true\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Invoice created time.\n          x-sortable: true\n        currency:\n          allOf:\n            - $ref: \"#/components/schemas/CurrencyCode\"\n          x-basic: true\n          x-sortable: true\n        delinquentCollectionPeriod:\n          description: Delinquent collection period - difference between paidTime and\n            dueTime in days.\n          readOnly: true\n          type: integer\n          x-sortable: true\n        deliveryAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: Invoice's delivery address.\n        discountAmount:\n          description: The invoice's discounts amount.\n          format: double\n          readOnly: true\n          type: number\n          x-type: Money\n        discounts:\n          description: Discounts applied.\n          items:\n            allOf:\n              - $ref: \"#/components/schemas/InvoiceDiscount\"\n          readOnly: true\n          type: array\n        dueTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Invoice due time.\n          x-sortable: true\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The invoice ID.\n          readOnly: true\n        invoiceNumber:\n          description: An auto-incrementing number based on the sequence of invoices for\n            any particular customer.\n          readOnly: true\n          type: integer\n          x-basic: true\n        issuedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Invoice issued time.\n          x-basic: true\n          x-label: Date Issued\n          x-sortable: true\n        items:\n          description: Invoice items array.\n          items:\n            $ref: \"#/components/schemas/InvoiceItem\"\n          readOnly: true\n          type: array\n        notes:\n          description: Notes for the customer which will be displayed on the invoice.\n          type: string\n        paidTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Invoice paid time.\n          x-basic: true\n          x-label: Payment Date\n          x-sortable: true\n        paymentFormUrl:\n          description: \u003e\n            URL where the customer can be redirected to pay for the invoice\n\n            with one of the methods which are available for this customer.\n\n            It's an alternative to creating a new transaction with empty `methods`.\n          format: url\n          readOnly: true\n          type: string\n        poNumber:\n          description: Purchase order number which will be displayed on the invoice.\n          example: PO123456\n          nullable: true\n          type: string\n        shipping:\n          $ref: \"#/components/schemas/InvoiceShipping\"\n        status:\n          description: Invoice status.\n          enum:\n            - draft\n            - unpaid\n            - paid\n            - past-due\n            - delinquent\n            - abandoned\n            - voided\n            - partially-refunded\n            - refunded\n            - disputed\n          readOnly: true\n          type: string\n          x-basic: true\n        subscriptionId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The related order's ID if available, otherwise null.\n          readOnly: true\n        subtotalAmount:\n          description: The invoice's subtotal amount.\n          format: double\n          readOnly: true\n          type: number\n          x-type: Money\n        tax:\n          $ref: \"#/components/schemas/InvoiceTax\"\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Invoice updated time.\n          x-sortable: true\n        voidedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Invoice voided time.\n          x-sortable: true\n        websiteId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The website ID.\n      required:\n        - currency\n        - websiteId\n      type: object\n    CommonKycDocument:\n      properties:\n        _links:\n          description: The links related to resource.\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Creation date/time.\n        documentSubtype:\n          allOf:\n            - $ref: \"#/components/schemas/KycDocumentSubtypes\"\n          description: Document subtype submitted for validation.\n        documentType:\n          allOf:\n            - $ref: \"#/components/schemas/KycDocumentTypes\"\n          description: Document type submitted for validation, only identity-proof type is\n            analyzed in an automated manner.\n        fileId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          deprecated: true\n          description: Linked file object id.\n        fileIds:\n          description: Linked file object id's.\n          items:\n            allOf:\n              - $ref: \"#/components/schemas/ResourceId\"\n          type: array\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          readOnly: true\n        processedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Processing date/time.\n        rejectionReason:\n          $ref: \"#/components/schemas/KycDocumentRejection\"\n        requestId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: KYC request identifier string.\n          nullable: true\n          readOnly: true\n        status:\n          description: Status of the validation.\n          enum:\n            - pending\n            - in-progress\n            - accepted\n            - rejected\n          readOnly: true\n          type: string\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Latest update date/time.\n      required:\n        - customerId\n        - documentType\n        - status\n      type: object\n    CommonKycRequest:\n      properties:\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Creation date/time.\n        documents:\n          description: Documents to be requested from customer.\n          items:\n            properties:\n              maxAttempts:\n                default: 3\n                description: The number of document upload attempts. `0` treated as unlimited.\n                maximum: 100\n                minimum: 0\n                type: integer\n              subtypes:\n                description: Document subtype allowed for customer.\n                items:\n                  $ref: \"#/components/schemas/KycDocumentSubtypes\"\n                type: array\n              type:\n                allOf:\n                  - $ref: \"#/components/schemas/KycDocumentTypes\"\n                description: Document type to be requested from customer.\n            required:\n              - type\n            type: object\n          type: array\n        expirationTime:\n          description: Expiration date/time.\n          format: date-time\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          readOnly: true\n        redirectUrl:\n          description: The URL to redirect the customer when an upload is completed.\n          format: uri\n          type: string\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Latest update date/time.\n      required:\n        - documents\n      type: object\n    CommonOneTimeOrder:\n      allOf:\n        - $ref: \"#/components/schemas/CommonSubscription\"\n        - properties:\n            status:\n              description: One-time order status.\n              enum:\n                - pending\n                - completed\n                - abandoned\n              readOnly: true\n              type: string\n      type: object\n    CommonPayPalAccount:\n      properties:\n        billingAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: The billing address.\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: PayPal account created time.\n        customFields:\n          $ref: \"#/components/schemas/ResourceCustomFields\"\n        customerId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The customer's ID.\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The payment instrument ID.\n          readOnly: true\n        method:\n          description: The method of payment instrument.\n          enum:\n            - paypal\n          type: string\n        riskMetadata:\n          $ref: \"#/components/schemas/RiskMetadata\"\n        status:\n          description: PayPal account status.\n          enum:\n            - inactive\n            - active\n            - deactivated\n          readOnly: true\n          type: string\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: PayPal account updated time.\n        username:\n          description: PayPal username.\n          readOnly: true\n          type: string\n      required:\n        - method\n        - customerId\n        - billingAddress\n      title: PayPal Account\n      type: object\n    CommonPaymentCard:\n      properties:\n        bankCountry:\n          description: Payment instrument bank country.\n          readOnly: true\n          type: string\n        bankName:\n          description: Payment instrument bank name.\n          readOnly: true\n          type: string\n        billingAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: The billing address.\n        bin:\n          description: The card's bin (the PAN's first 6 digits).\n          format: bin\n          readOnly: true\n          type: string\n        brand:\n          allOf:\n            - $ref: \"#/components/schemas/PaymentCardBrand\"\n          readOnly: true\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Payment instrument created time.\n        customFields:\n          $ref: \"#/components/schemas/ResourceCustomFields\"\n        customerId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The сustomer's ID.\n        cvv:\n          description: Card's cvv (card verification value).\n          type: string\n          writeOnly: true\n        expMonth:\n          description: Card's expiration month.\n          type: integer\n        expYear:\n          description: Card's expiration year.\n          type: integer\n        fingerprint:\n          description: A unique value to identify the payment instrument regardless of\n            variable values. It contains alphanumeric values.\n          readOnly: true\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The payment instrument ID.\n          readOnly: true\n        last4:\n          description: The PAN's last 4 digits.\n          readOnly: true\n          type: string\n        method:\n          description: The method of payment instrument.\n          enum:\n            - payment-card\n          readOnly: true\n          type: string\n        pan:\n          description: The card PAN (primary account number).\n          type: string\n          writeOnly: true\n        riskMetadata:\n          $ref: \"#/components/schemas/RiskMetadata\"\n        status:\n          description: \u003e\n            Payment instrument status. When an instrument is `active` it means\n            it has been used at least once for an approved transaction.\n\n            To remove an instrument from being in use, set it as `deactivated` (see the deactivation endpoint).\n          enum:\n            - active\n            - inactive\n            - expired\n            - deactivated\n            - verification-needed\n          type: string\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Payment instrument updated time.\n      title: Payment Card\n      type: object\n    CommonPaymentToken:\n      properties:\n        _links:\n          description: The links related to resource.\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Token created time.\n        expirationTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Token expiration time.\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The token identifier string.\n          readOnly: true\n        isUsed:\n          default: false\n          description: Whether the token was already used.\n          readOnly: true\n          type: boolean\n        leadSource:\n          allOf:\n            - $ref: \"#/components/schemas/LeadSource\"\n          writeOnly: true\n        method:\n          type: string\n        riskMetadata:\n          allOf:\n            - $ref: \"#/components/schemas/RiskMetadata\"\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Token updated time.\n        usageTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Token usage time.\n      required:\n        - method\n      type: object\n    CommonPlan:\n      properties:\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Plan created time.\n        currency:\n          allOf:\n            - $ref: \"#/components/schemas/CurrencyCode\"\n        currencySign:\n          description: Currency sign.\n          readOnly: true\n          type: string\n        customFields:\n          $ref: \"#/components/schemas/ResourceCustomFields\"\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The plan ID.\n          readOnly: true\n        isTrialOnly:\n          description: Whether a plan has a trial without recurring instructions.\n          readOnly: true\n          type: boolean\n        name:\n          description: The plan name, displayed on invoices and receipts.\n          type: string\n        pricing:\n          $ref: \"#/components/schemas/PlanPriceFormula\"\n        productId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The related product ID.\n        productOptions:\n          additionalProperties:\n            type: string\n          description: Name-value pairs to specify the product options.\n          example:\n            color: red\n            size: xxl\n          type: object\n        recurringInterval:\n          allOf:\n            - $ref: \"#/components/schemas/PlanPeriod\"\n            - properties:\n                billingTiming:\n                  $ref: \"#/components/schemas/PlanBillingTiming\"\n                limit:\n                  description: \u003e\n                    The number of invoices this subscription order will generate\n\n                    (if 1, it will not generate any beyond the initial order creation).\n\n                    For example, set this property to `12`, when the `periodUnit` is month and the\n\n                    `periodDuration` is 1, for a 1 year contract billed monthly.\n                  type: integer\n              type: object\n          description: The service interval. For a one-time item, use `null`.\n        revision:\n          description: |\n            Increments when the plan is modified. \n            Compare to materialized subscription items revision.\n          readOnly: true\n          type: integer\n        setup:\n          description: The setup. Set `null` if no setup.\n          properties:\n            price:\n              description: The price of a setup - 0 is a valid value (for free).\n              format: double\n              type: number\n          required:\n            - price\n          type: object\n        trial:\n          description: The trial. Set `null` if no trial.\n          properties:\n            period:\n              $ref: \"#/components/schemas/PlanPeriod\"\n            price:\n              description: The price of the trial. For a free trial, use `0`.\n              format: double\n              type: number\n          required:\n            - price\n            - period\n          type: object\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Plan updated time.\n      required:\n        - name\n        - currency\n        - productId\n        - pricing\n      type: object\n    CommonProduct:\n      description: \u003e\n        Products include digital goods, services, and physical goods.\n\n        Products appear on invoice line items. If you set a tax category identifier,\n\n        taxes will be calculated upon invoice generation. If it is shippable,\n\n        shipping will be calculated upon invoice generation. Pricing and\n\n        variations are set within Plans.\n      properties:\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The product created time.\n        customFields:\n          $ref: \"#/components/schemas/ResourceCustomFields\"\n        description:\n          description: The product description.\n          maxLength: 512\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The product ID.\n          example: membership\n          readOnly: true\n        name:\n          description: The product name.\n          example: Premium membership\n          maxLength: 255\n          type: string\n        options:\n          description: \u003e\n            The product options such as color, size, etc. The product options\n            definition does\n\n            not include option values. Those are defined within the plans.\n          items:\n            type: string\n          type: array\n        requiresShipping:\n          description: If the product requires shipping, shipping calculations will be\n            applied.\n          example: false\n          type: boolean\n        unitLabel:\n          default: unit\n          description: The unit label, such as per `seat` or per `unit`.\n          example: seat\n          maxLength: 50\n          type: string\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The product updated time.\n      required:\n        - name\n      type: object\n    CommonScheduleInstruction:\n      description: The calculation instruction of scheduled time.\n      discriminator:\n        mapping:\n          auto: \"#/components/schemas/auto\"\n          date-interval: \"#/components/schemas/date-interval\"\n          day-of-month: \"#/components/schemas/day-of-month\"\n          day-of-week: \"#/components/schemas/day-of-week\"\n          immediately: \"#/components/schemas/immediately\"\n          intelligent: \"#/components/schemas/intelligent\"\n        propertyName: method\n      properties:\n        method:\n          enum:\n            - auto\n            - intelligent\n            - immediately\n            - date-interval\n            - day-of-month\n            - day-of-week\n          type: string\n      required:\n        - method\n      type: object\n    CommonSubscription:\n      properties:\n        activationTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Order activation time.\n          x-sortable: true\n        billingAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: Order billing address.\n          nullable: true\n        billingStatus:\n          description: |\n            The billing status of the most recent invoice.  It may\n            help you determine if you should change the service status\n            such as suspending the service.\n          enum:\n            - unpaid\n            - past-due\n            - delinquent\n            - paid\n            - voided\n            - refunded\n            - disputed\n            - voided\n          readOnly: true\n          type: string\n        couponIds:\n          description: \u003e\n            A list of coupons to redeem on the customer and restrict to this\n            subscription.\n\n            Read more about [coupons here](https://docs.rebilly.com/docs/dashboard/marketing/coupons-and-discounts/).\n\n\n            This parameter respects the following logic:\n\n\n            - When not passed then applied coupons will not be changed.\n\n\n            - When empty array passed then all applied coupon redemptions will be canceled.\n\n\n            - When list of coupons is passed then not applied yet coupons will be applied, already applied coupons\n\n            will not change their state, applied coupons that are not presented in passed list will be canceled.\n\n\n            If list of applied coupons on pending order will be changed due to this param during update order,\n             Invoice for the order will be reissued.\n          items:\n            description: Coupon ID.\n            type: string\n          nullable: true\n          type: array\n          writeOnly: true\n        deliveryAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: Order delivery address.\n          nullable: true\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The order identifier string.\n          readOnly: true\n        initialInvoiceId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The initial invoice identifier string.\n          readOnly: true\n        items:\n          items:\n            properties:\n              isGrandfathered:\n                description: Indicates if the plan's current revision is greater than this\n                  item's plan revision.\n                readOnly: true\n                type: boolean\n              isModified:\n                description: Indicates if the plan information was modified for this\n                  subscription.\n                readOnly: true\n                type: boolean\n              plan:\n                $ref: \"#/components/schemas/FlexiblePlan\"\n              planId:\n                allOf:\n                  - $ref: \"#/components/schemas/ResourceId\"\n                deprecated: true\n                description: The plan identifier string.\n                x-basic: true\n              quantity:\n                description: Number of units of the product on the given plan.\n                type: integer\n              revision:\n                description: Increments with each override change to this specific item.\n                readOnly: true\n                type: integer\n            required:\n              - plan\n            type: object\n          minItems: 1\n          type: array\n        orderType:\n          default: subscription-order\n          description: |\n            Specifies the type of order, a subscription or a one-time purchase.\n          enum:\n            - subscription-order\n            - one-time-order\n          type: string\n        poNumber:\n          description: Purchase order number, will be displayed on the issued invoices.\n          example: PO123456\n          nullable: true\n          type: string\n        recentInvoiceId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Most recently issued invoice identifier string. It might not be\n            `paid` yet.\n          readOnly: true\n        voidTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Order void time.\n        websiteId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The website identifier string.\n          x-basic: true\n          x-sortable: true\n      type: object\n    CommonSubscriptionOrder:\n      allOf:\n        - $ref: \"#/components/schemas/CommonSubscription\"\n        - properties:\n            autopay:\n              default: true\n              description: Autopay determines if a payment attempt will be automatic.\n              type: boolean\n            endTime:\n              allOf:\n                - $ref: \"#/components/schemas/ServerTimestamp\"\n              description: Subscription end time.\n              x-sortable: true\n            inTrial:\n              description: True if the subscription is currently in a trial period.\n              readOnly: true\n              type: boolean\n            invoiceTimeShift:\n              allOf:\n                - $ref: \"#/components/schemas/InvoiceTimeShift\"\n              description: \u003e\n                You can shift issue time and due time of invoices for this\n                subscription.\n\n                This setting overrides plan settings. To use plan settings, set `null`.\n\n                To use multiple plans in one subscription they all must have the same billing period,\n\n                this property allows to subscribe to different plans.\n              example:\n                $ref: \"#/components/schemas/ReadyToPayMethods/example/2/feature\"\n              nullable: true\n            isTrialOnly:\n              default: false\n              description: Whether a subscription ends after a trial period. Recurring\n                settings are ignored if it's `true`.\n              type: boolean\n            lineItemSubtotal:\n              description: Subtotal of line items in this subscription (signed value). If\n                credits exceed debits, it will be a negative number.\n              properties:\n                amount:\n                  example: 49.95\n                  format: double\n                  type: number\n                  x-sortable: true\n                  x-type: Money\n                currency:\n                  $ref: \"#/components/schemas/CurrencyCode\"\n                  x-label: Currency\n                  x-sortable: true\n              readOnly: true\n              type: object\n            lineItems:\n              allOf:\n                - $ref: \"#/components/schemas/UpcomingInvoiceItemCollection\"\n              description: Subscription line items which queue until the next renewal (or\n                interim) invoice is issued for the subscription.\n              readOnly: true\n            rebillNumber:\n              description: The current period number.\n              readOnly: true\n              type: integer\n            recurringInterval:\n              description: \u003e\n                The recurring interval to override plan settings. To use plan\n                settings, set `null`.\n\n                To use multiple plans in one subscription they all must have the same recurring period length,\n\n                this property allows to subscribe to different plans.\n              example:\n                $ref: \"#/components/schemas/ReadyToPayMethods/example/2/feature\"\n              nullable: true\n              properties:\n                periodAnchorInstruction:\n                  $ref: \"#/components/schemas/ServicePeriodAnchorInstruction\"\n              type: object\n            renewalTime:\n              description: Subscription renewal time.\n              format: date-time\n              type: string\n              x-basic: true\n              x-sortable: true\n            startTime:\n              description: Subscription start time.  When the value is sent as null, it will\n                use the current time. This value can't be in past more than one\n                service period.\n              example:\n                $ref: \"#/components/schemas/ReadyToPayMethods/example/2/feature\"\n              format: date-time\n              nullable: true\n              type: string\n              x-basic: true\n              x-sortable: true\n            status:\n              description: |\n                The status of the subscription service. A subscription starts\n                in the `pending` status, and will become `active` when the\n                service period begins.\n              enum:\n                - pending\n                - active\n                - canceled\n                - churned\n                - suspended\n                - paused\n                - abandoned\n                - trial-ended\n              readOnly: true\n              type: string\n            trial:\n              description: To use plan defaults do not send the `trial` key, or send a `null`.\n                value with it.\n              properties:\n                enabled:\n                  description: Enable or disable the trial for this subscription. If enabled for\n                    plans without trial prices, the trial will be free.\n                  type: boolean\n                endTime:\n                  description: The time the trial should end.\n                  format: date-time\n                  type: string\n              required:\n                - endTime\n              type: object\n      type: object\n    CommonTransaction:\n      properties:\n        3ds:\n          allOf:\n            - $ref: \"#/components/schemas/ThreeDSecureResult\"\n        amount:\n          description: The transaction's amount.\n          format: double\n          readOnly: true\n          type: number\n          x-basic: true\n          x-sortable: true\n          x-type: Money\n        billingAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: Billing address.\n        billingDescriptor:\n          description: \u003e\n            The billing descriptor that appears on the periodic billing\n            statement. Commonly\n\n            12 or fewer characters for a credit card statement.\n          readOnly: true\n          type: string\n        childTransactions:\n          description: The child transaction IDs.\n          items:\n            $ref: \"#/components/schemas/ResourceId\"\n          readOnly: true\n          type: array\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Transaction created time.\n          x-label: Created On\n          x-sortable: true\n        currency:\n          allOf:\n            - $ref: \"#/components/schemas/CurrencyCode\"\n          readOnly: true\n        customFields:\n          $ref: \"#/components/schemas/ResourceCustomFields\"\n        customerId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The сustomer's ID.\n          x-basic: true\n        description:\n          description: The payment description.\n          maxLength: 255\n          type: string\n        gatewayName:\n          allOf:\n            - $ref: \"#/components/schemas/GatewayName\"\n          description: \u003e\n            Payment Gateway name, available only after the gateway is selected\n            for the transaction.\n          readOnly: true\n          x-basic: true\n          x-label: Gateway account\n        has3ds:\n          readOnly: true\n          type: boolean\n        hasAmountAdjustment:\n          description: True if transaction has amount adjustment.\n          readOnly: true\n          type: boolean\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The transaction ID.\n          readOnly: true\n        invoiceIds:\n          description: The invoice IDs related to transaction.\n          items:\n            $ref: \"#/components/schemas/ResourceId\"\n          readOnly: true\n          type: array\n        isRebill:\n          readOnly: true\n          type: boolean\n        isRetry:\n          description: True if this transaction is retry.\n          readOnly: true\n          type: boolean\n        parentTransactionId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The parent's transaction ID.\n          readOnly: true\n        paymentInstrument:\n          $ref: \"#/components/schemas/InstrumentReference\"\n        planIds:\n          description: The plan IDs related to transaction's order(s).\n          items:\n            $ref: \"#/components/schemas/ResourceId\"\n          readOnly: true\n          type: array\n        processedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Transaction processed time.\n          x-basic: true\n          x-sortable: true\n        purchaseAmount:\n          description: The amount actually purchased which may have differed from the\n            originally requested amount in case of an adjustment.\n          format: double\n          readOnly: true\n          type: number\n          x-currency-field: purchaseCurrency\n          x-sortable: true\n          x-type: Money\n        purchaseCurrency:\n          allOf:\n            - $ref: \"#/components/schemas/CurrencyCode\"\n          readOnly: true\n        rebillNumber:\n          description: The transaction's rebill number.\n          readOnly: true\n          type: integer\n        redirectUrl:\n          description: The URL to redirect the end-user when an offsite transaction is\n            completed. Defaults to the website's configured URL.\n          format: uri\n          type: string\n        requestAmount:\n          description: The amount in the payment request. If adjusted, the purchase amount\n            and billing amount may vary from it.\n          format: double\n          readOnly: true\n          type: number\n          x-currency-field: requestCurrency\n          x-type: Money\n        requestCurrency:\n          allOf:\n            - $ref: \"#/components/schemas/CurrencyCode\"\n          readOnly: true\n        requestId:\n          description: The transaction's request ID.  This ID must be unique within a 24\n            hour period. Use this field to prevent duplicated transactions.\n          type: string\n          x-sortable: true\n        result:\n          description: Transaction result.\n          enum:\n            - abandoned\n            - approved\n            - canceled\n            - declined\n            - unknown\n          readOnly: true\n          type: string\n          x-basic: true\n        retryNumber:\n          description: The position in the sequence of retries.\n          readOnly: true\n          type: integer\n        status:\n          description: Transaction status.\n          enum:\n            - completed\n            - conn-error\n            - disputed\n            - never-sent\n            - offsite\n            - partially-refunded\n            - pending\n            - refunded\n            - sending\n            - suspended\n            - timeout\n            - voided\n            - waiting-approval\n            - waiting-capture\n            - waiting-gateway\n            - waiting-refund\n          readOnly: true\n          type: string\n        subscriptionIds:\n          description: The orders IDs related to transaction's invoice(s).\n          items:\n            $ref: \"#/components/schemas/ResourceId\"\n          readOnly: true\n          type: array\n        type:\n          description: Transaction type.\n          enum:\n            - 3ds-authentication\n            - authorize\n            - capture\n            - credit\n            - refund\n            - sale\n            - void\n          readOnly: true\n          type: string\n          x-basic: true\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Transaction updated time.\n          x-label: Last update time\n          x-sortable: true\n        websiteId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The website ID.\n          readOnly: true\n      type: object\n    CommonTransactionRequest:\n      properties:\n        amount:\n          description: The transaction amount.\n          example: 97.97\n          format: double\n          type: number\n        billingAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: Billing address. If not supplied, we use the billing address\n            associated with the payment instrument, and then customer.\n          nullable: true\n        currency:\n          allOf:\n            - $ref: \"#/components/schemas/CurrencyCode\"\n        customFields:\n          $ref: \"#/components/schemas/ResourceCustomFields\"\n        customerId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The customer identifier string.\n        description:\n          description: The payment description.\n          maxLength: 255\n          nullable: true\n          type: string\n        gatewayAccountId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Rebilly will select the appropriate payment gateway account for the\n            transaction based on the properties of the transaction and the\n            `gateway-account-requested` event rules configurations. If you wish\n            to prevent Rebilly from making the gateway account selection, you\n            may supply a gateway account id here, and it will be used instead.\n            Only use this field if you intend to override the settings.\n          nullable: true\n        invoiceIds:\n          description: The array of invoice identifiers.\n          items:\n            $ref: \"#/components/schemas/ResourceId\"\n          nullable: true\n          type: array\n        isMerchantInitiated:\n          default: false\n          description: True if the transaction was initiated by the merchant.\n          type: boolean\n        isProcessedOutside:\n          default: false\n          description: True if transaction was processed outside Rebilly.\n          type: boolean\n        notificationUrl:\n          description: \u003e\n            The URL where a server-to-server notification request type `POST`\n            with a transaction payload will be sent when the transaction's\n            result is finalized. Do not trust the notification; follow with a\n            `GET` request to confirm the result of the transaction. Please\n            respond with a `2xx` HTTP status code, or we will reattempt the\n            request again. You may use `{id}` or `{result}` as placeholders in\n            the URL and we will replace them with the transaction's id and\n            result accordingly.\n          format: uri\n          nullable: true\n          type: string\n        paymentInstruction:\n          allOf:\n            - $ref: \"#/components/schemas/PaymentInstruction\"\n          description: Payment instruction. If not supplied, customer's default payment\n            instrument will be used.\n        paymentInstrument:\n          allOf:\n            - $ref: \"#/components/schemas/PaymentInstrument\"\n          deprecated: true\n        processedTime:\n          description: The time the transaction was processed. Can be specified only if\n            transaction was processed outside Rebilly.\n          format: date-time\n          type: string\n        redirectUrl:\n          description: The URL to redirect the end-user when an offsite transaction is\n            completed. Defaults to the website's configured URL. You may use\n            `{id}` or `{result}` as placeholders in the URL and we will replace\n            them with the transaction's id and result accordingly.\n          format: uri\n          nullable: true\n          type: string\n        requestId:\n          description: The request id is **recommended**. It prevents duplicate\n            transaction requests within a short period of time. If a duplicate\n            request is sent with the same `requestId` it will be ignored to\n            prevent double-billing anyone.  It must be unique within a 24-hour\n            period.  We recommend generating a UUID v4 as its value.\n          example: 44433322-2c4y-483z-a0a9-158621f77a21\n          maxLength: 50\n          nullable: true\n          pattern: ^[\\-\\w]+$\n          type: string\n        riskMetadata:\n          $ref: \"#/components/schemas/RiskMetadata\"\n        websiteId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The website identifier string.\n      required:\n        - websiteId\n        - customerId\n        - currency\n        - amount\n      type: object\n    CompositeToken:\n      oneOf:\n        - $ref: \"#/components/schemas/PaymentCardToken\"\n        - $ref: \"#/components/schemas/BankAccountToken\"\n        - $ref: \"#/components/schemas/DigitalWalletToken\"\n        - $ref: \"#/components/schemas/PlaidAccountToken\"\n        - $ref: \"#/components/schemas/KhelocardCardToken\"\n        - $ref: \"#/components/schemas/AlternativePaymentToken\"\n    Conekta:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Conekta credentials object.\n              properties:\n                apiKey:\n                  description: Conekta private API key.\n                  format: password\n                  type: string\n              required:\n                - apiKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Conekta config.\n    ContactEmails:\n      description: The list of emails.\n      items:\n        properties:\n          label:\n            description: The email label.\n            example: main\n            maxLength: 45\n            type: string\n          primary:\n            description: True if email is primary.\n            example: true\n            type: boolean\n          value:\n            description: The email value.\n            example: rebilly@example.com\n            format: email\n            maxLength: 255\n            type: string\n        required:\n          - label\n          - value\n        type: object\n      type: array\n    ContactObject:\n      properties:\n        address:\n          description: The contact street address.\n          example: 36 Craven St\n          maxLength: 60\n          nullable: true\n          pattern: ^[\\w\\s\\-\\/\\pL,.#;:()']+$\n          type: string\n        address2:\n          description: The contact street address (second line).\n          maxLength: 60\n          nullable: true\n          pattern: ^[\\w\\s\\-\\/\\pL,.#;:()']+$\n          type: string\n        city:\n          description: The contact city.\n          example: London\n          maxLength: 45\n          nullable: true\n          pattern: ^[\\w\\s\\-\\pL,.']+$\n          type: string\n        country:\n          description: The contact country ISO Alpha-2 code.\n          example: GB\n          maxLength: 2\n          nullable: true\n          pattern: ^[A-Z]{2}$\n          type: string\n        emails:\n          $ref: \"#/components/schemas/ContactEmails\"\n        firstName:\n          description: The contact first name.\n          example: Benjamin\n          maxLength: 45\n          nullable: true\n          pattern: ^[\\w\\s\\-\\pL,.']+$\n          type: string\n        hash:\n          description: A hash that can be used to compare multiple contacts for identical\n            attribute values.\n          example: 056ae6d97c788b9e98b049ebafd7b229bf852221\n          maxLength: 40\n          readOnly: true\n          type: string\n        lastName:\n          description: The contact last name.\n          example: Franklin\n          maxLength: 45\n          nullable: true\n          pattern: ^[\\w\\s\\-\\pL,.']+$\n          type: string\n        organization:\n          description: The contact organization.\n          example:\n            $ref: \"#/components/schemas/ReadyToPayMethods/example/2/feature\"\n          maxLength: 255\n          nullable: true\n          pattern: ^[\\w\\s\\-\\pL,.']+$\n          type: string\n        phoneNumbers:\n          $ref: \"#/components/schemas/ContactPhoneNumbers\"\n        postalCode:\n          description: The contact postal code.\n          example: WC2N 5NF\n          maxLength: 10\n          nullable: true\n          pattern: ^[\\w\\s\\-]+$\n          type: string\n        region:\n          description: The contact region (state).\n          example: London\n          maxLength: 45\n          nullable: true\n          pattern: ^[\\w\\s\\-\\/\\pL,.#;:()']+$\n          type: string\n      type: object\n    ContactPhoneNumbers:\n      description: The list of phone numbers.\n      items:\n        properties:\n          label:\n            description: The phone label.\n            example: main\n            maxLength: 45\n            type: string\n          primary:\n            description: True if phone is primary.\n            example: true\n            type: boolean\n          value:\n            description: The phone value.\n            example: 512-710-1640\n            maxLength: 50\n            type: string\n        required:\n          - label\n          - value\n        type: object\n      type: array\n    Coppr:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Coppr credentials object.\n              properties:\n                apiKey:\n                  description: Coppr api key.\n                  format: password\n                  type: string\n                organizationId:\n                  description: Coppr Organization's ID.\n                  type: string\n              required:\n                - organizationId\n                - apiKey\n              type: object\n            settings:\n              description: Coppr settings object.\n              properties:\n                rebillyPublishableKey:\n                  description: Rebilly publishable api key. If provided a payment token will be\n                    created for each transaction.\n                  type: string\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Coppr config.\n    CoreReadyToPay:\n      allOf:\n        - properties:\n            customerId:\n              allOf:\n                - $ref: \"#/components/schemas/ResourceId\"\n              description: The customer identifier string.\n          type: object\n        - $ref: \"#/components/schemas/ReadyToPay\"\n    Coupon:\n      description: Coupons and Discounts.\n      properties:\n        _links:\n          description: The links related to resource.\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Coupon created time.\n          x-label: Creation time\n          x-sortable: true\n        description:\n          description: \u003e\n            Your coupon description. When it is not empty this is used for\n            invoice discount item description, otherwise the item's description\n            uses coupon's ID like 'Coupon \"COUPON-ID\"'.\n          type: string\n          x-basic: true\n        discount:\n          $ref: \"#/components/schemas/Discount\"\n        expiredTime:\n          description: Coupon's expire time (end time).\n          format: date-time\n          type: string\n          x-basic: true\n          x-label: Valid until\n          x-sortable: true\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Coupon's ID a.k.a redemption code.\n          readOnly: true\n        issuedTime:\n          description: Coupon's issued time (start time).\n          format: date-time\n          type: string\n          x-basic: true\n          x-label: Valid from\n          x-sortable: true\n        redemptionsCount:\n          description: Coupon's redemptions count.\n          minimum: 0\n          readOnly: true\n          type: integer\n        restrictions:\n          description: Coupon restrictions.\n          items:\n            $ref: \"#/components/schemas/CouponRestriction\"\n          type: array\n        status:\n          description: If coupon enabled.\n          enum:\n            - draft\n            - issued\n            - expired\n          readOnly: true\n          type: string\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Coupon updated time.\n          x-label: Last update time\n          x-sortable: true\n      required:\n        - discount\n        - issuedTime\n      type: object\n    CouponExpiration:\n      properties:\n        expiredTime:\n          description: The coupon's expiry time, must be greater than the issued time.\n            Null or empty string will immediately expire the coupon.\n          format: date-time\n          type: string\n      required:\n        - expiredTime\n      type: object\n    CouponRedemption:\n      description: Coupons redemption log.\n      properties:\n        _links:\n          description: The links related to resource.\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        additionalRestrictions:\n          description: Additional restrictions for coupon's redemptions.\n          items:\n            $ref: \"#/components/schemas/RedemptionRestriction\"\n          type: array\n        canceledTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Coupon redemption canceled time.\n          readOnly: true\n          x-sortable: true\n        couponId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Coupon's ID.\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Coupon redeem time.\n          readOnly: true\n        customerId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Customer's ID.\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          readOnly: true\n      type: object\n    CouponRestriction:\n      description: Coupon restrictions.\n      discriminator:\n        mapping:\n          discounts-per-redemption: \"#/components/schemas/discounts-per-redemption\"\n          minimum-order-amount: \"#/components/schemas/minimum-order-amount\"\n          paid-by-time: \"#/components/schemas/paid-by-time\"\n          redemptions-per-customer: \"#/components/schemas/redemptions-per-customer\"\n          restrict-to-invoices: \"#/components/schemas/restrict-to-invoices\"\n          restrict-to-plans: \"#/components/schemas/restrict-to-plans\"\n          restrict-to-products: \"#/components/schemas/restrict-to-products\"\n          restrict-to-subscriptions: \"#/components/schemas/restrict-to-subscriptions\"\n          total-redemptions: \"#/components/schemas/total-redemptions\"\n        propertyName: type\n      properties:\n        type:\n          description: Coupon's restriction type.\n          enum:\n            - discounts-per-redemption\n            - minimum-order-amount\n            - redemptions-per-customer\n            - restrict-to-invoices\n            - restrict-to-plans\n            - restrict-to-subscriptions\n            - restrict-to-products\n            - total-redemptions\n            - paid-by-time\n          type: string\n      required:\n        - type\n      type: object\n    Credential:\n      properties:\n        _links:\n          description: The links related to resource.\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/SelfLink\"\n              - $ref: \"#/components/schemas/CustomerLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        customerId:\n          description: The credential's customer ID.\n          type: string\n        expiredTime:\n          description: The credential's expired time.\n          format: date-time\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The credential identifier string.\n          readOnly: true\n        password:\n          description: The credential's password.\n          format: password\n          type: string\n          writeOnly: true\n        username:\n          description: Credential's username.\n          type: string\n      required:\n        - username\n        - password\n        - customerId\n      type: object\n    Credorax:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                merchantId:\n                  description: Credorax Gateway merchant ID.\n                  type: string\n                merchantMd5Signature:\n                  description: Credorax Gateway md5 signature.\n                  format: password\n                  type: string\n              required:\n                - merchantId\n                - merchantMd5Signature\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Credorax Gateway config.\n    Cryptonator:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Cryptonator credentials object.\n              properties:\n                merchant_id:\n                  description: Cryptonator merchant ID.\n                  type: string\n                secret:\n                  description: Cryptonator secret.\n                  format: password\n                  type: string\n              required:\n                - merchant_id\n                - secret\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Cryptonator config.\n    CurrencyCode:\n      description: ISO 4217 alphabetic currency code.\n      example: USD\n      maxLength: 3\n      minLength: 3\n      type: string\n    CustomEventScheduleInstruction:\n      description: The calculation instruction of scheduled time.\n      discriminator:\n        mapping:\n          date-interval: \"#/components/schemas/date-interval\"\n          day-of-month: \"#/components/schemas/day-of-month\"\n          day-of-week: \"#/components/schemas/day-of-week\"\n        propertyName: method\n      properties:\n        method:\n          enum:\n            - date-interval\n            - day-of-month\n            - day-of-week\n          type: string\n      required:\n        - method\n      type: object\n    CustomField:\n      description: A separate Custom Field schema.\n      properties:\n        _links:\n          description: The links related to resource.\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        additionalSchema:\n          description: \u003e\n            Additional parameters which can be added according to type:\n\n            Parameter Name | Types         | Description\n\n            -------------- | ------------- | -------------\n\n            allowedValues  | string, array | List of allowed values maxLength      | string        | Maximum allowed length for the string, 255 by default, up to 4000\n\n            The additional schema adds additional constrains for values.\n        description:\n          description: The custom field description.\n          type: string\n        name:\n          description: The name of the custom field.\n          readOnly: true\n          type: string\n        type:\n          description: \u003e\n            Type value    | Description\n\n            ------------- | -------------\n\n            array         | An array of strings up to 255 characters, maximum size is 1000 elements boolean       | true or false date          | String of format \"full-date\" (YYYY-MM-DD) from RFC-3339 (full-date) datetime      | String of format \"date-time\" (YYYY-MM-DDTHH:MM:SSZ) from RFC-3339 (date-time) integer       | Cardinal value of -2^31..2^31-1 number        | Float value. It can take cardinal values also which are interpreted as float string        | Regular string up to 255 characters monetary      | A map of 3-letters currency code and amount, e.g. {\"currency\": \"EUR\", \"amount\": 25.30}\n\n            The type cannot be changed.\n          enum:\n            - array\n            - boolean\n            - datetime\n            - integer\n            - number\n            - string\n            - monetary\n          type: string\n      required:\n        - type\n      type: object\n    Customer:\n      properties:\n        _embedded:\n          description: Any embedded objects available that are requested by the `expand`\n            querystring parameter.\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/LeadSourceEmbed\"\n          minItems: 1\n          readOnly: true\n          type: array\n        _links:\n          description: The links related to resource.\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/SelfLink\"\n              - $ref: \"#/components/schemas/DefaultPaymentInstrumentLink\"\n              - $ref: \"#/components/schemas/LeadSourceLink\"\n              - $ref: \"#/components/schemas/WebsiteLink\"\n          minItems: 3\n          readOnly: true\n          type: array\n        averageValue:\n          $ref: \"#/components/schemas/CustomerAverageValue\"\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The customer created time.\n          x-label: Creation Time\n          x-sortable: true\n        customFields:\n          $ref: \"#/components/schemas/ResourceCustomFields\"\n        defaultPaymentInstrument:\n          $ref: \"#/components/schemas/PaymentInstrument\"\n        email:\n          description: The customer's email.\n          format: email\n          readOnly: true\n          type: string\n          x-basic: true\n          x-sortable: true\n        firstName:\n          description: The customer's first name.\n          readOnly: true\n          type: string\n          x-basic: true\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The customer identifier string.\n          readOnly: true\n        invoiceCount:\n          description: An auto-incrementing number based on the sequence of invoices. If\n            set to 0, then this record is a Lead, otherwise is a Customer.\n          readOnly: true\n          type: integer\n          x-sortable: true\n        lastName:\n          description: The customer's last name.\n          readOnly: true\n          type: string\n          x-basic: true\n          x-sortable: true\n        lastPaymentTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The most recent time of an approved payment for the customer.\n          x-basic: true\n          x-label: Last Payment\n          x-sortable: true\n        lifetimeRevenue:\n          $ref: \"#/components/schemas/CustomerLifetimeRevenue\"\n        paymentCount:\n          description: The number of approved payments for the customer.\n          readOnly: true\n          type: integer\n          x-basic: true\n          x-label: Payments\n          x-sortable: true\n        paymentToken:\n          description: |\n            A write-only payment token; if supplied, it will be converted into a\n            payment instrument and be set as the `defaultPaymentInstrument`. The\n            value of this property will override the `defaultPaymentInstrument`\n            in the case that both are supplied. The token may only be used once\n            before it is expired.\n          type: string\n          writeOnly: true\n        primaryAddress:\n          $ref: \"#/components/schemas/ContactObject\"\n        revision:\n          description: \u003e\n            The number of times the customer data has been modified.\n\n            The revision is useful when analyzing webhook data to determine if the change takes precedence over the current representation.\n          readOnly: true\n          type: integer\n        tags:\n          description: A list of customer's tags.\n          items:\n            $ref: \"#/components/schemas/Tag\"\n          readOnly: true\n          type: array\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The customer updated time.\n          x-label: Last Update Time\n          x-sortable: true\n        websiteId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The website's ID.\n          x-sortable: true\n      type: object\n    CustomerAverageValue:\n      properties:\n        amount:\n          description: Average approved payment amount in Merchant's reporting currency.\n          format: double\n          type: number\n          x-basic: true\n          x-label: Average Value\n          x-sortable: true\n          x-type: Money\n        amountUsd:\n          description: Average approved payment amount in USD.\n          format: double\n          type: number\n        currency:\n          allOf:\n            - $ref: \"#/components/schemas/CurrencyCode\"\n          description: Merchant's reporting currency.\n      readOnly: true\n      type: object\n    CustomerEmbed:\n      description: Customer object.\n      properties:\n        customer:\n          $ref: \"#/components/schemas/Customer\"\n      readOnly: true\n      type: object\n    CustomerJWT:\n      properties:\n        _links:\n          description: The links related to resource.\n          items:\n            $ref: \"#/components/schemas/CustomerLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        acl:\n          $ref: \"#/components/schemas/Acl\"\n        createdTime:\n          description: Session created time.\n          format: date-time\n          readOnly: true\n          type: string\n        customClaims:\n          additionalProperties: true\n          example:\n            documents:\n              - identity-proof\n              - address-proof\n            redirectUrl: https://mywebsite.com\n          type: object\n        customerId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The customer's ID.\n          readOnly: true\n        expiredTime:\n          description: Session expired time. Defaults to one hour.\n          format: date-time\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The session identifier string.\n          readOnly: true\n        invalidate:\n          default: true\n          description: Whether to invalidate token after exchange or not.\n          example: true\n          type: boolean\n          writeOnly: true\n        oneTimePassword:\n          description: The one time password sent via an email. Should contain digits only.\n          example: \"123456\"\n          pattern: ^[0-9]{6}$\n          type: string\n          writeOnly: true\n        token:\n          description: The session's token used for authentication.\n          readOnly: true\n          type: string\n        type:\n          description: Session type.\n          enum:\n            - customer\n          readOnly: true\n          type: string\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Session updated time.\n      type: object\n    CustomerLifetimeRevenue:\n      properties:\n        amount:\n          description: Revenue amount in Merchant's reporting currency.\n          format: double\n          type: number\n          x-basic: true\n          x-label: Lifetime Revenue\n          x-sortable: true\n          x-type: Money\n        amountUsd:\n          description: Revenue amount in USD.\n          format: double\n          type: number\n        currency:\n          allOf:\n            - $ref: \"#/components/schemas/CurrencyCode\"\n          description: Merchant's reporting currency.\n      readOnly: true\n      type: object\n    CustomerLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - customer\n            - targetCustomer\n          type: string\n      required:\n        - rel\n      type: object\n    CustomerTimeline:\n      properties:\n        _links:\n          description: The links related to resource.\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        customData:\n          description: Timeline custom event data. Used with `custom-event` type. Will be\n            transformed to `extraData` two-column table in response.\n          example:\n            customAttribute: customValue\n            otherAttribute: otherValue\n          type: object\n          writeOnly: true\n        customEventType:\n          description: Timeline custom event type. Used with `custom-event` type. Must be\n            defined using [Customer Timeline custom event\n            API](#operation/PostCustomerTimelineCustomEventType).\n          maxLength: 255\n          minLength: 1\n          nullable: true\n          type: string\n        extraData:\n          $ref: \"#/components/schemas/TimelineExtraData\"\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The Timeline message identifier string.\n          readOnly: true\n        message:\n          description: The message that describes the message details.\n          type: string\n        occurredTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Timeline message time.\n        triggeredBy:\n          description: Shows who or what triggered the Timeline message.\n          enum:\n            - rebilly\n            - app\n            - direct-api\n          readOnly: true\n          type: string\n        type:\n          description: Timeline message type.\n          enum:\n            - customer-comment-created\n            - customer-created\n            - primary-address-changed\n            - default-payment-instrument-changed\n            - lead-source-changed\n            - custom-fields-changed\n            - coupon-applied\n            - coupon-redeemed\n            - coupon-redemption-canceled\n            - kyc-document-created\n            - kyc-document-accepted\n            - kyc-document-manually-accepted\n            - kyc-document-rejected\n            - kyc-document-manually-rejected\n            - kyc-document-modified\n            - payment-card-expired\n            - payment-instrument-created\n            - payment-instrument-deactivated\n            - customer-bank-account-blocked\n            - customer-blocked\n            - customer-payment-card-blocked\n            - invoice-created\n            - invoice-issued\n            - invoice-abandoned\n            - invoice-voided\n            - invoice-past-due\n            - invoice-paid\n            - invoice-partially-paid\n            - invoice-disputed\n            - invoice-refunded\n            - invoice-partially-refunded\n            - order-created\n            - order-renewed\n            - order-activated\n            - order-completed\n            - order-reactivated\n            - order-canceled\n            - order-upgraded\n            - order-downgraded\n            - order-churned\n            - order-paid-early\n            - transaction-approved\n            - transaction-canceled\n            - transaction-declined\n            - transaction-abandoned\n            - transaction-refunded\n            - transaction-voided\n            - transaction-discrepancy-found\n            - transaction-amount-discrepancy-found\n            - email-message-sent\n            - custom-event-processed\n            - custom-event\n            - transaction-waiting-gateway\n            - aml-list-was-possibly-matched\n            - experian-check-performed\n          type: string\n      type: object\n    CustomerTimelineCustomEvent:\n      properties:\n        _links:\n          description: The links related to resource.\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Customer Timeline Custom event created time.\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Customer Timeline Custom Event identifier string.\n          readOnly: true\n        name:\n          description: Customer Timeline Custom Event type name. It must not be similar to\n            any Rebilly system event.\n          maxLength: 255\n          minLength: 1\n          type: string\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Customer Timeline Custom event updated time.\n      required:\n        - name\n      type: object\n    CyberSource:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: CyberSource credentials object.\n              properties:\n                accessKey:\n                  description: CyberSource access key.\n                  type: string\n                profileId:\n                  description: CyberSource profile ID.\n                  type: string\n                secretKey:\n                  description: CyberSource secret key.\n                  format: password\n                  type: string\n              required:\n                - accessKey\n                - profileId\n                - secretKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: CyberSource config.\n    DataCash:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                client:\n                  description: DataCash Gateway client.\n                  type: string\n                masterCardPayoutsClient:\n                  description: DataCash Gateway client for MasterCard payouts (OCT).\n                  type: string\n                masterCardPayoutsPassword:\n                  description: DataCash Gateway password for MasterCard payouts (OCT).\n                  format: password\n                  type: string\n                password:\n                  description: DataCash Gateway password.\n                  format: password\n                  type: string\n                reportGroup:\n                  description: DataCash report group.\n                  type: string\n                reportPassword:\n                  description: DataCash report password.\n                  format: password\n                  type: string\n                reportUser:\n                  description: DataCash report user.\n                  type: string\n                visaPayoutsClient:\n                  description: DataCash Gateway client for Visa payouts (OCT).\n                  type: string\n                visaPayoutsPassword:\n                  description: DataCash Gateway password for Visa payouts (OCT).\n                  format: password\n                  type: string\n              required:\n                - client\n                - password\n              type: object\n            settings:\n              description: Datacash settings object.\n              properties:\n                delay:\n                  default: 0\n                  description: Auto Capture delay (in hours).\n                  minimum: 0\n                  type: integer\n                policy:\n                  default: 2\n                  description: Policy.\n                  maximum: 7\n                  minimum: 0\n                  type: integer\n              type: object\n            threeDSecureServer:\n              $ref: \"#/components/schemas/DataCash3dsServers\"\n          required:\n            - credentials\n          type: object\n      description: DataCash Gateway config.\n    DataCash3dsServer:\n      allOf:\n        - $ref: \"#/components/schemas/DataCash3dsServers\"\n      description: DataCash Integrated.\n    DataCash3dsServers:\n      description: DataCash 3DS Servers.\n      discriminator:\n        mapping:\n          DataCash3dsServer: \"#/components/schemas/DataCash3dsServer\"\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/ThreeDSecureServerName\"\n          enum:\n            - DataCash3dsServer\n      required:\n        - name\n      type: object\n    DayOfWeekLong:\n      enum:\n        - Sunday\n        - Monday\n        - Tuesday\n        - Wednesday\n        - Thursday\n        - Friday\n        - Saturday\n      type: string\n    DefaultPaymentInstrumentLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - defaultPaymentInstrument\n          type: string\n      required:\n        - rel\n      type: object\n    Dengi:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                projectId:\n                  description: Dengi Gateway project ID.\n                  type: string\n                publicKey:\n                  description: Dengi Gateway public key.\n                  format: password\n                  type: string\n                refundKey:\n                  description: Dengi Gateway refund key.\n                  format: password\n                  type: string\n              required:\n                - projectId\n                - publicKey\n                - refundKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Dengi Gateway config.\n    DetailedProblem:\n      allOf:\n        - $ref: \"#/components/schemas/BlankProblem\"\n        - properties:\n            detail:\n              description: A human-readable explanation specific to this occurrence of the\n                problem.\n              type: string\n      type: object\n    DigitalWalletToken:\n      allOf:\n        - $ref: \"#/components/schemas/CommonPaymentToken\"\n      properties:\n        billingAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: The billing address object.\n          readOnly: true\n        method:\n          description: The token payment method.\n          enum:\n            - digital-wallet\n          type: string\n        paymentInstrument:\n          description: The payment instrument details.\n          properties:\n            amount:\n              description: Authorized for the digital wallet amount.\n              format: double\n              type: number\n            bin:\n              description: Payment Card BIN (the PAN's first 6 digits).\n              format: bin\n              readOnly: true\n              type: string\n            brand:\n              allOf:\n                - $ref: \"#/components/schemas/PaymentCardBrand\"\n              readOnly: true\n            currency:\n              allOf:\n                - $ref: \"#/components/schemas/CurrencyCode\"\n              description: Authorized for the digital wallet currency.\n            descriptor:\n              description: The descriptor for a payment.\n              type: string\n            expMonth:\n              description: Payment Card expiration month.\n              readOnly: true\n              type: integer\n            expYear:\n              description: Payment Card expiration year.\n              readOnly: true\n              type: integer\n            last4:\n              description: Payment Card PAN's last 4 digits.\n              readOnly: true\n              type: string\n            payload:\n              description: The digital wallet encoded data. May contain the digital wallet\n                billing address.\n              type: object\n              writeOnly: true\n            type:\n              description: The digital wallet type.\n              enum:\n                - Apple Pay\n                - Google Pay\n              type: string\n          required:\n            - type\n            - amount\n            - currency\n            - descriptor\n            - payload\n          type: object\n      required:\n        - method\n        - paymentInstrument\n      title: Digital Wallet Token\n      type: object\n    DigitalWalletValidation:\n      discriminator:\n        mapping:\n          Apple Pay: \"#/components/schemas/ApplePayValidation\"\n        propertyName: type\n      properties:\n        type:\n          description: Type of the digital wallet to validate.\n          enum:\n            - Apple Pay\n          type: string\n      required:\n        - type\n      type: object\n    DigitalWallets:\n      description: Configure which digital wallets are enabled.\n      properties:\n        applePay:\n          description: The Apple Pay digital wallet configuration. Skip if not using Apple\n            Pay.\n          properties:\n            isEnabled:\n              default: false\n              description: Set true if Apple Pay is enabled.\n              type: boolean\n          required:\n            - isEnabled\n          type: object\n        googlePay:\n          description: The Google Pay™ digital wallet configuration. Skip if not using\n            Google Pay™.\n          properties:\n            isEnabled:\n              default: false\n              description: Set true if Google Pay is enabled.\n              type: boolean\n            merchantName:\n              description: The merchant name in Google Pay. Leave blank if using FramePay.\n              example: Test Merchant\n              type: string\n            merchantOrigin:\n              description: The merchant origin in Google Pay. The fully qualified domain name.\n                Leave blank if using FramePay.\n              example: www.example.com\n              type: string\n          required:\n            - isEnabled\n          type: object\n      title: Digital Wallets\n      type: object\n    Directa24:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Directa24 credentials object.\n              properties:\n                secret_key:\n                  description: Directa24 secret key.\n                  format: password\n                  type: string\n                web_pay_login:\n                  description: Directa24 web pay status login.\n                  type: string\n                web_pay_tran_key:\n                  description: Directa24 web pay status password.\n                  format: password\n                  type: string\n                x_login:\n                  description: Directa24 login.\n                  type: string\n                x_tran_key:\n                  description: Directa24 transaction key.\n                  format: password\n                  type: string\n              required:\n                - x_login\n                - x_tran_key\n                - secret_key\n                - web_pay_login\n                - web_pay_tran_key\n              type: object\n            settings:\n              description: Directa24 settings object.\n              properties:\n                banks:\n                  description: List of banks which will be shown to customers.\n                  items:\n                    $ref: \"#/components/schemas/Directa24Banks\"\n                  type: array\n                skipStep:\n                  description: Skip step for user to enter their personal information.\n                  type: boolean\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Directa24 config.\n    Directa24Banks:\n      enum:\n        - AA\n        - AL\n        - AZ\n        - B\n        - BB\n        - BC\n        - BE\n        - BL\n        - BM\n        - BN\n        - BP\n        - BQ\n        - BU\n        - BV\n        - BW\n        - BX\n        - BZ\n        - CA\n        - CE\n        - CI\n        - CU\n        - EF\n        - EN\n        - EY\n        - FA\n        - FB\n        - FC\n        - GC\n        - GG\n        - HC\n        - I\n        - IA\n        - IB\n        - JM\n        - LC\n        - LE\n        - LL\n        - MC\n        - MD\n        - MP\n        - MT\n        - NB\n        - OM\n        - OX\n        - PC\n        - PH\n        - PL\n        - SB\n        - SC\n        - SE\n        - SF\n        - SM\n        - SS\n        - ST\n        - SU\n        - TC\n        - TG\n        - TY\n        - UB\n        - UI\n        - UL\n        - US\n        - VD\n        - VI\n        - WA\n        - WP\n        - WU\n      type: string\n    Discount:\n      discriminator:\n        mapping:\n          fixed: \"#/components/schemas/fixed\"\n          percent: \"#/components/schemas/percent\"\n        propertyName: type\n      properties:\n        type:\n          description: Discount type.\n          enum:\n            - fixed\n            - percent\n          type: string\n          x-basic: true\n          x-label: Type\n          x-sortable: true\n      type: object\n    Dispute:\n      properties:\n        _embedded:\n          description: Any embedded objects available that are requested by the `expand`\n            querystring parameter.\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/TransactionEmbed\"\n          minItems: 1\n          readOnly: true\n          type: array\n        _links:\n          description: The links related to resource.\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/SelfLink\"\n              - $ref: \"#/components/schemas/TransactionLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        acquirerReferenceNumber:\n          description: The dispute's acquirer reference number.\n          type: string\n        amount:\n          description: The dispute amount.\n          format: double\n          type: number\n        caseId:\n          description: The case ID for the dispute.\n          type: string\n        category:\n          description: The dispute's category.\n          enum:\n            - fraud\n            - unrecognized\n            - product-not-received\n            - product-unacceptable\n            - product-not-refunded\n            - duplicate\n            - subscription-canceled\n            - uncategorized\n          readOnly: true\n          type: string\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Dispute created time.\n        currency:\n          allOf:\n            - $ref: \"#/components/schemas/CurrencyCode\"\n        customerId:\n          description: The dispute's customer ID.\n          readOnly: true\n          type: string\n        deadlineTime:\n          description: Dispute deadline time.\n          format: date-time\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The dispute identifier string.\n          readOnly: true\n        postedTime:\n          description: Dispute posted time.\n          format: date-time\n          type: string\n        rawResponse:\n          description: Dispute raw response from gateway.\n          readOnly: true\n          type: string\n        reasonCode:\n          description: The dispute's reason code.\n          enum:\n            - \"1000\"\n            - \"10.1\"\n            - \"10.2\"\n            - \"10.3\"\n            - \"10.4\"\n            - \"10.5\"\n            - \"11.1\"\n            - \"11.2\"\n            - \"11.3\"\n            - \"12\"\n            - \"12.1\"\n            - \"12.2\"\n            - \"12.3\"\n            - \"12.4\"\n            - \"12.5\"\n            - \"12.6\"\n            - \"12.7\"\n            - \"13.1\"\n            - \"13.2\"\n            - \"13.3\"\n            - \"13.4\"\n            - \"13.5\"\n            - \"13.6\"\n            - \"13.7\"\n            - \"13.8\"\n            - \"13.9\"\n            - \"2\"\n            - \"30\"\n            - \"31\"\n            - \"35\"\n            - \"37\"\n            - \"40\"\n            - \"41\"\n            - \"42\"\n            - \"46\"\n            - \"47\"\n            - \"49\"\n            - \"50\"\n            - \"53\"\n            - \"54\"\n            - \"55\"\n            - \"57\"\n            - \"59\"\n            - \"60\"\n            - \"62\"\n            - \"7\"\n            - \"70\"\n            - \"71\"\n            - \"72\"\n            - \"73\"\n            - \"74\"\n            - \"75\"\n            - \"76\"\n            - \"77\"\n            - \"79\"\n            - \"8\"\n            - \"80\"\n            - \"81\"\n            - \"82\"\n            - \"83\"\n            - \"85\"\n            - \"86\"\n            - \"93\"\n            - \"00\"\n            - \"63\"\n            - A01\n            - A02\n            - A08\n            - F10\n            - F14\n            - F22\n            - F24\n            - F29\n            - C02\n            - C04\n            - C05\n            - C08\n            - C14\n            - C18\n            - C28\n            - C31\n            - C32\n            - M10\n            - M49\n            - P01\n            - P03\n            - P04\n            - P05\n            - P07\n            - P08\n            - P22\n            - P23\n            - R03\n            - R13\n            - M01\n            - FR1\n            - FR4\n            - FR6\n            - AL\n            - AP\n            - AW\n            - CA\n            - CD\n            - CR\n            - DA\n            - DP\n            - DP1\n            - EX\n            - IC\n            - IN\n            - IS\n            - LP\n            - N\n            - NA\n            - NC\n            - P\n            - RG\n            - RM\n            - RN1\n            - RN2\n            - SV\n            - TF\n            - TNM\n            - UA01\n            - UA02\n            - UA32\n            - UA99\n            - UA03\n            - UA10\n            - UA11\n            - UA12\n            - UA18\n            - UA20\n            - UA21\n            - UA22\n            - UA23\n            - UA28\n            - UA30\n            - UA31\n            - UA38\n            - duplicate\n            - fraudulent\n            - subscription_canceled\n            - product_unacceptable\n            - product_not_received\n            - unrecognized\n            - credit_not_processed\n            - customer_initiated\n            - incorrect_account_details\n            - insufficient_funds\n            - bank_cannot_process\n            - debit_not_authorized\n            - general\n            - pre-chargeback-alert\n            - \"0\"\n            - \"1\"\n            - \"2\"\n            - \"3\"\n            - \"4\"\n            - \"5\"\n            - \"6\"\n            - \"7\"\n            - \"9\"\n            - \"51\"\n            - A\n            - B\n          type: string\n        resolvedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Dispute resolved time.\n        status:\n          description: The dispute's status.\n          enum:\n            - response-needed\n            - under-review\n            - forfeited\n            - won\n            - lost\n            - unknown\n          type: string\n        transactionId:\n          description: The dispute's transaction ID.\n          type: string\n        type:\n          description: The dispute's type.\n          enum:\n            - information-request\n            - first-chargeback\n            - second-chargeback\n            - arbitration\n            - fraud\n            - ethoca-alert\n            - verifi-alert\n          type: string\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Dispute updated time.\n      required:\n        - currency\n        - amount\n        - transactionId\n        - postedTime\n        - type\n        - status\n        - reasonCode\n      type: object\n    DisputeLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - dispute\n          type: string\n      required:\n        - rel\n      type: object\n    DocumentedProblem:\n      allOf:\n        - properties:\n            type:\n              description: A URI reference [[RFC3986](https://tools.ietf.org/html/rfc3986)]\n                that identifies the problem type. It should provide\n                human-readable documentation for the problem type. When this\n                member is not present, its value is assumed to be \"about:blank\".\n              format: uri\n              type: string\n        - $ref: \"#/components/schemas/BlankProblem\"\n      type: object\n    Dragonphoenix:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Dragonphoenix credentials object.\n              properties:\n                rcode:\n                  description: Dragonphoenix rcode.\n                  format: password\n                  type: string\n                sid:\n                  description: Dragonphoenix site ID.\n                  type: string\n              required:\n                - sid\n                - rcode\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Dragonphoenix config.\n    DueTimeShiftInstruction:\n      default:\n        duration: 1\n        unit: hour\n      description: \u003e\n        The calculation instruction of due time.\n\n        This is used in conjunction with the **billing anchor** to calculate due time of invoice.\n\n        The chronology of due time shift is always **after**.\n      properties:\n        duration:\n          description: The number of the units.\n          minimum: 1\n          type: integer\n        unit:\n          oneOf:\n            - $ref: \"#/components/schemas/TimeUnit\"\n            - $ref: \"#/components/schemas/TimePluralUnit\"\n      required:\n        - duration\n        - unit\n      type: object\n    DynamicIpnLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - dynamicIpnUrl\n          type: string\n      required:\n        - rel\n      type: object\n    EBANX:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: EBANX credentials object.\n              properties:\n                integrationKey:\n                  description: EBANX integration key.\n                  format: password\n                  type: string\n              required:\n                - integrationKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: EBANX config.\n    EMS:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: EMS credentials object.\n              properties:\n                clientCertificate:\n                  description: Client Certificate.\n                  type: string\n                  x-multiline: true\n                clientCertificatePassword:\n                  description: Client Certificate password.\n                  format: password\n                  type: string\n                merchantName:\n                  description: Merchant Name for SFTP reconciliation.\n                  type: string\n                password:\n                  description: EMS password.\n                  format: password\n                  type: string\n                privateKey:\n                  description: Private Key.\n                  format: password\n                  type: string\n                  x-multiline: true\n                privateKeyPassword:\n                  description: Private key password.\n                  format: password\n                  type: string\n                serverCertificate:\n                  description: Server Certificate.\n                  type: string\n                  x-multiline: true\n                sftpPrivateKey:\n                  description: SFTP reconciliation private key.\n                  format: password\n                  type: string\n                  x-multiline: true\n                storeId:\n                  description: EMS store id.\n                  type: string\n                userId:\n                  description: EMS account id.\n                  type: string\n              required:\n                - storeId\n                - userId\n                - password\n                - privateKey\n                - privateKeyPassword\n                - clientCertificate\n                - clientCertificatePassword\n                - serverCertificate\n              type: object\n            settings:\n              description: EMS settings object.\n              properties:\n                delay:\n                  description: Automatic capture delay in hours.\n                  type: integer\n              type: object\n            threeDSecureServer:\n              $ref: \"#/components/schemas/EMS3dsServers\"\n          required:\n            - credentials\n          type: object\n      description: EMS e-Commerce (XML) API config.\n    EMS3dsServers:\n      description: EMS 3DS Servers.\n      discriminator:\n        mapping:\n          ThreeDSecureIO3dsServer: \"#/components/schemas/ThreeDSecureIO3dsServer\"\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/ThreeDSecureServerName\"\n          enum:\n            - ThreeDSecureIO3dsServer\n      required:\n        - name\n      type: object\n    EPG:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: EPG credentials object.\n              properties:\n                merchantId:\n                  description: Merchant ID.\n                  type: string\n                merchantKey:\n                  description: Merchant key.\n                  format: password\n                  type: string\n                merchantPassword:\n                  description: Merchant password.\n                  format: password\n                  type: string\n                productId:\n                  description: Product ID.\n                  type: string\n              required:\n                - merchantId\n                - productId\n                - merchantPassword\n                - merchantKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: EPG config.\n    EPro:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: EPro credentials object.\n              properties:\n                apiSecretKey:\n                  description: EPro API secret key.\n                  format: password\n                  type: string\n              required:\n                - apiSecretKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: EPro config.\n    EcorePay:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                accountAuth:\n                  description: EcorePay Account Auth.\n                  format: password\n                  type: string\n                accountId:\n                  description: EcorePay Account ID.\n                  type: string\n              required:\n                - accountId\n                - accountAuth\n              type: object\n          required:\n            - credentials\n          type: object\n      description: EcorePay Gateway config.\n    Elavon:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Elavon credentials object.\n              properties:\n                ssl_merchant_id:\n                  description: Elavon merchant ID.\n                  type: string\n                ssl_pin:\n                  description: Elavon pin.\n                  format: password\n                  type: string\n                ssl_user_id:\n                  description: Elavon user ID.\n                  type: string\n              required:\n                - ssl_merchant_id\n                - ssl_user_id\n                - ssl_pin\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Elavon config.\n    Error:\n      allOf:\n        - $ref: \"#/components/schemas/Problem\"\n        - properties:\n            error:\n              deprecated: true\n              type: string\n      type: object\n    Euteller:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Euteller credentials object.\n              properties:\n                password:\n                  format: password\n                  type: string\n                username:\n                  type: string\n              required:\n                - username\n                - password\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Euteller config.\n    File:\n      properties:\n        _links:\n          description: The links related to resource.\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/SelfLink\"\n              - $ref: \"#/components/schemas/FileDownloadLink\"\n              - $ref: \"#/components/schemas/SignedLinkLink\"\n              - $ref: \"#/components/schemas/PermalinkLink\"\n          minItems: 3\n          readOnly: true\n          type: array\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The upload date/time.\n        description:\n          description: The File description.\n          type: string\n        extension:\n          description: The File extension.\n          type: string\n        height:\n          description: Image height, applicable to images only.\n          readOnly: true\n          type: integer\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          readOnly: true\n        isPublic:\n          description: Is the file available publicly (without authentication). If true,\n            the permalink in the _links section contains the public URL.\n          type: boolean\n        mime:\n          description: The mime type.\n          enum:\n            - image/png\n            - image/jpeg\n            - image/gif\n            - application/pdf\n            - audio/mpeg\n          readOnly: true\n          type: string\n        name:\n          description: Original File name.\n          type: string\n        sha1:\n          description: Hash sum of the file.\n          readOnly: true\n          type: string\n        size:\n          description: The File size in bytes.\n          readOnly: true\n          type: integer\n        tags:\n          description: The tags list.\n          items:\n            type: string\n          type: array\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The latest update date/time.\n        width:\n          description: Image width, applicable to images only.\n          readOnly: true\n          type: integer\n      type: object\n    FileCreateFromInline:\n      properties:\n        description:\n          description: The file description.\n          example: My file description\n          type: string\n        file:\n          description: The file in base64 encoded format.\n          example: R0lGODlhAQABAIAAAAUEBAAAACwAAAAAAQABAAACAkQBADs=\n          type: string\n        isPublic:\n          description: The File visibility. If public a permalink is provided.\n          example: false\n          type: boolean\n        name:\n          description: The file name used for downloading.\n          example: logo.png\n          type: string\n        tags:\n          description: The tags list.\n          example:\n            - test\n            - tags\n          items:\n            type: string\n          type: array\n      required:\n        - file\n      type: object\n    FileCreateFromUrl:\n      properties:\n        description:\n          description: The file description.\n          example: My file description\n          type: string\n        isPublic:\n          description: The File visibility. If public a permalink is provided.\n          example: false\n          type: boolean\n        name:\n          description: The file name used for downloading.\n          example: logo.png\n          type: string\n        tags:\n          description: The tags list.\n          example:\n            - test\n            - tags\n          items:\n            type: string\n          type: array\n        url:\n          description: The URL of the file to upload.\n          example: https://blog.rebilly.com/wp-content/uploads/2017/09/rb_LogoInverted_Small.png\n          type: string\n      required:\n        - url\n      type: object\n    FileDownloadLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - download\n          type: string\n      required:\n        - rel\n      type: object\n    FileEmbed:\n      description: File object.\n      properties:\n        file:\n          $ref: \"#/components/schemas/File\"\n      readOnly: true\n      type: object\n    FileLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - file\n          type: string\n      required:\n        - rel\n      type: object\n    FinTecSystems:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: FinTecSystems credentials object.\n              properties:\n                apiKey:\n                  description: FinTecSystems api key.\n                  format: password\n                  type: string\n              required:\n                - apiKey\n              type: object\n            settings:\n              description: FinTecSystems settings object.\n              properties:\n                recipientBIC:\n                  description: BIC of the recipient account.\n                  type: string\n                recipientCountry:\n                  description: Two letter country code.\n                  enum:\n                    - AT\n                    - CH\n                    - DE\n                  type: string\n                recipientHolder:\n                  description: Account holder of the recipient account.\n                  type: string\n                recipientIBAN:\n                  description: IBAN of the recipient account.\n                  type: string\n              required:\n                - recipientIBAN\n                - recipientBIC\n                - recipientHolder\n                - recipientCountry\n              type: object\n          required:\n            - credentials\n            - settings\n          type: object\n      description: FinTecSystems config.\n    Finrax:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Finrax credentials object.\n              properties:\n                apiKey:\n                  description: Finrax API Key.\n                  format: password\n                  type: string\n                apiSecret:\n                  description: Finrax API Secret.\n                  format: password\n                  type: string\n                businessId:\n                  description: Finrax Business Id.\n                  type: string\n              required:\n                - businessId\n                - apiKey\n                - apiSecret\n              type: object\n            settings:\n              description: Finrax settings object.\n              properties:\n                tolerancePercentage:\n                  $ref: \"#/components/schemas/AmountAdjustmentTolerance\"\n              required:\n                - tolerancePercentage\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Finrax config.\n    Flexepin:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                apiKey:\n                  description: Flexepin API Key.\n                  type: string\n                apiSecret:\n                  description: Flexepin API Secret.\n                  format: password\n                  type: string\n              required:\n                - apiKey\n                - apiSecret\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Flexepin Gateway config.\n    FlexiblePlan:\n      allOf:\n        - $ref: \"#/components/schemas/CommonPlan\"\n      properties:\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The Plan identifier.\n          readOnly: false\n      required:\n        - id\n        - name\n        - currency\n        - productId\n        - pricing\n    Forte:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                accountId:\n                  description: Forte Gateway account ID.\n                  type: string\n                apiAccessId:\n                  description: Forte Gateway api access ID.\n                  format: password\n                  type: string\n                apiSecretKey:\n                  description: Forte Gateway api secret key.\n                  format: password\n                  type: string\n                locationId:\n                  description: Forte Gateway location ID.\n                  type: string\n              required:\n                - accountId\n                - locationId\n                - apiAccessId\n                - apiSecretKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Forte Gateway config.\n    FundSend:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                clientId:\n                  description: FundSend Gateway client ID.\n                  type: string\n                secretWord:\n                  description: FundSend Gateway secret word.\n                  format: password\n                  type: string\n              required:\n                - clientId\n                - secretWord\n              type: object\n          required:\n            - credentials\n          type: object\n      description: FundSend Gateway config.\n    GET:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                accountId:\n                  description: GET Gateway account ID.\n                  type: string\n              required:\n                - accountId\n              type: object\n            threeDSecureServer:\n              $ref: \"#/components/schemas/GET3dsServers\"\n          required:\n            - credentials\n          type: object\n      description: GET Gateway config.\n    GET3dsServers:\n      description: GET 3DS Servers.\n      discriminator:\n        mapping:\n          Other: \"#/components/schemas/Other\"\n          Paay3dsServer: \"#/components/schemas/Paay3dsServer\"\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/ThreeDSecureServerName\"\n          enum:\n            - Paay3dsServer\n            - Other\n      required:\n        - name\n      type: object\n    GatewayAccount:\n      discriminator:\n        mapping:\n          A1Gateway: \"#/components/schemas/A1Gateway\"\n          Adyen: \"#/components/schemas/Adyen\"\n          Airpay: \"#/components/schemas/Airpay\"\n          AmexVPC: \"#/components/schemas/AmexVPC\"\n          ApcoPay: \"#/components/schemas/ApcoPay\"\n          AsiaPaymentGateway: \"#/components/schemas/AsiaPaymentGateway\"\n          AstroPayCard: \"#/components/schemas/AstroPayCard\"\n          AuthorizeNet: \"#/components/schemas/AuthorizeNet\"\n          Bambora: \"#/components/schemas/Bambora\"\n          BitPay: \"#/components/schemas/BitPay\"\n          BlueSnap: \"#/components/schemas/BlueSnap\"\n          BraintreePayments: \"#/components/schemas/BraintreePayments\"\n          CASHlib: \"#/components/schemas/CASHlib\"\n          CCAvenue: \"#/components/schemas/CCAvenue\"\n          CODVoucher: \"#/components/schemas/CODVoucher\"\n          Cardknox: \"#/components/schemas/Cardknox\"\n          CashToCode: \"#/components/schemas/CashToCode\"\n          Cashflows: \"#/components/schemas/Cashflows\"\n          CauriPayment: \"#/components/schemas/CauriPayment\"\n          Cayan: \"#/components/schemas/Cayan\"\n          Chase: \"#/components/schemas/Chase\"\n          Circle: \"#/components/schemas/Circle\"\n          Citadel: \"#/components/schemas/Citadel\"\n          Clearhaus: \"#/components/schemas/Clearhaus\"\n          CoinPayments: \"#/components/schemas/CoinPayments\"\n          Conekta: \"#/components/schemas/Conekta\"\n          Coppr: \"#/components/schemas/Coppr\"\n          Credorax: \"#/components/schemas/Credorax\"\n          Cryptonator: \"#/components/schemas/Cryptonator\"\n          CyberSource: \"#/components/schemas/CyberSource\"\n          DataCash: \"#/components/schemas/DataCash\"\n          Dengi: \"#/components/schemas/Dengi\"\n          Directa24: \"#/components/schemas/Directa24\"\n          Dragonphoenix: \"#/components/schemas/Dragonphoenix\"\n          EBANX: \"#/components/schemas/EBANX\"\n          EMS: \"#/components/schemas/EMS\"\n          EPG: \"#/components/schemas/EPG\"\n          EPro: \"#/components/schemas/EPro\"\n          EcorePay: \"#/components/schemas/EcorePay\"\n          Elavon: \"#/components/schemas/Elavon\"\n          Euteller: \"#/components/schemas/Euteller\"\n          FinTecSystems: \"#/components/schemas/FinTecSystems\"\n          Finrax: \"#/components/schemas/Finrax\"\n          Flexepin: \"#/components/schemas/Flexepin\"\n          Forte: \"#/components/schemas/Forte\"\n          FundSend: \"#/components/schemas/FundSend\"\n          GET: \"#/components/schemas/GET\"\n          Gigadat: \"#/components/schemas/Gigadat\"\n          GlobalOne: \"#/components/schemas/GlobalOne\"\n          Gooney: \"#/components/schemas/Gooney\"\n          Gpaysafe: \"#/components/schemas/Gpaysafe\"\n          Greenbox: \"#/components/schemas/Greenbox\"\n          HiPay: \"#/components/schemas/HiPay\"\n          ICEPAY: \"#/components/schemas/ICEPAY\"\n          INOVAPAY: \"#/components/schemas/INOVAPAY\"\n          Ilixium: \"#/components/schemas/Ilixium\"\n          Ingenico: \"#/components/schemas/Ingenico\"\n          Inovio: \"#/components/schemas/Inovio\"\n          InstaDebit: \"#/components/schemas/InstaDebit\"\n          Intuit: \"#/components/schemas/Intuit\"\n          IpayOptions: \"#/components/schemas/IpayOptions\"\n          JetPay: \"#/components/schemas/JetPay\"\n          Jeton: \"#/components/schemas/Jeton\"\n          Khelocard: \"#/components/schemas/Khelocard\"\n          Konnektive: \"#/components/schemas/Konnektive\"\n          LPG: \"#/components/schemas/LPG\"\n          MiFinity: \"#/components/schemas/MiFinity\"\n          Moneris: \"#/components/schemas/Moneris\"\n          MtaPay: \"#/components/schemas/MtaPay\"\n          MuchBetter: \"#/components/schemas/MuchBetter\"\n          MyFatoorah: \"#/components/schemas/MyFatoorah\"\n          NGenius: \"#/components/schemas/NGenius\"\n          NMI: \"#/components/schemas/NMI\"\n          Neosurf: \"#/components/schemas/Neosurf\"\n          Netbanking: \"#/components/schemas/Netbanking\"\n          Neteller: \"#/components/schemas/Neteller\"\n          NinjaWallet: \"#/components/schemas/NinjaWallet\"\n          NuaPay: \"#/components/schemas/NuaPay\"\n          OchaPay: \"#/components/schemas/OchaPay\"\n          OnRamp: \"#/components/schemas/OnRamp\"\n          Onlineueberweisen: \"#/components/schemas/Onlineueberweisen\"\n          Pagsmile: \"#/components/schemas/Pagsmile\"\n          Panamerican: \"#/components/schemas/Panamerican\"\n          PandaGateway: \"#/components/schemas/PandaGateway\"\n          ParamountEft: \"#/components/schemas/ParamountEft\"\n          ParamountInterac: \"#/components/schemas/ParamountInterac\"\n          Pay4Fun: \"#/components/schemas/Pay4Fun\"\n          PayCash: \"#/components/schemas/PayCash\"\n          PayClub: \"#/components/schemas/PayClub\"\n          PayPal: \"#/components/schemas/PayPal\"\n          PayTabs: \"#/components/schemas/PayTabs\"\n          PayULatam: \"#/components/schemas/PayULatam\"\n          Payeezy: \"#/components/schemas/Payeezy\"\n          Payflow: \"#/components/schemas/Payflow\"\n          PaymenTechnologies: \"#/components/schemas/PaymenTechnologies\"\n          PaymentAsia: \"#/components/schemas/PaymentAsia\"\n          PaymentsOS: \"#/components/schemas/PaymentsOS\"\n          Paymero: \"#/components/schemas/Paymero\"\n          Payr: \"#/components/schemas/Payr\"\n          Paysafe: \"#/components/schemas/Paysafe\"\n          Paysafecash: \"#/components/schemas/Paysafecash\"\n          Payvision: \"#/components/schemas/Payvision\"\n          Piastrix: \"#/components/schemas/Piastrix\"\n          Plugnpay: \"#/components/schemas/Plugnpay\"\n          PostFinance: \"#/components/schemas/PostFinance\"\n          Prosa: \"#/components/schemas/Prosa\"\n          RPN: \"#/components/schemas/RPN\"\n          Rapyd: \"#/components/schemas/Rapyd\"\n          Realex: \"#/components/schemas/Realex\"\n          Realtime: \"#/components/schemas/Realtime\"\n          Redsys: \"#/components/schemas/Redsys\"\n          Rotessa: \"#/components/schemas/Rotessa\"\n          SMSVoucher: \"#/components/schemas/SMSVoucher\"\n          Sagepay: \"#/components/schemas/Sagepay\"\n          SaltarPay: \"#/components/schemas/SaltarPay\"\n          SeamlessChex: \"#/components/schemas/SeamlessChex\"\n          SecureTrading: \"#/components/schemas/SecureTrading\"\n          SecurionPay: \"#/components/schemas/SecurionPay\"\n          Skrill: \"#/components/schemas/Skrill\"\n          SmartInvoice: \"#/components/schemas/SmartInvoice\"\n          Sofort: \"#/components/schemas/Sofort\"\n          SparkPay: \"#/components/schemas/SparkPay\"\n          StaticGateway: \"#/components/schemas/StaticGateway\"\n          Stripe: \"#/components/schemas/Stripe\"\n          TWINT: \"#/components/schemas/TWINT\"\n          TestProcessor: \"#/components/schemas/TestProcessor\"\n          ToditoCash: \"#/components/schemas/ToditoCash\"\n          TrustPay: \"#/components/schemas/TrustPay\"\n          Trustly: \"#/components/schemas/Trustly\"\n          TrustsPay: \"#/components/schemas/TrustsPay\"\n          UPayCard: \"#/components/schemas/UPayCard\"\n          USAePay: \"#/components/schemas/USAePay\"\n          VCreditos: \"#/components/schemas/VCreditos\"\n          VantivLitle: \"#/components/schemas/VantivLitle\"\n          Wallet88: \"#/components/schemas/Wallet88\"\n          Walpay: \"#/components/schemas/Walpay\"\n          Wirecard: \"#/components/schemas/Wirecard\"\n          WorldlineAtosFrankfurt: \"#/components/schemas/WorldlineAtosFrankfurt\"\n          Worldpay: \"#/components/schemas/Worldpay\"\n          XPay: \"#/components/schemas/XPay\"\n          Zimpler: \"#/components/schemas/Zimpler\"\n          Zotapay: \"#/components/schemas/Zotapay\"\n          dLocal: \"#/components/schemas/dLocal\"\n          eMerchantPay: \"#/components/schemas/eMerchantPay\"\n          eZeeWallet: \"#/components/schemas/eZeeWallet\"\n          ecoPayz: \"#/components/schemas/ecoPayz\"\n          ezyEFT: \"#/components/schemas/ezyEFT\"\n          iCanPay: \"#/components/schemas/iCanPay\"\n          iCheque: \"#/components/schemas/iCheque\"\n          iDebit: \"#/components/schemas/iDebit\"\n          loonie: \"#/components/schemas/loonie\"\n          vegaaH: \"#/components/schemas/vegaaH\"\n        propertyName: gatewayName\n      properties:\n        _links:\n          description: The links related to resource.\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/SelfLink\"\n              - $ref: \"#/components/schemas/OnBoardingUrlLink\"\n              - $ref: \"#/components/schemas/DynamicIpnLink\"\n              - $ref: \"#/components/schemas/StaticIpnLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        acceptedCurrencies:\n          description: Accepted currencies (array of the currency three letter codes).\n          items:\n            type: string\n          type: array\n        acquirerName:\n          allOf:\n            - $ref: \"#/components/schemas/AcquirerName\"\n          default: Other\n        additionalFilters:\n          description: \u003e\n            The additional filters are used to determine whether the gateway\n            account can be selected for the transaction to be processed.\n\n            For example, the filter may put a maximum amount value. If the transaction is above that amount, this gateway account wouldn't be used.\n\n            This follows our standard filter format.\n          example: amount:1..100;bin:411111,444433\n          type: string\n        approvalWindowTtl:\n          default: 3600\n          description: The time window (in seconds) allotted for approving an offsite\n            transaction before it is automatically `abandoned`.\n          maximum: 16777215\n          minimum: 300\n          type: integer\n        cityField:\n          description: The gateway account's city field (also known as line 2 descriptor).\n          type: string\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Gateway Account created time.\n        dccForceCurrency:\n          description: \u003e\n            Force dynamic currency conversion to the specified currency on each\n            sale.\n\n            Leave it empty to disable force DCC.\n          type: string\n        dccMarkup:\n          description: Dynamic currency conversion markup in basis points.\n          maximum: 10000\n          minimum: -10000\n          type: integer\n        descriptor:\n          description: The gateway account's descriptor.\n          type: string\n        digitalWallets:\n          $ref: \"#/components/schemas/DigitalWallets\"\n        dynamicDescriptor:\n          default: false\n          description: True, if Gateway Account allows dynamic descriptor.\n          type: boolean\n        excludedDccQuoteCurrencies:\n          description: Excluded Dynamic Currency Conversion Quote Currencies.\n          items:\n            type: string\n          type: array\n        gatewayName:\n          $ref: \"#/components/schemas/GatewayName\"\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The gateway identifier string.\n          readOnly: true\n        isDown:\n          description: True if gateway is currently in downtime period.\n          readOnly: true\n          type: boolean\n        merchantCategoryCode:\n          default: \"0000\"\n          description: The gateway account's merchant category code.\n          pattern: ^[0-9]{4}$\n          type: string\n        method:\n          $ref: \"#/components/schemas/PaymentMethod\"\n        monthlyLimit:\n          description: Monthly Limit.\n          format: double\n          minimum: 0\n          type: number\n        organizationId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          deprecated: true\n          description: Organization ID.\n          readOnly: true\n        paymentCardSchemes:\n          description: Accepted payment card brands.\n          items:\n            $ref: \"#/components/schemas/PaymentCardBrand\"\n          type: array\n        reconciliationWindowEnabled:\n          default: false\n          description: If a transaction is not reconciled within the\n            `reconciliationWindowTtl` time, then the transaction is marked as\n            `abandoned`.\n          type: boolean\n        reconciliationWindowTtl:\n          description: The time window (in seconds) allotted for a reconciliation to\n            occur. If it is not reconciled in that time, then the transaction is\n            marked as `abandoned`.\n          maximum: 16777215\n          minimum: 300\n          type: integer\n        status:\n          description: The gateway account's status.\n          enum:\n            - active\n            - inactive\n            - pending\n            - closed\n          readOnly: true\n          type: string\n        sticky:\n          default: true\n          description: Customer's payment instrument will \"stick\" to the gateway account\n            for future transactions when enabled.\n          type: boolean\n        threeDSecure:\n          default: false\n          description: True, if Gateway Account allows 3DSecure.\n          type: boolean\n        timeout:\n          description: Gateway Account request timeout in seconds.\n          maximum: 120\n          minimum: 10\n          nullable: true\n          type: integer\n        token:\n          description: Gateway Account token.\n          example: TwiX3f92k4AiBE27BzTbQ38hHjicBz_w\n          readOnly: true\n          type: string\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Gateway Account updated time.\n      required:\n        - gatewayName\n        - method\n        - acceptedCurrencies\n      type: object\n    GatewayAccountEmbed:\n      description: Gateway Account object.\n      properties:\n        gatewayAccount:\n          $ref: \"#/components/schemas/GatewayAccount\"\n      readOnly: true\n      type: object\n    GatewayAccountLimit:\n      properties:\n        _links:\n          description: The links related to resource.\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        cap:\n          description: \u003e\n            The limit's value cap is the maximum desired value.\n\n            If type is money, the currency is the report currency.\n\n            The cap only applies to approved transactions of type `authorize` or `sale`.\n          example: 1000\n          type: integer\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Gateway account limit created time.\n        endTime:\n          description: The limit's current period end time. At this time, the limit will\n            reset.\n          format: date-time\n          readOnly: true\n          type: string\n        frequency:\n          description: The limit's period will reset according to the frequency.\n          enum:\n            - daily\n            - monthly\n          readOnly: true\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The gateway account limit identifier.\n          readOnly: true\n        startTime:\n          description: The limit's current period start time.\n          format: date-time\n          readOnly: true\n          type: string\n        status:\n          description: The gateway account limit status.\n          enum:\n            - monitoring\n            - reached\n          readOnly: true\n          type: string\n        type:\n          description: |\n            The limit can be on `money` or `count` of transactions.\n            If `money` is chosen, the currency is the report currency.\n          enum:\n            - count\n            - money\n          readOnly: true\n          type: string\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Gateway account limit updated time.\n        usage:\n          description: The limit's actual usage during this period.\n          example: 375\n          readOnly: true\n          type: integer\n      required:\n        - cap\n      type: object\n    GatewayAccountLimitLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - gatewayAccountLimit\n          type: string\n      required:\n        - rel\n      type: object\n    GatewayAccountLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - gatewayAccount\n          type: string\n      required:\n        - rel\n      type: object\n    GatewayName:\n      description: The payment gateway name.\n      enum:\n        - A1Gateway\n        - Adyen\n        - Airpay\n        - AmexVPC\n        - ApcoPay\n        - AsiaPaymentGateway\n        - AstroPayCard\n        - AuthorizeNet\n        - Bambora\n        - BitPay\n        - BlueSnap\n        - BraintreePayments\n        - Cardknox\n        - Cashflows\n        - CASHlib\n        - CashToCode\n        - CauriPayment\n        - Cayan\n        - CCAvenue\n        - Chase\n        - Circle\n        - Citadel\n        - Clearhaus\n        - CODVoucher\n        - CoinPayments\n        - Conekta\n        - Coppr\n        - Credorax\n        - Cryptonator\n        - CyberSource\n        - DataCash\n        - Dengi\n        - Dragonphoenix\n        - Directa24\n        - dLocal\n        - EBANX\n        - ecoPayz\n        - EcorePay\n        - Elavon\n        - Euteller\n        - eMerchantPay\n        - EMS\n        - EPG\n        - EPro\n        - eZeeWallet\n        - ezyEFT\n        - Finrax\n        - Flexepin\n        - FinTecSystems\n        - FundSend\n        - Forte\n        - GET\n        - Gigadat\n        - GlobalOnePay\n        - Gooney\n        - Gpaysafe\n        - Greenbox\n        - HiPay\n        - iCanPay\n        - ICEPAY\n        - iCheque\n        - iDebit\n        - Ilixium\n        - Ingenico\n        - INOVAPAY\n        - Inovio\n        - Intuit\n        - InstaDebit\n        - IpayOptions\n        - JetPay\n        - Jeton\n        - Khelocard\n        - Konnektive\n        - loonie\n        - LPG\n        - MiFinity\n        - Moneris\n        - MtaPay\n        - MuchBetter\n        - MyFatoorah\n        - Neosurf\n        - Netbanking\n        - Neteller\n        - NGenius\n        - NinjaWallet\n        - NMI\n        - NuaPay\n        - OchaPay\n        - Onlineueberweisen\n        - OnRamp\n        - Pagsmile\n        - Panamerican\n        - ParamountEft\n        - ParamountInterac\n        - PandaGateway\n        - Pay4Fun\n        - PayCash\n        - PayClub\n        - Payeezy\n        - Payflow\n        - PaymentAsia\n        - PaymenTechnologies\n        - PaymentsOS\n        - Paymero\n        - PayPal\n        - Payr\n        - Paysafe\n        - Paysafecash\n        - PayTabs\n        - PayULatam\n        - Payvision\n        - Piastrix\n        - Plugnpay\n        - PostFinance\n        - Prosa\n        - Rapyd\n        - Realex\n        - Realtime\n        - Redsys\n        - Rotessa\n        - RPN\n        - SaltarPay\n        - Sagepay\n        - SeamlessChex\n        - SecureTrading\n        - SecurionPay\n        - Skrill\n        - SmartInvoice\n        - SMSVoucher\n        - Sofort\n        - SparkPay\n        - StaticGateway\n        - Stripe\n        - TestProcessor\n        - ToditoCash\n        - TrustPay\n        - TrustsPay\n        - Trustly\n        - TWINT\n        - UPayCard\n        - USAePay\n        - VantivLitle\n        - vegaaH\n        - VCreditos\n        - Wallet88\n        - Walpay\n        - Wirecard\n        - WorldlineAtosFrankfurt\n        - Worldpay\n        - XPay\n        - Zimpler\n        - Zotapay\n      type: string\n    Gigadat:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Gigadat credentials object.\n              properties:\n                accessToken:\n                  description: Gigadat access token.\n                  format: password\n                  type: string\n                campaignId:\n                  description: Gigadat campaign ID.\n                  type: string\n                securityToken:\n                  description: Gigadat security token.\n                  format: password\n                  type: string\n              required:\n                - campaignId\n                - accessToken\n                - securityToken\n              type: object\n            settings:\n              properties:\n                sandbox:\n                  default: false\n                  description: True if gateway account is in sandbox mode.\n                  type: boolean\n              required:\n                - sandbox\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Gigadat config.\n    GlobalOne:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                sharedSecret:\n                  description: GlobalOne Gateway shared secret.\n                  format: password\n                  type: string\n                terminalId:\n                  description: GlobalOne Gateway terminal ID.\n                  type: string\n              required:\n                - terminalId\n                - sharedSecret\n              type: object\n          required:\n            - credentials\n          type: object\n      description: GlobalOne Gateway config.\n    GlobalWebhookEventType:\n      description: Rebilly webhooks event type.\n      enum:\n        - aml-list-possibly-matched\n        - customer-created\n        - customer-merged\n        - customer-one-time-password-requested\n        - customer-updated\n        - dispute-created\n        - experian-check-performed\n        - gateway-account-downtime-ended\n        - gateway-account-downtime-started\n        - gateway-account-limit-reached\n        - gateway-account-requested\n        - invoice-abandoned\n        - invoice-created\n        - invoice-issued\n        - invoice-modified\n        - invoice-paid\n        - invoice-past-due\n        - invoice-past-due-reminder\n        - invoice-reissued\n        - invoice-voided\n        - kyc-document-accepted\n        - kyc-document-created\n        - kyc-document-modified\n        - kyc-document-rejected\n        - kyc-document-reviewed\n        - lead-source-changed\n        - nsf-response-received\n        - offsite-payment-completed\n        - order-completed\n        - payment-card-created\n        - payment-card-expiration-reminder\n        - payment-card-expired\n        - payment-instrument-modified\n        - renewal-invoice-issued\n        - renewal-invoice-payment-canceled\n        - renewal-invoice-payment-declined\n        - risk-score-changed\n        - subscription-activated\n        - subscription-canceled\n        - subscription-modified\n        - subscription-reactivated\n        - subscription-renewal-reminder\n        - subscription-renewed\n        - subscription-trial-converted\n        - subscription-trial-end-reminder\n        - subscription-trial-ended\n        - subscription-trial-end-changed\n        - transaction-amount-discrepancy-found\n        - transaction-declined\n        - transaction-discrepancy-found\n        - transaction-process-requested\n        - transaction-processed\n        - transaction-reconciled\n        - transaction-timeout-resolved\n        - waiting-gateway-transaction-completed\n      type: string\n    Gooney:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Gooney credentials object.\n              properties:\n                apiKey:\n                  description: Gooney API key.\n                  type: string\n                apiPassword:\n                  description: Gooney API password.\n                  format: password\n                  type: string\n                apiSecret:\n                  description: Gooney API secret.\n                  format: password\n                  type: string\n                apiUser:\n                  description: Gooney API user.\n                  type: string\n              required:\n                - username\n                - password\n                - apiKey\n                - apiSecret\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Gooney config.\n    Gpaysafe:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                apiKey:\n                  description: Gpaysafe apiKey.\n                  type: string\n              required:\n                - apiKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Gpaysafe Gateway config.\n    Greenbox:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Greenbox credentials object.\n              properties:\n                clientId:\n                  description: Greenbox client ID.\n                  type: string\n                clientSecret:\n                  description: Greenbox client secret.\n                  format: password\n                  type: string\n                locationId:\n                  description: Greenbox location ID.\n                  type: string\n              required:\n                - clientId\n                - clientSecret\n                - locationId\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Greenbox config.\n    HiPay:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: HiPay credentials object.\n              properties:\n                apiPassword:\n                  description: HiPay API password.\n                  format: password\n                  type: string\n                apiUsername:\n                  description: HiPay API user name.\n                  type: string\n              required:\n                - apiUsername\n                - apiPassword\n              type: object\n          required:\n            - credentials\n          type: object\n      description: HiPay config.\n    HttpHeaders:\n      additionalProperties:\n        type: string\n      description: The HTTP headers.\n      example:\n        Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\n        Content-Type: application/json\n      type: object\n    IBANInstrument:\n      allOf:\n        - $ref: \"#/components/schemas/BankAccountInstrument\"\n        - properties:\n            accountNumber:\n              description: \u003e\n                Bank Account Number. Detailed information about all ISO\n                13616-compliant national IBAN formats is available in [SWIFT\n                IBAN\n                Registry](https://www.swift.com/standards/data-standards/iban).\n              type: string\n              writeOnly: true\n            bankName:\n              description: Bank name.\n              type: string\n            bic:\n              description: Bank Identifier Code.\n              type: string\n            last4:\n              description: Bank Account Number's last 4 digits.\n              readOnly: true\n              type: string\n          required:\n            - accountNumber\n          type: object\n      description: Bank account IBAN instrument.\n    IBANType:\n      description: IBAN type object.\n      properties:\n        accountNumber:\n          description: \u003e\n            Bank's account number. Detailed information about all ISO\n            13616-compliant national IBAN formats is available in the [SWIFT\n            IBAN Registry](https://www.swift.com/standards/data-standards/iban).\n          type: string\n        accountNumberType:\n          default: BBAN\n          description: \u003e-\n            Bank's Account Number type. A valid value is basic bank account\n            number (BBAN) or international bank account number (IBAN).\n\n            This is the object for the IBAN.\n          enum:\n            - IBAN\n            - BBAN\n          type: string\n        bankName:\n          description: Bank's name.\n          type: string\n        bic:\n          description: Bank Identifier Code.\n          type: string\n        billingAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: The billing address.\n        customFields:\n          $ref: \"#/components/schemas/ResourceCustomFields\"\n        customerId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Customer's ID.\n        method:\n          description: The method of payment instrument.\n          enum:\n            - ach\n          type: string\n        riskMetadata:\n          $ref: \"#/components/schemas/RiskMetadata\"\n      required:\n        - method\n        - customerId\n        - accountNumberType\n        - accountNumber\n        - billingAddress\n      type: object\n    ICEPAY:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: ICEPAY credentials object.\n              properties:\n                merchantId:\n                  description: ICEPAY merchant ID.\n                  format: password\n                  type: string\n                secretKey:\n                  description: ICEPAY API secret key.\n                  format: password\n                  type: string\n              required:\n                - merchantId\n                - secretKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: ICEPAY config.\n    INOVAPAY:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: INOVAPAY credentials object.\n              properties:\n                apiKey:\n                  description: INOVAPAY API key.\n                  type: string\n                apiSecret:\n                  description: INOVAPAY API secret.\n                  format: password\n                  type: string\n              required:\n                - apiKey\n                - apiSecret\n              type: object\n          required:\n            - credentials\n          type: object\n      description: INOVAPAY config.\n    IdentityMatches:\n      properties:\n        containsImage:\n          description: Flag that indicates if there is an image that contains a face on it.\n          example: true\n          type: boolean\n        dateOfBirth:\n          description: The date of birth found on the document, null if not found.\n          format: date-time\n          type: string\n        expiryDate:\n          description: The expiry date found on the document, null if not found.\n          format: date-time\n          type: string\n        firstName:\n          description: The customer first name if it was matched, null otherwise.\n          example: John\n          type: string\n        hasMinimalAge:\n          description: Checks the minimal age, 21+ for USA and 18+ for all other\n            countries. Null if dateOfBirth could not be determined.\n          example: true\n          readOnly: true\n          type: boolean\n        isIdentityDocument:\n          description: Flag that indicates if this looks like and ID.\n          example: true\n          type: boolean\n        isPublishedOnline:\n          description: If there is an exact match found online.\n          example: false\n          type: boolean\n        issueDate:\n          description: The issued date found on the document, null if not found.\n          format: date-time\n          type: string\n        lastName:\n          description: The customer last name if it was matched, null otherwise.\n          example: Doe\n          type: string\n        nationality:\n          description: The nationality found on the document, null otherwise.\n          example: US\n          maxLength: 3\n          type: string\n      type: object\n    Ilixium:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Ilixium credentials object.\n              properties:\n                accountId:\n                  description: Ilixium Gateway account ID.\n                  type: string\n                digestPassword:\n                  description: Ilixium Gateway digest password.\n                  format: password\n                  type: string\n                merchantId:\n                  description: Ilixium Gateway merchant ID.\n                  type: string\n              required:\n                - merchantId\n                - accountId\n                - digestPassword\n              type: object\n            settings:\n              description: Ilixium settings object.\n              properties:\n                platform:\n                  default: itix\n                  description: Direct API platform.\n                  enum:\n                    - itix\n                    - tpg\n                  type: string\n                useCreditEndpoint:\n                  description: Use previous approval credit endpoint for payouts.\n                  type: boolean\n                useIpFrame:\n                  description: Force Ilixium to process via Ip Frame.\n                  type: boolean\n                useStandaloneCreditEndpoint:\n                  description: Use standalone (token) credit endpoint for payouts.\n                  type: boolean\n              type: object\n            threeDSecureServer:\n              $ref: \"#/components/schemas/Ilixium3dsServers\"\n          required:\n            - credentials\n          type: object\n      description: Ilixium Gateway config.\n    Ilixium3dsServer:\n      allOf:\n        - $ref: \"#/components/schemas/Ilixium3dsServers\"\n      description: Ilixium Integrated.\n    Ilixium3dsServers:\n      description: Ilixium3dsServers 3DS Servers.\n      discriminator:\n        mapping:\n          Ilixium3dsServer: \"#/components/schemas/Ilixium3dsServer\"\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/ThreeDSecureServerName\"\n          enum:\n            - Ilixium3dsServer\n      required:\n        - name\n      type: object\n    Ingenico:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                apiKeyId:\n                  description: Ingenico Gateway api key ID.\n                  type: string\n                apiSecretKey:\n                  description: Ingenico Gateway api secret key.\n                  format: password\n                  type: string\n                merchantId:\n                  description: Ingenico Gateway merchant ID.\n                  type: string\n                skipFraudService:\n                  description: Ingenico skip fraud service.\n                  type: boolean\n              required:\n                - merchantId\n                - apiKeyId\n                - apiSecretKey\n              type: object\n            threeDSecureServer:\n              $ref: \"#/components/schemas/Ingenico3dsServers\"\n          required:\n            - credentials\n          type: object\n      description: Ingenico Gateway config.\n    Ingenico3dsServer:\n      allOf:\n        - $ref: \"#/components/schemas/Ingenico3dsServers\"\n      description: Ingenico Integrated.\n    Ingenico3dsServers:\n      description: Ingenico 3DS Servers.\n      discriminator:\n        mapping:\n          Ingenico3dsServer: \"#/components/schemas/Ingenico3dsServer\"\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/ThreeDSecureServerName\"\n          enum:\n            - Ingenico3dsServer\n      required:\n        - name\n      type: object\n    InitialInvoiceEmbed:\n      description: Initial Invoice object.\n      properties:\n        initialInvoice:\n          $ref: \"#/components/schemas/Invoice\"\n      readOnly: true\n      type: object\n    InitialInvoiceLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - initialInvoice\n          type: string\n      required:\n        - rel\n      type: object\n    Inovio:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Inovio credentials object.\n              properties:\n                password:\n                  description: Inovio password.\n                  format: password\n                  type: string\n                username:\n                  description: Inovio username.\n                  type: string\n              required:\n                - username\n                - password\n              type: object\n            settings:\n              description: Inovio settings object.\n              properties:\n                merchantAccountId:\n                  description: Inovio merchant account ID.\n                  type: string\n                productId:\n                  description: Inovio product ID.\n                  type: string\n                websiteId:\n                  description: Inovio website ID.\n                  type: string\n              required:\n                - websiteId\n                - merchantAccountId\n                - productId\n              type: object\n            threeDSecureServer:\n              $ref: \"#/components/schemas/Inovio3dsServers\"\n          required:\n            - credentials\n            - settings\n          type: object\n      description: Inovio config.\n    Inovio3dsServer:\n      allOf:\n        - $ref: \"#/components/schemas/Inovio3dsServers\"\n      description: Inovio Integrated.\n    Inovio3dsServers:\n      description: Inovio 3DS Servers.\n      discriminator:\n        mapping:\n          Inovio3dsServer: \"#/components/schemas/Inovio3dsServer\"\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/ThreeDSecureServerName\"\n          enum:\n            - Inovio3dsServer\n      required:\n        - name\n      type: object\n    InstaDebit:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: InstaDebit credentials object.\n              properties:\n                merchantId:\n                  description: InstaDebit merchant account number.\n                  type: string\n                password:\n                  description: InstaDebit merchant account password.\n                  format: password\n                  type: string\n              required:\n                - merchantId\n                - password\n              type: object\n          required:\n            - credentials\n          type: object\n      description: InstaDebit config.\n    InstrumentReference:\n      properties:\n        method:\n          $ref: \"#/components/schemas/PaymentMethod\"\n        paymentInstrumentId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The payment instrument ID.\n      required:\n        - method\n      type: object\n    Intuit:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                clientId:\n                  description: The Intuit client_id key.\n                  type: string\n                clientSecret:\n                  description: The Intuit client_secret key.\n                  format: password\n                  type: string\n              required:\n                - clientId\n                - clientSecret\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Intuit Gateway config.\n    InvalidError:\n      allOf:\n        - $ref: \"#/components/schemas/Error\"\n        - $ref: \"#/components/schemas/ValidationErrorExtensions\"\n      description: Invalid data was sent.\n    Invoice:\n      allOf:\n        - $ref: \"#/components/schemas/CommonInvoice\"\n        - required:\n            - customerId\n        - properties:\n            _embedded:\n              description: Any embedded objects available that are requested by the `expand`\n                querystring parameter.\n              items:\n                anyOf:\n                  - $ref: \"#/components/schemas/CustomerEmbed\"\n                  - $ref: \"#/components/schemas/WebsiteEmbed\"\n                  - $ref: \"#/components/schemas/OrganizationEmbed\"\n                  - $ref: \"#/components/schemas/LeadSourceEmbed\"\n              minItems: 1\n              readOnly: true\n              type: array\n            _links:\n              description: The links related to resource.\n              items:\n                anyOf:\n                  - $ref: \"#/components/schemas/SelfLink\"\n                  - $ref: \"#/components/schemas/CustomerLink\"\n                  - $ref: \"#/components/schemas/WebsiteLink\"\n                  - $ref: \"#/components/schemas/OrganizationLink\"\n                  - $ref: \"#/components/schemas/LeadSourceLink\"\n                  - $ref: \"#/components/schemas/TransactionAllocationsLink\"\n                  - $ref: \"#/components/schemas/RecalculateInvoiceLink\"\n                  - $ref: \"#/components/schemas/SubscriptionLink\"\n              minItems: 1\n              readOnly: true\n              type: array\n            customerId:\n              allOf:\n                - $ref: \"#/components/schemas/ResourceId\"\n              description: The сustomer's ID.\n              x-basic: true\n            dueReminderNumber:\n              description: Number of past due reminder events triggered.\n              readOnly: true\n              type: integer\n            dueReminderTime:\n              allOf:\n                - $ref: \"#/components/schemas/ServerTimestamp\"\n              description: Time past due reminder event will be triggered.\n              nullable: true\n            retryInstruction:\n              description: The invoice retry instruction.\n              properties:\n                afterAttemptPolicies:\n                  description: The policy on the attempt finishes.\n                  items:\n                    enum:\n                      - change-subscription-renewal-time\n                    type: string\n                  type: array\n                afterRetryEndPolicies:\n                  description: The policy on the retry ends.\n                  items:\n                    enum:\n                      - abandon-invoice\n                      - cancel-subscription\n                    type: string\n                  type: array\n                attempts:\n                  items:\n                    properties:\n                      scheduleInstruction:\n                        $ref: \"#/components/schemas/InvoiceRetryScheduleInstruction\"\n                    required:\n                      - scheduleInstruction\n                    type: object\n                  minItems: 1\n                  type: array\n              required:\n                - attempts\n                - afterAttemptPolicies\n                - afterRetryEndPolicies\n              type: object\n            revision:\n              description: \u003e\n                The number of times the invoice data has been modified.\n\n                The revision is useful when analyzing webhook data to determine if the change takes precedence over the current representation.\n              readOnly: true\n              type: integer\n            transactions:\n              description: Invoice transactions array.\n              items:\n                $ref: \"#/components/schemas/Transaction\"\n              readOnly: true\n              type: array\n            type:\n              description: Invoice type.\n              enum:\n                - initial\n                - renewal\n                - interim\n                - cancellation\n                - one-time\n                - refund\n                - charge\n              readOnly: true\n              type: string\n    InvoiceDiscount:\n      properties:\n        amount:\n          description: Total amount that was discounted by this Coupon.\n          format: double\n          type: number\n        couponId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Coupon's ID.\n        description:\n          description: Discount description.\n          type: string\n        redemptionId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Redemption ID.\n      readOnly: true\n      type: object\n    InvoiceIssue:\n      properties:\n        dueTime:\n          description: Invoice due time. Will be set same as `issuedTime` if `null` or\n            omitted.\n          format: date-time\n          nullable: true\n          type: string\n        issuedTime:\n          description: Invoice issued time. Will be issued immediately if `null` or omitted.\n          format: date-time\n          nullable: true\n          type: string\n      type: object\n    InvoiceItem:\n      properties:\n        _embedded:\n          description: Any embedded objects available that are requested by the `expand`\n            querystring parameter.\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/ProductEmbed\"\n              - $ref: \"#/components/schemas/PlanEmbed\"\n          minItems: 1\n          readOnly: true\n          type: array\n        _links:\n          description: The links related to resource.\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/SelfLink\"\n              - $ref: \"#/components/schemas/ProductLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Invoice item created time.\n        description:\n          description: Invoice item's description.\n          type: string\n        discountAmount:\n          description: Invoice item discount amount.\n          format: double\n          readOnly: true\n          type: number\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The website identifier string.\n          readOnly: true\n        periodEndTime:\n          description: End time.\n          format: date-time\n          type: string\n        periodNumber:\n          description: Invoice item subscription order period number.\n          type: integer\n        periodStartTime:\n          description: Start time.\n          format: date-time\n          type: string\n        price:\n          description: Invoice item's total price.\n          format: double\n          readOnly: true\n          type: number\n        productId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The product's ID.\n        quantity:\n          description: Invoice item's quantity.\n          type: integer\n        type:\n          description: Invoice item's type.\n          enum:\n            - debit\n            - credit\n          type: string\n          x-basic: true\n        unitPrice:\n          description: Invoice item's price.\n          format: double\n          type: number\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Invoice item updated time.\n      required:\n        - type\n        - unitPrice\n      type: object\n    InvoiceLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - invoice\n          type: string\n      required:\n        - rel\n      type: object\n    InvoiceReissue:\n      properties:\n        dueTime:\n          description: Invoice due time. Will be set as current date-time if `null` or\n            omitted.\n          format: date-time\n          nullable: true\n          type: string\n      type: object\n    InvoiceRetryScheduleInstruction:\n      description: The calculation instruction of scheduled time.\n      discriminator:\n        mapping:\n          date-interval: \"#/components/schemas/date-interval\"\n          day-of-month: \"#/components/schemas/day-of-month\"\n          day-of-week: \"#/components/schemas/day-of-week\"\n          immediately: \"#/components/schemas/immediately\"\n          intelligent: \"#/components/schemas/intelligent\"\n        propertyName: method\n      properties:\n        method:\n          enum:\n            - intelligent\n            - immediately\n            - date-interval\n            - day-of-month\n            - day-of-week\n          type: string\n      required:\n        - method\n      type: object\n    InvoiceShipping:\n      description: Invoice shipping.\n      discriminator:\n        mapping:\n          manual: \"#/components/schemas/manual\"\n          rebilly: \"#/components/schemas/rebilly\"\n        propertyName: calculator\n      properties:\n        calculator:\n          description: Shipping calculator.\n          enum:\n            - manual\n            - rebilly\n          type: string\n      required:\n        - calculator\n      type: object\n    InvoiceTax:\n      description: Invoice taxes.\n      discriminator:\n        mapping:\n          manual: \"#/components/schemas/manual-2\"\n          rebilly: \"#/components/schemas/rebilly-taxjar\"\n        propertyName: calculator\n      properties:\n        amount:\n          description: A sum of all invoice taxes.\n          type: integer\n          x-sortable: true\n          x-type: Money\n        calculator:\n          description: Tax calculator.\n          enum:\n            - manual\n            - rebilly-taxjar\n          type: string\n      required:\n        - calculator\n      type: object\n    InvoiceTaxItem:\n      properties:\n        amount:\n          description: Tax amount.\n          format: double\n          type: number\n        description:\n          description: Tax description.\n          type: string\n      type: object\n    InvoiceTimeShift:\n      description: \u003e\n        The invoice time shift in conjunction with `billingTiming` allows\n        to setup different billing use cases such as:\n\n        - Bill immediately when the service period _starts_\n\n        - Bill immediately after the service period _ends_\n\n        - Bill _interval of time_ before the service period _starts_\n\n        - Bill _interval of time_ after the service period _starts_\n\n        - Bill _interval of time_ before the service period _ends_\n\n        - Bill _interval of time_ after the service period _ends_\n\n        It allows to control the billing time.\n      properties:\n        dueTimeShift:\n          $ref: \"#/components/schemas/DueTimeShiftInstruction\"\n        issueTimeShift:\n          $ref: \"#/components/schemas/IssueTimeShiftInstruction\"\n      type: object\n    InvoiceTimeline:\n      properties:\n        _links:\n          description: The links related to resource.\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        extraData:\n          $ref: \"#/components/schemas/TimelineExtraData\"\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The Timeline message identifier string.\n          readOnly: true\n        message:\n          description: The message that describes the message details.\n          type: string\n        occurredTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Timeline message time.\n          readOnly: true\n        triggeredBy:\n          description: Shows who or what triggered the Timeline event.\n          enum:\n            - rebilly\n            - app\n            - direct-api\n          readOnly: true\n          type: string\n        type:\n          description: Timeline message type.\n          enum:\n            - timeline-comment-created\n            - invoice-created\n            - invoice-issued\n            - invoice-abandoned\n            - invoice-voided\n            - invoice-past-due\n            - invoice-paid\n            - invoice-partially-paid\n            - invoice-disputed\n            - invoice-refunded\n            - invoice-partially-refunded\n            - invoice-renewal-payment-declined\n            - email-message-sent\n            - coupon-applied\n            - transaction-approved\n            - transaction-abandoned\n            - transaction-canceled\n            - transaction-declined\n            - transaction-initiated\n            - transaction-refunded\n            - transaction-voided\n          readOnly: true\n          type: string\n      type: object\n    InvoiceTransaction:\n      properties:\n        amount:\n          description: \u003e\n            Amount which needs to be applied to the invoice. Can't be more than\n            the transaction's amount. If omitted, the lesser of the\n            transaction's unused amount or the invoice's amount due will be\n            used.\n          format: double\n          type: number\n        transactionId:\n          description: Transaction to be applied to the invoice.\n          type: string\n      required:\n        - transactionId\n      type: object\n    InvoiceTransactionAllocation:\n      properties:\n        _links:\n          description: The links related to resource.\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/InvoiceLink\"\n              - $ref: \"#/components/schemas/TransactionLink\"\n          maxItems: 2\n          minItems: 2\n          readOnly: true\n          type: array\n        amount:\n          type: number\n        currency:\n          allOf:\n            - $ref: \"#/components/schemas/CurrencyCode\"\n        invoiceId:\n          $ref: \"#/components/schemas/ResourceId\"\n        transactionId:\n          $ref: \"#/components/schemas/ResourceId\"\n      type: object\n    InvoicesEmbed:\n      description: Invoices collection.\n      properties:\n        invoices:\n          items:\n            $ref: \"#/components/schemas/Invoice\"\n          type: array\n      readOnly: true\n      type: object\n    InvoicesLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - invoices\n          type: string\n      required:\n        - rel\n      type: object\n    IpayOptions:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Ipay Options credentials object.\n              properties:\n                rcode:\n                  description: Ipay Options rcode.\n                  format: password\n                  type: string\n                sid:\n                  description: Ipay Options website ID.\n                  type: string\n              required:\n                - sid\n                - rcode\n              type: object\n            settings:\n              description: Ipay Options settings object.\n              properties:\n                cardType:\n                  description: Manually set the card_type for iDEAL.\n                  enum:\n                    - ideal\n                    - idealqr\n                    - sofort\n                  type: string\n                extraStep:\n                  description: Show extra step for user to enter their email and DNI number.\n                  type: boolean\n                platform:\n                  description: Platform which IpayOptions will process.\n                  enum:\n                    - SOAP\n                    - TxHandler\n                    - SecureHosted\n                  type: string\n                subdomain:\n                  description: Subdomain to use when sending request to IpayOptions.\n                  enum:\n                    - miglite\n                    - w88asiapay\n                  type: string\n              type: object\n          required:\n            - credentials\n            - settings\n          type: object\n      description: Ipay Options config.\n    IssueTimeShiftInstruction:\n      description: \u003e\n        The calculation instruction of billing time.\n\n        This is used in conjunction with the **service period anchor** to calculate the time the invoice is issued.\n      properties:\n        chronology:\n          description: The chronology of the billing time relatively to the service period\n            start.\n          enum:\n            - before\n          type: string\n        duration:\n          description: The number of the units.\n          minimum: 1\n          type: integer\n        unit:\n          oneOf:\n            - $ref: \"#/components/schemas/TimeUnit\"\n            - $ref: \"#/components/schemas/TimePluralUnit\"\n      required:\n        - chronology\n        - duration\n        - unit\n      type: object\n    JetPay:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                TerminalID:\n                  description: JetPay Gateway terminal ID.\n                  type: string\n              required:\n                - TerminalID\n              type: object\n          required:\n            - credentials\n          type: object\n      description: JetPay Gateway config.\n    Jeton:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                apiKey:\n                  description: Jeton apiKey.\n                  format: password\n                  type: string\n              required:\n                - apiKey\n              type: object\n            settings:\n              properties:\n                method:\n                  description: Jeton's method.\n                  enum:\n                    - CHECKOUT\n                    - DIRECT\n                    - QR\n                    - JETGO\n                  type: string\n              required:\n                - method\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Jeton Gateway config.\n    Khelocard:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Credentials object.\n              properties:\n                apiKey:\n                  description: API key.\n                  format: password\n                  type: string\n                apiSecret:\n                  description: API secret.\n                  format: password\n                  type: string\n                merchantId:\n                  description: Merchant ID.\n                  type: string\n                referrer:\n                  description: The referrer URL registered on Khelocard.\n                  format: uri\n                  type: string\n              required:\n                - merchantId\n                - referrer\n                - apiKey\n                - apiSecret\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Khelocard config.\n    KhelocardCard:\n      properties:\n        _embedded:\n          description: Any embedded objects available that are requested by the `expand`\n            querystring parameter.\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/CustomerEmbed\"\n          minItems: 1\n          readOnly: true\n          type: array\n        _links:\n          description: Links related to the resource.\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/SelfLink\"\n              - $ref: \"#/components/schemas/CustomerLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        billingAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: The billing address.\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The payment instrument created time.\n        customFields:\n          $ref: \"#/components/schemas/ResourceCustomFields\"\n        customerId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Customer's ID.\n        expMonth:\n          description: Khelocard card's expiration month.\n          type: integer\n        expYear:\n          description: Khelocard card's expiration year.\n          type: integer\n        fingerprint:\n          description: A unique value to identify the payment instrument regardless of\n            variable values. It contains alphanumeric values.\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The payment instrument ID.\n        last4:\n          description: The number's last 4 digits.\n          type: string\n        method:\n          description: The method of payment instrument.\n          enum:\n            - Khelocard\n          type: string\n        number:\n          description: Khelocard card's masked number.\n          type: string\n        riskMetadata:\n          $ref: \"#/components/schemas/RiskMetadata\"\n        status:\n          description: The payment instrument status.\n          enum:\n            - active\n            - deactivated\n          type: string\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The payment instrument updated time.\n      title: Khelocard Card\n      type: object\n    KhelocardCardToken:\n      allOf:\n        - $ref: \"#/components/schemas/CommonPaymentToken\"\n      properties:\n        billingAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: The billing address object.\n        method:\n          description: The token method.\n          enum:\n            - Khelocard\n          type: string\n        paymentInstrument:\n          description: The token instrument details.\n          properties:\n            cvv:\n              description: Khelocard card CVV.\n              type: string\n              writeOnly: true\n            expMonth:\n              description: Khelocard card expiration month.\n              type: integer\n            expYear:\n              description: Khelocard card expiration year.\n              type: integer\n            last4:\n              description: Khelocard card number's last 4 digits.\n              readOnly: true\n              type: string\n            number:\n              description: Khelocard card number.\n              type: string\n              writeOnly: true\n          required:\n            - number\n            - cvv\n            - expYear\n            - expMonth\n          type: object\n      required:\n        - method\n        - billingAddress\n        - paymentInstrument\n      title: Khelocard card token\n      type: object\n    Konnektive:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Credentials object.\n              properties:\n                loginId:\n                  description: Konnektive API login ID.\n                  type: string\n                password:\n                  description: Konnektive API password.\n                  format: password\n                  type: string\n              required:\n                - loginId\n                - password\n              type: object\n            settings:\n              description: Settings object.\n              properties:\n                campaignId:\n                  description: Konnektive campaign ID for which the order is being placed.\n                  type: string\n                productId:\n                  description: Konnektive campaign product ID for which the order is being placed.\n                  type: string\n              required:\n                - campaignId\n                - productId\n              type: object\n          required:\n            - credentials\n            - settings\n          type: object\n      description: Konnektive config.\n    KycDocument:\n      allOf:\n        - $ref: \"#/components/schemas/CommonKycDocument\"\n        - properties:\n            customerId:\n              allOf:\n                - $ref: \"#/components/schemas/ResourceId\"\n              description: The сustomer's ID.\n            matchLevel:\n              description: The level of strictness for the document matches.\n              example: 2\n              maximum: 2\n              minimum: 1\n              type: integer\n            notes:\n              description: Reviewer notes.\n              nullable: true\n              type: string\n            reason:\n              description: Reason for uploading.\n              type: string\n            reviewTime:\n              allOf:\n                - $ref: \"#/components/schemas/ServerTimestamp\"\n              description: Date and time of manual review.\n              nullable: true\n            reviewerId:\n              allOf:\n                - $ref: \"#/components/schemas/ResourceId\"\n              description: Reviewer's user ID.\n              nullable: true\n              readOnly: true\n              type: string\n            reviewerName:\n              description: Reviewer's first and last name.\n              nullable: true\n              readOnly: true\n              type: string\n    KycDocument-2:\n      discriminator:\n        mapping:\n          address-proof: \"#/components/schemas/ProofOfAddress\"\n          funds-proof: \"#/components/schemas/ProofOfFunds\"\n          identity-proof: \"#/components/schemas/ProofOfIdentity\"\n          purchase-proof: \"#/components/schemas/ProofOfPurchase\"\n        propertyName: documentType\n      oneOf:\n        - $ref: \"#/components/schemas/ProofOfIdentity\"\n        - $ref: \"#/components/schemas/ProofOfAddress\"\n        - $ref: \"#/components/schemas/ProofOfFunds\"\n        - $ref: \"#/components/schemas/ProofOfPurchase\"\n    KycDocumentLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - kycDocument\n          type: string\n      required:\n        - rel\n      type: object\n    KycDocumentRejection:\n      properties:\n        message:\n          description: The rejection message.\n          example: Provided document is unreadable\n          type: string\n        type:\n          enum:\n            - document-unreadable\n            - document-expired\n            - document-not-matching\n            - underage-person\n            - other\n          type: string\n      readOnly: true\n      type: object\n    KycDocumentSubtypes:\n      enum:\n        - passport\n        - id-card\n        - driver-license\n        - birth-certificate\n        - utility-bill\n        - rental-receipt\n        - lease-agreement\n        - copy-credit-card\n        - credit-card-statement\n        - bank-statement\n        - inheritance-documentation\n        - tax-return\n        - salary-slip\n        - sale-of-assets\n        - public-health-card\n        - proof-of-age-card\n        - reverse-of-id\n        - public-service\n        - ewallet-holder-details\n        - ewallet-transaction-statement\n        - other\n      type: string\n    KycDocumentTypes:\n      enum:\n        - identity-proof\n        - address-proof\n        - funds-proof\n        - purchase-proof\n      type: string\n    KycDocumentsLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - kycDocuments\n          type: string\n      required:\n        - rel\n      type: object\n    KycGathererLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - kycGatherer\n          type: string\n      required:\n        - rel\n      type: object\n    KycRequest:\n      allOf:\n        - $ref: \"#/components/schemas/CommonKycRequest\"\n        - properties:\n            _links:\n              description: The links related to resource.\n              items:\n                anyOf:\n                  - $ref: \"#/components/schemas/SelfLink\"\n                  - $ref: \"#/components/schemas/KycDocumentsLink\"\n                  - $ref: \"#/components/schemas/KycGathererLink\"\n              minItems: 1\n              readOnly: true\n              type: array\n            customerId:\n              allOf:\n                - $ref: \"#/components/schemas/ResourceId\"\n              description: The сustomer's ID.\n            matchLevel:\n              description: The level of strictness for the document matches.\n              example: 2\n              maximum: 2\n              minimum: 1\n              type: integer\n            reason:\n              description: Reason for uploading.\n              type: string\n          required:\n            - customerId\n    LPG:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: LPG credentials object.\n              properties:\n                payoutPassword:\n                  description: LPG payout account password.\n                  format: password\n                  type: string\n                payoutUsername:\n                  description: LPG payout account username.\n                  format: password\n                  type: string\n                publicKey:\n                  description: LPG public API key.\n                  type: string\n                secureKey:\n                  description: LPG secure API key.\n                  format: password\n                  type: string\n              required:\n                - publicKey\n                - secureKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: LPG config.\n    LanguageIsoCode:\n      description: Language (two letter ISO 639-1 code).\n      example: US\n      pattern: \"[a-zA-Z]{2}\"\n      type: string\n    LeadSource:\n      allOf:\n        - $ref: \"#/components/schemas/LeadSourceData\"\n        - properties:\n            original:\n              allOf:\n                - $ref: \"#/components/schemas/LeadSourceData\"\n              readOnly: true\n          type: object\n    LeadSourceData:\n      properties:\n        _links:\n          description: The links related to resource.\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/SelfLink\"\n              - $ref: \"#/components/schemas/CustomerLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        affiliate:\n          description: Lead source affiliate (eg 123, Bob Smith).\n          type: string\n        campaign:\n          description: Lead source campaign (eg go-big-123).\n          type: string\n        clickId:\n          description: Lead source click id (may come from an ad server).\n          type: string\n        content:\n          description: Lead source content (eg smiley faces).\n          type: string\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Lead source created time.\n        medium:\n          description: Lead source medium (eg search, display).\n          type: string\n        path:\n          description: Lead source path url (eg www.example.com/some/landing/path).\n          type: string\n        referrer:\n          description: Lead source [`referer`\n            url](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer)\n            as determined (eg www.example.com/some/landing/path).\n          type: string\n        salesAgent:\n          description: Lead source sales agent (eg James Bond).\n          type: string\n        source:\n          description: Lead source origin (eg google, yahoo).\n          type: string\n        subAffiliate:\n          description: Lead source sub-affiliate also called a sub-id or click id in some\n            circles (eg 123456).\n          type: string\n        term:\n          description: Lead source term (eg salt shakers).\n          type: string\n      type: object\n    LeadSourceEmbed:\n      description: Lead Source object.\n      properties:\n        leadSource:\n          $ref: \"#/components/schemas/LeadSource\"\n      readOnly: true\n      type: object\n    LeadSourceLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - leadSource\n          type: string\n      required:\n        - rel\n      type: object\n    Link:\n      properties:\n        href:\n          description: The link URL.\n          type: string\n      required:\n        - href\n      type: object\n    MiFinity:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: MiFinity credentials object.\n              properties:\n                accountHolderId:\n                  type: string\n                apiKey:\n                  format: password\n                  type: string\n                mifinityAccountNumber:\n                  format: password\n                  type: string\n              required:\n                - apiKey\n                - mifinityAccountNumber\n                - accountHolderId\n              type: object\n          required:\n            - credentials\n          type: object\n      description: MiFinity config.\n    Moneris:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                apiToken:\n                  description: Moneris Gateway api token.\n                  format: password\n                  type: string\n                storeId:\n                  description: Moneris Gateway store ID.\n                  type: string\n              required:\n                - storeId\n                - apiToken\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Moneris Gateway config.\n    Money:\n      properties:\n        amount:\n          $ref: \"#/components/schemas/MoneyAmount\"\n        currency:\n          $ref: \"#/components/schemas/CurrencyCode\"\n      required:\n        - amount\n        - currency\n      type: object\n    MoneyAmount:\n      example: 10\n      format: double\n      type: number\n      x-type: Money\n    MtaPay:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                accountId:\n                  description: MTA Pay Gateway account ID.\n                  type: string\n                md5key:\n                  description: MTA Pay Gateway md5key.\n                  format: password\n                  type: string\n                partyId:\n                  description: MTA Pay Gateway party ID.\n                  type: string\n              required:\n                - accountId\n                - partyId\n                - md5key\n              type: object\n            settings:\n              description: MTA Pay settings object.\n              properties:\n                goods:\n                  description: MTA Pay Gateway goods.\n                  type: string\n                mobilePay:\n                  description: MTA Pay Gateway mobile pay param.\n                  type: string\n              required:\n                - mobilePay\n                - goods\n              type: object\n          required:\n            - credentials\n            - settings\n          type: object\n      description: MTA Pay Gateway config.\n    MuchBetter:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: MuchBetter credentials object.\n              properties:\n                apiKey:\n                  description: MuchBetter api key.\n                  format: password\n                  type: string\n                merchantAccountId:\n                  description: MuchBetter merchant account ID.\n                  type: string\n              required:\n                - merchantAccountId\n                - apiKey\n              type: object\n            settings:\n              description: MuchBetter settings object.\n              properties:\n                brandName:\n                  description: MuchBetter brand name used for reporting and logo.\n                  type: string\n                hasPhoneNumberRequest:\n                  default: false\n                  description: Request phone number before submitting the request to MuchBetter.\n                  type: boolean\n              type: object\n          required:\n            - credentials\n          type: object\n      description: MuchBetter config.\n    MyFatoorah:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: MyFatoorah credentials object.\n              properties:\n                apiKey:\n                  description: MyFatoorah api key.\n                  format: password\n                  type: string\n              required:\n                - apiKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: MyFatoorah config.\n    NGenius:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: NGenius credentials object.\n              properties:\n                apiKey:\n                  description: NGenius API key.\n                  format: password\n                  type: string\n                outletId:\n                  description: NGenius outlet ID.\n                  type: string\n              required:\n                - outletId\n                - apiKey\n              type: object\n            threeDSecureServer:\n              $ref: \"#/components/schemas/NGenius3dsServers\"\n          required:\n            - credentials\n          type: object\n      description: NGenius config.\n    NGenius3dsServer:\n      allOf:\n        - $ref: \"#/components/schemas/NGenius3dsServers\"\n      description: NGenius Integrated.\n    NGenius3dsServers:\n      description: NGenius 3DS Servers.\n      discriminator:\n        mapping:\n          NGenius3dsServer: \"#/components/schemas/NGenius3dsServer\"\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/ThreeDSecureServerName\"\n          enum:\n            - NGenius3dsServer\n      required:\n        - name\n      type: object\n    NMI:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                password:\n                  description: NMI Gateway store ID.\n                  format: password\n                  type: string\n                username:\n                  description: NMI Gateway api token.\n                  type: string\n              required:\n                - username\n                - password\n              type: object\n            settings:\n              properties:\n                disableStoredCredentials:\n                  default: false\n                  description: Disable NMI Stored Credentials (CIT/MIT).\n                  type: boolean\n              type: object\n            threeDSecureServer:\n              $ref: \"#/components/schemas/NMI3dsServers\"\n          required:\n            - credentials\n          type: object\n      description: NMI Gateway config.\n    NMI3dsServers:\n      description: NMI 3DS Servers.\n      discriminator:\n        mapping:\n          Other: \"#/components/schemas/Other\"\n          Paay3dsServer: \"#/components/schemas/Paay3dsServer\"\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/ThreeDSecureServerName\"\n          enum:\n            - Paay3dsServer\n            - Other\n      required:\n        - name\n      type: object\n    Neosurf:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Neosurf credentials object.\n              properties:\n                merchantId:\n                  description: Neosurf merchant ID.\n                  type: string\n                secretKey:\n                  description: Neosurf API secret key.\n                  format: password\n                  type: string\n              required:\n                - merchantId\n                - secretKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Neosurf config.\n    Netbanking:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Netbanking credentials object.\n              properties:\n                midcode:\n                  description: Netbanking MID code.\n                  type: string\n                midsecret:\n                  description: Netbanking MID secret key.\n                  format: password\n                  type: string\n              required:\n                - midcode\n                - midsecret\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Netbanking config.\n    Neteller:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Neteller credentials object.\n              properties:\n                paysafePaymentsApiPassword:\n                  description: Neteller App Paysafe Payments API Password for a private key.\n                  format: password\n                  type: string\n                paysafePaymentsApiUsername:\n                  description: Neteller App Paysafe Payments API Username for a private key.\n                  type: string\n              required:\n                - paysafePaymentsApiUsername\n                - paysafePaymentsApiPassword\n              type: object\n            settings:\n              properties:\n                populateCustomerEmail:\n                  description: Populate customer email for payment.\n                  type: boolean\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Neteller Gateway config.\n    NinjaWallet:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: NinjaWallet credentials object.\n              properties:\n                apiKey:\n                  description: NinjaWallet api key.\n                  format: password\n                  type: string\n                passphrase:\n                  description: NinjaWallet passphrase.\n                  format: password\n                  type: string\n                secret:\n                  description: NinjaWallet secret.\n                  format: password\n                  type: string\n              required:\n                - apiKey\n                - secret\n                - passphrase\n              type: object\n          required:\n            - credentials\n          type: object\n      description: NinjaWallet config.\n    NuaPay:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: NuaPay credentials object.\n              properties:\n                nuaPayAccountId:\n                  description: NuaPay account ID.\n                  type: string\n                nuaPayApiKey:\n                  description: NuaPay api key.\n                  format: password\n                  type: string\n                nuaPayCommonName:\n                  description: NuaPay common name.\n                  type: string\n                nuaPayOriginatorIban:\n                  description: NuaPay origiantor IBAN.\n                  format: password\n                  type: string\n                nuaPayPrivateKey:\n                  description: NuaPay private key.\n                  format: password\n                  type: string\n                  x-multiline: true\n                nuaPaySerialNumber:\n                  description: NuaPay serial number.\n                  type: string\n              required:\n                - nuaPayCommonName\n                - nuaPaySerialNumber\n                - nuaPayAccountId\n                - nuaPayOriginatorIban\n                - nuaPayApiKey\n                - nuaPayPrivateKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: NuaPay Gateway config.\n    OchaPay:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                apiPassword:\n                  description: OchaPay Gateway api password.\n                  format: password\n                  type: string\n                apiUsername:\n                  description: OchaPay Gateway username.\n                  type: string\n                secretWord:\n                  description: OchaPay Gateway secret word.\n                  format: password\n                  type: string\n              required:\n                - apiUsername\n                - apiPassword\n                - secretWord\n              type: object\n          required:\n            - credentials\n          type: object\n      description: OchaPay Gateway config.\n    OnBoardingUrlLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - onBoardingUrl\n          type: string\n      required:\n        - rel\n      type: object\n    OnRamp:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: OnRamp credentials object.\n              properties:\n                apiKey:\n                  format: password\n                  type: string\n              required:\n                - apiKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: OnRamp config.\n    OneTimeOrder:\n      allOf:\n        - $ref: \"#/components/schemas/CommonOneTimeOrder\"\n        - properties:\n            customerId:\n              allOf:\n                - $ref: \"#/components/schemas/ResourceId\"\n              description: The customer identifier string.\n              x-basic: true\n        - $ref: \"#/components/schemas/SubscriptionMetadata\"\n      required:\n        - orderType\n        - customerId\n        - websiteId\n        - items\n      type: object\n    Onlineueberweisen:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Onlineueberweisen credentials object.\n              properties:\n                apiKey:\n                  description: Onlineueberweisen API Key.\n                  format: password\n                  type: string\n                nuaPayAccountId:\n                  description: NuaPay account ID for reconciliation.\n                  type: string\n                nuaPayApiKey:\n                  description: NuaPay API Key for reconciliation.\n                  format: password\n                  type: string\n              required:\n                - apiKey\n              type: object\n            settings:\n              description: Onlineueberweisen settings object.\n              properties:\n                payformCode:\n                  default: default\n                  description: Onlineueberweisen payform code to use customized Payform template.\n                  type: string\n              type: object\n          required:\n            - credentials\n            - settings\n          type: object\n      description: Onlineueberweisen config.\n    OrderTimeline:\n      properties:\n        _links:\n          description: The links related to resource.\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        extraData:\n          $ref: \"#/components/schemas/TimelineExtraData\"\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The Timeline message identifier string.\n          readOnly: true\n        message:\n          description: The message that describes the message details.\n          type: string\n        occurredTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Timeline message time.\n          readOnly: true\n        triggeredBy:\n          description: Shows who or what triggered the Timeline message.\n          enum:\n            - rebilly\n            - app\n            - direct-api\n          readOnly: true\n          type: string\n        type:\n          description: Timeline message type.\n          enum:\n            - timeline-comment-created\n            - order-renewed\n            - order-activated\n            - order-completed\n            - order-reactivated\n            - order-canceled\n            - order-upgraded\n            - order-downgraded\n            - order-billing-address-changed\n            - order-delivery-address-changed\n            - order-renewal-time-changed\n            - order-churned\n            - order-custom-fields-changed\n            - order-items-changed\n            - order-billing-anchor-changed\n            - order-recurring-interval-changed\n            - order-risk-metadata-changed\n            - order-paid-early\n            - order-quantity-changed\n            - email-message-sent\n            - coupon-applied\n            - invoice-created\n            - invoice-issued\n            - invoice-abandoned\n            - invoice-voided\n            - invoice-past-due\n            - invoice-paid\n            - invoice-partially-paid\n            - invoice-disputed\n            - invoice-refunded\n            - invoice-partially-refunded\n            - invoice-renewal-payment-declined\n          readOnly: true\n          type: string\n      type: object\n    Organization:\n      properties:\n        _links:\n          description: The links related to resource.\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        address:\n          description: The organization street address.\n          maxLength: 60\n          type: string\n        address2:\n          description: The organization street address.\n          maxLength: 60\n          type: string\n        city:\n          description: The organization city.\n          maxLength: 45\n          type: string\n        country:\n          description: The organization country ISO Alpha-2 code.\n          pattern: ^[A-Z]{2}$\n          type: string\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The organization created time.\n        emails:\n          $ref: \"#/components/schemas/ContactEmails\"\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The organization identifier string.\n          readOnly: true\n        invoiceTimeZone:\n          description: Invoice will use this time zone to display time otherwise UTC will\n            be used. Example \"America/New_York\".\n          maxLength: 50\n          type: string\n        isPrimary:\n          description: True, if Organization is primary (available to set as true only,\n            other organizations will become as isPrimary=false).\n          type: boolean\n        name:\n          description: The organization name.\n          maxLength: 60\n          type: string\n        phoneNumbers:\n          $ref: \"#/components/schemas/ContactPhoneNumbers\"\n        postalCode:\n          description: The organization postal code.\n          maxLength: 10\n          type: string\n        questionnaire:\n          $ref: \"#/components/schemas/OrganizationQuestionnaire\"\n        region:\n          description: The organization region (state).\n          maxLength: 45\n          type: string\n        taxDescriptor:\n          description: The organization's tax label. This will be displayed on the invoice.\n          maxLength: 255\n          type: string\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The organization updated time.\n      required:\n        - name\n        - country\n      type: object\n    OrganizationEmbed:\n      description: Organization object.\n      properties:\n        organization:\n          $ref: \"#/components/schemas/Organization\"\n      readOnly: true\n      type: object\n    OrganizationLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - organization\n          type: string\n      required:\n        - rel\n      type: object\n    OrganizationQuestionnaire:\n      properties:\n        integrationType:\n          description: What kind of integration organization looks for.\n          type: string\n        launchTiming:\n          description: Desired time to go live.\n          type: string\n        monthlyTransactions:\n          description: The amount of monthly processed transaction.\n          type: string\n        products:\n          description: The list of products organization is interested in.\n          items:\n            type: string\n          type: array\n        role:\n          description: The role of the owner.\n          type: string\n      type: object\n    Other:\n      allOf:\n        - $ref: \"#/components/schemas/A1Gateway3dsServers\"\n        - $ref: \"#/components/schemas/eMerchantPay3dsServers\"\n        - $ref: \"#/components/schemas/GET3dsServers\"\n        - $ref: \"#/components/schemas/NMI3dsServers\"\n        - $ref: \"#/components/schemas/Payvision3dsServers\"\n        - $ref: \"#/components/schemas/VantivLitle3dsServers\"\n        - $ref: \"#/components/schemas/Walpay3dsServers\"\n        - $ref: \"#/components/schemas/Worldpay3dsServers\"\n      description: Other.\n    Paay3dsServer:\n      allOf:\n        - $ref: \"#/components/schemas/A1Gateway3dsServers\"\n        - $ref: \"#/components/schemas/eMerchantPay3dsServers\"\n        - $ref: \"#/components/schemas/GET3dsServers\"\n        - $ref: \"#/components/schemas/NMI3dsServers\"\n        - $ref: \"#/components/schemas/Payvision3dsServers\"\n        - $ref: \"#/components/schemas/VantivLitle3dsServers\"\n        - $ref: \"#/components/schemas/Walpay3dsServers\"\n        - $ref: \"#/components/schemas/Worldpay3dsServers\"\n        - properties:\n            apiKey:\n              description: Paay ApiKey.\n              type: string\n            mpiUrl:\n              description: Paay 3DS Server url.\n              type: string\n            sandboxMpiUrl:\n              description: Paay sandbox 3DS Server url.\n              type: string\n            secret:\n              description: Paay secret.\n              format: password\n              type: string\n          required:\n            - apiKey\n            - secret\n            - mpiUrl\n            - sandboxMpiUrl\n          type: object\n      description: Paay.\n    Pagsmile:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                appId:\n                  description: Pagsmile app ID.\n                  type: string\n                merchantId:\n                  description: Pagsmile merchant ID.\n                  type: string\n                secretKey:\n                  description: Pagsmile secret key.\n                  format: password\n                  type: string\n              required:\n                - merchantId\n                - appId\n                - secretKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Pagsmile Gateway config.\n    Panamerican:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Panamerican credentials object.\n              properties:\n                key:\n                  description: Panamerican's key.\n                  type: string\n                password:\n                  description: Panamerican's Password.\n                  format: password\n                  type: string\n              required:\n                - key\n                - password\n              type: object\n            settings:\n              description: Panamerican settings object.\n              properties:\n                convertToAscii:\n                  description: Will convert all chars to ascii.\n                  type: boolean\n                extraStep:\n                  description: Show extra step for user to enter their ID number.\n                  type: boolean\n              required:\n                - extraStep\n              type: object\n            threeDSecureServer:\n              $ref: \"#/components/schemas/Panamerican3dsServers\"\n          required:\n            - credentials\n            - settings\n          type: object\n      description: Panamerican config.\n    Panamerican3dsServer:\n      allOf:\n        - $ref: \"#/components/schemas/Panamerican3dsServers\"\n      description: Panamerican Integrated.\n    Panamerican3dsServers:\n      description: Panamerican 3DS Servers.\n      discriminator:\n        mapping:\n          Panamerican3dsServer: \"#/components/schemas/Panamerican3dsServer\"\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/ThreeDSecureServerName\"\n          enum:\n            - Panamerican3dsServer\n      required:\n        - name\n      type: object\n    PandaGateway:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                apiCode:\n                  description: Panda Gateway api code.\n                  type: string\n                merchantCode:\n                  description: Panda Gateway merchant code.\n                  type: string\n                signKey:\n                  description: Panda Gateway sign key.\n                  format: password\n                  type: string\n              required:\n                - merchantCode\n                - apiCode\n                - signKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Panda Gateway config.\n    ParamountEft:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Paramount credentials object.\n              properties:\n                merchant_id:\n                  description: Merchant account ID.\n                  type: string\n                merchant_pass:\n                  description: Merchant account password.\n                  format: password\n                  type: string\n                payee:\n                  description: Merchant name/descriptor.\n                  type: string\n              required:\n                - merchant_id\n                - merchant_pass\n                - payee\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Paramount config.\n    ParamountInterac:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: ParamountInterac credentials object.\n              properties:\n                encryptionKey:\n                  description: ParamountInterac encryption key.\n                  format: password\n                  type: string\n                merchantId:\n                  description: ParamountInterac merchant ID.\n                  type: string\n                password:\n                  description: ParamountInterac password for query.\n                  format: password\n                  type: string\n              required:\n                - merchantId\n                - encryptionKey\n                - password\n              type: object\n            settings:\n              properties:\n                sandbox:\n                  default: false\n                  description: True if gateway account is in sandbox mode.\n                  type: boolean\n              required:\n                - sandbox\n              type: object\n          required:\n            - credentials\n          type: object\n      description: ParamountInterac config.\n    ParentTransactionEmbed:\n      description: Retried Transaction object.\n      properties:\n        parentTransaction:\n          $ref: \"#/components/schemas/Transaction\"\n      readOnly: true\n      type: object\n    ParentTransactionLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - parentTransaction\n          type: string\n      required:\n        - rel\n      type: object\n    Pay4Fun:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Pay4Fun credentials object.\n              properties:\n                merchantId:\n                  description: Pay4Fun merchant ID.\n                  type: string\n                merchantKey:\n                  description: Pay4Fun merchant key.\n                  format: password\n                  type: string\n                merchantSecret:\n                  description: Pay4Fun merchant secret.\n                  format: password\n                  type: string\n              required:\n                - merchantId\n                - merchantSecret\n                - merchantKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Pay4Fun config.\n    PayCash:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: PayCash credentials object.\n              properties:\n                emisor:\n                  description: Identify of the company.\n                  type: string\n                token:\n                  description: Token.\n                  format: password\n                  type: string\n              required:\n                - emisor\n                - token\n              type: object\n          required:\n            - credentials\n          type: object\n      description: PayCash config.\n    PayClub:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: PayClub credentials object.\n              properties:\n                accountNumber:\n                  type: string\n                merchantId:\n                  type: string\n                signKey:\n                  format: password\n                  type: string\n              required:\n                - apiKey\n                - accountNumber\n                - signKey\n              type: object\n            settings:\n              properties:\n                use3DSChannel:\n                  description: Use 3DS channel.\n                  type: boolean\n              type: object\n          required:\n            - credentials\n          type: object\n      description: PayClub config.\n    PayPal:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            settings:\n              description: PayPal settings object.\n              properties:\n                enableGuestCheckout:\n                  default: false\n                  description: Allow users without PayPal accounts to pay using credit or debit\n                    cards.\n                  type: boolean\n                redirectUrl:\n                  description: The URL where the user will be redirected after authorizing the\n                    account on PayPal.\n                  format: url\n                  type: string\n              required:\n                - redirectUrl\n              type: object\n          required:\n            - settings\n          type: object\n      description: PayPal Gateway config.\n    PayPalAccount:\n      allOf:\n        - $ref: \"#/components/schemas/CommonPayPalAccount\"\n        - properties:\n            _embedded:\n              description: Any embedded objects available that are requested by the `expand`\n                querystring parameter.\n              items:\n                anyOf:\n                  - $ref: \"#/components/schemas/AuthTransactionEmbed\"\n                  - $ref: \"#/components/schemas/CustomerEmbed\"\n              minItems: 1\n              readOnly: true\n              type: array\n            _links:\n              description: The links related to resource.\n              items:\n                anyOf:\n                  - $ref: \"#/components/schemas/SelfLink\"\n                  - $ref: \"#/components/schemas/CustomerLink\"\n                  - $ref: \"#/components/schemas/AuthTransactionLink\"\n                  - $ref: \"#/components/schemas/ApprovalUrlLink\"\n              minItems: 1\n              readOnly: true\n              type: array\n    PayTabs:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: PayTabs credentials object.\n              properties:\n                clientKey:\n                  type: string\n                profileId:\n                  type: string\n                serverKey:\n                  format: password\n                  type: string\n              required:\n                - profileId\n                - clientKey\n                - serverKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: PayTabs config.\n    PayULatam:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: PayULatam credentials object.\n              properties:\n                accountId:\n                  description: PayULatam account id.\n                  type: string\n                apiKey:\n                  description: PayULatam API key.\n                  format: password\n                  type: string\n                apiLogin:\n                  description: PayULatam API login.\n                  type: string\n                merchantId:\n                  description: PayULatam merchant id.\n                  type: string\n              required:\n                - merchantId\n                - accountId\n                - apiLogin\n                - apiKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: PayULatam config.\n    Payeezy:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                apiKey:\n                  description: API Key.\n                  type: string\n                apiSecret:\n                  description: API Secret.\n                  format: password\n                  type: string\n                merchantId:\n                  description: Payeezy Merchant ID.\n                  type: string\n                merchantToken:\n                  description: Merchant Token.\n                  format: password\n                  type: string\n              required:\n                - merchantId\n                - merchantToken\n                - apiKey\n                - apiSecret\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Payeezy Gateway config.\n    Payflow:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Payflow credentials object.\n              properties:\n                password:\n                  description: The password you defined while registering for the account.\n                  format: password\n                  type: string\n                user:\n                  description: If you set up one or more additional users on the account, this\n                    value is the ID of the user authorized to process\n                    transactions. If, however, you have not set up additional\n                    users, USER has the same value as VENDOR.\n                  type: string\n                vendor:\n                  description: Your merchant login ID created when you registered for the account.\n                  type: string\n              required:\n                - user\n                - vendor\n                - password\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Payflow config.\n    PaymenTechnologies:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                apiKey:\n                  description: PaymenTechnologies API key required for query operations.\n                  format: password\n                  type: string\n                authenticateId:\n                  description: PaymenTechnologies Gateway authenticate ID.\n                  type: string\n                authenticatePw:\n                  description: PaymenTechnologies Gateway authenticate password.\n                  format: password\n                  type: string\n                publicKey:\n                  description: PaymenTechnologies Gateway API public key.\n                  type: string\n                secretKey:\n                  description: PaymenTechnologies Gateway API secret key.\n                  format: password\n                  type: string\n              required:\n                - authenticateId\n                - authenticatePw\n                - publicKey\n                - secretKey\n                - apiKey\n              type: object\n            settings:\n              properties:\n                use3DSEndpoint:\n                  description: Use 3DS endpoint.\n                  type: boolean\n              type: object\n          required:\n            - credentials\n          type: object\n      description: PaymenTechnologies Gateway config.\n    PaymentAsia:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: PaymentAsia credentials object.\n              properties:\n                apiKey:\n                  format: password\n                  type: string\n              required:\n                - apiKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: PaymentAsia config.\n    PaymentCard:\n      allOf:\n        - $ref: \"#/components/schemas/CommonPaymentCard\"\n        - properties:\n            _embedded:\n              description: Any embedded objects available that are requested by the `expand`\n                querystring parameter.\n              items:\n                anyOf:\n                  - $ref: \"#/components/schemas/AuthTransactionEmbed\"\n                  - $ref: \"#/components/schemas/CustomerEmbed\"\n              minItems: 1\n              readOnly: true\n              type: array\n            _links:\n              description: The links related to resource.\n              items:\n                anyOf:\n                  - $ref: \"#/components/schemas/SelfLink\"\n                  - $ref: \"#/components/schemas/CustomerLink\"\n                  - $ref: \"#/components/schemas/AuthTransactionLink\"\n                  - $ref: \"#/components/schemas/ApprovalUrlLink\"\n              minItems: 1\n              readOnly: true\n              type: array\n            expirationReminderNumber:\n              description: Number of expiration reminder events triggered.\n              readOnly: true\n              type: integer\n            expirationReminderTime:\n              allOf:\n                - $ref: \"#/components/schemas/ServerTimestamp\"\n              description: Time expiration reminder event will be triggered.\n              nullable: true\n            stickyGatewayAccountId:\n              description: Default gateway account ID used for transactions.\n              readOnly: true\n              type: string\n    PaymentCardBrand:\n      description: Payment Card brand.\n      enum:\n        - Visa\n        - MasterCard\n        - American Express\n        - Discover\n        - Maestro\n        - Solo\n        - Electron\n        - JCB\n        - Voyager\n        - Diners Club\n        - Switch\n        - Laser\n        - China UnionPay\n        - AstroPay Card\n      type: string\n    PaymentCardCreatePlain:\n      properties:\n        billingAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: The billing address.\n        customFields:\n          $ref: \"#/components/schemas/ResourceCustomFields\"\n        customerId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The Customer's ID.\n        cvv:\n          description: Card's cvv (card verification value).\n          type: string\n          writeOnly: true\n        expMonth:\n          description: Card's expiration month.\n          type: integer\n        expYear:\n          description: Card's expiration year.\n          type: integer\n        method:\n          description: The method of payment instrument.\n          enum:\n            - payment-card\n          type: string\n        pan:\n          description: The card PAN (Primary Account Number).\n          type: string\n          writeOnly: true\n        riskMetadata:\n          $ref: \"#/components/schemas/RiskMetadata\"\n      required:\n        - method\n        - customerId\n        - pan\n        - expYear\n        - expMonth\n        - billingAddress\n      type: object\n    PaymentCardCreateToken:\n      properties:\n        customFields:\n          $ref: \"#/components/schemas/ResourceCustomFields\"\n        customerId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The Customer's ID.\n        token:\n          description: PaymentCardToken ID.\n          type: string\n      required:\n        - customerId\n        - token\n      type: object\n    PaymentCardDigitalWalletFeature:\n      properties:\n        name:\n          description: The feature name.\n          enum:\n            - Google Pay\n            - Apple Pay\n          type: string\n      title: Digital Wallet\n      type: object\n    PaymentCardEmbed:\n      description: Payment Card object.\n      properties:\n        paymentCard:\n          $ref: \"#/components/schemas/PaymentCard\"\n      readOnly: true\n      type: object\n    PaymentCardLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - paymentCard\n          type: string\n      required:\n        - rel\n      type: object\n    PaymentCardToken:\n      allOf:\n        - $ref: \"#/components/schemas/CommonPaymentToken\"\n      properties:\n        billingAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: The billing address object.\n        method:\n          description: The token payment method.\n          enum:\n            - payment-card\n          type: string\n        paymentInstrument:\n          description: The payment card instrument details.\n          properties:\n            bin:\n              description: Payment Card BIN (the PAN's first 6 digits).\n              format: bin\n              readOnly: true\n              type: string\n            brand:\n              allOf:\n                - $ref: \"#/components/schemas/PaymentCardBrand\"\n              readOnly: true\n            cvv:\n              description: Payment Card CVV/CVC.\n              type: string\n              writeOnly: true\n            expMonth:\n              description: Payment Card expiration month.\n              type: integer\n            expYear:\n              description: Payment Card expiration year.\n              type: integer\n            last4:\n              description: Payment Card PAN's last 4 digits.\n              readOnly: true\n              type: string\n            pan:\n              description: Payment Card PAN (Primary Account Number).\n              type: string\n              writeOnly: true\n          type: object\n      required:\n        - method\n        - paymentInstrument\n      title: Payment Card Token\n      type: object\n    PaymentCardUpdatePlain:\n      properties:\n        billingAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: The billing address.\n        customFields:\n          $ref: \"#/components/schemas/ResourceCustomFields\"\n        cvv:\n          description: Card's cvv (card verification value).\n          type: string\n        expMonth:\n          description: Card's expiration month.\n          type: integer\n        expYear:\n          description: Card's expiration year.\n          type: integer\n        stickyGatewayAccountId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Sticky gateway account ID.\n      type: object\n    PaymentInstruction:\n      oneOf:\n        - $ref: \"#/components/schemas/PaymentToken\"\n        - $ref: \"#/components/schemas/PaymentInstrument-3\"\n        - $ref: \"#/components/schemas/PaymentMethods\"\n    PaymentInstrument:\n      oneOf:\n        - $ref: \"#/components/schemas/VaultedInstrument\"\n        - $ref: \"#/components/schemas/AlternativePaymentInstrument\"\n        - $ref: \"#/components/schemas/CashInstrument\"\n        - $ref: \"#/components/schemas/CheckInstrument\"\n      type: object\n    PaymentInstrument-2:\n      oneOf:\n        - $ref: \"#/components/schemas/PaymentCard\"\n        - $ref: \"#/components/schemas/BankAccount\"\n        - $ref: \"#/components/schemas/PayPalAccount\"\n        - $ref: \"#/components/schemas/KhelocardCard\"\n        - $ref: \"#/components/schemas/AlternativePaymentInstrument-2\"\n    PaymentInstrument-3:\n      properties:\n        paymentInstrumentId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The Payment Instrument identifier string.\n      required:\n        - paymentInstrumentId\n      title: Payment Instrument\n      type: object\n    PaymentInstrumentCreateToken:\n      properties:\n        customFields:\n          $ref: \"#/components/schemas/ResourceCustomFields\"\n        customerId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The customer's ID.\n        token:\n          description: Payment token ID.\n          type: string\n      required:\n        - customerId\n        - token\n      type: object\n    PaymentInstrumentUpdateToken:\n      properties:\n        billingAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: The billing address (if supplied – overrides billing address from\n            token).\n        customFields:\n          $ref: \"#/components/schemas/ResourceCustomFields\"\n        token:\n          description: Payment token ID.\n          type: string\n      type: object\n    PaymentMethod:\n      description: The payment method.\n      enum:\n        - payment-card\n        - ach\n        - cash\n        - check\n        - paypal\n        - AdvCash\n        - Airpay\n        - Alfa-click\n        - Alipay\n        - Apple Pay\n        - AstroPay Card\n        - AstroPay-GO\n        - bank-transfer\n        - bank-transfer-2\n        - bank-transfer-3\n        - bank-transfer-4\n        - bank-transfer-5\n        - bank-transfer-6\n        - bank-transfer-7\n        - bank-transfer-8\n        - bank-transfer-9\n        - Beeline\n        - Belfius-direct-net\n        - bitcoin\n        - Boleto\n        - Boleto-2\n        - Boleto-3\n        - cash-deposit\n        - CASHlib\n        - CashToCode\n        - CCAvenue\n        - China UnionPay\n        - CODVoucher\n        - Conekta-oxxo\n        - Conekta-spei\n        - cryptocurrency\n        - Cupon-de-pagos\n        - CyberSource\n        - domestic-cards\n        - echeck\n        - ecoPayz\n        - ecoVoucher\n        - EPS\n        - ePay.bg\n        - Ethereum\n        - e-wallet\n        - ezyEFT\n        - eZeeWallet\n        - Flexepin\n        - Giropay\n        - Google Pay\n        - Gpaysafe\n        - iDebit\n        - iDEAL\n        - ING-homepay\n        - INOVAPAY-pin\n        - INOVAPAY-wallet\n        - InstaDebit\n        - instant-bank-transfer\n        - Interac-online\n        - Interac-eTransfer\n        - Interac-express-connect\n        - Interac\n        - invoice\n        - iWallet\n        - Jeton\n        - jpay\n        - Khelocard\n        - Klarna\n        - Litecoin\n        - loonie\n        - LPG-online\n        - LPG-payment-card\n        - Megafon\n        - MiFinity-eWallet\n        - miscellaneous\n        - Bancontact\n        - MTS\n        - MuchBetter\n        - MyFatoorah\n        - Neosurf\n        - Netbanking\n        - Neteller\n        - Nordea-Solo\n        - OchaPay\n        - online-bank-transfer\n        - Onlineueberweisen\n        - oriental-wallet\n        - OXXO\n        - Pagsmile-lottery\n        - Pagsmile-deposit-express\n        - PayCash\n        - Payeer\n        - PaymentAsia-crypto\n        - Paysafecard\n        - PayTabs\n        - Pay4Fun\n        - Paymero\n        - Paymero-QR\n        - PayULatam\n        - Perfect-money\n        - Piastrix\n        - PIX\n        - PinPay\n        - phone\n        - PhonePe\n        - POLi\n        - PostFinance-card\n        - PostFinance-e-finance\n        - Przelewy24\n        - QIWI\n        - QQPay\n        - Resurs\n        - SEPA\n        - Siirto\n        - Skrill\n        - Skrill Rapid Transfer\n        - SMSVoucher\n        - Sofort\n        - SparkPay\n        - swift-dbt\n        - Tele2\n        - Terminaly-RF\n        - Tether\n        - ToditoCash-card\n        - Trustly\n        - TWINT\n        - UniCrypt\n        - UPayCard\n        - UPI\n        - VCreditos\n        - VenusPoint\n        - voucher\n        - voucher-2\n        - voucher-3\n        - voucher-4\n        - Webmoney\n        - Webpay\n        - Webpay-2\n        - Webpay Card\n        - WeChat Pay\n        - XPay-P2P\n        - XPay-QR\n        - Yandex-money\n        - Zotapay\n        - Zimpler\n      type: string\n    PaymentMethods:\n      properties:\n        methods:\n          description: \u003e\n            The list of available payment methods.\n\n            Only payment methods with at least one active gateway account are allowed.\n\n\n            If not specified all available payment methods will be displayed.\n\n\n            Customer can choose any of those as well as the payment instrument for them.\n\n            Additional steps will occur via a redirect to `approvalUrl`.\n          items:\n            $ref: \"#/components/schemas/PaymentMethod\"\n          type: array\n      title: Payment Methods\n      type: object\n    PaymentRetry:\n      properties:\n        afterAttemptPolicy:\n          description: The policy on the attempt finishes.\n          enum:\n            - none\n            - change-subscription-renewal-time\n          type: string\n        afterRetryEndPolicy:\n          description: The policy on the retry ends.\n          enum:\n            - none\n            - cancel-subscription\n          type: string\n        attempts:\n          items:\n            properties:\n              paymentInstruction:\n                $ref: \"#/components/schemas/AmountAdjustment\"\n              scheduleInstruction:\n                $ref: \"#/components/schemas/CommonScheduleInstruction\"\n            required:\n              - scheduleInstruction\n              - paymentInstruction\n            type: object\n          minItems: 1\n          type: array\n      required:\n        - attempts\n        - afterAttemptPolicy\n        - afterRetryEndPolicy\n      type: object\n    PaymentToken:\n      properties:\n        token:\n          description: Payment Token ID.\n          type: string\n      required:\n        - token\n      title: Payment Token\n      type: object\n    PaymentsOS:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                appId:\n                  type: string\n                privateKey:\n                  format: password\n                  type: string\n              required:\n                - appId\n                - privateKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: PaymentsOS config.\n    Paymero:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Paymero credentials object.\n              properties:\n                apiKey:\n                  description: Paymero API key.\n                  format: password\n                  type: string\n              required:\n                - apiKey\n              type: object\n            settings:\n              description: Paymero settings object.\n              properties:\n                amountExceeded:\n                  default: false\n                  description: Decline transactions when the amount received exceeds the amount\n                    requested.\n                  type: boolean\n                mainCurrency:\n                  description: This will be the blockchain on which currency runs.\n                  enum:\n                    - TRX\n                    - ETH\n                  type: string\n                targetCurrency:\n                  description: This will be the currency to which you want to auto-convert the\n                    received cryptocurrency in to.\n                  example: USD\n                  maxLength: 3\n                  minLength: 3\n                  type: string\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Paymero config.\n    PayoutRequest:\n      allOf:\n        - $ref: \"#/components/schemas/CommonTransactionRequest\"\n    Payr:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                apiSecurityToken:\n                  description: Hash of the password for the Alliance API (transaction reporting).\n                  format: password\n                  type: string\n                apiUserId:\n                  description: Username for the Alliance API (transaction reporting).\n                  type: string\n                clientId:\n                  description: Payr Gateway client ID.\n                  type: string\n                secretWord:\n                  description: Payr Gateway secret word.\n                  format: password\n                  type: string\n              required:\n                - clientId\n                - secretWord\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Payr Gateway config.\n    Paysafe:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                accountNum:\n                  description: Paysafe Gateway account number.\n                  type: string\n                storeId:\n                  description: Paysafe Gateway store ID.\n                  type: string\n                storePwd:\n                  description: Paysafe Gateway store password.\n                  format: password\n                  type: string\n              required:\n                - storeId\n                - storePwd\n                - accountNum\n              type: object\n            threeDSecureServer:\n              $ref: \"#/components/schemas/Paysafe3dsServers\"\n          required:\n            - credentials\n          type: object\n      description: Paysafe Gateway config.\n    Paysafe3dsServer:\n      allOf:\n        - $ref: \"#/components/schemas/Paysafe3dsServers\"\n      description: Paysafe Integrated.\n    Paysafe3dsServers:\n      description: Paysafe 3DS Servers.\n      discriminator:\n        mapping:\n          Paysafe3dsServer: \"#/components/schemas/Paysafe3dsServer\"\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/ThreeDSecureServerName\"\n          enum:\n            - Paysafe3dsServer\n      required:\n        - name\n      type: object\n    Paysafecash:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                apiKey:\n                  description: Paysafecash API key.\n                  format: password\n                  type: string\n              required:\n                - apiKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Paysafecash Gateway config.\n    Payvision:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                memberGuid:\n                  description: Payvision Gateway member guid.\n                  format: password\n                  type: string\n                memberId:\n                  description: Payvision Gateway member id.\n                  type: string\n              required:\n                - memberId\n                - memberGuid\n              type: object\n            settings:\n              description: Payvision settings object.\n              properties:\n                avs:\n                  description: Payvision Gateway avs.\n                  type: boolean\n                delay:\n                  description: Payvision Gateway delay.\n                  type: integer\n                merchantAccountType:\n                  description: Payvision merchant account type.\n                  type: integer\n              required:\n                - merchantAccountType\n              type: object\n            threeDSecureServer:\n              $ref: \"#/components/schemas/Payvision3dsServers\"\n          required:\n            - credentials\n          type: object\n      description: Payvision Gateway config.\n    Payvision3dsServer:\n      allOf:\n        - $ref: \"#/components/schemas/Payvision3dsServers\"\n      description: Payvision Integrated.\n    Payvision3dsServers:\n      description: Payvision 3DS Servers.\n      discriminator:\n        mapping:\n          CardinalCommerce3dsServer: \"#/components/schemas/CardinalCommerce3dsServer\"\n          Other: \"#/components/schemas/Other\"\n          Paay3dsServer: \"#/components/schemas/Paay3dsServer\"\n          Payvision3dsServer: \"#/components/schemas/Payvision3dsServer\"\n          ThreeDSecureIO3dsServer: \"#/components/schemas/ThreeDSecureIO3dsServer\"\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/ThreeDSecureServerName\"\n          enum:\n            - Payvision3dsServer\n            - Payvision3ds2Server\n            - CardinalCommerce3dsServer\n            - Paay3dsServer\n            - ThreeDSecureIO3dsServer\n            - Other\n      required:\n        - name\n      type: object\n    PermalinkLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - permalink\n          type: string\n      required:\n        - rel\n      type: object\n    Piastrix:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Piastrix credentials object.\n              properties:\n                secretKey:\n                  description: Secret Key.\n                  format: password\n                  type: string\n                shopId:\n                  description: Shop ID.\n                  type: string\n              required:\n                - shopId\n                - secretKey\n              type: object\n            settings:\n              description: Piastrix settings object.\n              properties:\n                tolerancePercentage:\n                  description: Tolerance percentage for settled amount.\n                  example: 5\n                  maximum: 5\n                  minimum: 0\n                  type: integer\n              type: object\n            threeDSecureServer:\n              $ref: \"#/components/schemas/Piastrix3dsServers\"\n          required:\n            - credentials\n          type: object\n      description: Piastrix config.\n    Piastrix3dsServer:\n      allOf:\n        - $ref: \"#/components/schemas/Piastrix3dsServers\"\n      description: Piastrix Integrated.\n    Piastrix3dsServers:\n      description: Piastrix 3DS Servers.\n      discriminator:\n        mapping:\n          Piastrix3dsServer: \"#/components/schemas/Piastrix3dsServer\"\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/ThreeDSecureServerName\"\n          enum:\n            - Piastrix3dsServer\n      required:\n        - name\n      type: object\n    PlaidAccountToken:\n      allOf:\n        - $ref: \"#/components/schemas/CommonPaymentToken\"\n      properties:\n        billingAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: The billing address object.\n        method:\n          description: The token method.\n          enum:\n            - plaid-account\n          type: string\n        paymentInstrument:\n          description: The Plaid payment instrument details.\n          properties:\n            accountId:\n              description: The Plaid account ID.\n              type: string\n            credentialHash:\n              allOf:\n                - $ref: \"#/components/schemas/ResourceId\"\n              description: The Plaid credentials hash.\n            publicToken:\n              description: The Plaid public token.\n              type: string\n          required:\n            - credentialHash\n            - publicToken\n            - accountId\n          type: object\n      required:\n        - method\n        - billingAddress\n        - paymentInstrument\n      title: Plaid Account Token\n      type: object\n    Plan:\n      allOf:\n        - $ref: \"#/components/schemas/CommonPlan\"\n        - properties:\n            _links:\n              description: The links related to resource.\n              items:\n                $ref: \"#/components/schemas/SelfLink\"\n              minItems: 1\n              readOnly: true\n              type: array\n            invoiceTimeShift:\n              allOf:\n                - $ref: \"#/components/schemas/InvoiceTimeShift\"\n              description: You can shift issue time and due time of invoices for this plan.\n    PlanBillingTiming:\n      default: prepaid\n      description: \u003e\n        The billing timing in relation to the service period.\n\n        For `prepaid` plans the customer pays when the service period starts,\n\n        whereas, for `postpaid` plans, the customer pays when the service period ends.\n      enum:\n        - prepaid\n        - postpaid\n      type: string\n    PlanEmbed:\n      description: Plan object.\n      properties:\n        plan:\n          $ref: \"#/components/schemas/Plan\"\n      readOnly: true\n      type: object\n    PlanPeriod:\n      properties:\n        length:\n          description: The length of time.\n          type: integer\n        unit:\n          description: The unit of time.\n          enum:\n            - day\n            - week\n            - month\n            - year\n          type: string\n      required:\n        - unit\n        - length\n      type: object\n    PlanPriceFormula:\n      discriminator:\n        mapping:\n          fixed-fee: \"#/components/schemas/fixed-fee\"\n          flat-rate: \"#/components/schemas/flat-rate\"\n          stairstep: \"#/components/schemas/stairstep\"\n          tiered: \"#/components/schemas/tiered\"\n          volume: \"#/components/schemas/volume\"\n        propertyName: formula\n      properties:\n        formula:\n          description: \u003e\n            The price formula determines what algorithm is used to calculate\n            the invoice price based on a few factors,\n\n            - the quantity in the order (which may be variable if usage pricing, otherwise determined when creating the order)\n\n            - the price brackets data\n\n\n            To determine which formula is correct, please see the price formula documentation.\n          enum:\n            - fixed-fee\n            - flat-rate\n            - stairstep\n            - tiered\n            - volume\n          type: string\n      required:\n        - formula\n      type: object\n    Plugnpay:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                publisher-name:\n                  description: Plugnpay Gateway member id.\n                  type: string\n                publisher-password:\n                  description: Plugnpay Gateway avs.\n                  format: password\n                  type: string\n              required:\n                - publisher-name\n                - publisher-password\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Plugnpay Gateway config.\n    PostFinance:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: PostFinance credentials object.\n              properties:\n                keyPassphrase:\n                  format: password\n                  type: string\n                merchantId:\n                  type: string\n                privateKey:\n                  format: password\n                  type: string\n                  x-multiline: true\n                pspId:\n                  type: string\n                publicKey:\n                  type: string\n                  x-multiline: true\n                sftpKeyPassphrase:\n                  format: password\n                  type: string\n                sftpPrivateKey:\n                  format: password\n                  type: string\n                  x-multiline: true\n                sftpUsername:\n                  type: string\n              required:\n                - pspId\n                - merchantId\n                - sftpUsername\n                - publicKey\n                - privateKey\n                - keyPassphrase\n                - sftpPrivateKey\n                - sftpKeyPassphrase\n              type: object\n          required:\n            - credentials\n          type: object\n      description: PostFinance config.\n    PriceBasedShippingRate:\n      properties:\n        _links:\n          description: The links related to resource.\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        currency:\n          allOf:\n            - $ref: \"#/components/schemas/CurrencyCode\"\n        maxOrderSubtotal:\n          description: Maximum order subtotal for which this shipping rate is applicable\n            (NULL if no maximum).\n          format: double\n          type: number\n        minOrderSubtotal:\n          default: 0\n          description: Minimum order subtotal for which this shipping rate is applicable,\n            defaults to 0.00.\n          format: double\n          type: number\n        name:\n          description: The shipping rate name.\n          maxLength: 255\n          type: string\n        price:\n          description: The shipping price - 0 is a valid value (for free).\n          format: double\n          type: number\n      required:\n        - name\n        - currency\n        - price\n      type: object\n    Problem:\n      allOf:\n        - $ref: \"#/components/schemas/DocumentedProblem\"\n        - $ref: \"#/components/schemas/DetailedProblem\"\n      type: object\n    Product:\n      allOf:\n        - $ref: \"#/components/schemas/CommonProduct\"\n        - properties:\n            _links:\n              description: The links related to resource.\n              items:\n                $ref: \"#/components/schemas/SelfLink\"\n              minItems: 1\n              readOnly: true\n              type: array\n            accountingCode:\n              description: The product accounting code.\n              example: \"4010\"\n              type: string\n            taxCategoryId:\n              description: The product's tax category identifier string.\n              enum:\n                - \"00000\"\n                - \"99999\"\n                - \"20010\"\n                - \"40030\"\n                - \"51020\"\n                - \"51010\"\n                - \"31000\"\n                - \"30070\"\n              type: string\n    ProductEmbed:\n      description: Product object.\n      properties:\n        product:\n          $ref: \"#/components/schemas/Product\"\n      readOnly: true\n      type: object\n    ProductLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - product\n          type: string\n      required:\n        - rel\n      type: object\n    ProofOfAddress:\n      allOf:\n        - $ref: \"#/components/schemas/KycDocument\"\n        - properties:\n            _links:\n              description: The links related to resource.\n              items:\n                anyOf:\n                  - $ref: \"#/components/schemas/SelfLink\"\n                  - $ref: \"#/components/schemas/FileLink\"\n                  - $ref: \"#/components/schemas/CustomerLink\"\n              minItems: 3\n              readOnly: true\n              type: array\n            documentMatches:\n              properties:\n                data:\n                  $ref: \"#/components/schemas/AddressMatches\"\n                score:\n                  description: The calculated score that represents the % of confidence that this\n                    proof of address represents the given customer.\n                  example: 0.75\n                  format: double\n                  type: number\n              readOnly: true\n              type: object\n            parsedData:\n              properties:\n                data:\n                  $ref: \"#/components/schemas/AddressMatches\"\n                score:\n                  description: The calculated score that represents the % of confidence that this\n                    proof of address represents the given customer.\n                  example: 0.75\n                  format: double\n                  type: number\n              readOnly: true\n              type: object\n    ProofOfFunds:\n      allOf:\n        - $ref: \"#/components/schemas/KycDocument\"\n    ProofOfIdentity:\n      allOf:\n        - $ref: \"#/components/schemas/KycDocument\"\n        - properties:\n            _links:\n              description: The links related to resource.\n              items:\n                anyOf:\n                  - $ref: \"#/components/schemas/SelfLink\"\n                  - $ref: \"#/components/schemas/FileLink\"\n                  - $ref: \"#/components/schemas/CustomerLink\"\n              minItems: 3\n              readOnly: true\n              type: array\n            documentMatches:\n              properties:\n                data:\n                  $ref: \"#/components/schemas/IdentityMatches\"\n                score:\n                  description: The calculated score that represents the % of confidence that this\n                    ID represents the given customer.\n                  example: 0.75\n                  format: double\n                  type: number\n              readOnly: true\n              type: object\n            parsedData:\n              properties:\n                data:\n                  $ref: \"#/components/schemas/IdentityMatches\"\n                score:\n                  description: The calculated score that represents the % of confidence that this\n                    ID represents the given customer.\n                  example: 0.75\n                  format: double\n                  type: number\n              readOnly: true\n              type: object\n    ProofOfPurchase:\n      allOf:\n        - $ref: \"#/components/schemas/KycDocument\"\n    Prosa:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Prosa credentials object.\n              properties:\n                accessToken:\n                  description: Access token.\n                  format: password\n                  type: string\n                entityId:\n                  description: Entity ID.\n                  type: string\n              required:\n                - entityId\n                - accessToken\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Prosa config.\n    PurchaseBumpOffer:\n      properties:\n        bumpAmount:\n          allOf:\n            - $ref: \"#/components/schemas/MoneyAmount\"\n          description: Bump amount.\n        bumpAmountInUsd:\n          allOf:\n            - $ref: \"#/components/schemas/MoneyAmount\"\n          description: Bump amount in USD.\n          readOnly: true\n        customFields:\n          $ref: \"#/components/schemas/ResourceCustomFields\"\n        offerId:\n          description: Offer ID.\n          type: string\n        offerType:\n          description: Offer Type.\n          example: bonus\n          type: string\n      required:\n        - offerId\n        - offerType\n        - bumpAmount\n      type: object\n    PurchaseBumpOfferList:\n      items:\n        $ref: \"#/components/schemas/PurchaseBumpOffer\"\n      minItems: 1\n      type: array\n    PurchaseBumpSplitVersionName:\n      description: The name of bump offer version, useful to make split tests.\n      type: string\n    PurchaseBumpStatus:\n      description: Bump offer status.\n      enum:\n        - presented\n        - rejected\n        - selected\n        - unknown\n      type: string\n    QueryUrlLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - queryUrl\n          type: string\n      required:\n        - rel\n      type: object\n    RPN:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                key:\n                  description: RPN Key.\n                  format: password\n                  type: string\n                mid:\n                  description: RPN MID.\n                  type: string\n              required:\n                - mid\n                - key\n              type: object\n          required:\n            - credentials\n          type: object\n      description: RPN Gateway config.\n    Rapyd:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Rapyd credentials object.\n              properties:\n                accessKey:\n                  type: string\n                secretKey:\n                  format: password\n                  type: string\n              required:\n                - accessKey\n                - secretKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Rapyd config.\n    ReadyToPay:\n      oneOf:\n        - $ref: \"#/components/schemas/ReadyToPayAmount\"\n        - $ref: \"#/components/schemas/ReadyToPayItems\"\n      properties:\n        billingAddress:\n          allOf:\n            - $ref: \"#/components/schemas/ContactObject\"\n          description: The billing address.\n          writeOnly: true\n        riskMetadata:\n          $ref: \"#/components/schemas/RiskMetadata\"\n        websiteId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The website identifier string.\n      required:\n        - websiteId\n        - riskMetadata\n      type: object\n    ReadyToPayAchMethod:\n      properties:\n        feature:\n          description: \u003e\n            The specific feature (eg. digital wallet or a processor) of this\n            method. If method doesn't have any features – will be null.\n          nullable: true\n          oneOf:\n            - $ref: \"#/components/schemas/AchPlaidFeature\"\n          type: object\n        filters:\n          description: \u003e\n            For the method to be applicable any of the following filters should\n            match.\n\n            If no filters sent – no restrictions applied. This follows our standard filter format.\n          items:\n            type: string\n          type: array\n        method:\n          description: The payment method.\n          enum:\n            - ach\n          type: string\n      required:\n        - method\n      title: ACH\n      type: object\n    ReadyToPayAmount:\n      properties:\n        amount:\n          description: The amount.\n          format: double\n          type: number\n        currency:\n          $ref: \"#/components/schemas/CurrencyCode\"\n      required:\n        - currency\n        - amount\n      title: With amount\n      type: object\n    ReadyToPayGenericMethod:\n      properties:\n        filters:\n          description: \u003e\n            For the method to be applicable any of the following filters should\n            match.\n\n            If no filters sent – no restrictions applied. This follows our standard filter format.\n          items:\n            type: string\n          type: array\n        method:\n          allOf:\n            - $ref: \"#/components/schemas/AlternativePaymentMethods\"\n          description: The payment method.\n      required:\n        - method\n      title: Generic\n      type: object\n    ReadyToPayItems:\n      properties:\n        items:\n          items:\n            properties:\n              planId:\n                allOf:\n                  - $ref: \"#/components/schemas/ResourceId\"\n                description: The plan identifier string.\n              quantity:\n                description: Number of units of the product on the given plan.\n                type: integer\n            required:\n              - planId\n              - quantity\n            type: object\n          minItems: 1\n          type: array\n      required:\n        - items\n      title: With items\n      type: object\n    ReadyToPayMethods:\n      example:\n        - brands:\n            - Visa\n            - MasterCard\n          feature:\n            name: Google Pay\n          filters:\n            - brand:Visa,MasterCard;bin:!411111\n          method: payment-card\n        - feature:\n            expirationTime: 2006-01-02T15:04:05Z\n            linkToken: some-random-link_token-for-plaid\n            name: Plaid\n          method: ach\n        - brands:\n            - Visa\n          feature: null\n          filters:\n            - brand:Visa;bin:411111,444433\n          method: payment-card\n        - feature:\n            $ref: \"#/components/schemas/ReadyToPayMethods/example/2/feature\"\n          filters: []\n          method: ach\n        - filters: []\n          method: paypal\n        - filters: []\n          method: Skrill\n      items:\n        oneOf:\n          - $ref: \"#/components/schemas/ReadyToPayPaymentCardMethod\"\n          - $ref: \"#/components/schemas/ReadyToPayAchMethod\"\n          - $ref: \"#/components/schemas/ReadyToPayGenericMethod\"\n      type: array\n    ReadyToPayPaymentCardMethod:\n      properties:\n        brands:\n          description: The list of supported brands.\n          items:\n            $ref: \"#/components/schemas/PaymentCardBrand\"\n          minItems: 1\n          type: array\n        feature:\n          description: \u003e\n            The specific feature (eg. digital wallet or a processor) of this\n            method. If method doesn't have any features – will be null.\n          nullable: true\n          oneOf:\n            - $ref: \"#/components/schemas/PaymentCardDigitalWalletFeature\"\n          type: object\n        filters:\n          description: \u003e\n            For the method to be applicable any of the following filters should\n            match.\n\n            If no filters sent – no restrictions applied. This follows our standard filter format.\n          items:\n            type: string\n          type: array\n        method:\n          description: The payment method.\n          enum:\n            - payment-card\n          type: string\n      required:\n        - method\n      title: Payment Card\n      type: object\n    Realex:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                account:\n                  description: Realex Gateway account.\n                  type: string\n                merchantId:\n                  description: Realex Gateway merchant id.\n                  type: string\n                rebatePassword:\n                  description: Realex Gateway rebate password.\n                  format: password\n                  type: string\n                secretKey:\n                  description: Realex Gateway secret key.\n                  format: password\n                  type: string\n              required:\n                - merchantId\n                - secretKey\n                - rebatePassword\n                - account\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Realex Gateway config.\n    Realtime:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                clientId:\n                  description: Realtime Gateway client ID.\n                  type: string\n                secretWord:\n                  description: Realtime Gateway secret word.\n                  format: password\n                  type: string\n              required:\n                - clientId\n                - secretWord\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Realtime Gateway config.\n    RecalculateInvoiceLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - recalculateInvoice\n          type: string\n      required:\n        - rel\n      type: object\n    RecentInvoiceEmbed:\n      description: Recent Invoice object.\n      properties:\n        recentInvoice:\n          $ref: \"#/components/schemas/Invoice\"\n      readOnly: true\n      type: object\n    RecentInvoiceLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - recentInvoice\n          type: string\n      required:\n        - rel\n      type: object\n    RedemptionRestriction:\n      description: Redemption restrictions.\n      discriminator:\n        mapping:\n          discounts-per-redemption: \"#/components/schemas/discounts-per-redemption\"\n          minimum-order-amount: \"#/components/schemas/minimum-order-amount\"\n          paid-by-time: \"#/components/schemas/paid-by-time\"\n          restrict-to-invoices: \"#/components/schemas/restrict-to-invoices\"\n          restrict-to-plans: \"#/components/schemas/restrict-to-plans\"\n          restrict-to-products: \"#/components/schemas/restrict-to-products\"\n          restrict-to-subscriptions: \"#/components/schemas/restrict-to-subscriptions\"\n        propertyName: type\n      properties:\n        type:\n          description: Redemption's additional restriction type.\n          enum:\n            - discounts-per-redemption\n            - minimum-order-amount\n            - restrict-to-invoices\n            - restrict-to-plans\n            - restrict-to-subscriptions\n            - restrict-to-products\n            - paid-by-time\n          type: string\n      required:\n        - type\n      type: object\n    Redsys:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                merchantCode:\n                  description: Redsys Gateway merchant code.\n                  format: password\n                  type: string\n                secretCode:\n                  description: Redsys Gateway secret code.\n                  format: password\n                  type: string\n              required:\n                - merchantCode\n                - secretCode\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Redsys Gateway config.\n    RefundUrlLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - refundUrl\n          type: string\n      required:\n        - rel\n      type: object\n    ResetPasswordToken:\n      properties:\n        _links:\n          description: The links related to resource.\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        credentialId:\n          description: Token's credential ID.\n          readOnly: true\n          type: string\n        expiredTime:\n          description: Password expired time.\n          format: date-time\n          type: string\n        token:\n          description: The token's identifier string.\n          readOnly: true\n          type: string\n        username:\n          description: The token's username.\n          type: string\n      required:\n        - username\n        - password\n      type: object\n    ResourceCustomFields:\n      default: {}\n      description: \u003e\n        Custom Fields list as a map `{\"custom field name\": \"custom field\n        value\", ...}`. The format must follow the saved format (see Custom\n        Fields section for the formats).\n      example:\n        foo: bar\n      type: object\n    ResourceId:\n      description: The resource ID. Defaults to UUID v4.\n      example: 4f6cf35x-2c4y-483z-a0a9-158621f77a21\n      maxLength: 50\n      type: string\n    RetriedTransactionEmbed:\n      description: Parent Transaction object.\n      properties:\n        retriedTransaction:\n          $ref: \"#/components/schemas/Transaction\"\n      readOnly: true\n      type: object\n    RetriedTransactionLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - retriedTransaction\n          type: string\n      required:\n        - rel\n      type: object\n    RiskMetadata:\n      description: Risk metadata used for 3DS and risk scoring.\n      properties:\n        accuracyRadius:\n          description: Accuracy radius for specified ipAddress (kilometers).\n          readOnly: true\n          type: integer\n        browserData:\n          $ref: \"#/components/schemas/BrowserData\"\n        city:\n          description: City for specified ipAddress.\n          example: New York\n          readOnly: true\n          type: string\n        country:\n          description: Country ISO Alpha-2 code for specified ipAddress.\n          example: US\n          maxLength: 2\n          readOnly: true\n          type: string\n        deviceVelocity:\n          description: Number of transactions for this device (based on fingerprint) in\n            the last 24 hours.\n          readOnly: true\n          type: integer\n        distance:\n          description: Distance between IP Address and Billing Address geolocation\n            (kilometers).\n          readOnly: true\n          type: integer\n        fingerprint:\n          description: The fingerprint.\n          example: pIUt3xbgX3l9g3YDiLbx\n          maxLength: 50\n          type: string\n        hasMismatchedBankCountry:\n          description: True if the bank country and geo-IP address are not the same.\n          readOnly: true\n          type: boolean\n        hasMismatchedBillingAddressCountry:\n          description: True if the billing address country and geo-IP address are not the\n            same.\n          readOnly: true\n          type: boolean\n        hasMismatchedHolderName:\n          description: True if the customer's name from billing address and from\n            customer's primary address are not the same.\n          readOnly: true\n          type: boolean\n        hasMismatchedTimeZone:\n          description: True if the browser time zone and IP address associated time zone\n            are not the same.\n          readOnly: true\n          type: boolean\n        httpHeaders:\n          $ref: \"#/components/schemas/HttpHeaders\"\n        ipAddress:\n          description: The customer's IP.\n          example: 93.92.91.90\n          format: ipv4 or ipv6\n          type: string\n        isHosting:\n          description: True if customer's ip address is related to hosting.\n          readOnly: true\n          type: boolean\n        isProxy:\n          description: True if customer's ip address is related to proxy.\n          readOnly: true\n          type: boolean\n        isTor:\n          description: True if customer's ip address is related to TOR.\n          readOnly: true\n          type: boolean\n        isVpn:\n          description: True if customer's ip address is related to VPN.\n          readOnly: true\n          type: boolean\n        isp:\n          description: Internet Service Provider name, if available.\n          readOnly: true\n          type: string\n        latitude:\n          description: Latitude for specified ipAddress.\n          format: double\n          readOnly: true\n          type: number\n        longitude:\n          description: Longitude for specified ipAddress.\n          format: double\n          readOnly: true\n          type: number\n        paymentInstrumentVelocity:\n          description: Number of transactions for this payment instrument (based on\n            fingerprint) in the last 24 hours.\n          readOnly: true\n          type: integer\n        postalCode:\n          description: Postal code for specified ipAddress.\n          maxLength: 10\n          readOnly: true\n          type: string\n        region:\n          description: Region for specified ipAddress.\n          example: NY\n          readOnly: true\n          type: string\n        score:\n          description: Risk score computed per all the factors.\n          readOnly: true\n          type: integer\n        timeZone:\n          description: Time zone for specified ipAddress.\n          example: America/New_York\n          readOnly: true\n          type: string\n        vpnServiceName:\n          description: VPN service name, if available.\n          readOnly: true\n          type: string\n      title: Risk metadata\n      type: object\n    Rotessa:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Rotessa credentials object.\n              properties:\n                apiKey:\n                  description: Rotessa api key.\n                  format: password\n                  type: string\n              required:\n                - apiKey\n              type: object\n            settings:\n              description: Rotessa settings object.\n              properties:\n                delay:\n                  description: Rotessa Gateway time delay for them to process transaction.\n                  type: integer\n              required:\n                - delay\n              type: object\n          required:\n            - credentials\n            - settings\n          type: object\n      description: Rotessa config.\n    SMSVoucher:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                AppId:\n                  description: SMSVoucher AppId.\n                  type: string\n              required:\n                - AppId\n              type: object\n          required:\n            - credentials\n          type: object\n      description: SMSVoucher Gateway config.\n    Sagepay:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                M_ID:\n                  description: Sagepay Gateway merchant ID.\n                  type: string\n                M_KEY:\n                  description: Sagepay Gateway merchant key.\n                  format: password\n                  type: string\n              required:\n                - M_ID\n                - M_KEY\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Sagepay Gateway config.\n    SaltarPay:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: SaltarPay credentials object.\n              properties:\n                apiKey:\n                  description: SaltarPay API key.\n                  format: password\n                  type: string\n                secretKey:\n                  description: SaltarPay secret key.\n                  format: password\n                  type: string\n              required:\n                - apiKey\n                - secretKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: SaltarPay config.\n    SeamlessChex:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: SeamlessChex credentials object.\n              properties:\n                publicKey:\n                  description: SeamlessChex publishable key.\n                  type: string\n                secretKey:\n                  description: SeamlessChex secret key.\n                  format: password\n                  type: string\n              required:\n                - publicKey\n                - secretKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: SeamlessChex config.\n    Search:\n      properties:\n        customers:\n          description: List of returned customers.\n          items:\n            allOf:\n              - $ref: \"#/components/schemas/Customer\"\n          readOnly: true\n          type: array\n        invoices:\n          description: List of returned invoices.\n          items:\n            allOf:\n              - $ref: \"#/components/schemas/Invoice\"\n          readOnly: true\n          type: array\n        orders:\n          description: List of returned orders.\n          items:\n            allOf:\n              - $ref: \"#/components/schemas/Subscription\"\n          readOnly: true\n          type: array\n        searched:\n          description: Names of searched resources, even if they returned nothing.\n          items:\n            type: string\n          readOnly: true\n          type: array\n        transactions:\n          description: List of returned transactions.\n          items:\n            allOf:\n              - $ref: \"#/components/schemas/Transaction\"\n          readOnly: true\n          type: array\n      type: object\n    SecureTrading:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: SecureTrading credentials object.\n              properties:\n                password:\n                  description: SecureTrading web service password.\n                  format: password\n                  type: string\n                username:\n                  description: SecureTrading web service username.\n                  type: string\n                websiteId:\n                  description: Website ID.\n                  type: string\n              required:\n                - websiteId\n                - username\n                - password\n              type: object\n            threeDSecureServer:\n              $ref: \"#/components/schemas/SecureTrading3dsServers\"\n          required:\n            - credentials\n          type: object\n      description: SecureTrading config.\n    SecureTrading3dsServer:\n      allOf:\n        - $ref: \"#/components/schemas/SecureTrading3dsServers\"\n      description: SecureTrading 3DS Server.\n    SecureTrading3dsServers:\n      description: SecureTrading 3DS Servers.\n      discriminator:\n        mapping:\n          SecureTrading3dsServer: \"#/components/schemas/SecureTrading3dsServer\"\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/ThreeDSecureServerName\"\n          enum:\n            - SecureTrading3dsServer\n      required:\n        - name\n      type: object\n    SecurionPay:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: SecurionPay credentials object.\n              properties:\n                secretApiKey:\n                  format: password\n                  type: string\n              required:\n                - secretApiKey\n              type: object\n            threeDSecureServer:\n              $ref: \"#/components/schemas/SecurionPay3dsServers\"\n          required:\n            - credentials\n          type: object\n      description: SecurionPay config.\n    SecurionPay3dsServers:\n      description: SecurionPay 3DS Servers.\n      discriminator:\n        mapping:\n          ThreeDSecureIO3dsServer: \"#/components/schemas/ThreeDSecureIO3dsServer\"\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/ThreeDSecureServerName\"\n          enum:\n            - ThreeDSecureIO3dsServer\n      required:\n        - name\n      type: object\n    SelfLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - self\n          type: string\n      required:\n        - rel\n      type: object\n    ServerTimestamp:\n      description: Read-only timestamp, automatically assigned on back-end.\n      format: date-time\n      readOnly: true\n      type: string\n    ServicePeriodAnchorInstruction:\n      default:\n        method: immediately\n      description: \u003e\n        Instruction for calculating the service period anchor.\n\n        This is used in conjunction with the **subscription start** to calculate the time the service period starts and ends.\n      discriminator:\n        mapping:\n          day-of-month: \"#/components/schemas/day-of-month\"\n          day-of-week: \"#/components/schemas/day-of-week\"\n          immediately: \"#/components/schemas/immediately\"\n        propertyName: method\n      properties:\n        method:\n          default: immediately\n          enum:\n            - immediately\n            - day-of-month\n            - day-of-week\n          type: string\n      required:\n        - method\n      type: object\n    ShippingZone:\n      properties:\n        _links:\n          description: The links related to resource.\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        countries:\n          description: \u003e\n            Countries covered by the shipping zone. A country can only belong\n            to one shipping zone (no overlapping).\n\n            This property can be empty or null to create a default shipping zone for countries that were not specified in other zones.\n          items:\n            description: Country ISO Alpha-2 code.\n            pattern: ^[A-Z]{2}$\n            type: string\n          type: array\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The shipping zone created time.\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The shipping zone identifier string.\n          readOnly: true\n        isDefault:\n          description: Is this Shipping Zone default.\n          readOnly: true\n        name:\n          description: The shipping zone name.\n          maxLength: 255\n          type: string\n        rates:\n          description: Price-based shipping rate instructions.\n          items:\n            allOf:\n              - $ref: \"#/components/schemas/PriceBasedShippingRate\"\n            description: Price based shipping rate instruction.\n          type: array\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The shipping zone updated time.\n      required:\n        - name\n      type: object\n    SignedLinkLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - signedLink\n          type: string\n      required:\n        - rel\n      type: object\n    Skrill:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Skrill credentials object.\n              properties:\n                accountEmail:\n                  description: Email address of your Skrill merchant account.\n                  type: string\n                mqiPassword:\n                  description: Password used during MQI/API requests.\n                  format: password\n                  type: string\n                secretWord:\n                  description: Secret word used for MD5 signature verifications.\n                  format: password\n                  type: string\n              required:\n                - accountEmail\n                - secretWord\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Skrill config.\n    SmartInvoice:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: SmartInvoice credentials object.\n              properties:\n                applicationId:\n                  description: SmartInvoice application UID.\n                  format: password\n                  type: string\n                merchantId:\n                  description: SmartInvoice merchant account UID.\n                  type: string\n              required:\n                - merchantId\n                - applicationId\n              type: object\n            threeDSecureServer:\n              $ref: \"#/components/schemas/SmartInvoice3dsServers\"\n          required:\n            - credentials\n          type: object\n      description: SmartInvoice config.\n    SmartInvoice3dsServer:\n      allOf:\n        - $ref: \"#/components/schemas/SmartInvoice3dsServers\"\n      description: SmartInvoice Integrated.\n    SmartInvoice3dsServers:\n      description: SmartInvoice 3DS Servers.\n      discriminator:\n        mapping:\n          SmartInvoice3dsServer: \"#/components/schemas/SmartInvoice3dsServer\"\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/ThreeDSecureServerName\"\n          enum:\n            - SmartInvoice3dsServer\n      required:\n        - name\n      type: object\n    Sofort:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Sofort credentials object.\n              properties:\n                configKey:\n                  description: Sofort configuration key.\n                  format: password\n                  type: string\n                nuaPayAccountId:\n                  description: NuaPay account ID for reconciliation.\n                  type: string\n                nuaPayApiKey:\n                  description: NuaPay API Key for reconciliation.\n                  format: password\n                  type: string\n              required:\n                - configKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Sofort config.\n    SparkPay:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: SparkPay credentials object.\n              properties:\n                secretKey:\n                  description: SparkPay secret key.\n                  format: password\n                  type: string\n                shopId:\n                  description: SparkPay shop ID.\n                  type: string\n              required:\n                - shopId\n                - secretKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: SparkPay config.\n    StaticGateway:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - type: object\n      description: StaticGateway Gateway config.\n    StaticIpnLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - staticIpnUrl\n          type: string\n      required:\n        - rel\n      type: object\n    Stripe:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            settings:\n              description: Stripe settings object.\n              properties:\n                enforceOffSession:\n                  default: false\n                  description: If `true`, `off_session` param will always be `true` in Stripe\n                    requests.\n                  type: boolean\n                redirectUrl:\n                  description: The URL where the user will be redirected after authorizing the\n                    account on Stripe.\n                  format: url\n                  type: string\n                usePaymentIntents:\n                  default: false\n                  description: If `true` the `PaymentIntents` API will be used instead of\n                    `Charges` API.\n                  type: boolean\n              required:\n                - redirectUrl\n              type: object\n            threeDSecureServer:\n              $ref: \"#/components/schemas/Stripe3dsServers\"\n          required:\n            - settings\n          type: object\n      description: Stripe Gateway config.\n    Stripe3dsServer:\n      allOf:\n        - $ref: \"#/components/schemas/Stripe3dsServers\"\n        - properties:\n            enforceThreeDSecure:\n              description: \u003e\n                If true, Stripe will attempt to perform 3D Secure\n\n                and overrides any [dynamic 3D Secure Radar rules](https://stripe.com/docs/radar/rules#request-3ds).\n              type: boolean\n          type: object\n      description: Stripe Integrated.\n    Stripe3dsServers:\n      description: Stripe 3DS Servers.\n      discriminator:\n        mapping:\n          Stripe3dsServer: \"#/components/schemas/Stripe3dsServer\"\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/ThreeDSecureServerName\"\n          enum:\n            - Stripe3dsServer\n      type: object\n    Subscription:\n      discriminator:\n        mapping:\n          one-time-order: \"#/components/schemas/OneTimeOrder\"\n          subscription-order: \"#/components/schemas/SubscriptionOrder\"\n        propertyName: orderType\n      properties:\n        orderType:\n          description: |\n            Specifies the type of order, a subscription or a one-time purchase.\n          enum:\n            - subscription-order\n            - one-time-order\n          type: string\n          x-basic: true\n      type: object\n    SubscriptionCancellation:\n      properties:\n        _links:\n          description: The links related to resource.\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        appliedInvoiceId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The identifier of the invoice where the cancellation fees or\n            credits are applied.\n          readOnly: true\n        canceledBy:\n          default: customer\n          description: Who did the cancellation.\n          enum:\n            - merchant\n            - customer\n          type: string\n        canceledTime:\n          description: The cancellation time (when the status is confirmed which is by\n            default unless specified \"draft\").\n          format: date-time\n          readOnly: true\n          type: string\n        churnTime:\n          description: The time when the subscription will be deactivated.\n          format: date-time\n          type: string\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The time of resource creation (when it is posted).\n        description:\n          description: Cancel reason description in free form.\n          maxLength: 255\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Cancellation identifier.\n          readOnly: true\n        lineItemSubtotal:\n          description: Subtotal of the line items which will be added after the\n            subscription's cancellation.\n          example: 49.95\n          readOnly: true\n          type: number\n        lineItems:\n          allOf:\n            - $ref: \"#/components/schemas/UpcomingInvoiceItemCollection\"\n          description: Items to be added to the new invoice. Proration item is generated\n            and added automatically.\n        prorated:\n          default: false\n          description: \u003e\n            Defines if the customer gets a pro-rata credit for the time\n            remaining between `churnTime` and\n\n            subscription's next renewal time.\n          type: boolean\n        proratedInvoiceId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Identifier of the invoice on which the cancellation proration is\n            calculated.\n          readOnly: true\n        reason:\n          default: other\n          description: Cancellation reason.\n          enum:\n            - did-not-use\n            - did-not-want\n            - missing-features\n            - bugs-or-problems\n            - do-not-remember\n            - risk-warning\n            - contract-expired\n            - too-expensive\n            - other\n            - billing-failure\n          type: string\n        status:\n          default: confirmed\n          description: \u003e\n            \"draft\" defines that the cancellation isn't applied on an invoice\n            and subscription but\n\n            can be inspected to see the charge.\n\n            \"confirmed\" will set a subscription to be canceled when the `churnTime` is reached.\n\n            \"completed\" is a read-only status which is set by the system when the churnTime is reached.\n\n            The cancellation may not be changed or deleted when the status is \"completed\".\n          enum:\n            - draft\n            - confirmed\n            - completed\n            - revoked\n          type: string\n        subscriptionId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Identifier of the canceled subscription order.\n      required:\n        - subscriptionId\n        - churnTime\n      type: object\n    SubscriptionCancellationState:\n      properties:\n        cancelCategory:\n          description: Cancel category.\n          enum:\n            - billing-failure\n            - did-not-use\n            - did-not-want\n            - missing-features\n            - bugs-or-problems\n            - do-not-remember\n            - risk-warning\n            - contract-expired\n            - too-expensive\n            - never-started\n            - switched-plan\n            - other\n          readOnly: true\n          type: string\n        cancelDescription:\n          description: Cancel reason description in free form.\n          maxLength: 255\n          readOnly: true\n          type: string\n        canceledBy:\n          description: Canceled by.\n          enum:\n            - merchant\n            - customer\n            - rebilly\n          readOnly: true\n          type: string\n        canceledTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Subscription order canceled time.\n          x-basic: true\n          x-label: Cancellation time\n          x-sortable: true\n      type: object\n    SubscriptionChange:\n      properties:\n        effectiveTime:\n          description: The date from which the renewal time (for `reset` operations) and\n            proration calculations are made.  If omitted, it will default to the\n            current time.\n          format: date-time\n          type: string\n        items:\n          items:\n            description: A new set of items for the subscription. To remove an item, you\n              include the items array without the items you wish to remove.\n            properties:\n              plan:\n                $ref: \"#/components/schemas/FlexiblePlan\"\n              quantity:\n                description: Number of units of the product on the given plan.\n                type: integer\n            required:\n              - plan\n              - quantity\n            type: object\n          minItems: 1\n          type: array\n        keepTrial:\n          default: false\n          description: If set to true and the subscription order has an active trial, it\n            will use that trial further. Works with 'retain' renewalPolicy only.\n          type: boolean\n        preview:\n          default: false\n          description: If set to true, it will not change the subscription.  It allows for\n            a way to preview the changes that would be made to a subscription.\n          type: boolean\n        prorated:\n          description: \u003e\n            Whether or not to give a pro rata credit for the amount of time\n            remaining between the `effectiveTime` and the end of the current\n            period.\n\n            In addition, if the `renewalTime` is retained (by setting the `renewalPolicy` to `retain`), then a pro rata debit will occur as well,\n\n            for the amount between the `effectiveTime` and the `renewalTime` as a percentage of the normal period size.\n          type: boolean\n        renewalPolicy:\n          description: The value determines whether the subscription retains its current\n            `renewalTime` or resets it to a newly calculated `renewalTime`.\n          enum:\n            - reset\n            - retain\n          type: string\n      required:\n        - items\n        - renewalPolicy\n        - prorated\n      type: object\n    SubscriptionInvoice:\n      properties:\n        transactionId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: If present, applies a payment to the invoice created.  If the\n            payment is for the invoice total, it would be marked as paid.\n      type: object\n    SubscriptionLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - subscription\n          type: string\n      required:\n        - rel\n      type: object\n    SubscriptionMetadata:\n      properties:\n        _embedded:\n          description: Any embedded objects available that are requested by the `expand`\n            querystring parameter.\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/RecentInvoiceEmbed\"\n              - $ref: \"#/components/schemas/InitialInvoiceEmbed\"\n              - $ref: \"#/components/schemas/CustomerEmbed\"\n              - $ref: \"#/components/schemas/WebsiteEmbed\"\n              - $ref: \"#/components/schemas/LeadSourceEmbed\"\n          minItems: 1\n          readOnly: true\n          type: array\n        _links:\n          description: The links related to resource.\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/SelfLink\"\n              - $ref: \"#/components/schemas/CustomerLink\"\n              - $ref: \"#/components/schemas/InitialInvoiceLink\"\n              - $ref: \"#/components/schemas/RecentInvoiceLink\"\n              - $ref: \"#/components/schemas/WebsiteLink\"\n              - $ref: \"#/components/schemas/ApprovalUrlLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Order created time.\n          x-label: Creation time\n          x-sortable: true\n        customFields:\n          $ref: \"#/components/schemas/ResourceCustomFields\"\n        revision:\n          description: \u003e\n            The number of times the order data has been modified.\n\n            The revision is useful when analyzing webhook data to determine if the change takes precedence over the current representation.\n          readOnly: true\n          type: integer\n        riskMetadata:\n          allOf:\n            - $ref: \"#/components/schemas/RiskMetadata\"\n          description: Risk metadata. If null, the value would coalesce to the risk\n            metadata captured when creating the payment token.\n          example:\n            $ref: \"#/components/schemas/ReadyToPayMethods/example/2/feature\"\n          nullable: true\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Order updated time.\n          x-label: Last update time\n          x-sortable: true\n      type: object\n    SubscriptionOrder:\n      allOf:\n        - $ref: \"#/components/schemas/CommonSubscriptionOrder\"\n        - properties:\n            customerId:\n              allOf:\n                - $ref: \"#/components/schemas/ResourceId\"\n              description: The customer identifier string.\n              x-basic: true\n            renewalReminderNumber:\n              description: Number of renewal reminder events triggered.\n              readOnly: true\n              type: integer\n            renewalReminderTime:\n              allOf:\n                - $ref: \"#/components/schemas/ServerTimestamp\"\n              description: Time renewal reminder event will be triggered.\n              nullable: true\n            trialReminderNumber:\n              description: Number of renewal reminder events triggered.\n              readOnly: true\n              type: integer\n            trialReminderTime:\n              allOf:\n                - $ref: \"#/components/schemas/ServerTimestamp\"\n              description: Time renewal reminder event will be triggered.\n              nullable: true\n        - $ref: \"#/components/schemas/SubscriptionCancellationState\"\n        - $ref: \"#/components/schemas/SubscriptionMetadata\"\n      required:\n        - orderType\n        - customerId\n        - websiteId\n        - items\n      type: object\n    SubscriptionReactivation:\n      properties:\n        _links:\n          description: The links related to resource.\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        cancellationId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Identifier of the related cancellation.\n          readOnly: true\n        createdTime:\n          description: The time of resource creation (when it is posted).\n          format: date-time\n          readOnly: true\n          type: string\n        description:\n          description: Reactivation reason description in free form.\n          maxLength: 255\n          type: string\n        effectiveTime:\n          description: \u003e\n            The date from which the service period would start, unless the\n            subscription is canceled but still active.\n\n            In case the susbcription is still active, the subscription will continue the current service period.\n\n            If omitted, it will default to the current time.\n          format: date-time\n          type: string\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Reactivation identifier.\n          readOnly: true\n        renewalTime:\n          description: \u003e\n            The time of the next subscription renewal. If omitted then it is\n            computed from the effective time.\n\n            If the subscription is canceled but active it is ignored, so the next renewal will happen as scheduled.\n          format: date-time\n          type: string\n        subscriptionId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Identifier of the reactivated subscription.\n      required:\n        - subscriptionId\n      type: object\n    TWINT:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: TWINT credentials object.\n              properties:\n                cashRegisterId:\n                  description: Cash register ID.\n                  type: string\n                keyPassphrase:\n                  description: TWINT key's passphrase.\n                  format: password\n                  type: string\n                privateKey:\n                  description: TWINT private key.\n                  format: password\n                  type: string\n                  x-multiline: true\n                publicKey:\n                  description: TWINT public key.\n                  type: string\n                  x-multiline: true\n                storeUuid:\n                  description: TWINT store UUID.\n                  type: string\n              required:\n                - storeUuid\n                - cashRegisterId\n                - publicKey\n                - privateKey\n                - keyPassphrase\n              type: object\n            settings:\n              description: TWINT settings object.\n              properties:\n                cashRegisterType:\n                  description: TWINT cash register type.\n                  type: string\n              required:\n                - cashRegisterType\n              type: object\n          required:\n            - credentials\n            - settings\n          type: object\n      description: TWINT config.\n    Tag:\n      description: Tag.\n      properties:\n        _links:\n          description: The links related to resource.\n          items:\n            anyOf:\n              - $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The tag's created time.\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The tag's identifier string.\n          readOnly: true\n        name:\n          description: The tag is unique name, which is case-insensitive.\n          example: New\n          maxLength: 255\n          pattern: ^[@~\\-\\.\\w\\s]+$\n          type: string\n        updatedTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The tag's updated time.\n      required:\n        - name\n      type: object\n    TestProcessor:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            threeDSecureServer:\n              $ref: \"#/components/schemas/TestProcessor3dsServers\"\n          type: object\n      description: TestProcessor Gateway config.\n    TestProcessor3dsServer:\n      allOf:\n        - $ref: \"#/components/schemas/TestProcessor3dsServers\"\n      description: TestProcessor Integrated.\n    TestProcessor3dsServers:\n      description: TestProcessor3dsServers 3DS Servers.\n      discriminator:\n        mapping:\n          TestSandbox3dsServer: \"#/components/schemas/TestProcessor3dsServer\"\n          ThreeDSecureIO3dsServer: \"#/components/schemas/ThreeDSecureIO3dsServer\"\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/ThreeDSecureServerName\"\n          enum:\n            - TestSandbox3dsServer\n            - ThreeDSecureIO3dsServer\n      required:\n        - name\n      type: object\n    ThreeDSecure:\n      properties:\n        _links:\n          description: The links related to resource.\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        amount:\n          description: Transaction amount.\n          format: double\n          type: number\n        cavv:\n          description: The 3D Secure entry cardholder authentication verification value.\n          type: string\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: The 3D Secure entry created time.\n        currency:\n          allOf:\n            - $ref: \"#/components/schemas/CurrencyCode\"\n        customerId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Related customer ID.\n        eci:\n          description: The 3D Secure entry electronic commerce indicator.\n          type: integer\n        enrolled:\n          description: Is the cardholder enrolled in 3DSecure.\n          enum:\n            - Y\n            - N\n            - U\n          type: string\n        enrollmentEci:\n          description: The 3D Secure entry enrollment eci.\n          type: string\n        gatewayAccountId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Related gateway account ID.\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The 3D Secure entry identifier string.\n          readOnly: true\n        payerAuthResponseStatus:\n          description: The 3D Secure entry Auth Response Status.\n          enum:\n            - Y\n            - N\n            - U\n            - A\n          type: string\n        paymentCardId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Related payment card ID.\n        signatureVerification:\n          description: If signature was verified.\n          enum:\n            - Y\n            - N\n          type: string\n        websiteId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: Related Website ID.\n        xid:\n          description: The 3D Secure entry transaction Id.\n          type: string\n      required:\n        - enrolled\n        - enrollmentEci\n        - customerId\n        - gatewayAccountId\n        - paymentCardId\n        - websiteId\n        - currency\n        - amount\n      type: object\n    ThreeDSecureIO3dsServer:\n      allOf:\n        - $ref: \"#/components/schemas/WorldlineAtosFrankfurt3dsServers\"\n        - $ref: \"#/components/schemas/TestProcessor3dsServers\"\n        - $ref: \"#/components/schemas/EMS3dsServers\"\n        - properties:\n            merchantAcquirerBinMastercard:\n              description: Mastercard Acquirer BIN.\n              maxLength: 11\n              minLength: 6\n              type: string\n            merchantAcquirerBinVisa:\n              description: Visa Acquirer BIN.\n              maxLength: 11\n              minLength: 6\n              type: string\n            merchantCountry:\n              description: Merchant Country ISO Alpha-2 Code.\n              example: US\n              maxLength: 2\n              type: string\n            merchantId:\n              description: Merchant Id.\n              maxLength: 35\n              type: string\n            merchantName:\n              description: Merchant Name.\n              maxLength: 40\n              type: string\n            merchantUrl:\n              description: Merchant URL.\n              maxLength: 2048\n              type: string\n            transactionType:\n              description: |\n                01 - Goods/Service Purchase\n                03 - Check Acceptance\n                10 - Account Funding\n                11 - Quasi-Cash Transaction\n                28 - Prepaid Activation and Load\n\n                Identifies the type of transaction being authenticated.\n              enum:\n                - \"01\"\n                - \"03\"\n                - \"10\"\n                - \"11\"\n                - \"28\"\n              type: string\n            v1:\n              description: |\n                Value determines if requests can use version 1 of 3DS.\n                In case both v1 and v2 are enabled it will prefer v2.\n                If v2 is not supported for the issuer, it will coalesce to v1.\n              type: boolean\n            v2:\n              description: |\n                Value determines if requests will attempt version 2 of 3DS.\n                In case both v1 and v2 are enabled it will prefer v2.\n                If v2 is not supported for the issuer, it will coalesce to v1.\n              type: boolean\n          required:\n            - merchantId\n            - merchantName\n            - merchantAcquirerBinVisa\n            - merchantAcquirerBinMastercard\n            - merchantCountry\n            - merchantUrl\n          type: object\n      description: ThreeDSecureIO3dsServer.\n    ThreeDSecureResult:\n      properties:\n        authenticated:\n          description: 3D Secure authentication response status.\n          enum:\n            - yes\n            - no\n            - not applicable\n            - attempted\n          type: string\n        enrolled:\n          description: Is the cardholder enrolled in 3D Secure.\n          enum:\n            - yes\n            - no\n            - invalid card/timeout\n            - unavailable\n          type: string\n        flow:\n          description: 3D Secure 2 authentication flow.\n          enum:\n            - frictionless\n            - challenge\n          type: string\n        isDowngraded:\n          default: false\n          description: If 3D Secure 2 was attempted but downgraded to 3D Secure 1.\n          type: boolean\n        liability:\n          enum:\n            - protected\n            - not protected\n            - protected (attempt)\n          type: string\n        version:\n          description: 3D Secure version.\n          enum:\n            - 1.0.2\n            - 2.1.0\n            - 2.2.0\n          type: string\n      readOnly: true\n      required:\n        - enrolled\n        - authenticated\n        - liability\n        - isDowngraded\n      type: object\n    ThreeDSecureServerName:\n      description: The Merchant plug-in Name.\n      enum:\n        - Payvision3dsServer\n        - Wirecard3dsServer\n        - Ilixium3dsServer\n        - DataCash3dsServer\n        - Paysafe3dsServer\n        - Ingenico3dsServer\n        - CardinalCommerce3dsServer\n        - Paay3dsServer\n        - Panamerican3dsServer\n        - eMerchantPay3dsServer\n        - SecureTrading3dsServer\n        - Clearhaus3dsServer\n        - Other\n        - ThreeDSecureIO3dsServer\n        - WorldlineAtosFrankfurt3dsServer\n        - Piastrix3dsServer\n        - NGenius3dsServer\n        - Stripe3dsServer\n      type: string\n    TimeIso8601Extended:\n      description: Extended ISO-8601 format of time.\n      pattern: ^(([01][0-9]|2[0-3]):([0-5][0-9])(?::([0-5][0-9]))?)((?:[+-](?:0[0-9]|1[12])(?::?[0-5][0-9])?)|Z)?$\n      type: string\n    TimePluralUnit:\n      enum:\n        - seconds\n        - minutes\n        - hours\n        - days\n        - months\n        - years\n      type: string\n    TimeUnit:\n      enum:\n        - second\n        - minute\n        - hour\n        - day\n        - month\n        - year\n      type: string\n    TimelineAction:\n      discriminator:\n        mapping:\n          redemption-cancel: \"#/components/schemas/redemption-cancel\"\n          resend-email: \"#/components/schemas/resend-email\"\n          ruleset-restore: \"#/components/schemas/ruleset-restore\"\n        propertyName: action\n      properties:\n        action:\n          enum:\n            - resend-email\n            - redemption-cancel\n            - ruleset-restore\n          type: string\n      readOnly: true\n      type: object\n    TimelineExtraData:\n      description: Additional data.\n      properties:\n        actions:\n          description: Actions available to a Timeline message. Can be empty in case no\n            actions are available for a message.\n          items:\n            $ref: \"#/components/schemas/TimelineAction\"\n          minItems: 0\n          type: array\n        author:\n          description: Timeline comment author data.\n          properties:\n            userFullName:\n              type: string\n            userId:\n              type: string\n          type: object\n        links:\n          items:\n            properties:\n              placeholder:\n                example: KYC Document\n                type: string\n              resourceId:\n                $ref: \"#/components/schemas/ResourceId\"\n              resourceType:\n                enum:\n                  - kyc-document\n                  - invoice\n                  - subscription\n                  - transaction\n                  - email-message\n                  - dispute\n                  - coupon\n                type: string\n            type: object\n          type: array\n        mentions:\n          additionalProperties:\n            example:\n              \"@test@mail.com\": userId-1\n            type: string\n          type: object\n        tables:\n          items:\n            $ref: \"#/components/schemas/TimelineTable\"\n          minItems: 0\n          type: array\n      readOnly: true\n      type: object\n    TimelineTable:\n      description: Additional information about Timeline message.\n      discriminator:\n        mapping:\n          list: \"#/components/schemas/list\"\n          one-column: \"#/components/schemas/one-column\"\n          three-columns: \"#/components/schemas/three-columns\"\n          two-columns: \"#/components/schemas/two-columns\"\n        propertyName: type\n      properties:\n        footer:\n          description: Data table footer.\n          type: string\n        title:\n          description: Data table title.\n          type: string\n        type:\n          enum:\n            - list\n            - one-columns\n            - two-columns\n            - three-columns\n          type: string\n      type: object\n    ToditoCash:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: ToditoCash credentials object.\n              properties:\n                apiKey:\n                  description: ToditoCash API key.\n                  format: password\n                  type: string\n              required:\n                - apiKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: ToditoCash config.\n    Transaction:\n      allOf:\n        - $ref: \"#/components/schemas/CommonTransaction\"\n        - properties:\n            _embedded:\n              description: Any embedded objects available that are requested by the `expand`\n                querystring parameter.\n              items:\n                anyOf:\n                  - $ref: \"#/components/schemas/ParentTransactionEmbed\"\n                  - $ref: \"#/components/schemas/RetriedTransactionEmbed\"\n                  - $ref: \"#/components/schemas/GatewayAccountEmbed\"\n                  - $ref: \"#/components/schemas/CustomerEmbed\"\n                  - $ref: \"#/components/schemas/LeadSourceEmbed\"\n                  - $ref: \"#/components/schemas/WebsiteEmbed\"\n                  - $ref: \"#/components/schemas/PaymentCardEmbed\"\n                  - $ref: \"#/components/schemas/BankAccountEmbed\"\n                  - $ref: \"#/components/schemas/InvoicesEmbed\"\n              minItems: 1\n              readOnly: true\n              type: array\n            _links:\n              description: The links related to resource.\n              items:\n                anyOf:\n                  - $ref: \"#/components/schemas/SelfLink\"\n                  - $ref: \"#/components/schemas/WebsiteLink\"\n                  - $ref: \"#/components/schemas/CustomerLink\"\n                  - $ref: \"#/components/schemas/GatewayAccountLink\"\n                  - $ref: \"#/components/schemas/PaymentCardLink\"\n                  - $ref: \"#/components/schemas/ParentTransactionLink\"\n                  - $ref: \"#/components/schemas/RetriedTransactionLink\"\n                  - $ref: \"#/components/schemas/LeadSourceLink\"\n                  - $ref: \"#/components/schemas/ApprovalUrlLink\"\n                  - $ref: \"#/components/schemas/RefundUrlLink\"\n                  - $ref: \"#/components/schemas/TransactionUpdateUrlLink\"\n                  - $ref: \"#/components/schemas/DisputeLink\"\n                  - $ref: \"#/components/schemas/InvoicesLink\"\n                  - $ref: \"#/components/schemas/QueryUrlLink\"\n              minItems: 1\n              readOnly: true\n              type: array\n            acquirerName:\n              allOf:\n                - $ref: \"#/components/schemas/AcquirerName\"\n              description: Acquirer name, available only when transaction use gateway, else\n                null.\n              readOnly: true\n            arn:\n              description: The acquirer reference number.\n              example: \"74836950144358910018150\"\n              readOnly: true\n              type: string\n              x-label: ARN\n            bin:\n              description: Payment Card BIN.\n              format: bin\n              readOnly: true\n              type: string\n              x-label: BIN\n            bumpOffer:\n              description: Bump offer information. Null if hasBumpOffer is false.\n              properties:\n                language:\n                  allOf:\n                    - $ref: \"#/components/schemas/LanguageIsoCode\"\n                  description: The language of the bump offer that was displayed to user (useful\n                    for finding any translation problems).\n                order:\n                  allOf:\n                    - $ref: \"#/components/schemas/Money\"\n                  description: Initial amount and currency.\n                outcome:\n                  $ref: \"#/components/schemas/PurchaseBumpStatus\"\n                presentedOffers:\n                  allOf:\n                    - $ref: \"#/components/schemas/PurchaseBumpOfferList\"\n                  description: Offers presented to a customer.\n                selectedOffer:\n                  allOf:\n                    - $ref: \"#/components/schemas/PurchaseBumpOffer\"\n                  description: Offer selected by a customer. Null if bump offer outcome is not\n                    `selected`.\n                version:\n                  allOf:\n                    - $ref: \"#/components/schemas/PurchaseBumpSplitVersionName\"\n                  description: The name of the version that was picked (useful for measuring split\n                    tests).\n              readOnly: true\n              type: object\n            dcc:\n              description: Dynamic Currency Conversion detailed information. Null if hasDcc is\n                false.\n              properties:\n                base:\n                  allOf:\n                    - $ref: \"#/components/schemas/Money\"\n                  description: Initial amount and currency to convert from.\n                outcome:\n                  description: Dynamic Currency Conversion outcome.\n                  enum:\n                    - rejected\n                    - selected\n                    - unknown\n                  type: string\n                quote:\n                  allOf:\n                    - $ref: \"#/components/schemas/Money\"\n                  description: Suggested amount and currency to convert to.\n                usdMarkup:\n                  allOf:\n                    - $ref: \"#/components/schemas/MoneyAmount\"\n                  description: The amount of markup translated to USD.\n              readOnly: true\n              type: object\n            discrepancyTime:\n              description: The time of the most recent discrepancy on the transaction.\n              format: date-time\n              nullable: true\n              readOnly: true\n              type: string\n              x-sortable: true\n            disputeStatus:\n              description: The dispute's status, else null.\n              enum:\n                - response-needed\n                - under-review\n                - forfeited\n                - won\n                - lost\n                - unknown\n              nullable: true\n              readOnly: true\n              type: string\n            disputeTime:\n              description: Time the dispute was created, else null.\n              format: date-time\n              nullable: true\n              readOnly: true\n              type: string\n              x-sortable: true\n            gateway:\n              description: The related gateway information.\n              properties:\n                avsResponse:\n                  description: The AVS gateway's response.\n                  properties:\n                    code:\n                      description: The response code.\n                      type: string\n                    message:\n                      description: The response message.\n                      type: string\n                    originalCode:\n                      description: The raw response code.\n                      type: string\n                    originalMessage:\n                      description: The raw response message.\n                      type: string\n                  type: object\n                cvvResponse:\n                  description: The CVV gateway's response.\n                  properties:\n                    code:\n                      description: The response code.\n                      type: string\n                    message:\n                      description: The response message.\n                      type: string\n                    originalCode:\n                      description: The raw response code.\n                      type: string\n                    originalMessage:\n                      description: The raw response message.\n                      type: string\n                  type: object\n                response:\n                  description: The gateway's response.\n                  properties:\n                    code:\n                      description: The gateway's response code.\n                      type: string\n                    message:\n                      description: The gateway's response message.\n                      type: string\n                    originalCode:\n                      description: The raw, unmapped gateway's response code.\n                      type: string\n                    originalMessage:\n                      description: The raw, unmapped gateway's response message.\n                      type: string\n                    type:\n                      description: The gateway's response type.\n                      type: string\n                  type: object\n              readOnly: true\n              type: object\n            gatewayAccountId:\n              allOf:\n                - $ref: \"#/components/schemas/ResourceId\"\n              description: The transaction's Gateway Account ID.\n              readOnly: true\n            gatewayTransactionId:\n              allOf:\n                - $ref: \"#/components/schemas/ResourceId\"\n              description: The gateway's transaction ID.\n              readOnly: true\n            hadDiscrepancy:\n              description: True if the transaction has been updated due to a discrepancy with\n                its. source of truth.\n              readOnly: true\n              type: boolean\n            hasBumpOffer:\n              description: True if transaction has a Bump offer.\n              readOnly: true\n              type: boolean\n            hasDcc:\n              description: True if transaction has Dynamic Currency Conversion applied.\n              readOnly: true\n              type: boolean\n            isDisputed:\n              description: True if transaction is disputed.\n              readOnly: true\n              type: boolean\n            isMerchantInitiated:\n              description: True if the transaction was initiated by the merchant.\n              type: boolean\n            isProcessedOutside:\n              description: True if the transaction was processed outside of Rebilly.\n              type: boolean\n            isReconciled:\n              description: True if the transaction has been verified with gateway batch data.\n              readOnly: true\n              type: boolean\n            method:\n              allOf:\n                - $ref: \"#/components/schemas/PaymentMethod\"\n              deprecated: true\n              description: Payment Method. Use `paymentInstrument.method` instead.\n            notificationUrl:\n              $ref: \"#/components/schemas/TransactionNotificationUrl\"\n            orderId:\n              deprecated: true\n              description: The transaction's order ID.  This ID must be unique within a 24\n                hour period. This field was renamed to the `requestId`.\n              type: string\n              x-sortable: true\n            paymentInstrument:\n              $ref: \"#/components/schemas/PaymentInstrument\"\n            referenceData:\n              additionalProperties:\n                type: string\n              description: Transaction reference data.\n              example:\n                gatewayTransactionId: GAT123\n              nullable: true\n              readOnly: true\n              type: object\n            reportAmount:\n              description: Transaction amount converted to organization\u0026nbsp;selected report\n                currency.\n              format: double\n              readOnly: true\n              type: number\n              x-currency-field: reportCurrency\n              x-sortable: true\n              x-type: Money\n            reportCurrency:\n              allOf:\n                - $ref: \"#/components/schemas/CurrencyCode\"\n              readOnly: true\n            retriedTransactionId:\n              allOf:\n                - $ref: \"#/components/schemas/ResourceId\"\n              description: The retried transaction ID.\n              readOnly: true\n            retriesResult:\n              description: Retries sequence result.\n              enum:\n                - approved\n                - canceled\n                - declined\n                - scheduled\n              readOnly: true\n              type: string\n            retryInstruction:\n              $ref: \"#/components/schemas/PaymentRetry\"\n            revision:\n              description: \u003e\n                The number of times the transaction data has been modified.\n\n                The revision is useful when analyzing webhook data to determine if the change takes precedence over the current representation.\n              readOnly: true\n              type: integer\n            riskMetadata:\n              allOf:\n                - $ref: \"#/components/schemas/RiskMetadata\"\n              description: Risk metadata.\n            riskScore:\n              description: The transaction's risk score.\n              readOnly: true\n              type: integer\n            scheduledTime:\n              description: The time the transaction is scheduled for collection.\n              format: date-time\n              type: string\n            settlementTime:\n              description: The time that the transaction was settled by the banking\n                instuition.\n              format: date-time\n              nullable: true\n              readOnly: true\n              type: string\n              x-sortable: true\n            velocity:\n              description: The number of transactions by the same customer in the past 24\n                hours.\n              type: integer\n    TransactionAllocationsLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - transactionAllocations\n          type: string\n      required:\n        - rel\n      type: object\n    TransactionEmbed:\n      description: Transaction object.\n      properties:\n        transaction:\n          $ref: \"#/components/schemas/Transaction\"\n      readOnly: true\n      type: object\n    TransactionLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - transaction\n          type: string\n      required:\n        - rel\n      type: object\n    TransactionNotificationUrl:\n      description: \u003e\n        The URL where a server-to-server POST notification will be\n        sent.  It  will be sent when the\n\n        transaction's result is finalized after a timeout or an offsite interaction. Do not trust the\n\n        notification; follow with a GET request to confirm the result of the transaction. Please\n\n        respond with a 2xx HTTP status code, or we will reattempt the request again.\n\n        The 2 placeholders are available to use in this URI: `{id}` and `{result}`.\n      format: uri\n      type: string\n    TransactionQuery:\n      properties:\n        amount:\n          description: The transaction's amount.\n          format: double\n          readOnly: true\n          type: number\n        currency:\n          allOf:\n            - $ref: \"#/components/schemas/CurrencyCode\"\n          readOnly: true\n        result:\n          description: Transaction result.\n          enum:\n            - abandoned\n            - approved\n            - canceled\n            - declined\n            - unknown\n          readOnly: true\n          type: string\n        status:\n          description: Transaction status.\n          enum:\n            - completed\n            - conn-error\n            - disputed\n            - never-sent\n            - offsite\n            - partially-refunded\n            - pending\n            - refunded\n            - sending\n            - suspended\n            - timeout\n            - voided\n            - waiting-approval\n            - waiting-capture\n            - waiting-gateway\n            - waiting-refund\n          readOnly: true\n          type: string\n      type: object\n    TransactionRefund:\n      properties:\n        amount:\n          description: Refund amount.\n          format: double\n          type: number\n      required:\n        - amount\n      type: object\n    TransactionRequest:\n      allOf:\n        - $ref: \"#/components/schemas/CommonTransactionRequest\"\n        - required:\n            - type\n        - properties:\n            type:\n              description: \u003e\n                The type of transaction requested.\n\n                You should always include the type within your API request.\n\n                This supports a limited subset of Transaction types.  To refund or void, use the refund endpoint.\n\n                To `capture` use the `sale` type. If any existing `authorize` transactions are eligible, then they will be captured and the `sale` will be converted to a `capture` type.\n              enum:\n                - 3ds-authentication\n                - sale\n                - authorize\n              type: string\n    TransactionTimeline:\n      properties:\n        _links:\n          description: The links related to resource.\n          items:\n            $ref: \"#/components/schemas/SelfLink\"\n          minItems: 1\n          readOnly: true\n          type: array\n        extraData:\n          $ref: \"#/components/schemas/TimelineExtraData\"\n        id:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The Timeline message identifier string.\n          readOnly: true\n        message:\n          description: The message that describes the message details.\n          type: string\n        occurredTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Timeline message time.\n          readOnly: true\n        triggeredBy:\n          description: Shows who or what triggered the Timeline message.\n          enum:\n            - rebilly\n            - app\n            - direct-api\n          readOnly: true\n          type: string\n        type:\n          description: Timeline message type.\n          enum:\n            - amount-adjusted\n            - blocklist-matched\n            - bump-offer-accepted\n            - bump-offer-presented\n            - bump-offer-rejected\n            - customer-redirected-offsite\n            - customer-returned\n            - dcc-offer-accepted\n            - dcc-offer-forced\n            - dcc-offer-presented\n            - dcc-offer-rejected\n            - dispute-changed\n            - dispute-created\n            - dispute-forfeited\n            - dispute-lost\n            - dispute-responded\n            - dispute-won\n            - gateway-connection-failed\n            - gateway-connection-timed-out\n            - gateway-response-received\n            - risk-score-changed\n            - timeline-comment-created\n            - transaction-abandoned\n            - transaction-amount-discrepancy-found\n            - transaction-approved\n            - transaction-canceled\n            - transaction-capture-delayed\n            - transaction-captured\n            - transaction-declined\n            - transaction-discrepancy-found\n            - transaction-initiated\n            - transaction-reconciled\n            - transaction-refunded\n            - transaction-retried\n            - transaction-rules-processed\n            - transaction-scheduled-time-changed\n            - transaction-timeout-resolved\n            - transaction-voided\n            - transaction-waiting-gateway\n            - transaction-queried\n            - transaction-updated\n          readOnly: true\n          type: string\n      type: object\n    TransactionUpdate:\n      description: Update a Transaction manually to completed status with given result\n        with optional currency and amount.\n      properties:\n        amount:\n          description: The transaction amount.\n          format: double\n          type: number\n        currency:\n          allOf:\n            - $ref: \"#/components/schemas/CurrencyCode\"\n          description: The transaction currency.\n        result:\n          description: Transaction result.\n          enum:\n            - abandoned\n            - approved\n            - canceled\n            - declined\n          type: string\n      required:\n        - result\n      type: object\n    TransactionUpdateUrlLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - updateUrl\n          type: string\n      required:\n        - rel\n      type: object\n    TrustPay:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: TrustPay credentials object.\n              properties:\n                accessToken:\n                  format: password\n                  type: string\n                entityId:\n                  type: string\n              required:\n                - entityId\n                - accessToken\n              type: object\n          required:\n            - credentials\n          type: object\n      description: TrustPay config.\n    Trustly:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Trustly credentials object.\n              properties:\n                password:\n                  description: Trustly password.\n                  format: password\n                  type: string\n                privateKey:\n                  description: Trustly private key.\n                  format: password\n                  type: string\n                  x-multiline: true\n                publicKey:\n                  description: Trustly public key.\n                  type: string\n                  x-multiline: true\n                username:\n                  description: Trustly username.\n                  type: string\n              required:\n                - usernmae\n                - password\n                - publicKey\n                - privateKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Trustly config.\n    TrustsPay:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: TrustsPay credentials object.\n              properties:\n                gatewayNo:\n                  type: string\n                merchantNo:\n                  type: string\n                signkey:\n                  format: password\n                  type: string\n              required:\n                - merchantNo\n                - gatewayNo\n                - signkey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: TrustsPay config.\n    UPayCard:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                key:\n                  description: merchant key.\n                  format: password\n                  type: string\n                receiver_account:\n                  description: merchant receiver account.\n                  type: string\n                secret:\n                  description: merchant secret.\n                  format: password\n                  type: string\n              required:\n                - receiver_account\n                - key\n                - secret\n              type: object\n            settings:\n              description: UpayCard settings object.\n              properties:\n                tolerancePercentage:\n                  $ref: \"#/components/schemas/AmountAdjustmentTolerance\"\n              required:\n                - tolerancePercentage\n              type: object\n          required:\n            - credentials\n          type: object\n      description: UPayCard Gateway config.\n    USAePay:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                pin:\n                  description: USAePay Gateway pin.\n                  format: password\n                  type: string\n                sourceKey:\n                  description: USAePay Gateway source key.\n                  format: password\n                  type: string\n              required:\n                - sourceKey\n                - pin\n              type: object\n          required:\n            - credentials\n          type: object\n      description: USAePay Gateway config.\n    UpcomingInvoiceItem:\n      description: Line item.\n      properties:\n        createdTime:\n          allOf:\n            - $ref: \"#/components/schemas/ServerTimestamp\"\n          description: Date-time when the item was added to the subscription.\n        description:\n          description: Description of line item.\n          type: string\n        periodEndTime:\n          description: Date-time when the period ends for this item.\n          format: date-time\n          type: string\n        periodStartTime:\n          description: Date-time when the period begins for this item.\n          format: date-time\n          type: string\n        quantity:\n          description: Quantity of line item.\n          example: 1\n          type: integer\n        type:\n          description: Type of line item.\n          enum:\n            - debit\n            - credit\n          type: string\n        unitPriceAmount:\n          description: Unit price of the line item.\n          example: 49.95\n          format: double\n          type: number\n        unitPriceCurrency:\n          allOf:\n            - $ref: \"#/components/schemas/CurrencyCode\"\n      required:\n        - type\n        - unitPriceAmount\n        - unitPriceCurrency\n        - quantity\n      type: object\n    UpcomingInvoiceItemCollection:\n      items:\n        $ref: \"#/components/schemas/UpcomingInvoiceItem\"\n      type: array\n    VCreditos:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: VCreditos credentials object.\n              properties:\n                publicKey:\n                  description: VCreditos API public key.\n                  type: string\n                secretKey:\n                  description: VCreditos API secret key.\n                  format: password\n                  type: string\n              required:\n                - publicKey\n                - secretKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: VCreditos config.\n    ValidationErrorExtensions:\n      properties:\n        invalidFields:\n          example:\n            - field: field1\n              message: field1 is invalid\n            - field: subObject.field2\n              message: field2 is invalid\n            - field: subObject.field2\n              message: another error in the field2\n          items:\n            properties:\n              field:\n                description: The field name. Dot notation is used for nested object field names.\n                type: string\n              message:\n                type: string\n            type: object\n          type: array\n      type: object\n    VantivLitle:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                merchantId:\n                  description: VantivLitle Gateway merchant ID.\n                  type: string\n                password:\n                  description: VantivLitle Gateway password.\n                  format: password\n                  type: string\n                username:\n                  description: VantivLitle Gateway username.\n                  type: string\n              required:\n                - username\n                - password\n                - merchantId\n              type: object\n            threeDSecureServer:\n              $ref: \"#/components/schemas/VantivLitle3dsServers\"\n          required:\n            - credentials\n          type: object\n      description: VantivLitle Gateway config.\n    VantivLitle3dsServers:\n      description: VantivLitle 3DS Servers.\n      discriminator:\n        mapping:\n          Other: \"#/components/schemas/Other\"\n          Paay3dsServer: \"#/components/schemas/Paay3dsServer\"\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/ThreeDSecureServerName\"\n          enum:\n            - Paay3dsServer\n            - Other\n      required:\n        - name\n      type: object\n    VaultedInstrument:\n      description: Vaulted payment instrument.\n      properties:\n        method:\n          allOf:\n            - $ref: \"#/components/schemas/PaymentMethod\"\n          description: \u003e\n            The payment method supported vault.\n\n            See [Payment Instruments API](https://api-reference.rebilly.com/tag/Payment-Instruments).\n          enum:\n            - payment-card\n            - ach\n            - paypal\n          type: string\n        paymentInstrumentId:\n          allOf:\n            - $ref: \"#/components/schemas/ResourceId\"\n          description: The payment instrument identifier.\n      required:\n        - method\n        - paymentInstrumentId\n      title: Vaulted instrument\n    Wallet88:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Wallet88 credentials object.\n              properties:\n                password:\n                  description: Wallet88 API password.\n                  format: password\n                  type: string\n                username:\n                  description: Wallet88 API user.\n                  type: string\n              required:\n                - username\n                - password\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Wallet88 config.\n    Walpay:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                merchantName:\n                  description: Walpay Gateway merchant name.\n                  type: string\n                merchantPin:\n                  description: Walpay Gateway merchant pin.\n                  format: password\n                  type: string\n              required:\n                - merchantName\n                - merchantPin\n              type: object\n            threeDSecureServer:\n              $ref: \"#/components/schemas/Walpay3dsServers\"\n          required:\n            - credentials\n          type: object\n      description: Walpay Gateway config.\n    Walpay3dsServers:\n      description: Walpay 3DS Servers.\n      discriminator:\n        mapping:\n          Other: \"#/components/schemas/Other\"\n          Paay3dsServer: \"#/components/schemas/Paay3dsServer\"\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/ThreeDSecureServerName\"\n          enum:\n            - Paay3dsServer\n            - Other\n      required:\n        - name\n      type: object\n    WebsiteEmbed:\n      description: Website object.\n      properties:\n        website:\n          type: object\n      readOnly: true\n      type: object\n    WebsiteLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n      properties:\n        rel:\n          description: The link type.\n          enum:\n            - website\n          type: string\n      required:\n        - rel\n      type: object\n    Wirecard:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                businessSignature:\n                  description: Wirecard Gateway merchant business case signature.\n                  format: password\n                  type: string\n                delay:\n                  description: Wirecard Gateway delay.\n                  type: integer\n                merchantPassword:\n                  description: Wirecard Gateway merchant password.\n                  format: password\n                  type: string\n                merchantUsername:\n                  description: Wirecard Gateway merchant username.\n                  type: string\n                sftpPrivateKey:\n                  description: Wirecard sftp private key.\n                  format: password\n                  type: string\n                  x-multiline: true\n                sftpUsername:\n                  description: Wirecard sftp username.\n                  type: string\n              required:\n                - merchantUsername\n                - merchantPassword\n                - businessSignature\n                - delay\n              type: object\n            threeDSecureServer:\n              $ref: \"#/components/schemas/Wirecard3dsServers\"\n          required:\n            - credentials\n          type: object\n      description: Wirecard Gateway config.\n    Wirecard3dsServer:\n      allOf:\n        - $ref: \"#/components/schemas/Wirecard3dsServers\"\n      description: Wirecard Integrated.\n    Wirecard3dsServers:\n      description: Wirecard 3DS Servers.\n      discriminator:\n        mapping:\n          Wirecard3dsServer: \"#/components/schemas/Wirecard3dsServer\"\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/ThreeDSecureServerName\"\n          enum:\n            - Wirecard3dsServer\n      required:\n        - name\n      type: object\n    WorldlineAtosFrankfurt:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: WorldlineAtosFrankfurt credentials.\n              properties:\n                acquiringInstitutionIdentificationCode:\n                  description: Acquiring Institution Identification Code.\n                  type: string\n                cardAcceptorIdCode:\n                  description: Card Acceptor ID Code.\n                  type: string\n              required:\n                - cardAcceptorIdCode\n                - acquiringInstitutionIdentificationCode\n              type: object\n            settings:\n              description: WorldlineAtosFrankfurt settings.\n              properties:\n                cardAcceptorCountryCode:\n                  description: Card Acceptor Country Code.\n                  type: string\n                cardAcceptorLocation:\n                  description: Card Acceptor Location.\n                  type: string\n                cardAcceptorName:\n                  description: Card Acceptor Name.\n                  type: string\n              required:\n                - cardAcceptorName\n                - cardAcceptorLocation\n                - cardAcceptorCountryCode\n              type: object\n            threeDSecureServer:\n              $ref: \"#/components/schemas/WorldlineAtosFrankfurt3dsServers\"\n          required:\n            - credentials\n            - settings\n          type: object\n      description: WorldlineAtosFrankfurt Gateway config.\n    WorldlineAtosFrankfurt3dsServers:\n      description: WorldlineAtosFrankfurt 3DS Servers.\n      discriminator:\n        mapping:\n          ThreeDSecureIO3dsServer: \"#/components/schemas/ThreeDSecureIO3dsServer\"\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/ThreeDSecureServerName\"\n          enum:\n            - ThreeDSecureIO3dsServer\n      required:\n        - name\n      type: object\n    Worldpay:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                merchantCode:\n                  description: Worldpay Gateway merchant code.\n                  format: password\n                  type: string\n                merchantPassword:\n                  description: Worldpay Gateway merchant password.\n                  format: password\n                  type: string\n                payoutMerchantCode:\n                  description: Optional alternate merchant code for payouts.\n                  format: password\n                  type: string\n                payoutMerchantPassword:\n                  description: Optional alternate merchant password for payouts.\n                  format: password\n                  type: string\n              required:\n                - merchantCode\n                - merchantPassword\n              type: object\n            settings:\n              properties:\n                delay:\n                  default: 0\n                  description: Auto Capture delay (in hours).\n                  minimum: 0\n                  type: integer\n                enableStoredCredentials:\n                  default: false\n                  description: True to enable Stored Credentials.\n                  type: boolean\n                merchantInitiatedReason:\n                  default: UNSCHEDULED\n                  description: The value of merchantInitiatedReason to send with\n                    merchant-initiated transactions.\n                  enum:\n                    - UNSCHEDULED\n                    - RECURRING\n                    - INSTALMENT\n                    - REAUTH\n                    - DELAYED\n                    - INCREMENTAL\n                    - RESUBMISSION\n                    - NOSHOW\n                  type: string\n              type: object\n            threeDSecureServer:\n              $ref: \"#/components/schemas/Worldpay3dsServers\"\n          required:\n            - credentials\n          type: object\n      description: Worldpay Gateway config.\n    Worldpay3dsServers:\n      description: Worldpay 3DS Servers.\n      discriminator:\n        mapping:\n          Other: \"#/components/schemas/Other\"\n          Paay3dsServer: \"#/components/schemas/Paay3dsServer\"\n          ThreeDSecureIO3dsServer: \"#/components/schemas/ThreeDSecureIO3dsServer\"\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/ThreeDSecureServerName\"\n          enum:\n            - Paay3dsServer\n            - ThreeDSecureIO3dsServer\n            - Other\n      required:\n        - name\n      type: object\n    XPay:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: XPay credentials object.\n              properties:\n                encryptionKey:\n                  format: password\n                  type: string\n                merchantId:\n                  type: string\n              required:\n                - merchantId\n                - encryptionKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: XPay config.\n    Zimpler:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: Zimpler credentials object.\n              properties:\n                apiKey:\n                  description: Zimpler API key.\n                  format: password\n                  type: string\n                merchantId:\n                  description: Zimpler merchant id.\n                  type: string\n              required:\n                - merchantId\n                - apiKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Zimpler config.\n    Zotapay:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                endpointId:\n                  description: Zotapay's endpoint ID.\n                  type: string\n                merchantId:\n                  description: Zotapay's merchant ID.\n                  type: string\n                merchantSecretKey:\n                  description: Zotapay's merchant secret key.\n                  format: password\n                  type: string\n              required:\n                - endpointId\n                - merchantId\n                - merchantSecretKey\n              type: object\n          required:\n            - credentials\n          type: object\n      description: Zotapay Gateway config.\n    auto:\n      allOf:\n        - $ref: \"#/components/schemas/CommonScheduleInstruction\"\n    dLocal:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                secretKey:\n                  format: password\n                  type: string\n                xLogin:\n                  type: string\n                xTransKey:\n                  type: string\n              required:\n                - xLogin\n                - xTransKey\n                - secretKey\n              type: object\n            settings:\n              description: dLocal settings object.\n              properties:\n                createInstallmentPlan:\n                  default: false\n                  description: Create installment plan and use it for payment.\n                  type: boolean\n              type: object\n          required:\n            - credentials\n          type: object\n      description: dLocal config.\n    date-interval:\n      allOf:\n        - $ref: \"#/components/schemas/CommonScheduleInstruction\"\n        - $ref: \"#/components/schemas/CustomEventScheduleInstruction\"\n        - $ref: \"#/components/schemas/InvoiceRetryScheduleInstruction\"\n        - properties:\n            duration:\n              description: The number of the units.\n              minimum: 1\n              type: integer\n            unit:\n              oneOf:\n                - $ref: \"#/components/schemas/TimeUnit\"\n                - $ref: \"#/components/schemas/TimePluralUnit\"\n          required:\n            - duration\n            - unit\n          type: object\n    day-of-month:\n      allOf:\n        - $ref: \"#/components/schemas/CommonScheduleInstruction\"\n        - $ref: \"#/components/schemas/CustomEventScheduleInstruction\"\n        - $ref: \"#/components/schemas/ServicePeriodAnchorInstruction\"\n        - $ref: \"#/components/schemas/InvoiceRetryScheduleInstruction\"\n        - properties:\n            day:\n              description: |\n                The day of the month when event will be scheduled.\n                Be aware if the month has less days,\n                the last day of the month will be selected.\n              maximum: 31\n              minimum: 1\n              type: integer\n            time:\n              $ref: \"#/components/schemas/TimeIso8601Extended\"\n          required:\n            - day\n          type: object\n    day-of-week:\n      allOf:\n        - $ref: \"#/components/schemas/CommonScheduleInstruction\"\n        - $ref: \"#/components/schemas/CustomEventScheduleInstruction\"\n        - $ref: \"#/components/schemas/ServicePeriodAnchorInstruction\"\n        - $ref: \"#/components/schemas/InvoiceRetryScheduleInstruction\"\n        - properties:\n            day:\n              $ref: \"#/components/schemas/DayOfWeekLong\"\n            time:\n              $ref: \"#/components/schemas/TimeIso8601Extended\"\n            week:\n              default: next\n              enum:\n                - next\n                - first-in-month\n                - last-in-month\n              type: string\n          required:\n            - day\n          type: object\n    discount:\n      allOf:\n        - $ref: \"#/components/schemas/AmountAdjustment\"\n        - properties:\n            type:\n              description: The payment amount discount type.\n              enum:\n                - percent\n                - fixed\n              type: string\n            value:\n              description: The payment amount discount.\n              format: float\n              type: number\n          required:\n            - value\n            - type\n          type: object\n    discounts-per-redemption:\n      allOf:\n        - $ref: \"#/components/schemas/CouponRestriction\"\n        - $ref: \"#/components/schemas/RedemptionRestriction\"\n        - properties:\n            quantity:\n              description: Restriction quantity.\n              type: integer\n          required:\n            - quantity\n          type: object\n      description: discounts-per-redemption restrictions.\n    eMerchantPay:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                apiKey:\n                  description: eMerchantPay Gateway api key.\n                  format: password\n                  type: string\n                clientId:\n                  description: eMerchantPay Gateway client ID.\n                  type: string\n                password:\n                  description: eMerchantPay password for Genesis platform.\n                  format: password\n                  type: string\n                token:\n                  description: eMerchantPay token for Genesis platform.\n                  type: string\n                username:\n                  description: eMerchantPay username for Genesis platform.\n                  type: string\n              type: object\n            settings:\n              description: eMerchantPay settings object.\n              properties:\n                platform:\n                  default: IPG\n                  description: eMerchantPay platform to process payment.\n                  enum:\n                    - IPG\n                    - Genesis\n                  type: string\n              type: object\n            threeDSecureServer:\n              $ref: \"#/components/schemas/eMerchantPay3dsServers\"\n          required:\n            - credentials\n          type: object\n      description: eMerchantPay Gateway config.\n    eMerchantPay3dsServer:\n      allOf:\n        - $ref: \"#/components/schemas/eMerchantPay3dsServers\"\n      description: eMerchantPay 3DS Server.\n    eMerchantPay3dsServers:\n      description: eMerchantPay 3DS Servers.\n      discriminator:\n        mapping:\n          Other: \"#/components/schemas/Other\"\n          Paay3dsServer: \"#/components/schemas/Paay3dsServer\"\n          ThreeDSecureIO3dsServer: \"#/components/schemas/ThreeDSecureIO3dsServer\"\n          eMerchantPay3dsServer: \"#/components/schemas/eMerchantPay3dsServer\"\n        propertyName: name\n      properties:\n        name:\n          allOf:\n            - $ref: \"#/components/schemas/ThreeDSecureServerName\"\n          enum:\n            - eMerchantPay3dsServer\n            - ThreeDSecureIO3dsServer\n            - Paay3dsServer\n            - Other\n      required:\n        - name\n      type: object\n    eZeeWallet:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: eZeeWallet credentials object.\n              properties:\n                apiPassword:\n                  description: eZeeWallet API password.\n                  format: password\n                  type: string\n                apiUsername:\n                  description: eZeeWallet API username.\n                  format: password\n                  type: string\n              required:\n                - apiUsername\n                - apiPassword\n              type: object\n          required:\n            - credentials\n          type: object\n      description: eZeeWallet config.\n    ecoPayz:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: ecoPayz credentials object.\n              properties:\n                merchantAccountNumber:\n                  description: ecoPayz merchant account number.\n                  type: string\n                merchantPassword:\n                  description: ecoPayz merchant password.\n                  format: password\n                  type: string\n                paymentPageId:\n                  description: ecoPayz payment page ID.\n                  type: string\n              required:\n                - paymentPageId\n                - merchantAccountNumber\n                - merchantPassword\n              type: object\n            settings:\n              description: ecoPayz settings object.\n              properties:\n                validCurrency:\n                  description: Three letter currency code.\n                  enum:\n                    - CAD\n                    - EUR\n                    - GBP\n                    - USD\n                  type: string\n              required:\n                - validCurrency\n              type: object\n          required:\n            - credentials\n          type: object\n      description: ecoPayz config.\n    ezyEFT:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: ezyEFT credentials object.\n              properties:\n                merchantId:\n                  type: string\n                merchantToken:\n                  format: password\n                  type: string\n              required:\n                - merchantId\n                - merchantToken\n              type: object\n          required:\n            - credentials\n          type: object\n      description: ezyEFT config.\n    fixed:\n      allOf:\n        - $ref: \"#/components/schemas/Discount\"\n        - properties:\n            amount:\n              description: Discount amount.\n              exclusiveMinimum: true\n              format: double\n              minimum: 0\n              type: number\n            currency:\n              allOf:\n                - $ref: \"#/components/schemas/CurrencyCode\"\n          required:\n            - amount\n            - currency\n          type: object\n      description: Coupon fixed amount discount.\n    fixed-fee:\n      allOf:\n        - $ref: \"#/components/schemas/PlanPriceFormula\"\n        - properties:\n            price:\n              description: \u003e\n                For the very simple price when it's fixed and does not depend on\n                the quantity chosen by customer.\n\n\n                If the price is 0, it's free.\n              example: 99.95\n              format: double\n              type: number\n          required:\n            - price\n          type: object\n    flat-rate:\n      allOf:\n        - $ref: \"#/components/schemas/PlanPriceFormula\"\n        - properties:\n            maxQuantity:\n              description: If the value is `null`, it''s assumed to be infinite.\n              example: 1\n              type: integer\n            price:\n              description: |\n                Flat-rate pricing is represented in a simple price per unit.\n                Some examples:\n\n                - $30 per unit\n                - $0.10 per transaction\n                - $50 per period\n\n                If the price is 0, it's free.\n              example: 99.95\n              format: double\n              type: number\n          required:\n            - price\n          type: object\n    iCanPay:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                authenticateId:\n                  description: iCanPay Gateway authenticate ID.\n                  type: string\n                authenticatePw:\n                  description: iCanPay Gateway authenticate password.\n                  format: password\n                  type: string\n                publicKey:\n                  description: iCanPay Gateway API public key.\n                  type: string\n                secretKey:\n                  description: iCanPay Gateway API secret key.\n                  format: password\n                  type: string\n              required:\n                - authenticateId\n                - authenticatePw\n                - publicKey\n                - secretKey\n              type: object\n            settings:\n              properties:\n                use3DSEndpoint:\n                  description: Use 3DS endpoint.\n                  type: boolean\n              type: object\n          required:\n            - credentials\n          type: object\n      description: iCanPay Gateway config.\n    iCheque:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                apiSecurityToken:\n                  description: Hash of the password for the Alliance API (transaction reporting).\n                  format: password\n                  type: string\n                apiUserId:\n                  description: Username for the Alliance API (transaction reporting).\n                  type: string\n                clientId:\n                  description: iCheque Gateway client ID.\n                  type: string\n                secretWord:\n                  description: iCheque Gateway secret word.\n                  format: password\n                  type: string\n              required:\n                - clientId\n                - secretWord\n              type: object\n          required:\n            - credentials\n          type: object\n      description: iCheque Gateway config.\n    iDebit:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: iDebit credentials object.\n              properties:\n                merchantId:\n                  description: iDebit merchant account number.\n                  type: string\n                password:\n                  description: iDebit merchant account password.\n                  format: password\n                  type: string\n              required:\n                - merchantId\n                - password\n              type: object\n          required:\n            - credentials\n          type: object\n      description: iDebit config.\n    immediately:\n      allOf:\n        - $ref: \"#/components/schemas/CommonScheduleInstruction\"\n        - $ref: \"#/components/schemas/ServicePeriodAnchorInstruction\"\n        - $ref: \"#/components/schemas/InvoiceRetryScheduleInstruction\"\n    intelligent:\n      allOf:\n        - $ref: \"#/components/schemas/CommonScheduleInstruction\"\n        - $ref: \"#/components/schemas/CustomEventScheduleInstruction\"\n        - $ref: \"#/components/schemas/InvoiceRetryScheduleInstruction\"\n        - properties:\n            duration:\n              description: The number of the units.\n              minimum: 1\n              type: integer\n            unit:\n              oneOf:\n                - $ref: \"#/components/schemas/TimeUnit\"\n                - $ref: \"#/components/schemas/TimePluralUnit\"\n          required:\n            - duration\n            - unit\n          type: object\n    list:\n      allOf:\n        - $ref: \"#/components/schemas/TimelineTable\"\n        - properties:\n            data:\n              description: Table data. Each array element represents a line.\n              items:\n                type: string\n              type: array\n          type: object\n    loonie:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              description: loonie credentials object.\n              properties:\n                merchantId:\n                  type: string\n                merchantToken:\n                  format: password\n                  type: string\n              required:\n                - merchantId\n                - merchantToken\n              type: object\n          required:\n            - credentials\n          type: object\n      description: loonie config.\n    manual:\n      allOf:\n        - $ref: \"#/components/schemas/InvoiceShipping\"\n        - properties:\n            amount:\n              description: The invoice's shipping amount.\n              type: integer\n              x-type: Money\n          required:\n            - amount\n          type: object\n      description: Manually set shipping amount.\n    manual-2:\n      allOf:\n        - $ref: \"#/components/schemas/InvoiceTax\"\n        - properties:\n            items:\n              description: Taxes applied to this invoice.\n              items:\n                allOf:\n                  - $ref: \"#/components/schemas/InvoiceTaxItem\"\n              type: array\n          required:\n            - amount\n          type: object\n      description: Manually set tax items.\n    minimum-order-amount:\n      allOf:\n        - $ref: \"#/components/schemas/CouponRestriction\"\n        - $ref: \"#/components/schemas/RedemptionRestriction\"\n        - properties:\n            amount:\n              description: Minimum order quantity.\n              type: integer\n            currency:\n              allOf:\n                - $ref: \"#/components/schemas/CurrencyCode\"\n          required:\n            - amount\n            - currency\n          type: object\n      description: minimum-order-amount restrictions.\n    one-column:\n      allOf:\n        - $ref: \"#/components/schemas/TimelineTable\"\n        - properties:\n            data:\n              description: Table data. Each array element represents a table row.\n              items:\n                example:\n                  attribute: Who\n                  value: John Doe\n                properties:\n                  attribute:\n                    type: string\n                  value:\n                    type: string\n                type: object\n              type: array\n          type: object\n    paid-by-time:\n      allOf:\n        - $ref: \"#/components/schemas/CouponRestriction\"\n        - $ref: \"#/components/schemas/RedemptionRestriction\"\n        - properties:\n            time:\n              description: The time when the coupon's redemption is no longer valid and\n                removed from unpaid invoices if applied. Note that this datetime\n                cannot be changed.\n              format: date-time\n              type: string\n          required:\n            - time\n          type: object\n      description: paid-by-time restrictions.\n    partial:\n      allOf:\n        - $ref: \"#/components/schemas/AmountAdjustment\"\n        - properties:\n            type:\n              description: The payment amount type.\n              enum:\n                - percent\n                - fixed\n              type: string\n            value:\n              description: The payment amount.\n              format: float\n              type: number\n          required:\n            - value\n            - type\n          type: object\n    password:\n      allOf:\n        - $ref: \"#/components/schemas/AuthenticationToken\"\n        - properties:\n            customerId:\n              allOf:\n                - $ref: \"#/components/schemas/ResourceId\"\n              description: The token's customer ID.\n              readOnly: true\n            password:\n              description: The token's password.\n              format: password\n              type: string\n              writeOnly: true\n            username:\n              description: The token's username.\n              type: string\n        - $ref: \"#/components/schemas/AuthenticationTokenMetadata\"\n      required:\n        - username\n        - password\n    passwordless:\n      allOf:\n        - $ref: \"#/components/schemas/AuthenticationToken\"\n        - properties:\n            customerId:\n              allOf:\n                - $ref: \"#/components/schemas/ResourceId\"\n              description: The token's customer ID.\n        - $ref: \"#/components/schemas/AuthenticationTokenMetadata\"\n      required:\n        - customerId\n    percent:\n      allOf:\n        - $ref: \"#/components/schemas/Discount\"\n        - properties:\n            value:\n              description: Discount percent.\n              exclusiveMinimum: true\n              format: double\n              maximum: 100\n              minimum: 0\n              type: number\n          required:\n            - value\n          type: object\n      description: Coupon percent discount.\n    rebilly:\n      allOf:\n        - $ref: \"#/components/schemas/InvoiceShipping\"\n        - properties:\n            amount:\n              description: The invoice's shipping amount which is calculated from [Shipping\n                Zones](#tag/Shipping-Zones).\n              readOnly: true\n              type: integer\n          type: object\n      description: Rebilly-based shipping which is calculated by shipping zones.\n    rebilly-taxjar:\n      allOf:\n        - $ref: \"#/components/schemas/InvoiceTax\"\n        - properties:\n            items:\n              description: \u003e\n                Taxes applied to this invoice and calculated based on the related\n                Product's `taxCategoryId`.\n              items:\n                allOf:\n                  - $ref: \"#/components/schemas/InvoiceTaxItem\"\n              readOnly: true\n              type: array\n          type: object\n      description: Taxjar-based taxes.\n    redemption-cancel:\n      allOf:\n        - $ref: \"#/components/schemas/TimelineAction\"\n        - properties:\n            redemptionId:\n              allOf:\n                - $ref: \"#/components/schemas/ResourceId\"\n          type: object\n      description: Cancel Redemption.\n    redemptions-per-customer:\n      allOf:\n        - $ref: \"#/components/schemas/CouponRestriction\"\n        - $ref: \"#/components/schemas/RedemptionRestriction\"\n        - properties:\n            quantity:\n              description: Restriction value.\n              type: integer\n          required:\n            - quantity\n          type: object\n      description: Quantity per Customer restrictions.\n    resend-email:\n      allOf:\n        - $ref: \"#/components/schemas/TimelineAction\"\n        - properties:\n            messageId:\n              allOf:\n                - $ref: \"#/components/schemas/ResourceId\"\n          type: object\n      description: Resend Email action.\n    restrict-to-invoices:\n      allOf:\n        - $ref: \"#/components/schemas/CouponRestriction\"\n        - $ref: \"#/components/schemas/RedemptionRestriction\"\n        - properties:\n            invoiceIds:\n              description: Invoice IDs coupon can be applied to.\n              items:\n                type: string\n              type: array\n          required:\n            - invoiceIds\n          type: object\n      description: restrict-to-invoices restrictions.\n    restrict-to-plans:\n      allOf:\n        - $ref: \"#/components/schemas/CouponRestriction\"\n        - $ref: \"#/components/schemas/RedemptionRestriction\"\n        - properties:\n            planIds:\n              description: Plan IDs coupon can be applied to.\n              items:\n                type: string\n              type: array\n          required:\n            - planIds\n          type: object\n      description: restrict-to-plans restrictions.\n    restrict-to-products:\n      allOf:\n        - $ref: \"#/components/schemas/CouponRestriction\"\n        - $ref: \"#/components/schemas/RedemptionRestriction\"\n        - properties:\n            productIds:\n              description: Product IDs coupon can be applied to.\n              items:\n                type: string\n              type: array\n          required:\n            - productIds\n          type: object\n      description: restrict-to-products restrictions.\n    restrict-to-subscriptions:\n      allOf:\n        - $ref: \"#/components/schemas/CouponRestriction\"\n        - $ref: \"#/components/schemas/RedemptionRestriction\"\n        - properties:\n            subscriptionIds:\n              description: Order IDs coupon can be applied to.\n              items:\n                type: string\n              type: array\n          required:\n            - subscriptionIds\n          type: object\n      description: restrict-to-subscriptions restrictions.\n    ruleset-restore:\n      allOf:\n        - $ref: \"#/components/schemas/TimelineAction\"\n        - properties:\n            version:\n              description: Rulset version to restore.\n              type: integer\n          type: object\n      description: Restore ruleset version.\n    stairstep:\n      allOf:\n        - $ref: \"#/components/schemas/PlanPriceFormula\"\n        - properties:\n            brackets:\n              description: \u003e\n                The price brackets, along with the price formula,\n\n                is used to calculate the amount to charge for the product on this plan on the invoice.\n\n\n                The \"stairstep\" example:\n\n\n                Price total | Max quantity | Description\n\n                ------------|--------------|------------\n\n                $5          | 1            | 1\n\n                $13         | 5            | 2 to 5\n\n                $30         | null         | 6 or more\n\n\n                If someone bought 1 apple, it would be $5.\n\n\n                If someone bought 2 apples, it would be $13. For 2 to 5 apples, the price is $13 in any case.\n              items:\n                properties:\n                  maxQuantity:\n                    description: \u003e\n                      If the value is `null`, it's assumed to be infinite.  It starts at\n                      the end of the previous bracket.\n\n                      If there is no previous bracket, it starts at 1.\n                    example: 1\n                    type: integer\n                  price:\n                    description: If the price is 0, it is free.\n                    example: 99.95\n                    format: double\n                    type: number\n                type: object\n              minItems: 1\n              type: array\n          required:\n            - brackets\n          type: object\n    three-columns:\n      allOf:\n        - $ref: \"#/components/schemas/TimelineTable\"\n        - properties:\n            data:\n              description: Table data. Each array element represents a table row.\n              items:\n                example:\n                  attribute: Descriptor\n                  newValue: new-test.com\n                  previousValue: test.com\n                properties:\n                  attribute:\n                    type: string\n                  newValue:\n                    type: string\n                  previousValue:\n                    type: string\n                type: object\n              type: array\n          type: object\n    tiered:\n      allOf:\n        - $ref: \"#/components/schemas/PlanPriceFormula\"\n        - properties:\n            brackets:\n              description: \u003e\n                The price brackets, along with the price formula,\n\n                is used to calculate the amount to charge for the product on this plan on the invoice.\n\n\n                The \"tiered\" example:\n\n\n                Price per apple | Max quantity | Description\n\n                ----------------|--------------|------------\n\n                $5              | 1            | 1\n\n                $4              | 5            | 2 to 5\n\n                $3              | null         | 6 or more\n\n\n                If someone bought 1 apple, it would be $5.\n\n\n                If someone bought 2 apples, it would be $9. $5 per apple for the first apple, then $4 per apple for the 2nd to 5th apple.\n              items:\n                properties:\n                  maxQuantity:\n                    description: \u003e\n                      If the value is `null`, it's assumed to be infinite.  It starts at\n                      the end of the previous bracket.\n\n                      If there is no previous bracket, it starts at 1.\n                    example: 1\n                    type: integer\n                  price:\n                    description: If the price is 0, it is free.\n                    example: 99.95\n                    format: double\n                    type: number\n                type: object\n              minItems: 1\n              type: array\n          required:\n            - brackets\n          type: object\n    total-redemptions:\n      allOf:\n        - $ref: \"#/components/schemas/CouponRestriction\"\n        - $ref: \"#/components/schemas/RedemptionRestriction\"\n        - properties:\n            quantity:\n              description: Total redemptions quantity.\n              type: integer\n          required:\n            - quantity\n          type: object\n      description: total-redemptions restrictions.\n    two-columns:\n      allOf:\n        - $ref: \"#/components/schemas/TimelineTable\"\n        - properties:\n            data:\n              description: Table data. Each array element represents a table row.\n              items:\n                example:\n                  attribute: Who\n                  value: John Doe\n                properties:\n                  attribute:\n                    type: string\n                  value:\n                    type: string\n                type: object\n              type: array\n          type: object\n    vegaaH:\n      allOf:\n        - $ref: \"#/components/schemas/GatewayAccount\"\n        - properties:\n            credentials:\n              properties:\n                password:\n                  description: vegaaH Gateway password.\n                  format: password\n                  type: string\n                terminalId:\n                  description: vegaaH Gateway terminal ID.\n                  type: string\n              required:\n                - terminalId\n                - password\n              type: object\n          required:\n            - credentials\n          type: object\n      description: vegaaH Gateway config.\n    volume:\n      allOf:\n        - $ref: \"#/components/schemas/PlanPriceFormula\"\n        - properties:\n            brackets:\n              description: \u003e\n                The price brackets, along with the price formula,\n\n                is used to calculate the amount to charge for the product on this plan on the invoice.\n\n\n                The \"volume\" example:\n\n\n                Price per apple | Max quantity | Description\n\n                ----------------|--------------|------------\n\n                $5              | 1            | 1\n\n                $4              | 5            | 2 to 5\n\n                $3              | null         | 6 or more\n\n\n                If someone bought 1 apple, it would be $5.\n\n\n                If someone bought 2 apples, it would be $8. For 2 to 5 apples, the price is $4 per apple.\n              items:\n                properties:\n                  maxQuantity:\n                    description: \u003e\n                      If the value is `null`, it's assumed to be infinite.  It starts at\n                      the end of the previous bracket.\n\n                      If there is no previous bracket, it starts at 1.\n                    example: 1\n                    type: integer\n                  price:\n                    description: If the price is 0, it is free.\n                    example: 99.95\n                    format: double\n                    type: number\n                type: object\n              minItems: 1\n              type: array\n          required:\n            - brackets\n          type: object\n  securitySchemes:\n    JWT:\n      bearerFormat: JWT\n      description: \u003e\n        You can create a JSON Web Token (JWT) via our [JWT Session\n        resource](https://user-api-docs.rebilly.com/#operation/PostSigninRequest).\n\n        Usage format: `Bearer \u0026lt;JWT\u0026gt;`.\n      scheme: bearer\n      type: http\n    PublishableApiKey:\n      description: \u003e\n        Only for the Tokens resource.\n\n        You can create a Publishable API Key via our [API Keys resource](https://user-api-docs.rebilly.com/#tag/API-Keys), by specifying the type as `publishable`.\n      in: header\n      name: Authorization\n      type: apiKey\n    SecretApiKey:\n      description: \u003e\n        When you sign up for an account, you are given your first secret\n        API key.\n\n        To do so please [follow this link.](https://app.rebilly.com/signup)\n\n        Also you can generate additional API keys, and delete API keys (as you may\n\n        need to rotate your keys in the future). All API keys can be restricted to a\n\n        small set of permissions (restricted API keys).\n      in: header\n      name: REB-APIKEY\n      type: apiKey\nx-tagGroups:\n  - name: Customers\n    tags:\n      - Customers\n      - Customer Authentication\n      - KYC Documents\n      - AML\n      - Tags\n      - Customers Timeline\n  - name: Payment Instruments\n    tags:\n      - Payment Instruments\n      - Payment Tokens\n      - Payment Cards\n      - Bank Accounts\n      - PayPal Accounts\n  - name: Payments\n    tags:\n      - Transactions\n      - 3D Secure\n      - Disputes\n      - Blocklists\n  - name: Orders \u0026amp; Invoices\n    tags:\n      - Orders\n      - Invoices\n      - Plans\n      - Products\n      - Coupons\n      - Shipping Zones\n      - Taxes\n  - name: Misc\n    tags:\n      - Custom Fields\n      - Files\n      - Reports\n      - Search\n      - Users\nx-webhooks:\n  aml-list-possibly-matched:\n    post:\n      operationId: aml-list-possibly-matched\n      requestBody:\n        $ref: \"#/components/requestBodies/Customer-2\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: AML list possibly matched\n      tags:\n        - AML\n  customer-created:\n    post:\n      operationId: customer-created\n      requestBody:\n        $ref: \"#/components/requestBodies/Customer-2\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Customer created\n      tags:\n        - Customers\n  customer-merged:\n    post:\n      operationId: customer-merged\n      requestBody:\n        $ref: \"#/components/requestBodies/MergedCustomer\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Customer merged\n      tags:\n        - Customers\n  customer-one-time-password-requested:\n    post:\n      operationId: customer-one-time-password-requested\n      requestBody:\n        $ref: \"#/components/requestBodies/Customer-2\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Customer one-time-password requested\n      tags:\n        - Customers\n  customer-updated:\n    post:\n      operationId: customer-updated\n      requestBody:\n        $ref: \"#/components/requestBodies/Customer-2\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Customer updated\n      tags:\n        - Customers\n  dispute-created:\n    post:\n      operationId: dispute-created\n      requestBody:\n        $ref: \"#/components/requestBodies/Dispute-2\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Dispute created\n      tags:\n        - Disputes\n  experian-check-performed:\n    post:\n      operationId: experian-check-performed\n      requestBody:\n        $ref: \"#/components/requestBodies/ExperianCheckPerformed\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Experian check performed\n      tags:\n        - Customers\n  gateway-account-downtime-ended:\n    post:\n      operationId: gateway-account-downtime-ended\n      requestBody:\n        $ref: \"#/components/requestBodies/GatewayAccount\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Gateway account downtime ended\n      tags:\n        - Gateway Accounts\n  gateway-account-downtime-started:\n    post:\n      operationId: gateway-account-downtime-started\n      requestBody:\n        $ref: \"#/components/requestBodies/GatewayAccount\"\n      responses:\n        2XX:\n          description: Return any 2XX status to indicate that the data was received\n            successfully.\n      summary: Gateway account downtime started\n      tags:\n        - Gateway Accounts\n  gateway-account-limit-reached:\n    post:\n      operationId: gateway-account-limit-reached\n      requestBody:\n        $ref: \"#/components/requestBodies/GatewayAccountAndGatewayAccountLimit\"\n      responses:\n        2XX:\n          description: Return any 2XX status to indicate that the data was received\n            successfully.\n      summary: Gateway account limit reached\n      tags:\n        - Gateway Accounts\n  gateway-account-requested:\n    post:\n      operationId: gateway-account-requested\n      requestBody:\n        $ref: \"#/components/requestBodies/Transaction\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Gateway account requested\n      tags:\n        - Transactions\n  invoice-abandoned:\n    post:\n      operationId: invoice-abandoned\n      requestBody:\n        $ref: \"#/components/requestBodies/Invoice-2\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Invoice abandoned\n      tags:\n        - Invoices\n  invoice-created:\n    post:\n      operationId: invoice-created\n      requestBody:\n        $ref: \"#/components/requestBodies/Invoice-2\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Invoice created\n      tags:\n        - Invoices\n  invoice-issued:\n    post:\n      operationId: invoice-issued\n      requestBody:\n        $ref: \"#/components/requestBodies/Invoice-2\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Invoice issued\n      tags:\n        - Invoices\n  invoice-modified:\n    post:\n      operationId: invoice-modified\n      requestBody:\n        $ref: \"#/components/requestBodies/Invoice-2\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Invoice modified\n      tags:\n        - Invoices\n  invoice-paid:\n    post:\n      operationId: invoice-paid\n      requestBody:\n        $ref: \"#/components/requestBodies/Invoice-2\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Invoice paid\n      tags:\n        - Invoices\n  invoice-past-due:\n    post:\n      operationId: invoice-past-due\n      requestBody:\n        $ref: \"#/components/requestBodies/Invoice-2\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Invoice past due\n      tags:\n        - Invoices\n  invoice-past-due-reminder:\n    post:\n      operationId: invoice-past-due-reminder\n      requestBody:\n        $ref: \"#/components/requestBodies/Invoice-2\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Invoice past due reminder\n      tags:\n        - Invoices\n  invoice-reissued:\n    post:\n      operationId: invoice-reissued\n      requestBody:\n        $ref: \"#/components/requestBodies/Invoice-2\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Invoice reissued\n      tags:\n        - Invoices\n  invoice-voided:\n    post:\n      operationId: invoice-voided\n      requestBody:\n        $ref: \"#/components/requestBodies/Invoice-2\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Invoice voided\n      tags:\n        - Invoices\n  kyc-document-accepted:\n    post:\n      operationId: kyc-document-accepted\n      requestBody:\n        $ref: \"#/components/requestBodies/KycDocument\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: KYC document accepted\n      tags:\n        - KYC Documents\n  kyc-document-modified:\n    post:\n      operationId: kyc-document-modified\n      requestBody:\n        $ref: \"#/components/requestBodies/KycDocument\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: KYC document modified\n      tags:\n        - KYC Documents\n  kyc-document-rejected:\n    post:\n      operationId: kyc-document-rejected\n      requestBody:\n        $ref: \"#/components/requestBodies/KycDocument\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: KYC document rejected\n      tags:\n        - KYC Documents\n  kyc-document-reviewed:\n    post:\n      operationId: kyc-document-reviewed\n      requestBody:\n        $ref: \"#/components/requestBodies/KycDocument\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: KYC document reviewed\n      tags:\n        - KYC Documents\n  nsf-response-received:\n    post:\n      operationId: nsf-response-received\n      requestBody:\n        $ref: \"#/components/requestBodies/Transaction\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: NSF response received\n      tags:\n        - Transactions\n  offsite-payment-completed:\n    post:\n      operationId: offsite-payment-completed\n      requestBody:\n        $ref: \"#/components/requestBodies/Transaction\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Offsite payment completed\n      tags:\n        - Transactions\n  order-completed:\n    post:\n      operationId: order-completed\n      requestBody:\n        $ref: \"#/components/requestBodies/Subscription-2\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Order completed\n      tags:\n        - Orders\n  payment-card-created:\n    post:\n      operationId: payment-card-created\n      requestBody:\n        $ref: \"#/components/requestBodies/PaymentCard\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Payment card created\n      tags:\n        - Payment Cards\n  payment-card-expiration-reminder:\n    post:\n      operationId: payment-card-expiration-reminder\n      requestBody:\n        $ref: \"#/components/requestBodies/PaymentCard\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Payment card expiration reminder\n      tags:\n        - Payment Cards\n  payment-card-expired:\n    post:\n      operationId: payment-card-expired\n      requestBody:\n        $ref: \"#/components/requestBodies/PaymentCard\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Payment card expired\n      tags:\n        - Payment Cards\n  renewal-invoice-issued:\n    post:\n      operationId: renewal-invoice-issued\n      requestBody:\n        $ref: \"#/components/requestBodies/InvoiceAndSubscription\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Renewal invoice issued\n      tags:\n        - Orders\n  renewal-invoice-payment-canceled:\n    post:\n      operationId: renewal-invoice-payment-canceled\n      requestBody:\n        $ref: \"#/components/requestBodies/InvoiceAndTransaction\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Renewal invoice payment canceled\n      tags:\n        - Invoices\n  renewal-invoice-payment-declined:\n    post:\n      operationId: renewal-invoice-payment-declined\n      requestBody:\n        $ref: \"#/components/requestBodies/InvoiceAndTransaction\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Renewal invoice payment declined\n      tags:\n        - Invoices\n  risk-score-changed:\n    post:\n      operationId: risk-score-changed\n      requestBody:\n        $ref: \"#/components/requestBodies/Transaction\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Risk score changed\n      tags:\n        - Transactions\n  subscription-activated:\n    post:\n      operationId: subscription-activated\n      requestBody:\n        $ref: \"#/components/requestBodies/Subscription-2\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Order activated\n      tags:\n        - Orders\n  subscription-canceled:\n    post:\n      operationId: subscription-canceled\n      requestBody:\n        $ref: \"#/components/requestBodies/Subscription-2\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Subscription order canceled\n      tags:\n        - Orders\n  subscription-modified:\n    post:\n      operationId: subscription-modified\n      requestBody:\n        $ref: \"#/components/requestBodies/Subscription-2\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Order modified\n      tags:\n        - Orders\n  subscription-reactivated:\n    post:\n      operationId: subscription-reactivated\n      requestBody:\n        $ref: \"#/components/requestBodies/Subscription-2\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Subscription reactivated\n      tags:\n        - Orders\n  subscription-renewal-reminder:\n    post:\n      operationId: subscription-renewal-reminder\n      requestBody:\n        $ref: \"#/components/requestBodies/Subscription-2\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Subscription renewal reminder\n      tags:\n        - Orders\n  subscription-renewed:\n    post:\n      operationId: subscription-renewed\n      requestBody:\n        $ref: \"#/components/requestBodies/Subscription-2\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Subscription renewed\n      tags:\n        - Orders\n  subscription-trial-converted:\n    post:\n      operationId: subscription-trial-converted\n      requestBody:\n        $ref: \"#/components/requestBodies/Subscription-2\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Subscription trial converted\n      tags:\n        - Orders\n  subscription-trial-end-changed:\n    post:\n      operationId: subscription-trial-end-changed\n      requestBody:\n        $ref: \"#/components/requestBodies/Subscription-2\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Subscription trial end changed\n      tags:\n        - Orders\n  subscription-trial-end-reminder:\n    post:\n      operationId: subscription-trial-end-reminder\n      requestBody:\n        $ref: \"#/components/requestBodies/Subscription-2\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Subscription trial end reminder\n      tags:\n        - Orders\n  subscription-trial-ended:\n    post:\n      operationId: subscription-trial-ended\n      requestBody:\n        $ref: \"#/components/requestBodies/Subscription-2\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Subscription trial ended\n      tags:\n        - Orders\n  transaction-amount-discrepancy-found:\n    post:\n      operationId: transaction-amount-discrepancy-found\n      requestBody:\n        $ref: \"#/components/requestBodies/Transaction\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Transaction amount discrepancy found\n      tags:\n        - Transactions\n  transaction-declined:\n    post:\n      operationId: transaction-declined\n      requestBody:\n        $ref: \"#/components/requestBodies/Transaction\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Transaction declined\n      tags:\n        - Transactions\n  transaction-discrepancy-found:\n    post:\n      operationId: transaction-discrepancy-found\n      requestBody:\n        $ref: \"#/components/requestBodies/Transaction\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Transaction discrepancy found\n      tags:\n        - Transactions\n  transaction-process-requested:\n    post:\n      operationId: transaction-process-requested\n      requestBody:\n        $ref: \"#/components/requestBodies/Transaction\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Transaction process requested\n      tags:\n        - Transactions\n  transaction-processed:\n    post:\n      operationId: transaction-processed\n      requestBody:\n        $ref: \"#/components/requestBodies/Transaction\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Transaction processed\n      tags:\n        - Transactions\n  transaction-timeout-resolved:\n    post:\n      operationId: transaction-timeout-resolved\n      requestBody:\n        $ref: \"#/components/requestBodies/Transaction\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Transaction timeout resolved\n      tags:\n        - Transactions\n  waiting-gateway-transaction-completed:\n    post:\n      operationId: waiting-gateway-transaction-completed\n      requestBody:\n        $ref: \"#/components/requestBodies/Transaction\"\n      responses:\n        2xx:\n          description: Return any 2xx status to indicate that the data was received\n            successfully.\n      summary: Waiting gateway transaction completed\n      tags:\n        - Transactions\n"
		}
	},
	"Error": "parse: parse spec: paths: /payouts: post: operation \"PostPayout\": requestBody: resolve \"#/components/requestBodies/PayoutRequest\" reference: content: \"application/json\": parse schema: parse schema: reference \"#/components/schemas/PayoutRequest\": parse schema: allOf: [0]: parse schema: reference \"#/components/schemas/CommonTransactionRequest\": parse schema: customFields: parse schema: reference \"#/components/schemas/ResourceCustomFields\": parse default: unexpected type: \"object\""
}