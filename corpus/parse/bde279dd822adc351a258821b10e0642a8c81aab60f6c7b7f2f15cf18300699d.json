{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/JanssenProject/jans"
		},
		"file": {
			"name": "jans-config-api-swagger-auto.yaml",
			"size": 0,
			"path": "jans-config-api/docs/jans-config-api-swagger-auto.yaml",
			"byteSize": 148810,
			"content": "openapi: 3.0.1\ninfo:\n  title: Jans Config API\n  contact:\n    name: Gluu Support\n    url: https://support.gluu.org\n    email: xxx@gluu.org\n  license:\n    name: Apache 2.0\n    url: https://github.com/JanssenProject/jans/blob/main/LICENSE\n  version: 1.0.0\nservers:\n- url: https://jans.io/\n  description: The Jans server\n  variables: {}\ntags:\n- name: Attribute\n- name: Default Authentication Method\n- name: Cache Configuration – Memcached\n- name: Cache Configuration – Redis\n- name: Cache Configuration – in-Memory\n- name: Cache Configuration – Native-Persistence\n- name: Configuration – Properties\n- name: Fido2 - Configuration\n- name: Configuration – SMTP\n- name: Configuration – Logging\n- name: Configuration – JWK - JSON Web Key (JWK)\n- name: Custom Scripts\n- name: Database - LDAP configuration\n- name: Database - Couchbase configuration\n- name: OAuth - OpenID Connect - Clients\n- name: OAuth - UMA Resources\n- name: OAuth - Scopes\n- name: Configuration – Agama Flow\n- name: Statistics - User\n- name: Health - Check\n- name: Server Stats\n- name: Auth - Session Management\n- name: Organization Configuration\n- name: Auth Server Health - Check\npaths:\n  /api/v1/health:\n    get:\n      tags:\n      - Health - Check\n      summary: Returns application health status\n      description: Returns application health status\n      operationId: get-config-health\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/HealthStatus'\n        \"500\":\n          description: InternalServerError\n  /api/v1/health/live:\n    get:\n      tags:\n      - Health - Check\n      summary: Returns application liveness status\n      description: Returns application liveness status\n      operationId: get-config-health-live\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n        \"500\":\n          description: InternalServerError\n  /api/v1/health/ready:\n    get:\n      tags:\n      - Health - Check\n      summary: Returns application readiness status\n      description: Returns application readiness status\n      operationId: get-config-health-ready\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n        \"500\":\n          description: InternalServerError\n  /api/v1/health/server-stat:\n    get:\n      tags:\n      - Health - Check\n      summary: Returns application server status\n      description: Returns application server status\n      operationId: get-server-stat\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatsData'\n        \"500\":\n          description: InternalServerError\n  /api/v1/acrs:\n    get:\n      tags:\n      - Default Authentication Method\n      summary: Gets default authentication method.\n      description: Gets default authentication method.\n      operationId: get-acrs\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthenticationMethod'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/acrs.readonly\n    put:\n      tags:\n      - Default Authentication Method\n      summary: Updates default authentication method.\n      description: Updates default authentication method.\n      operationId: put-acrs\n      requestBody:\n        description: String representing patch-document.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuthenticationMethod'\n            examples:\n              Request json example:\n                description: Request json example\n                value:\n                  id: basic\n                externalValue: swagger/defaultAcr.json\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthenticationMethod'\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/acrs.write\n  /api/v1/agama:\n    get:\n      tags:\n      - Configuration – Agama Flow\n      summary: Fetches all agama flow.\n      description: Fetches all agama flow.\n      operationId: get-agama-flows\n      parameters:\n      - name: pattern\n        in: query\n        schema:\n          type: string\n          default: \"\"\n      - name: limit\n        in: query\n        schema:\n          type: integer\n          format: int32\n          default: 50\n      - name: startIndex\n        in: query\n        schema:\n          type: integer\n          format: int32\n          default: 1\n      - name: sortBy\n        in: query\n        schema:\n          type: string\n          default: qname\n      - name: sortOrder\n        in: query\n        schema:\n          type: string\n          default: ascending\n      - name: includeSource\n        in: query\n        schema:\n          type: boolean\n          default: false\n      responses:\n        \"200\":\n          description: Agama Flows\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PagedResult'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/agama.readonly\n    post:\n      tags:\n      - Configuration – Agama Flow\n      summary: Create a new agama flow\n      description: Create a new agama flow\n      operationId: post-agama-flow\n      requestBody:\n        description: Agama Flow\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Flow'\n            examples:\n              Request json example:\n                description: Request json example\n                externalValue: swagger/agama.json\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Flow'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/agama.write\n  /api/v1/agama/{qname}:\n    get:\n      tags:\n      - Configuration – Agama Flow\n      summary: Gets an agama flow based on Qname.\n      description: Gets an agama flow based on Qname.\n      operationId: get-agama-flow\n      parameters:\n      - name: qname\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: includeSource\n        in: query\n        schema:\n          type: boolean\n          default: false\n      responses:\n        \"200\":\n          description: Agama Flow\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Flow'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/agama.readonly\n    post:\n      tags:\n      - Configuration – Agama Flow\n      summary: Create a new agama flow from source\n      description: Create a new agama flow from source.\n      operationId: post-agama-flow-from-source\n      parameters:\n      - name: qname\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Agama Flow\n        content:\n          text/plain:\n            schema:\n              type: string\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Flow'\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/agama.write\n    delete:\n      tags:\n      - Configuration – Agama Flow\n      summary: Deletes an agama flow based on Qname\n      description: Deletes an agama flow based on Qname\n      operationId: delete-agama-flow\n      parameters:\n      - name: qname\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/agama.delete\n    patch:\n      tags:\n      - Configuration – Agama Flow\n      summary: Partially modify a Agama Flow\n      description: Partially modify a Agama Flow\n      operationId: patch-agama-flow\n      parameters:\n      - name: qname\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: JsonPatch object\n        content:\n          application/json-patch+json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/JsonPatch'\n      responses:\n        \"200\":\n          description: Patched Agama Flow\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Flow'\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/agama.write\n  /api/v1/agama/source/{qname}:\n    put:\n      tags:\n      - Configuration – Agama Flow\n      summary: Update agama flow from source file\n      description: Update agama flow from source file.\n      operationId: put-agama-flow-from-source\n      parameters:\n      - name: qname\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: String representing patch-document.\n        content:\n          text/plain:\n            schema:\n              type: string\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Flow'\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/agama.write\n  /api/v1/attributes:\n    get:\n      tags:\n      - Attribute\n      summary: Gets a list of Gluu attributes.\n      description: Gets a list of Gluu attributes.\n      operationId: get-attributes\n      parameters:\n      - name: limit\n        in: query\n        schema:\n          type: integer\n          format: int32\n          default: 50\n      - name: pattern\n        in: query\n        schema:\n          type: string\n          default: \"\"\n      - name: status\n        in: query\n        schema:\n          type: string\n          default: all\n      - name: startIndex\n        in: query\n        schema:\n          type: integer\n          format: int32\n          default: 1\n      - name: sortBy\n        in: query\n        schema:\n          type: string\n          default: inum\n      - name: sortOrder\n        in: query\n        schema:\n          type: string\n          default: ascending\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PagedResult'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2: []\n    put:\n      tags:\n      - Attribute\n      summary: Updates an existing attribute\n      description: Updates an existing attribute\n      operationId: put-attributes\n      requestBody:\n        description: GluuAttribute object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GluuAttribute'\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GluuAttribute'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/attributes.write\n    post:\n      tags:\n      - Attribute\n      summary: Adds a new attribute\n      description: Adds a new attribute\n      operationId: post-attributes\n      requestBody:\n        description: GluuAttribute object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GluuAttribute'\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GluuAttribute'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/attributes.write\n  /api/v1/attributes/{inum}:\n    get:\n      tags:\n      - Attribute\n      summary: Gets an attribute based on inum\n      description: Gets an attribute based on inum\n      operationId: get-attributes-by-inum\n      parameters:\n      - name: inum\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GluuAttribute'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/attributes.readonly\n    delete:\n      tags:\n      - Attribute\n      summary: Deletes an attribute based on inum\n      description: Deletes an attribute based on inum\n      operationId: delete-attributes-by-inum\n      parameters:\n      - name: inum\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/attributes.delete\n    patch:\n      tags:\n      - Attribute\n      summary: Partially modify a GluuAttribute\n      description: Partially modify a GluuAttribute\n      operationId: patch-attributes-by-inum\n      parameters:\n      - name: inum\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: String representing patch-document.\n        content:\n          application/json-patch+json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/PatchRequest'\n      responses:\n        \"200\":\n          description: Updated GluuAttribute\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GluuAttribute'\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/attributes.write\n  /api/v1/config/cache:\n    get:\n      tags:\n      - Cache Configuration\n      summary: Returns cache configuration.\n      description: Returns cache configuration.\n      operationId: get-config-cache\n      responses:\n        \"200\":\n          description: Cache configuration details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CacheConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/cache.readonly\n    patch:\n      tags:\n      - Cache Configuration\n      summary: Patch cache configuration.\n      description: Patch cache configuration\n      operationId: patch-config-cache\n      requestBody:\n        description: String representing patch-document.\n        content:\n          application/json-patch+json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/JsonPatch'\n            example: \"[{op:replace, path: memcachedConfiguration, value: response.memcachedConfiguration\\\n              \\ }]\"\n      responses:\n        \"200\":\n          description: Cache configuration details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CacheConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/cache.write\n  /api/v1/config/cache/in-memory:\n    get:\n      tags:\n      - Cache Configuration – in-Memory\n      summary: Returns in-Memory cache configuration.\n      description: Returns in-Memory cache configuration.\n      operationId: get-config-cache-in-memory\n      responses:\n        \"200\":\n          description: In-Memory configuration details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InMemoryConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/cache.readonly\n    put:\n      tags:\n      - Cache Configuration – in-Memory\n      summary: Updates in-Memory cache configuration.\n      description: Updates in-Memory cache configuration\n      operationId: put-config-cache-in-memory\n      requestBody:\n        description: inMemoryConfiguration object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InMemoryConfiguration'\n      responses:\n        \"200\":\n          description: In-Memory cache configuration details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InMemoryConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/cache.write\n    patch:\n      tags:\n      - Cache Configuration – in-Memory\n      summary: Patch In-Memory cache configuration.\n      description: Patch In-Memory cache configuration\n      operationId: patch-config-cache-in-memory\n      requestBody:\n        description: String representing patch-document.\n        content:\n          application/json-patch+json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/JsonPatch'\n      responses:\n        \"200\":\n          description: In-Memory cache configuration details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InMemoryConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/cache.write\n  /api/v1/config/cache/memcached:\n    get:\n      tags:\n      - Cache Configuration – Memcached\n      summary: Returns memcached cache configuration.\n      description: Returns memcached cache configuration.\n      operationId: get-config-cache-memcached\n      responses:\n        \"200\":\n          description: Memcached configuration details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MemcachedConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/cache.readonly\n    put:\n      tags:\n      - Cache Configuration – Memcached\n      summary: Updates memcached cache configuration.\n      description: Updates memcached cache configuration\n      operationId: put-config-cache-memcached\n      requestBody:\n        description: Memcached Configuration object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MemcachedConfiguration'\n      responses:\n        \"200\":\n          description: Native persistence cache configuration details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MemcachedConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/cache.write\n    patch:\n      tags:\n      - Cache Configuration – Memcached\n      summary: Patch memcached cache configuration.\n      description: Patch memcached cache configuration\n      operationId: patch-config-cache-memcached\n      requestBody:\n        description: String representing patch-document.\n        content:\n          application/json-patch+json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/JsonPatch'\n      responses:\n        \"200\":\n          description: Memcached cache configuration details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MemcachedConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/cache.write\n  /api/v1/config/cache/native-persistence:\n    get:\n      tags:\n      - Cache Configuration – Native-Persistence\n      summary: Returns native persistence cache configuration.\n      description: Returns native persistence cache configuration.\n      operationId: get-config-cache-native-persistence\n      responses:\n        \"200\":\n          description: Native persistence configuration details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NativePersistenceConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/cache.readonly\n    put:\n      tags:\n      - Cache Configuration – Native-Persistence\n      summary: Updates native persistence cache configuration.\n      description: Updates native persistence cache configuration\n      operationId: put-config-cache-native-persistence\n      requestBody:\n        description: NativePersistenceConfiguration object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NativePersistenceConfiguration'\n      responses:\n        \"200\":\n          description: Native persistence cache configuration details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NativePersistenceConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/cache.write\n    patch:\n      tags:\n      - Cache Configuration – Native-Persistence\n      summary: Patch native persistence cache configuration.\n      description: Patch native persistence cache configuration\n      operationId: patch-config-cache-native-persistence\n      requestBody:\n        description: String representing patch-document.\n        content:\n          application/json-patch+json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/JsonPatch'\n      responses:\n        \"200\":\n          description: Native persistence cache configuration details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NativePersistenceConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/cache.write\n  /api/v1/config/cache/redis:\n    get:\n      tags:\n      - Cache Configuration – Redis\n      summary: Returns Redis cache configuration.\n      description: Returns Redis cache configuration\n      operationId: get-config-cache-redis\n      responses:\n        \"200\":\n          description: Redis cache configuration details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RedisConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/cache.readonly\n    put:\n      tags:\n      - Cache Configuration – Redis\n      summary: Updates Redis cache configuration.\n      description: Updates Redis cache configuration\n      operationId: put-config-cache-redis\n      requestBody:\n        description: RedisConfiguration object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RedisConfiguration'\n      responses:\n        \"200\":\n          description: Redis cache configuration details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RedisConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/cache.write\n    patch:\n      tags:\n      - Cache Configuration – Redis\n      summary: Patch Redis cache configuration.\n      description: Patch Redis cache configuration\n      operationId: patch-config-cache-redis\n      requestBody:\n        description: String representing patch-document.\n        content:\n          application/json-patch+json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/JsonPatch'\n      responses:\n        \"200\":\n          description: Redis cache configuration details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RedisConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/cache.write\n  /api/v1/openid/clients:\n    get:\n      tags:\n      - OAuth - OpenID Connect - Clients\n      summary: Gets list of OpenID Connect clients\n      description: Gets list of OpenID Connect clients\n      operationId: get-oauth-openid-clients\n      parameters:\n      - name: limit\n        in: query\n        schema:\n          type: integer\n          format: int32\n          default: 50\n      - name: pattern\n        in: query\n        schema:\n          type: string\n          default: \"\"\n      - name: startIndex\n        in: query\n        schema:\n          type: integer\n          format: int32\n          default: 1\n      - name: sortBy\n        in: query\n        schema:\n          type: string\n      - name: sortOrder\n        in: query\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PagedResult'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/openid/clients.readonly\n    put:\n      tags:\n      - OAuth - OpenID Connect - Clients\n      summary: Update OpenId Connect client\n      description: Update OpenId Connect client\n      operationId: put-oauth-openid-client\n      requestBody:\n        description: OpenID Connect Client object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Client'\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Client'\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/openid/clients.write\n    post:\n      tags:\n      - OAuth - OpenID Connect - Clients\n      summary: Create new OpenId Connect client\n      description: Create new OpenId Connect client\n      operationId: post-oauth-openid-client\n      requestBody:\n        description: OpenID Connect Client object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Client'\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Client'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/openid/clients.write\n  /api/v1/openid/clients/{inum}:\n    get:\n      tags:\n      - OAuth - OpenID Connect - Clients\n      summary: Get OpenId Connect Client by Inum\n      description: Get OpenId Connect Client by Inum\n      operationId: get-oauth-openid-clients-by-inum\n      parameters:\n      - name: inum\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Client'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/openid/clients.readonly\n    delete:\n      tags:\n      - OAuth - OpenID Connect - Clients\n      summary: Delete OpenId Connect client\n      description: Delete OpenId Connect client\n      operationId: delete-oauth-openid-client-by-inum\n      parameters:\n      - name: inum\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/openid/clients.delete\n    patch:\n      tags:\n      - OAuth - OpenID Connect - Clients\n      summary: Patch OpenId Connect client\n      description: Patch OpenId Connect client\n      operationId: patch-oauth-openid-client-by-inum\n      parameters:\n      - name: inum\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: String representing patch-document.\n        content:\n          application/json-patch+json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/JsonPatch'\n            example: \"[ {op:replace, path: backchannel_authentication_request_signing_alg,\\\n              \\ value: false } ]\"\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Client'\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/openid/clients.write\n  /api/v1/jans-auth-server/config:\n    get:\n      tags:\n      - Configuration – Properties\n      summary: Gets all Jans authorization server configuration properties.\n      description: Gets all Jans authorization server configuration properties.\n      operationId: get-properties\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/jans-auth-server/config/properties.readonly\n    patch:\n      tags:\n      - Configuration – Properties\n      summary: Partially modifies Jans authorization server Application configuration\n        properties.\n      description: Partially modifies Jans authorization server AppConfiguration properties.\n      operationId: patch-properties\n      requestBody:\n        description: String representing patch-document.\n        content:\n          application/json-patch+json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/JsonPatch'\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/jans-auth-server/config/properties.write\n  /api/v1/jans-auth-server/config/persistence:\n    get:\n      tags:\n      - Configuration – Properties\n      summary: Returns persistence type configured for Jans authorization server.\n      description: Returns persistence type configured for Jans authorization server.\n      operationId: get-properties-persistence\n      responses:\n        \"200\":\n          description: Jans Authorization Server persistence type\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PersistenceConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/jans-auth-server/config/properties.readonly\n  /api/v1/config/smtp:\n    get:\n      tags:\n      - Configuration – SMTP\n      summary: Returns SMTP server configuration\n      description: Returns SMTP server configuration\n      operationId: get-config-smtp\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SmtpConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/smtp.readonly\n    put:\n      tags:\n      - Configuration – SMTP\n      summary: Updates SMTP server configuration\n      description: Updates SMTP server configuration\n      operationId: put-config-smtp\n      requestBody:\n        description: SmtpConfiguration object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SmtpConfiguration'\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SmtpConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/smtp.write\n    post:\n      tags:\n      - Configuration – SMTP\n      summary: Adds SMTP server configuration\n      description: Adds SMTP server configuration\n      operationId: post-config-smtp\n      requestBody:\n        description: SmtpConfiguration object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SmtpConfiguration'\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SmtpConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/smtp.write\n    delete:\n      tags:\n      - Configuration – SMTP\n      summary: Deletes SMTP server configuration\n      description: Deletes SMTP server configuration\n      operationId: delete-config-smtp\n      responses:\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/smtp.delete\n  /api/v1/config/smtp/test:\n    post:\n      tags:\n      - Configuration – SMTP\n      summary: Test SMTP server configuration\n      description: Test SMTP server configuration\n      operationId: test-config-smtp\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: boolean\n                description: boolean value true if successful\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/smtp.readonly\n  /api/v1/config/database/couchbase:\n    get:\n      tags:\n      - Database - Couchbase configuration\n      summary: Gets list of existing Couchbase configurations\n      description: Gets list of existing Couchbase configurations\n      operationId: get-config-database-couchbase\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CouchbaseConnectionConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/database/couchbase.readonly\n    put:\n      tags:\n      - Database - Couchbase configuration\n      summary: Updates Couchbase configuration\n      description: Updates Couchbase configuration\n      operationId: put-config-database-couchbase\n      requestBody:\n        description: CouchbaseConnectionConfiguration object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CouchbaseConnectionConfiguration'\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CouchbaseConnectionConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/database/couchbase.write\n    post:\n      tags:\n      - Database - Couchbase configuration\n      summary: Adds a new Couchbase configuration\n      description: Adds a new Couchbase configuration\n      operationId: post-config-database-couchbase\n      requestBody:\n        description: CouchbaseConnectionConfiguration object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CouchbaseConnectionConfiguration'\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CouchbaseConnectionConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/database/couchbase.write\n  /api/v1/config/database/couchbase/{name}:\n    get:\n      tags:\n      - Database - Couchbase configuration\n      summary: Gets a Couchbase configurations by name\n      description: Gets a Couchbase configurations by name\n      operationId: get-config-database-couchbase-by-name\n      parameters:\n      - name: name\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: CouchbaseConnectionConfiguration\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CouchbaseConnectionConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/database/couchbase.readonly\n    delete:\n      tags:\n      - Database - Couchbase configuration\n      summary: Deletes a Couchbase configurations by name\n      description: Deletes a Couchbase configurations by name\n      operationId: delete-config-database-couchbase-by-name\n      parameters:\n      - name: name\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/database/couchbase.delete\n    patch:\n      tags:\n      - Database - Couchbase configuration\n      summary: Patches a Couchbase configurations by name\n      description: Patches a Couchbase configurations by name\n      operationId: patch-config-database-couchbase-by-name\n      parameters:\n      - name: name\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: JsonPatch object\n        content:\n          application/json-patch+json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/JsonPatch'\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CouchbaseConnectionConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/database/couchbase.write\n  /api/v1/config/database/couchbase/test:\n    post:\n      tags:\n      - Database - Couchbase configuration\n      summary: Tests a Couchbase configuration\n      description: Tests a Couchbase configuration\n      operationId: post-config-database-couchbase-test\n      requestBody:\n        description: CouchbaseConnectionConfiguration object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CouchbaseConnectionConfiguration'\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: boolean\n                description: boolean value true if successful\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/database/couchbase.readonly\n  /api/v1/config/scripts:\n    get:\n      tags:\n      - Custom Scripts\n      summary: Fetch custom script by name\n      description: Gets a list of custom scripts\n      operationId: get-config-scripts\n      parameters:\n      - name: limit\n        in: query\n        schema:\n          type: integer\n          format: int32\n          default: 50\n      - name: pattern\n        in: query\n        schema:\n          type: string\n          default: \"\"\n      - name: startIndex\n        in: query\n        schema:\n          type: integer\n          format: int32\n          default: 1\n      - name: sortBy\n        in: query\n        schema:\n          type: string\n          default: inum\n      - name: sortOrder\n        in: query\n        schema:\n          type: string\n          default: ascending\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PagedResult'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/scripts.readonly\n    put:\n      tags:\n      - Custom Scripts\n      summary: Updates a custom script\n      description: Updates a custom script\n      operationId: put-config-scripts\n      requestBody:\n        description: CustomScript object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CustomScript'\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomScript'\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/scripts.write\n    post:\n      tags:\n      - Custom Scripts\n      summary: Adds a new custom script\n      description: Adds a new custom script\n      operationId: post-config-scripts\n      requestBody:\n        description: CustomScript object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CustomScript'\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomScript'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/scripts.write\n  /api/v1/config/scripts/{inum}:\n    delete:\n      tags:\n      - Custom Scripts\n      summary: Deletes a custom script\n      description: Deletes a custom script\n      operationId: delete-config-scripts-by-inum\n      parameters:\n      - name: inum\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/scripts.delete\n    patch:\n      tags:\n      - Custom Scripts\n      summary: Patches a custom script\n      description: Patches a custom script\n      operationId: patch-config-scripts-by-inum\n      parameters:\n      - name: inum\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: JsonPatch object\n        content:\n          application/json-patch+json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/JsonPatch'\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomScript'\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/scripts.write\n  /api/v1/config/scripts/inum/{inum}:\n    get:\n      tags:\n      - Custom Scripts\n      summary: Gets a script by Inum\n      description: Gets a script by Inum\n      operationId: get-config-scripts-by-inum\n      parameters:\n      - name: inum\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomScript'\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/scripts.readonly\n  /api/v1/config/scripts/name/{name}:\n    get:\n      tags:\n      - Custom Scripts\n      summary: Fetch custom script by name\n      description: Fetch custom script by name\n      operationId: get-custom-script-by-name\n      parameters:\n      - name: name\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: CustomScript\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomScript'\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/scripts.readonly\n  /api/v1/config/scripts/type/{type}:\n    get:\n      tags:\n      - Custom Scripts\n      summary: Gets list of scripts by type\n      description: Gets list of scripts by type\n      operationId: get-config-scripts-by-type\n      parameters:\n      - name: type\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: limit\n        in: query\n        schema:\n          type: integer\n          format: int32\n          default: 50\n      - name: pattern\n        in: query\n        schema:\n          type: string\n          default: \"\"\n      - name: startIndex\n        in: query\n        schema:\n          type: integer\n          format: int32\n          default: 1\n      - name: sortBy\n        in: query\n        schema:\n          type: string\n          default: inum\n      - name: sortOrder\n        in: query\n        schema:\n          type: string\n          default: ascending\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PagedResult'\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/scripts.readonly\n  /api/v1/jans-auth-server/health:\n    get:\n      tags:\n      - Auth Server Health - Check\n      summary: Returns auth server health status\n      description: Returns auth server health status\n      operationId: get-auth-server-health\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonNode'\n        \"500\":\n          description: InternalServerError\n  /api/v1/config/jwks/{kid}:\n    get:\n      tags:\n      - Configuration – JWK - JSON Web Key (JWK)\n      summary: Get a JSON Web Key based on kid\n      description: Get a JSON Web Key based on kid\n      operationId: get-jwk-by-kid\n      parameters:\n      - name: kid\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JSONWebKey'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/jwks.readonly\n    delete:\n      tags:\n      - Configuration – JWK - JSON Web Key (JWK)\n      summary: Delete a JSON Web Key based on kid\n      description: Delete a JSON Web Key based on kid\n      operationId: delete-config-jwk-kid\n      parameters:\n      - name: kid\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"406\":\n          description: Not Acceptable\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/jwks.delete\n    patch:\n      tags:\n      - Configuration – JWK - JSON Web Key (JWK)\n      summary: Patch a specific JSON Web Key based on kid\n      description: Patch a specific JSON Web Key based on kid\n      operationId: patch-config-jwk-kid\n      parameters:\n      - name: kid\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: JsonPatch object\n        content:\n          application/json-patch+json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/JsonPatch'\n            example:\n            - op: add\n              path: /kty\n              value: RSA\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JSONWebKey'\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/jwks.write\n  /api/v1/config/jwks:\n    get:\n      tags:\n      - Configuration – JWK - JSON Web Key (JWK)\n      summary: Gets list of JSON Web Key (JWK) used by server\n      description: Gets list of JSON Web Key (JWK) used by server\n      operationId: get-config-jwks\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WebKeysConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/jwks.readonly\n    put:\n      tags:\n      - Configuration – JWK - JSON Web Key (JWK)\n      summary: Replaces JSON Web Keys\n      description: Replaces JSON Web Keys\n      operationId: put-config-jwks\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WebKeysConfiguration'\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WebKeysConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/jwks.write\n    patch:\n      tags:\n      - Configuration – JWK - JSON Web Key (JWK)\n      summary: Patches JSON Web Keys\n      description: Patches JSON Web Keys\n      operationId: patch-config-jwks\n      requestBody:\n        description: JsonPatch object\n        content:\n          application/json-patch+json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/JsonPatch'\n            example:\n            - op: add\n              path: /keys/1\n              value:\n                kty: RSA\n                e: AQAB\n                use: sig\n                crv: \"\"\n                kid: dd570bfb-276a-44aa-a97d-667b57587108_sig_rs256\n                x5c:\n                - MIIDBDCC...\n                exp: 1599751946863\n                alg: RS256\n                \"n\": zj1NE..\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WebKeysConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/jwks.write\n  /api/v1/config/jwks/key:\n    post:\n      tags:\n      - Configuration – JWK - JSON Web Key (JWK)\n      summary: Configuration – JWK - JSON Web Key (JWK)\n      description: Configuration – JWK - JSON Web Key (JWK)\n      operationId: post-config-jwks-key\n      requestBody:\n        description: JSONWebKey object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JSONWebKey'\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JSONWebKey'\n        \"401\":\n          description: Unauthorized\n        \"406\":\n          description: Not Acceptable\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/jwks.write\n  /api/v1/config/database/ldap:\n    get:\n      tags:\n      - Database - LDAP configuration\n      summary: Gets list of existing LDAP configurations.\n      description: Gets list of existing LDAP configurations.\n      operationId: get-config-database-ldap\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GluuLdapConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/database/ldap.readonly\n    put:\n      tags:\n      - Database - LDAP configuration\n      summary: Updates LDAP configuration\n      description: Updates LDAP configuration\n      operationId: put-config-database-ldap\n      requestBody:\n        description: GluuLdapConfiguration object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GluuLdapConfiguration'\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GluuLdapConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/database/ldap.write\n    post:\n      tags:\n      - Database - LDAP configuration\n      summary: Adds a new LDAP configuration\n      description: Adds a new LDAP configuration\n      operationId: post-config-database-ldap\n      requestBody:\n        description: GluuLdapConfiguration object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GluuLdapConfiguration'\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GluuLdapConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"406\":\n          description: Not Acceptable\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/database/ldap.write\n  /api/v1/config/database/ldap/{name}:\n    get:\n      tags:\n      - Database - LDAP configuration\n      summary: Gets an LDAP configuration by name.\n      description: Gets an LDAP configuration by name.\n      operationId: get-config-database-ldap-by-name\n      parameters:\n      - name: name\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GluuLdapConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/database/ldap.readonly\n    delete:\n      tags:\n      - Database - LDAP configuration\n      summary: Deletes an LDAP configuration\n      description: Deletes an LDAP configuration\n      operationId: delete-config-database-ldap-by-name\n      parameters:\n      - name: name\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: No Content\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GluuLdapConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/database/ldap.delete\n    patch:\n      tags:\n      - Database - LDAP configuration\n      summary: Patches a LDAP configuration by name\n      description: Patches a LDAP configuration by name\n      operationId: patch-config-database-ldap-by-name\n      parameters:\n      - name: name\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: JsonPatch object\n        content:\n          application/json-patch+json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/JsonPatch'\n            example:\n            - op: replace\n              path: /maxConnections\n              value: \"8\"\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GluuLdapConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/database/ldap.write\n  /api/v1/config/database/ldap/test:\n    post:\n      tags:\n      - Database - LDAP configuration\n      summary: Tests an LDAP configuration\n      description: Tests an LDAP configuration\n      operationId: post-config-database-ldap-test\n      requestBody:\n        description: GluuLdapConfiguration object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GluuLdapConfiguration'\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: boolean\n                description: boolean value true if successful\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/database/ldap.readonly\n  /api/v1/logging:\n    get:\n      tags:\n      - Configuration – Logging\n      summary: Returns Jans Authorization Server logging settings\n      description: Returns Jans Authorization Server logging settings\n      operationId: get-config-logging\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Logging'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/logging.readonly\n    put:\n      tags:\n      - Configuration – Logging\n      summary: Updates Jans Authorization Server logging settings\n      description: Updates Jans Authorization Server logging settings\n      operationId: put-config-logging\n      requestBody:\n        description: Logging object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Logging'\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Logging'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/logging.write\n  /api/v1/org:\n    get:\n      tags:\n      - Organization Configuration\n      summary: Retrieves organization configuration\n      description: Retrieves organization configuration\n      operationId: get-organization-config\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GluuOrganization'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/organization.readonly\n    patch:\n      tags:\n      - Organization Configuration\n      summary: Patch organization configuration\n      description: Patch organization configuration\n      operationId: patch-organization-config\n      requestBody:\n        description: String representing JsonPatch request.\n        content:\n          application/json-patch+json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/JsonPatch'\n            example:\n            - op: add\n              path: /jsFaviconPath\n              value: /opt/jans/jetty/jans-auth/custom/static/\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GluuOrganization'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/organization.write\n  /api/v1/scopes:\n    get:\n      tags:\n      - OAuth - Scopes\n      summary: Gets list of Scopes\n      description: Gets list of Scopes\n      operationId: get-oauth-scopes\n      parameters:\n      - name: type\n        in: query\n        schema:\n          type: string\n          default: \"\"\n      - name: limit\n        in: query\n        schema:\n          type: integer\n          format: int32\n          default: 50\n      - name: pattern\n        in: query\n        schema:\n          type: string\n          default: \"\"\n      - name: startIndex\n        in: query\n        schema:\n          type: integer\n          format: int32\n          default: 1\n      - name: sortBy\n        in: query\n        schema:\n          type: string\n      - name: sortOrder\n        in: query\n        schema:\n          type: string\n      - name: withAssociatedClients\n        in: query\n        schema:\n          type: boolean\n          default: false\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PagedResult'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/scopes.readonly\n    put:\n      tags:\n      - OAuth - Scopes\n      summary: Update Scope\n      description: Update Scope\n      operationId: put-oauth-scopes\n      requestBody:\n        description: Scope object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Scope'\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Scope'\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/scopes.write\n    post:\n      tags:\n      - OAuth - Scopes\n      summary: Create Scope\n      description: Create Scope\n      operationId: post-oauth-scopes\n      requestBody:\n        description: Scope object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Scope'\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Scope'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/scopes.write\n  /api/v1/scopes/{inum}:\n    get:\n      tags:\n      - OAuth - Scopes\n      summary: Get Scope by Inum\n      description: Get Scope by Inum\n      operationId: get-oauth-scopes-by-inum\n      parameters:\n      - name: inum\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: withAssociatedClients\n        in: query\n        schema:\n          type: boolean\n          default: false\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomScope'\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/scopes.readonly\n    delete:\n      tags:\n      - OAuth - Scopes\n      summary: Delete Scope\n      description: Delete Scope\n      operationId: delete-oauth-scopes-by-inum\n      parameters:\n      - name: inum\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/scopes.delete\n    patch:\n      tags:\n      - OAuth - Scopes\n      summary: Patch Scope\n      description: Patch Scope\n      operationId: patch-oauth-scopes-by-id\n      parameters:\n      - name: inum\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: String representing patch-document.\n        content:\n          application/json-patch+json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/JsonPatch'\n            example: \"[ {op:replace, path: clients, value: [\\\"client_1\\\",\\\"client_2\\\"\\\n              ] },{op:add, path: clients/2, value: \\\"client_3\\\" } ]\"\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Scope'\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/scopes.write\n  /api/v1/scopes/creator/{creatorId}:\n    get:\n      tags:\n      - OAuth - Scopes\n      summary: Get Scope by creatorId\n      description: Get Scope by creatorId\n      operationId: get-scope-by-creator\n      parameters:\n      - name: creatorId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CustomScope'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/scopes.readonly\n  /api/v1/scopes/type/{type}:\n    get:\n      tags:\n      - OAuth - Scopes\n      summary: Get Scope by type\n      description: Get Scope by type\n      operationId: get-scope-by-type\n      parameters:\n      - name: type\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CustomScope'\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/scopes.readonly\n  /api/v1/jans-auth-server/session:\n    get:\n      tags:\n      - Auth - Session Management\n      summary: Returns current session\n      description: Returns current session\n      operationId: get-sessions\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SessionId'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/jans-auth-server/session.readonly\n        - revoke_session\n  /api/v1/jans-auth-server/session/{userDn}:\n    post:\n      tags:\n      - Auth - Session Management\n      summary: Revoke all sessions by userDn\n      description: Revoke all sessions by userDn\n      operationId: revoke-user-session\n      parameters:\n      - name: userDn\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Ok\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/jans-auth-server/session.delete\n        - revoke_session\n  /api/v1/config/database/sql:\n    get:\n      tags:\n      - Database - Sql configuration\n      summary: Gets list of existing sql configurations\n      description: Gets list of existing sql configurations\n      operationId: get-config-database-sql\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SqlConnectionConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/database/sql.readonly\n    put:\n      tags:\n      - Database - Sql configuration\n      summary: Updates Sql configuration\n      description: Updates Sql configuration\n      operationId: put-config-database-sql\n      requestBody:\n        description: SqlConnectionConfiguration object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SqlConnectionConfiguration'\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SqlConnectionConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/database/sql.write\n    post:\n      tags:\n      - Database - Sql configuration\n      summary: Adds a new Sql configuration\n      description: Adds a new Sql configuration\n      operationId: post-config-database-sql\n      requestBody:\n        description: SqlConnectionConfiguration object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SqlConnectionConfiguration'\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SqlConnectionConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/database/sql.write\n  /api/v1/config/database/sql/{name}:\n    get:\n      tags:\n      - Database - Sql configuration\n      summary: Gets a Sql configurations by name\n      description: Gets a Sql configurations by name\n      operationId: get-config-database-sql-by-name\n      parameters:\n      - name: name\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SqlConnectionConfiguration'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/database/sql.readonly\n    delete:\n      tags:\n      - Database - Sql configuration\n      summary: Updates Sql configuration\n      description: Updates Sql configuration\n      operationId: delete-config-database-sql-by-name\n      parameters:\n      - name: name\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/database/sql.delete\n    patch:\n      tags:\n      - Database - Sql configuration\n      summary: Patch Sql configuration\n      description: Patch Sql configuration\n      operationId: patch-config-database-sql-by-name\n      parameters:\n      - name: name\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: String representing patch-document.\n        content:\n          application/json-patch+json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/JsonPatch'\n            example: \"[ {op:replace, path: maxConnections, value: 8 } ]\"\n      responses:\n        \"200\":\n          description: Ok\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/database/sql.write\n  /api/v1/config/database/sql/test:\n    post:\n      tags:\n      - Database - Sql configuration\n      summary: Tests a Sql configuration\n      description: Tests a Sql configuration\n      operationId: post-config-database-sql-test\n      requestBody:\n        description: SqlConnectionConfiguration object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SqlConnectionConfiguration'\n      responses:\n        \"200\":\n          description: Test status\n          content:\n            application/json:\n              schema:\n                type: boolean\n                description: boolean value true if successful\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/database/sql.readonly\n  /api/v1/stat:\n    get:\n      tags:\n      - Statistics - User\n      summary: Provides server with basic statistic\n      description: Provides server with basic statistic\n      operationId: get-stat\n      parameters:\n      - name: Authorization\n        in: header\n        schema:\n          type: string\n      - name: month\n        in: query\n        schema:\n          type: string\n      - name: start_month\n        in: query\n        schema:\n          type: string\n      - name: end_month\n        in: query\n        schema:\n          type: string\n      - name: format\n        in: query\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Stats\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/JsonNode'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/stats.readonly\n        - jans_stat\n  /api/v1/uma/resources:\n    get:\n      tags:\n      - OAuth - UMA Resources\n      summary: Gets list of UMA resources\n      description: Gets list of UMA resources\n      operationId: get-oauth-uma-resources\n      parameters:\n      - name: limit\n        in: query\n        schema:\n          type: integer\n          format: int32\n          default: 50\n      - name: pattern\n        in: query\n        schema:\n          type: string\n          default: \"\"\n      - name: startIndex\n        in: query\n        schema:\n          type: integer\n          format: int32\n          default: 1\n      - name: sortBy\n        in: query\n        schema:\n          type: string\n      - name: sortOrder\n        in: query\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PagedResult'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/uma/resources.readonly\n    put:\n      tags:\n      - OAuth - UMA Resources\n      summary: Updates an UMA resource\n      description: Updates an UMA resource\n      operationId: put-oauth-uma-resources\n      requestBody:\n        description: UmaResource object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UmaResource'\n      responses:\n        \"200\":\n          description: UmaResource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UmaResource'\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/uma/resources.write\n    post:\n      tags:\n      - OAuth - UMA Resources\n      summary: Creates an UMA resource\n      description: Creates an UMA resource\n      operationId: post-oauth-uma-resources\n      requestBody:\n        description: UmaResource object\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UmaResource'\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UmaResource'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/uma/resources.write\n  /api/v1/uma/resources/{id}:\n    get:\n      tags:\n      - OAuth - UMA Resources\n      summary: Gets an UMA resource by ID\n      description: Gets an UMA resource by ID\n      operationId: get-oauth-uma-resources-by-id\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UmaResource'\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/uma/resources.readonly\n    delete:\n      tags:\n      - OAuth - UMA Resources\n      summary: Deletes an UMA resource\n      description: Deletes an UMA resource\n      operationId: delete-oauth-uma-resources-by-id\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/uma/resources.delete\n    patch:\n      tags:\n      - OAuth - UMA Resources\n      summary: Patch UMA resource\n      description: Patch UMA resource\n      operationId: patch-oauth-uma-resources-by-id\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: String representing patch-document.\n        content:\n          application/json-patch+json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/JsonPatch'\n            example: \"[ {op:replace, path: clients, value: [\\\"client_1\\\",\\\"client_2\\\"\\\n              ] },{op:add, path: clients/2, value: \\\"client_3\\\" } ]\"\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UmaResource'\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/uma/resources.write\n  /api/v1/uma/resources/clientId/{clientId}:\n    get:\n      tags:\n      - OAuth - UMA Resources\n      summary: Fetch uma resources by client id\n      description: Fetch uma resources by client id\n      operationId: get-oauth-uma-resources-by-clientid\n      parameters:\n      - name: clientId\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Ok\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UmaResource'\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          description: InternalServerError\n      security:\n      - oauth2:\n        - https://jans.io/oauth/config/uma/resources.readonly\ncomponents:\n  schemas:\n    HealthStatus:\n      type: object\n      properties:\n        status:\n          type: string\n        checks:\n          type: array\n          items:\n            $ref: '#/components/schemas/Status'\n    Status:\n      type: object\n      properties:\n        name:\n          type: string\n        status:\n          type: string\n        error:\n          type: string\n    FacterData:\n      type: object\n      properties:\n        memoryfree:\n          type: string\n        swapfree:\n          type: string\n        hostname:\n          type: string\n        ipaddress:\n          type: string\n        uptime:\n          type: string\n        free_disk_space:\n          type: string\n        load_average:\n          type: string\n    StatsData:\n      type: object\n      properties:\n        dbType:\n          type: string\n        lastUpdate:\n          type: string\n          format: date-time\n        facterData:\n          $ref: '#/components/schemas/FacterData'\n    AuthenticationMethod:\n      type: object\n      properties:\n        defaultAcr:\n          type: string\n    Flow:\n      type: object\n      properties:\n        dn:\n          type: string\n        qname:\n          type: string\n        transHash:\n          type: string\n        revision:\n          type: integer\n          format: int32\n        enabled:\n          type: boolean\n        metadata:\n          $ref: '#/components/schemas/FlowMetadata'\n        source:\n          type: string\n        transpiled:\n          type: string\n        codeError:\n          type: string\n        baseDn:\n          type: string\n    FlowMetadata:\n      type: object\n      properties:\n        funcName:\n          type: string\n        inputs:\n          type: array\n          items:\n            type: string\n        timeout:\n          type: integer\n          format: int32\n        displayName:\n          type: string\n        author:\n          type: string\n        timestamp:\n          type: integer\n          format: int64\n        description:\n          type: string\n        properties:\n          type: object\n          additionalProperties:\n            type: object\n    PagedResult:\n      type: object\n      properties:\n        start:\n          type: integer\n          format: int32\n        totalEntriesCount:\n          type: integer\n          format: int32\n        entriesCount:\n          type: integer\n          format: int32\n        entries:\n          type: array\n          items:\n            type: object\n    JsonPatch:\n      type: object\n    AttributeValidation:\n      type: object\n      properties:\n        minLength:\n          type: integer\n          format: int32\n        maxLength:\n          type: integer\n          format: int32\n        regexp:\n          type: string\n    GluuAttribute:\n      required:\n      - dataType\n      - description\n      - displayName\n      - editType\n      - name\n      - viewType\n      type: object\n      properties:\n        dn:\n          type: string\n        selected:\n          type: boolean\n        inum:\n          type: string\n        sourceAttribute:\n          type: string\n        nameIdType:\n          type: string\n        name:\n          maxLength: 30\n          minLength: 1\n          pattern: \"^[a-zA-Z0-9_]+$\"\n          type: string\n        displayName:\n          maxLength: 60\n          minLength: 0\n          type: string\n        description:\n          maxLength: 4000\n          minLength: 0\n          type: string\n        origin:\n          type: string\n        dataType:\n          type: string\n          enum:\n          - string\n          - numeric\n          - boolean\n          - binary\n          - certificate\n          - generalizedTime\n          - json\n        editType:\n          type: array\n          items:\n            type: string\n            enum:\n            - admin\n            - owner\n            - manager\n            - user\n            - whitePages\n        viewType:\n          type: array\n          items:\n            type: string\n            enum:\n            - admin\n            - owner\n            - manager\n            - user\n            - whitePages\n        usageType:\n          type: array\n          items:\n            type: string\n            enum:\n            - openid\n        claimName:\n          type: string\n        seeAlso:\n          type: string\n        status:\n          type: string\n          enum:\n          - active\n          - inactive\n          - expired\n          - register\n        saml1Uri:\n          type: string\n        saml2Uri:\n          type: string\n        urn:\n          type: string\n        scimCustomAttr:\n          type: boolean\n        oxMultiValuedAttribute:\n          type: boolean\n        jansHideOnDiscovery:\n          type: boolean\n        custom:\n          type: boolean\n        requred:\n          type: boolean\n        attributeValidation:\n          $ref: '#/components/schemas/AttributeValidation'\n        tooltip:\n          type: string\n        adminCanView:\n          type: boolean\n        adminCanEdit:\n          type: boolean\n        userCanAccess:\n          type: boolean\n        userCanView:\n          type: boolean\n        adminCanAccess:\n          type: boolean\n        userCanEdit:\n          type: boolean\n        whitePagesCanView:\n          type: boolean\n        baseDn:\n          type: string\n    PatchRequest:\n      type: object\n      properties:\n        op:\n          type: string\n        path:\n          type: string\n        value:\n          type: string\n    CacheConfiguration:\n      type: object\n      properties:\n        cacheProviderType:\n          type: string\n          enum:\n          - IN_MEMORY\n          - MEMCACHED\n          - REDIS\n          - NATIVE_PERSISTENCE\n        memcachedConfiguration:\n          $ref: '#/components/schemas/MemcachedConfiguration'\n        inMemoryConfiguration:\n          $ref: '#/components/schemas/InMemoryConfiguration'\n        redisConfiguration:\n          $ref: '#/components/schemas/RedisConfiguration'\n        nativePersistenceConfiguration:\n          $ref: '#/components/schemas/NativePersistenceConfiguration'\n    InMemoryConfiguration:\n      type: object\n      properties:\n        defaultPutExpiration:\n          type: integer\n          format: int32\n    MemcachedConfiguration:\n      type: object\n      properties:\n        servers:\n          type: string\n        maxOperationQueueLength:\n          type: integer\n          format: int32\n        bufferSize:\n          type: integer\n          format: int32\n        defaultPutExpiration:\n          type: integer\n          format: int32\n        connectionFactoryType:\n          type: string\n          enum:\n          - DEFAULT\n          - BINARY\n    NativePersistenceConfiguration:\n      type: object\n      properties:\n        defaultPutExpiration:\n          type: integer\n          format: int32\n        defaultCleanupBatchSize:\n          type: integer\n          format: int32\n        deleteExpiredOnGetRequest:\n          type: boolean\n        disableAttemptUpdateBeforeInsert:\n          type: boolean\n    RedisConfiguration:\n      type: object\n      properties:\n        redisProviderType:\n          type: string\n          enum:\n          - STANDALONE\n          - CLUSTER\n          - SHARDED\n          - SENTINEL\n        servers:\n          type: string\n        defaultPutExpiration:\n          type: integer\n          format: int32\n        sentinelMasterGroupName:\n          type: string\n        password:\n          type: string\n        useSSL:\n          type: boolean\n        sslTrustStoreFilePath:\n          type: string\n        sslTrustStorePassword:\n          type: string\n        sslKeyStoreFilePath:\n          type: string\n        sslKeyStorePassword:\n          type: string\n        maxIdleConnections:\n          type: integer\n          format: int32\n        maxTotalConnections:\n          type: integer\n          format: int32\n        connectionTimeout:\n          type: integer\n          format: int32\n        soTimeout:\n          type: integer\n          format: int32\n        maxRetryAttempts:\n          type: integer\n          format: int32\n    Client:\n      type: object\n      properties:\n        dn:\n          type: string\n        expirationDate:\n          type: string\n          format: date-time\n        deletable:\n          type: boolean\n        clientSecret:\n          type: string\n        frontChannelLogoutUri:\n          type: string\n        frontChannelLogoutSessionRequired:\n          type: boolean\n        registrationAccessToken:\n          type: string\n        clientIdIssuedAt:\n          type: string\n          format: date-time\n        clientSecretExpiresAt:\n          type: string\n          format: date-time\n        redirectUris:\n          type: array\n          items:\n            type: string\n        claimRedirectUris:\n          type: array\n          items:\n            type: string\n        responseTypes:\n          type: array\n          items:\n            type: string\n            enum:\n            - code\n            - token\n            - id_token\n        grantTypes:\n          type: array\n          items:\n            type: string\n            enum:\n            - none\n            - authorization_code\n            - implicit\n            - password\n            - client_credentials\n            - refresh_token\n            - urn:ietf:params:oauth:grant-type:uma-ticket\n            - urn:openid:params:grant-type:ciba\n            - urn:ietf:params:oauth:grant-type:device_code\n        applicationType:\n          type: string\n          enum:\n          - native\n          - web\n        contacts:\n          type: array\n          items:\n            type: string\n        idTokenTokenBindingCnf:\n          type: string\n        clientName:\n          $ref: '#/components/schemas/LocalizedString'\n        logoUri:\n          $ref: '#/components/schemas/LocalizedString'\n        clientUri:\n          $ref: '#/components/schemas/LocalizedString'\n        policyUri:\n          $ref: '#/components/schemas/LocalizedString'\n        tosUri:\n          $ref: '#/components/schemas/LocalizedString'\n        jwksUri:\n          type: string\n        jwks:\n          type: string\n        sectorIdentifierUri:\n          type: string\n        subjectType:\n          type: string\n          enum:\n          - pairwise\n          - public\n        idTokenSignedResponseAlg:\n          type: string\n        idTokenEncryptedResponseAlg:\n          type: string\n        idTokenEncryptedResponseEnc:\n          type: string\n        userInfoSignedResponseAlg:\n          type: string\n        userInfoEncryptedResponseAlg:\n          type: string\n        userInfoEncryptedResponseEnc:\n          type: string\n        requestObjectSigningAlg:\n          type: string\n        requestObjectEncryptionAlg:\n          type: string\n        requestObjectEncryptionEnc:\n          type: string\n        tokenEndpointAuthMethod:\n          type: string\n        tokenEndpointAuthSigningAlg:\n          type: string\n        defaultMaxAge:\n          type: integer\n          format: int32\n        defaultAcrValues:\n          type: array\n          items:\n            type: string\n        initiateLoginUri:\n          type: string\n        postLogoutRedirectUris:\n          type: array\n          items:\n            type: string\n        requestUris:\n          type: array\n          items:\n            type: string\n        scopes:\n          type: array\n          items:\n            type: string\n        claims:\n          type: array\n          items:\n            type: string\n        trustedClient:\n          type: boolean\n        lastAccessTime:\n          type: string\n          format: date-time\n        lastLogonTime:\n          type: string\n          format: date-time\n        persistClientAuthorizations:\n          type: boolean\n        includeClaimsInIdToken:\n          type: boolean\n        refreshTokenLifetime:\n          type: integer\n          format: int32\n        accessTokenLifetime:\n          type: integer\n          format: int32\n        customAttributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomAttribute'\n        customObjectClasses:\n          type: array\n          items:\n            type: string\n        rptAsJwt:\n          type: boolean\n        accessTokenAsJwt:\n          type: boolean\n        accessTokenSigningAlg:\n          type: string\n        disabled:\n          type: boolean\n        authorizedOrigins:\n          type: array\n          items:\n            type: string\n        softwareId:\n          type: string\n        softwareVersion:\n          type: string\n        softwareStatement:\n          type: string\n        attributes:\n          $ref: '#/components/schemas/ClientAttributes'\n        backchannelTokenDeliveryMode:\n          type: string\n          enum:\n          - poll\n          - ping\n          - push\n        backchannelClientNotificationEndpoint:\n          type: string\n        backchannelAuthenticationRequestSigningAlg:\n          type: string\n          enum:\n          - RS256\n          - RS384\n          - RS512\n          - ES256\n          - ES384\n          - ES512\n          - PS256\n          - PS384\n          - PS512\n        backchannelUserCodeParameter:\n          type: boolean\n        description:\n          type: string\n        organization:\n          type: string\n        groups:\n          type: array\n          items:\n            type: string\n        ttl:\n          type: integer\n          format: int32\n        displayName:\n          type: string\n        authenticationMethod:\n          type: string\n          enum:\n          - client_secret_basic\n          - client_secret_post\n          - client_secret_jwt\n          - private_key_jwt\n          - access_token\n          - tls_client_auth\n          - self_signed_tls_client_auth\n          - none\n        tokenBindingSupported:\n          type: boolean\n        baseDn:\n          type: string\n        inum:\n          type: string\n    ClientAttributes:\n      type: object\n      properties:\n        tlsClientAuthSubjectDn:\n          type: string\n        runIntrospectionScriptBeforeJwtCreation:\n          type: boolean\n        keepClientAuthorizationAfterExpiration:\n          type: boolean\n        allowSpontaneousScopes:\n          type: boolean\n        spontaneousScopes:\n          type: array\n          items:\n            type: string\n        spontaneousScopeScriptDns:\n          type: array\n          items:\n            type: string\n        updateTokenScriptDns:\n          type: array\n          items:\n            type: string\n        backchannelLogoutUri:\n          type: array\n          items:\n            type: string\n        backchannelLogoutSessionRequired:\n          type: boolean\n        additionalAudience:\n          type: array\n          items:\n            type: string\n        postAuthnScripts:\n          type: array\n          items:\n            type: string\n        consentGatheringScripts:\n          type: array\n          items:\n            type: string\n        introspectionScripts:\n          type: array\n          items:\n            type: string\n        rptClaimsScripts:\n          type: array\n          items:\n            type: string\n        ropcScripts:\n          type: array\n          items:\n            type: string\n        parLifetime:\n          type: integer\n          format: int32\n        requirePar:\n          type: boolean\n        jansAuthSignedRespAlg:\n          type: string\n        jansAuthEncRespAlg:\n          type: string\n        jansAuthEncRespEnc:\n          type: string\n        jansSubAttr:\n          type: string\n        redirectUrisRegex:\n          type: string\n        jansAuthorizedAcr:\n          type: array\n          items:\n            type: string\n        jansDefaultPromptLogin:\n          type: boolean\n    CustomAttribute:\n      type: object\n      properties:\n        name:\n          type: string\n        multiValued:\n          type: boolean\n        values:\n          type: array\n          items:\n            type: string\n        value:\n          type: string\n        displayValue:\n          type: string\n    LocalizedString:\n      type: object\n      properties:\n        values:\n          type: object\n          additionalProperties:\n            type: string\n        value:\n          type: string\n        languageTags:\n          uniqueItems: true\n          type: array\n          items:\n            type: string\n    AppConfiguration:\n      type: object\n      properties:\n        issuer:\n          type: string\n        baseEndpoint:\n          type: string\n        authorizationEndpoint:\n          type: string\n        tokenEndpoint:\n          type: string\n        tokenRevocationEndpoint:\n          type: string\n        userInfoEndpoint:\n          type: string\n        clientInfoEndpoint:\n          type: string\n        checkSessionIFrame:\n          type: string\n        endSessionEndpoint:\n          type: string\n        jwksUri:\n          type: string\n        registrationEndpoint:\n          type: string\n        openIdDiscoveryEndpoint:\n          type: string\n        openIdConfigurationEndpoint:\n          type: string\n        idGenerationEndpoint:\n          type: string\n        introspectionEndpoint:\n          type: string\n        parEndpoint:\n          type: string\n        requirePar:\n          type: boolean\n        deviceAuthzEndpoint:\n          type: string\n        mtlsAuthorizationEndpoint:\n          type: string\n        mtlsTokenEndpoint:\n          type: string\n        mtlsTokenRevocationEndpoint:\n          type: string\n        mtlsUserInfoEndpoint:\n          type: string\n        mtlsClientInfoEndpoint:\n          type: string\n        mtlsCheckSessionIFrame:\n          type: string\n        mtlsEndSessionEndpoint:\n          type: string\n        mtlsJwksUri:\n          type: string\n        mtlsRegistrationEndpoint:\n          type: string\n        mtlsIdGenerationEndpoint:\n          type: string\n        mtlsIntrospectionEndpoint:\n          type: string\n        mtlsParEndpoint:\n          type: string\n        mtlsDeviceAuthzEndpoint:\n          type: string\n        sessionAsJwt:\n          type: boolean\n        requireRequestObjectEncryption:\n          type: boolean\n        requirePkce:\n          type: boolean\n        allowAllValueForRevokeEndpoint:\n          type: boolean\n        sectorIdentifierCacheLifetimeInMinutes:\n          type: integer\n          format: int32\n        umaConfigurationEndpoint:\n          type: string\n        umaRptAsJwt:\n          type: boolean\n        umaRptLifetime:\n          type: integer\n          format: int32\n        umaTicketLifetime:\n          type: integer\n          format: int32\n        umaPctLifetime:\n          type: integer\n          format: int32\n        umaResourceLifetime:\n          type: integer\n          format: int32\n        umaAddScopesAutomatically:\n          type: boolean\n        umaValidateClaimToken:\n          type: boolean\n        umaGrantAccessIfNoPolicies:\n          type: boolean\n        umaRestrictResourceToAssociatedClient:\n          type: boolean\n        statTimerIntervalInSeconds:\n          type: integer\n          format: int32\n        statAuthorizationScope:\n          type: string\n        allowSpontaneousScopes:\n          type: boolean\n        spontaneousScopeLifetime:\n          type: integer\n          format: int32\n        openidSubAttribute:\n          type: string\n        publicSubjectIdentifierPerClientEnabled:\n          type: boolean\n        subjectIdentifiersPerClientSupported:\n          type: array\n          items:\n            type: string\n        responseTypesSupported:\n          uniqueItems: true\n          type: array\n          items:\n            uniqueItems: true\n            type: array\n            items:\n              type: string\n              enum:\n              - code\n              - token\n              - id_token\n        responseModesSupported:\n          uniqueItems: true\n          type: array\n          items:\n            type: string\n            enum:\n            - query\n            - fragment\n            - form_post\n            - query.jwt\n            - fragment.jwt\n            - form_post.jwt\n            - jwt\n        grantTypesSupported:\n          uniqueItems: true\n          type: array\n          items:\n            type: string\n            enum:\n            - none\n            - authorization_code\n            - implicit\n            - password\n            - client_credentials\n            - refresh_token\n            - urn:ietf:params:oauth:grant-type:uma-ticket\n            - urn:openid:params:grant-type:ciba\n            - urn:ietf:params:oauth:grant-type:device_code\n        subjectTypesSupported:\n          type: array\n          items:\n            type: string\n        defaultSubjectType:\n          type: string\n        authorizationSigningAlgValuesSupported:\n          type: array\n          items:\n            type: string\n        authorizationEncryptionAlgValuesSupported:\n          type: array\n          items:\n            type: string\n        authorizationEncryptionEncValuesSupported:\n          type: array\n          items:\n            type: string\n        userInfoSigningAlgValuesSupported:\n          type: array\n          items:\n            type: string\n        userInfoEncryptionAlgValuesSupported:\n          type: array\n          items:\n            type: string\n        userInfoEncryptionEncValuesSupported:\n          type: array\n          items:\n            type: string\n        idTokenSigningAlgValuesSupported:\n          type: array\n          items:\n            type: string\n        idTokenEncryptionAlgValuesSupported:\n          type: array\n          items:\n            type: string\n        idTokenEncryptionEncValuesSupported:\n          type: array\n          items:\n            type: string\n        accessTokenSigningAlgValuesSupported:\n          type: array\n          items:\n            type: string\n        forceSignedRequestObject:\n          type: boolean\n        requestObjectSigningAlgValuesSupported:\n          type: array\n          items:\n            type: string\n        requestObjectEncryptionAlgValuesSupported:\n          type: array\n          items:\n            type: string\n        requestObjectEncryptionEncValuesSupported:\n          type: array\n          items:\n            type: string\n        tokenEndpointAuthMethodsSupported:\n          type: array\n          items:\n            type: string\n        tokenEndpointAuthSigningAlgValuesSupported:\n          type: array\n          items:\n            type: string\n        dynamicRegistrationCustomAttributes:\n          type: array\n          items:\n            type: string\n        displayValuesSupported:\n          type: array\n          items:\n            type: string\n        claimTypesSupported:\n          type: array\n          items:\n            type: string\n        jwksAlgorithmsSupported:\n          type: array\n          items:\n            type: string\n        serviceDocumentation:\n          type: string\n        claimsLocalesSupported:\n          type: array\n          items:\n            type: string\n        idTokenTokenBindingCnfValuesSupported:\n          type: array\n          items:\n            type: string\n        uiLocalesSupported:\n          type: array\n          items:\n            type: string\n        claimsParameterSupported:\n          type: boolean\n        requestParameterSupported:\n          type: boolean\n        requestUriParameterSupported:\n          type: boolean\n        requestUriHashVerificationEnabled:\n          type: boolean\n        requireRequestUriRegistration:\n          type: boolean\n        requestUriBlockList:\n          type: array\n          items:\n            type: string\n        opPolicyUri:\n          type: string\n        opTosUri:\n          type: string\n        authorizationCodeLifetime:\n          type: integer\n          format: int32\n        refreshTokenLifetime:\n          type: integer\n          format: int32\n        idTokenLifetime:\n          type: integer\n          format: int32\n        idTokenFilterClaimsBasedOnAccessToken:\n          type: boolean\n        accessTokenLifetime:\n          type: integer\n          format: int32\n        cleanServiceInterval:\n          type: integer\n          format: int32\n        cleanServiceBatchChunkSize:\n          type: integer\n          format: int32\n        keyRegenerationEnabled:\n          type: boolean\n        keyRegenerationInterval:\n          type: integer\n          format: int32\n        defaultSignatureAlgorithm:\n          type: string\n        oxOpenIdConnectVersion:\n          type: string\n        oxId:\n          type: string\n        dynamicRegistrationExpirationTime:\n          type: integer\n          format: int32\n        dynamicRegistrationPersistClientAuthorizations:\n          type: boolean\n        trustedClientEnabled:\n          type: boolean\n        skipAuthorizationForOpenIdScopeAndPairwiseId:\n          type: boolean\n        dynamicRegistrationScopesParamEnabled:\n          type: boolean\n        dynamicRegistrationPasswordGrantTypeEnabled:\n          type: boolean\n        dynamicRegistrationAllowedPasswordGrantScopes:\n          type: array\n          items:\n            type: string\n        dynamicRegistrationCustomObjectClass:\n          type: string\n        personCustomObjectClassList:\n          type: array\n          items:\n            type: string\n        persistIdTokenInLdap:\n          type: boolean\n        persistRefreshTokenInLdap:\n          type: boolean\n        allowPostLogoutRedirectWithoutValidation:\n          type: boolean\n        invalidateSessionCookiesAfterAuthorizationFlow:\n          type: boolean\n        returnClientSecretOnRead:\n          type: boolean\n        rejectJwtWithNoneAlg:\n          type: boolean\n        expirationNotificatorEnabled:\n          type: boolean\n        useNestedJwtDuringEncryption:\n          type: boolean\n        expirationNotificatorMapSizeLimit:\n          type: integer\n          format: int32\n        expirationNotificatorIntervalInSeconds:\n          type: integer\n          format: int32\n        redirectUrisRegexEnabled:\n          type: boolean\n        useHighestLevelScriptIfAcrScriptNotFound:\n          type: boolean\n        authenticationFiltersEnabled:\n          type: boolean\n        clientAuthenticationFiltersEnabled:\n          type: boolean\n        clientRegDefaultToCodeFlowWithRefresh:\n          type: boolean\n        grantTypesAndResponseTypesAutofixEnabled:\n          type: boolean\n        authenticationFilters:\n          type: array\n          items:\n            $ref: '#/components/schemas/AuthenticationFilter'\n        clientAuthenticationFilters:\n          type: array\n          items:\n            $ref: '#/components/schemas/ClientAuthenticationFilter'\n        corsConfigurationFilters:\n          type: array\n          items:\n            $ref: '#/components/schemas/CorsConfigurationFilter'\n        sessionIdUnusedLifetime:\n          type: integer\n          format: int32\n        sessionIdUnauthenticatedUnusedLifetime:\n          type: integer\n          format: int32\n        sessionIdPersistOnPromptNone:\n          type: boolean\n        sessionIdRequestParameterEnabled:\n          type: boolean\n        changeSessionIdOnAuthentication:\n          type: boolean\n        sessionIdPersistInCache:\n          type: boolean\n        includeSidInResponse:\n          type: boolean\n        sessionIdLifetime:\n          type: integer\n          format: int32\n        serverSessionIdLifetime:\n          type: integer\n          format: int32\n        activeSessionAuthorizationScope:\n          type: string\n        configurationUpdateInterval:\n          type: integer\n          format: int32\n        enableClientGrantTypeUpdate:\n          type: boolean\n        dynamicGrantTypeDefault:\n          uniqueItems: true\n          type: array\n          items:\n            type: string\n            enum:\n            - none\n            - authorization_code\n            - implicit\n            - password\n            - client_credentials\n            - refresh_token\n            - urn:ietf:params:oauth:grant-type:uma-ticket\n            - urn:openid:params:grant-type:ciba\n            - urn:ietf:params:oauth:grant-type:device_code\n        cssLocation:\n          type: string\n        jsLocation:\n          type: string\n        imgLocation:\n          type: string\n        metricReporterInterval:\n          type: integer\n          format: int32\n        metricReporterKeepDataDays:\n          type: integer\n          format: int32\n        pairwiseIdType:\n          type: string\n        pairwiseCalculationKey:\n          type: string\n        pairwiseCalculationSalt:\n          type: string\n        shareSubjectIdBetweenClientsWithSameSectorId:\n          type: boolean\n        webKeysStorage:\n          type: string\n          enum:\n          - keystore\n          - pkcs11\n        dnName:\n          type: string\n        keyStoreFile:\n          type: string\n        keyStoreSecret:\n          type: string\n        keySelectionStrategy:\n          type: string\n          enum:\n          - OLDER\n          - NEWER\n          - FIRST\n        keyAlgsAllowedForGeneration:\n          type: array\n          items:\n            type: string\n        keySignWithSameKeyButDiffAlg:\n          type: boolean\n        staticKid:\n          type: string\n        staticDecryptionKid:\n          type: string\n        oxElevenTestModeToken:\n          type: string\n        oxElevenGenerateKeyEndpoint:\n          type: string\n        oxElevenSignEndpoint:\n          type: string\n        oxElevenVerifySignatureEndpoint:\n          type: string\n        oxElevenDeleteKeyEndpoint:\n          type: string\n        introspectionAccessTokenMustHaveUmaProtectionScope:\n          type: boolean\n        introspectionSkipAuthorization:\n          type: boolean\n        endSessionWithAccessToken:\n          type: boolean\n        cookieDomain:\n          type: string\n        enabledOAuthAuditLogging:\n          type: boolean\n        jmsBrokerURISet:\n          uniqueItems: true\n          type: array\n          items:\n            type: string\n        jmsUserName:\n          type: string\n        jmsPassword:\n          type: string\n        clientWhiteList:\n          type: array\n          items:\n            type: string\n        clientBlackList:\n          type: array\n          items:\n            type: string\n        legacyIdTokenClaims:\n          type: boolean\n        customHeadersWithAuthorizationResponse:\n          type: boolean\n        frontChannelLogoutSessionSupported:\n          type: boolean\n        loggingLevel:\n          type: string\n        loggingLayout:\n          type: string\n        updateUserLastLogonTime:\n          type: boolean\n        updateClientAccessTime:\n          type: boolean\n        logClientIdOnClientAuthentication:\n          type: boolean\n        logClientNameOnClientAuthentication:\n          type: boolean\n        disableJdkLogger:\n          type: boolean\n        authorizationRequestCustomAllowedParameters:\n          uniqueItems: true\n          type: array\n          items:\n            $ref: '#/components/schemas/AuthorizationRequestCustomParameter'\n        openidScopeBackwardCompatibility:\n          type: boolean\n        disableU2fEndpoint:\n          type: boolean\n        dcrSignatureValidationEnabled:\n          type: boolean\n        dcrSignatureValidationSharedSecret:\n          type: string\n        dcrSignatureValidationSoftwareStatementJwksURIClaim:\n          type: string\n        dcrSignatureValidationSoftwareStatementJwksClaim:\n          type: string\n        dcrSignatureValidationJwks:\n          type: string\n        dcrSignatureValidationJwksUri:\n          type: string\n        dcrAuthorizationWithClientCredentials:\n          type: boolean\n        dcrAuthorizationWithMTLS:\n          type: boolean\n        dcrIssuers:\n          type: array\n          items:\n            type: string\n        useLocalCache:\n          type: boolean\n        fapiCompatibility:\n          type: boolean\n        forceIdTokenHintPrecense:\n          type: boolean\n        rejectEndSessionIfIdTokenExpired:\n          type: boolean\n        allowEndSessionWithUnmatchedSid:\n          type: boolean\n        forceOfflineAccessScopeToEnableRefreshToken:\n          type: boolean\n        errorReasonEnabled:\n          type: boolean\n        removeRefreshTokensForClientOnLogout:\n          type: boolean\n        skipRefreshTokenDuringRefreshing:\n          type: boolean\n        refreshTokenExtendLifetimeOnRotation:\n          type: boolean\n        checkUserPresenceOnRefreshToken:\n          type: boolean\n        consentGatheringScriptBackwardCompatibility:\n          type: boolean\n        introspectionScriptBackwardCompatibility:\n          type: boolean\n        introspectionResponseScopesBackwardCompatibility:\n          type: boolean\n        softwareStatementValidationType:\n          type: string\n        softwareStatementValidationClaimName:\n          type: string\n        authenticationProtectionConfiguration:\n          $ref: '#/components/schemas/AuthenticationProtectionConfiguration'\n        errorHandlingMethod:\n          type: string\n          enum:\n          - internal\n          - remote\n        disableAuthnForMaxAgeZero:\n          type: boolean\n        keepAuthenticatorAttributesOnAcrChange:\n          type: boolean\n        deviceAuthzRequestExpiresIn:\n          type: integer\n          format: int32\n        deviceAuthzTokenPollInterval:\n          type: integer\n          format: int32\n        deviceAuthzResponseTypeToProcessAuthz:\n          type: string\n        backchannelClientId:\n          type: string\n        backchannelRedirectUri:\n          type: string\n        backchannelAuthenticationEndpoint:\n          type: string\n        backchannelDeviceRegistrationEndpoint:\n          type: string\n        backchannelTokenDeliveryModesSupported:\n          type: array\n          items:\n            type: string\n        backchannelAuthenticationRequestSigningAlgValuesSupported:\n          type: array\n          items:\n            type: string\n        backchannelUserCodeParameterSupported:\n          type: boolean\n        backchannelBindingMessagePattern:\n          type: string\n        backchannelAuthenticationResponseExpiresIn:\n          type: integer\n          format: int32\n        backchannelAuthenticationResponseInterval:\n          type: integer\n          format: int32\n        backchannelLoginHintClaims:\n          type: array\n          items:\n            type: string\n        cibaEndUserNotificationConfig:\n          $ref: '#/components/schemas/CIBAEndUserNotificationConfig'\n        backchannelRequestsProcessorJobIntervalSec:\n          type: integer\n          format: int32\n        backchannelRequestsProcessorJobChunkSize:\n          type: integer\n          format: int32\n        cibaGrantLifeExtraTimeSec:\n          type: integer\n          format: int32\n        cibaMaxExpirationTimeAllowedSec:\n          type: integer\n          format: int32\n        dpopSigningAlgValuesSupported:\n          type: array\n          items:\n            type: string\n        dpopTimeframe:\n          type: integer\n          format: int32\n        dpopJtiCacheTime:\n          type: integer\n          format: int32\n        allowIdTokenWithoutImplicitGrantType:\n          type: boolean\n        discoveryCacheLifetimeInMinutes:\n          type: integer\n          format: int32\n        discoveryAllowedKeys:\n          type: array\n          items:\n            type: string\n        discoveryDenyKeys:\n          type: array\n          items:\n            type: string\n        featureFlags:\n          type: array\n          items:\n            type: string\n        httpLoggingEnabled:\n          type: boolean\n        httpLoggingExcludePaths:\n          uniqueItems: true\n          type: array\n          items:\n            type: string\n        externalLoggerConfiguration:\n          type: string\n        agamaConfiguration:\n          $ref: '#/components/schemas/EngineConfig'\n        allResponseTypesSupported:\n          uniqueItems: true\n          type: array\n          items:\n            type: string\n            enum:\n            - code\n            - token\n            - id_token\n        enabledFeatureFlags:\n          uniqueItems: true\n          type: array\n          items:\n            type: string\n            enum:\n            - UNKNOWN\n            - HEALTH_CHECK\n            - USERINFO\n            - CLIENTINFO\n            - ID_GENERATION\n            - REGISTRATION\n            - INTROSPECTION\n            - REVOKE_TOKEN\n            - REVOKE_SESSION\n            - ACTIVE_SESSION\n            - END_SESSION\n            - STATUS_SESSION\n            - JANS_CONFIGURATION\n            - CIBA\n            - UMA\n            - U2F\n            - DEVICE_AUTHZ\n            - METRIC\n            - STAT\n            - PAR\n        fapi:\n          type: boolean\n    AuthenticationFilter:\n      required:\n      - baseDn\n      - filter\n      type: object\n      properties:\n        filter:\n          type: string\n        bind:\n          type: boolean\n        bindPasswordAttribute:\n          type: string\n          xml:\n            name: bind-password-attribute\n        baseDn:\n          type: string\n          xml:\n            name: base-dn\n    AuthenticationProtectionConfiguration:\n      type: object\n      properties:\n        attemptExpiration:\n          type: integer\n          format: int32\n        maximumAllowedAttemptsWithoutDelay:\n          type: integer\n          format: int32\n        delayTime:\n          type: integer\n          format: int32\n        bruteForceProtectionEnabled:\n          type: boolean\n    AuthorizationRequestCustomParameter:\n      type: object\n      properties:\n        paramName:\n          type: string\n        returnInResponse:\n          type: boolean\n    CIBAEndUserNotificationConfig:\n      type: object\n      properties:\n        apiKey:\n          type: string\n        authDomain:\n          type: string\n        databaseURL:\n          type: string\n        projectId:\n          type: string\n        storageBucket:\n          type: string\n        messagingSenderId:\n          type: string\n        appId:\n          type: string\n        notificationUrl:\n          type: string\n        notificationKey:\n          type: string\n        publicVapidKey:\n          type: string\n    ClientAuthenticationFilter:\n      required:\n      - baseDn\n      - filter\n      type: object\n      properties:\n        filter:\n          type: string\n        bind:\n          type: boolean\n        bindPasswordAttribute:\n          type: string\n          xml:\n            name: bind-password-attribute\n        baseDn:\n          type: string\n          xml:\n            name: base-dn\n    CorsConfigurationFilter:\n      type: object\n      properties:\n        filterName:\n          type: string\n        corsEnabled:\n          type: boolean\n        corsAllowedOrigins:\n          type: string\n        corsAllowedMethods:\n          type: string\n        corsAllowedHeaders:\n          type: string\n        corsExposedHeaders:\n          type: string\n        corsSupportCredentials:\n          type: boolean\n        corsLoggingEnabled:\n          type: boolean\n        corsPreflightMaxAge:\n          type: integer\n          format: int32\n        corsRequestDecorate:\n          type: boolean\n    EngineConfig:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n        rootDir:\n          type: string\n        templatesPath:\n          type: string\n        scriptsPath:\n          type: string\n        serializerType:\n          type: string\n          enum:\n          - KRYO\n          - FST\n        maxItemsLoggedInCollections:\n          type: integer\n          format: int32\n        disableTCHV:\n          type: boolean\n        pageMismatchErrorPage:\n          type: string\n        interruptionErrorPage:\n          type: string\n        crashErrorPage:\n          type: string\n        finishedFlowPage:\n          type: string\n        bridgeScriptPage:\n          type: string\n        defaultResponseHeaders:\n          type: object\n          additionalProperties:\n            type: string\n    PersistenceConfiguration:\n      type: object\n      properties:\n        persistenceType:\n          type: string\n    SmtpConfiguration:\n      type: object\n      properties:\n        valid:\n          type: boolean\n        host:\n          type: string\n        port:\n          type: integer\n          format: int32\n        requires_ssl:\n          type: boolean\n        trust_host:\n          type: boolean\n        from_name:\n          type: string\n        from_email_address:\n          type: string\n        requires_authentication:\n          type: boolean\n        user_name:\n          type: string\n        password:\n          type: string\n    CouchbaseConnectionConfiguration:\n      type: object\n      properties:\n        configId:\n          type: string\n        userName:\n          type: string\n        userPassword:\n          type: string\n        servers:\n          type: array\n          items:\n            type: string\n        defaultBucket:\n          type: string\n        buckets:\n          type: array\n          items:\n            type: string\n        passwordEncryptionMethod:\n          type: string\n        connectTimeout:\n          type: integer\n          format: int32\n        mutationTokensEnabled:\n          type: boolean\n        kvTimeout:\n          type: integer\n          format: int32\n        queryTimeout:\n          type: integer\n          format: int32\n        useSSL:\n          type: boolean\n        sslTrustStoreFile:\n          type: string\n        sslTrustStorePin:\n          type: string\n        sslTrustStoreType:\n          type: string\n        binaryAttributes:\n          type: array\n          items:\n            type: string\n        certificateAttributes:\n          type: array\n          items:\n            type: string\n    CustomScript:\n      type: object\n      properties:\n        dn:\n          type: string\n        inum:\n          type: string\n        name:\n          maxLength: 60\n          minLength: 2\n          pattern: \"^[a-zA-Z0-9_\\\\-\\\\:\\\\/\\\\.]+$\"\n          type: string\n        aliases:\n          type: array\n          items:\n            type: string\n        description:\n          type: string\n        script:\n          type: string\n        scriptType:\n          type: string\n          enum:\n          - person_authentication\n          - introspection\n          - resource_owner_password_credentials\n          - application_session\n          - cache_refresh\n          - client_registration\n          - id_generator\n          - uma_rpt_policy\n          - uma_rpt_claims\n          - uma_claims_gathering\n          - consent_gathering\n          - dynamic_scope\n          - spontaneous_scope\n          - end_session\n          - post_authn\n          - scim\n          - ciba_end_user_notification\n          - revoke_token\n          - persistence_extension\n          - idp\n          - discovery\n          - update_token\n          - config_api_auth\n        programmingLanguage:\n          type: string\n          enum:\n          - python\n          - java\n        moduleProperties:\n          type: array\n          items:\n            $ref: '#/components/schemas/SimpleCustomProperty'\n        configurationProperties:\n          type: array\n          items:\n            $ref: '#/components/schemas/SimpleExtendedCustomProperty'\n        level:\n          type: integer\n          format: int32\n        revision:\n          type: integer\n          format: int64\n        enabled:\n          type: boolean\n        scriptError:\n          $ref: '#/components/schemas/ScriptError'\n        modified:\n          type: boolean\n        internal:\n          type: boolean\n        locationPath:\n          type: string\n        locationType:\n          type: string\n          enum:\n          - ldap\n          - file\n        baseDn:\n          type: string\n    ScriptError:\n      type: object\n      properties:\n        raisedAt:\n          type: string\n          format: date-time\n        stackTrace:\n          type: string\n    SimpleCustomProperty:\n      type: object\n      properties:\n        value1:\n          type: string\n        value2:\n          type: string\n        description:\n          type: string\n    SimpleExtendedCustomProperty:\n      type: object\n      properties:\n        value1:\n          type: string\n        value2:\n          type: string\n        hide:\n          type: boolean\n        description:\n          type: string\n    JsonNode:\n      type: object\n    JSONWebKey:\n      type: object\n      properties:\n        name:\n          type: string\n        descr:\n          type: string\n        kid:\n          type: string\n        kty:\n          type: string\n          enum:\n          - EC\n          - RSA\n          - OKP\n          - oct\n        use:\n          type: string\n          enum:\n          - sig\n          - enc\n        alg:\n          type: string\n          enum:\n          - RS256\n          - RS384\n          - RS512\n          - ES256\n          - ES256K\n          - ES384\n          - ES512\n          - PS256\n          - PS384\n          - PS512\n          - EdDSA\n          - RSA1_5\n          - RSA-OAEP\n          - RSA-OAEP-256\n          - ECDH-ES\n          - ECDH-ES+A128KW\n          - ECDH-ES+A192KW\n          - ECDH-ES+A256KW\n          - A128KW\n          - A192KW\n          - A256KW\n          - A128GCMKW\n          - A192GCMKW\n          - A256GCMKW\n          - PBES2-HS256+A128KW\n          - PBES2-HS384+A192KW\n          - PBES2-HS512+A256KW\n          - dir\n        exp:\n          type: integer\n          format: int64\n        crv:\n          type: string\n          enum:\n          - P-256\n          - P-256K\n          - P-384\n          - P-521\n          - Ed25519\n          - Ed448\n        x5c:\n          type: array\n          items:\n            type: string\n        \"n\":\n          type: string\n        e:\n          type: string\n        x:\n          type: string\n        \"y\":\n          type: string\n    WebKeysConfiguration:\n      type: object\n      properties:\n        keys:\n          type: array\n          items:\n            $ref: '#/components/schemas/JSONWebKey'\n    GluuLdapConfiguration:\n      type: object\n      properties:\n        configId:\n          type: string\n        bindDN:\n          type: string\n        bindPassword:\n          type: string\n        servers:\n          type: array\n          items:\n            type: string\n        maxConnections:\n          type: integer\n          format: int32\n        useSSL:\n          type: boolean\n        baseDNs:\n          type: array\n          items:\n            type: string\n        primaryKey:\n          type: string\n        localPrimaryKey:\n          type: string\n        useAnonymousBind:\n          type: boolean\n        enabled:\n          type: boolean\n        version:\n          type: integer\n          format: int32\n        level:\n          type: integer\n          format: int32\n    Logging:\n      type: object\n      properties:\n        loggingLevel:\n          type: string\n        loggingLayout:\n          type: string\n        httpLoggingEnabled:\n          type: boolean\n        disableJdkLogger:\n          type: boolean\n        enabledOAuthAuditLogging:\n          type: boolean\n        externalLoggerConfiguration:\n          type: string\n        httpLoggingExcludePaths:\n          uniqueItems: true\n          type: array\n          items:\n            type: string\n    GluuOrganization:\n      required:\n      - description\n      - displayName\n      type: object\n      properties:\n        dn:\n          type: string\n        displayName:\n          maxLength: 60\n          minLength: 0\n          type: string\n        description:\n          maxLength: 60\n          minLength: 0\n          type: string\n        member:\n          type: string\n        countryName:\n          type: string\n        organization:\n          type: string\n        status:\n          type: string\n          enum:\n          - active\n          - inactive\n          - expired\n          - register\n        managerGroup:\n          type: string\n        themeColor:\n          type: string\n        shortName:\n          type: string\n        customMessages:\n          type: array\n          items:\n            type: string\n        title:\n          type: string\n        jsLogoPath:\n          type: string\n        jsFaviconPath:\n          type: string\n        organizationTitle:\n          type: string\n        baseDn:\n          type: string\n    Scope:\n      type: object\n      properties:\n        dn:\n          type: string\n        expirationDate:\n          type: string\n          format: date-time\n        deletable:\n          type: boolean\n        inum:\n          type: string\n        displayName:\n          type: string\n        id:\n          type: string\n        iconUrl:\n          type: string\n        description:\n          type: string\n        scopeType:\n          type: string\n          enum:\n          - openid\n          - dynamic\n          - uma\n          - spontaneous\n          - oauth\n        claims:\n          type: array\n          items:\n            type: string\n        defaultScope:\n          type: boolean\n        groupClaims:\n          type: boolean\n        dynamicScopeScripts:\n          type: array\n          items:\n            type: string\n        umaAuthorizationPolicies:\n          type: array\n          items:\n            type: string\n        attributes:\n          $ref: '#/components/schemas/ScopeAttributes'\n        creatorId:\n          type: string\n        creatorType:\n          type: string\n          enum:\n          - none\n          - client\n          - user\n          - auto\n        creationDate:\n          type: string\n          format: date-time\n        creatorAttributes:\n          type: object\n          additionalProperties:\n            type: string\n        umaType:\n          type: boolean\n        baseDn:\n          type: string\n    ScopeAttributes:\n      type: object\n      properties:\n        spontaneousClientScopes:\n          type: array\n          items:\n            type: string\n        showInConfigurationEndpoint:\n          type: boolean\n    CustomScope:\n      type: object\n      properties:\n        dn:\n          type: string\n        expirationDate:\n          type: string\n          format: date-time\n        deletable:\n          type: boolean\n        inum:\n          type: string\n        displayName:\n          type: string\n        id:\n          type: string\n        iconUrl:\n          type: string\n        description:\n          type: string\n        scopeType:\n          type: string\n          enum:\n          - openid\n          - dynamic\n          - uma\n          - spontaneous\n          - oauth\n        claims:\n          type: array\n          items:\n            type: string\n        defaultScope:\n          type: boolean\n        groupClaims:\n          type: boolean\n        dynamicScopeScripts:\n          type: array\n          items:\n            type: string\n        umaAuthorizationPolicies:\n          type: array\n          items:\n            type: string\n        attributes:\n          $ref: '#/components/schemas/ScopeAttributes'\n        creatorId:\n          type: string\n        creatorType:\n          type: string\n          enum:\n          - none\n          - client\n          - user\n          - auto\n        creationDate:\n          type: string\n          format: date-time\n        creatorAttributes:\n          type: object\n          additionalProperties:\n            type: string\n        clients:\n          type: array\n          items:\n            $ref: '#/components/schemas/Client'\n        umaType:\n          type: boolean\n        baseDn:\n          type: string\n    CustomObjectAttribute:\n      type: object\n      properties:\n        name:\n          type: string\n        multiValued:\n          type: boolean\n        values:\n          type: array\n          items:\n            type: object\n        value:\n          type: object\n        displayValue:\n          type: string\n    SessionId:\n      type: object\n      properties:\n        dn:\n          type: string\n        id:\n          type: string\n        outsideSid:\n          type: string\n        lastUsedAt:\n          type: string\n          format: date-time\n        userDn:\n          type: string\n        authenticationTime:\n          type: string\n          format: date-time\n        state:\n          type: string\n          enum:\n          - unauthenticated\n          - authenticated\n        sessionState:\n          type: string\n        permissionGranted:\n          type: boolean\n        isJwt:\n          type: boolean\n        jwt:\n          type: string\n        permissionGrantedMap:\n          $ref: '#/components/schemas/SessionIdAccessMap'\n        sessionAttributes:\n          type: object\n          additionalProperties:\n            type: string\n        expirationDate:\n          type: string\n          format: date-time\n        deletable:\n          type: boolean\n        creationDate:\n          type: string\n          format: date-time\n        persisted:\n          type: boolean\n        user:\n          $ref: '#/components/schemas/User'\n        ttl:\n          type: integer\n          format: int32\n        opbrowserState:\n          type: string\n    SessionIdAccessMap:\n      type: object\n      properties:\n        permissionGranted:\n          type: object\n          additionalProperties:\n            type: boolean\n          xml:\n            name: map\n    User:\n      type: object\n      properties:\n        dn:\n          type: string\n        userId:\n          type: string\n        updatedAt:\n          type: string\n          format: date-time\n        createdAt:\n          type: string\n          format: date-time\n        oxAuthPersistentJwt:\n          type: array\n          items:\n            type: string\n        customAttributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomObjectAttribute'\n        customObjectClasses:\n          type: array\n          items:\n            type: string\n        status:\n          type: string\n        baseDn:\n          type: string\n    SqlConnectionConfiguration:\n      type: object\n      properties:\n        configId:\n          type: string\n        userName:\n          type: string\n        userPassword:\n          type: string\n        connectionUri:\n          type: array\n          items:\n            type: string\n        schemaName:\n          type: string\n        serverTimezone:\n          type: string\n        useServerPrepStmts:\n          type: integer\n          format: int32\n        prepStmtCacheSqlLimit:\n          type: integer\n          format: int32\n        cachePrepStmts:\n          type: boolean\n        cacheResultSetMetadata:\n          type: boolean\n        metadataCacheSize:\n          type: integer\n          format: int32\n        passwordEncryptionMethod:\n          type: string\n        connectionPoolMaxTotal:\n          type: integer\n          format: int32\n        connectionPoolMaxIdle:\n          type: integer\n          format: int32\n        connectionPoolMinIdle:\n          type: integer\n          format: int32\n        createMaxWaitTimeMillis:\n          type: integer\n          format: int32\n        maxWaitTimeMillis:\n          type: integer\n          format: int32\n        minEvictableIdleTimeMillis:\n          type: integer\n          format: int32\n        binaryAttributes:\n          type: array\n          items:\n            type: string\n        certificateAttributes:\n          type: array\n          items:\n            type: string\n    UmaResource:\n      required:\n      - name\n      type: object\n      properties:\n        dn:\n          type: string\n        inum:\n          type: string\n        id:\n          type: string\n        name:\n          type: string\n        iconUri:\n          type: string\n        scopes:\n          type: array\n          items:\n            type: string\n        scopeExpression:\n          type: string\n        clients:\n          type: array\n          items:\n            type: string\n        resources:\n          type: array\n          items:\n            type: string\n        creator:\n          type: string\n        description:\n          type: string\n        type:\n          type: string\n        creationDate:\n          type: string\n          format: date-time\n        expirationDate:\n          type: string\n          format: date-time\n        deletable:\n          type: boolean\n        ttl:\n          type: integer\n          format: int32\n  securitySchemes:\n    oauth2:\n      type: oauth2\n      flows:\n        clientCredentials:\n          tokenUrl: \"https://{op-hostname}/.../token\"\n          scopes:\n            https://jans.io/oauth/jans-auth-server/config/properties.readonly: View\n              Auth Server properties related information\n            https://jans.io/oauth/jans-auth-server/config/properties.write: Manage\n              Auth Server properties related information\n            https://jans.io/oauth/config/attributes.readonly: View attribute related\n              information\n            https://jans.io/oauth/config/attributes.write: Manage attribute related\n              information\n            https://jans.io/oauth/config/attributes.delete: Delete attribute related\n              information\n            https://jans.io/oauth/config/acrs.readonly: View ACRS related information\n            https://jans.io/oauth/config/acrs.write: Manage ACRS related information\n            https://jans.io/oauth/config/database/ldap.readonly: View LDAP database\n              related information\n            https://jans.io/oauth/config/database/ldap.write: Manage LDAP database\n              related information\n            https://jans.io/oauth/config/database/ldap.delete: Delete LDAP database\n              related information\n            https://jans.io/oauth/config/database/couchbase.readonly: View Couchbase\n              database information\n            https://jans.io/oauth/config/database/couchbase.write: Manage Couchbase\n              database related information\n            https://jans.io/oauth/config/database/couchbase.delete: Delete Couchbase\n              database related information\n            https://jans.io/oauth/config/scripts.readonly: View cache scripts information\n            https://jans.io/oauth/config/scripts.write: Manage scripts related information\n            https://jans.io/oauth/config/scripts.delete: Delete scripts related information\n            https://jans.io/oauth/config/cache.readonly: View cache related information\n            https://jans.io/oauth/config/cache.write: Manage cache related information\n            https://jans.io/oauth/config/smtp.readonly: View SMTP related information\n            https://jans.io/oauth/config/smtp.write: Manage SMTP related information\n            https://jans.io/oauth/config/smtp.delete: Delete SMTP related information\n            https://jans.io/oauth/config/logging.readonly: View logging related information\n            https://jans.io/oauth/config/logging.write: Manage logging related information\n            https://jans.io/oauth/config/jwks.readonly: View JWKS related information\n            https://jans.io/oauth/config/jwks.write: Manage JWKS related information\n            https://jans.io/oauth/config/openid/clients.readonly: View clients related\n              information\n            https://jans.io/oauth/config/openid/clients.write: Manage clients related\n              information\n            https://jans.io/oauth/config/openid/clients.delete: Delete clients related\n              information\n            https://jans.io/oauth/config/scopes.readonly: View scope related information\n            https://jans.io/oauth/config/scopes.write: Manage scope related information\n            https://jans.io/oauth/config/scopes.delete: Delete scope related information\n            https://jans.io/oauth/config/uma/resources.readonly: View UMA Resource\n              related information\n            https://jans.io/oauth/config/uma/resources.write: Manage UMA Resource\n              related information\n            https://jans.io/oauth/config/uma/resources.delete: Delete UMA Resource\n              related information\n            https://jans.io/oauth/config/database/sql.readonly: View SQL database\n              related information\n            https://jans.io/oauth/config/database/sql.write: Manage SQL database related\n              information\n            https://jans.io/oauth/config/database/sql.delete: Delete SQL database\n              related information\n            https://jans.io/oauth/config/stats.readonly: View server with basic statistic\n            https://jans.io/oauth/config/organization.readonly: View organization\n              configuration information\n            https://jans.io/oauth/config/organization.write: Manage organization configuration\n              information\n            https://jans.io/oauth/config/user.readonly: View user related information\n            https://jans.io/oauth/config/user.write: Manage user related information\n            https://jans.io/oauth/config/user.delete: Delete user related information\n            https://jans.io/oauth/config/agama.readonly: View Agama Flow related information\n            https://jans.io/oauth/config/agama.write: Manage Agama Flow related information\n            https://jans.io/oauth/config/agama.delete: Delete Agama Flow related information\n            https://jans.io/oauth/jans-auth-server/session.readonly: View Session\n              related information\n            https://jans.io/oauth/jans-auth-server/session.delete: Delete Session\n              information\n",
			"canonicalURL": "/github.com/JanssenProject/jans@80fa911512d38cd28324f4941fcaa24634d4d35f/-/blob/jans-config-api/docs/jans-config-api-swagger-auto.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/JanssenProject/jans/blob/80fa911512d38cd28324f4941fcaa24634d4d35f/jans-config-api/docs/jans-config-api-swagger-auto.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/api/v1/acrs\": get: operation \"get-acrs\": security: parse security scheme \"oauth2\": oauth2: flow \"clientCredentials\": at 1:45236: \"tokenUrl\" MUST be in the form of a URL: parse \"https://{op-hostname}/.../token\": invalid character \"{\" in host name"
}