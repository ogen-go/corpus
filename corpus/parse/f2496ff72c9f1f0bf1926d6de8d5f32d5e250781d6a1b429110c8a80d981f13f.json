{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/gmorinn/starter-pack-goa"
		},
		"file": {
			"name": "openapi3.yaml",
			"size": 0,
			"path": "gen/http/openapi3.yaml",
			"byteSize": 56817,
			"content": "openapi: 3.0.3\ninfo:\n    title: starterpack\n    description: Best API REST building with GoaDesign\n    contact:\n        name: Guillaume MORIN\n        url: https://guillaume-morin.fr/\n        email: guillaume.morin@epitech.eu\n    license:\n        name: GOA X GM\n        url: https://guillaume-morin.fr/\n    version: \"1.0\"\nservers:\n    - url: https://localhost:8088\npaths:\n    /authorization:\n        post:\n            tags:\n                - oAuth\n            summary: oAuth oAuth\n            description: oAuth\n            operationId: oAuth#oAuth\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/OAuthRequestBody'\n                        example:\n                            client_id: Accusamus dolore sint.\n                            client_secret: Voluptas sunt.\n                            grant_type: Labore quisquam quo.\n            responses:\n                \"201\":\n                    description: Created response.\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/OAuthResponse'\n                            example:\n                                access_token: Id ab soluta tempora.\n                                expires_in: 4484882972777029123\n                                success: true\n                                token_type: Nihil voluptates dolor qui.\n                \"400\":\n                    description: Bad Request response.\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/OAuthResponse'\n                            example:\n                                access_token: Commodi tenetur reiciendis aut eligendi.\n                                expires_in: 158009050374148575\n                                success: true\n                                token_type: Velit distinctio.\n                \"401\":\n                    description: 'unauthorized: Unauthorized response.'\n                    content:\n                        application/json:\n                            schema:\n                                type: string\n                                example: Eos explicabo nihil esse ut.\n                \"403\":\n                    description: 'oauth_error: Forbidden response.'\n                    content:\n                        application/json:\n                            schema:\n                                type: string\n                                example: Libero unde cumque molestiae eveniet suscipit molestiae.\n                \"500\":\n                    description: 'unknown_error: Error not identified (500)'\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/UnknownError'\n    /openapi.json:\n        get:\n            tags:\n                - openapi\n            summary: Download openapi3.json\n            description: Postman generated by Goa\n            operationId: openapi#/openapi.json\n            responses:\n                \"200\":\n                    description: File downloaded\n            externalDocs:\n                description: cd Public \u0026\u0026 live-server to see the Documentation of the API\n                url: http://127.0.0.1:8080/\n    /public/{*path}:\n        get:\n            tags:\n                - fileapi\n            summary: Download bin/public\n            description: Serve static content.\n            operationId: fileapi#/public/{*path}\n            parameters:\n                - name: path\n                  in: path\n                  description: Relative file path\n                  required: true\n            responses:\n                \"200\":\n                    description: File not found\n                \"404\":\n                    description: File not found\n    /refresh:\n        post:\n            tags:\n                - jwtToken\n            summary: refresh jwtToken\n            description: Refresh Token\n            operationId: jwtToken#refresh\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/RefreshRequestBody'\n                        example:\n                            refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ\n            responses:\n                \"200\":\n                    description: OK response.\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Sign'\n                            example:\n                                access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ\n                                refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ\n                                success: false\n                \"500\":\n                    description: 'unknown_error: Error not identified (500)'\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/UnknownError'\n            security:\n                - OAuth2_header_Authorization:\n                    - api:read\n    /signin:\n        post:\n            tags:\n                - jwtToken\n            summary: signin jwtToken\n            description: signin\n            operationId: jwtToken#signin\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/SigninRequestBody'\n                        example:\n                            email: guillaume@epitech.eu\n                            password: JeSuisUnTest974\n            responses:\n                \"200\":\n                    description: OK response.\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Sign'\n                            example:\n                                access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ\n                                refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ\n                                success: true\n                \"500\":\n                    description: 'unknown_error: Error not identified (500)'\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/UnknownError'\n            security:\n                - OAuth2_header_Authorization:\n                    - api:read\n    /signup:\n        post:\n            tags:\n                - jwtToken\n            summary: signup jwtToken\n            description: signup to generate jwt token\n            operationId: jwtToken#signup\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/SignupRequestBody'\n                        example:\n                            confirm_password: JeSuisUnTest974\n                            email: guillaume@epitech.eu\n                            password: JeSuisUnTest974\n            responses:\n                \"200\":\n                    description: OK response.\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Sign'\n                            example:\n                                access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ\n                                refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ\n                                success: false\n                \"500\":\n                    description: 'unknown_error: Error not identified (500)'\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/UnknownError'\n            security:\n                - OAuth2_header_Authorization:\n                    - api:read\n    /v1/email-exist:\n        post:\n            tags:\n                - auth\n            summary: email-exist auth\n            description: Check if email exist in database\n            operationId: auth#email-exist\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/EmailExistRequestBody'\n                        example:\n                            email: guillaume@gmail.com\n            responses:\n                \"200\":\n                    description: OK response.\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/EmailExistResponseBody'\n                            example:\n                                exist: false\n                                success: false\n                \"500\":\n                    description: 'unknown_error: Error not identified (500)'\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/UnknownError'\n            security:\n                - OAuth2_header_Authorization:\n                    - api:read\n    /v1/file/add:\n        post:\n            tags:\n                - files\n            summary: importFile files\n            description: Import file\n            operationId: files#importFile\n            requestBody:\n                required: true\n                content:\n                    multipart/form-data:\n                        schema:\n                            $ref: '#/components/schemas/ImportFileRequestBody'\n                        example:\n                            files:\n                                - content:\n                                    - 68\n                                    - 101\n                                    - 108\n                                    - 101\n                                    - 110\n                                    - 105\n                                    - 116\n                                    - 105\n                                    - 32\n                                    - 114\n                                    - 101\n                                    - 112\n                                    - 101\n                                    - 108\n                                    - 108\n                                    - 101\n                                    - 110\n                                    - 100\n                                    - 117\n                                    - 115\n                                    - 46\n                                  filename: foo.jpg\n                                  format: image/jpeg\n                                  h: 453901555597122463\n                                  size: 4908872163727939995\n                                  url: Similique tenetur ratione est.\n                                  w: 6121017000915498524\n                                - content:\n                                    - 68\n                                    - 101\n                                    - 108\n                                    - 101\n                                    - 110\n                                    - 105\n                                    - 116\n                                    - 105\n                                    - 32\n                                    - 114\n                                    - 101\n                                    - 112\n                                    - 101\n                                    - 108\n                                    - 108\n                                    - 101\n                                    - 110\n                                    - 100\n                                    - 117\n                                    - 115\n                                    - 46\n                                  filename: foo.jpg\n                                  format: image/jpeg\n                                  h: 453901555597122463\n                                  size: 4908872163727939995\n                                  url: Similique tenetur ratione est.\n                                  w: 6121017000915498524\n                                - content:\n                                    - 68\n                                    - 101\n                                    - 108\n                                    - 101\n                                    - 110\n                                    - 105\n                                    - 116\n                                    - 105\n                                    - 32\n                                    - 114\n                                    - 101\n                                    - 112\n                                    - 101\n                                    - 108\n                                    - 108\n                                    - 101\n                                    - 110\n                                    - 100\n                                    - 117\n                                    - 115\n                                    - 46\n                                  filename: foo.jpg\n                                  format: image/jpeg\n                                  h: 453901555597122463\n                                  size: 4908872163727939995\n                                  url: Similique tenetur ratione est.\n                                  w: 6121017000915498524\n            responses:\n                \"201\":\n                    description: Created response.\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ImportFileResponseBody'\n                            example:\n                                file:\n                                    - id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25\n                                      mime: Ut vero sit.\n                                      name: foo.png\n                                      size: 4120569230563613071\n                                      url: Ad nam ab reiciendis tempore et.\n                                    - id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25\n                                      mime: Ut vero sit.\n                                      name: foo.png\n                                      size: 4120569230563613071\n                                      url: Ad nam ab reiciendis tempore et.\n                                success: false\n                \"500\":\n                    description: 'unknown_error: Error not identified (500)'\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/UnknownError'\n            security:\n                - OAuth2_header_Authorization:\n                    - api:read\n    /v1/file/remove:\n        patch:\n            tags:\n                - files\n            summary: deleteFile files\n            description: Delete one file by ID\n            operationId: files#deleteFile\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/DeleteFileRequestBody'\n                        example:\n                            url: /public/uploads/2021/12/2ca51d10-b660-4b2c-b27f-f7a119642885.png\n            responses:\n                \"200\":\n                    description: OK response.\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ResetPasswordResponseBody'\n                            example:\n                                success: false\n                \"500\":\n                    description: 'unknown_error: Error not identified (500)'\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/UnknownError'\n            security:\n                - OAuth2_header_Authorization:\n                    - api:read\n    /v1/lost:\n        post:\n            tags:\n                - auth\n            summary: send-confirmation auth\n            description: Check if email exist in database and send code by email to reset password\n            operationId: auth#send-confirmation\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/EmailExistRequestBody'\n                        example:\n                            email: guillaume@gmail.com\n            responses:\n                \"200\":\n                    description: OK response.\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/EmailExistResponseBody'\n                            example:\n                                exist: false\n                                success: false\n                \"500\":\n                    description: 'unknown_error: Error not identified (500)'\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/UnknownError'\n            security:\n                - OAuth2_header_Authorization:\n                    - api:read\n    /v1/reset-password:\n        put:\n            tags:\n                - auth\n            summary: reset-password auth\n            description: Reset forget password of the user with the correct confirm code\n            operationId: auth#reset-password\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/ResetPasswordRequestBody'\n                        example:\n                            code: ZGI5E\n                            confirm_password: JeSuisUnTest974\n                            email: guillaume@gmail.com\n                            password: JeSuisUnTest974\n            responses:\n                \"200\":\n                    description: OK response.\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ResetPasswordResponseBody'\n                            example:\n                                success: true\n                \"500\":\n                    description: 'unknown_error: Error not identified (500)'\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/UnknownError'\n            security:\n                - OAuth2_header_Authorization:\n                    - api:read\n    /v1/web/user/{id}:\n        get:\n            tags:\n                - users\n            summary: getUserByID users\n            description: Get one User\n            operationId: users#getUserByID\n            parameters:\n                - name: id\n                  in: path\n                  description: Unique ID of the User\n                  required: true\n                  schema:\n                    type: string\n                    description: Unique ID of the User\n                    example: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25\n                    format: uuid\n                  example: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25\n                - name: jwtToken\n                  in: header\n                  description: Jwt token\n                  allowEmptyValue: true\n                  schema:\n                    type: string\n                    description: Jwt token\n                    example: \"Bearer \\U000EA3C4\\U000CC528\\U0002A1AB\\U00073DFA\\U000F48C0\\U000911AF\"\n                    pattern: ^Bearer [^ ]+$\n                  example: \"Bearer \\U0003705F\\U0001D315\\U0010C64D\\U000D64C8\\U00080588\\U0006424B\"\n            responses:\n                \"200\":\n                    description: OK response.\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/GetUserByIDResponseBody'\n                            example:\n                                success: false\n                                user:\n                                    avatar: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png\n                                    email: guillaume@gmail.com\n                                    firstname: Guillaume\n                                    id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25\n                                    lastname: Morin\n                                    role: Est distinctio veritatis quibusdam.\n                \"500\":\n                    description: 'unknown_error: Error not identified (500)'\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/UnknownError'\n            security:\n                - OAuth2_header_Authorization:\n                    - api:read\n                  jwt_header_jwtToken:\n                    - api:read\n                    - api:write\n    /v1/web/user/edit/avatar:\n        put:\n            tags:\n                - users\n            summary: updateAvatar users\n            description: Update avatar\n            operationId: users#updateAvatar\n            parameters:\n                - name: jwtToken\n                  in: header\n                  description: Jwt token\n                  allowEmptyValue: true\n                  schema:\n                    type: string\n                    description: Jwt token\n                    example: \"Bearer \\U0002CFAC\\U000E8A7A\\U000D114D\\U00100513\\U0002BF78\"\n                    pattern: ^Bearer [^ ]+$\n                  example: \"Bearer \\U0001EFE7\\U00064D0B\\U0006EC04\\U0009B0FE\\U000E3B6C\"\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/UpdateAvatarRequestBody'\n                        example:\n                            avatar: Sed sunt.\n                            id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25\n            responses:\n                \"200\":\n                    description: OK response.\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/UpdateDescriptionResponseBody'\n                            example:\n                                success: true\n                                user:\n                                    avatar: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png\n                                    email: guillaume@gmail.com\n                                    firstname: Guillaume\n                                    id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25\n                                    lastname: Morin\n                                    role: Est distinctio veritatis quibusdam.\n                \"500\":\n                    description: 'unknown_error: Error not identified (500)'\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/UnknownError'\n            security:\n                - OAuth2_header_Authorization:\n                    - api:read\n                  jwt_header_jwtToken:\n                    - api:read\n                    - api:write\n    /v1/web/user/edit/description:\n        put:\n            tags:\n                - users\n            summary: updateDescription users\n            description: Update main info like email, firstname, lastname\n            operationId: users#updateDescription\n            parameters:\n                - name: jwtToken\n                  in: header\n                  description: Jwt token\n                  allowEmptyValue: true\n                  schema:\n                    type: string\n                    description: Jwt token\n                    example: \"Bearer \\U000708E7\\U000BB83D\\U00029014\"\n                    pattern: ^Bearer [^ ]+$\n                  example: \"Bearer \\U000C518F\\U00107C83\\U0008CE64\"\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/UpdateDescriptionRequestBody'\n                        example:\n                            email: guillaume@gmail.com\n                            firstname: Guillaume\n                            id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25\n                            lastname: Morin\n            responses:\n                \"200\":\n                    description: OK response.\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/UpdateDescriptionResponseBody'\n                            example:\n                                success: true\n                                user:\n                                    avatar: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png\n                                    email: guillaume@gmail.com\n                                    firstname: Guillaume\n                                    id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25\n                                    lastname: Morin\n                                    role: Est distinctio veritatis quibusdam.\n                \"500\":\n                    description: 'unknown_error: Error not identified (500)'\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/UnknownError'\n            security:\n                - OAuth2_header_Authorization:\n                    - api:read\n                  jwt_header_jwtToken:\n                    - api:read\n                    - api:write\n    /v1/web/user/remove/{id}:\n        delete:\n            tags:\n                - users\n            summary: deleteUser users\n            description: Delete one User by ID\n            operationId: users#deleteUser\n            parameters:\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                    type: string\n                    example: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25\n                    format: uuid\n                  example: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25\n                - name: jwtToken\n                  in: header\n                  description: Jwt token\n                  allowEmptyValue: true\n                  schema:\n                    type: string\n                    description: Jwt token\n                    example: \"Bearer \\U000DF0C7\\U00050969\\U0005BB0F\\U00040D2F\"\n                    pattern: ^Bearer [^ ]+$\n                  example: \"Bearer \\U00094B2E\\U000AC949\\U0004CDE6\\U00028764\\U000B7D56\"\n            responses:\n                \"200\":\n                    description: OK response.\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ResetPasswordResponseBody'\n                            example:\n                                success: true\n                \"500\":\n                    description: 'unknown_error: Error not identified (500)'\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/UnknownError'\n            security:\n                - OAuth2_header_Authorization:\n                    - api:read\n                  jwt_header_jwtToken:\n                    - api:read\n                    - api:write\ncomponents:\n    schemas:\n        DeleteFileRequestBody:\n            type: object\n            properties:\n                url:\n                    type: string\n                    example: /public/uploads/2021/12/2ca51d10-b660-4b2c-b27f-f7a119642885.png\n                    minLength: 23\n            example:\n                url: /public/uploads/2021/12/2ca51d10-b660-4b2c-b27f-f7a119642885.png\n            required:\n                - url\n        EmailExistRequestBody:\n            type: object\n            properties:\n                email:\n                    type: string\n                    example: guillaume@gmail.com\n                    format: email\n            example:\n                email: guillaume@gmail.com\n            required:\n                - email\n        EmailExistResponseBody:\n            type: object\n            properties:\n                exist:\n                    type: boolean\n                    example: true\n                success:\n                    type: boolean\n                    example: true\n            example:\n                exist: true\n                success: false\n            required:\n                - exist\n                - success\n        GetUserByIDResponseBody:\n            type: object\n            properties:\n                success:\n                    type: boolean\n                    example: true\n                user:\n                    $ref: '#/components/schemas/ResUser'\n            example:\n                success: true\n                user:\n                    avatar: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png\n                    email: guillaume@gmail.com\n                    firstname: Guillaume\n                    id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25\n                    lastname: Morin\n                    role: Est distinctio veritatis quibusdam.\n            required:\n                - user\n                - success\n        ImportFileRequestBody:\n            type: object\n            properties:\n                files:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/PayloadFile'\n                    description: Files to import\n                    example:\n                        - content:\n                            - 68\n                            - 101\n                            - 108\n                            - 101\n                            - 110\n                            - 105\n                            - 116\n                            - 105\n                            - 32\n                            - 114\n                            - 101\n                            - 112\n                            - 101\n                            - 108\n                            - 108\n                            - 101\n                            - 110\n                            - 100\n                            - 117\n                            - 115\n                            - 46\n                          filename: foo.jpg\n                          format: image/jpeg\n                          h: 453901555597122463\n                          size: 4908872163727939995\n                          url: Similique tenetur ratione est.\n                          w: 6121017000915498524\n                        - content:\n                            - 68\n                            - 101\n                            - 108\n                            - 101\n                            - 110\n                            - 105\n                            - 116\n                            - 105\n                            - 32\n                            - 114\n                            - 101\n                            - 112\n                            - 101\n                            - 108\n                            - 108\n                            - 101\n                            - 110\n                            - 100\n                            - 117\n                            - 115\n                            - 46\n                          filename: foo.jpg\n                          format: image/jpeg\n                          h: 453901555597122463\n                          size: 4908872163727939995\n                          url: Similique tenetur ratione est.\n                          w: 6121017000915498524\n                        - content:\n                            - 68\n                            - 101\n                            - 108\n                            - 101\n                            - 110\n                            - 105\n                            - 116\n                            - 105\n                            - 32\n                            - 114\n                            - 101\n                            - 112\n                            - 101\n                            - 108\n                            - 108\n                            - 101\n                            - 110\n                            - 100\n                            - 117\n                            - 115\n                            - 46\n                          filename: foo.jpg\n                          format: image/jpeg\n                          h: 453901555597122463\n                          size: 4908872163727939995\n                          url: Similique tenetur ratione est.\n                          w: 6121017000915498524\n                        - content:\n                            - 68\n                            - 101\n                            - 108\n                            - 101\n                            - 110\n                            - 105\n                            - 116\n                            - 105\n                            - 32\n                            - 114\n                            - 101\n                            - 112\n                            - 101\n                            - 108\n                            - 108\n                            - 101\n                            - 110\n                            - 100\n                            - 117\n                            - 115\n                            - 46\n                          filename: foo.jpg\n                          format: image/jpeg\n                          h: 453901555597122463\n                          size: 4908872163727939995\n                          url: Similique tenetur ratione est.\n                          w: 6121017000915498524\n            example:\n                files:\n                    - content:\n                        - 68\n                        - 101\n                        - 108\n                        - 101\n                        - 110\n                        - 105\n                        - 116\n                        - 105\n                        - 32\n                        - 114\n                        - 101\n                        - 112\n                        - 101\n                        - 108\n                        - 108\n                        - 101\n                        - 110\n                        - 100\n                        - 117\n                        - 115\n                        - 46\n                      filename: foo.jpg\n                      format: image/jpeg\n                      h: 453901555597122463\n                      size: 4908872163727939995\n                      url: Similique tenetur ratione est.\n                      w: 6121017000915498524\n                    - content:\n                        - 68\n                        - 101\n                        - 108\n                        - 101\n                        - 110\n                        - 105\n                        - 116\n                        - 105\n                        - 32\n                        - 114\n                        - 101\n                        - 112\n                        - 101\n                        - 108\n                        - 108\n                        - 101\n                        - 110\n                        - 100\n                        - 117\n                        - 115\n                        - 46\n                      filename: foo.jpg\n                      format: image/jpeg\n                      h: 453901555597122463\n                      size: 4908872163727939995\n                      url: Similique tenetur ratione est.\n                      w: 6121017000915498524\n                    - content:\n                        - 68\n                        - 101\n                        - 108\n                        - 101\n                        - 110\n                        - 105\n                        - 116\n                        - 105\n                        - 32\n                        - 114\n                        - 101\n                        - 112\n                        - 101\n                        - 108\n                        - 108\n                        - 101\n                        - 110\n                        - 100\n                        - 117\n                        - 115\n                        - 46\n                      filename: foo.jpg\n                      format: image/jpeg\n                      h: 453901555597122463\n                      size: 4908872163727939995\n                      url: Similique tenetur ratione est.\n                      w: 6121017000915498524\n            required:\n                - files\n        ImportFileResponseBody:\n            type: object\n            properties:\n                file:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/ResFile'\n                    example:\n                        - id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25\n                          mime: Ut vero sit.\n                          name: foo.png\n                          size: 4120569230563613071\n                          url: Ad nam ab reiciendis tempore et.\n                        - id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25\n                          mime: Ut vero sit.\n                          name: foo.png\n                          size: 4120569230563613071\n                          url: Ad nam ab reiciendis tempore et.\n                        - id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25\n                          mime: Ut vero sit.\n                          name: foo.png\n                          size: 4120569230563613071\n                          url: Ad nam ab reiciendis tempore et.\n                success:\n                    type: boolean\n                    example: true\n            example:\n                file:\n                    - id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25\n                      mime: Ut vero sit.\n                      name: foo.png\n                      size: 4120569230563613071\n                      url: Ad nam ab reiciendis tempore et.\n                    - id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25\n                      mime: Ut vero sit.\n                      name: foo.png\n                      size: 4120569230563613071\n                      url: Ad nam ab reiciendis tempore et.\n                success: true\n            required:\n                - success\n                - file\n        OAuthRequestBody:\n            type: object\n            properties:\n                client_id:\n                    type: string\n                    example: Perferendis labore numquam accusamus odio laborum.\n                client_secret:\n                    type: string\n                    example: Aut asperiores.\n                grant_type:\n                    type: string\n                    example: Sit praesentium dolores distinctio atque et.\n            example:\n                client_id: Rerum sed ab.\n                client_secret: Qui sit nam.\n                grant_type: Molestias voluptatum et occaecati.\n            required:\n                - client_id\n                - client_secret\n                - grant_type\n        OAuthResponse:\n            type: object\n            properties:\n                access_token:\n                    type: string\n                    example: Sed repellendus laboriosam velit rerum earum.\n                expires_in:\n                    type: integer\n                    example: 905489999438370610\n                    format: int64\n                success:\n                    type: boolean\n                    example: true\n                token_type:\n                    type: string\n                    example: Id vitae.\n            example:\n                access_token: Voluptate atque in iusto non et.\n                expires_in: 1827198877104942018\n                success: false\n                token_type: Sed qui et.\n            required:\n                - access_token\n                - token_type\n                - expires_in\n                - success\n        PayloadFile:\n            type: object\n            properties:\n                content:\n                    type: string\n                    description: content of image\n                    example:\n                        - 83\n                        - 117\n                        - 110\n                        - 116\n                        - 32\n                        - 100\n                        - 105\n                        - 115\n                        - 116\n                        - 105\n                        - 110\n                        - 99\n                        - 116\n                        - 105\n                        - 111\n                        - 32\n                        - 115\n                        - 105\n                        - 110\n                        - 116\n                        - 32\n                        - 97\n                        - 117\n                        - 116\n                        - 32\n                        - 110\n                        - 105\n                        - 104\n                        - 105\n                        - 108\n                        - 46\n                    format: binary\n                filename:\n                    type: string\n                    description: uploaded file name\n                    example: foo.jpg\n                    minLength: 2\n                format:\n                    type: string\n                    description: uploaded file format\n                    example: image/jpeg\n                    enum:\n                        - image/jpeg\n                        - image/png\n                        - image/jpg\n                h:\n                    type: integer\n                    description: height of image if you crop\n                    example: 531640318569623122\n                    format: int64\n                size:\n                    type: integer\n                    description: size of image\n                    example: 6681480776762861306\n                    format: int64\n                url:\n                    type: string\n                    description: url file\n                    example: Omnis aut.\n                w:\n                    type: integer\n                    description: width of image if you crop\n                    example: 8441994472517798801\n                    format: int64\n            example:\n                content:\n                    - 77\n                    - 105\n                    - 110\n                    - 105\n                    - 109\n                    - 97\n                    - 32\n                    - 99\n                    - 111\n                    - 114\n                    - 114\n                    - 117\n                    - 112\n                    - 116\n                    - 105\n                    - 46\n                filename: foo.jpg\n                format: image/jpeg\n                h: 6695150015291329825\n                size: 1468524805186468882\n                url: Quas perferendis fuga.\n                w: 3079156405173066483\n            required:\n                - filename\n                - content\n                - format\n                - size\n                - url\n        RefreshRequestBody:\n            type: object\n            properties:\n                refresh_token:\n                    type: string\n                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ\n                    minLength: 32\n            example:\n                refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ\n            required:\n                - refresh_token\n        ResFile:\n            type: object\n            properties:\n                id:\n                    type: string\n                    example: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25\n                    format: uuid\n                mime:\n                    type: string\n                    example: Voluptate nihil.\n                name:\n                    type: string\n                    example: foo.png\n                size:\n                    type: integer\n                    example: 5553575870671356874\n                    format: int64\n                url:\n                    type: string\n                    example: Sint sint quo modi ab qui dolore.\n            example:\n                id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25\n                mime: Voluptas consequatur impedit quia et doloremque.\n                name: foo.png\n                size: 6586627390712349755\n                url: Pariatur deleniti a voluptatem nam corrupti.\n            required:\n                - id\n                - name\n                - url\n        ResUser:\n            type: object\n            properties:\n                avatar:\n                    type: string\n                    example: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png\n                email:\n                    type: string\n                    example: guillaume@gmail.com\n                firstname:\n                    type: string\n                    example: Guillaume\n                id:\n                    type: string\n                    example: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25\n                lastname:\n                    type: string\n                    example: Morin\n                role:\n                    type: string\n                    description: User is admin or not\n                    example: Minus numquam.\n            example:\n                avatar: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png\n                email: guillaume@gmail.com\n                firstname: Guillaume\n                id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25\n                lastname: Morin\n                role: Quod officiis esse minima quis.\n            required:\n                - id\n                - email\n                - firstname\n                - lastname\n                - avatar\n        ResetPasswordRequestBody:\n            type: object\n            properties:\n                code:\n                    type: string\n                    example: ZGI5E\n                    pattern: ^[A-Za-z0-9]+$\n                    minLength: 5\n                    maxLength: 5\n                confirm_password:\n                    type: string\n                    description: Minimum 9 charactères / Chiffre Obligatoire\n                    example: JeSuisUnTest974\n                    pattern: \\d\n                    minLength: 9\n                email:\n                    type: string\n                    example: guillaume@gmail.com\n                    format: email\n                password:\n                    type: string\n                    description: Minimum 9 charactères / Chiffre Obligatoire\n                    example: JeSuisUnTest974\n                    pattern: \\d\n                    minLength: 9\n            example:\n                code: ZGI5E\n                confirm_password: JeSuisUnTest974\n                email: guillaume@gmail.com\n                password: JeSuisUnTest974\n            required:\n                - email\n                - code\n                - password\n                - confirm_password\n        ResetPasswordResponseBody:\n            type: object\n            properties:\n                success:\n                    type: boolean\n                    example: true\n            example:\n                success: true\n            required:\n                - success\n        Sign:\n            type: object\n            properties:\n                access_token:\n                    type: string\n                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ\n                refresh_token:\n                    type: string\n                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ\n                success:\n                    type: boolean\n                    example: true\n            example:\n                access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ\n                refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ\n                success: true\n            required:\n                - access_token\n                - refresh_token\n                - success\n        SigninRequestBody:\n            type: object\n            properties:\n                email:\n                    type: string\n                    example: guillaume@epitech.eu\n                    format: email\n                password:\n                    type: string\n                    description: Minimum 9 charactères / Chiffre Obligatoire\n                    example: JeSuisUnTest974\n                    pattern: \\d\n                    minLength: 9\n            example:\n                email: guillaume@epitech.eu\n                password: JeSuisUnTest974\n            required:\n                - password\n                - email\n        SignupRequestBody:\n            type: object\n            properties:\n                confirm_password:\n                    type: string\n                    description: Minimum 9 charactères / Chiffre Obligatoire\n                    example: JeSuisUnTest974\n                    pattern: \\d\n                    minLength: 9\n                email:\n                    type: string\n                    example: guillaume@epitech.eu\n                    format: email\n                password:\n                    type: string\n                    description: Minimum 9 charactères / Chiffre Obligatoire\n                    example: JeSuisUnTest974\n                    pattern: \\d\n                    minLength: 9\n            example:\n                confirm_password: JeSuisUnTest974\n                email: guillaume@epitech.eu\n                password: JeSuisUnTest974\n            required:\n                - email\n                - password\n                - confirm_password\n        UnknownError:\n            type: object\n            properties:\n                err:\n                    type: string\n                    example: sql no rows affected\n                error_code:\n                    type: string\n                    example: TX_UPDATE_ITEM\n                success:\n                    type: boolean\n                    default: false\n                    example: true\n            description: Error not identified (500)\n            example:\n                err: sql no rows affected\n                error_code: TX_UPDATE_ITEM\n                success: true\n            required:\n                - err\n                - success\n                - error_code\n        UpdateAvatarRequestBody:\n            type: object\n            properties:\n                avatar:\n                    type: string\n                    description: Url of the avatar and stock in db\n                    example: Dolor accusantium quia.\n                id:\n                    type: string\n                    example: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25\n                    format: uuid\n            example:\n                avatar: Dolorem asperiores.\n                id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25\n            required:\n                - id\n                - avatar\n        UpdateDescriptionRequestBody:\n            type: object\n            properties:\n                email:\n                    type: string\n                    example: guillaume@gmail.com\n                    format: email\n                firstname:\n                    type: string\n                    example: Guillaume\n                    minLength: 2\n                    maxLength: 20\n                id:\n                    type: string\n                    example: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25\n                    format: uuid\n                lastname:\n                    type: string\n                    example: Morin\n                    minLength: 2\n                    maxLength: 20\n            example:\n                email: guillaume@gmail.com\n                firstname: Guillaume\n                id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25\n                lastname: Morin\n            required:\n                - email\n                - id\n        UpdateDescriptionResponseBody:\n            type: object\n            properties:\n                success:\n                    type: boolean\n                    example: false\n                user:\n                    $ref: '#/components/schemas/ResUser'\n            example:\n                success: false\n                user:\n                    avatar: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png\n                    email: guillaume@gmail.com\n                    firstname: Guillaume\n                    id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25\n                    lastname: Morin\n                    role: Est distinctio veritatis quibusdam.\n            required:\n                - success\n    securitySchemes:\n        OAuth2_header_Authorization:\n            type: oauth2\n            description: Use OAuth2 to authenticate\n            flows:\n                clientCredentials:\n                    tokenUrl: /authorization\n                    refreshUrl: /refresh\n                    scopes:\n                        api:read: Provides read access\n        jwt_header_jwtToken:\n            type: http\n            description: Secures endpoint by requiring a valid JWT token retrieved via the signin endpoint. Supports scopes \"api:read\" and \"api:write\".\n            scheme: bearer\ntags:\n    - name: openapi\n    - name: fileapi\n    - name: auth\n      description: Forget password / reset password / send Email Code\n    - name: files\n      description: files of the api\n    - name: jwtToken\n      description: Use Token to authenticate. Signin and Signup\n    - name: oAuth\n      description: Oauth to authentificate\n    - name: users\n      description: users of the api\n",
			"canonicalURL": "/github.com/gmorinn/starter-pack-goa@f03a9cda9370261872bd2951bb3d480ae1682628/-/blob/gen/http/openapi3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/gmorinn/starter-pack-goa/blob/f03a9cda9370261872bd2951bb3d480ae1682628/gen/http/openapi3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/public/{*path}\": get: operation \"fileapi#/public/{*path}\": parameters: parse parameter \"path\": at gen/http/openapi3.yaml:97:19: parameter MUST contain either a schema property, or a content property"
}