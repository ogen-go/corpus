{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/InsanusMokrassar/MicroUtils"
		},
		"file": {
			"name": "kv.yml",
			"size": 0,
			"path": "repos/ktor/kv.yml",
			"byteSize": 5513,
			"content": "openapi: \"3.0.0\"\ninfo:\n  description: \"This is a template for the KeyValue repositories from [microutils](https://github.com/InsanusMokrassar/MicroUtils/tree/master/repos/ktor/server/src/jvmMain/kotlin/dev/inmo/micro_utils/repos/ktor/server/key/value)\"\n  version: \"0.11.1\"\n  title: \"KeyValue Repo\"\n  contact:\n    email: \"ovsyannikov.alexey95@gmail.com\"\ntags:\n  - name: \"Read\"\n    description: \"Operations with `get` request in most cases\"\n  - name: \"Write\"\n    description: \"Operations with `post` request in most cases\"\n\ncomponents:\n  parameters:\n    KeyInQuery:\n      in: \"query\"\n      name: \"key\"\n      schema:\n        $ref: \"#/components/schemas/Key\"\n    PaginationInQueryPage:\n      in: \"query\"\n      name: \"ppage\"\n      description: \"Page of pagination\"\n      schema:\n        type: integer\n      required: false\n    PaginationInQuerySize:\n      in: \"query\"\n      name: \"psize\"\n      description: \"Size of each page in pagination\"\n      schema:\n        type: integer\n      required: false\n    ReversedInQuery:\n      in: \"query\"\n      name: \"reversed\"\n      description: \"If passed, will tell to reverse the result pages\"\n      schema:\n        type: boolean\n      required: false\n    ValueInQuery:\n      in: \"query\"\n      name: \"value\"\n      schema:\n        $ref: \"#/components/schemas/Value\"\n  schemas:\n    Key:\n      type: integer\n      description: \"REWRITE THIS TYPE AS KEY IN SWAGGER FILE\"\n    Value:\n      type: integer\n      description: \"REWRITE THIS TYPE AS VALUE IN SWAGGER FILE\"\n    PaginationResult:\n      type: object\n      properties:\n        page:\n          type: integer\n          description: \"Page of pagination\"\n        pagesNumber:\n          type: integer\n          description: \"Count of pages with the size from this pagination\"\n        size:\n          type: integer\n          description: \"Size of each page in pagination\"\n        results:\n          type: array\n          description: \"Array of all elements on that page. Size of pagination and size of array can be different and it can be interpreted like current page is the last one\"\n          items:\n            type: object\n\npaths:\n  /get:\n    get:\n      tags:\n        - \"Read\"\n      parameters:\n        - allOf:\n            - $ref: \"#/components/parameters/KeyInQuery\"\n            - required: true\n      responses:\n        \"200\":\n          description: \"Element by key\"\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/Value\"\n        \"204\":\n          description: \"No value by id\"\n  /values:\n    get:\n      tags:\n        - \"Read\"\n      parameters:\n        - $ref: \"#/components/parameters/PaginationInQueryPage\"\n        - $ref: \"#/components/parameters/PaginationInQuerySize\"\n        - $ref: \"#/components/parameters/ReversedInQuery\"\n      responses:\n        \"200\":\n          description: \"Pagination with elements\"\n          content:\n            \"*/*\":\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/PaginationResult\"\n                  - properties:\n                      results:\n                        items:\n                          $ref: \"#/components/schemas/Value\"\n  /keys:\n    get:\n      tags:\n        - \"Read\"\n      parameters:\n        - $ref: \"#/components/parameters/PaginationInQueryPage\"\n        - $ref: \"#/components/parameters/PaginationInQuerySize\"\n        - $ref: \"#/components/parameters/ReversedInQuery\"\n        - $ref: \"#/components/parameters/ValueInQuery\"\n          required: false\n      responses:\n        \"200\":\n          description: \"Pagination with elements\"\n          content:\n            \"*/*\":\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/PaginationResult\"\n                  - properties:\n                      results:\n                        items:\n                          $ref: \"#/components/schemas/Key\"\n  /contains:\n    get:\n      tags:\n        - \"Read\"\n      parameters:\n        - $ref: \"#/components/parameters/KeyInQuery\"\n          required: true\n      responses:\n        \"200\":\n          description: \"Object with id availability in repo\"\n          content:\n            \"*/*\":\n              schema:\n                type: boolean\n  /count:\n    get:\n      tags:\n        - \"Read\"\n      responses:\n        \"200\":\n          description: \"Amount of objects in repo\"\n          content:\n            \"*/*\":\n              schema:\n                type: integer\n\n\n  /set:\n    post:\n      tags:\n        - \"Write\"\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              type: object\n              additionalProperties:\n                $ref: \"#/components/schemas/Value\"\n              description: \"Map with new elements to set. Use keys as a keys of this map\"\n      responses:\n        \"200\":\n          description: \"Will return 200 if everything has been completed ok\"\n  /unset:\n    post:\n      tags:\n        - \"Write\"\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              type: array\n              items:\n                $ref: \"#/components/schemas/Key\"\n      responses:\n        \"200\":\n          description: \"Objects with keys from body has been unset\"\n  /unsetWithValues:\n    post:\n      tags:\n        - \"Write\"\n      requestBody:\n        content:\n          \"*/*\":\n            schema:\n              type: array\n              items:\n                $ref: \"#/components/schemas/Value\"\n      responses:\n        \"200\":\n          description: \"Objects with values from body has been unset\"\n",
			"canonicalURL": "/github.com/InsanusMokrassar/MicroUtils@522435f0965cef855865bf79f5e0074466fdf70e/-/blob/repos/ktor/kv.yml",
			"externalURLs": [
				{
					"url": "https://github.com/InsanusMokrassar/MicroUtils/blob/522435f0965cef855865bf79f5e0074466fdf70e/repos/ktor/kv.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/get\": get: parameters: parse parameter \"\": at 1:2111: unknown parameter location \"\""
}