{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/clouditor/clouditor"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/discovery/openapi.yaml",
			"byteSize": 3166,
			"content": "# Generated with protoc-gen-openapi\n# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi\n\nopenapi: 3.0.3\ninfo:\n    title: Discovery API\n    description: |-\n        Discovers cloud resources and maps these properties to the format of the\n         ontology\n    version: 0.0.1\npaths:\n    /v1/discovery/query:\n        post:\n            tags:\n                - Discovery\n            description: Lists all evidences collected in the last run, exposed as REST.\n            operationId: Discovery_Query\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/QueryRequest'\n                required: true\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/QueryResponse'\n    /v1/discovery/start:\n        post:\n            tags:\n                - Discovery\n            description: Starts discovering the cloud resources, exposed as REST.\n            operationId: Discovery_Start\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/StartDiscoveryRequest'\n                required: true\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/StartDiscoveryResponse'\ncomponents:\n    schemas:\n        AnyJSONValue:\n            oneOf:\n                - type: string\n                - type: number\n                - type: integer\n                - type: boolean\n                - type: object\n                - type: array\n                  items:\n                    $ref: '#/components/schemas/AnyJSONValue'\n            description: AnyJSONValue is a \"catch all\" type that can hold any JSON value, except null as this is not allowed in OpenAPI\n        ListValue:\n            type: object\n            properties:\n                values:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/AnyJSONValue'\n                    description: Repeated field of dynamically typed values.\n            description: '`ListValue` is a wrapper around a repeated field of values. The JSON representation for `ListValue` is JSON array.'\n        QueryRequest:\n            type: object\n            properties:\n                filteredType:\n                    type: string\n        QueryResponse:\n            type: object\n            properties:\n                results:\n                    $ref: '#/components/schemas/ListValue'\n        StartDiscoveryRequest:\n            type: object\n            properties: {}\n        StartDiscoveryResponse:\n            type: object\n            properties:\n                successful:\n                    type: boolean\ntags:\n    - name: Discovery\n"
		}
	},
	"Error": "parse: parse spec: paths: /v1/discovery/query: post: operation \"Discovery_Query\": responses: 200: content: \"application/json\": schema: parse schema: resolve \"#/components/schemas/QueryResponse\": parse schema: property \"results\": parse schema: resolve \"#/components/schemas/ListValue\": parse schema: property \"values\": parse schema: item: parse schema: resolve \"#/components/schemas/AnyJSONValue\": parse schema: oneOf: [5]: parse schema: item: parse schema: resolve \"#/components/schemas/AnyJSONValue\": infinite recursion"
}