{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/adyen.com/TestCardService/1/openapi.yaml",
			"byteSize": 8693,
			"content": "openapi: 3.1.0\nservers:\n  - url: https://pal-test.adyen.com/pal/services/TestCard/v1\ninfo:\n  contact:\n    email: developer-experience@adyen.com\n    name: Adyen Developer Experience team\n    url: https://www.adyen.help/hc/en-us/community/topics\n    x-twitter: Adyen\n  description: The Test Cards API provides endpoints for generating custom test card numbers. For more information, refer to [Custom test cards](https://docs.adyen.com/development-resources/test-cards/create-test-cards) documentation.\n  termsOfService: https://www.adyen.com/legal/terms-and-conditions\n  title: Adyen Test Cards API\n  version: \"1\"\n  x-apisguru-categories:\n    - payment\n  x-logo:\n    url: https://twitter.com/Adyen/profile_image?size=original\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/Adyen/adyen-openapi/master/json/TestCardService-v1.json\n      version: \"3.1\"\n  x-providerName: adyen.com\n  x-publicVersion: true\n  x-serviceName: TestCardService\npaths:\n  /createTestCardRanges:\n    post:\n      description: Creates one or more test card ranges.\n      operationId: post-createTestCardRanges\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateTestCardRangesRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateTestCardRangesResult\"\n          description: OK - the request has succeeded.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Bad Request - a problem reading or understanding the request.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unauthorized - authentication required.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Forbidden - insufficient permissions to process the request.\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Unprocessable Entity - a request validation error.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceError\"\n          description: Internal Server Error - the server could not process the request.\n      security:\n        - BasicAuth: []\n        - ApiKeyAuth: []\n      summary: Creates one or more test card ranges.\n      tags:\n        - General\n      x-groupName: General\n      x-sortIndex: 0\ncomponents:\n  examples: {}\n  schemas:\n    AvsAddress:\n      properties:\n        streetAddress:\n          description: |-\n            The street and house number of the address.\n\n            Example: 1 Infinite Loop, Cupertino.\n          type: string\n        zip:\n          description: |-\n            The zip or post code of the address.\n\n            Example: CA 95014\n          type: string\n      required:\n        - streetAddress\n    CreateTestCardRangesRequest:\n      properties:\n        accountCode:\n          description: The code of the account, for which the test card ranges should be created.\n          type: string\n        accountTypeCode:\n          description: |-\n            The type of the account, for which the test card ranges should be created.\n\n            Permitted values:\n            * Company\n            * MerchantAccount\n            \u003e These values are case-sensitive.\n          type: string\n        testCardRanges:\n          description: A list of test card ranges to create.\n          items:\n            $ref: \"#/components/schemas/TestCardRange\"\n          type: array\n      required:\n        - accountTypeCode\n        - accountCode\n        - testCardRanges\n    CreateTestCardRangesResult:\n      properties:\n        rangeCreationResults:\n          description: The results of the test card creation.\n          items:\n            $ref: \"#/components/schemas/TestCardRangeCreationResult\"\n          type: array\n      required:\n        - rangeCreationResults\n    ServiceError:\n      properties:\n        errorCode:\n          description: The error code mapped to the error message.\n          type: string\n        errorType:\n          description: The category of the error.\n          type: string\n        message:\n          description: A short explanation of the issue.\n          type: string\n        pspReference:\n          description: The PSP reference of the payment.\n          type: string\n        status:\n          description: The HTTP response status.\n          format: int32\n          type: integer\n    TestCardRange:\n      properties:\n        address:\n          $ref: \"#/components/schemas/AvsAddress\"\n          description: Contains the billing address of the card holder. The address details need to be AVS-compliant, which means that you need to provide at least street address.\n        cardHolderName:\n          description: The name of the card holder, as it appears on the card, for the test card range.\n          type: string\n        cvc:\n          description: |-\n            The test card range security code.\n\n            Example: 123\n          type: string\n        expiryMonth:\n          description: |-\n            Expiry month for the test card range.\n\n            Allowed values:\n            * JANUARY\n            * FEBRUARY\n            * MARCH\n            * APRIL\n            * MAY\n            * JUNE\n            * JULY\n            * AUGUST\n            * SEPTEMBER\n            * OCTOBER\n            * NOVEMBER\n            * DECEMBER\n          enum:\n            - APRIL\n            - AUGUST\n            - DECEMBER\n            - FEBRUARY\n            - JANUARY\n            - JULY\n            - JUNE\n            - MARCH\n            - MAY\n            - NOVEMBER\n            - OCTOBER\n            - SEPTEMBER\n          type: string\n        expiryYear:\n          description: |-\n            Expiry year for the test card range.\n\n            Example: 2020\n          format: int32\n          type: integer\n        rangeEnd:\n          description: |-\n            The last test card number in the test card range (inclusive):\n\n            * Min 6, max 19 digits\n            * BIN compliant\n            Example: 5432 1234 1234 4321\n          type: string\n        rangeStart:\n          description: |-\n            The first test card number in the test card range (inclusive):\n\n            * Min 6, max 19 digits\n            * BIN compliant\n            Example: 5432 1234 1234 1234\n          type: string\n        threeDDirectoryServerResponse:\n          description: |-\n            3D Secure server response. It notifies whether the specified card holder is enrolled in a 3D Secure service. Possible values:\n\n            * Y (Authentication available)\n            * N (Card holder not enrolled/not participating)\n            * U (Unable to authenticate)\n          enum:\n            - N\n            - U\n            - Y\n          type: string\n        threeDPassword:\n          description: The password used for 3D Secure authentication.\n          type: string\n        threeDUsername:\n          description: The username used for 3D Secure authentication.\n          type: string\n      required:\n        - rangeStart\n        - rangeEnd\n        - expiryMonth\n        - expiryYear\n        - cardHolderName\n    TestCardRangeCreationResult:\n      properties:\n        cardNumberRangeEnd:\n          description: |-\n            The last test card number in the generated test card range.\n\n            Example: 5432 1234 1234 4321\n          type: string\n        cardNumberRangeStart:\n          description: |-\n            The first test card number in the generated test card range.\n\n            Example: 5432 1234 1234 1234\n          type: string\n        creationResultCode:\n          description: |-\n            Notification message. It informs about the outcome of the operation. Possible values:\n            * CREATED\n            * ALREADY_EXISTS\n            * ERROR\n          enum:\n            - ALREADY_EXISTS\n            - CREATED\n            - ERROR\n          type: string\n        message:\n          description: An optional information message about the result.\n          type: string\n      required:\n        - cardNumberRangeStart\n        - cardNumberRangeEnd\n        - creationResultCode\n  securitySchemes:\n    ApiKeyAuth:\n      in: header\n      name: X-API-Key\n      type: apiKey\n    BasicAuth:\n      scheme: basic\n      type: http\nx-groups:\n  - General\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"CreateTestCardRangesRequest\": parse schema: property \"testCardRanges\": parse schema: item: parse schema: resolve \"#/components/schemas/TestCardRange\": parse schema: property \"threeDDirectoryServerResponse\": parse enum values: parse value \"false\": expected type \"string\", got \"bool\""
}