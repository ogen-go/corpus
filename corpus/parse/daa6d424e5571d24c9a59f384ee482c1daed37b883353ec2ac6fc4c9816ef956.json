{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/factset/enterprise-sdk"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "code/java/ProcuretoPayAPISCIM/v1/api/openapi.yaml",
			"byteSize": 139445,
			"content": "openapi: 3.0.0\ninfo:\n  description: FactSet's SCIM API implementation.\n  title: FactSet SCIM API\n  version: 1.0.0\nservers:\n- url: https://api.factset.com/scim/v2/\nsecurity:\n- FactSetApiKey: []\n- FactSetOAuth2: []\npaths:\n  /ServiceProviderConfig:\n    get:\n      responses:\n        \"200\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ServiceProviderConfig'\n          description: Success.\n        \"401\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FactSet.net credentials are missing or invalid.\n                status: \"401\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User has not been authenticated.\n        \"500\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error.\n      security:\n      - basicAuth: []\n      summary: Get server configuration.\n      tags:\n      - Server configuration\n      x-accepts: application/scim+json\n  /Schemas:\n    get:\n      parameters:\n      - description: Result start index. The one-based index of the first result to\n          be returned in the list of resources. For example, to exclude the first\n          two resources, use a *startIndex* value of 3. This parameter has a default\n          value of 1. This index applies *after* any resource filtration has been\n          applied as specified by the *filter* argument.\n        explode: true\n        in: query\n        name: startIndex\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: Maximum resource count. The server will not return more resources\n          than this value, although it may return fewer.\n        explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: integer\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/SchemaList'\n          description: Success.\n        \"401\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FactSet.net credentials are missing or invalid.\n                status: \"401\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User has not been authenticated.\n        \"403\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM\n                  API.\n                status: \"403\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User is not authorized to use this API.\n        \"500\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error.\n      security:\n      - basicAuth: []\n      summary: Get a list of schemas.\n      tags:\n      - Schemas\n      x-accepts: application/scim+json\n  /Schemas/{id}:\n    get:\n      parameters:\n      - description: ID of resource.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Schema'\n          description: Success.\n        \"401\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FactSet.net credentials are missing or invalid.\n                status: \"401\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User has not been authenticated.\n        \"404\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: Schema urn:scim:schemas:extension:FactSet:Core:1.0:User not\n                  found\n                status: \"404\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Schema not found.\n        \"500\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error.\n      security:\n      - basicAuth: []\n      summary: Get a schema.\n      tags:\n      - Schemas\n      x-accepts: application/scim+json\n  /Users:\n    get:\n      parameters:\n      - description: Resource filter string. See [RFC 7644 section 3.4.2.2](https://tools.ietf.org/html/rfc7644#section-3.4.2.2)\n          for syntax. Note this API implementation also supports a non-standard \"re\"\n          operator for regular expression matching against strings.\n        explode: true\n        in: query\n        name: filter\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Result start index. The one-based index of the first result to\n          be returned in the list of resources. For example, to exclude the first\n          two resources, use a *startIndex* value of 3. This parameter has a default\n          value of 1. This index applies *after* any resource filtration has been\n          applied as specified by the *filter* argument.\n        explode: true\n        in: query\n        name: startIndex\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: Maximum resource count. The server will not return more resources\n          than this value, although it may return fewer.\n        explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: Attribute whitelist filter string. A comma-separated list of\n          resource attribute names to be returned in the response, overriding the\n          set of attributes that would be returned by default. Attribute names must\n          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)\n          This parameter cannot be used with the *excludedAttributes* parameter.\n        explode: true\n        in: query\n        name: attributes\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Attribute blacklist filter string. A comma-separated list of\n          resource attribute names to be excluded in the response, overriding the\n          set of attributes that would be returned by default. Attribute names must\n          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)\n          This parameter cannot be used with the *attributes* parameter.\n        explode: true\n        in: query\n        name: excludedAttributes\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/UserResourceList'\n          description: Success.\n        \"400\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                scimType: invalidFilter\n                detail: Invalid filter value.\n                status: \"400\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Invalid filter value provided.\n        \"401\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FactSet.net credentials are missing or invalid.\n                status: \"401\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User has not been authenticated.\n        \"403\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM\n                  API.\n                status: \"403\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User is not authorized to use this API.\n        \"500\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error.\n      security:\n      - basicAuth: []\n      summary: Get a list of users.\n      tags:\n      - Users\n      x-accepts: application/scim+json\n    post:\n      requestBody:\n        $ref: '#/components/requestBodies/userResource'\n      responses:\n        \"201\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/UserResource'\n          description: Success.\n        \"400\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                scimType: invalidValue\n                detail: Provided resource contains invalid data.\n                status: \"400\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Provided resource contains invalid data.\n        \"401\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FactSet.net credentials are missing or invalid.\n                status: \"401\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User has not been authenticated.\n        \"403\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM\n                  API.\n                status: \"403\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User is not authorized to use this API.\n        \"500\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error.\n      security:\n      - basicAuth: []\n      summary: Create a user.\n      tags:\n      - Users\n      x-contentType: application/scim+json\n      x-accepts: application/scim+json\n  /Users/{id}:\n    delete:\n      parameters:\n      - description: ID of resource.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"204\":\n          description: User successfully deleted.\n        \"401\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FactSet.net credentials are missing or invalid.\n                status: \"401\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User has not been authenticated.\n        \"403\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM\n                  API.\n                status: \"403\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User is not authorized to use this API.\n        \"404\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: User FIN_WEALTH-123456 was not found.\n                status: \"404\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User not found.\n        \"500\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error.\n      security:\n      - basicAuth: []\n      summary: Delete a user\n      tags:\n      - Users\n      x-accepts: application/scim+json\n    get:\n      parameters:\n      - description: ID of resource.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/UserResource'\n          description: Success.\n        \"401\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FactSet.net credentials are missing or invalid.\n                status: \"401\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User has not been authenticated.\n        \"403\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM\n                  API.\n                status: \"403\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User is not authorized to use this API.\n        \"404\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: User FIN_WEALTH-123456 was not found.\n                status: \"404\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User not found.\n        \"500\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error.\n      security:\n      - basicAuth: []\n      summary: Get a user.\n      tags:\n      - Users\n      x-accepts: application/scim+json\n    patch:\n      parameters:\n      - description: ID of resource.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        $ref: '#/components/requestBodies/patchUserResource'\n      responses:\n        \"200\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/UserResource'\n          description: Success.\n        \"400\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                scimType: invalidValue\n                detail: Provided resource contains invalid data.\n                status: \"400\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Patch request invalid.\n        \"401\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FactSet.net credentials are missing or invalid.\n                status: \"401\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User has not been authenticated.\n        \"403\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM\n                  API.\n                status: \"403\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User is not authorized to use this API.\n        \"500\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error.\n      security:\n      - basicAuth: []\n      summary: Patch a user (add, replace, or remove attributes of a user.)\n      tags:\n      - Users\n      x-contentType: application/scim+json\n      x-accepts: application/scim+json\n    put:\n      parameters:\n      - description: ID of resource.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        $ref: '#/components/requestBodies/userResource'\n      responses:\n        \"200\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/UserResource'\n          description: Success.\n        \"400\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                scimType: invalidValue\n                detail: Provided resource contains invalid data.\n                status: \"400\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Provided resource contains invalid data.\n        \"401\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FactSet.net credentials are missing or invalid.\n                status: \"401\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User has not been authenticated.\n        \"403\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM\n                  API.\n                status: \"403\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User is not authorized to use this API.\n        \"404\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: User FIN_WEALTH-123456 was not found.\n                status: \"404\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User not found.\n        \"500\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error.\n      security:\n      - basicAuth: []\n      summary: Replace a user.\n      tags:\n      - Users\n      x-contentType: application/scim+json\n      x-accepts: application/scim+json\n  /Groups:\n    get:\n      parameters:\n      - description: Resource filter string. See [RFC 7644 section 3.4.2.2](https://tools.ietf.org/html/rfc7644#section-3.4.2.2)\n          for syntax. Note this API implementation also supports a non-standard \"re\"\n          operator for regular expression matching against strings.\n        explode: true\n        in: query\n        name: filter\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Result start index. The one-based index of the first result to\n          be returned in the list of resources. For example, to exclude the first\n          two resources, use a *startIndex* value of 3. This parameter has a default\n          value of 1. This index applies *after* any resource filtration has been\n          applied as specified by the *filter* argument.\n        explode: true\n        in: query\n        name: startIndex\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: Maximum resource count. The server will not return more resources\n          than this value, although it may return fewer.\n        explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: Attribute whitelist filter string. A comma-separated list of\n          resource attribute names to be returned in the response, overriding the\n          set of attributes that would be returned by default. Attribute names must\n          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)\n          This parameter cannot be used with the *excludedAttributes* parameter.\n        explode: true\n        in: query\n        name: attributes\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Attribute blacklist filter string. A comma-separated list of\n          resource attribute names to be excluded in the response, overriding the\n          set of attributes that would be returned by default. Attribute names must\n          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)\n          This parameter cannot be used with the *attributes* parameter.\n        explode: true\n        in: query\n        name: excludedAttributes\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/GroupResourceList'\n          description: Success.\n        \"400\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                scimType: invalidFilter\n                detail: Invalid filter value.\n                status: \"400\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Invalid filter value provided.\n        \"401\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FactSet.net credentials are missing or invalid.\n                status: \"401\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User has not been authenticated.\n        \"403\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM\n                  API.\n                status: \"403\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User is not authorized to use this API.\n        \"500\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error.\n      security:\n      - basicAuth: []\n      summary: Get a list of groups.\n      tags:\n      - Groups\n      x-accepts: application/scim+json\n  /Group/{id}:\n    get:\n      parameters:\n      - description: ID of resource.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/GroupResource'\n          description: Success.\n        \"401\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FactSet.net credentials are missing or invalid.\n                status: \"401\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User has not been authenticated.\n        \"403\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM\n                  API.\n                status: \"403\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User is not authorized to use this API.\n        \"404\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: Group Domain btud - Pod 04 - CitrixApps - Cymba OMS was not\n                  found.\n                status: \"404\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Group not found.\n        \"500\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error.\n      security:\n      - basicAuth: []\n      summary: Get a group.\n      tags:\n      - Groups\n      x-accepts: application/scim+json\n    patch:\n      parameters:\n      - description: ID of resource.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        $ref: '#/components/requestBodies/patchGroupResource'\n      responses:\n        \"200\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/GroupResource'\n          description: Success.\n        \"400\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                scimType: invalidValue\n                detail: Provided resource contains invalid data.\n                status: \"400\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Patch request invalid.\n        \"401\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FactSet.net credentials are missing or invalid.\n                status: \"401\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User has not been authenticated.\n        \"403\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM\n                  API.\n                status: \"403\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User is not authorized to use this API.\n        \"500\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error.\n      security:\n      - basicAuth: []\n      summary: Patch a group (add, replace, or remove attributes of a group.)\n      tags:\n      - Groups\n      x-contentType: application/scim+json\n      x-accepts: application/scim+json\n    put:\n      parameters:\n      - description: ID of resource.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        $ref: '#/components/requestBodies/groupResource'\n      responses:\n        \"200\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/GroupResource'\n          description: Success.\n        \"400\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                scimType: invalidValue\n                detail: Provided resource contains invalid data.\n                status: \"400\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Provided resource contains invalid data.\n        \"401\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FactSet.net credentials are missing or invalid.\n                status: \"401\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User has not been authenticated.\n        \"403\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM\n                  API.\n                status: \"403\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User is not authorized to use this API.\n        \"404\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: Group Domain btud - Pod 04 - CitrixApps - Cymba OMS was not\n                  found.\n                status: \"404\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Group not found.\n        \"500\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error.\n      security:\n      - basicAuth: []\n      summary: Replace a group.\n      tags:\n      - Groups\n      x-contentType: application/scim+json\n      x-accepts: application/scim+json\n  /Locations:\n    get:\n      parameters:\n      - description: Resource filter string. See [RFC 7644 section 3.4.2.2](https://tools.ietf.org/html/rfc7644#section-3.4.2.2)\n          for syntax. Note this API implementation also supports a non-standard \"re\"\n          operator for regular expression matching against strings.\n        explode: true\n        in: query\n        name: filter\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Result start index. The one-based index of the first result to\n          be returned in the list of resources. For example, to exclude the first\n          two resources, use a *startIndex* value of 3. This parameter has a default\n          value of 1. This index applies *after* any resource filtration has been\n          applied as specified by the *filter* argument.\n        explode: true\n        in: query\n        name: startIndex\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: Maximum resource count. The server will not return more resources\n          than this value, although it may return fewer.\n        explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: Attribute whitelist filter string. A comma-separated list of\n          resource attribute names to be returned in the response, overriding the\n          set of attributes that would be returned by default. Attribute names must\n          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)\n          This parameter cannot be used with the *excludedAttributes* parameter.\n        explode: true\n        in: query\n        name: attributes\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Attribute blacklist filter string. A comma-separated list of\n          resource attribute names to be excluded in the response, overriding the\n          set of attributes that would be returned by default. Attribute names must\n          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)\n          This parameter cannot be used with the *attributes* parameter.\n        explode: true\n        in: query\n        name: excludedAttributes\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/LocationResourceList'\n          description: Success.\n        \"400\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                scimType: invalidFilter\n                detail: Invalid filter value.\n                status: \"400\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Invalid filter value provided.\n        \"401\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FactSet.net credentials are missing or invalid.\n                status: \"401\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User has not been authenticated.\n        \"403\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM\n                  API.\n                status: \"403\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User is not authorized to use this API.\n        \"500\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error.\n      security:\n      - basicAuth: []\n      summary: Get a list of locations.\n      tags:\n      - Locations\n      x-accepts: application/scim+json\n  /Locations/{id}:\n    get:\n      parameters:\n      - description: ID of resource.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/LocationResource'\n          description: Success.\n        \"401\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FactSet.net credentials are missing or invalid.\n                status: \"401\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User has not been authenticated.\n        \"403\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM\n                  API.\n                status: \"403\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User is not authorized to use this API.\n        \"404\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: Location 1598276 was not found.\n                status: \"404\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Location not found.\n        \"500\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error.\n      security:\n      - basicAuth: []\n      summary: Get a location.\n      tags:\n      - Locations\n      x-accepts: application/scim+json\n    patch:\n      parameters:\n      - description: ID of resource.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        $ref: '#/components/requestBodies/patchLocationResource'\n      responses:\n        \"200\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/LocationResource'\n          description: Success.\n        \"400\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                scimType: invalidValue\n                detail: Provided resource contains invalid data.\n                status: \"400\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Patch request invalid.\n        \"401\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FactSet.net credentials are missing or invalid.\n                status: \"401\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User has not been authenticated.\n        \"403\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM\n                  API.\n                status: \"403\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User is not authorized to use this API.\n        \"500\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error.\n      security:\n      - basicAuth: []\n      summary: Patch a location (add, replace, or remove attributes of a location.)\n      tags:\n      - Locations\n      x-contentType: application/scim+json\n      x-accepts: application/scim+json\n    put:\n      parameters:\n      - description: ID of resource.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        $ref: '#/components/requestBodies/locationResource'\n      responses:\n        \"200\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/LocationResource'\n          description: Success.\n        \"400\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                scimType: invalidValue\n                detail: Provided resource contains invalid data.\n                status: \"400\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Provided resource contains invalid data.\n        \"401\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FactSet.net credentials are missing or invalid.\n                status: \"401\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User has not been authenticated.\n        \"403\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM\n                  API.\n                status: \"403\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User is not authorized to use this API.\n        \"404\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: Location 1598276 was not found.\n                status: \"404\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Location not found.\n        \"500\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error.\n      security:\n      - basicAuth: []\n      summary: Replace a location.\n      tags:\n      - Locations\n      x-contentType: application/scim+json\n      x-accepts: application/scim+json\n  /Products:\n    get:\n      parameters:\n      - description: Resource filter string. See [RFC 7644 section 3.4.2.2](https://tools.ietf.org/html/rfc7644#section-3.4.2.2)\n          for syntax. Note this API implementation also supports a non-standard \"re\"\n          operator for regular expression matching against strings.\n        explode: true\n        in: query\n        name: filter\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Result start index. The one-based index of the first result to\n          be returned in the list of resources. For example, to exclude the first\n          two resources, use a *startIndex* value of 3. This parameter has a default\n          value of 1. This index applies *after* any resource filtration has been\n          applied as specified by the *filter* argument.\n        explode: true\n        in: query\n        name: startIndex\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: Maximum resource count. The server will not return more resources\n          than this value, although it may return fewer.\n        explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: Attribute whitelist filter string. A comma-separated list of\n          resource attribute names to be returned in the response, overriding the\n          set of attributes that would be returned by default. Attribute names must\n          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)\n          This parameter cannot be used with the *excludedAttributes* parameter.\n        explode: true\n        in: query\n        name: attributes\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Attribute blacklist filter string. A comma-separated list of\n          resource attribute names to be excluded in the response, overriding the\n          set of attributes that would be returned by default. Attribute names must\n          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)\n          This parameter cannot be used with the *attributes* parameter.\n        explode: true\n        in: query\n        name: excludedAttributes\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ProductResourceList'\n          description: Success.\n        \"400\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                scimType: invalidFilter\n                detail: Invalid filter value.\n                status: \"400\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Invalid filter value provided.\n        \"401\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FactSet.net credentials are missing or invalid.\n                status: \"401\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User has not been authenticated.\n        \"403\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM\n                  API.\n                status: \"403\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User is not authorized to use this API.\n        \"500\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error.\n      security:\n      - basicAuth: []\n      summary: Get a list of products.\n      tags:\n      - Products\n      x-accepts: application/scim+json\n  /Products/{id}:\n    get:\n      parameters:\n      - description: ID of resource.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/ProductResource'\n          description: Success.\n        \"401\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FactSet.net credentials are missing or invalid.\n                status: \"401\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User has not been authenticated.\n        \"403\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM\n                  API.\n                status: \"403\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User is not authorized to use this API.\n        \"404\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: Product 6781 was not found.\n                status: \"404\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Product not found.\n        \"500\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error.\n      security:\n      - basicAuth: []\n      summary: Get a product.\n      tags:\n      - Products\n      x-accepts: application/scim+json\n  /VermilionUsers:\n    get:\n      parameters:\n      - description: Resource filter string. See [RFC 7644 section 3.4.2.2](https://tools.ietf.org/html/rfc7644#section-3.4.2.2)\n          for syntax. Note this API implementation also supports a non-standard \"re\"\n          operator for regular expression matching against strings.\n        explode: true\n        in: query\n        name: filter\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Result start index. The one-based index of the first result to\n          be returned in the list of resources. For example, to exclude the first\n          two resources, use a *startIndex* value of 3. This parameter has a default\n          value of 1. This index applies *after* any resource filtration has been\n          applied as specified by the *filter* argument.\n        explode: true\n        in: query\n        name: startIndex\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: Maximum resource count. The server will not return more resources\n          than this value, although it may return fewer.\n        explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: Attribute whitelist filter string. A comma-separated list of\n          resource attribute names to be returned in the response, overriding the\n          set of attributes that would be returned by default. Attribute names must\n          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)\n          This parameter cannot be used with the *excludedAttributes* parameter.\n        explode: true\n        in: query\n        name: attributes\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Attribute blacklist filter string. A comma-separated list of\n          resource attribute names to be excluded in the response, overriding the\n          set of attributes that would be returned by default. Attribute names must\n          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)\n          This parameter cannot be used with the *attributes* parameter.\n        explode: true\n        in: query\n        name: excludedAttributes\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/VermilionUserResource'\n          description: Success.\n        \"400\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                scimType: invalidFilter\n                detail: Invalid filter value.\n                status: \"400\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Invalid filter value provided.\n        \"401\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FactSet.net credentials are missing or invalid.\n                status: \"401\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User has not been authenticated.\n        \"403\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM\n                  API.\n                status: \"403\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User is not authorized to use this API.\n        \"500\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error.\n      security:\n      - basicAuth: []\n      summary: Get a list of Vermilion users.\n      tags:\n      - VermilionUsers\n      x-accepts: application/scim+json\n    post:\n      requestBody:\n        $ref: '#/components/requestBodies/vermilionUserResource'\n      responses:\n        \"201\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/VermilionUserResource'\n          description: Success.\n        \"400\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                scimType: invalidValue\n                detail: Provided resource contains invalid data.\n                status: \"400\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Provided resource contains invalid data.\n        \"401\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FactSet.net credentials are missing or invalid.\n                status: \"401\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User has not been authenticated.\n        \"403\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM\n                  API.\n                status: \"403\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User is not authorized to use this API.\n        \"500\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error.\n      security:\n      - basicAuth: []\n      summary: Create a Vermilion user.\n      tags:\n      - VermilionUsers\n      x-contentType: application/scim+json\n      x-accepts: application/scim+json\n  /VermilionUsers/{id}:\n    delete:\n      parameters:\n      - description: ID of resource.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"204\":\n          description: User successfully deleted.\n        \"401\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FactSet.net credentials are missing or invalid.\n                status: \"401\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User has not been authenticated.\n        \"403\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM\n                  API.\n                status: \"403\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User is not authorized to use this API.\n        \"404\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: VermilionUser vrsqa-jrs-01:21 was not found.\n                status: \"404\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Vermilion user not found.\n        \"500\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error.\n      security:\n      - basicAuth: []\n      summary: Delete a Vermilion user.\n      tags:\n      - VermilionUsers\n      x-accepts: application/scim+json\n    get:\n      parameters:\n      - description: ID of resource.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/VermilionUserResource'\n          description: Success.\n        \"401\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FactSet.net credentials are missing or invalid.\n                status: \"401\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User has not been authenticated.\n        \"403\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM\n                  API.\n                status: \"403\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User is not authorized to use this API.\n        \"404\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: User FIN_WEALTH-123456 was not found.\n                status: \"404\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User not found.\n        \"500\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error.\n      security:\n      - basicAuth: []\n      summary: Get a Vermilion user.\n      tags:\n      - VermilionUsers\n      x-accepts: application/scim+json\n    patch:\n      parameters:\n      - description: ID of resource.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        $ref: '#/components/requestBodies/patchVermilionUserResource'\n      responses:\n        \"200\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/VermilionUserResource'\n          description: Success.\n        \"400\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                scimType: invalidValue\n                detail: Provided resource contains invalid data.\n                status: \"400\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Patch request invalid.\n        \"401\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FactSet.net credentials are missing or invalid.\n                status: \"401\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User has not been authenticated.\n        \"403\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM\n                  API.\n                status: \"403\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User is not authorized to use this API.\n        \"500\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error.\n      security:\n      - basicAuth: []\n      summary: Patch a Vermilion user (add, replace, or remove attributes of a Vermilion\n        user.)\n      tags:\n      - VermilionUsers\n      x-contentType: application/scim+json\n      x-accepts: application/scim+json\n    put:\n      parameters:\n      - description: ID of resource.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        $ref: '#/components/requestBodies/vermilionUserResource'\n      responses:\n        \"200\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/VermilionUserResource'\n          description: Success.\n        \"400\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                scimType: invalidValue\n                detail: Provided resource contains invalid data.\n                status: \"400\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Provided resource contains invalid data.\n        \"401\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FactSet.net credentials are missing or invalid.\n                status: \"401\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User has not been authenticated.\n        \"403\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM\n                  API.\n                status: \"403\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User is not authorized to use this API.\n        \"404\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: User FIN_WEALTH-123456 was not found.\n                status: \"404\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User not found.\n        \"500\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error.\n      security:\n      - basicAuth: []\n      summary: Replace a Vermilion user.\n      tags:\n      - VermilionUsers\n      x-contentType: application/scim+json\n      x-accepts: application/scim+json\n  /VermilionGroups:\n    get:\n      parameters:\n      - description: Resource filter string. See [RFC 7644 section 3.4.2.2](https://tools.ietf.org/html/rfc7644#section-3.4.2.2)\n          for syntax. Note this API implementation also supports a non-standard \"re\"\n          operator for regular expression matching against strings.\n        explode: true\n        in: query\n        name: filter\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Result start index. The one-based index of the first result to\n          be returned in the list of resources. For example, to exclude the first\n          two resources, use a *startIndex* value of 3. This parameter has a default\n          value of 1. This index applies *after* any resource filtration has been\n          applied as specified by the *filter* argument.\n        explode: true\n        in: query\n        name: startIndex\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: Maximum resource count. The server will not return more resources\n          than this value, although it may return fewer.\n        explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: Attribute whitelist filter string. A comma-separated list of\n          resource attribute names to be returned in the response, overriding the\n          set of attributes that would be returned by default. Attribute names must\n          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)\n          This parameter cannot be used with the *excludedAttributes* parameter.\n        explode: true\n        in: query\n        name: attributes\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Attribute blacklist filter string. A comma-separated list of\n          resource attribute names to be excluded in the response, overriding the\n          set of attributes that would be returned by default. Attribute names must\n          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)\n          This parameter cannot be used with the *attributes* parameter.\n        explode: true\n        in: query\n        name: excludedAttributes\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/VermilionGroupResource'\n          description: Success.\n        \"400\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                scimType: invalidFilter\n                detail: Invalid filter value.\n                status: \"400\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Invalid filter value provided.\n        \"401\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FactSet.net credentials are missing or invalid.\n                status: \"401\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User has not been authenticated.\n        \"403\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM\n                  API.\n                status: \"403\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User is not authorized to use this API.\n        \"500\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error.\n      security:\n      - basicAuth: []\n      summary: Get a list of Vermilion groups.\n      tags:\n      - VermilionGroups\n      x-accepts: application/scim+json\n  /VermilionGroups/{id}:\n    get:\n      parameters:\n      - description: ID of resource.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/VermilionGroupResource'\n          description: Success.\n        \"401\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FactSet.net credentials are missing or invalid.\n                status: \"401\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User has not been authenticated.\n        \"403\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM\n                  API.\n                status: \"403\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User is not authorized to use this API.\n        \"404\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: User FIN_WEALTH-123456 was not found.\n                status: \"404\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User not found.\n        \"500\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error.\n      security:\n      - basicAuth: []\n      summary: Get a Vermilion group.\n      tags:\n      - VermilionGroups\n      x-accepts: application/scim+json\n    patch:\n      parameters:\n      - description: ID of resource.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        $ref: '#/components/requestBodies/patchVermilionGroupResource'\n      responses:\n        \"200\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/VermilionGroupResource'\n          description: Success.\n        \"400\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                scimType: invalidValue\n                detail: Provided resource contains invalid data.\n                status: \"400\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Patch request invalid.\n        \"401\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FactSet.net credentials are missing or invalid.\n                status: \"401\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User has not been authenticated.\n        \"403\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM\n                  API.\n                status: \"403\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User is not authorized to use this API.\n        \"500\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error.\n      security:\n      - basicAuth: []\n      summary: Patch a Vermilion group (add, replace, or remove attributes of a Vermilion\n        group.)\n      tags:\n      - VermilionGroups\n      x-contentType: application/scim+json\n      x-accepts: application/scim+json\n    put:\n      parameters:\n      - description: ID of resource.\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        $ref: '#/components/requestBodies/vermilionGroupResource'\n      responses:\n        \"200\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/VermilionGroupResource'\n          description: Success.\n        \"400\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                scimType: invalidValue\n                detail: Provided resource contains invalid data.\n                status: \"400\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Provided resource contains invalid data.\n        \"401\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FactSet.net credentials are missing or invalid.\n                status: \"401\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User has not been authenticated.\n        \"403\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM\n                  API.\n                status: \"403\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User is not authorized to use this API.\n        \"404\":\n          content:\n            application/scim+json:\n              example:\n                schemas:\n                - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: User FIN_WEALTH-123456 was not found.\n                status: \"404\"\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: User not found.\n        \"500\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error.\n      security:\n      - basicAuth: []\n      summary: Replace a Vermilion group.\n      tags:\n      - VermilionGroups\n      x-contentType: application/scim+json\n      x-accepts: application/scim+json\n  /FileManagerAudit:\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileManagerAudit'\n          description: Success.\n        \"500\":\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error.\n      security:\n      - basicAuth: []\n      summary: Get File Manager audit data.\n      tags:\n      - FileManagerAudit\n      x-accepts: application/json\ncomponents:\n  parameters:\n    resourceId:\n      description: ID of resource.\n      explode: false\n      in: path\n      name: id\n      required: true\n      schema:\n        type: string\n      style: simple\n    filter:\n      description: Resource filter string. See [RFC 7644 section 3.4.2.2](https://tools.ietf.org/html/rfc7644#section-3.4.2.2)\n        for syntax. Note this API implementation also supports a non-standard \"re\"\n        operator for regular expression matching against strings.\n      explode: true\n      in: query\n      name: filter\n      required: false\n      schema:\n        type: string\n      style: form\n    startIndex:\n      description: Result start index. The one-based index of the first result to\n        be returned in the list of resources. For example, to exclude the first two\n        resources, use a *startIndex* value of 3. This parameter has a default value\n        of 1. This index applies *after* any resource filtration has been applied\n        as specified by the *filter* argument.\n      explode: true\n      in: query\n      name: startIndex\n      required: false\n      schema:\n        type: integer\n      style: form\n    count:\n      description: Maximum resource count. The server will not return more resources\n        than this value, although it may return fewer.\n      explode: true\n      in: query\n      name: count\n      required: false\n      schema:\n        type: integer\n      style: form\n    attributes:\n      description: Attribute whitelist filter string. A comma-separated list of resource\n        attribute names to be returned in the response, overriding the set of attributes\n        that would be returned by default. Attribute names must be specified in standard\n        attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)\n        This parameter cannot be used with the *excludedAttributes* parameter.\n      explode: true\n      in: query\n      name: attributes\n      required: false\n      schema:\n        type: string\n      style: form\n    excludedAttributes:\n      description: Attribute blacklist filter string. A comma-separated list of resource\n        attribute names to be excluded in the response, overriding the set of attributes\n        that would be returned by default. Attribute names must be specified in standard\n        attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)\n        This parameter cannot be used with the *attributes* parameter.\n      explode: true\n      in: query\n      name: excludedAttributes\n      required: false\n      schema:\n        type: string\n      style: form\n  requestBodies:\n    userResource:\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/UserResource'\n      description: User resource.\n      required: true\n    patchUserResource:\n      content:\n        application/scim+json:\n          example:\n            schemas:\n            - urn:ietf:params:scim:api:messages:2.0:PatchOp\n            Operations:\n            - op: replace\n              path: urn:scim:schemas:extension:FactSet:Core:1.0:User:roleName\n              value: Wealth Manager\n          schema:\n            $ref: '#/components/schemas/Patch'\n    groupResource:\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/GroupResource'\n      description: Group resource.\n      required: true\n    patchGroupResource:\n      content:\n        application/scim+json:\n          example:\n            schemas:\n            - urn:ietf:params:scim:api:messages:2.0:PatchOp\n            Operations:\n            - op: add\n              path: members\n              value:\n              - value: FIN_WEALTH-123456\n          schema:\n            $ref: '#/components/schemas/Patch'\n    locationResource:\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/LocationResource'\n      description: Location resource.\n      required: true\n    patchLocationResource:\n      content:\n        application/scim+json:\n          example:\n            schemas:\n            - urn:ietf:params:scim:api:messages:2.0:PatchOp\n            Operations:\n            - op: replace\n              path: externalId\n              value:\n              - value: exampleExternalId\n          schema:\n            $ref: '#/components/schemas/Patch'\n    vermilionUserResource:\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/VermilionUserResource'\n      description: Vermilion user resource.\n      required: true\n    patchVermilionUserResource:\n      content:\n        application/scim+json:\n          example:\n            schemas:\n            - urn:ietf:params:scim:api:messages:2.0:PatchOp\n            Operations:\n            - op: replace\n              path: name.formatted\n              value:\n              - value: John Doe\n          schema:\n            $ref: '#/components/schemas/Patch'\n    vermilionGroupResource:\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/VermilionGroupResource'\n      description: Vermilion group resource.\n      required: true\n    patchVermilionGroupResource:\n      content:\n        application/scim+json:\n          example:\n            schemas:\n            - urn:ietf:params:scim:api:messages:2.0:PatchOp\n            Operations:\n            - op: add\n              path: members\n              value:\n              - value: vrsqa-jrs-01:21\n          schema:\n            $ref: '#/components/schemas/Patch'\n  responses:\n    invalidFilterError:\n      content:\n        application/scim+json:\n          example:\n            schemas:\n            - urn:ietf:params:scim:api:messages:2.0:Error\n            scimType: invalidFilter\n            detail: Invalid filter value.\n            status: \"400\"\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Invalid filter value provided.\n    invalidResourceProvidedError:\n      content:\n        application/scim+json:\n          example:\n            schemas:\n            - urn:ietf:params:scim:api:messages:2.0:Error\n            scimType: invalidValue\n            detail: Provided resource contains invalid data.\n            status: \"400\"\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Provided resource contains invalid data.\n    invalidPatchRequestError:\n      content:\n        application/scim+json:\n          example:\n            schemas:\n            - urn:ietf:params:scim:api:messages:2.0:Error\n            scimType: invalidValue\n            detail: Provided resource contains invalid data.\n            status: \"400\"\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Patch request invalid.\n    unauthorizedError:\n      content:\n        application/scim+json:\n          example:\n            schemas:\n            - urn:ietf:params:scim:api:messages:2.0:Error\n            detail: FactSet.net credentials are missing or invalid.\n            status: \"401\"\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: User has not been authenticated.\n    forbiddenError:\n      content:\n        application/scim+json:\n          example:\n            schemas:\n            - urn:ietf:params:scim:api:messages:2.0:Error\n            detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM API.\n            status: \"403\"\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: User is not authorized to use this API.\n    internalServerError:\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Internal server error.\n    serviceProviderConfigSuccess:\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/ServiceProviderConfig'\n      description: Success.\n    schemaSuccess:\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/Schema'\n      description: Success.\n    schemasSuccess:\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/SchemaList'\n      description: Success.\n    userSuccess:\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/UserResource'\n      description: Success.\n    usersSuccess:\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/UserResourceList'\n      description: Success.\n    userNotFoundError:\n      content:\n        application/scim+json:\n          example:\n            schemas:\n            - urn:ietf:params:scim:api:messages:2.0:Error\n            detail: User FIN_WEALTH-123456 was not found.\n            status: \"404\"\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: User not found.\n    groupSuccess:\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/GroupResource'\n      description: Success.\n    groupsSuccess:\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/GroupResourceList'\n      description: Success.\n    groupNotFoundError:\n      content:\n        application/scim+json:\n          example:\n            schemas:\n            - urn:ietf:params:scim:api:messages:2.0:Error\n            detail: Group Domain btud - Pod 04 - CitrixApps - Cymba OMS was not found.\n            status: \"404\"\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Group not found.\n    locationSuccess:\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/LocationResource'\n      description: Success.\n    locationsSuccess:\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/LocationResourceList'\n      description: Success.\n    locationNotFoundError:\n      content:\n        application/scim+json:\n          example:\n            schemas:\n            - urn:ietf:params:scim:api:messages:2.0:Error\n            detail: Location 1598276 was not found.\n            status: \"404\"\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Location not found.\n    productSuccess:\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/ProductResource'\n      description: Success.\n    productsSuccess:\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/ProductResourceList'\n      description: Success.\n    productNotFoundError:\n      content:\n        application/scim+json:\n          example:\n            schemas:\n            - urn:ietf:params:scim:api:messages:2.0:Error\n            detail: Product 6781 was not found.\n            status: \"404\"\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Product not found.\n    vermilionUserSuccess:\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/VermilionUserResource'\n      description: Success.\n    vermilionUsersSuccess:\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/VermilionUserResourceList'\n      description: Success.\n    vermilionUserNotFoundError:\n      content:\n        application/scim+json:\n          example:\n            schemas:\n            - urn:ietf:params:scim:api:messages:2.0:Error\n            detail: VermilionUser vrsqa-jrs-01:21 was not found.\n            status: \"404\"\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Vermilion user not found.\n    vermilionGroupSuccess:\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/VermilionGroupResource'\n      description: Success.\n    vermilionGroupsSuccess:\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/VermilionGroupResourceList'\n      description: Success.\n    vermilionGroupNotFoundError:\n      content:\n        application/scim+json:\n          example:\n            schemas:\n            - urn:ietf:params:scim:api:messages:2.0:Error\n            detail: VermilionGroup vrsqa-jrs-01:431 was not found.\n            status: \"404\"\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Vermilion group not found.\n    fileManagerAuditSuccess:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/FileManagerAudit'\n      description: Success.\n  schemas:\n    ServiceProviderConfig:\n      properties:\n        schemas:\n          example:\n          - urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig\n          items:\n            type: string\n          type: array\n        documentationUri:\n          description: An HTTP-addressable URL pointing to the service provider's\n            human-consumable help documentation.\n          example: https://developer-staging.factset.com/api-catalog/scim-api\n          readOnly: true\n          type: string\n        patch:\n          $ref: '#/components/schemas/ServiceProviderConfig_patch'\n        bulk:\n          $ref: '#/components/schemas/ServiceProviderConfig_bulk'\n        filter:\n          $ref: '#/components/schemas/ServiceProviderConfig_filter'\n        changePassword:\n          $ref: '#/components/schemas/ServiceProviderConfig_changePassword'\n        sort:\n          $ref: '#/components/schemas/ServiceProviderConfig_sort'\n        etag:\n          $ref: '#/components/schemas/ServiceProviderConfig_etag'\n        authenticationSchemes:\n          $ref: '#/components/schemas/ServiceProviderConfig_authenticationSchemes'\n      required:\n      - authenticationSchemes\n      - bulk\n      - changePassword\n      - etag\n      - filter\n      - patch\n      - sort\n      type: object\n    Schema:\n      properties:\n        id:\n          description: The unique URI of the schema. When applicable, service providers\n            MUST specify the URI.\n          example: urn:scim:schemas:extension:FactSet:Core:1.0:User\n          readOnly: true\n          type: string\n        name:\n          description: The schema's human-readable name.  When applicable, service\n            providers MUST specify the name, e.g., 'User'.\n          example: FactSet Core User\n          readOnly: true\n          type: string\n        description:\n          description: The schema's human-readable name.  When applicable, service\n            providers MUST specify the name, e.g., 'User'.\n          example: FactSet core user details\n          readOnly: true\n          type: string\n        attributes:\n          description: A complex attribute that includes the attributes of a schema.\n          example:\n          - name: username\n            type: string\n            multiValued: false\n            description: A FactSet \"username\" is FactSet's logical structure for grouping\n              serial numbers into like-groups based on roleName, geographical location\n              or line of business.\n            required: true\n            caseExact: false\n            mutability: immutable\n            returned: default\n            uniqueness: none\n          - name: serialNumber\n            type: string\n            multiValued: false\n            description: A serial number represents an individual's unique FactSet\n              account identifier and base-workstation access. Serial numbers are allocated\n              to an individual when a valid RoleName is present.\n            required: false\n            caseExact: false\n            mutability: readOnly\n            returned: default\n            uniqueness: global\n          - name: factSetNetId\n            type: string\n            multiValued: false\n            description: FactSet.net ID.\n            required: false\n            caseExact: false\n            mutability: readOnly\n            returned: default\n            uniqueness: global\n          - name: locationId\n            type: string\n            multiValued: false\n            description: Your reference to a distinct physical location in your organization\n              (such as an office)\n            required: true\n            caseExact: false\n            mutability: readWrite\n            returned: default\n            uniqueness: none\n          - name: roleName\n            type: string\n            multiValued: false\n            description: Predetermined role of specific individual. Issues individual\n              a base FactSet workstation and serial number. If passed as NULL a base-FactSet\n              workstation will be allocated to the individual granting the individual\n              a FactSet SerialNumber\n            required: false\n            caseExact: false\n            mutability: readWrite\n            returned: default\n            uniqueness: none\n          - name: productIds\n            type: integer\n            multiValued: true\n            description: An array of FactSet products to allocate/remove from an individual.\n              Individual must have a FactSet serial number associated with them.\n            required: false\n            mutability: readWrite\n            returned: default\n            uniqueness: none\n          - name: assertionValue\n            type: string\n            multiValued: false\n            description: Field containing the value, passed as nameID, used to assert\n              the identity of an individual via SAML2.0 which maps service-provider-side\n              to a FactSet serial number. Only applicable to individuals with a FactSet\n              serial number with a Federation setup between your domain and FactSet's\n            required: false\n            caseExact: false\n            mutability: readWrite\n            returned: default\n            uniqueness: server\n          items:\n            $ref: '#/components/schemas/Schema_attributes'\n          readOnly: true\n          type: array\n      required:\n      - attributes\n      - id\n      - name\n      type: object\n    SchemaList:\n      properties:\n        schemas:\n          example:\n          - urn:ietf:params:scim:api:messages:2.0:ListResponse\n          items:\n            type: string\n          type: array\n        totalResults:\n          example: 1\n          type: integer\n        Resources:\n          items:\n            $ref: '#/components/schemas/Schema'\n          type: array\n      type: object\n    UserResource:\n      properties:\n        schemas:\n          example:\n          - urn:ietf:params:scim:schemas:core:2.0:User\n          - urn:scim:schemas:extension:FactSet:Core:1.0:User\n          items:\n            type: string\n          type: array\n        id:\n          example: FIN_WEALTH-123456\n          readOnly: true\n          type: string\n        externalId:\n          example: C3574707-FFF9-433C-A17F-DFF806C72A7F\n          type: string\n        userName:\n          description: Unique identifier for the User, typically used by the user\n            to directly authenticate to the service provider. Each User MUST include\n            a non-empty userName value.  This identifier MUST be unique across the\n            service provider's entire set of Users.\n          example: FIN_WEALTH-123456\n          readOnly: true\n          type: string\n        name:\n          $ref: '#/components/schemas/UserResource_name'\n        email:\n          description: Email addresses for the user.  The value SHOULD be canonicalized\n            by the service provider, e.g., 'bjensen@example.com' instead of 'bjensen@EXAMPLE.COM'.\n          example: jdoe@factset.com\n          type: string\n        phoneNumbers:\n          description: Phone numbers for the User.  The value SHOULD be canonicalized\n            by the service provider according to the format specified in RFC 3966,\n            e.g., 'tel:+1-201-555-0123'. Canonical type values of 'main', 'work',\n            'mobile', and 'home'.\n          items:\n            $ref: '#/components/schemas/UserResource_phoneNumbers'\n          readOnly: true\n          type: array\n        groups:\n          description: A list of groups to which the user belongs, either through\n            direct membership, through nested groups, or dynamically calculated.\n          items:\n            $ref: '#/components/schemas/UserResource_groups'\n          readOnly: true\n          type: array\n        urn:scim:schemas:extension:CoreFactset:1.0:\n          $ref: '#/components/schemas/UserResource_urn_scim_schemas_extension_CoreFactset_1_0'\n        meta:\n          $ref: '#/components/schemas/UserResource_meta'\n      required:\n      - email\n      - name\n      - userName\n      type: object\n    UserResourceList:\n      properties:\n        schemas:\n          example:\n          - urn:ietf:params:scim:api:messages:2.0:ListResponse\n          items:\n            type: string\n          type: array\n        totalResults:\n          example: 1\n          type: integer\n        Resources:\n          items:\n            $ref: '#/components/schemas/UserResource'\n          type: array\n      type: object\n    GroupResource:\n      properties:\n        schemas:\n          example:\n          - urn:ietf:params:scim:schemas:core:2.0:Group\n          - urn:scim:schemas:extension:FactSet:EnterpriseHosting:1.0:Group\n          items:\n            type: string\n          type: array\n        id:\n          example: Domain btud - Pod 04 - CitrixApps - Cymba OMS\n          readOnly: true\n          type: string\n        externalId:\n          example: B8FE8BBD-0E04-40B2-9BB3-E5EE17C4C9C9\n          type: string\n        displayName:\n          description: A human-readable name for the Group.\n          example: Domain btud - Pod 04 - CitrixApps - Cymba OMS\n          type: string\n        description:\n          description: A description for the Group.\n          type: string\n        members:\n          description: A list of members of the Group.\n          items:\n            $ref: '#/components/schemas/GroupResource_members'\n          type: array\n        urn:scim:schemas:extension:FactSet:EnterpriseHosting:1.0:Group:\n          $ref: '#/components/schemas/GroupResource_urn_scim_schemas_extension_FactSet_EnterpriseHosting_1_0_Group'\n        meta:\n          $ref: '#/components/schemas/GroupResource_meta'\n      type: object\n    GroupResourceList:\n      properties:\n        schemas:\n          example:\n          - urn:ietf:params:scim:api:messages:2.0:ListResponse\n          items:\n            type: string\n          type: array\n        totalResults:\n          example: 1\n          type: integer\n        Resources:\n          items:\n            $ref: '#/components/schemas/GroupResource'\n          type: array\n      type: object\n    LocationResource:\n      properties:\n        schemas:\n          example:\n          - urn:scim:schemas:extension:FactSet:Core:1.0:Location\n          items:\n            type: string\n          type: array\n        id:\n          example: \"1598276\"\n          readOnly: true\n          type: string\n        externalId:\n          example: \"1598276\"\n          type: string\n        name:\n          description: Name of the location.\n          example: FIN Wealth Management\n          readOnly: true\n          type: string\n        description:\n          description: Description of the location.\n          readOnly: true\n          type: string\n        address1:\n          description: First line of location's address.\n          example: 601 Main Avenue\n          readOnly: true\n          type: string\n        address2:\n          description: Second line of location's address.\n          example: Factset - First Floor\n          readOnly: true\n          type: string\n        address3:\n          description: Third line of location's address.\n          readOnly: true\n          type: string\n        locality:\n          description: City of location.\n          example: Norwalk\n          readOnly: true\n          type: string\n        region:\n          description: State or province of location.\n          example: Connecticut\n          readOnly: true\n          type: string\n        postalCode:\n          description: Postal code of location.\n          example: \"06850\"\n          readOnly: true\n          type: string\n        country:\n          description: Country of location.\n          example: United States\n          readOnly: true\n          type: string\n        phoneNumber:\n          description: Phone number of location.\n          readOnly: true\n          type: string\n        mainLocation:\n          allOf:\n          - $ref: '#/components/schemas/LocationResourceReference'\n          - readOnly: true\n        meta:\n          $ref: '#/components/schemas/LocationResource_meta'\n      type: object\n    LocationResourceList:\n      properties:\n        schemas:\n          example:\n          - urn:ietf:params:scim:api:messages:2.0:ListResponse\n          items:\n            type: string\n          type: array\n        totalResults:\n          example: 1\n          type: integer\n        Resources:\n          items:\n            $ref: '#/components/schemas/LocationResource'\n          type: array\n      type: object\n    LocationResourceReference:\n      properties:\n        value:\n          description: Identifier of the Location.\n          example: \"1598276\"\n          type: string\n        $ref:\n          description: The URI corresponding to a SCIM resource that is this Location.\n          example: https://api.factset.com/scim/v2/Locations/1598276\n          type: string\n        display:\n          description: A human-readable name, primarily used for display purposes.\n          example: FIN Wealth Management\n          type: string\n      required:\n      - value\n      type: object\n    ProductResource:\n      properties:\n        schemas:\n          example:\n          - urn:scim:schemas:extension:FactSet:Core:1.0:Product\n          items:\n            type: string\n          type: array\n        id:\n          example: \"6781\"\n          readOnly: true\n          type: string\n        name:\n          description: Name of product.\n          example: FactSet Identity\n          readOnly: true\n          type: string\n        description:\n          description: Details of product.\n          example: This workstation product will provide the user with a serial number\n            and a \"blanket\" login. Examples of when this can be used is for web only\n            users, notify clients, or to give users minimal access.\n          readOnly: true\n          type: string\n        groupDescription:\n          description: Description of the group the product belongs in, e.g. Exchange,\n            Product, Database, Workstation, etc.\n          example: Workstations\n          readOnly: true\n          type: string\n        workstation:\n          description: A boolean representing whether the product is base-level access\n            to FactSet, issuing the individual's serial number. Only one Product \"id\"\n            per individual will have this value set to true.\n          example: true\n          readOnly: true\n          type: boolean\n        requiresApproval:\n          description: A description of the type of approval required before an order\n            for this product can be fulfilled. This value is null for those products\n            that do not require any approval.\n          example: FactSet\n          readOnly: true\n          type: string\n        whitelist:\n          description: Whether the product appears in the requester's product whitelist.\n            Presence in the product whitelist means the requester is authorized to\n            order this product for other users.\n          example: true\n          readOnly: true\n          type: boolean\n        meta:\n          $ref: '#/components/schemas/ProductResource_meta'\n      required:\n      - whitelist\n      type: object\n    ProductResourceList:\n      properties:\n        schemas:\n          example:\n          - urn:ietf:params:scim:api:messages:2.0:ListResponse\n          items:\n            type: string\n          type: array\n        totalResults:\n          example: 1\n          type: integer\n        Resources:\n          items:\n            $ref: '#/components/schemas/ProductResource'\n          type: array\n      type: object\n    ProductResourceReference:\n      properties:\n        value:\n          example: \"6781\"\n          type: string\n        $ref:\n          example: https://api.factset.com/scim/v2/Products/6781\n          type: string\n        display:\n          example: FactSet Identity\n          type: string\n      required:\n      - value\n      type: object\n    PendingProductOrder:\n      properties:\n        product:\n          $ref: '#/components/schemas/ProductResourceReference'\n        type:\n          description: Type of product order, e.g. 'Add' or 'Remove'.\n          example: Add\n          readOnly: true\n          type: string\n        status:\n          description: Status of the pending product order.\n          example: Processing\n          readOnly: true\n          type: string\n        requested:\n          description: Date and time when product was ordered.\n          example: 2019-06-07T08:59:37+00:00\n          readOnly: true\n          type: string\n      required:\n      - product\n      - requested\n      - status\n      - type\n      type: object\n    VermilionUserResource:\n      properties:\n        schemas:\n          example:\n          - urn:scim:schemas:extension:FactSet:VRS:1.0:User\n          items:\n            type: string\n          type: array\n        id:\n          example: vrsqa-jrs-01:21\n          readOnly: true\n          type: string\n        userName:\n          description: A service provider's unique identifier for the user, typically\n            used by the user to directly authenticate to the service provider. Each\n            User MUST include a non-empty userName value. This identifier MUST be\n            unique across the service provider's entire set of Users.\n          example: john.doe\n          readOnly: true\n          type: string\n        name:\n          $ref: '#/components/schemas/VermilionUserResource_name'\n        displayName:\n          description: The name of the User, suitable for display to end-users. The\n            name SHOULD be the full name of the User being described, if known.\n          example: John Doe\n          type: string\n        profileUrl:\n          description: A fully qualified URL pointing to a page\\nrepresenting the\n            User's online profile.\n          example: http://example.com/profiles/john.doe\n          type: string\n        userType:\n          description: Used to identify the relationship between the organization\n            and the user. Typical values used might be 'Contractor', 'Employee', 'Intern',\n            'Temp', 'External', and 'Unknown', but any value may be used.\n          example: \"0\"\n          type: string\n        preferredLanguage:\n          description: Indicates the User's preferred written or spoken language.  Generally\n            used for selecting a localized user interface; e.g., 'en_US' specifies\n            the language English and country\n          example: en_US\n          type: string\n        active:\n          description: A Boolean value indicating the User's administrative status.\n          example: false\n          type: boolean\n        password:\n          description: The User's cleartext password. This attribute is intended to\n            be used as a means to specify an initial password when creating a new\n            User or to reset an existing User's password.\n          example: hunter2\n          type: string\n        authenticatedUserName:\n          description: The authenticated user name of the user\n          example: john.doe\n          type: string\n        tenant:\n          description: The tenant this user is in\n          example: MASTER\n          type: string\n        emails:\n          $ref: '#/components/schemas/VermilionUserResource_emails'\n        phoneNumbers:\n          description: Phone numbers for the User. The value SHOULD be canonicalized\n            by the service provider according to the format specified in RFC 3966,\n            e.g., 'tel:+1-201-555-0123'. Canonical type values of 'work', 'home',\n            'mobile', 'fax', 'pager'\n          items:\n            $ref: '#/components/schemas/VermilionUserResource_phoneNumbers'\n          type: array\n        photos:\n          description: URLs of photos of the User.\n          items:\n            $ref: '#/components/schemas/VermilionUserResource_photos'\n          type: array\n        groups:\n          description: A list of groups to which the user belongs, either through\n            direct membership, through nested groups, or dynamically calculated.\n          items:\n            $ref: '#/components/schemas/VermilionUserResource_groups'\n          type: array\n        entitlements:\n          $ref: '#/components/schemas/VermilionUserResource_entitlements'\n        roles:\n          $ref: '#/components/schemas/VermilionUserResource_roles'\n        domainCode:\n          description: Domain code of Enterprise Hosting pod in which user resides.\n            REQUIRED.\n          type: string\n        isAdministrator:\n          description: Whether the user can perform maintenance on other users. REQUIRED.\n          type: boolean\n        meta:\n          $ref: '#/components/schemas/VermilionUserResource_meta'\n      required:\n      - domainCode\n      - isAdministrator\n      - userName\n      type: object\n    VermilionUserResourceList:\n      properties:\n        schemas:\n          example:\n          - urn:ietf:params:scim:api:messages:2.0:ListResponse\n          items:\n            type: string\n          type: array\n        totalResults:\n          example: 1\n          type: integer\n        Resources:\n          items:\n            $ref: '#/components/schemas/VermilionUserResource'\n          type: array\n      type: object\n    VermilionGroupResource:\n      properties:\n        schemas:\n          example:\n          - urn:scim:schemas:extension:FactSet:VRS:1.0:Group\n          items:\n            type: string\n          type: array\n        id:\n          example: vrsqa-jrs-01:431\n          readOnly: true\n          type: string\n        externalId:\n          description: A String that is an identifier for the resource as defined\n            by the provisioning client.The service provider MUST always interpret\n            the externalId as scoped to the provisioning domain.\n          type: string\n        displayName:\n          description: A human-readable name for the Group. REQUIRED.\n          example: System Admin\n          type: string\n        members:\n          description: A list of members of the Group.\n          items:\n            $ref: '#/components/schemas/VermilionGroupResource_members'\n          type: array\n        tenant:\n          description: The tenant this role is in\n          example: QA\n          type: string\n        domainCode:\n          description: Domain code of Enterprise Hosting pod in which user resides.\n            REQUIRED.\n          example: vrsqa-jrs-01\n          type: string\n        meta:\n          $ref: '#/components/schemas/VermilionGroupResource_meta'\n      required:\n      - displayName\n      - domainCode\n      type: object\n    VermilionGroupResourceList:\n      properties:\n        schemas:\n          example:\n          - urn:ietf:params:scim:api:messages:2.0:ListResponse\n          items:\n            type: string\n          type: array\n        totalResults:\n          example: 1\n          type: integer\n        Resources:\n          items:\n            $ref: '#/components/schemas/VermilionGroupResource'\n          type: array\n      type: object\n    FileManagerAudit:\n      example:\n      - username: fds_demo_va_sc\n        paths:\n          /sc/fds_demo_va_sc/:\n          - entity:\n              name: fds_demo_eur:245600\n              type: user\n            permissions:\n              read: true\n              write: true\n              maintain: true\n            permission-overrides:\n              read: true\n              write: true\n              maintain: true\n            inheritance-distance: 0\n      items:\n        properties:\n          username:\n            description: The FactSet username associated with the file paths.\n            type: string\n          paths:\n            additionalProperties:\n              description: A file path and its associated attributes.\n              items:\n                description: Attributes of the file.\n                properties:\n                  entity:\n                    description: The entity associated with the file's attributes.\n                    properties:\n                      name:\n                        description: The name of the entity.\n                        type: string\n                      type:\n                        description: The type of the entity.\n                        type: string\n                    required:\n                    - name\n                    - type\n                    type: object\n                  permissions:\n                    description: Object describing the permissions the associated\n                      entity has regarding the associated file.\n                    properties:\n                      read:\n                        description: Whether the associated entity has permission\n                          to read the associated file.\n                        type: boolean\n                      write:\n                        description: Whether the associated entity has permission\n                          to write the associated file.\n                        type: boolean\n                      maintain:\n                        description: Whether the associated entity has permission\n                          to maintain the associated file.\n                        type: boolean\n                    required:\n                    - maintain\n                    - read\n                    - write\n                    type: object\n                  permission-override:\n                    properties:\n                      read:\n                        type: boolean\n                      write:\n                        type: boolean\n                      maintain:\n                        type: boolean\n                    required:\n                    - maintain\n                    - read\n                    - write\n                    type: object\n                  inheritance-distance:\n                    type: integer\n                required:\n                - entity\n                - permissions\n                type: object\n              type: array\n            description: Object containing all file paths and their associated attributes.\n            type: object\n        required:\n        - paths\n        - username\n        type: object\n      type: array\n    Patch:\n      properties:\n        schemas:\n          items:\n            type: string\n          type: array\n        Operations:\n          items:\n            $ref: '#/components/schemas/Patch_Operations'\n          type: array\n      type: object\n    Error:\n      properties:\n        schemas:\n          example:\n          - urn:ietf:params:scim:api:messages:2.0:Error\n          items:\n            type: string\n          type: array\n        scimType:\n          example: invalidValue\n          type: string\n        detail:\n          description: A detailed human-readable message.\n          example: An unhandled exception occurred.\n          type: string\n        status:\n          description: HTTP status code.\n          example: \"500\"\n          type: string\n      type: object\n    ServiceProviderConfig_patch:\n      description: A complex type that specifies PATCH configuration options.\n      properties:\n        supported:\n          description: A Boolean value specifying whether or not the operation is\n            supported.\n          example: false\n          readOnly: true\n          type: boolean\n      readOnly: true\n      required:\n      - supported\n      type: object\n    ServiceProviderConfig_bulk:\n      description: A complex type that specifies bulk configuration options.\n      properties:\n        supported:\n          description: A Boolean value specifying whether or not the operation is\n            supported.\n          example: false\n          readOnly: true\n          type: boolean\n        maxOperations:\n          description: An integer value specifying the maximum number of operations.\n          example: 0\n          readOnly: true\n          type: integer\n        maxPayloadSize:\n          description: An integer value specifying the maximum payload size in bytes.\n          example: 0\n          readOnly: true\n          type: integer\n      required:\n      - maxOperations\n      - maxPayloadSize\n      - supported\n      type: object\n    ServiceProviderConfig_filter:\n      description: A complex type that specifies FILTER options.\n      properties:\n        supported:\n          description: A Boolean value specifying whether or not the operation is\n            supported.\n          example: false\n          readOnly: true\n          type: boolean\n        maxResults:\n          description: An integer value specifying the maximum number of resources\n            returned in a response.\n          example: 0\n          readOnly: true\n          type: integer\n      required:\n      - maxResults\n      - supported\n      type: object\n    ServiceProviderConfig_changePassword:\n      description: A complex type that specifies configuration options related to\n        changing a password.\n      properties:\n        supported:\n          description: A Boolean value specifying whether or not the operation is\n            supported.\n          example: false\n          readOnly: true\n          type: boolean\n      required:\n      - supported\n      type: object\n    ServiceProviderConfig_sort:\n      description: A complex type that specifies sort result options.\n      properties:\n        supported:\n          description: A Boolean value specifying whether or not the operation is\n            supported.\n          example: false\n          readOnly: true\n          type: boolean\n      required:\n      - supported\n      type: object\n    ServiceProviderConfig_etag:\n      description: A complex type that specifies ETag configuration options.\n      properties:\n        supported:\n          description: A Boolean value specifying whether or not the operation is\n            supported.\n          example: false\n          readOnly: true\n          type: boolean\n      required:\n      - supported\n      type: object\n    ServiceProviderConfig_authenticationSchemes:\n      description: A complex type that specifies supported authentication scheme properties.\n      properties:\n        type:\n          description: The authentication scheme.\n          example: httpbasic\n          readOnly: true\n          type: string\n        name:\n          description: The common authentication scheme name, e.g., HTTP Basic.\n          example: HTTP Basic\n          readOnly: true\n          type: string\n        description:\n          description: A description of the authentication scheme.\n          example: FactSet API key authentication.\n          readOnly: true\n          type: string\n        specUri:\n          description: An HTTP-addressable URL pointing to the authentication scheme's\n            specification.\n          example: https://datatracker.ietf.org/doc/rfc7617/\n          readOnly: true\n          type: string\n        documentationUri:\n          description: An HTTP-addressable URL pointing to the authentication scheme's\n            usage documentation.\n          example: https://developer.factset.com/authentication\n          readOnly: true\n          type: string\n      required:\n      - description\n      - name\n      - type\n      type: object\n    Schema_subAttributes:\n      properties:\n        name:\n          description: The attribute's name.\n          readOnly: true\n          type: string\n        type:\n          description: The attribute's data type. Valid values include 'string', 'complex',\n            'boolean', 'decimal', 'integer', 'dateTime', 'reference'.\n          readOnly: true\n          type: string\n        multiValued:\n          description: A Boolean value indicating an attribute's plurality.\n          readOnly: true\n          type: boolean\n        description:\n          description: A human-readable description of the attribute.\n          readOnly: true\n          type: string\n        required:\n          description: A boolean value indicating whether or not the attribute is\n            required.\n          readOnly: true\n          type: boolean\n        canonicalValues:\n          description: A collection of canonical values.  When applicable, service\n            providers MUST specify the canonical types, e.g.,  'work', 'home'.\n          items:\n            type: string\n          readOnly: true\n          type: array\n        caseExact:\n          description: A Boolean value indicating whether or not a string attribute\n            is case sensitive.\n          readOnly: true\n          type: boolean\n        mutability:\n          description: Indicates whether or not an attribute is modifiable.\n          readOnly: true\n          type: string\n        returned:\n          description: Indicates when an attribute is returned in a response (e.g.,\n            to a query).\n          readOnly: true\n          type: string\n        uniqueness:\n          description: Indicates how unique a value must be.\n          readOnly: true\n          type: string\n        referenceTypes:\n          description: Used only with an attribute of type 'reference'.  Specifies\n            a SCIM resourceType that a reference attribute MAY refer to, e.g., 'User'.\n          items:\n            type: string\n          readOnly: true\n          type: array\n      required:\n      - multiValued\n      - name\n      - type\n      type: object\n    Schema_attributes:\n      properties:\n        name:\n          description: The attribute's name.\n          readOnly: true\n          type: string\n        type:\n          description: The attribute's data type. Valid values include 'string', 'complex',\n            'boolean', 'decimal', 'integer', 'dateTime', 'reference'.\n          readOnly: true\n          type: string\n        multiValued:\n          description: A Boolean value indicating an attribute's plurality.\n          readOnly: true\n          type: boolean\n        description:\n          description: A human-readable description of the attribute.\n          readOnly: true\n          type: string\n        required:\n          description: A boolean value indicating whether or not the attribute is\n            required.\n          readOnly: true\n          type: boolean\n        canonicalValues:\n          description: A collection of canonical values.  When applicable, service\n            providers MUST specify the canonical types, e.g.,  'work', 'home'.\n          items:\n            type: string\n          readOnly: true\n          type: array\n        caseExact:\n          description: A Boolean value indicating whether or not a string attribute\n            is case sensitive.\n          readOnly: true\n          type: boolean\n        mutability:\n          description: Indicates whether or not an attribute is modifiable.\n          readOnly: true\n          type: string\n        returned:\n          description: Indicates when an attribute is returned in a response (e.g.,\n            to a query).\n          readOnly: true\n          type: string\n        uniqueness:\n          description: Indicates how unique a value must be.\n          readOnly: true\n          type: string\n        referenceTypes:\n          description: Used only with an attribute of type 'reference'.  Specifies\n            a SCIM resourceType that a reference attribute MAY refer to, e.g., 'User'.\n          items:\n            type: string\n          readOnly: true\n          type: array\n        subAttributes:\n          description: Used to define the sub-attributes of a complex attribute.\n          items:\n            $ref: '#/components/schemas/Schema_subAttributes'\n          readOnly: true\n          type: array\n      required:\n      - multiValued\n      - name\n      - type\n      type: object\n    UserResource_name:\n      description: The components of the user's real name. Providers MAY return just\n        the full name as a single string in the formatted sub-attribute, or they MAY\n        return just the individual component attributes using the other sub-attributes,\n        or they MAY return both.  If both variants are returned, they SHOULD be describing\n        the same name, with the formatted name indicating how the component attributes\n        should be combined.\n      properties:\n        familyName:\n          description: The family name of the User, or last name in most Western languages\n            (e.g., 'Jensen' given the full name 'Ms. Barbara J Jensen, III').\n          example: Doe\n          type: string\n        givenName:\n          description: The given name of the User, or first name in most Western languages\n            (e.g., 'Barbara' given the full name 'Ms. Barbara J Jensen, III').\n          example: John\n          type: string\n      required:\n      - familyName\n      - givenName\n      type: object\n    UserResource_phoneNumbers:\n      properties:\n        value:\n          description: Phone number of the User.\n          example: tel:5558675309\n          type: string\n        display:\n          description: A human-readable name, primarily used for display purposes.  READ-ONLY.\n          example: (555) 867-5309\n          type: string\n        type:\n          description: A label indicating the attribute's function, e.g., 'work',\n            'home', 'mobile'.\n          example: work\n          type: string\n        primary:\n          description: A Boolean value indicating the 'primary' or preferred attribute\n            value for this attribute, e.g., the preferred phone number or primary\n            phone number.  The primary attribute value 'true' MUST appear no more\n            than once.\n          example: true\n          type: boolean\n      type: object\n    UserResource_groups:\n      properties:\n        value:\n          description: The identifier of the User's group.\n          example: Domain btud - Pod 04 - CitrixApps - Cymba OMS\n          readOnly: true\n          type: string\n        $ref:\n          description: The URI of the corresponding 'Group' resource to which the\n            user belongs.\n          example: https://api.factset.com/scim/v2/Groups/Domain%20btud%20-%20Pod%2004%20-%20CitrixApps%20-%20Cymba%20OMS\n          readOnly: true\n          type: string\n        display:\n          description: A human-readable name, primarily used for display purposes.  READ-ONLY.\n          example: Domain btud - Pod 04 - CitrixApps - Cymba OMS\n          readOnly: true\n          type: string\n      type: object\n    UserResource_urn_scim_schemas_extension_CoreFactset_1_0:\n      properties:\n        username:\n          description: A FactSet \"username\" is FactSet's logical structure for grouping\n            serial numbers into like-groups based on roleName, geographical location\n            or line of business.\n          example: FIN_WEALTH\n          type: string\n        serialNumber:\n          description: A serial number represents an individual's unique FactSet account\n            identifier and base-workstation access. Serial numbers are allocated to\n            an individual when a valid RoleName is present.\n          example: \"123456\"\n          readOnly: true\n          type: string\n        factSetNetId:\n          description: FactSet.net ID.\n          example: John.Doe9@factset.net\n          readOnly: true\n          type: string\n        location:\n          $ref: '#/components/schemas/LocationResourceReference'\n        roleName:\n          description: Predetermined role of specific individual. Issues individual\n            a base FactSet workstation and serial number. If passed as NULL a base-FactSet\n            workstation will be allocated to the individual granting the individual\n            a FactSet SerialNumber\n          example: Wealth Manager\n          type: string\n        products:\n          description: An array of FactSet products to allocate/remove from an individual.\n            Individual must have a FactSet serial number associated with them.\n          items:\n            $ref: '#/components/schemas/ProductResourceReference'\n          type: array\n        pendingProductOrders:\n          description: An array of pending FactSet product orders.\n          items:\n            $ref: '#/components/schemas/PendingProductOrder'\n          readOnly: true\n          type: array\n        assertionValue:\n          description: Field containing the value, passed as nameID, used to assert\n            the identity of an individual via SAML2.0 which maps service-provider-side\n            to a FactSet serial number. Only applicable to individuals with a FactSet\n            serial number with a Federation setup between your domain and FactSet's\n          example: exampleAssertionValue\n          type: string\n      required:\n      - location\n      - username\n      type: object\n    UserResource_meta:\n      properties:\n        resourceType:\n          example: User\n          type: string\n        created:\n          example: 2019-02-11T15:33:31.077+00:00\n          type: string\n        lastModified:\n          example: 2019-06-07T08:59:37+00:00\n          type: string\n        location:\n          example: https://api.factset.com/scim/v2/Users/FIN_WEALTH-123456\n          type: string\n      readOnly: true\n      type: object\n    GroupResource_members:\n      properties:\n        value:\n          description: Identifier of the member of this Group.\n          example: FIN_WEALTH-123456\n          type: string\n        $ref:\n          description: The URI corresponding to a SCIM resource that is a member of\n            this Group.\n          example: https://api.factset.com/scim/v2/Users/FIN_WEALTH-123456\n          type: string\n        type:\n          description: A label indicating the type of resource, e.g., 'User' or 'Group'.\n          example: User\n          type: string\n      type: object\n    GroupResource_urn_scim_schemas_extension_FactSet_EnterpriseHosting_1_0_Group:\n      properties:\n        domainCode:\n          description: Domain code of the Enterprise Hosting pod containing this group.\n          example: btud\n          readOnly: true\n          type: string\n      readOnly: true\n      required:\n      - domainCode\n      type: object\n    GroupResource_meta:\n      properties:\n        resourceType:\n          example: Group\n          type: string\n        created:\n          example: 2019-02-11T15:33:31.077+00:00\n          type: string\n        lastModified:\n          example: 2019-06-07T08:59:37+00:00\n          type: string\n        location:\n          example: https://api.factset.com/scim/v2/Groups/Domain%20btud%20-%20Pod%2004%20-%20CitrixApps%20-%20Cymba%20OMS\n          type: string\n      readOnly: true\n      type: object\n    LocationResource_meta:\n      properties:\n        resourceType:\n          example: Location\n          type: string\n        created:\n          example: 2019-02-11T08:44:19+00:00\n          type: string\n        lastModified:\n          example: 2021-01-12T03:11:13+00:00\n          type: string\n        location:\n          example: https://api.factset.com/scim/v2/Locations/1598276\n          type: string\n      readOnly: true\n      type: object\n    ProductResource_meta:\n      properties:\n        resourceType:\n          example: Product\n          type: string\n        location:\n          example: https://api.factset.com/scim/v2/Products/6781\n          type: string\n      readOnly: true\n      type: object\n    VermilionUserResource_name:\n      description: The components of the user's real name. Providers MAY return just\n        the full name as a single string in the formatted sub-attribute, or they MAY\n        return just the individual component attributes using the other sub-attributes,\n        or they MAY return both. If both variants are returned, they SHOULD be describing\n        the same name, with the formatted name indicating how the component attributes\n        should be combined.\n      properties:\n        formatted:\n          description: The full name, including all middle names, titles, and suffixes\n            as appropriate, formatted for display (e.g., 'Ms. Barbara J Jensen, III').\n          example: John Doe\n          type: string\n        familyName:\n          description: The family name of the User, or last name in most Western languages\n            (e.g., 'Jensen' given the full name 'Ms. Barbara J Jensen, III').\n          example: Doe\n          type: string\n        givenName:\n          description: The given name of the User, or first name in most Western languages\n            (e.g., 'Barbara' given the full name 'Ms. Barbara J Jensen, III').\n          example: John\n          type: string\n      type: object\n    VermilionUserResource_emails:\n      description: Email addresses for the user. The value SHOULD be canonicalized\n        by the service provider, e.g., 'bjensen@example.com' instead of 'bjensen@EXAMPLE.COM'.\n        Canonical type values of 'work', 'home', and 'other'.\n      properties:\n        value:\n          description: Email addresses for the user. The value SHOULD be canonicalized\n            by the service provider, e.g., 'bjensen@example.com' instead of 'bjensen@EXAMPLE.COM'.\n            Canonical type values of 'work', 'home', and 'other'.\n          example: john.doe@example.com\n          type: string\n        display:\n          description: A human-readable name, primarily used for display purposes.  READ-ONLY.\n          example: john.doe@example.com\n          type: string\n        type:\n          description: A label indicating the attribute's function, e.g., 'work' or\n            'home'.\n          example: work\n          type: string\n        primary:\n          description: A Boolean value indicating the 'primary' or preferred attribute\n            value for this attribute, e.g., the psreferred mailing address or primary\n            email address.  The primary attribute value 'true' MUST appear no more\n            than once.\n          example: true\n          type: boolean\n      type: object\n    VermilionUserResource_phoneNumbers:\n      properties:\n        value:\n          description: Phone number of the User.\n          example: tel:5558675309\n          type: string\n        display:\n          description: A human-readable name, primarily used for display purposes.  READ-ONLY.\n          example: (555) 867-5309\n          type: string\n        type:\n          description: A label indicating the attribute's function, e.g., 'work',\n            'home', 'mobile'.\n          example: work\n          type: string\n        primary:\n          description: A Boolean value indicating the 'primary' or preferred attribute\n            value for this attribute, e.g., the preferred phone number or primary\n            phone number. The primary attribute value 'true' MUST appear no more than\n            once.\n          example: true\n          type: boolean\n      type: object\n    VermilionUserResource_photos:\n      properties:\n        value:\n          description: URLs of photos of the User.\n          example: http://example.com/profiles/john.doe\n          type: string\n        display:\n          description: A human-readable name, primarily used for display purposes.\n            READ-ONLY.\n          type: string\n        type:\n          description: A label indicating the attribute's function, i.e., 'photo'\n            or 'thumbnail'.\n          example: photo\n          type: string\n        primary:\n          example: false\n          type: boolean\n      type: object\n    VermilionUserResource_groups:\n      properties:\n        value:\n          description: The identifier of the User's group.\n          example: vrsqa-jrs-01:431\n          type: string\n        $ref:\n          description: The uri of the corresponding 'Group' resource to which the\n            user belongs.\n          example: https://api.factset.com/scim/v2/VermilionGroups/vrsqa-jrs-01%3A431\n          type: string\n        display:\n          description: A human-readable name, primarily used for display purposes.\n            READ-ONLY.\n          example: System Admin\n          type: string\n        type:\n          description: A label indicating the attribute's function, e.g., 'direct'\n            or 'indirect'.\n          example: direct\n          type: string\n      type: object\n    VermilionUserResource_entitlements:\n      description: A list of entitlements for the User that represent a thing the\n        User has.\n      properties:\n        value:\n          description: The value of an entitlement.\n          type: string\n        display:\n          description: A human-readable name, primarily used for display purposes.\n            READ-ONLY.\n          type: string\n        type:\n          description: A label indicating the attribute's function.\n          type: string\n        primary:\n          description: A Boolean value indicating the 'primary' or preferred attribute\n            value for this attribute. The primary attribute value 'true' MUST appear\n            no more than once.\n          type: boolean\n      type: object\n    VermilionUserResource_roles:\n      description: A list of roles for the User that collectively represent who the\n        User is, e.g., 'Student', 'Faculty'.\n      properties:\n        value:\n          description: The value of a role.\n          type: string\n        display:\n          description: A human-readable name, primarily used for display purposes.\n            READ-ONLY.\n          type: string\n        type:\n          description: A label indicating the attribute's function.\n          type: string\n        primary:\n          description: A Boolean value indicating the 'primary' or preferred attribute\n            value for this attribute.  The primary attribute value 'true' MUST appear\n            no more than once.\n          type: boolean\n      type: object\n    VermilionUserResource_meta:\n      properties:\n        resourceType:\n          example: VermilionUser\n          type: string\n        location:\n          example: https://api.factset.com/scim/v2/VermilionUsers/vrsqa-jrs-01:21\n          type: string\n      readOnly: true\n      type: object\n    VermilionGroupResource_members:\n      properties:\n        value:\n          description: Identifier of the member of this Group.\n          example: vrsqa-jrs-01:21\n          type: string\n        $ref:\n          description: The uri corresponding to a SCIM resource that is a member of\n            this Group.\n          example: https://api.factset.com/scim/v2/VermilionUsers/vrsqa-jrs-01:21\n          type: string\n        display:\n          description: A human-readable name for the Member\n          example: John Doe\n          type: string\n        type:\n          description: A label indicating the type of resource, e.g. 'User' or 'Group'\n          example: VermilionUser\n          type: string\n      required:\n      - value\n      type: object\n    VermilionGroupResource_meta:\n      properties:\n        resourceType:\n          example: VermilionGroup\n          type: string\n        location:\n          example: https://api.factset.com/scim/v2/VermilionGroups/vrsqa-jrs-01:431\n          type: string\n      readOnly: true\n      type: object\n    Patch_Operations:\n      properties:\n        op:\n          type: string\n        path:\n          type: string\n        value:\n          type: string\n      type: object\n  securitySchemes:\n    FactSetOAuth2:\n      flows:\n        clientCredentials:\n          scopes: {}\n          tokenUrl: https://auth.factset.com/as/token.oauth2\n      type: oauth2\n    FactSetApiKey:\n      scheme: basic\n      type: http\n\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /FileManagerAudit: get: security: unknown security schema \"basicAuth\""
}