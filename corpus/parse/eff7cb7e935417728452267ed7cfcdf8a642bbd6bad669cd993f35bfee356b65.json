{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/narek725/Laravel-Vue-Nova"
		},
		"file": {
			"name": "api-docs.yaml",
			"size": 0,
			"path": "storage/api-docs/api-docs.yaml",
			"byteSize": 27571,
			"content": "openapi: 3.0.0\ninfo:\n  title: 'APP API'\n  version: '1.0'\npaths:\n  /api/active-business-posts:\n    get:\n      summary: 'Get active business posts for ID'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\ActiveBusinessPostsController::index'\n      parameters:\n        -\n          name: business_id\n          in: query\n          description: 'Business ID'\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: 'Data fetched successfully'\n        422:\n          description: 'Validation failed.'\n  /api/v1/login:\n    post:\n      summary: 'Login to the system'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\Authentication\\LoginController::store'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                email:\n                  type: string\n                phone_number:\n                  type: string\n                password:\n                  type: string\n                remember_me:\n                  type: boolean\n              type: object\n      responses:\n        200:\n          description: 'Access token information'\n  /api/v1/logout:\n    get:\n      summary: 'Log out from the system / invalidate token'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\Authentication\\LoginController::logout'\n      responses:\n        200:\n          description: 'Logout successfully'\n  /api/v1/register:\n    post:\n      summary: 'register for the system'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\Authentication\\RegistrationController::create'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                email:\n                  type: string\n                password:\n                  type: string\n                phone_number:\n                  type: string\n              type: object\n      responses:\n        200:\n          description: 'Access token information'\n  '/api/v1/email/verify/{id}':\n    get:\n      summary: 'Post to email verification MUST contain the authorization bearer token in Headers. Simply, the User must be logged in to verify their identity.'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\Authentication\\VerificationController::verify'\n      responses:\n        200:\n          description: '''verification'': true'\n  /api/v1/sms/verify:\n    post:\n      summary: 'Post a 5 digit verification PIN, Headers MUST contain the authorization bearer token.'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\Authentication\\VerificationController::verifySms'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                verification_code:\n                  type: integer\n              type: object\n              example:\n                verification_code: 24465\n      responses:\n        200:\n          description: '''verification'': true'\n  '/api/v1/bookmark/{id}':\n    get:\n      summary: 'Display the specified resource.'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\BusinessBioController::show'\n      parameters:\n        -\n          name: id\n          in: query\n          description: 'Business uuid'\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: 'Business bio'\n  /api/v1/bookmark:\n    put:\n      summary: 'Updates a business bio'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\BusinessBioController::update'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                id:\n                  description: 'Business ID'\n                  type: string\n                bio:\n                  description: 'Business bio'\n                  type: string\n              type: object\n      responses:\n        200:\n          description: Success\n    post:\n      summary: 'Toggle bookmark specified by ID for logged in user'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\BusinessesController::toggleBookmark'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                uuid:\n                  type: string\n              type: object\n      responses:\n        200:\n          description: 'Bookmark successfully created/deleted!'\n  /api/v1/business-cover:\n    post:\n      operationId: 'App\\Http\\Controllers\\API\\v1\\BusinessCoverController::store'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                cover_image:\n                  description: 'File for business cover'\n                  type: file\n              type: object\n      responses:\n        200:\n          description: 'Status OK'\n  '/api/v1/business-feed/{businessId}':\n    get:\n      summary: 'Get feed for business'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\BusinessFeedController::index'\n      parameters:\n        -\n          name: business_id\n          in: query\n          description: 'ID of business'\n          required: true\n          schema:\n            type: integer\n      responses:\n        200:\n          description: 'List of FeedResource'\n  '/api/v1/business-hours/{business}':\n    put:\n      summary: 'Update business hours'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\BusinessHoursController::update'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                open_period_mins:\n                  description: 'Start time'\n                  type: string\n                close_period_mins:\n                  description: 'End time'\n                  type: string\n                business_id:\n                  description: 'ID of business'\n                  type: string\n                wd_0:\n                  description: Sunday\n                  type: string\n                wd_1:\n                  description: Monday\n                  type: string\n                wd_2:\n                  description: Tuesday\n                  type: string\n                wd_3:\n                  description: Wednesday\n                  type: string\n                wd_4:\n                  description: Thursday\n                  type: string\n                wd_5:\n                  description: Friday\n                  type: string\n                wd_6:\n                  description: Saturday\n                  type: string\n              type: object\n      responses:\n        200:\n          description: BusinessHoursResource\n  /api/v1/business-posts:\n    put:\n      summary: 'Update business post by ID'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\BusinessPostsController::update'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                id:\n                  description: 'id of business post'\n                  type: string\n                business_id:\n                  description: 'id of business'\n                  type: string\n                text:\n                  description: 'id of user'\n                  type: string\n                photo:\n                  description: 'base64 encoded image'\n                  type: string\n                expire_date:\n                  type: string\n              type: object\n      responses:\n        200:\n          description: 'Business post updated'\n        400:\n          description: 'Invalid given data'\n        404:\n          description: 'Business post not found'\n    post:\n      summary: 'Create business post'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\BusinessPostsController::store'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                business_id:\n                  description: 'UUID of business'\n                  type: string\n                text:\n                  description: 'Post text'\n                  type: string\n                photo:\n                  description: 'photo file'\n                  type: string\n                expire_date:\n                  type: string\n              type: object\n      responses:\n        201:\n          description: BusinessPostResource\n    delete:\n      summary: 'Delete a business post'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\BusinessPostsController::destroy'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                id:\n                  description: 'id of business post'\n                  type: string\n              type: object\n      responses:\n        200:\n          description: 'Business Post Resource'\n  '/api/v1/business-posts/business/{$businessUuid}':\n    get:\n      summary: 'Get all business posts for business'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\BusinessPostsController::forBusiness'\n      parameters:\n        -\n          name: business_id\n          in: query\n          description: 'ID of business'\n          required: true\n          schema:\n            type: integer\n      responses:\n        200:\n          description: 'List of Business Post'\n  '/api/v1/business-posts/{businessPostUuid}':\n    get:\n      summary: 'Get individual business post'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\BusinessPostsController::show'\n      responses:\n        200:\n          description: 'Businesse Post'\n  '/api/v1/business-reviews/{business}':\n    post:\n      summary: 'Create a business review'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\BusinessReviewsController::store'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                business_id:\n                  description: 'id of business'\n                  type: string\n                score:\n                  description: Score\n                  type: int\n                comment:\n                  description: 'Review comment'\n                  type: string\n                photo:\n                  description: image\n                  type: file\n                mode:\n                  description: 'Public or private entry.'\n                  type: boolean\n              type: object\n      responses:\n        201:\n          description: BusinessPostResource\n  '/api/v1/business-reviews/business/{businessUuid}':\n    get:\n      summary: 'Get business review for a business based on UUID'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\BusinessReviewsController::show'\n      parameters:\n        -\n          name: businessUuid\n          in: query\n          description: 'Business UUID'\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: 'Business Review Resource'\n  /api/v1/business-search:\n    get:\n      summary: 'search business by query'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\BusinessSearchController::index'\n      parameters:\n        -\n          name: query\n          in: query\n          description: Query\n          required: true\n          schema:\n            type: string\n        -\n          name: lat\n          in: query\n          description: Latitude\n          schema:\n            type: float\n        -\n          name: lng\n          in: query\n          description: Longitude\n          schema:\n            type: float\n        -\n          name: radius\n          in: query\n          description: 'Radius in KM'\n          schema:\n            type: float\n        -\n          name: keyword\n          in: query\n          description: 'Radius in KM'\n          schema:\n            type: float\n      responses:\n        200:\n          description: 'List businesses'\n  /api/v1/businesses/geo-json:\n    get:\n      summary: 'Get GEO Json for businesses'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\BusinessesController::geoJson'\n      responses:\n        200:\n          description: 'Geo Data JSON filestream'\n  '/api/v1/businesses/{id}':\n    get:\n      summary: 'Get a single business by ID'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\BusinessesController::show'\n      responses:\n        200:\n          description: 'BusinessResource information'\n  /api/v1/businesses:\n    post:\n      summary: 'Create a business'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\BusinessesController::store'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                name:\n                  description: Name\n                  type: string\n                lat:\n                  description: latitude\n                  type: string\n                lng:\n                  description: longitude\n                  type: string\n                bio:\n                  description: 'business bio'\n                  type: string\n                avatar:\n                  description: 'Avatar Image File'\n                  type: string\n                category_id:\n                  description: 'Category UUID'\n                  type: string\n                cover_photo:\n                  description: 'Cover Photo Image File'\n                  type: string\n              type: object\n      responses:\n        200:\n          description: BusinessResource\n  '/api/v1/businesses/{business}':\n    put:\n      summary: 'Update a business based on UUID passed.'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\BusinessesController::update'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                name:\n                  description: 'base 64 encoded avatar inage'\n                  type: string\n                lat:\n                  description: latitude\n                  type: string\n                lng:\n                  description: longitude\n                  type: string\n                id:\n                  description: 'business uuid'\n                  type: string\n                category_id:\n                  description: 'Category Id'\n                  type: integer\n                bio:\n                  description: 'business bio'\n                  type: string\n                avatar:\n                  description: 'business avatar'\n                  type: file\n                cover_photo:\n                  description: 'business cover photo'\n                  type: file\n              type: object\n      responses:\n        200:\n          description: 'Business updated'\n        400:\n          description: 'Business not found'\n  '/api/v1/businesses/{businessId}':\n    delete:\n      summary: 'Delete a business by ID'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\BusinessesController::delete'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                id:\n                  description: 'business uuid'\n                  type: string\n              type: object\n      responses:\n        200:\n          description: 'Business updated'\n        400:\n          description: 'Business not found'\n  /api/v1/categories:\n    get:\n      summary: 'Returns all categories.'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\CategoriesController::index'\n      responses:\n        200:\n          description: 'List of all categories'\n  /api/v1/common:\n    get:\n      summary: 'Get commonly used data, cached'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\CommonItemsController::index'\n      responses:\n        200:\n          description: 'Common items'\n  /api/v1/discover:\n    get:\n      summary: 'Get similar business based on id'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\DiscoverController::index'\n      parameters:\n        -\n          name: business_id\n          in: query\n          description: 'Business ID'\n          required: true\n          schema:\n            type: integer\n      responses:\n        200:\n          description: 'List of businesses'\n  /api/v1/explore:\n    get:\n      summary: 'explore business based on lat and lng'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\ExploreController::index'\n      parameters:\n        -\n          name: lat\n          in: query\n          description: 'Lat of location'\n          required: true\n          schema:\n            type: float\n        -\n          name: lng\n          in: query\n          description: 'Lng of location'\n          required: true\n          schema:\n            type: float\n        -\n          name: query\n          in: query\n          description: Query\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: 'List of businesses'\n  /api/v1/image/face-detection:\n    post:\n      summary: 'Detect faces from an image.'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\FaceDetectionController::index'\n      parameters:\n        -\n          name: image\n          in: query\n          description: 'Image encoded in base64.'\n          required: true\n      responses:\n        200:\n          description: 'Image faces annotations.'\n  /api/v1/feed:\n    get:\n      summary: 'Get feed on lat and lng'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\FeedController::index'\n      parameters:\n        -\n          name: lat\n          in: query\n          description: 'Lat of location'\n          required: true\n          schema:\n            type: float\n        -\n          name: lng\n          in: query\n          description: 'Lng of location'\n          required: true\n          schema:\n            type: float\n      responses:\n        200:\n          description: 'List of FeedResource'\n  /api/v1/map-presets:\n    get:\n      summary: 'Get All Map Presets'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\MapPresetsController::index'\n      responses:\n        200:\n          description: 'List of MapPresetResource'\n  /api/v1/map-presets/search:\n    get:\n      summary: 'Search Map Preset'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\MapPresetsController::search'\n      parameters:\n        -\n          name: map_preset_uuid\n          in: query\n          description: 'Map Preset UUID'\n          schema:\n            type: string\n        -\n          name: lat\n          in: query\n          description: Latitude\n          schema:\n            type: float\n        -\n          name: lon\n          in: query\n          description: Longitude\n          schema:\n            type: float\n      responses:\n        200:\n          description: 'List of BusinessResource'\n  /api/v1/nearby-suggest:\n    get:\n      summary: 'Get business close to lat/lon'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\NearbySuggestController::index'\n      parameters:\n        -\n          name: lat\n          in: query\n          description: 'Lat of location'\n          required: true\n          schema:\n            type: float\n        -\n          name: lon\n          in: query\n          description: 'Lng of location'\n          required: true\n          schema:\n            type: float\n      responses:\n        200:\n          description: 'List of BusinessResource'\n  '/api/v1/ownership-requests/{business}':\n    post:\n      summary: 'Submit business ownership request.'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\OwnershipController::store'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                'business uuid':\n                  type: string\n              type: object\n      responses:\n        200:\n          description: 'Ownership requests status - boolean'\n  '/api/v1/ownership-requests/{ownershipRequest}/verify':\n    post:\n      summary: 'Submit business ownership verification request.'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\OwnershipController::verify'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                token:\n                  type: string\n              type: object\n      responses:\n        200:\n          description: 'Ownership requests status - boolean'\n  /api/v1/stickers:\n    get:\n      summary: 'Get all stickers for category_id'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\StickersController::index'\n      parameters:\n        -\n          name: category_id\n          in: query\n          description: 'Category ID'\n          schema:\n            type: integer\n        -\n          name: Tags\n          in: query\n          description: tags\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: 'List of StickerResource'\n  /api/v1/top-categories:\n    get:\n      summary: 'Search top categories based on key'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\TopCategoriesSearchController::search'\n      parameters:\n        -\n          name: keyword\n          in: query\n          description: 'Keyword to search'\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: 'List results'\n  /api/v1/user-owned-businesses:\n    get:\n      summary: 'Get user owned businesses'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\UserBusinessesController::index'\n      responses:\n        200:\n          description: 'Businesses owned by authed user'\n  /api/v1/user-categories:\n    get:\n      summary: 'Get user categories'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\UserCategoriesController::index'\n      responses:\n        200:\n          description: 'List of categories'\n    post:\n      summary: 'Attach a category to user'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\UserCategoriesController::store'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                user_id:\n                  description: 'User UUID'\n                  type: string\n                category_id:\n                  description: 'Business UUID'\n                  type: string\n              type: object\n      responses:\n        200:\n          description: Category\n  /api/v1/user-feed:\n    get:\n      summary: 'Get user feed'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\UserFeedController::index'\n      responses:\n        200:\n          description: 'List of UserFeedResource'\n  /api/v1/user-home-feed:\n    get:\n      summary: 'Get user home feed'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\UserFeedController::homeFeed'\n      responses:\n        200:\n          description: 'List of user''s home feed'\n  /api/v1/user-businesses/optional-attributes:\n    get:\n      summary: 'Get optional attributes'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\UserOptionalAttributesController::index'\n      parameters:\n        -\n          name: Tags\n          in: query\n          description: tags\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: 'Businesses optional attirbutes'\n    put:\n      summary: 'Update optional attribute'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\UserOptionalAttributesController::update'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                business_id:\n                  description: 'Business UUID'\n                  type: string\n                optional_attribute_id:\n                  description: 'Optional Attribute UUID'\n                  type: string\n                description:\n                  description: Description\n                  type: string\n              type: object\n      responses:\n        200:\n          description: 'Updated business optional attirbutes'\n    post:\n      summary: 'Save optional attribute'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\UserOptionalAttributesController::store'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                business_id:\n                  description: 'Business UUID'\n                  type: string\n                optional_attribute_id:\n                  description: 'Optional Attribute UUID'\n                  type: string\n                description:\n                  description: Description\n                  type: string\n              type: object\n      responses:\n        200:\n          description: 'Created business optional attirbutes'\n    delete:\n      summary: 'Delete optional attribute'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\UserOptionalAttributesController::delete'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                business_id:\n                  description: 'Business UUID'\n                  type: string\n                optional_attribute_id:\n                  description: 'Optional Attribute UUID'\n                  type: string\n              type: object\n      responses:\n        200:\n          description: 'Deleted business optional attirbutes'\n  '/api/v1/user-business-reviews/{userId}':\n    get:\n      summary: 'Get business reviews made by a user'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\UserReviewsController::index'\n      responses:\n        200:\n          description: 'Common items'\n  /api/v1/users/:\n    get:\n      summary: 'Return current logged in user'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\UsersController::index'\n      responses:\n        200:\n          description: 'List of UserResource'\n  /api/v1/users/bookmarks:\n    get:\n      summary: 'Return current user''s bookmarks'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\UsersController::bookmarks'\n      responses:\n        200:\n          description: 'List of BookmarkResource'\n  /api/v1/users:\n    put:\n      summary: 'Update current logged in user'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\UsersController::update'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                name:\n                  description: Name\n                  type: string\n                email:\n                  description: Email\n                  type: string\n                password:\n                  description: 'Update current logged in user'\n                  type: string\n                phone_number:\n                  description: 'Update current logged in user'\n                  type: string\n                age_group:\n                  description: 'Update current logged in user'\n                  type: string\n                gender:\n                  description: 'Update current logged in user'\n                  type: string\n                cover_photo:\n                  description: 'Update current logged in user'\n                  type: string\n                avatar_photo:\n                  description: 'Update current logged in user'\n                  type: string\n                bio:\n                  description: 'Update current logged in user'\n                  type: string\n                allow_location_tracking:\n                  description: 'Update current logged in user'\n                  type: boolean\n                post_publicly:\n                  description: 'Update current logged in user'\n                  type: boolean\n                t_c_agreed:\n                  description: 'Update current logged in user'\n                  type: boolean\n                profile_visible:\n                  description: 'Update current logged in user'\n                  type: boolean\n              type: object\n      responses:\n        200:\n          description: UserResource\n    delete:\n      summary: 'Delete current logged in user'\n      operationId: 'App\\Http\\Controllers\\API\\v1\\UsersController::destroy'\n      responses:\n        200:\n          description: bool\n",
			"canonicalURL": "/github.com/narek725/Laravel-Vue-Nova@e0622f4846d29a1b94431ef98c130b40be6181a2/-/blob/storage/api-docs/api-docs.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/narek725/Laravel-Vue-Nova/blob/e0622f4846d29a1b94431ef98c130b40be6181a2/storage/api-docs/api-docs.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /api/v1/bookmark/{id}: get: operation \"App\\\\Http\\\\Controllers\\\\API\\\\v1\\\\BusinessBioController::show\": parse path \"/api/v1/bookmark/{id}\": path parameter not specified: \"id\""
}