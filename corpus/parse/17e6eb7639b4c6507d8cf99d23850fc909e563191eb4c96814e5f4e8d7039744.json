{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Telecominfraproject/wlan-cloud-ucentralgw"
		},
		"file": {
			"name": "owgw.yaml",
			"size": 0,
			"path": "openapi/owgw.yaml",
			"byteSize": 63804,
			"content": "openapi: 3.0.1\ninfo:\n  title: uCentral gateway API\n  description: A process to manage configuration for devices.\n  version: 2.5.0\n  license:\n    name: BSD3\n    url: https://github.com/Telecominfraproject/wlan-cloud-ucentralgw/blob/master/LICENSE\n  contact:\n    name: Arilia Support\n    email: ucentralsupport@arilia.com\n    url: https://www.ucentral.info/support\n\nservers:\n  - url: 'https://localhost:16001/api/v1'\n\nsecurity:\n  - bearerAuth: []\n  - ApiKeyAuth: []\n\ncomponents:\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      in: header\n      name: X-API-KEY\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n\n  responses:\n    NotFound:\n      description: The specified resource was not found.\n      content:\n        application/json:\n          schema:\n            properties:\n              ErrorCode:\n                type: integer\n              ErrorDetails:\n                type: string\n              ErrorDescription:\n                type: string\n\n    Unauthorized:\n      description: The requested does not have sufficient rights to perform the operation.\n      content:\n        application/json:\n          schema:\n            properties:\n              ErrorCode:\n                type: integer\n                enum:\n                  - 0     # Success\n                  - 1     # PASSWORD_CHANGE_REQUIRED,\n                  - 2     # INVALID_CREDENTIALS,\n                  - 3     # PASSWORD_ALREADY_USED,\n                  - 4     # USERNAME_PENDING_VERIFICATION,\n                  - 5     # PASSWORD_INVALID,\n                  - 6     # INTERNAL_ERROR,\n                  - 7     # ACCESS_DENIED,\n                  - 8     # INVALID_TOKEN\n                  - 9     # EXPIRED_TOKEN\n                  - 10    # RATE_LIMIT_EXCEEDED\n                  - 11    # BAD_MFA_TRANSACTION\n                  - 12    # MFA_FAILURE\n                  - 13    # SECURITY_SERVICE_UNREACHABLE\n              ErrorDetails:\n                type: string\n              ErrorDescription:\n                type: string\n\n    Success:\n      description: The requested operation was performed.\n      content:\n        application/json:\n          schema:\n            properties:\n              Operation:\n                type: string\n              Details:\n                type: string\n              Code:\n                type: integer\n\n  schemas:\n    DeviceType:\n      type: string\n      default: AP\n      enum:\n        - AP\n        - SWITCH\n        - IOT\n        - MESH\n\n    Device:\n      type: object\n      description: Definition of uCentral device\n      required:\n        - deviceType\n      properties:\n        owner:\n          type: string\n          format: uuid\n        location:\n          type: string\n          format: uuid\n        venue:\n          type: string\n          format: uuid\n        serialNumber:\n          type: string\n        deviceType:\n          $ref: '#/components/schemas/DeviceType'\n        macAddress:\n          type: string\n        manufacturer:\n          type: string\n        UUID:\n          type: integer\n          format: int64\n        configuration:\n          type: string\n        notes:\n          type: array\n          items:\n            $ref: '#/components/schemas/NoteInfo'\n        createdTimestamp:\n          type: integer\n          format: int64\n        lastConfigurationChange:\n          type: integer\n          format: int64\n        lastConfigurationDownload:\n          type: integer\n          format: int64\n        firmware:\n          type: string\n        devicePassword:\n          type: string\n\n    DeviceWithStatus:\n      type: object\n      description: Definition of uCentral device\n      required:\n        - deviceType\n      properties:\n        owner:\n          type: string\n          format: uuid\n        location:\n          type: string\n          format: uuid\n        venue:\n          type: string\n          format: uuid\n        serialNumber:\n          type: string\n        deviceType:\n          $ref: '#/components/schemas/DeviceType'\n        macAddress:\n          type: string\n        manufacturer:\n          type: string\n        UUID:\n          type: integer\n          format: int64\n        configuration:\n          type: string\n        compatible:\n          type: string\n        fwUpdatePolicy:\n          type: string\n        notes:\n          type: string\n        createdTimestamp:\n          type: integer\n          format: int64\n        lastConfigurationChange:\n          type: integer\n          format: int64\n        lastConfigurationDownload:\n          type: integer\n          format: int64\n        lastFWUpdate:\n          type: integer\n          format: int64\n        firmware:\n          type: string\n        connected:\n          type: boolean\n        ipAddress:\n          type: string\n        txBytes:\n          type: integer\n          format: int64\n        rxBytes:\n          type: integer\n          format: int64\n        associations_2G:\n          type: integer\n          format: int64\n        associations_5G:\n          type: integer\n          format: int64\n        devicePassword:\n          type: string\n        lastContact:\n          type: integer\n          format: int64\n\n    DeviceList:\n      type: object\n      description: Definition of uCentral device list\n      properties:\n        devices:\n          type: array\n          items:\n            $ref : '#/components/schemas/Device'\n\n    DeviceListWithStatus:\n      type: object\n      description: Definition of uCentral device list including device status.\n      properties:\n        devicesWithStatus:\n          type: array\n          items:\n            $ref : '#/components/schemas/DeviceWithStatus'\n\n    SerialNumberList:\n      type: object\n      description: List of serial numbers.\n      properties:\n        serialNumbers:\n          type: array\n          items:\n            type: string\n\n    DeviceCount:\n      type: object\n      description: The number of devices in the DB.\n      properties:\n        count:\n          type: integer\n          format: int64\n\n    DeviceStatus:\n      type: object\n      description: Current device status.\n      properties:\n        serialNumber:\n          type: string\n        ipAddress:\n          type: string\n        txBytes:\n          type: integer\n          format: int64\n        rxBytes:\n          type: integer\n          format: int64\n        messageCount:\n          type: integer\n          format: int64\n        UUID:\n          type: integer\n          format: int64\n        connected:\n          type: boolean\n        lastContact:\n          type: integer\n          format: int64\n        firmware:\n          type: string\n        associations_2G:\n          type: integer\n          format: int64\n        associations_5G:\n          type: integer\n          format: int64\n        verifiedCertificate:\n          type: string\n          enum:\n            - NO_CERTIFICATE,\n            - VALID_CERTIFICATE,\n            - MISMATCH_SERIAL,\n            - VERIFIED\n\n    DeviceCapabilities:\n      type: object\n      description: Describes the capabilities a device can support.\n      properties:\n        serialNumber:\n          type: string\n        capabilities:\n          type: string\n        lastUpdate:\n          type: integer\n          format: int64\n        firstUpdate:\n          type: integer\n          format: int64\n\n    StatisticsDetails:\n      type: object\n      properties:\n        serialNumber:\n          type: string\n        recorded:\n          type: integer\n          format: int64\n        UUID:\n          type: integer\n          format: int64\n        data:\n          type: string\n\n    StatisticsRecords:\n      type: object\n      properties:\n        serialNumber:\n          type: string\n        values:\n          type: array\n          items:\n            $ref: '#/components/schemas/StatisticsDetails'\n\n    NameValuePair:\n      type: object\n      properties:\n        name:\n          type: string\n        value:\n          type: integer\n          format: int64\n\n    InterfaceStatistics:\n      type: object\n      properties:\n        name:\n          type: string\n        values:\n          type: array\n          items:\n            $ref: '#/components/schemas/NameValuePair'\n\n    CommandDetails:\n      type: object\n      properties:\n        command:\n          type: string\n        payload:\n          type: string\n        when:\n          type: integer\n          format: int64\n        serialNumber:\n          type: string\n\n    CommandSubmitSuccess:\n      description: The command was submitted succesfully.\n      properties:\n        serialNumber:\n          type: string\n        UUID:\n          type: string\n          format: uuid\n\n    DeviceConfigureRequest:\n      type: object\n      properties:\n        serialNumber:\n          type: string\n        UUID:\n          type: integer\n          format: int64\n        configuration:\n          type: string\n        when:\n          type: integer\n          format: int64\n\n    DeviceLog:\n      type: object\n      properties:\n        log:\n          type: string\n        recorded:\n          type: integer\n          format: int64\n        severity:\n          type: integer\n          format: int64\n        data:\n          type: string\n        logType:\n          type: integer\n          format: int64\n        UUID:\n          type: integer\n          format: int64\n\n    DeviceLogList:\n      type: object\n      properties:\n        serialNumber:\n          type: string\n        values:\n          type: array\n          items:\n            $ref: '#/components/schemas/DeviceLog'\n\n    HealthCheck:\n      type: object\n      properties:\n        UUID:\n          type: integer\n          format: int64\n        sanity:\n          type: integer\n          format: int64\n        data:\n          type: string\n        recorded:\n          type: integer\n          format: int64\n\n    HealthCheckList:\n      type: object\n      properties:\n        serialNumber:\n          type: string\n        values:\n          type: array\n          items:\n            $ref: '#/components/schemas/HealthCheck'\n\n    DefaultConfiguration:\n      type: object\n      properties:\n        name:\n          type: string\n        modelIds:\n          type: array\n          items:\n            type: string\n        description:\n          type: string\n        configuration:\n          type: string\n        created:\n          type: integer\n          format: int64\n        lastModified:\n          type: integer\n          format: int64\n\n    DefaultConfigurationList:\n      properties:\n        configurations:\n          type: array\n          items:\n            $ref : '#/components/schemas/DefaultConfiguration'\n\n    UpgradeRequest:\n      type: object\n      properties:\n        uri:\n          type: string\n        serialNumber:\n          type: string\n        when:\n          type: integer\n          format: int64\n        keepRedirector:\n          type: boolean\n\n    RebootRequest:\n      type: object\n      properties:\n        serialNumber:\n          type: string\n        when:\n          type: integer\n          format: int64\n\n    FactoryRequest:\n      type: object\n      properties:\n        serialNumber:\n          type: string\n        when:\n          type: integer\n          format: int64\n        keepRedirector:\n          type: boolean\n\n    LEDsRequest:\n      type: object\n      properties:\n        serialNumber:\n          type: string\n        when:\n          type: integer\n          format: int64\n        duration:\n          description: only applies to the blink pattern\n          type: integer\n          format: int64\n        pattern:\n          type: string\n          enum:\n            - on\n            - off\n            - blink\n\n    MessageRequest:\n      type: object\n      properties:\n        serialNumber:\n          type: string\n        when:\n          type: integer\n          format: int64\n        message:\n          type: string\n          enum:\n            - state\n            - healthcheck\n\n    TraceRequest:\n      type: object\n      properties:\n        serialNumber:\n          type: string\n        when:\n          type: integer\n          format: int64\n        duration:\n          type: integer\n          format: int64\n        numberOfPackets:\n          type: integer\n          format: int64\n        network:\n          type: string\n        interface:\n          type: string\n\n    CommandInfo:\n      type: object\n      properties:\n        UUID:\n          type: string\n          format: uuid\n        command:\n          type: string\n        details:\n          type: string\n        serialNumber:\n          type: string\n        submitted:\n          type: integer\n          format: int64\n        executed:\n          type: integer\n          format: int64\n        completed:\n          type: integer\n          format: int64\n        when:\n          type: integer\n          format: int64\n        errorText:\n          type: string\n        results:\n          type: string\n        errorCode:\n          type: integer\n          format: int64\n        submittedBy:\n          type: string\n        status:\n          type: string\n        custom:\n          type: integer\n          format: int64\n        waitingForFile:\n          type: integer\n          format: int64\n        attachFile:\n          type: integer\n          format: int64\n        attachSize:\n          type: integer\n          format: int64\n        attachType:\n          type: string\n\n    CommandInfoList:\n      type: object\n      properties:\n        commands:\n          type: array\n          items:\n            $ref: '#/components/schemas/CommandInfo'\n\n    DeviceDashboard:\n      type: object\n      properties:\n        snapshot:\n          type: integer\n          format: int64\n        numberOfDevices:\n          type: integer\n          format: int64\n        commands:\n          $ref: '#/components/schemas/TagIntPairList'\n        upTimes:\n          $ref: '#/components/schemas/TagIntPairList'\n        memoryUsed:\n          $ref: '#/components/schemas/TagIntPairList'\n        load1:\n          $ref: '#/components/schemas/TagIntPairList'\n        load5:\n          $ref: '#/components/schemas/TagIntPairList'\n        load15:\n          $ref: '#/components/schemas/TagIntPairList'\n        vendors:\n          $ref: '#/components/schemas/TagIntPairList'\n        status:\n          $ref: '#/components/schemas/TagIntPairList'\n        type:\n          $ref: '#/components/schemas/TagIntPairList'\n        deviceType:\n          $ref: '#/components/schemas/TagIntPairList'\n        healths:\n          $ref: '#/components/schemas/TagIntPairList'\n        certificates:\n          $ref: '#/components/schemas/TagIntPairList'\n        lastContact:\n          $ref: '#/components/schemas/TagIntPairList'\n        associations:\n          $ref: '#/components/schemas/TagIntPairList'\n\n    TelemetryStreamRequest:\n      type: object\n      properties:\n        serialNumber:\n          type: string\n        interval:\n          type: integer\n          description:\n            0 - means to stop streaming, values 1-120 in seconds.\n        lifetime:\n          type: integer\n          format: int64\n          description: how long should the telemetry run\n        kafka:\n          type: boolean\n          default: false\n          description: set to true to start kafka telemetry, false to start websocket telemetry\n        types:\n          type: array\n          items:\n            type: string\n            enum:\n              - dhcp-snooping\n              - wire-frames\n              - state\n        uuid:\n          type: string\n          format: uuid\n          description:\n            only valid when terminating a stream\n\n    TelemetryStreamResponse:\n      type: object\n      properties:\n        serialNumber:\n          type: string\n        uuid:\n          type: string\n          format: uuid\n        uri:\n          type: string\n          format: uri\n          example:\n            wss://host.domain:port/endpoint\n        action:\n          type: string\n          description: what action resulted from running the command\n        status:\n          type: object\n          properties:\n            running:\n              type: boolean\n            interval:\n              type: integer\n            websocketTimer:\n              type: integer\n            kafkaTimer:\n              type: integer\n            websocketClients:\n              type: integer\n            kafkaClients:\n              type: integer\n\n    #########################################################################################\n    ##\n    ## These are endpoints that all services in the uCentral stack must provide\n    ##\n    #########################################################################################\n    AnyPayload:\n      type: object\n      properties:\n        Document:\n          type: string\n\n    StringList:\n      type: object\n      properties:\n        list:\n          type: array\n          items:\n            type: string\n\n    TagValuePair:\n      type: object\n      properties:\n        tag:\n          type: string\n        value:\n          type: string\n\n    TagValuePairList:\n      type: object\n      properties:\n        tagList:\n          type: array\n          items:\n            $ref: '#/components/schemas/TagValuePair'\n\n    TagIntPair:\n      type: object\n      properties:\n        tag:\n          type: string\n        value:\n          type: integer\n          format: int64\n\n    TagIntPairList:\n      type: object\n      properties:\n        tagList:\n          type: array\n          items:\n            $ref: '#/components/schemas/TagIntPair'\n\n    SystemCommandDetails:\n      type: object\n      properties:\n        command:\n          type: string\n          enum:\n            - setloglevels\n            - getloglevels\n            - getSubSystemNames\n            - getLogLevelNames\n            - stats\n        parameters:\n          oneOf:\n            - $ref: '#/components/schemas/StringList'\n            - $ref: '#/components/schemas/TagValuePairList'\n\n    SystemCommandResults:\n      type: object\n      oneOf:\n        - $ref: '#/components/schemas/StringList'\n        - $ref: '#/components/schemas/TagValuePairList'\n\n    NoteInfo:\n      type: object\n      properties:\n        created:\n          type: integer\n          format: int64\n        createdBy:\n          type: string\n        note:\n          type: string\n\n    SystemInfoResults:\n      type: object\n      properties:\n        version:\n          type: string\n        uptime:\n          type: integer\n          format: integer64\n        start:\n          type: integer\n          format: integer64\n        os:\n          type: string\n        processors:\n          type: integer\n        hostname:\n          type: string\n        certificates:\n          type: array\n          items:\n            type: object\n            properties:\n              filename:\n                type: string\n              expires:\n                type: integer\n                format: int64\n\n    SystemCommandSetLogLevel:\n      type: object\n      properties:\n        command:\n          type: string\n          enum:\n            - setloglevel\n        subsystems:\n          type: array\n          items:\n            $ref: '#/components/schemas/TagValuePair'\n\n    SystemCommandReload:\n      type: object\n      properties:\n        command:\n          type: string\n          enum:\n            - reload\n        subsystems:\n          type: array\n          items:\n            type: string\n            example: these are the SubSystems names retrieve with the GetSubSystemsNamesResult.\n\n    SystemCommandGetLogLevels:\n      type: object\n      properties:\n        command:\n          type: string\n          enum:\n            - getloglevels\n\n    SystemGetLogLevelsResult:\n      type: object\n      properties:\n        taglist:\n          type: array\n          items:\n            $ref: '#/components/schemas/TagValuePair'\n\n    SystemCommandGetLogLevelNames:\n      type: object\n      properties:\n        command:\n          type: string\n          enum:\n            - getloglevelnames\n\n    SystemCommandGetSubsystemNames:\n      type: object\n      properties:\n        command:\n          type: string\n          enum:\n            - getsubsystemnames\n\n    SystemCommandGetLogLevelNamesResult:\n      type: object\n      properties:\n        list:\n          type: array\n          items:\n            type: string\n\n    SystemGetSubSystemNamesResult:\n      type: object\n      properties:\n        taglist:\n          type: array\n          items:\n            $ref: '#/components/schemas/TagValuePair'\n\n    #########################################################################################\n    ##\n    ## End of uCentral system wide values\n    ##\n    #########################################################################################\n    BlackDeviceInfo:\n      type: object\n      properties:\n        serialNumber:\n          type: string\n        created:\n          type: integer\n          format: int64\n          readOnly: true\n        author:\n          type: string\n          readOnly: true\n        reason:\n          type: string\n\n    BlackDeviceList:\n      type: object\n      properties:\n        devices:\n          type: array\n          items:\n            $ref: '#/components/schemas/BlackDeviceInfo'\n\n    WifiBands:\n      type: object\n      properties:\n        bands:\n          type: array\n          items:\n            type: string\n            enum: [ \"2\" , \"5\", \"5l\", \"5u\" , \"6\" ]\n\n    WifiChannels:\n      type: object\n      properties:\n        channels:\n          type: array\n          items:\n            type: integer\n\n    WifiScanRequest:\n      type: object\n      properties:\n        serialNumber:\n          type: string\n        verbose:\n          type: boolean\n        activeScan:\n          type: boolean\n        selector:\n          oneOf:\n            - $ref: '#/components/schemas/WifiBands'\n            - $ref: '#/components/schemas/WifiChannels'\n      required:\n        - serialNumber\n\n    EventQueueRequest:\n      type: object\n      properties:\n        serialNumber:\n          type: string\n        types:\n          type: array\n          items:\n            type: string\n            enum:\n              - dhcp\n              - rrm\n\n    EventQueueResponse:\n      type: object\n      properties:\n        serialNumber:\n          type: string\n        UUID:\n          type: string\n          format: uuid\n        result:\n          type: string\n\n    RttySessionDetails:\n      type: object\n      properties:\n        serialNumber:\n          type: string\n        server:\n          type: string\n        port:\n          type: integer\n          format: int32\n        token:\n          type: string\n        timeout:\n          type: integer\n          format: int32\n        connectionId:\n          type: string\n        started:\n          type: integer\n          format: int64\n        commandUUID:\n          type: string\n        viewport:\n          type: integer\n          format: int32\n        password:\n          type: string\n\n    CapabilitiesModel:\n      type: object\n      properties:\n        deviceType:\n          type: string\n        capabilities:\n          type: string\n\n    CapabilitiesModelList:\n      type: object\n      properties:\n        device_types:\n          type: array\n          items:\n            $ref: '#/components/schemas/CapabilitiesModel'\n\npaths:\n  /devices:\n    get:\n      tags:\n        - Devices\n      summary: Returns a list of devices.\n      description: Get a list of devices.\n      operationId: getDeviceList\n      parameters:\n        - in: query\n          description: Pagination start (starts at 1. If not specified, 1 is assumed)\n          name: offset\n          schema:\n            type: integer\n          required: false\n        - in: query\n          description: Maximum number of entries to return (if absent, no limit is assumed)\n          name: limit\n          schema:\n            type: integer\n          required: false\n        - in: query\n          description: Filter the results\n          name: filter\n          schema:\n            type: string\n          required: false\n        - in: query\n          description: Supply a list of devices comma separated\n          name: select\n          schema:\n            type: string\n            example: serial1,serial2,serial3\n        - in: query\n          description: only serial numbers of full device details\n          name: serialOnly\n          schema:\n            type: boolean\n        - in: query\n          description: return the number of devices\n          name: countOnly\n          schema:\n            type: boolean\n            example: countOnly=true\n        - in: query\n          description: Return extra information with the device information\n          name: deviceWithStatus\n          schema:\n            type: boolean\n      responses:\n        200:\n          description: List devices\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/DeviceList'\n                  - $ref: '#/components/schemas/DeviceListWithStatus'\n                  - $ref: '#/components/schemas/SerialNumberList'\n                  - $ref: '#/components/schemas/DeviceCount'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /commands:\n    get:\n      tags:\n        - Commands\n      summary: Returns a list of commands.\n      description: Get a list of commands.\n      operationId: getCommandList\n      parameters:\n        - in: query\n          name: serialNumber\n          schema:\n            type: string\n          required: false\n        - in: query\n          name: startDate\n          schema:\n            type: integer\n            format: int64\n          required: false\n        - in: query\n          name: endDate\n          schema:\n            type: integer\n            format: int64\n        - in: query\n          name: offset\n          schema:\n            type: integer\n            format: int64\n        - in: query\n          name: limit\n          schema:\n            type: integer\n            format: int64\n        - in: query\n          description: Selecting this option means the newest record will be returned. Use limit to select how many.\n          name: newest\n          schema:\n            type: boolean\n          required: false\n\n      responses:\n        200:\n          description: List commands\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommandInfoList'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n    delete:\n      tags:\n        - Commands\n      summary: Delete some commands\n      operationId: deleteCommands\n      parameters:\n        - in: query\n          name: serialNumber\n          schema:\n            type: string\n          required: true\n        - in: query\n          name: startDate\n          schema:\n            type: integer\n            format: int64\n          required: false\n        - in: query\n          name: endDate\n          schema:\n            type: integer\n            format: int64\n\n      responses:\n        204:\n          description: Successfully deleted commands for the device.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/Success'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /command/{commandUUID}:\n    get:\n      tags:\n        - Commands\n      summary: Returns a specific command.\n      description: Returns a specific command\n      operationId: getACommandDetails\n      parameters:\n        - in: path\n          name: commandUUID\n          schema:\n            type: string\n            format: uuid\n          required: true\n      responses:\n        200:\n          description: List commands\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommandInfo'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n    delete:\n      tags:\n        - Commands\n      summary: Delete a specific command.\n      description: Delete a specific command\n      operationId: deleteACommand\n      parameters:\n        - in: path\n          name: commandUUID\n          schema:\n            type: string\n            format: uuid\n          required: true\n      responses:\n        204:\n          description: Delete command success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/Success'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /default_configurations:\n    get:\n      tags:\n        - Configurations\n      summary: Retrieve the lists of all default configurations.\n      description: Retrieve the lists of all default configurations.\n      operationId: getDefaultConfigurations\n\n      responses:\n        200:\n          description: List of defautl configurations included\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DefaultConfigurationList'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /default_configuration/{name}:\n    get:\n      tags:\n        - Configurations\n      summary: Retrieve a default configuration.\n      description: Retrieve a default configuration.\n      operationId: getDefaultConfiguration\n      parameters:\n        - in: path\n          name: name\n          schema:\n            type: string\n          required: true\n      responses:\n        200:\n          description: Default configurations included\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DefaultConfiguration'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n    post:\n      tags:\n        - Configurations\n      summary: Create a default configuration.\n      description: Create a default configuration.\n      operationId: createDefaultConfiguration\n      parameters:\n        - in: path\n          name: name\n          schema:\n            type: string\n          required: true\n      requestBody:\n        description: Information used to create the new device\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DefaultConfiguration'\n      responses:\n        200:\n          $ref: '#/components/responses/Success'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n    delete:\n      tags:\n        - Configurations\n      summary: Delete a default default configuration\n      description: Delete a default default configuration\n      operationId: deleteDefaultConfiguration\n      parameters:\n        - in: path\n          name: name\n          schema:\n            type: string\n          required: true\n      responses:\n        204:\n          $ref: '#/components/responses/Success'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n    put:\n      tags:\n        - Configurations\n      summary: Update a default configuration\n      description: Update a default configuration\n      operationId: updateDefaultConfiguration\n      parameters:\n        - in: path\n          name: name\n          schema:\n            type: string\n          required: true\n      requestBody:\n        description: Configuration details\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DefaultConfiguration'\n      responses:\n        200:\n          $ref: '#/components/responses/Success'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /device/{serialNumber}:\n    get:\n      tags:\n        - Devices\n      summary: Retrieve information for a single device.\n      description: Retrieve all the inforamtion about a single device\n      operationId: getDeviceInformation\n      parameters:\n        - in: path\n          name: serialNumber\n          schema:\n            type: string\n          required: true\n      responses:\n        200:\n          description: Device information\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Device'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n    post:\n      tags:\n        - Devices\n      summary: Create a new device.\n      operationId: createNewDevice\n      parameters:\n        - in: path\n          name: serialNumber\n          schema:\n            type: string\n          required: true\n        - in: query\n          name: validateOnly\n          schema:\n            type: boolean\n          required: false\n      requestBody:\n        description: Information used to create the new device\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Device'\n      responses:\n        200:\n          description: Successful device creation will return the device record with the proper device ID\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Device'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n    put:\n      tags:\n        - Devices\n      summary: Update a device.\n      operationId: updateNewDevice\n      parameters:\n        - in: path\n          name: serialNumber\n          schema:\n            type: string\n          required: true\n      requestBody:\n        description: Information used to create the new device\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Device'\n      responses:\n        200:\n          description: Successful device creation will return the device record with the proper device ID\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Device'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n    delete:\n      tags:\n        - Devices\n      summary: Delete a single device.\n      operationId: deleteDevice\n      parameters:\n        - in: path\n          name: serialNumber\n          schema:\n            type: string\n          required: true\n      responses:\n        204:\n          $ref: '#/components/responses/Success'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /device/{serialNumber}/logs:\n    get:\n      tags:\n        - Commands\n      summary: Get the latest logs for a given device\n      operationId: getDeviceLogs\n      parameters:\n        - in: path\n          name: serialNumber\n          schema:\n            type: string\n          required: true\n        - in: query\n          name: startDate\n          schema:\n            type: integer\n            format: int64\n          required: false\n        - in: query\n          name: endDate\n          schema:\n            type: integer\n            format: int64\n        - in: query\n          name: offset\n          schema:\n            type: integer\n            format: int64\n        - in: query\n          name: limit\n          schema:\n            type: integer\n            format: int64\n        - in: query\n          name: logType\n          description: 0=any kind of logs (default) 0=normal logs only 1=crash logs only\n          schema:\n            type: integer\n            format: int64\n        - in: query\n          description: Selecting this option means the newest record will be returned. Use limit to select how many.\n          name: newest\n          schema:\n            type: boolean\n          required: false\n\n      responses:\n        200:\n          description: Array of device logs for this device\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceLogList'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n    delete:\n      tags:\n        - Commands\n      summary: Delete some device logs.\n      operationId: deleteDeviceLogs\n      parameters:\n        - in: path\n          name: serialNumber\n          schema:\n            type: string\n          required: true\n        - in: query\n          name: startDate\n          schema:\n            type: integer\n            format: int64\n          required: false\n        - in: query\n          name: endDate\n          schema:\n            type: integer\n            format: int64\n        - in: query\n          name: logType\n          description: 0=any kind of logs (default) 1=normal logs only 2=crash logs only\n          schema:\n            type: integer\n            format: int64\n\n      responses:\n        204:\n          description: Successfully deleted logs for the device.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/Success'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /device/{serialNumber}/healthchecks:\n    get:\n      tags:\n        - Commands\n      summary: Get the latest health checks for a given device.\n      operationId: getDeviceHealthChecks\n      parameters:\n        - in: path\n          name: serialNumber\n          schema:\n            type: string\n          required: true\n        - in: query\n          name: startDate\n          schema:\n            type: integer\n            format: int64\n          required: false\n        - in: query\n          name: endDate\n          schema:\n            type: integer\n            format: int64\n          required: false\n        - in: query\n          name: offset\n          schema:\n            type: integer\n            format: int64\n          required: false\n        - in: query\n          name: limit\n          schema:\n            type: integer\n            format: int64\n          required: false\n        - in: query\n          description: Selecting this option means the newest record will be returned. Use limit to select how many.\n          name: newest\n          schema:\n            type: boolean\n          required: false\n        - in: query\n          description: Selecting this option means the last healthcheck will be returned. All other parameters will be ignored.\n          name: lastOnly\n          schema:\n            type: boolean\n          required: false\n\n      responses:\n        200:\n          description: Array of device health checks for this device\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HealthCheckList'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n    delete:\n      tags:\n        - Commands\n      summary: Delete some device health checks.\n      operationId: deleteDeviceHealthChecks\n      parameters:\n        - in: path\n          name: serialNumber\n          schema:\n            type: string\n          required: true\n        - in: query\n          name: startDate\n          schema:\n            type: integer\n            format: int64\n          required: false\n        - in: query\n          name: endDate\n          schema:\n            type: integer\n            format: int64\n          required: false\n\n      responses:\n        204:\n          description: Successfully deleted health checks for the device.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/Success'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /device/{serialNumber}/capabilities:\n    get:\n      tags:\n        - Commands\n      summary: Get the latest capabilities for a given device.\n      operationId: getDeviceCapabilities\n      parameters:\n        - in: path\n          name: serialNumber\n          schema:\n            type: string\n          required: true\n      responses:\n        200:\n          description: List of logs for this device\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceCapabilities'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n    delete:\n      tags:\n        - Commands\n      summary: Delete the capabilities for a given device.\n      operationId: deleteDeviceCapabilities\n      parameters:\n        - in: path\n          name: serialNumber\n          schema:\n            type: string\n          required: true\n      responses:\n        204:\n          description: List of logs for this device\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/Success'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /device/{serialNumber}/statistics:\n    get:\n      tags:\n        - Commands\n      summary: Get the latest statistics for a given device.\n      operationId: getDeviceStats\n      parameters:\n        - in: path\n          name: serialNumber\n          schema:\n            type: string\n          required: true\n        - in: query\n          name: startDate\n          schema:\n            type: integer\n            format: int64\n          required: false\n        - in: query\n          name: endDate\n          schema:\n            type: integer\n            format: int64\n          required: false\n        - in: query\n          name: offset\n          schema:\n            type: integer\n            format: int64\n          required: false\n        - in: query\n          name: limit\n          schema:\n            type: integer\n            format: int64\n          required: false\n        - in: query\n          description: Selecting this option means the Last Statistics block\n          name: lastOnly\n          schema:\n            type: boolean\n          required: false\n        - in: query\n          description: Selecting this option means the newest record will be returned. Use limit to select how many.\n          name: newest\n          schema:\n            type: boolean\n          required: false\n\n      responses:\n        200:\n          description: Array of statistics for this device\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/StatisticsRecords'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n    delete:\n      tags:\n        - Commands\n      summary: Get the latest statistics for a given device.\n      operationId: deleteDeviceStats\n      parameters:\n        - in: path\n          name: serialNumber\n          schema:\n            type: string\n          required: true\n        - in: query\n          name: startDate\n          schema:\n            type: integer\n            format: int64\n          required: false\n        - in: query\n          name: endDate\n          schema:\n            type: integer\n            format: int64\n          required: false\n\n      responses:\n        204:\n          description: Array of statistics for this device\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/Success'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /device/{serialNumber}/status:\n    get:\n      tags:\n        - Commands\n      summary: Get the latest status for a given device.\n      operationId: getDeviceStatus\n      parameters:\n        - in: path\n          name: serialNumber\n          schema:\n            type: string\n          required: true\n      responses:\n        200:\n          description: Status for the given device\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceStatus'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /device/{serialNumber}/command:\n    post:\n      tags:\n        - Commands\n      summary: Post a command to a device\n      operationId: executeCommand\n      parameters:\n        - in: path\n          name: serialNumber\n          schema:\n            type: string\n          required: true\n      requestBody:\n        description: Command details\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CommandDetails'\n      responses:\n        200:\n          $ref: '#/components/schemas/CommandInfo'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /device/{serialNumber}/configure:\n    post:\n      tags:\n        - Commands\n      summary: Configure a device.\n      operationId: updateConfigurationForADevice\n      parameters:\n        - in: path\n          name: serialNumber\n          schema:\n            type: string\n          required: true\n      requestBody:\n        description: Command details\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeviceConfigureRequest'\n      responses:\n        200:\n          $ref: '#/components/schemas/CommandInfo'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /device/{serialNumber}/ping:\n    post:\n      tags:\n        - Commands\n      summary: Configure a device.\n      operationId: createConfigurationForADevice\n      parameters:\n        - in: path\n          name: serialNumber\n          schema:\n            type: string\n          required: true\n      requestBody:\n        description: Command details\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                serialNumber:\n                  type: string\n      responses:\n        200:\n          description:\n            Successfull ping os a device\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  serialNumber:\n                    type: string\n                  currentUTCTime:\n                    type: integer\n                    format: int64\n                  deviceUTCTime:\n                    type: integer\n                    format: int64\n                  latency:\n                    type: number\n                  configurationUUID:\n                    type: integer\n                    format: int64\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /device/{serialNumber}/upgrade:\n    post:\n      tags:\n        - Commands\n      summary: Upgrade a device.\n      operationId: UpgradeDeviceFirmware\n      parameters:\n        - in: path\n          name: serialNumber\n          schema:\n            type: string\n          required: true\n      requestBody:\n        description: Command details\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpgradeRequest'\n      responses:\n        200:\n          $ref: '#/components/schemas/CommandInfo'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /device/{serialNumber}/reboot:\n    post:\n      tags:\n        - Commands\n      summary: Reboot a device.\n      operationId: rebootDevice\n      parameters:\n        - in: path\n          name: serialNumber\n          schema:\n            type: string\n          required: true\n      requestBody:\n        description: Command details\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RebootRequest'\n      responses:\n        200:\n          $ref: '#/components/schemas/CommandInfo'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /device/{serialNumber}/factory:\n    post:\n      tags:\n        - Commands\n      summary: Factory reset a device.\n      operationId: factoryReset\n      parameters:\n        - in: path\n          name: serialNumber\n          schema:\n            type: string\n          required: true\n      requestBody:\n        description: Command details\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FactoryRequest'\n      responses:\n        200:\n          $ref: '#/components/schemas/CommandInfo'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /device/{serialNumber}/leds:\n    post:\n      tags:\n        - Commands\n      summary: Blink the LEDs on a device.\n      operationId: ledsRequest\n      parameters:\n        - in: path\n          name: serialNumber\n          schema:\n            type: string\n          required: true\n      requestBody:\n        description: Command details\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LEDsRequest'\n      responses:\n        200:\n          $ref: '#/components/schemas/CommandInfo'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /device/{serialNumber}/trace:\n    post:\n      tags:\n        - Commands\n      summary: Launch a trace for a device.\n      operationId: traceRequest\n      parameters:\n        - in: path\n          name: serialNumber\n          schema:\n            type: string\n          required: true\n      requestBody:\n        description: Command details\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TraceRequest'\n      responses:\n        200:\n          $ref: '#/components/schemas/CommandInfo'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /device/{serialNumber}/wifiscan:\n    post:\n      tags:\n        - Commands\n      summary: Launch a wifi scan for a device.\n      operationId: wifiscanRequest\n      parameters:\n        - in: path\n          name: serialNumber\n          schema:\n            type: string\n          required: true\n      requestBody:\n        description: Scan details\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WifiScanRequest'\n      responses:\n        200:\n          $ref: '#/components/schemas/CommandInfo'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /device/{serialNumber}/request:\n    post:\n      tags:\n        - Commands\n      summary: Request a specific message\n      operationId: messageRequest\n      parameters:\n        - in: path\n          name: serialNumber\n          schema:\n            type: string\n          required: true\n      requestBody:\n        description: Message request details\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MessageRequest'\n      responses:\n        200:\n          $ref: '#/components/schemas/CommandSubmitSuccess'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /device/{serialNumber}/eventqueue:\n    post:\n      tags:\n        - Commands\n      summary: Request a list of queued events.\n      operationId: eventQueueRequest\n      parameters:\n        - in: path\n          name: serialNumber\n          schema:\n            type: string\n          required: true\n      requestBody:\n        description: Message request details\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EventQueueRequest'\n      responses:\n        200:\n          $ref: '#/components/schemas/EventQueueResponse'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /device/{serialNumber}/telemetry:\n    post:\n      tags:\n        - Commands\n      summary: Request a telemetry stream.\n      operationId: eventTelemetryStreamRequest\n      parameters:\n        - in: path\n          name: serialNumber\n          schema:\n            type: string\n          required: true\n        - in: query\n          name: statusOnly\n          schema:\n            type: boolean\n            default: false\n          required: false\n      requestBody:\n        description: Message request details\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TelemetryStreamRequest'\n      responses:\n        200:\n          $ref: '#/components/schemas/TelemetryStreamResponse'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /ouis:\n    get:\n      tags:\n        - OUIs\n      operationId: getOUIs\n      summary: Get a list of OUIs.\n      parameters:\n        - in: query\n          name: macList\n          schema:\n            type: string\n          required: true\n      responses:\n        200:\n          $ref: '#/components/schemas/TagValuePairList'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /device/{serialNumber}/rtty:\n    get:\n      tags:\n        - Commands\n      summary: Get the rtty parameters to initiate a session.\n      operationId: getRttySessionInfo\n      parameters:\n        - in: path\n          name: serialNumber\n          schema:\n            type: string\n          required: true\n      responses:\n        200:\n          description: Session information\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RttySessionDetails'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /file/{uuid}:\n    get:\n      tags:\n        - Files\n      summary: Get a file from the upload directory.\n      operationId: getUploadFile\n      parameters:\n        - in: path\n          name: uuid\n          schema:\n            type: string\n            format: uuid\n          required: true\n        - in: query\n          name: serialNumber\n          schema:\n            type: string\n          required: true\n      responses:\n        200:\n          description: Succesfull file retrieval\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n    delete:\n      tags:\n        - Files\n      summary: Delete a file from the upload directory.\n      operationId: deleteUploadFidelete\n      parameters:\n        - in: path\n          name: uuid\n          schema:\n            type: string\n            format: uuid\n          required: true\n        - in: query\n          name: serialNumber\n          schema:\n            type: string\n          required: true\n      responses:\n        204:\n          $ref: '#/components/responses/Success'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /blacklist:\n    get:\n      tags:\n        - Blacklist\n      summary: Returns a list blacklisted devices.\n      description: Get a list of blacklisted devices.\n      operationId: getBlacklistDeviceList\n      parameters:\n        - in: query\n          description: Pagination start (starts at 1. If not specified, 1 is assumed)\n          name: offset\n          schema:\n            type: integer\n          required: false\n        - in: query\n          description: Maximum number of entries to return (if absent, no limit is assumed)\n          name: limit\n          schema:\n            type: integer\n          required: false\n        - in: query\n          description: Filter the results\n          name: filter\n          schema:\n            type: string\n          required: false\n      responses:\n        200:\n          description: List blacklisted devices\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlackDeviceList'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /blacklist/{serialNumber}:\n    get:\n      tags:\n        - Blacklist\n      summary: Returns a blacklist entry.\n      description: Get a list of blacklisted devices.\n      operationId: getBlacklistDevice\n      parameters:\n        - in: path\n          description: Pagination start (starts at 1. If not specified, 1 is assumed)\n          name: serialNumber\n          schema:\n            type: string\n          required: true\n      responses:\n        200:\n          description: List blacklisted devices\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlackDeviceInfo'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n    post:\n      tags:\n        - Blacklist\n      summary: Create to the blacklist.\n      operationId: createBlackListDevice\n      parameters:\n        - in: path\n          description: Pagination start (starts at 1. If not specified, 1 is assumed)\n          name: serialNumber\n          schema:\n            type: string\n          required: true\n      requestBody:\n        description: Add blacklisted device\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BlackDeviceInfo'\n      responses:\n        200:\n          $ref: '#/components/responses/Success'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n    put:\n      tags:\n        - Blacklist\n      summary: Modify to the blacklist.\n      operationId: modifyBlackList\n      parameters:\n        - in: path\n          description: Pagination start (starts at 1. If not specified, 1 is assumed)\n          name: serialNumber\n          schema:\n            type: string\n          required: true\n      requestBody:\n        description: Add blacklisted devices\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BlackDeviceInfo'\n      responses:\n        200:\n          $ref: '#/components/responses/Success'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n    delete:\n      tags:\n        - Blacklist\n      summary: Delete from the blacklist.\n      operationId: deleteFromBlackList\n      parameters:\n        - in: path\n          name: serialNumber\n          schema:\n            type: string\n          required: true\n      responses:\n        204:\n          $ref: '#/components/responses/Success'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /capabilities:\n    get:\n      tags:\n        - Devices\n      summary: Get the list of device types and capabilities.\n      operationId: getCapabilitiesList\n      responses:\n        200:\n          description: Successful command execution\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CapabilitiesModelList'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /deviceDashboard:\n    get:\n      tags:\n        - Dashboards\n      summary: Get the last version of the dashboard.\n      operationId: getDeviceDashboard\n      responses:\n        200:\n          $ref: '#/components/schemas/DeviceDashboard'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  /iptocountry:\n    get:\n      tags:\n        - Utility\n      summary: Get the country code for an IP address\n      operationId: getIpToCountry\n      parameters:\n        - in: query\n          name: iplist\n          schema:\n            type: string\n            example:\n              10.2.2.2,10.3.4.3\n          required: true\n      responses:\n        200:\n          description: List of country codes.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  enabled:\n                    type: boolean\n                  countryCodes:\n                    type: array\n                    items:\n                      type: string\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n\n  #########################################################################################\n  ##\n  ## These are endpoints that all services in the uCentral stack must provide\n  ##\n  #########################################################################################\n  /system:\n    post:\n      tags:\n        - System Commands\n      summary: Perform some system wide commands.\n      operationId: systemCommand\n      requestBody:\n        description: Command details\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/SystemCommandSetLogLevel'\n                - $ref: '#/components/schemas/SystemCommandReload'\n                - $ref: '#/components/schemas/SystemCommandGetLogLevels'\n                - $ref: '#/components/schemas/SystemCommandGetLogLevelNames'\n                - $ref: '#/components/schemas/SystemCommandGetSubsystemNames'\n      responses:\n        200:\n          description: Successful command execution\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/SystemGetLogLevelsResult'\n                  - $ref: '#/components/schemas/SystemCommandGetLogLevelNamesResult'\n                  - $ref: '#/components/schemas/SystemGetSubSystemNamesResult'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'\n    get:\n      tags:\n        - System Commands\n      summary: Retrieve different values from the running service.\n      operationId: getSystemCommand\n      parameters:\n        - in: query\n          description: Get a value\n          name: command\n          schema:\n            type: string\n            enum:\n              - info\n          required: true\n\n      responses:\n        200:\n          description: Successful command execution\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/SystemInfoResults'\n        403:\n          $ref: '#/components/responses/Unauthorized'\n        404:\n          $ref: '#/components/responses/NotFound'"
		}
	},
	"Error": "parse: parse spec: paths: /command/{commandUUID}: delete: operation \"deleteACommand\": responses: 204: content: \"application/json\": schema: parse schema: reference \"#/components/responses/Success\": resolve reference \"#/components/responses/Success\": invalid schema reference \"#/components/responses/Success\""
}