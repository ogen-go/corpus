{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "amazonaws.com-lambda-2014-11-11-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/amazonaws.com-lambda-2014-11-11-swagger.yaml",
			"byteSize": 41454,
			"content": "openapi: 3.0.0\ninfo:\n  version: 2014-11-11\n  x-release: v4\n  title: AWS Lambda\n  description: \u003cfullname\u003eAWS Lambda\u003c/fullname\u003e \u003cp\u003e\u003cb\u003eOverview\u003c/b\u003e\u003c/p\u003e \u003cp\u003eThis is the AWS\n    Lambda API Reference. The AWS Lambda Developer Guide provides additional\n    information. For the service overview, go to \u003ca\n    href=\"http://docs.aws.amazon.com/lambda/latest/dg/welcome.html\"\u003eWhat is AWS\n    Lambda\u003c/a\u003e, and for information about how the service works, go to \u003ca\n    href=\"http://docs.aws.amazon.com/lambda/latest/dg/lambda-introduction.html\"\u003eAWS\n    LambdaL How it Works\u003c/a\u003e in the AWS Lambda Developer Guide.\u003c/p\u003e\n  x-logo:\n    url: https://twitter.com/awscloud/profile_image?size=original\n    backgroundColor: \"#FFFFFF\"\n  termsOfService: https://aws.amazon.com/service-terms/\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: https://github.com/mermade/aws2openapi\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: http://www.apache.org/licenses/\n  x-providerName: amazonaws.com\n  x-serviceName: lambda\n  x-origin:\n    - contentType: application/json\n      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/lambda-2014-11-11.normal.json\n      converter:\n        url: https://github.com/mermade/aws2openapi\n        version: 1.0.0\n      x-apisguru-direct: true\n  x-apiClientRegistration:\n    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct\n  x-apisguru-categories:\n    - cloud\n  x-preferred: false\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: https://docs.aws.amazon.com/lambda/\nx-hasEquivalentPaths: true\nsecurity:\n  - hmac: []\npaths:\n  /2014-11-13/event-source-mappings/:\n    post:\n      operationId: AddEventSource\n      description: '\u003cp\u003eIdentifies a stream as an event source for an AWS Lambda function.\n        It can be either an Amazon Kinesis stream or a Amazon DynamoDB stream.\n        AWS Lambda invokes the specified function when records are posted to the\n        stream.\u003c/p\u003e \u003cp\u003eThis is the pull model, where AWS Lambda invokes the\n        function. For more information, go to \u003ca\n        href=\"http://docs.aws.amazon.com/lambda/latest/dg/lambda-introduction.html\"\u003eAWS\n        Lambda: How it Works\u003c/a\u003e in the AWS Lambda Developer Guide.\u003c/p\u003e \u003cp\u003eThis\n        association between an Amazon Kinesis stream and an AWS Lambda function\n        is called the event source mapping. You provide the configuration\n        information (for example, which stream to read from and which AWS Lambda\n        function to invoke) for the event source mapping in the request\n        body.\u003c/p\u003e \u003cp\u003e Each event source, such as a Kinesis stream, can only be\n        associated with one AWS Lambda function. If you call\n        \u003ca\u003eAddEventSource\u003c/a\u003e for an event source that is already mapped to\n        another AWS Lambda function, the existing mapping is updated to call the\n        new function instead of the old one. \u003c/p\u003e \u003cp\u003eThis operation requires\n        permission for the \u003ccode\u003eiam:PassRole\u003c/code\u003e action for the IAM role. It\n        also requires permission for the \u003ccode\u003elambda:AddEventSource\u003c/code\u003e\n        action.\u003c/p\u003e'\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EventSourceConfiguration\"\n        \"400\":\n          description: InvalidParameterValueException\n          x-aws-exception: true\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterValueException\"\n        \"500\":\n          description: ServiceException\n          x-aws-exception: true\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceException\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - EventSource\n                - FunctionName\n                - Role\n              properties:\n                EventSource:\n                  description: The Amazon Resource Name (ARN) of the Amazon Kinesis stream\n                    that is the event source. Any record added to this stream\n                    causes AWS Lambda to invoke your Lambda function. AWS Lambda\n                    POSTs the Amazon Kinesis event, containing records, to your\n                    Lambda function as JSON.\n                  type: string\n                FunctionName:\n                  description: The Lambda function to invoke when AWS Lambda detects an\n                    event on the stream.\n                  type: string\n                  pattern: \"[a-zA-Z0-9-_]+\"\n                  minLength: 1\n                  maxLength: 64\n                Role:\n                  description: The ARN of the IAM role (invocation role) that AWS Lambda\n                    can assume to read from the stream and invoke the function.\n                  type: string\n                  pattern: arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+\n                BatchSize:\n                  description: The largest number of records that AWS Lambda will give to\n                    your function in a single event. The default is 100 records.\n                  type: integer\n                Parameters:\n                  description: 'A map (key-value pairs) defining the configuration for AWS\n                    Lambda to use when reading the event source. Currently, AWS\n                    Lambda supports only the\n                    \u003ccode\u003eInitialPositionInStream\u003c/code\u003e key. The valid values\n                    are: \"TRIM_HORIZON\" and \"LATEST\". The default value is\n                    \"TRIM_HORIZON\". For more information, go to \u003ca\n                    href=\"http://docs.aws.amazon.com/kinesis/latest/APIReference/API_GetShardIterator.html#Kinesis-GetShardIterator-request-ShardIteratorType\"\u003eShardIteratorType\u003c/a\u003e\n                    in the Amazon Kinesis Service API Reference. '\n                  type: object\n                  additionalProperties:\n                    $ref: \"#/components/schemas/String\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: ListEventSources\n      description: \u003cp\u003eReturns a list of event source mappings you created using the\n        \u003ccode\u003eAddEventSource\u003c/code\u003e (see \u003ca\u003eAddEventSource\u003c/a\u003e), where you\n        identify a stream as event source. This list does not include Amazon S3\n        event sources. \u003c/p\u003e \u003cp\u003eFor each mapping, the API returns configuration\n        information. You can optionally specify filters to retrieve specific\n        event source mappings.\u003c/p\u003e \u003cp\u003eThis operation requires permission for the\n        \u003ccode\u003elambda:ListEventSources\u003c/code\u003e action.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListEventSourcesResponse\"\n        \"400\":\n          description: InvalidParameterValueException\n          x-aws-exception: true\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterValueException\"\n        \"404\":\n          description: ResourceNotFoundException\n          x-aws-exception: true\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"500\":\n          description: ServiceException\n          x-aws-exception: true\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceException\"\n      parameters:\n        - name: EventSource\n          in: query\n          required: false\n          description: The Amazon Resource Name (ARN) of the Amazon Kinesis stream.\n          schema:\n            type: string\n        - name: FunctionName\n          in: query\n          required: false\n          description: The name of the AWS Lambda function.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n            pattern: \"[a-zA-Z0-9-_]+\"\n        - name: Marker\n          in: query\n          required: false\n          description: \"Optional string. An opaque pagination token returned from a\n            previous \u003ccode\u003eListEventSources\u003c/code\u003e operation. If present,\n            specifies to continue the list from where the returning call left\n            off. \"\n          schema:\n            type: string\n        - name: MaxItems\n          in: query\n          required: false\n          description: Optional integer. Specifies the maximum number of event sources to\n            return in response. This value must be greater than 0.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 10000\n  \"/2014-11-13/functions/{FunctionName}\":\n    delete:\n      operationId: DeleteFunction\n      description: \u003cp\u003eDeletes the specified Lambda function code and configuration.\u003c/p\u003e\n        \u003cp\u003eThis operation requires permission for the\n        \u003ccode\u003elambda:DeleteFunction\u003c/code\u003e action.\u003c/p\u003e\n      responses:\n        \"204\":\n          description: Success\n        \"404\":\n          description: ResourceNotFoundException\n          x-aws-exception: true\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"500\":\n          description: ServiceException\n          x-aws-exception: true\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceException\"\n      parameters:\n        - name: FunctionName\n          in: path\n          required: true\n          description: The Lambda function to delete.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n            pattern: \"[a-zA-Z0-9-_]+\"\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetFunction\n      description: \u003cp\u003eReturns the configuration information of the Lambda function and a\n        presigned URL link to the .zip file you uploaded with\n        \u003ca\u003eUploadFunction\u003c/a\u003e so you can download the .zip file. Note that the\n        URL is valid for up to 10 minutes. The configuration information is the\n        same information you provided as parameters when uploading the\n        function.\u003c/p\u003e \u003cp\u003eThis operation requires permission for the\n        \u003ccode\u003elambda:GetFunction\u003c/code\u003e action.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetFunctionResponse\"\n        \"404\":\n          description: ResourceNotFoundException\n          x-aws-exception: true\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"500\":\n          description: ServiceException\n          x-aws-exception: true\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceException\"\n      parameters:\n        - name: FunctionName\n          in: path\n          required: true\n          description: The Lambda function name.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n            pattern: \"[a-zA-Z0-9-_]+\"\n  \"/2014-11-13/event-source-mappings/{UUID}\":\n    get:\n      operationId: GetEventSource\n      description: \u003cp\u003eReturns configuration information for the specified event source\n        mapping (see \u003ca\u003eAddEventSource\u003c/a\u003e).\u003c/p\u003e \u003cp\u003eThis operation requires\n        permission for the \u003ccode\u003elambda:GetEventSource\u003c/code\u003e action.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EventSourceConfiguration\"\n        \"400\":\n          description: InvalidParameterValueException\n          x-aws-exception: true\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterValueException\"\n        \"404\":\n          description: ResourceNotFoundException\n          x-aws-exception: true\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"500\":\n          description: ServiceException\n          x-aws-exception: true\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceException\"\n      parameters:\n        - name: UUID\n          in: path\n          required: true\n          description: The AWS Lambda assigned ID of the event source mapping.\n          schema:\n            type: string\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    delete:\n      operationId: RemoveEventSource\n      description: \u003cp\u003eRemoves an event source mapping. This means AWS Lambda will no longer\n        invoke the function for events in the associated source.\u003c/p\u003e \u003cp\u003eThis\n        operation requires permission for the\n        \u003ccode\u003elambda:RemoveEventSource\u003c/code\u003e action.\u003c/p\u003e\n      responses:\n        \"204\":\n          description: Success\n        \"400\":\n          description: InvalidParameterValueException\n          x-aws-exception: true\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterValueException\"\n        \"404\":\n          description: ResourceNotFoundException\n          x-aws-exception: true\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"500\":\n          description: ServiceException\n          x-aws-exception: true\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceException\"\n      parameters:\n        - name: UUID\n          in: path\n          required: true\n          description: The event source mapping ID.\n          schema:\n            type: string\n  \"/2014-11-13/functions/{FunctionName}/configuration\":\n    get:\n      operationId: GetFunctionConfiguration\n      description: \u003cp\u003eReturns the configuration information of the Lambda function. This\n        the same information you provided as parameters when uploading the\n        function by using \u003ca\u003eUploadFunction\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eThis operation requires\n        permission for the \u003ccode\u003elambda:GetFunctionConfiguration\u003c/code\u003e\n        operation.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FunctionConfiguration\"\n        \"404\":\n          description: ResourceNotFoundException\n          x-aws-exception: true\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"500\":\n          description: ServiceException\n          x-aws-exception: true\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceException\"\n      parameters:\n        - name: FunctionName\n          in: path\n          required: true\n          description: The name of the Lambda function for which you want to retrieve the\n            configuration information.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n            pattern: \"[a-zA-Z0-9-_]+\"\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    put:\n      operationId: UpdateFunctionConfiguration\n      description: \u003cp\u003eUpdates the configuration parameters for the specified Lambda\n        function by using the values provided in the request. You provide only\n        the parameters you want to change. This operation must only be used on\n        an existing Lambda function and cannot be used to update the function's\n        code. \u003c/p\u003e \u003cp\u003eThis operation requires permission for the\n        \u003ccode\u003elambda:UpdateFunctionConfiguration\u003c/code\u003e action.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FunctionConfiguration\"\n        \"400\":\n          description: InvalidParameterValueException\n          x-aws-exception: true\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterValueException\"\n        \"404\":\n          description: ResourceNotFoundException\n          x-aws-exception: true\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"500\":\n          description: ServiceException\n          x-aws-exception: true\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceException\"\n      parameters:\n        - name: FunctionName\n          in: path\n          required: true\n          description: The name of the Lambda function.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n            pattern: \"[a-zA-Z0-9-_]+\"\n        - name: Role\n          in: query\n          required: false\n          description: \"The Amazon Resource Name (ARN) of the IAM role that Lambda will\n            assume when it executes your function. \"\n          schema:\n            type: string\n            pattern: arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+\n        - name: Handler\n          in: query\n          required: false\n          description: \"The function that Lambda calls to begin executing your function.\n            For Node.js, it is the \u003ci\u003emodule-name.export\u003c/i\u003e value in your\n            function. \"\n          schema:\n            type: string\n            pattern: \"[a-zA-Z0-9./\\\\-_]+\"\n        - name: Description\n          in: query\n          required: false\n          description: A short user-defined function description. Lambda does not use this\n            value. Assign a meaningful description as you see fit.\n          schema:\n            type: string\n            minLength: 0\n            maxLength: 256\n        - name: Timeout\n          in: query\n          required: false\n          description: \"The function execution time at which Lambda should terminate the\n            function. Because the execution time has cost implications, we\n            recommend you set this value based on your expected execution time.\n            The default is 3 seconds. \"\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 60\n        - name: MemorySize\n          in: query\n          required: false\n          description: The amount of memory, in MB, your Lambda function is given. Lambda\n            uses this memory size to infer the amount of CPU allocated to your\n            function. Your function use-case determines your CPU and memory\n            requirements. For example, a database operation might need less\n            memory compared to an image processing function. The default value\n            is 128 MB. The value must be a multiple of 64 MB.\n          schema:\n            type: integer\n            minimum: 128\n            maximum: 1024\n  \"/2014-11-13/functions/{FunctionName}/invoke-async/\":\n    post:\n      operationId: InvokeAsync\n      description: \u003cp\u003eSubmits an invocation request to AWS Lambda. Upon receiving the\n        request, Lambda executes the specified function asynchronously. To see\n        the logs generated by the Lambda function execution, see the CloudWatch\n        logs console.\u003c/p\u003e \u003cp\u003eThis operation requires permission for the\n        \u003ccode\u003elambda:InvokeAsync\u003c/code\u003e action.\u003c/p\u003e\n      responses:\n        \"202\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvokeAsyncResponse\"\n        \"400\":\n          description: InvalidRequestContentException\n          x-aws-exception: true\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestContentException\"\n        \"404\":\n          description: ResourceNotFoundException\n          x-aws-exception: true\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"500\":\n          description: ServiceException\n          x-aws-exception: true\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceException\"\n      parameters:\n        - name: FunctionName\n          in: path\n          required: true\n          description: The Lambda function name.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n            pattern: \"[a-zA-Z0-9-_]+\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - InvokeArgs\n              properties:\n                InvokeArgs:\n                  description: JSON that you want to provide to your Lambda function as\n                    input.\n                  type: string\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /2014-11-13/functions/:\n    get:\n      operationId: ListFunctions\n      description: \u003cp\u003eReturns a list of your Lambda functions. For each function, the\n        response includes the function configuration information. You must use\n        \u003ca\u003eGetFunction\u003c/a\u003e to retrieve the code for your function.\u003c/p\u003e \u003cp\u003eThis\n        operation requires permission for the \u003ccode\u003elambda:ListFunctions\u003c/code\u003e\n        action.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListFunctionsResponse\"\n        \"500\":\n          description: ServiceException\n          x-aws-exception: true\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceException\"\n      parameters:\n        - name: Marker\n          in: query\n          required: false\n          description: \"Optional string. An opaque pagination token returned from a\n            previous \u003ccode\u003eListFunctions\u003c/code\u003e operation. If present, indicates\n            where to continue the listing. \"\n          schema:\n            type: string\n        - name: MaxItems\n          in: query\n          required: false\n          description: Optional integer. Specifies the maximum number of AWS Lambda\n            functions to return in response. This parameter value must be\n            greater than 0.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 10000\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/2014-11-13/functions/{FunctionName}#Runtime\u0026Role\u0026Handler\u0026Mode\":\n    put:\n      operationId: UploadFunction\n      description: \u003cp\u003eCreates a new Lambda function or updates an existing function. The\n        function metadata is created from the request parameters, and the code\n        for the function is provided by a .zip file in the request body. If the\n        function name already exists, the existing Lambda function is updated\n        with the new code and metadata. \u003c/p\u003e \u003cp\u003eThis operation requires\n        permission for the \u003ccode\u003elambda:UploadFunction\u003c/code\u003e action.\u003c/p\u003e\n      responses:\n        \"201\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FunctionConfiguration\"\n        \"400\":\n          description: InvalidParameterValueException\n          x-aws-exception: true\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidParameterValueException\"\n        \"404\":\n          description: ResourceNotFoundException\n          x-aws-exception: true\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"500\":\n          description: ServiceException\n          x-aws-exception: true\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceException\"\n      parameters:\n        - name: FunctionName\n          in: path\n          required: true\n          description: \"The name you want to assign to the function you are uploading. The\n            function names appear in the console and are returned in the\n            \u003ca\u003eListFunctions\u003c/a\u003e API. Function names are used to specify\n            functions to other AWS Lambda APIs, such as \u003ca\u003eInvokeAsync\u003c/a\u003e. \"\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n            pattern: \"[a-zA-Z0-9-_]+\"\n        - name: Runtime\n          in: query\n          required: true\n          description: The runtime environment for the Lambda function you are uploading.\n            Currently, Lambda supports only \"nodejs\" as the runtime.\n          schema:\n            type: string\n            enum:\n              - nodejs\n        - name: Role\n          in: query\n          required: true\n          description: \"The Amazon Resource Name (ARN) of the IAM role that Lambda assumes\n            when it executes your function to access any other Amazon Web\n            Services (AWS) resources. \"\n          schema:\n            type: string\n            pattern: arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+\n        - name: Handler\n          in: query\n          required: true\n          description: \"The function that Lambda calls to begin execution. For Node.js, it\n            is the \u003ci\u003emodule-name\u003c/i\u003e.\u003ci\u003eexport\u003c/i\u003e value in your function. \"\n          schema:\n            type: string\n            pattern: \"[a-zA-Z0-9./\\\\-_]+\"\n        - name: Mode\n          in: query\n          required: true\n          description: 'How the Lambda function will be invoked. Lambda supports only the\n            \"event\" mode. '\n          schema:\n            type: string\n            enum:\n              - event\n        - name: Description\n          in: query\n          required: false\n          description: A short, user-defined function description. Lambda does not use this\n            value. Assign a meaningful description as you see fit.\n          schema:\n            type: string\n            minLength: 0\n            maxLength: 256\n        - name: Timeout\n          in: query\n          required: false\n          description: \"The function execution time at which Lambda should terminate the\n            function. Because the execution time has cost implications, we\n            recommend you set this value based on your expected execution time.\n            The default is 3 seconds. \"\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 60\n        - name: MemorySize\n          in: query\n          required: false\n          description: The amount of memory, in MB, your Lambda function is given. Lambda\n            uses this memory size to infer the amount of CPU allocated to your\n            function. Your function use-case determines your CPU and memory\n            requirements. For example, database operation might need less memory\n            compared to image processing function. The default value is 128 MB.\n            The value must be a multiple of 64 MB.\n          schema:\n            type: integer\n            minimum: 128\n            maximum: 1024\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - FunctionZip\n              properties:\n                FunctionZip:\n                  description: 'A .zip file containing your packaged source code. For more\n                    information about creating a .zip file, go to \u003ca\n                    href=\"http://docs.aws.amazon.com/lambda/latest/dg/walkthrough-custom-events.html\"\u003eAWS\n                    LambdaL How it Works\u003c/a\u003e in the AWS Lambda Developer Guide.\n                    '\n                  type: string\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\nservers:\n  - url: http://lambda.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The AWS Lambda multi-region endpoint\n  - url: https://lambda.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The AWS Lambda multi-region endpoint\n  - url: http://lambda.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS Lambda endpoint for China (Beijing) and China (Ningxia)\n  - url: https://lambda.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS Lambda endpoint for China (Beijing) and China (Ningxia)\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      required: false\n      schema:\n        type: string\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    EventSourceConfiguration:\n      type: object\n      properties:\n        UUID:\n          $ref: \"#/components/schemas/String\"\n        BatchSize:\n          $ref: \"#/components/schemas/Integer\"\n        EventSource:\n          $ref: \"#/components/schemas/String\"\n        FunctionName:\n          $ref: \"#/components/schemas/FunctionName\"\n        Parameters:\n          $ref: \"#/components/schemas/Map\"\n        Role:\n          $ref: \"#/components/schemas/RoleArn\"\n        LastModified:\n          $ref: \"#/components/schemas/Timestamp\"\n        IsActive:\n          $ref: \"#/components/schemas/Boolean\"\n        Status:\n          $ref: \"#/components/schemas/String\"\n      description: Describes mapping between an Amazon Kinesis stream and a Lambda function.\n    String:\n      type: string\n    ServiceException:\n      type: object\n      properties:\n        Type:\n          $ref: \"#/components/schemas/String\"\n        Message:\n          $ref: \"#/components/schemas/String\"\n      description: The AWS Lambda service encountered an internal error.\n    InvalidParameterValueException:\n      type: object\n      properties:\n        Type:\n          $ref: \"#/components/schemas/String\"\n        message:\n          $ref: \"#/components/schemas/String\"\n      description: \"One of the parameters in the request is invalid. For example, if you\n        provided an IAM role for AWS Lambda to assume in the\n        \u003ccode\u003eUploadFunction\u003c/code\u003e or the\n        \u003ccode\u003eUpdateFunctionConfiguration\u003c/code\u003e API, that AWS Lambda is unable\n        to assume you will get this exception. \"\n    ResourceNotFoundException:\n      type: object\n      properties:\n        Type:\n          $ref: \"#/components/schemas/String\"\n        Message:\n          $ref: \"#/components/schemas/String\"\n      description: The function or the event source specified in the request does not exist.\n    GetFunctionResponse:\n      type: object\n      properties:\n        Configuration:\n          $ref: \"#/components/schemas/FunctionConfiguration\"\n        Code:\n          $ref: \"#/components/schemas/FunctionCodeLocation\"\n      description: This response contains the object for AWS Lambda function location (see\n        \u003ca\u003eAPI_FunctionCodeLocation\u003c/a\u003e\n    FunctionConfiguration:\n      type: object\n      properties:\n        FunctionName:\n          $ref: \"#/components/schemas/FunctionName\"\n        FunctionARN:\n          $ref: \"#/components/schemas/FunctionArn\"\n        ConfigurationId:\n          $ref: \"#/components/schemas/String\"\n        Runtime:\n          $ref: \"#/components/schemas/Runtime\"\n        Role:\n          $ref: \"#/components/schemas/RoleArn\"\n        Handler:\n          $ref: \"#/components/schemas/Handler\"\n        Mode:\n          $ref: \"#/components/schemas/Mode\"\n        CodeSize:\n          $ref: \"#/components/schemas/Long\"\n        Description:\n          $ref: \"#/components/schemas/Description\"\n        Timeout:\n          $ref: \"#/components/schemas/Timeout\"\n        MemorySize:\n          $ref: \"#/components/schemas/MemorySize\"\n        LastModified:\n          $ref: \"#/components/schemas/Timestamp\"\n      description: A complex type that describes function metadata.\n    InvokeAsyncResponse:\n      type: object\n      properties:\n        Status:\n          $ref: \"#/components/schemas/HttpStatus\"\n      description: Upon success, it returns empty response. Otherwise, throws an exception.\n    InvalidRequestContentException:\n      type: object\n      properties:\n        Type:\n          $ref: \"#/components/schemas/String\"\n        message:\n          $ref: \"#/components/schemas/String\"\n      description: The request body could not be parsed as JSON.\n    ListEventSourcesResponse:\n      type: object\n      properties:\n        NextMarker:\n          $ref: \"#/components/schemas/String\"\n        EventSources:\n          $ref: \"#/components/schemas/EventSourceList\"\n      description: Contains a list of event sources (see\n        \u003ca\u003eAPI_EventSourceConfiguration\u003c/a\u003e)\n    ListFunctionsResponse:\n      type: object\n      properties:\n        NextMarker:\n          $ref: \"#/components/schemas/String\"\n        Functions:\n          $ref: \"#/components/schemas/FunctionList\"\n      description: Contains a list of AWS Lambda function configurations (see\n        \u003ca\u003eAPI_FunctionConfiguration\u003c/a\u003e.\n    FunctionName:\n      type: string\n      pattern: \"[a-zA-Z0-9-_]+\"\n      minLength: 1\n      maxLength: 64\n    RoleArn:\n      type: string\n      pattern: arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+\n    Integer:\n      type: integer\n    Map:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/String\"\n    AddEventSourceRequest:\n      type: object\n      required:\n        - EventSource\n        - FunctionName\n        - Role\n      properties:\n        EventSource:\n          $ref: \"#/components/schemas/String\"\n        FunctionName:\n          $ref: \"#/components/schemas/FunctionName\"\n        Role:\n          $ref: \"#/components/schemas/RoleArn\"\n        BatchSize:\n          $ref: \"#/components/schemas/Integer\"\n        Parameters:\n          $ref: \"#/components/schemas/Map\"\n    Blob:\n      type: string\n    DeleteFunctionRequest:\n      type: object\n      properties: {}\n    Description:\n      type: string\n      minLength: 0\n      maxLength: 256\n    Timestamp:\n      type: string\n      format: date-time\n    Boolean:\n      type: boolean\n    EventSourceList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/EventSourceConfiguration\"\n    FunctionArn:\n      type: string\n      pattern: arn:aws:lambda:[a-z]{2}-[a-z]+-\\d{1}:\\d{12}:function:[a-zA-Z0-9-_]+(\\/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})?\n    FunctionCodeLocation:\n      type: object\n      properties:\n        RepositoryType:\n          $ref: \"#/components/schemas/String\"\n        Location:\n          $ref: \"#/components/schemas/String\"\n      description: The object for the Lambda function location.\n    Runtime:\n      type: string\n      enum:\n        - nodejs\n    Handler:\n      type: string\n      pattern: \"[a-zA-Z0-9./\\\\-_]+\"\n    Mode:\n      type: string\n      enum:\n        - event\n    Long:\n      type: integer\n    Timeout:\n      type: integer\n      minimum: 1\n      maximum: 60\n    MemorySize:\n      type: integer\n      minimum: 128\n      maximum: 1024\n    FunctionList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/FunctionConfiguration\"\n    GetEventSourceRequest:\n      type: object\n      properties: {}\n    GetFunctionConfigurationRequest:\n      type: object\n      properties: {}\n    GetFunctionRequest:\n      type: object\n      properties: {}\n    HttpStatus:\n      type: integer\n    InvokeAsyncRequest:\n      type: object\n      required:\n        - InvokeArgs\n      properties:\n        InvokeArgs:\n          $ref: \"#/components/schemas/Blob\"\n    MaxListItems:\n      type: integer\n      minimum: 1\n      maximum: 10000\n    ListEventSourcesRequest:\n      type: object\n      properties: {}\n    ListFunctionsRequest:\n      type: object\n      properties: {}\n    RemoveEventSourceRequest:\n      type: object\n      properties: {}\n    UpdateFunctionConfigurationRequest:\n      type: object\n      properties: {}\n    UploadFunctionRequest:\n      type: object\n      required:\n        - FunctionZip\n      properties:\n        FunctionZip:\n          $ref: \"#/components/schemas/Blob\"\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /2014-11-13/functions/{FunctionName}#Runtime\u0026Role\u0026Handler\u0026Mode: put: operation \"UploadFunction\": parse path \"/2014-11-13/functions/{FunctionName}#Runtime\u0026Role\u0026Handler\u0026Mode\": path MUST NOT contain a fragment"
}