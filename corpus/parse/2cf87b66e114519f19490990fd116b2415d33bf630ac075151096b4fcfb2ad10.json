{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/alphagov/di-ipv-core-back"
		},
		"file": {
			"name": "core-back-internal.yaml",
			"size": 0,
			"path": "openAPI/core-back-internal.yaml",
			"byteSize": 12179,
			"content": "openapi: 3.0.3\ninfo:\n  title: \"IPV Core Internal\"\n  description: \"The internal api presented by IPV Core Back for use by IPV Core Front\"\n  version: \"1.0.0\"\npaths:\n  /request-config:\n    get:\n      description: \"Returns details of all Credential Issuers (CRIs) configured for use with IPV Core\"\n      responses:\n        200:\n          description: \"A list of cri configurations\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items:\n                  type: object\n      x-amazon-apigateway-integration:\n        httpMethod: \"POST\"\n        uri:\n          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetCredentialIssuerConfig.Arn}:live/invocations\n        passthroughBehavior: \"when_no_match\"\n        type: \"aws_proxy\"\n  /debug-credential-data:\n    get:\n      description: \"Debug endpoint - only used by core-front debug page to get a list of current retrieved credentials for users journey\"\n      responses:\n        200:\n          description: \"Map of retrieved cri credentials\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n      x-amazon-apigateway-integration:\n        httpMethod: \"POST\"\n        uri:\n          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${BuildDebugCredentialDataFunction.Arn}:live/invocations\n        passthroughBehavior: \"when_no_match\"\n        type: \"aws_proxy\"\n  /session/initialise:\n    post:\n      description: \"Creates a new ipv core-back session\"\n      responses:\n        200:\n          description: \"The ipv sessionId\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n      x-amazon-apigateway-integration:\n        httpMethod: \"POST\"\n        uri:\n          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${InitialiseIpvSessionFunction.Arn}:live/invocations\n        passthroughBehavior: \"when_no_match\"\n        type: \"aws_proxy\"\n\n  /journey/cri/callback:\n    post:\n      description: |\n        Called when a user comes back to core on the frontend's callback endpoint, after visiting a CRI. Triggers a step\n        function that orchestrates lambdas for validating the oauth callback, retrieving the access token, and fetching\n        the credential.\n      responses:\n        200:\n          description: \"Returns a journey or error response\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/journeyType\"\n      x-amazon-apigateway-integration:\n        type: \"aws\"\n        credentials:\n          Fn::GetAtt: CriReturnStepFunctionApiGateWayIamRole.Arn\n        httpMethod: \"POST\"\n        uri:\n          Fn::Sub: arn:aws:apigateway:${AWS::Region}:states:action/StartSyncExecution\n        passthroughBehavior: \"when_no_match\"\n        requestTemplates:\n          application/json:\n            Fn::Sub: |\n              #set($inputRoot = $input.path('$'))\n              {\n                \"input\": \"{\\\"ipvSessionId\\\": \\\"$input.params('ipv-session-id')\\\", \\\"ipAddress\\\": \\\"$input.params('ip-address')\\\"#foreach($key in $inputRoot.keySet()), \\\"$key\\\": \\\"$inputRoot.get($key)\\\"#end}\",\n                \"stateMachineArn\": \"arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${CriReturnStepFunction.Name}\"\n              }\n          application/x-www-form-urlencoded:\n            Fn::Sub: |\n              #set($bodyParts = $util.urlDecode($input.path('$')).split('\u0026'))\n              {\n                \"input\": \"{\\\"ipvSessionId\\\": \\\"$input.params('ipv-session-id')\\\", \\\"ipAddress\\\": \\\"$input.params('ip-address')\\\"#foreach( $token in $bodyParts )#set( $keyVal = $token.split('=') ), \\\"$keyVal[0]\\\": \\\"$keyVal[1]\\\"#end}\",\n                \"stateMachineArn\": \"arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${CriReturnStepFunction.Name}\"\n              }\n        responses:\n          default:\n            statusCode: 200\n            responseTemplates:\n              application/json: |\n                #set ($bodyObj = $util.parseJson($input.body))\n\n                #if ($bodyObj.status == \"SUCCEEDED\")\n                  #set($lambdaOutputObj = $util.parseJson($bodyObj.output))\n                  #set($context.responseOverride.status = $lambdaOutputObj.statusCode)\n                  $bodyObj.output\n\n                #elseif ($bodyObj.status == \"FAILED\")\n                  #set($context.responseOverride.status = 500)\n                  {\n                    \"cause\": \"$bodyObj.cause\",\n                    \"error\": \"$bodyObj.error\"\n                  }\n                #else\n                  #set($context.responseOverride.status = 504)\n                  $bodyObj\n                #end\n\n  /journey/{journeyStep}:\n    post:\n      description: Called when the user selects a journey event. Triggers an express step function\n      responses:\n        200:\n          description: \"Returns either a redirect journey eventResponse or a page eventResponse \"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/journeyType\"\n      x-amazon-apigateway-integration:\n        type: \"aws\"\n        credentials:\n          Fn::GetAtt: JourneyEngineStepFunctionApiGateWayIamRole.Arn\n        httpMethod: \"POST\"\n        uri:\n          Fn::Sub: arn:aws:apigateway:${AWS::Region}:states:action/StartSyncExecution\n        passthroughBehavior: \"when_no_match\"\n        requestTemplates:\n          application/x-www-form-urlencoded:\n            Fn::Sub: |\n              {\n                \"input\": \"{\\\"ipvSessionId\\\": \\\"$input.params('ipv-session-id')\\\", \\\"ipAddress\\\": \\\"$input.params('ip-address')\\\", \\\"journey\\\": \\\"/journey/$input.params('journeyStep')\\\"}\",\n                \"stateMachineArn\": \"arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${JourneyEngineStepFunction.Name}\"\n              }\n        responses:\n          default:\n            statusCode: 200\n            responseTemplates:\n              application/json: |\n                #set ($bodyObj = $util.parseJson($input.body))\n\n                #if ($bodyObj.status == \"SUCCEEDED\")\n                  #set($lambdaOutput = $util.parseJson($bodyObj.output))\n                  #set($context.responseOverride.status = $lambdaOutput.statusCode)\n                  $bodyObj.output\n\n                #elseif ($bodyObj.status == \"FAILED\")\n                  #set($context.responseOverride.status = 500)\n                  {\n                    \"cause\": \"$bodyObj.cause\",\n                    \"error\": \"$bodyObj.error\"\n                  }\n                #else\n                  #set($context.responseOverride.status = 500)\n                  $bodyObj\n                #end\n\n  /journey/cri/build-oauth-request/{criId}:\n    post:\n      description: Called when the frontend begins the CRI journey.\n      responses:\n        200:\n          description: \"Returns the id, ipvClientId and authorizationUrl for a CRI.\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/journeyType\"\n      x-amazon-apigateway-integration:\n        httpMethod: \"POST\"\n        uri:\n          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${BuildCriOauthRequestFunction.Arn}:live/invocations\n        passthroughBehavior: \"when_no_match\"\n        type: \"aws_proxy\"\n\n  /journey/evaluate-gpg45-scores:\n    post:\n      description: \"Evaludate the gathered credentials against a desired GPG45 profile. Returns journey response or session end\"\n      responses:\n        200:\n          description: \"Returns a journeyResponse or session end\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n      x-amazon-apigateway-integration:\n        httpMethod: \"POST\"\n        uri:\n          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EvaluateGpg45ScoresFunction.Arn}:live/invocations\n        passthroughBehavior: \"when_no_match\"\n        type: \"aws_proxy\"\n\n  /journey/select-cri:\n    post:\n      description: \"Selects a CRI based on which CRIs the user has not visited. Returns journey response or journey fail\"\n      responses:\n        200:\n          description: \"Returns a journeyResponse or journeyFail\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/journeyType\"\n      x-amazon-apigateway-integration:\n        httpMethod: \"POST\"\n        uri:\n          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SelectCriFunction.Arn}:live/invocations\n        passthroughBehavior: \"when_no_match\"\n        type: \"aws_proxy\"\n\n  /journey/build-client-oauth-response:\n    post:\n      description: \"Called when the user has completed their user journey in IPV Core\"\n      responses:\n        200:\n          description: \"Authorization Code and details\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/journeyType\"\n      x-amazon-apigateway-integration:\n        httpMethod: \"POST\"\n        uri:\n          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${BuildClientOauthResponseFunction.Arn}:live/invocations\n        passthroughBehavior: \"when_no_match\"\n        type: \"aws_proxy\"\n  /journey/end-mitigation-journey/{mitigationId}:\n    post:\n      description: \"Called when the user has completed the last step of a mitigation journey\"\n      responses:\n        200:\n          description: \"Journey response\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/journeyType\"\n      x-amazon-apigateway-integration:\n        httpMethod: \"POST\"\n        uri:\n          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${EndMitigationJourneyFunction.Arn}:live/invocations\n        passthroughBehavior: \"when_no_match\"\n        type: \"aws_proxy\"\n\n  /journey/build-proven-user-identity-details:\n    get:\n      description: \"Called when core front needs to display information about a users proven identity\"\n      responses:\n        200:\n          description: \"User identity response\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n      x-amazon-apigateway-integration:\n        httpMethod: \"POST\"\n        uri:\n          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${BuildProvenUserIdentityDetailsFunction.Arn}:live/invocations\n        passthroughBehavior: \"when_no_match\"\n        type: \"aws_proxy\"\n\n  /journey/check-existing-identity:\n    post:\n      description: \"Check Existing Identity\"\n      responses:\n        200:\n          description: \"Check Existing Identity response\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/journeyType\"\n      x-amazon-apigateway-integration:\n        httpMethod: \"POST\"\n        uri:\n          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CheckExistingIdentityFunction.Arn}:live/invocations\n        passthroughBehavior: \"when_no_match\"\n        type: \"aws_proxy\"\n\ncomponents:\n  schemas:\n    journeyType:\n      type: object\n      properties:\n        page:\n          type: string\n          description: pageId of page to be displayed\n        journey:\n          type: string\n          description: journeyId of an journey to take\n        cri:\n          type: object\n          description: redirect to a cri (credential issuer)\n          required: [ \"id\", \"authorizeUrl\", \"request\" ]\n          properties:\n            id:\n              type: string\n            authorizeUrl:\n              type: string\n            request:\n              type: string\n        client:\n          type: object\n          description: redirect to the oauth client, ending the session.\n          required: [ \"callbackUrl\" ]\n          properties:\n            callbackUrl:\n              type: string\n      oneOf:\n        - required: [ \"page\" ]\n        - required: [ \"client\" ]\n        - required: [ \"cri\" ]\n        - required: [ \"journey\" ]\n",
			"canonicalURL": "/github.com/alphagov/di-ipv-core-back@39a02d25d563e79d2e95e12d82431f88de16e829/-/blob/openAPI/core-back-internal.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/alphagov/di-ipv-core-back/blob/39a02d25d563e79d2e95e12d82431f88de16e829/openAPI/core-back-internal.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/journey/cri/build-oauth-request/{criId}\": post: at openAPI/core-back-internal.yaml:167:7: parse path \"/journey/cri/build-oauth-request/{criId}\": path parameter not specified: \"criId\""
}