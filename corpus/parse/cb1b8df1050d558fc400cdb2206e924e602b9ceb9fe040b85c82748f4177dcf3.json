{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Swasth-Digital-Health-Foundation/hcx-platform"
		},
		"file": {
			"name": "openapi_hcx_notifications.yaml",
			"size": 0,
			"path": "api-specifications/openapi_hcx_notifications.yaml",
			"byteSize": 21858,
			"content": "openapi: 3.0.1\ninfo:\n  title: HCX Notification APIs\n  description: \u003e-\n    The Health Claims Exchange (HCX) is a digital infrastructure designed to\n    enable automated, data-driven management of health insurance claims in an\n    open ecosystem. These API specifications enable all actors to consume, subscribe or unsubscribe and send notifications in the ecosystem.\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\n  version: 0.7.0\nexternalDocs:\n  description: HCX Specifications\n  url: \u003e-\n    https://docs.swasth.app/hcx-specifications/\ntags:\n  - name: Notification APIs\n    description: \u003e-\n      APIs for notification subscription management and send and receive the callback requests.\n      \npaths:\n  /notification/list:\n    post:\n      tags:\n        - Notification APIs\n      description: \u003e-\n        This API is for the participants in the network to check the master list of notifications available to them.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/NotificationTopicListRequest'\n      \n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NotificationTopicListResponse'\n        '400':\n          description: Request Validation failed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardErrorResponse'\n        '404':\n          description: Requested resource was not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardErrorResponse'\n        '500':\n          description: Downstream systems down/unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardErrorResponse'\n      security:\n      - bearer_auth: []\n  /notification/subscribe:\n    post:\n      tags:\n        - Notification APIs\n      description: \u003e-\n        This API is for the participants in the network to check the master list of notifications available and subscribe to them.\n\n\n        The participant should send the below details in the request body while making a call for notification subscription.\n          1. The protocol headers defined and used by all the other APIs to understand the sender, recipient, status etc,.\n          2. The notification topic_code (as x-hcx-notification_subscription.topic_code) to understand the notification to which the participant want to subscribe.\n        \n        The response to this API could be one of the following:\n          1. A successful accepted (202) response from the HCX gateway if the strucuture of the request is valid and the validation of open attributes (protocol headers) is successful. Upon successful validation, HCX gateway forwards the same request to the intended recipient asynchronously.\n          2. A  successful OK (200) response from the HCX gateway if the strucuture of the request is valid and the validation of open attributes (protocol headers) is successful and the recipient is HCX gateway. There is no callback expected in this case.\n          3. An error response if any of the validations fail.\n        \n        If the request is validated and accepted by HCX gateway, based on recipient it will be processed. If it recipient is not HCX gateway, the request will be forwarded to recipient and the participant should expect a response via callback API from recipient.\n\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - topic_code\n                - sender_list\n              oneOf:\n                - $ref: '#/components/schemas/NotificationSubscription'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardSuccessResponse'\n        '400':\n          description: Request Validation failed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardErrorResponse'\n        '404':\n          description: Requested resource was not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardErrorResponse'\n        '500':\n          description: Downstream systems down/unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardErrorResponse'\n      security:\n      - bearer_auth: []\n  /notification/unsubscribe:\n    post:\n      tags:\n        - Notification APIs\n      description: \u003e-\n        This API is for the participants in the network to check the subscription list and unsubscribe to them.\n        \n        The participant should send the below details in the request body while making a call for notification unsubscription.\n          1. The protocol headers defined and used by all the other APIs to understand the sender, recipient, status etc,.\n          2. The notification topic_code (as x-hcx-notification_subscription.topic_code) to understand the notification to which the participant want to unsubscribe.\n        \n        The response to this API could be one of the following:\n          1. A successful accepted (202) response from the HCX gateway if the strucuture of the request is valid and the validation of open attributes (protocol headers) is successful. Upon successful validation, HCX gateway forwards the same request to the intended recipient asynchronously.\n          2. A  successful OK (200) response from the HCX gateway if the strucuture of the request is valid and the validation of open attributes (protocol headers) is successful and the recipient is HCX gateway. There is no callback API call expected in this case.\n          3. An error response if any of the validations fail.\n        \n        If the request is validated and accepted by HCX gateway, based on recipient it will be processed. If it recipient is not HCX gateway, the request will be forwarded to recipient and the participant should expect a response via callback API from recipient.\n      \n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - topic_code\n                - sender_list\n              oneOf:\n                - $ref: '#/components/schemas/NotificationSubscription'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardSuccessResponse'\n        '400':\n          description: Request Validation failed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardErrorResponse'\n        '404':\n          description: Requested resource was not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardErrorResponse'\n        '500':\n          description: Downstream systems down/unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StandardErrorResponse'\n      security:\n      - bearer_auth: []\n  /notification/notify:\n    post:\n      tags:\n        - Notification APIs\n      description: \u003e-\n        This API is for the participants to explicitly send the notification to recipients via HCX gateway.\n        \n        The participant should send the below details in the request body while making a call to send notification.\n          \n        The notification protected headers defined and used by all the other APIs to understand the sender, recipient_type, recipients etc,.\n          \n        _**description** - work in progress._\n          \n        The response to this API could be one of the following:\n          1. A successful ok (200) response from the HCX gateway if the strucuture of the request is valid and the validation of open attributes (protocol headers) is successful. Upon successful validation, HCX gateway forwards the same request to the intended recipient asynchronously.\n          3. An error response if any of the validations fail.\n          \n        The HCX gateway will send the notification to all the recipients of the notification if the x-hcx-recipient_id is HCX gateway identifier.\n      \n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/NotificationRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: 'https://raw.githubusercontent.com/hcx-project/hcx-specs/v0.7/API%20Definitions/openapi_hcx.yaml#/components/schemas/SuccessResponse'\n        '400':\n          description: Request Validation failed\n          content:\n            application/json:\n              schema:\n                $ref: 'https://raw.githubusercontent.com/hcx-project/hcx-specs/v0.7/API%20Definitions/openapi_hcx.yaml#/components/schemas/ErrorResponse'\n        '404':\n          description: Requested resource was not found\n          content:\n            application/json:\n              schema:\n                $ref: 'https://raw.githubusercontent.com/hcx-project/hcx-specs/v0.7/API%20Definitions/openapi_hcx.yaml#/components/schemas/ErrorResponse'\n        '500':\n          description: Downstream systems down/unhandled exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: 'https://raw.githubusercontent.com/hcx-project/hcx-specs/v0.7/API%20Definitions/openapi_hcx.yaml#/components/schemas/ErrorResponse'\n      security:\n      - bearer_auth: []\n\ncomponents:\n  schemas:\n    NotificationJWSPayload:\n      required:\n        - payload\n      type: object\n      format: byte\n      description: This object is used as payload in the HCX protocol APIs that require the request body to sent in JWS format (as defined in [RFC-7515](https://datatracker.ietf.org/doc/html/rfc7515)). \n      properties:\n        payload:\n          type: object\n          format: string\n          description: The paylod should be a JWS token containing the following elements.\n          \n            1. JWS Protected headers (**protected**) - A set of attributes that provide transport, security, message integrity and summary information about the message being exchanged.\n        \n            2. JWS Payload (**payload**) - Payload containing the relevant domain entity (eObject) as prescribed for the use case by the domain specifications. This needs to be encrypted so that HCX cannot read this.\n        \n            3. JWS Signature (**signature**) - Digital signature on the protected header and the payload of the message to ensure its integrity.\n            \n            The final payload should be serialzed using JWS compact serialization as defined in the RFC-7515 - \n      \n            **protected || '.' || payload || '.' || signature**\n            \n            \n            Detailed steps on how to construct the JWS token are provided in this [section](https://docs.swasth.app/hcx-specifications/hcx-technical-specifications/open-protocol/data-security-and-privacy/message-security-and-integrity#message-encryption) of the HCX specifications.\n          example: \"eyJlbmMiOiJBMjU2R0NNIiwKImFsZyI6IlJTQS1PQUVQIiwKIngtaGN4LXNlbmRlcl9jb2RlIjoiMS00ZGMzZTA4OC1hMzEzLTQ0YWItYWZhMS0wMjIyOTU5Y2I3NWIiLAoieC1oY3gtcmVjaXBpZW50X2NvZGUiOiIxLTkzZjkwOGJhLWI1NzktNDUzZS04YjJhLTU2MDIyYWZhZDI3NSIsCiJ4LWhjeC1yZXF1ZXN0X2lkIjoiMjZiMTA2MGMtMWU4My00NjAwLTk2MTItZWEzMWUwY2E1MDkxIiwKIngtaGN4LWNvcnJlbGF0aW9uX2lkIjoiNWU5MzRmOTAtMTExZC00ZjBiLWIwMTYtYzIyZDgyMDY3NGUxIiwKIngtaGN4LXRpbWVzdGFtcCI6IjIwMjEtMTAtMjdUMjA6MzU6NTIuNjM2KzA1MzAiLAoieC1oY3gtc3RhdHVzIjoicmVxdWVzdC5pbml0aWF0ZSIsCiJ4LWhjeC13b3JrZmxvd19pZCI6IjVlOTM0ZjkwLTExMWQtNGYwYi1iMDE2LWMyMmQ4MjA2NzRlMiIsCiJ4LWhjeC1kZWJ1Z19mbGFnIjoiSW5mbyIsCiJ4LWhjeC1lcnJvcl9kZXRhaWxzIjp7ImVycm9yLmNvZGUiOiAiYmFkLmlucHV0IiwgImVycm9yLm1lc3NhZ2UiOiAiUHJvdmlkZXIgY29kZSBub3QgZm91bmQiLCAidHJhY2UiOiAiIn0sCiJ4LWhjeC1kZWJ1Z19kZXRhaWxzIjp7ImVycm9yLmNvZGUiOiAiYmFkLmlucHV0IiwgImVycm9yLm1lc3NhZ2UiOiAiUHJvdmlkZXIgY29kZSBub3QgZm91bmQiLCJ0cmFjZSI6IiJ9LAoiandzX2hlYWRlciI6eyJ0eXAiOiJKV1QiLCAiYWxnIjoiUlMyNTYifSwKImp3ZV9oZWFkZXIiOnsiYWxnIjoiUlNBLU9BRVAiLCJlbmMiOiJBMjU2R0NNIn0KfQ==.6KB707dM9YTIgHtLvtgWQ8mKwboJW3of9locizkDTHzBC2IlrT1oOQ.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.KDlTtXchhZTGufMYmOYGS4HffxPSUrfmqCHXaI9wOGY.Mz-VPPyU4RlcuYv1IwIvzw\"\n          properties:\n            protected:\n              type: object\n              format: string\n              description: \u003e-\n                Protected headers contain information that helps HCX gateway to identify senders, receivers of the message, perform integrity checks, audits and routing functionality. Header values are posted in clear and must never contain any Personally Identifiable Information (PII) about the patient or any person. HCX protocol uses JWS protected headers for such information to ensure these are not tampered with by the intermediate gateways. Protected Headers for HCX will be the union of the following three header categories.\n          \n                JOSE Headers - JSON Web Signature header as per [RFC7515](https://datatracker.ietf.org/doc/html/rfc7515#page-9). For HCX V0.8, this is proposed to be fixed to {\"alg\":\"RS256\"}.\n                  \n                Notification Protected Headers - The JWS protected headers as per [RFC7515](https://datatracker.ietf.org/doc/html/rfc7515#page-9). The list of header allowed for the notification request to define the recipients and the details about the notification.\n                  \n                Overall, the protected headers should be created as - \n                  \n                JWS Protected Header = BASE64URL(UTF8(JOSE headers) + UTF8( Notification headers))\n              allOf:\n                - required:\n                  - x-hcx-notification_headers\n                - $ref: '#/components/schemas/JOSEHeader'\n                - properties:\n                    \n                    x-hcx-notification_headers:\n                      type: object\n                      description: TODO\n                      allOf:\n                        - $ref: '#/components/schemas/NotificationHeaders'\n              example: \"eyJlbmMiOiJBMTI4Q0JDLUhTMjU2In0\"\n            payload:\n              type: string\n              description: The payload contains the notification details \n              example: \"\"\n            signature:\n              type: string\n              description: TODO\n              example: \"\"\n              \n    NotificationHeaders:\n      required:\n        - sender_code\n        - timestamp\n      type: object\n      description: JSON object\n      allOf:\n        - properties:\n            sender_code:\n              type: string\n              description: Registry code of the sender (e.g. provider or payer)\n              example: \"PROVIDER01@HCX01\"\n            timestamp:\n              type: string\n              description: Unix timestamp when the request is sent.\n              example: \"1629057611000\"\n            recipient_type:\n              type: string\n              enum: [\"participant_code\", \"participant_role\", \"subscription\"]\n              description: The notification will be sent to a group of participants. To easily define the list we use role or codes or subscriptions. This property will help to understand the type of identifiers given in `recipients` property.\n            recipients:\n              type: array\n              items:\n                type: string\n                description: \u003e- \n                  The recipients will be identified based one of the below using `recipient_type`. \n                  \n                  `code`: Participant code of the recipient(s) of the notification. Could be one or more based on the need.\n                  `role`: Participant role of the recipient(s) of the notification.\n                  `subscription`: list of subscription_ids (at least one). it is mandatory for use_case category notifications.\n            correlation_id:\n              type: string\n              description: Unique id for all notifications (trigger \u0026 dispatches) that are involved in processing notification trigger and dispatching to the recipients.\n            expiry:\n              type: string\n              description: The time from when this notification will be invalid.\n              example: \"54539485304\"\n    NotificationRequest:\n      required:\n        - payload\n      type: object\n      description: JSON object\n      allOf:\n        - $ref: '#/components/schemas/NotificationJWSPayload'\n              \n    NotificationTopicListRequest:\n      type: object\n      description: JSON object explaining about the request filters, limits of the notification master list.\n      properties:\n        filters:\n          type: object\n          description: Filters to apply and get the required notification master list\n        limit:\n          type: number\n          description: Max number of notification master list to return in the response.\n          example: 10\n        offset:\n          type: number\n    \n    NotificationTopicListResponse:\n      type: object\n      description: The notification master list response object.\n      properties:\n        timestamp:\n          type: string\n          description: Unix timestamp when the response is sent.\n          example: \"1629057611000\"\n        notifications:\n          type: array\n          items:\n            $ref: '#/components/schemas/NotificationTopic'\n        count:\n          type: number\n          description: Total number of master list notifications defined at HCX gateway with the given request filter.\n          example: 1\n          \n    StandardErrorResponse:\n      required:\n        - error\n        - timestamp\n      type: object\n      properties:\n        timestamp:\n          type: string\n          description: Unix timestamp when the response is sent.\n          example: \"1629057611000\"\n        error:\n          $ref: 'https://raw.githubusercontent.com/hcx-project/hcx-specs/v0.7/API%20Definitions/openapi_hcx.yaml#/components/schemas/Error'\n    StandardSuccessResponse:\n      required:\n        - timestamp\n      type: object\n      properties:\n        timestamp:\n          type: string\n          description: Unix timestamp when the response is sent.\n          example: \"1629057611000\"\n        subscription_id:\n          type: string\n          description: Unique identifier of the notification subscription.\n          example: \"SUBSCRIPTION01@HCX01\"\n        status:\n          type: number\n          example: 1\n    \n    JOSEHeader:\n      required:\n        - alg\n      type: object\n      description: JSON Web Signature header as per RFC7515. For the current version, this is proposed to be fixed to {\"alg\":\"RS256\"}\n      properties:\n        alg:\n          type: string\n          enum: [\"RS256\"]\n      additionalProperties: false\n    \n    NotificationTopic:\n      type: object\n      properties:\n        title:\n          type: string\n          description: The title of the notification\n          example: \"Payer Downtime\"\n        description:\n          type: string\n          description: The details about the notification.\n          example: \"A notification about the Payer System Downtime. This information will be useful for all participants.\"\n        sender:\n          type: array\n          description: List of roles who can send this notification.\n          items:\n            type: string\n          example: [\"payor\"]\n        recipient:\n          type: array\n          description: List of roles who can subscribe to this notification.\n          items:\n            type: string\n          example: [\"provider\"]\n        topic_code:\n          type: string\n          description: Unique code for the notification topic\n          example: \"NOTIFICATION@HCX01\"\n        category:\n          type: string\n          description: Category of the notification as detailed above - network (broadcast \u0026 target), participant, use_case\n          example: network\n        priority:\n          type: number\n          description: Default priority assigned to the topic. 0 means highest, positive integer would carry the respective relative priority. Negative would be that the topic is disabled. Relative order of category for different message categories is recommended to be use_case \u003e participant \u003e network\n          \n    NotificationSubscription:\n      type: object\n      properties:\n        topic_code:\n          type: string\n          description: Unique notification identifier from HCX gateway using the master list.\n          example: \"NOTIFICATION@HCX01\"\n        sender_list:\n          type: array\n          description: The list of sender to which the subscription request will be sent to approve or reject.\n          items:\n            type: string\n            example: \"PAYOR01@HCX01\"\n\n    NotificationData:\n      type: object\n      properties:\n        topic_code:\n          type: string\n          description: Unique notification identifier from HCX gateway using the master list.\n          example: \"NOTIFICATION@HCX01\"\n        notification_data:\n          type: object\n          description: JSON object containing the details of the notification to send.\n          example: {\"message\": \"Payor system down for sometime\",\"duration\": 2hrs,\"startTime\": 9PM, \"date\": 26th April 2022 IST}\n\n\n  securitySchemes:\n    bearer_auth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT",
			"canonicalURL": "/github.com/Swasth-Digital-Health-Foundation/hcx-platform@5cff36308856fe4bea6f01432c95d5a2166df491/-/blob/api-specifications/openapi_hcx_notifications.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Swasth-Digital-Health-Foundation/hcx-platform/blob/5cff36308856fe4bea6f01432c95d5a2166df491/api-specifications/openapi_hcx_notifications.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"StandardErrorResponse\": resolve \"#/components/schemas/StandardErrorResponse\": property \"error\": $ref: resolve \"https://raw.githubusercontent.com/hcx-project/hcx-specs/v0.7/API%20Definitions/openapi_hcx.yaml#/components/schemas/Error\": property \"code\": at https://raw.githubusercontent.com/hcx-project/hcx-specs/v0.7/API%20Definitions/openapi_hcx.yaml:990:17: duplicate enum value: \"\\\"ERR_INVALID_PAYLOAD\\\"\""
}