{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ITISFoundation/osparc-simcore"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "services/storage/src/simcore_service_storage/api/v0/openapi.yaml",
			"byteSize": 42956,
			"content": "openapi: 3.0.0\ninfo:\n  description: API definition for simcore-service-storage service\n  version: 0.2.1\n  title: simcore-service-storage API\n  contact:\n    name: IT'IS Foundation\n    email: support@simcore.io\n  license:\n    name: MIT\n    url: 'https://github.com/ITISFoundation/osparc-simcore/blob/master/LICENSE'\nservers:\n  - description: API server\n    url: /v0\n  - description: Development server\n    url: 'http://{host}:{port}/{basePath}'\n    variables:\n      host:\n        default: localhost\n      port:\n        default: '8080'\n      basePath:\n        enum:\n          - v0\n        default: v0\npaths:\n  /:\n    get:\n      summary: Service health-check endpoint\n      description: Some general information on the API and state of the service behind\n      operationId: health_check\n      responses:\n        '200':\n          description: Service information\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HealthCheckEnveloped'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  /status:\n    get:\n      summary: checks status of self and connected services\n      operationId: get_status\n      responses:\n        '200':\n          description: returns app status check\n  '/check/{action}':\n    post:\n      summary: Test checkpoint to ask server to fail or echo back the transmitted data\n      parameters:\n        - in: path\n          required: true\n          name: action\n          schema:\n            type: string\n            default: echo\n            enum:\n              - fail\n              - echo\n        - in: query\n          name: data\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Fake'\n      responses:\n        '200':\n          description: Echoes response based on action\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FakeEnveloped'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  /locations:\n    get:\n      summary: Lists available storage locations\n      operationId: get_storage_locations\n      parameters:\n        - name: user_id\n          in: query\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: List of available storage locations\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileLocationArrayEnveloped'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/locations/{location_id}:sync':\n    post:\n      summary: Manually triggers the synchronisation of the file meta data table in the database\n      operationId: synchronise_meta_data_table\n      parameters:\n        - name: location_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: dry_run\n          in: query\n          required: false\n          schema:\n            type: boolean\n            default: true\n        - name: fire_and_forget\n          in: query\n          required: false\n          schema:\n            type: boolean\n            default: false\n      responses:\n        '200':\n          description: 'An object containing added, changed and removed paths'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TableSynchronisationEnveloped'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/locations/{location_id}/datasets':\n    get:\n      summary: Lists all dataset's metadata\n      operationId: get_datasets_metadata\n      parameters:\n        - name: location_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: user_id\n          in: query\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: list of dataset meta-datas\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DatasetMetaDataArrayEnveloped'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/locations/{location_id}/files/metadata':\n    get:\n      summary: Lists all file's metadata\n      operationId: get_files_metadata\n      parameters:\n        - name: location_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: user_id\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: uuid_filter\n          in: query\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: list of file meta-datas\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileMetaDataArrayEnveloped'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/locations/{location_id}/datasets/{dataset_id}/metadata':\n    get:\n      summary: Get dataset metadata\n      operationId: get_files_metadata_dataset\n      parameters:\n        - name: location_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: dataset_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: user_id\n          in: query\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: list of file meta-datas\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileMetaDataArrayEnveloped'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/locations/{location_id}/files/{file_id}/metadata':\n    get:\n      summary: Get file metadata\n      operationId: get_file_metadata\n      parameters:\n        - name: file_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: location_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: user_id\n          in: query\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns file metadata\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileMetaEnvelope'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n    patch:\n      summary: Update file metadata\n      operationId: update_file_meta_data\n      parameters:\n        - name: file_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: location_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: user_id\n          in: query\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns file metadata\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileMetaEnvelope'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/locations/{location_id}/files/{file_id}':\n    get:\n      summary: Gets download link for file at location\n      operationId: download_file\n      parameters:\n        - name: file_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: location_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: user_id\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: link_type\n          in: query\n          required: false\n          schema:\n            type: string\n            default: presigned\n            enum:\n              - presigned\n              - s3\n      responses:\n        '200':\n          description: Returns presigned link\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PresignedLinkEnveloped'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n    put:\n      summary: Returns upload object\n      operationId: upload_file\n      parameters:\n        - name: file_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: location_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: user_id\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: link_type\n          in: query\n          required: false\n          schema:\n            type: string\n            default: presigned\n            enum:\n              - presigned\n              - s3\n      responses:\n        '200':\n          description: Returns presigned link\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PresignedLinkEnveloped'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n    delete:\n      summary: Deletes file\n      operationId: delete_file\n      parameters:\n        - name: file_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: location_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: user_id\n          in: query\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: everything is OK\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/simcore-s3:access':\n    post:\n      summary: Returns the temporary access credentials for the user storage space\n      operationId: get_or_create_temporary_s3_access\n      parameters:\n        - name: user_id\n          in: query\n          required: true\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: the S3 access credentials\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/S3AccessCredentialsEnveloped'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/simcore-s3/files/metadata:search':\n    post:\n      summary: Returns metadata for all files matching a pattern\n      operationId: search_files_starting_with\n      parameters:\n        - name: user_id\n          in: query\n          required: true\n          schema:\n            type: integer\n        - name: startswith\n          description: matches starting string of the file_uuid\n          in: query\n          schema:\n            type: string\n            default: ''\n      responses:\n        '200':\n          description: list of matching files found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileMetaDataArrayEnveloped'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  /simcore-s3/folders:\n    post:\n      summary: Deep copies of all data from source to destination project in s3\n      operationId: copy_folders_from_project\n      parameters:\n        - name: user_id\n          in: query\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                source:\n                  $ref: '#/components/schemas/Project'\n                destination:\n                  $ref: '#/components/schemas/Project'\n                nodes_map:\n                  type: object\n                  description: maps source and destination node uuids\n                  additionalProperties:\n                    type: string\n      responses:\n        '201':\n          description: Data from destination project copied and returns project\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/simcore-s3/folders/{folder_id}':\n    delete:\n      summary: Deletes all objects within a node_id or within a project_id if node_id is omitted\n      operationId: delete_folders_of_project\n      parameters:\n        - name: folder_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: node_id\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: user_id\n          in: query\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: folder has been successfully deleted\n  '/files/{file_id}:soft-copy':\n    post:\n      summary: Copy as soft link\n      operationId: copy_as_soft_link\n      parameters:\n        - name: file_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: user_id\n          in: query\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - link_id\n              properties:\n                link_id:\n                  type: string\n      responses:\n        '200':\n          description: Returns link metadata\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileMetaEnvelope'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\ncomponents:\n  schemas:\n    HealthCheckEnveloped:\n      type: object\n      required:\n        - data\n        - error\n      properties:\n        data:\n          $ref: '#/components/schemas/HealthCheck'\n        error:\n          nullable: true\n          default: null\n    HealthCheck:\n      type: object\n      properties:\n        name:\n          type: string\n        status:\n          type: string\n        api_version:\n          type: string\n        version:\n          type: string\n      example:\n        name: simcore-director-service\n        status: SERVICE_RUNNING\n        api_version: 0.1.0-dev+NJuzzD9S\n        version: 0.1.0-dev+N127Mfv9H\n    ErrorEnveloped:\n      type: object\n      required:\n        - data\n        - error\n      properties:\n        data:\n          nullable: true\n          default: null\n        error:\n          $ref: '#/components/schemas/Error'\n    Error:\n      type: object\n      properties:\n        logs:\n          description: log messages\n          type: array\n          items:\n            $ref: '#/components/schemas/LogMessage'\n        errors:\n          description: errors metadata\n          type: array\n          items:\n            $ref: '#/components/schemas/ErrorItem'\n        status:\n          description: HTTP error code\n          type: integer\n      example:\n        BadRequestError:\n          logs:\n            - message: Requested information is incomplete or malformed\n              level: ERROR\n            - message: Invalid email and password\n              level: ERROR\n              logger: USER\n          errors:\n            - code: InvalidEmail\n              message: Email is malformed\n              field: email\n            - code: UnsavePassword\n              message: Password is not secure\n              field: pasword\n          status: 400\n    ErrorItem:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: string\n          description: Typically the name of the exception that produced it otherwise some known error code\n        message:\n          type: string\n          description: Error message specific to this item\n        resource:\n          type: string\n          description: API resource affected by this error\n        field:\n          type: string\n          description: Specific field within the resource\n    LogMessageEnveloped:\n      type: object\n      required:\n        - data\n        - error\n      properties:\n        data:\n          $ref: '#/components/schemas/LogMessage'\n        error:\n          nullable: true\n          default: null\n    LogMessage:\n      type: object\n      properties:\n        level:\n          description: log level\n          type: string\n          default: INFO\n          enum:\n            - DEBUG\n            - WARNING\n            - INFO\n            - ERROR\n        message:\n          description: 'log message. If logger is USER, then it MUST be human readable'\n          type: string\n        logger:\n          description: name of the logger receiving this message\n          type: string\n      required:\n        - message\n      example:\n        message: 'Hi there, Mr user'\n        level: INFO\n        logger: user-logger\n    FakeEnveloped:\n      type: object\n      required:\n        - data\n        - error\n      properties:\n        data:\n          $ref: '#/components/schemas/Fake'\n        error:\n          nullable: true\n          default: null\n    Fake:\n      type: object\n      required:\n        - path_value\n        - query_value\n        - body_value\n      properties:\n        path_value:\n          type: string\n        query_value:\n          type: string\n        body_value:\n          type: object\n          additionalProperties: true\n      example:\n        path_value: foo\n        query_value: bar\n        body_value:\n          key1: value1\n          key2: value2\n    TableSynchronisationEnveloped:\n      type: object\n      required:\n        - data\n        - error\n      properties:\n        data:\n          $ref: '#/components/schemas/TableSynchronisation'\n        error:\n          nullable: true\n          default: null\n    TableSynchronisation:\n      type: object\n      required:\n        - removed\n      properties:\n        dry_run:\n          type: boolean\n        fire_and_forget:\n          type: boolean\n        removed:\n          type: array\n          items:\n            type: string\n    FileLocationArrayEnveloped:\n      type: object\n      required:\n        - data\n        - error\n      properties:\n        data:\n          $ref: '#/components/schemas/FileLocationArray'\n        error:\n          nullable: true\n          default: null\n    FileLocationArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/FileLocation'\n    FileLocationEnveloped:\n      type: object\n      required:\n        - data\n        - error\n      properties:\n        data:\n          $ref: '#/components/schemas/FileLocation'\n        error:\n          nullable: true\n          default: null\n    FileLocation:\n      type: object\n      properties:\n        name:\n          type: string\n        id:\n          type: integer\n      example:\n        filename: simcore.s3\n        id: 0\n    DatasetMetaDataArrayEnveloped:\n      type: object\n      required:\n        - data\n        - error\n      properties:\n        data:\n          $ref: '#/components/schemas/DatasetMetaDataArray'\n        error:\n          nullable: true\n          default: null\n    DatasetMetaEnvelope:\n      type: object\n      required:\n        - data\n        - error\n      properties:\n        data:\n          $ref: '#/components/schemas/DatasetMetaData'\n        error:\n          nullable: true\n          default: null\n    DatasetMetaData:\n      type: object\n      properties:\n        dataset_id:\n          type: string\n        display_name:\n          type: string\n      example:\n        dataset_uuid: 'N:id-aaaa'\n        display_name: simcore-testing\n    DatasetMetaDataArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/DatasetMetaData'\n    FileMetaEnvelope:\n      type: object\n      required:\n        - data\n        - error\n      properties:\n        data:\n          $ref: '#/components/schemas/FileMetaData'\n        error:\n          nullable: true\n          default: null\n    FileMetaData:\n      type: object\n      properties:\n        file_uuid:\n          type: string\n        location_id:\n          type: string\n        location:\n          type: string\n        bucket_name:\n          type: string\n        object_name:\n          type: string\n        project_id:\n          type: string\n        project_name:\n          type: string\n        node_id:\n          type: string\n        node_name:\n          type: string\n        file_name:\n          type: string\n        user_id:\n          type: string\n        user_name:\n          type: string\n        file_id:\n          type: string\n        raw_file_path:\n          type: string\n        display_file_path:\n          type: string\n        created_at:\n          type: string\n        last_modified:\n          type: string\n        file_size:\n          type: integer\n        parent_id:\n          type: string\n        entity_tag:\n          type: string\n    FileMetaDataArrayEnveloped:\n      type: object\n      required:\n        - data\n        - error\n      properties:\n        data:\n          $ref: '#/components/schemas/FileMetaDataArray'\n        error:\n          nullable: true\n          default: null\n    FileMetaDataArray:\n      type: array\n      items:\n        $ref: '#/components/schemas/FileMetaData'\n    PresignedLinkEnveloped:\n      type: object\n      required:\n        - data\n        - error\n      properties:\n        data:\n          $ref: '#/components/schemas/PresignedLink'\n        error:\n          nullable: true\n          default: null\n    PresignedLink:\n      type: object\n      required:\n        - link\n      properties:\n        link:\n          type: string\n      example:\n        link: example_link\n    S3AccessCredentialsEnveloped:\n      type: object\n      required:\n        - data\n        - error\n      properties:\n        data:\n          $ref: '#/components/schemas/S3AccessCredentials'\n        error:\n          nullable: true\n          default: null\n    S3AccessCredentials:\n      type: object\n      required:\n        - access\n        - secret\n        - token\n        - endpoint\n      properties:\n        access:\n          type: string\n        secret:\n          type: string\n        token:\n          type: string\n        endpoint:\n          type: string\n    Project:\n      title: simcore project\n      description: Description of a simcore project\n      type: object\n      additionalProperties: false\n      required:\n        - uuid\n        - name\n        - description\n        - prjOwner\n        - accessRights\n        - creationDate\n        - lastChangeDate\n        - thumbnail\n        - workbench\n      properties:\n        uuid:\n          type: string\n          format: uuid\n          description: project unique identifier\n          example: 07640335-a91f-468c-ab69-a374fa82078d\n        name:\n          type: string\n          description: project name\n          example: Temporal Distortion Simulator\n        description:\n          type: string\n          description: longer one-line description about the project\n          example: Dabbling in temporal transitions ...\n        prjOwner:\n          type: string\n          format: email\n          description: user email\n        accessRights:\n          type: object\n          description: object containing the GroupID as key and read/write/execution permissions as value\n          x-patternProperties:\n            ^\\S+$:\n              type: object\n              description: the group id\n              additionalProperties: false\n              required:\n                - read\n                - write\n                - delete\n              properties:\n                read:\n                  type: boolean\n                  description: gives read access\n                write:\n                  type: boolean\n                  description: gives write access\n                delete:\n                  type: boolean\n                  description: gives deletion rights\n          additionalProperties: true\n        creationDate:\n          type: string\n          description: project creation date\n          pattern: '\\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\\d)T(2[0-3]|1\\d|0?[0-9])(:(\\d|[0-5]\\d)){2}(\\.\\d{3})?Z'\n          example: '2018-07-01T11:13:43Z'\n        lastChangeDate:\n          type: string\n          description: last save date\n          pattern: '\\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\\d)T(2[0-3]|1\\d|0?[0-9])(:(\\d|[0-5]\\d)){2}(\\.\\d{3})?Z'\n          example: '2018-07-01T11:13:43Z'\n        thumbnail:\n          type: string\n          minLength: 0\n          maxLength: 2083\n          format: uri\n          description: url of the latest screenshot of the project\n          example: 'https://placeimg.com/171/96/tech/grayscale/?0.jpg'\n        workbench:\n          type: object\n          x-patternProperties:\n            '^[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?4[0-9a-fA-F]{3}-?[89abAB][0-9a-fA-F]{3}-?[0-9a-fA-F]{12}$':\n              type: object\n              additionalProperties: false\n              required:\n                - key\n                - version\n                - label\n              properties:\n                key:\n                  type: string\n                  description: distinctive name for the node based on the docker registry path\n                  pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\\w/-]+)+$'\n                  example:\n                    - simcore/services/comp/sleeper\n                    - simcore/services/dynamic/3dviewer\n                    - simcore/services/frontend/file-picker\n                version:\n                  type: string\n                  description: semantic version number of the node\n                  pattern: '^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){2}(-(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*)(\\.(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*))*)?(\\+[-\\da-zA-Z]+(\\.[-\\da-zA-Z-]+)*)?$'\n                  example:\n                    - 1.0.0\n                    - 0.0.1\n                label:\n                  type: string\n                  description: The short name of the node\n                  example:\n                    - JupyterLab\n                progress:\n                  type: number\n                  maximum: 100\n                  minimum: 0\n                  description: the node progress value\n                thumbnail:\n                  minLength: 0\n                  maxLength: 2083\n                  format: uri\n                  type: string\n                  description: url of the latest screenshot of the node\n                  example:\n                    - 'https://placeimg.com/171/96/tech/grayscale/?0.jpg'\n                runHash:\n                  description: the hex digest of the resolved inputs +outputs hash at the time when the last outputs were generated\n                  type:\n                    - string\n                    - 'null'\n                  example:\n                    - a4337bc45a8fc544c03f52dc550cd6e1e87021bc896588bd79e901e2\n                inputs:\n                  type: object\n                  description: values of input properties\n                  patternProperties:\n                    '^[-_a-zA-Z0-9]+$':\n                      oneOf:\n                        - type:\n                            - integer\n                            - boolean\n                            - string\n                            - number\n                            - 'null'\n                        - type: object\n                          additionalProperties: false\n                          required:\n                            - nodeUuid\n                            - output\n                          properties:\n                            nodeUuid:\n                              type: string\n                              format: uuid\n                            output:\n                              type: string\n                              pattern: '^[-_a-zA-Z0-9]+$'\n                        - type: object\n                          additionalProperties: false\n                          required:\n                            - store\n                            - path\n                          properties:\n                            store:\n                              type:\n                                - string\n                                - integer\n                            dataset:\n                              type: string\n                            path:\n                              type: string\n                            label:\n                              type: string\n                            eTag:\n                              type: string\n                        - type: object\n                          additionalProperties: false\n                          required:\n                            - downloadLink\n                          properties:\n                            downloadLink:\n                              minLength: 1\n                              maxLength: 65536\n                              type: string\n                              format: uri\n                            label:\n                              type: string\n                        - type: array\n                          items: {}\n                inputsUnits:\n                  type: object\n                  description: values of input unit\n                  patternProperties:\n                    '^[-_a-zA-Z0-9]+$':\n                      type: string\n                      example:\n                        - kilo-meter\n                        - milli-second\n                        - micro-gram\n                        - kelvin\n                inputAccess:\n                  description: map with key - access level pairs\n                  type: object\n                  patternProperties:\n                    '^[-_a-zA-Z0-9]+$':\n                      type: string\n                      enum:\n                        - Invisible\n                        - ReadOnly\n                        - ReadAndWrite\n                      default: ReadAndWrite\n                      example:\n                        - ReadOnly\n                inputNodes:\n                  type: array\n                  items:\n                    type: string\n                    format: uuid\n                  description: node IDs of where the node is connected to\n                  example:\n                    - nodeUuid1\n                    - nodeUuid2\n                outputs:\n                  default: {}\n                  type: object\n                  patternProperties:\n                    '^[-_a-zA-Z0-9]+$':\n                      oneOf:\n                        - type:\n                            - integer\n                            - boolean\n                            - string\n                            - number\n                            - 'null'\n                        - type: object\n                          additionalProperties: false\n                          required:\n                            - store\n                            - path\n                          properties:\n                            store:\n                              type:\n                                - string\n                                - integer\n                            dataset:\n                              type: string\n                            path:\n                              type: string\n                            label:\n                              type: string\n                            eTag:\n                              type: string\n                        - type: object\n                          additionalProperties: false\n                          required:\n                            - downloadLink\n                          properties:\n                            downloadLink:\n                              minLength: 1\n                              maxLength: 65536\n                              type: string\n                              format: uri\n                            label:\n                              type: string\n                        - type: array\n                          items: {}\n                outputNode:\n                  type: boolean\n                  deprecated: true\n                outputNodes:\n                  type: array\n                  items:\n                    type: string\n                    format: uuid\n                  description: Used in group-nodes. Node IDs of those connected to the output\n                  example:\n                    - nodeUuid1\n                    - nodeUuid2\n                parent:\n                  type:\n                    - 'null'\n                    - string\n                  format: uuid\n                  description: Parent's (group-nodes') node ID s.\n                  example:\n                    - nodeUuid1\n                    - nodeUuid2\n                position:\n                  type: object\n                  additionalProperties: false\n                  required:\n                    - x\n                    - 'y'\n                  properties:\n                    x:\n                      type: integer\n                      description: The x position\n                      example:\n                        - '12'\n                    'y':\n                      type: integer\n                      description: The y position\n                      example:\n                        - '15'\n                  deprecated: true\n                state:\n                  title: NodeState\n                  type: object\n                  properties:\n                    modified:\n                      title: Modified\n                      description: true if the node's outputs need to be re-computed\n                      default: true\n                      type: boolean\n                    dependencies:\n                      title: Dependencies\n                      description: contains the node inputs dependencies if they need to be computed first\n                      type: array\n                      uniqueItems: true\n                      items:\n                        type: string\n                        format: uuid\n                    currentStatus:\n                      description: the node's current state\n                      default: NOT_STARTED\n                      example:\n                        - RUNNING\n                        - FAILED\n                      enum:\n                        - UNKNOWN\n                        - PUBLISHED\n                        - NOT_STARTED\n                        - PENDING\n                        - STARTED\n                        - RETRY\n                        - SUCCESS\n                        - FAILED\n                        - ABORTED\n                      type: string\n                  additionalProperties: false\n                bootOptions:\n                  title: Boot Options\n                  description: 'Some services provide alternative parameters to be injected at boot time. The user selection should be stored here, and it will overwrite the services''s defaults.'\n                  type: object\n                  patternProperties:\n                    '[a-zA-Z][a-azA-Z0-9_]*':\n                      type: string\n          additionalProperties: true\n        ui:\n          type: object\n          additionalProperties: true\n          properties:\n            workbench:\n              type: object\n              x-patternProperties:\n                '^[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?4[0-9a-fA-F]{3}-?[89abAB][0-9a-fA-F]{3}-?[0-9a-fA-F]{12}$':\n                  type: object\n                  additionalProperties: false\n                  required:\n                    - position\n                  properties:\n                    position:\n                      type: object\n                      additionalProperties: false\n                      required:\n                        - x\n                        - 'y'\n                      properties:\n                        x:\n                          type: integer\n                          description: The x position\n                          example:\n                            - '12'\n                        'y':\n                          type: integer\n                          description: The y position\n                          example:\n                            - '15'\n                    marker:\n                      type: object\n                      additionalProperties: false\n                      required:\n                        - color\n                      properties:\n                        color:\n                          type: string\n                          description: Marker's color\n                          example:\n                            - '#FF0000'\n                            - '#0000FF'\n              additionalProperties: true\n            slideshow:\n              type: object\n              x-patternProperties:\n                '^[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?4[0-9a-fA-F]{3}-?[89abAB][0-9a-fA-F]{3}-?[0-9a-fA-F]{12}$':\n                  type: object\n                  additionalProperties: false\n                  required:\n                    - position\n                  properties:\n                    position:\n                      type: integer\n                      description: Slide's position\n                      example:\n                        - 0\n                        - 2\n              additionalProperties: true\n            currentNodeId:\n              type: string\n              format: uuid\n            annotations:\n              type: object\n              x-patternProperties:\n                '^[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?4[0-9a-fA-F]{3}-?[89abAB][0-9a-fA-F]{3}-?[0-9a-fA-F]{12}$':\n                  type: object\n                  additionalProperties: false\n                  required:\n                    - type\n                    - color\n                    - attributes\n                  properties:\n                    type:\n                      type: string\n                      description: Annotation type\n                      example:\n                        - rect\n                        - text\n                    color:\n                      type: string\n                      description: Annotation's color\n                      example:\n                        - '#FF0000'\n                        - '#0000FF'\n                    attributes:\n                      type: object\n                      description: svg attributes\n              additionalProperties: true\n        tags:\n          type: array\n          items:\n            type: integer\n        classifiers:\n          type: array\n          description: Contains the reference to the project classifiers\n          items:\n            type: string\n          example: 'some:id:to:a:classifier'\n        dev:\n          type: object\n          description: object used for development purposes only\n        state:\n          title: State\n          description: Project state\n          anyOf:\n            - nullable: true\n            - title: ProjectState\n              type: object\n              additionalProperties: false\n              properties:\n                locked:\n                  title: Locked\n                  description: The project lock state\n                  allOf:\n                    - title: ProjectLocked\n                      type: object\n                      additionalProperties: false\n                      properties:\n                        value:\n                          title: Value\n                          description: True if the project is locked\n                          type: boolean\n                        owner:\n                          title: Owner\n                          description: 'If locked, the user that owns the lock'\n                          allOf:\n                            - title: Owner\n                              type: object\n                              additionalProperties: false\n                              properties:\n                                user_id:\n                                  title: User Id\n                                  type: integer\n                                  description: Owner's identifier when registered in the user's database table\n                                  example:\n                                    - 2\n                                first_name:\n                                  title: First Name\n                                  description: Owner first name\n                                  example:\n                                    - John\n                                  type: string\n                                last_name:\n                                  title: Last Name\n                                  description: Owner last name\n                                  example:\n                                    - Smith\n                                  type: string\n                              required:\n                                - user_id\n                                - first_name\n                                - last_name\n                        status:\n                          title: Status\n                          description: The status of the project\n                          enum:\n                            - CLOSED\n                            - CLOSING\n                            - CLONING\n                            - OPENING\n                            - EXPORTING\n                            - OPENED\n                          type: string\n                      required:\n                        - value\n                        - status\n                state:\n                  title: State\n                  description: The project running state\n                  allOf:\n                    - title: ProjectRunningState\n                      type: object\n                      additionalProperties: false\n                      properties:\n                        value:\n                          title: RunningState\n                          description: An enumeration.\n                          enum:\n                            - UNKNOWN\n                            - NOT_STARTED\n                            - PUBLISHED\n                            - PENDING\n                            - STARTED\n                            - RETRY\n                            - SUCCESS\n                            - FAILED\n                            - ABORTED\n                          type: string\n                      required:\n                        - value\n              required:\n                - locked\n                - state\n        quality:\n          type: object\n          title: Quality\n          description: Object containing Quality Assessment related data\n  responses:\n    DefaultErrorResponse:\n      description: Unexpected error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorEnveloped'\n",
			"canonicalURL": "/github.com/ITISFoundation/osparc-simcore@226c16254c8fab772aa97ba14cbb1eff90b7e25b/-/blob/services/storage/src/simcore_service_storage/api/v0/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ITISFoundation/osparc-simcore/blob/226c16254c8fab772aa97ba14cbb1eff90b7e25b/services/storage/src/simcore_service_storage/api/v0/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"FileMetaDataArrayEnveloped\": parse schema: property \"error\": parse schema: infer default type: cannot infer type from \"null\""
}