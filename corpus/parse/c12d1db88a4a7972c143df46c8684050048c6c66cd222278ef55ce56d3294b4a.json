{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/deepmap/oapi-codegen"
		},
		"file": {
			"name": "x-go-type-import-pet.yaml",
			"size": 0,
			"path": "pkg/codegen/test_specs/x-go-type-import-pet.yaml",
			"byteSize": 4789,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Swagger Petstore\n  description: A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification\n  termsOfService: http://swagger.io/terms/\n  contact:\n    name: Swagger API Team\n    email: apiteam@swagger.io\n    url: http://swagger.io\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\nservers:\n  - url: http://petstore.swagger.io/api\npaths:\n  /schemas/pet-object:\n    get:\n      description: return pet object\n      responses:\n        \"200\":\n          description: person response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PetObject\"\n  /schemas/age-simple:\n    get:\n      description: return pet object\n      responses:\n        \"200\":\n          description: person response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AgeSimple\"\n\n  /schemas/schema-with-array:\n    get:\n      description: return schema object with array\n      responses:\n        \"200\":\n          description: person response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PetArray\"\n\n  /responses/type:\n    get:\n      responses:\n        '200':\n          $ref: '#/components/responses/StringResponse'\n\n  /responses/complex-response:\n    get:\n      responses:\n        '200':\n          $ref: '#/components/responses/ComplexResponse'\n\n  /requests/:\n    post:\n      requestBody:\n        $ref: \"#/components/requestBodies/RegisterBody\"\n      responses:\n        '200':\n          $ref: '#/components/responses/ComplexResponse'\n\n  /parameters/query:\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/Version\"\n      requestBody:\n        $ref: \"#/components/requestBodies/RegisterBody\"\n      responses:\n        '200':\n          $ref: '#/components/responses/ComplexResponse'\n\n  /parameters/{versionPath}:\n    post:\n      parameters:\n        - $ref: \"#/components/parameters/VersionPath\"\n      requestBody:\n        $ref: \"#/components/requestBodies/RegisterBody\"\n      responses:\n        '200':\n          $ref: '#/components/responses/ComplexResponse'\n\n  /requests/{path}:\n    post:\n      parameters:\n        - name: version\n          in: query\n          schema:\n            x-go-type: easyjson.Json\n            x-go-type-import:\n              path: github.com/mailru/easyjson\n        - name: path\n          in: path\n          schema:\n            x-go-type: pgtype.Color\n            x-go-type-import:\n              path: github.com/jackc/pgtype\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                email:\n                  x-go-type: gotenv.Env\n                  x-go-type-import:\n                    path: github.com/subosito/gotenv\n      responses:\n        '200':\n            $ref: '#/components/responses/ComplexResponse'\n\ncomponents:\n  schemas:\n    PetObject:\n      properties:\n        age:\n          x-go-type: myuuid.UUID\n          x-go-type-import:\n            path: github.com/google/uuid\n            name: myuuid\n      required:\n        - age\n    AgeSimple:\n      x-go-type: pgext.Puint\n      x-go-type-import:\n        path: github.com/CavernaTechnologies/pgext\n    PetArray:\n      type: array\n      items:\n        x-go-type: pq.Int\n        x-go-type-import:\n          path: github.com/lib/pq\n\n  responses:\n    StringResponse:\n      description: An image.\n      content:\n        application/json:\n          schema:\n            type: string\n            x-go-type: viper.ID\n            x-go-type-import:\n              path: github.com/spf13/viper\n    ComplexResponse:\n      description: Complex response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              keys:\n                type: array\n                items:\n                  x-go-type: text.Text\n                  x-go-type-import:\n                    path: golang.org/x/text\n\n  requestBodies:\n    RegisterBody:\n      required: true\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              email:\n                x-go-type: email.Email\n                x-go-type-import:\n                  path: golang.org/x/email\n\n  parameters:\n    Version:\n      name: version\n      in: query\n      schema:\n        x-go-type: color.Color\n        x-go-type-import:\n          path: github.com/fatih/color\n\n    VersionPath:\n      name: versionPath\n      in: path\n      schema:\n        x-go-type: swag.Swag\n        x-go-type-import:\n          path: github.com/go-openapi/swag",
			"canonicalURL": "/github.com/deepmap/oapi-codegen@ab90f1927bc5ec3e29af216d4298fbb4780ae36d/-/blob/pkg/codegen/test_specs/x-go-type-import-pet.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/deepmap/oapi-codegen/blob/ab90f1927bc5ec3e29af216d4298fbb4780ae36d/pkg/codegen/test_specs/x-go-type-import-pet.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: parameters: \"VersionPath\": at pkg/codegen/test_specs/x-go-type-import-pet.yaml:188:7: path parameters must be required"
}