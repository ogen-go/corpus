{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/amanoooo/apidoc-swagger-3"
		},
		"file": {
			"name": "swagger.json",
			"size": 0,
			"path": "test/simple/output/swagger.json",
			"byteSize": 1734,
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n        \"title\": \"\",\n        \"version\": \"0.0.0\",\n        \"description\": \"\"\n    },\n    \"paths\": {\n        \"/user/id\": {\n            \"get\": {\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"GetUser\",\n                \"description\": \"Request User information\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"in\": \"query\",\n                        \"name\": \"id\",\n                        \"description\": \"Users unique ID.\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"schema\": {\n                            \"properties\": {\n                                \"firstname\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"Firstname of the User.\"\n                                },\n                                \"lastname\": {\n                                    \"type\": \"string\",\n                                    \"description\": \"Lastname of the User.\"\n                                }\n                            },\n                            \"type\": \"object\",\n                            \"required\": [\n                                \"firstname\",\n                                \"lastname\"\n                            ]\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /user/id: get: parameters: parse parameter \"id\": parameter MUST contain either a schema property, or a content property"
}