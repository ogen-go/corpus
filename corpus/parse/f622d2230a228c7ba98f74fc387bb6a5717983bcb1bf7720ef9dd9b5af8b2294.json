{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bigcommerce/api-specs"
		},
		"file": {
			"name": "settings.v3.yml",
			"size": 0,
			"path": "reference/settings.v3.yml",
			"byteSize": 76141,
			"content": "openapi: 3.0.3\ninfo:\n  contact:\n    email: support@bigcommerce.com\n    name: BigCommerce\n    url: 'https://www.bigcommerce.com'\n  description: |-\n    Manage settings and configuration for BigCommerce hosted stores and headless storefronts.\n\n    ## Authentication\n\n    Authenticate requests by including an [OAuth](https://developer.bigcommerce.com/api-docs/getting-started/authentication) `access_token` in the request header.\n\n    ```http\n    GET /stores/{{STORE_HASH}}/v3/settings/storefront/status\n    host: api.bigcommerce.com\n    Accept: application/json\n    X-Auth-Token: {{ACCESS_TOKEN}}\n    ```\n\n    ### OAuth Scopes\n    |  **UI Name** | **Permission** | **Parameter** |\n    | --- | --- | --- |\n    |  Information \u0026 Settings | modify | `store_v2_information` |\n    |  Information \u0026 Settings | read-only | `store_v2_information_read_only` |\n  termsOfService: 'http://www.bigcommerce.com/terms'\n  title: Settings V3\n  version: 3.0.0\nservers:\n  - description: Production API Gateway\n    url: 'https://api.bigcommerce.com'\npaths:\n  '/stores/{store_hash}/v3/settings/analytics':\n    get:\n      summary: Get All Web Analytics Providers\n      description: Returns a list of web analytics providers.\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/AnalyticsProviders'\n                  meta:\n                    type: object\n      tags:\n        - Analytics\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n  '/stores/{store_hash}/v3/settings/analytics/{id}':\n    get:\n      summary: Get a Web Analytics Provider\n      description: Returns a single web analytics provider data for a default channel.\n      parameters:\n        - name: id\n          in: path\n          description: Web Analytics Provider ID.\n          required: true\n          schema:\n            type: integer\n        - $ref: '#/components/parameters/ChannelIdParam'\n      responses:\n        '200':\n          description: Successful operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnalyticsProvider'\n        '400':\n          description: Bad request. Authentication Required.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse400'\n        '404':\n          description: The requested resource was not found. Please specify valid Web Analytics Provider ID.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse404'\n      tags:\n        - Analytics\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: integer\n      - $ref: '#/components/parameters/store_hash'\n    put:\n      summary: Update a Web Analytics Provider\n      description: Updates a single web analytics provider data for a default channel.\n      parameters:\n        - name: id\n          in: path\n          description: Web Analytics Provider ID.\n          required: true\n          schema:\n            type: integer\n        - $ref: '#/components/parameters/ChannelIdParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: ''\n              type: object\n              properties:\n                channel_id:\n                  type: number\n                code:\n                  type: string\n                  minLength: 1\n                data_tag_enabled:\n                  type: boolean\n                enabled:\n                  type: boolean\n                id:\n                  type: number\n                is_oauth_connected: {}\n                name:\n                  type: string\n                  minLength: 1\n                version:\n                  type: number\n              x-examples:\n                example-1:\n                  channel_id: 1\n                  code: GA-1234567890\n                  data_tag_enabled: false\n                  enabled: false\n                  id: 2\n                  is_oauth_connected: null\n                  name: Visual Website Optimizer\n                  version: 1\n      responses:\n        '200':\n          description: Successful operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnalyticsProvider'\n        '400':\n          description: Bad request. Authentication Required.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse400'\n        '404':\n          description: The requested resource was not found. Please specify valid Web Analytics Provider ID.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse404'\n        '409':\n          description: Web Analytics Provider was in conflict with another Web Analytics Provider. This can be caused by duplicated unique values (such as ID).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse409'\n        '422':\n          description: 'Web Analytics Provider data was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse422'\n      tags:\n        - Analytics\n  '/stores/{store_hash}/v3/settings/catalog':\n    get:\n      summary: Get Catalog Settings\n      description: |-\n        Returns catalog settings.\n\n         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. \n\n         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      responses:\n        '200':\n          description: OK. `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/CatalogSettings'\n                  meta:\n                    type: object\n      tags:\n        - Catalog\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n    put:\n      summary: Update Catalog Settings\n      description: |-\n        Updates catalog settings.\n\n         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. \n\n         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      requestBody:\n        description: null set for a particular field removes override on a channel level and means inheritance from a global level\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CatalogSettings'\n      responses:\n        '200':\n          description: OK. `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/CatalogSettings'\n                  meta:\n                    type: object\n      tags:\n        - Catalog\n  '/stores/{store_hash}/v3/settings/email-statuses':\n    get:\n      operationId: get-settings-emails-enabled\n      summary: Get Transactional Email Settings\n      description: Get global transactional email settings or channel specific overrides by `channel_id`.\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      responses:\n        '200':\n          description: 'OK, null indicates that a particular field has not been overridden on a channel level when channel level settings are requested'\n          content:\n            application/json:\n              examples:\n                Example:\n                  value:\n                    data:\n                      abandoned_cart_email: true\n                      account_details_changed_email: true\n                      combined_order_status_email: true\n                      createaccount_email: true\n                      createguestaccount_email: true\n                      giftcertificate_email: true\n                      invoice_email: true\n                      ordermessage_notification: true\n                      product_review_email: false\n                      return_confirmation_email: true\n                      return_statuschange_email: true\n                    meta: {}\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/EnabledTransactionalEmails'\n                  meta:\n                    type: object\n      tags:\n        - Email Statuses\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n    put:\n      operationId: put-settings-transactional-emails-enabled\n      summary: Update Transactional Email Settings\n      description: Update global transactional email settings or create channel specific overrides by `channel_id`.\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                value:\n                  abandoned_cart_email: true\n                  account_details_changed_email: true\n                  combined_order_status_email: true\n                  createaccount_email: true\n                  createguestaccount_email: true\n                  giftcertificate_email: true\n                  invoice_email: true\n                  ordermessage_notification: true\n                  product_review_email: false\n                  return_confirmation_email: true\n                  return_statuschange_email: true\n            schema:\n              $ref: '#/components/schemas/EnabledTransactionalEmails'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              examples:\n                Example:\n                  value:\n                    data:\n                      abandoned_cart_email: true\n                      account_details_changed_email: true\n                      combined_order_status_email: true\n                      createaccount_email: true\n                      createguestaccount_email: true\n                      giftcertificate_email: true\n                      invoice_email: true\n                      ordermessage_notification: true\n                      product_review_email: false\n                      return_confirmation_email: true\n                      return_statuschange_email: true\n                    meta: {}\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/EnabledTransactionalEmails'\n                  meta:\n                    type: object\n      tags:\n        - Email Statuses\n  '/stores/{store_hash}/v3/settings/favicon/image':\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n    post:\n      operationId: post-favicon-logo-image\n      summary: Create Favicon Image\n      description: |-\n        Uploads an image file to use as the storefront favicon. Supported MIME types include GIF, JPEG, and PNG. \n\n          - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only.\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                FaviconFile:\n                  type: string\n                  format: binary\n      responses:\n        '204':\n          description: OK\n      tags:\n        - Favicon Image\n  '/stores/{store_hash}/v3/settings/inventory/notifications':\n    get:\n      summary: Get Inventory Notifications Settings\n      description: |-\n        Returns inventory notification settings. \n        * `channel_id` can be used as a query parameter to get inventory notification settings per channel. If omitted, you will interact with the global setting only.\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      responses:\n        '200':\n          description: OK. `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested\n          content:\n            application/json:\n              examples: {}\n              schema:\n                allOf:\n                  - properties:\n                      data:\n                        $ref: '#/components/schemas/InventoryNotificationsSettings'\n                    type: object\n                  - $ref: 'https://raw.githubusercontent.com/bigcommerce/api-specs/master/reference/global_refs.yaml#/components/schemas/meta_Empty'\n      tags:\n        - Inventory\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n    put:\n      summary: Update Inventory Notifications Settings\n      description: |-\n        Updates inventory notification settings. \n        * `channel_id` can be used as a query parameter to get inventory notification settings per channel. If omitted, you will interact with the global setting only. \n        * Supplying `null` settings values per channel will delete overrides per given channel and values will be inherited from global level. \n        * Partial updates are not supported within the given endpoint. In order to delete overrides per channel, `null` should be supplied for all the settings within the given endpoint.\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      requestBody:\n        description: null set for a particular field removes override on a channel level and means inheritance from a global level\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InventoryNotificationsSettings'\n      responses:\n        '200':\n          description: OK\n      tags:\n        - Inventory\n  '/stores/{store_hash}/v3/settings/logo':\n    get:\n      operationId: get-settings-logo\n      summary: Get Store Logo Settings\n      description: |-\n        Returns store logo settings.\n\n         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. \n\n         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      responses:\n        '200':\n          description: 'OK, null indicates that a particular field has not been overridden on a channel level when channel level settings are requested'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/LogoSettings'\n                  meta:\n                    type: object\n      tags:\n        - Logo\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n    put:\n      operationId: put-settings-logo\n      summary: Update Store Logo Settings\n      description: |-\n        Updates the logo type and logo text for a textual logo. To upload new images, use the dedicated image POST endpoints.\n\n         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. \n\n         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LogoSettingsUpdate'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/LogoSettings'\n                  meta:\n                    type: object\n      tags:\n        - Logo\n  '/stores/{store_hash}/v3/settings/logo/image':\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n    post:\n      operationId: post-settings-logo-image\n      summary: Create Logo Image\n      description: |-\n        Uploads an image file to use as the storefront logo. Supported MIME types include GIF, JPEG, and PNG. \n\n         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only.\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                LogoFile:\n                  type: string\n                  format: binary\n      responses:\n        '204':\n          description: OK\n      tags:\n        - Logo Image\n  '/stores/{store_hash}/v3/settings/search/filters':\n    get:\n      operationId: getEnabled\n      summary: Get Enabled Filters\n      description: 'Returns a list of enabled default [Product Filtering](https://support.bigcommerce.com/s/article/Product-Filtering-Settings) filters. These filters will be used if a store does not have contextual overrides.'\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    data:\n                      - collapsed_by_default: false\n                        display_name: Size\n                        display_product_count: true\n                        id: U123=\n                        is_enabled: true\n                        items_to_show: 10\n                        sort_by: alpha\n                        type: product\n                      - collapsed_by_default: false\n                        display_name: Brand\n                        display_product_count: true\n                        id: Y123=\n                        is_enabled: true\n                        items_to_show: 12\n                        sort_by: alpha\n                        type: brand\n                      - collapsed_by_default: false\n                        display_name: Color\n                        display_product_count: true\n                        id: Q123=\n                        is_enabled: true\n                        items_to_show: 10\n                        sort_by: alpha\n                        type: product\n                      - collapsed_by_default: true\n                        display_name: Ships for Free\n                        display_product_count: false\n                        id: Y456=\n                        is_enabled: true\n                        show_free_shipping_filter: true\n                        show_in_stock_filter: true\n                        show_is_featured_filter: true\n                        type: other\n                    meta: {}\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/ConfiguredFilters'\n                  meta:\n                    type: object\n      tags:\n        - Search Filters\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n    put:\n      operationId: updateEnabled\n      summary: Update Enabled Filters\n      description: 'Updates enabled default [Product Filtering](https://support.bigcommerce.com/s/article/Product-Filtering-Settings) filters.'\n      requestBody:\n        content:\n          application/json:\n            examples:\n              example-1:\n                value:\n                  - collapsed_by_default: false\n                    display_name: Size\n                    display_product_count: true\n                    id: U123=\n                    is_enabled: true\n                    items_to_show: 12\n                    sort_by: alpha\n                    type: product\n                  - collapsed_by_default: false\n                    display_name: Brand\n                    display_product_count: true\n                    id: Y123=\n                    is_enabled: true\n                    items_to_show: 10\n                    sort_by: alpha\n                    type: brand\n                  - collapsed_by_default: false\n                    display_name: Color\n                    display_product_count: true\n                    id: Q123=\n                    is_enabled: true\n                    items_to_show: 10\n                    sort_by: alpha\n                    type: product\n                  - collapsed_by_default: true\n                    display_name: Ships for Free\n                    display_product_count: true\n                    id: Y456=\n                    is_enabled: true\n                    show_free_shipping_filter: true\n                    show_in_stock_filter: true\n                    show_is_featured_filter: true\n                    type: other\n            schema:\n              $ref: '#/components/schemas/ConfiguredFilters'\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    data:\n                      - collapsed_by_default: false\n                        display_name: Size\n                        display_product_count: true\n                        id: U123==\n                        is_enabled: true\n                        items_to_show: 12\n                        sort_by: alpha\n                        type: product\n                      - collapsed_by_default: false\n                        display_name: Brand\n                        display_product_count: true\n                        id: Y123=\n                        is_enabled: true\n                        items_to_show: 10\n                        sort_by: alpha\n                        type: brand\n                      - collapsed_by_default: false\n                        display_name: Color\n                        display_product_count: true\n                        id: Q123=\n                        is_enabled: true\n                        items_to_show: 10\n                        sort_by: alpha\n                        type: product\n                      - collapsed_by_default: true\n                        display_name: Ships for Free\n                        display_product_count: true\n                        id: Y456=\n                        is_enabled: true\n                        show_free_shipping_filter: true\n                        show_in_stock_filter: true\n                        show_is_featured_filter: true\n                        type: other\n                    meta: {}\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/ConfiguredFilters'\n                  meta:\n                    type: object\n      tags:\n        - Search Filters\n  '/stores/{store_hash}/v3/settings/search/filters/available':\n    get:\n      operationId: getAvailable\n      summary: Get Available Filters\n      description: 'Returns a list of filters available to power [Product Filtering](https://support.bigcommerce.com/s/article/Product-Filtering-Settings).'\n      parameters:\n        - name: channel_id\n          in: query\n          description: Narrows the list of available filters based on channel ID. Only products currently assigned to the given Channel will be considered.\n          schema:\n            type: integer\n        - name: category_id\n          in: query\n          description: 'Narrows the list of available filters based on category ID. You can display settings to show products from the provided category, subcategories only, or both the category and its child categories.'\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    data:\n                      - id: Y2F0Zooo123=\n                        name: Category\n                        product_count: 7\n                        type: category\n                      - id: YnJh123=\n                        name: Brand\n                        product_count: 8\n                        type: brand\n                      - id: cmF0a123\n                        name: Rating\n                        product_count: 1\n                        type: rating\n                      - id: cHJp123=\n                        name: Price\n                        price_range_max: 300.99\n                        price_range_min: 6.75\n                        type: price\n                      - id: U2l123==\n                        name: Size\n                        product_count: 3\n                        type: product\n                      - id: Q29s123=\n                        name: Color\n                        product_count: 2\n                        type: product\n                      - id: Ym9123==\n                        name: Other\n                        type: other\n                    meta: {}\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/AvailableFilter'\n                  meta:\n                    type: object\n      tags:\n        - Search Filters\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n  '/stores/{store_hash}/v3/settings/search/filters/contexts':\n    get:\n      operationId: getContexts\n      summary: Get Contextual Filters\n      description: |-\n        Returns a list of contextual filters enabled for a particular channel or category.\n\n        **Usage Notes**\n\n        Contextual filters allow you to configure the enabled filters per channel or category, so that shoppers can filter by the most relevant criteria.\n\n        The order of the returned filters will match the sort order of the filters on the storefront.\n      parameters:\n        - name: channel_id\n          in: query\n          description: Only return contextual overrides related to a particular Channel.\n          schema:\n            type: integer\n        - name: category_id\n          in: query\n          description: Only return contextual overrides related to a particular Category.\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/ConfiguredFiltersOverride'\n                  meta:\n                    $ref: '#/components/schemas/MetaPaginationObject'\n      tags:\n        - Search Filters\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n    put:\n      operationId: upsertContexts\n      summary: Upsert Contextual Filters\n      description: |-\n        Upserts contextual filters for a particular channel or category.\n\n        **Usage Notes**\n\n        Contextual filters allow you to configure the enabled filters per channel or category, so that shoppers can filter by the most relevant criteria.\n\n        You can change the order of the filters on the live site by changing the order of the filters you send.\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/ConfiguredFiltersOverride'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/ConfiguredFiltersOverride'\n                  meta:\n                    type: object\n      tags:\n        - Search Filters\n  '/stores/{store_hash}/v3/settings/store/locale':\n    get:\n      summary: Get Locale Settings\n      description: Returns global locale settings.\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              examples:\n                Example:\n                  value:\n                    data:\n                      default_shopper_language: en\n                      shopper_language_selection_method: default_shopper_language\n                      store_country: United States\n                    meta: {}\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/Locale'\n                  meta:\n                    type: object\n      tags:\n        - Store Locale\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n    put:\n      summary: Update Locale Settings\n      description: Updates global locale settings.\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Example:\n                value:\n                  default_shopper_language: en\n                  shopper_language_selection_method: default_shopper_language\n                  store_country: United States\n            schema:\n              $ref: '#/components/schemas/Locale'\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              examples:\n                Example:\n                  value:\n                    data:\n                      default_shopper_language: en\n                      shopper_language_selection_method: default_shopper_language\n                      store_country: United States\n                    meta: {}\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/Locale'\n                  meta:\n                    type: object\n        '422':\n          description: Provided settings could not be applied for some reason - detailed errors in the response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      tags:\n        - Store Locale\n  '/stores/{store_hash}/v3/settings/store/profile':\n    get:\n      summary: Get Store Profile Settings\n      description: |-\n        Returns store profile settings.\n\n         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. \n\n         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      responses:\n        '200':\n          description: OK. `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/StoreProfile'\n                  meta:\n                    type: object\n      tags:\n        - Store Profile\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n    put:\n      summary: Update Store Profile Settings\n      description: |-\n        Updates store profile settings.\n\n         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. \n\n         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StoreProfile'\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/StoreProfile'\n                  meta:\n                    type: object\n        '422':\n          description: Provided settings could not be applied for some reason - detailed errors in the response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      tags:\n        - Store Profile\n  '/stores/{store_hash}/v3/settings/storefront/category':\n    get:\n      summary: Get Storefront Category Settings\n      description: |-\n        Returns category settings.\n\n         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. \n\n         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      responses:\n        '200':\n          description: OK. `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/StorefrontCategorySettings'\n                  meta:\n                    type: object\n      tags:\n        - Storefront Category\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n    put:\n      summary: Update Storefront Category Settings\n      description: |-\n        Updates category settings.\n\n         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. \n\n         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StorefrontCategorySettings'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/StorefrontCategorySettings'\n                  meta:\n                    type: object\n        '422':\n          $ref: '#/components/responses/422ErrorResp'\n      tags:\n        - Storefront Category\n  '/stores/{store_hash}/v3/settings/storefront/product':\n    get:\n      operationId: get-settings-storefront-product\n      summary: Get Storefront Product Settings\n      description: |-\n        Returns product settings.\n\n         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. \n\n         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      responses:\n        '200':\n          $ref: '#/components/responses/200-storefront-product-settings'\n      tags:\n        - Storefront Product\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n    put:\n      operationId: put-settings-storefront-product\n      summary: Update Storefront Product Settings\n      description: |-\n        Updates product settings.\n\n         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. \n\n         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StorefrontProductSettings'\n      responses:\n        '200':\n          $ref: '#/components/responses/200-storefront-product-settings'\n        '422':\n          $ref: '#/components/responses/422ErrorResp'\n      tags:\n        - Storefront Product\n  '/stores/{store_hash}/v3/settings/storefront/robotstxt':\n    get:\n      summary: Get Robots.txt Settings\n      description: |-\n        Returns Robots.txt settings.\n\n         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. \n\n         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      responses:\n        '200':\n          description: 'OK, null indicates that a particular field has not been overridden on a channel level when channel level settings are requested'\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    data:\n                      robots_txt_ssl: string\n                    meta: {}\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/RobotsTxtSettings'\n                  meta:\n                    type: object\n      tags:\n        - Storefront Robotstxt\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n    put:\n      summary: Update Robots.txt Settings\n      description: |-\n        Updates Robots.txt settings.\n\n         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. \n\n         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RobotsTxtSettings'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/RobotsTxtSettings'\n                  meta:\n                    type: object\n      tags:\n        - Storefront Robotstxt\n  '/stores/{store_hash}/v3/settings/storefront/search':\n    get:\n      operationId: ''\n      summary: Get Storefront Search Settings\n      description: |-\n        Returns search settings.\n\n         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. \n\n         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      responses:\n        '200':\n          description: 'OK, null indicates that a particular field has not been overridden on a channel level when channel level settings are requested'\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    data:\n                      content_product_sort: relevance\n                      default_product_sort: bestselling\n                      product_filtering_enabled: true\n                      search_suggest: true\n                    meta: {}\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/StorefrontSearchSettings'\n                  meta:\n                    type: object\n      tags:\n        - Storefront Search\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n    put:\n      summary: Update Storefront Search Settings\n      description: |-\n        Updates search settings.\n\n         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. \n\n         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      requestBody:\n        content:\n          application/json:\n            examples:\n              example-1:\n                value:\n                  content_product_sort: relevance\n                  default_product_sort: featured\n                  product_filtering_enabled: true\n                  search_suggest: true\n            schema:\n              $ref: '#/components/schemas/StorefrontSearchSettings'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    data:\n                      content_product_sort: relevance\n                      default_product_sort: featured\n                      product_filtering_enabled: true\n                      search_suggest: true\n                    meta: {}\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/StorefrontSearchSettings'\n                  meta:\n                    type: object\n      tags:\n        - Storefront Search\n  '/stores/{store_hash}/v3/settings/storefront/security':\n    get:\n      summary: Get Storefront Security Settings\n      description: |-\n        Returns security settings.\n\n         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. \n\n         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      responses:\n        '200':\n          description: 'OK, null indicates that a particular field has not been overridden on a channel level when channel level settings are requested'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/StorefrontSecuritySettings'\n                  meta:\n                    type: object\n      tags:\n        - Storefront Security\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n    put:\n      summary: Update Storefront Security Settings\n      description: |-\n        Updates security settings.\n\n         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. \n\n         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StorefrontSecuritySettings'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/StorefrontSecuritySettings'\n                  meta:\n                    type: object\n      tags:\n        - Storefront Security\n  '/stores/{store_hash}/v3/settings/storefront/seo':\n    get:\n      summary: Get Storefront SEO Settings\n      description: |-\n        Returns SEO settings.\n\n         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. \n\n         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      responses:\n        '200':\n          description: 'OK, null indicates that a particular field has not been overridden on a channel level when channel level settings are requested'\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    data:\n                      meta_description: Your BigCommerce Store\n                      meta_keywords: ''\n                      page_title: BigCommerce Store\n                      www_redirect: no-www\n                    meta: {}\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/SEOSettings'\n                  meta:\n                    type: object\n      tags:\n        - Storefront SEO\n    parameters:\n      - $ref: '#/components/parameters/store_hash'\n    put:\n      summary: Update Storefront SEO Settings\n      description: |-\n        Updates SEO settings.\n\n         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. \n\n         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      requestBody:\n        content:\n          application/json:\n            examples:\n              example-1:\n                value:\n                  meta_description: Your BigCommerce Store\n                  meta_keywords: ''\n                  page_title: New BigCommerce Store\n                  www_redirect: no-www\n            schema:\n              $ref: '#/components/schemas/SEOSettings'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              examples: {}\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/SEOSettings'\n                  meta:\n                    type: object\n        '422':\n          $ref: '#/components/responses/422ErrorResp'\n      tags:\n        - Storefront SEO\n  '/stores/{store_hash}/v3/settings/storefront/status':\n    get:\n      summary: Get Storefront Status\n      description: |-\n        Returns storefront status-related settings. \n\n         - Channel ID can be used as a query parameter for getting channel-specific setting. If omitted, you will interact with the global setting only. \n\n         - `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested and values are inherited from global level.\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      responses:\n        '200':\n          description: 'OK, null indicates that a particular field has not been overridden on a channel level when channel level settings are requested'\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    data:\n                      down_for_maintenance_message: Down for maintenance\n                      prelaunch_message: Prelaunch\n                      prelaunch_password: mezt1f77gd\n                    meta: {}\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/StorefrontStatus'\n                  meta:\n                    type: object\n      tags:\n        - Storefront Status\n    parameters:\n      - $ref: 'https://raw.githubusercontent.com/bigcommerce/api-specs/master/reference/global_refs.yaml#/components/parameters/store_hash'\n    put:\n      summary: Update Storefront Status\n      description: |-\n        Updates storefront status-related settings.\n\n         - Channel ID can be used as a query parameter for updating channel-specific setting. If omitted, you will interact with the global setting only. \n\n         - `null` should be supplied to delete overrides per given channel and to inherit values from global level. Partial updates are not supported and all settings should be supplied with `null` value in order to delete overrides per channel.\n      parameters:\n        - $ref: '#/components/parameters/ChannelIdParam'\n      requestBody:\n        content:\n          application/json:\n            examples:\n              example-1:\n                value:\n                  down_for_maintenance_message: Down for maintenance\n                  prelaunch_message: Coming soon\n            schema:\n              $ref: '#/components/schemas/StorefrontStatus'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              examples:\n                example-1:\n                  value:\n                    data:\n                      down_for_maintenance_message: Down for maintenance\n                      prelaunch_message: Coming soon\n                      prelaunch_password: mezt1f77gd\n                    meta: {}\n              schema:\n                type: object\n                properties:\n                  data:\n                    $ref: '#/components/schemas/StorefrontStatus'\n                  meta:\n                    type: object\n      tags:\n        - Storefront Status\ncomponents:\n  parameters:\n    ChannelIdParam:\n      description: 'Channel ID to use for channel-specific setting. If omitted, you will interact with the global setting only.'\n      in: query\n      name: channel_id\n      schema:\n        type: integer\n    KeysToDelete:\n      description: Array of strings (CSV) representing which configuration keys should be cleared (un-overridden) for the Channel.\n      in: query\n      name: keys\n      required: true\n      schema:\n        type: array\n        items:\n          type: string\n    RequiredChannelIdParamForDelete:\n      description: 'Required Channel ID. This delete operation will delete overridden settings for this channel, thus restoring them to the global defaults.'\n      in: query\n      name: channel_id\n      required: true\n      schema:\n        type: integer\n    store_hash:\n      description: Hash of your store\n      in: path\n      name: store_hash\n      required: true\n      schema:\n        type: string\n        example: 29iql3rwa6\n  schemas:\n    AddressTypeEnumValues:\n      description: Only supports manipulation on a global level.\n      type: string\n      default: Home Office\n      enum:\n        - Home Office\n        - Commercial Office\n        - Retail\n        - Warehouse\n      title: AddressTypeEnumValues\n      x-tags:\n        - Models\n    AnalyticsProvider:\n      type: object\n      properties:\n        code:\n          description: Web Analytics Provider code.\n          type: string\n        enabled:\n          description: Flag indicates if Web Analytics Provider is enabled or not.\n          type: boolean\n        id:\n          description: Web Analytics Provider ID.\n          type: integer\n        name:\n          description: Web Analytics Provider title.\n          type: string\n      x-internal: false\n    AnalyticsProviders:\n      type: array\n      items:\n        $ref: '#/components/schemas/AnalyticsProvider'\n      x-internal: false\n    AvailableFilter:\n      type: object\n      oneOf:\n        - $ref: '#/components/schemas/AvailableNormalFilter'\n        - $ref: '#/components/schemas/AvailablePriceFilter'\n        - $ref: '#/components/schemas/AvailableOtherFilter'\n      title: AvailableFilter\n      x-internal: false\n    AvailableNormalFilter:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        product_count:\n          type: integer\n        type:\n          type: string\n          enum:\n            - category\n            - brand\n            - rating\n            - product\n      title: AvailableNormalFilter\n      x-tags:\n        - Models\n    AvailableOtherFilter:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        type:\n          type: string\n          enum:\n            - other\n      title: AvailableOtherFilter\n      x-internal: false\n    AvailablePriceFilter:\n      description: ''\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        price_range_max:\n          type: number\n        price_range_min:\n          type: number\n        type:\n          type: string\n          enum:\n            - price\n      title: AvailablePriceFilter\n      x-internal: false\n    BaseError:\n      description: |\n        Error payload for the BigCommerce API.\n      type: object\n      properties:\n        instance:\n          type: string\n        status:\n          description: |\n            The HTTP status code.\n          type: integer\n        title:\n          description: |\n            The error title describing the particular error.\n          type: string\n        type:\n          type: string\n      x-internal: false\n    CatalogSettings:\n      type: object\n      properties:\n        auto_approve_reviews:\n          type: boolean\n        enable_product_comparisons:\n          type: boolean\n      x-tags:\n        - Models\n    CategoryListingModeEnumValues:\n      type: string\n      enum:\n        - current_category_only\n        - child_categories\n        - child_categories_if_category_empty\n      title: CategoryListingModeEnumValues\n      x-tags:\n        - Models\n    ConfiguredFilter:\n      oneOf:\n        - $ref: '#/components/schemas/EnabledProductFilter'\n        - $ref: '#/components/schemas/EnabledPriceFilter'\n        - $ref: '#/components/schemas/EnabledCategoryFilter'\n        - $ref: '#/components/schemas/EnabledBrandFilter'\n        - $ref: '#/components/schemas/EnabledRatingFilter'\n        - $ref: '#/components/schemas/EnabledMiscFilter'\n      title: ConfiguredFilter\n      x-internal: false\n    ConfiguredFilters:\n      type: array\n      items:\n        $ref: '#/components/schemas/ConfiguredFilter'\n      title: ConfiguredFilters\n      x-internal: false\n    ConfiguredFiltersOverride:\n      description: 'A new set of enabled Product Filtering filters which should display in a particular context, such as on a particular Channel, or while viewing a particular Category. Array order indicates the display order on the storefront.'\n      type: object\n      properties:\n        context:\n          $ref: '#/components/schemas/SearchFilterOverrideContextIdentifier'\n        data:\n          $ref: '#/components/schemas/ConfiguredFilters'\n      title: ConfiguredFiltersOverride\n      x-internal: false\n    ContentSortEnumValues:\n      type: string\n      default: relevance\n      enum:\n        - relevance\n        - atoz\n        - ztoa\n      title: ContentSortEnumValues\n      x-internal: false\n    DetailedErrors:\n      type: object\n      additionalProperties:\n        type: string\n      x-internal: false\n    EnabledBrandFilter:\n      description: A storefront filter for product brand\n      type: object\n      properties:\n        collapsed_by_default:\n          type: boolean\n        display_name:\n          type: string\n        display_product_count:\n          type: boolean\n        id:\n          type: string\n        is_enabled:\n          type: boolean\n        items_to_show:\n          type: integer\n          enum:\n            - 5\n            - 10\n            - 15\n        sort_by:\n          type: string\n          enum:\n            - alpha\n            - item_count\n        type:\n          type: string\n          enum:\n            - brand\n      title: EnabledBrandFilter\n      x-internal: false\n    EnabledCategoryFilter:\n      description: A storefront filter for product category\n      type: object\n      properties:\n        collapsed_by_default:\n          type: boolean\n        display_name:\n          type: string\n        display_product_count:\n          type: boolean\n        id:\n          type: string\n        is_enabled:\n          type: boolean\n        items_to_show:\n          type: integer\n          enum:\n            - 5\n            - 10\n            - 15\n        type:\n          type: string\n          enum:\n            - category\n      title: EnabledCategoryFilter\n      x-internal: false\n    EnabledFilter:\n      oneOf:\n        - $ref: '#/components/schemas/EnabledProductFilter'\n        - $ref: '#/components/schemas/EnabledPriceFilter'\n        - $ref: '#/components/schemas/EnabledCategoryFilter'\n        - $ref: '#/components/schemas/EnabledBrandFilter'\n        - $ref: '#/components/schemas/EnabledRatingFilter'\n        - $ref: '#/components/schemas/EnabledMiscFilter'\n      title: EnabledFilter\n      x-internal: false\n    EnabledFilters:\n      type: array\n      items:\n        $ref: '#/components/schemas/EnabledFilter'\n      title: EnabledFilters\n      x-internal: false\n    EnabledFiltersOverride:\n      description: 'A new set of enabled Product Filtering filters which should display in a particular context, such as on a particular Channel, or while viewing a particular Category. Array order indicates the display order on the storefront.'\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/EnabledFilters'\n        scope:\n          $ref: '#/components/schemas/SearchFilterOverrideScopeIdentifier'\n      title: EnabledFiltersOverride\n      x-internal: false\n    EnabledMiscFilter:\n      description: Miscellaneous Filters which appear as a group.\n      type: object\n      properties:\n        collapsed_by_default:\n          type: boolean\n        display_name:\n          type: string\n        display_product_count:\n          type: boolean\n        id:\n          type: integer\n        is_enabled:\n          type: boolean\n        show_free_shipping_filter:\n          type: boolean\n        show_in_stock_filter:\n          type: boolean\n        show_is_featured_filter:\n          type: boolean\n        show_product_count:\n          type: boolean\n        type:\n          type: string\n          enum:\n            - other\n      title: EnabledMiscFilter\n      x-internal: false\n    EnabledPriceFilter:\n      description: 'A filter based on the product’s price, shown as a price range on the storefront.'\n      type: object\n      properties:\n        collapsed_by_default:\n          type: boolean\n        display_name:\n          type: string\n        id:\n          type: string\n        is_enabled:\n          type: boolean\n        type:\n          type: string\n          enum:\n            - price\n      title: EnabledPriceFilter\n      x-internal: false\n    EnabledProductFilter:\n      description: A filter that uses product options and custom field data.\n      type: object\n      properties:\n        collapsed_by_default:\n          type: boolean\n        display_name:\n          type: string\n        display_product_count:\n          type: boolean\n        id:\n          type: string\n        is_enabled:\n          type: boolean\n        items_to_show:\n          type: integer\n          enum:\n            - 5\n            - 10\n            - 15\n        sort_by:\n          type: string\n          enum:\n            - alpha\n            - option_values\n            - item_count\n        type:\n          type: string\n          enum:\n            - product\n      title: EnabledProductFilter\n      x-internal: false\n    EnabledRatingFilter:\n      description: A filter based on product review ratings.\n      type: object\n      properties:\n        collapsed_by_default:\n          type: boolean\n        display_name:\n          type: string\n        id:\n          type: string\n        is_enabled:\n          type: boolean\n        type:\n          type: string\n          enum:\n            - rating\n      title: EnabledRatingFilter\n      x-internal: false\n    EnabledTransactionalEmails:\n      type: object\n      properties:\n        abandoned_cart_email:\n          type: boolean\n        account_details_changed_email:\n          type: boolean\n        combined_order_status_email:\n          type: boolean\n        create_account_email:\n          type: boolean\n        create_guest_account_email:\n          type: boolean\n        gift_certificate_email:\n          type: boolean\n        invoice_email:\n          type: boolean\n        order_message_notification_email:\n          type: boolean\n        product_review_email:\n          type: boolean\n        return_confirmation_email:\n          type: boolean\n        return_statuschange_email:\n          type: boolean\n      title: ''\n      x-internal: false\n    Error:\n      description: A standard error object.\n      type: object\n      properties:\n        code:\n          type: string\n        message:\n          type: string\n      required:\n        - code\n      x-internal: false\n      x-tags:\n        - Common\n    ErrorResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseError'\n        - properties:\n            errors:\n              $ref: '#/components/schemas/DetailedErrors'\n          type: object\n      x-internal: false\n    ErrorResponse400:\n      type: object\n      properties:\n        schema:\n          $ref: '#/components/schemas/Error'\n      x-internal: false\n    ErrorResponse404:\n      type: object\n      properties:\n        schema:\n          $ref: '#/components/schemas/Error'\n      x-internal: false\n    ErrorResponse409:\n      type: object\n      properties:\n        schema:\n          $ref: '#/components/schemas/Error'\n      x-internal: false\n    ErrorResponse422:\n      type: object\n      properties:\n        schema:\n          $ref: '#/components/schemas/Error'\n      x-internal: false\n    HSTSMaxAgeEnumValues:\n      type: string\n      enum:\n        - zero_seconds\n        - five_minutes\n        - one_year\n      title: HSTSMaxAgeEnumValues\n      x-tags:\n        - Models\n    InventoryNotificationsSettings:\n      type: object\n      properties:\n        low_stock_notification_addresses:\n          type: array\n          items:\n            type: string\n        out_of_stock_notification_addresses:\n          type: array\n          items:\n            type: string\n      x-tags:\n        - Models\n    Locale:\n      description: 'The basic locale settings for a store, used to give shopper information about languages, countries, etc.'\n      type: object\n      properties:\n        default_shopper_language:\n          type: string\n          example: 'en, en-us'\n          default: en\n        shopper_language_selection_method:\n          description: |-\n            Determines whether to display the storefront content in the shopper's browser language or the shopper's selected default language.\n\n            Available values:\n            * `browser` - language updates automatically based on the shopper browser language. Multiple languages are supported.\n            * `default_shopper_language` - content is displayed in a single language based on the set `default_shopper_language`. Only the selected language is supported.\n          type: string\n          example: default_shopper_language\n          default: default_shopper_language\n          enum:\n            - browser\n            - default_shopper_language\n        store_country:\n          type: string\n          default: United States\n      required:\n        - default_shopper_language\n      x-internal: false\n    LogoSettings:\n      type: object\n      properties:\n        favicon_url:\n          type: string\n        logo_image_url:\n          type: string\n        logo_text:\n          type: string\n        type:\n          type: string\n          enum:\n            - image\n            - text\n      x-internal: false\n    LogoSettingsUpdate:\n      type: object\n      properties:\n        logo_text:\n          type: string\n        type:\n          type: string\n          enum:\n            - image\n            - text\n      x-tags:\n        - Models\n    MetaPaginationObject:\n      type: object\n      properties:\n        pagination:\n          type: object\n          properties:\n            count:\n              type: integer\n              example: 5\n              minimum: 0\n            current_page:\n              type: integer\n              example: 1\n              minimum: 1\n            links:\n              type: object\n              properties:\n                current:\n                  type: string\n                  example: '?limit=5\u0026page=1'\n                next:\n                  type: string\n                  example: '?limit=5\u0026page=2'\n            per_page:\n              type: integer\n              example: 5\n              minimum: 0\n            total:\n              type: integer\n              example: 246\n              minimum: 0\n            total_pages:\n              type: integer\n              example: 50\n              minimum: 0\n      x-internal: false\n    ProductSortEnumValues:\n      description: The available sorts for PLP pages.\n      type: string\n      default: bestselling\n      enum:\n        - featured\n        - bestselling\n        - newest\n        - atoz\n        - ztoa\n        - highestprice\n        - lowestprice\n        - bestreviewed\n      title: ProductSortEnumValues\n      x-internal: false\n    RobotsTxtSettings:\n      type: object\n      properties:\n        robots_txt_ssl:\n          type: string\n      x-internal: false\n    SEOSettings:\n      type: object\n      properties:\n        meta_description:\n          type: string\n        meta_keywords:\n          type: string\n        page_title:\n          type: string\n        www_redirect:\n          type: string\n          enum:\n            - www\n            - no-www\n            - none\n      x-internal: false\n    SearchFilterOverrideContextIdentifier:\n      type: object\n      properties:\n        category_id:\n          type: integer\n        channel_id:\n          type: integer\n      title: ContextIdentifier\n      x-internal: false\n    SearchFilterOverrideScopeIdentifier:\n      type: object\n      properties:\n        category_id:\n          type: integer\n        channel_id:\n          type: integer\n      title: ScopeIdentifier\n      x-internal: false\n    StoreProfile:\n      description: 'The basic profile settings for a store, used to give the shopper information about the business from which they are purchasing.'\n      type: object\n      x-internal: false\n      properties:\n        store_address:\n          type: string\n        store_address_type:\n          $ref: '#/components/schemas/AddressTypeEnumValues'\n        store_email:\n          type: string\n        store_name:\n          type: string\n        store_phone:\n          type: string\n    StorefrontCategorySettings:\n      type: object\n      properties:\n        category_tree_depth:\n          type: integer\n          maximum: 8\n          minimum: 1\n        default_product_sort:\n          $ref: '#/components/schemas/ProductSortEnumValues'\n        listing_mode:\n          $ref: '#/components/schemas/CategoryListingModeEnumValues'\n      x-tags:\n        - Models\n    StorefrontProductSettings:\n      type: object\n      properties:\n        default_preorder_message:\n          type: string\n          example: preorder message\n        show_add_to_cart_link:\n          type: boolean\n        show_add_to_cart_qty_box:\n          type: boolean\n        show_add_to_wishlist:\n          type: boolean\n        show_breadcrumbs_product_pages:\n          type: string\n          enum:\n            - show_one\n            - show_none\n        show_product_brand:\n          type: boolean\n        show_product_price:\n          type: boolean\n        show_product_rating:\n          type: boolean\n        show_product_shipping:\n          type: boolean\n        show_product_sku:\n          type: boolean\n        show_product_weight:\n          type: boolean\n      title: StorefrontProductSettings\n      x-tags:\n        - Models\n    StorefrontSearchSettings:\n      type: object\n      properties:\n        content_product_sort:\n          $ref: '#/components/schemas/ContentSortEnumValues'\n        default_product_sort:\n          $ref: '#/components/schemas/ProductSortEnumValues'\n        product_filtering_enabled:\n          description: Controls whether Product Filtering feature is active on the storefront. Only supports manipulation on a global level.\n          type: boolean\n        search_suggest:\n          type: boolean\n      x-internal: false\n    StorefrontSecuritySettings:\n      type: object\n      properties:\n        csp_header:\n          type: object\n          properties:\n            enabled:\n              type: boolean\n            header_value:\n              type: string\n        hsts:\n          type: object\n          properties:\n            enabled:\n              type: boolean\n            include_preload:\n              type: boolean\n            include_subdomains:\n              type: boolean\n            max_age:\n              $ref: '#/components/schemas/HSTSMaxAgeEnumValues'\n        sitewide_https_enabled:\n          type: boolean\n        x_frame_options_header:\n          type: object\n          properties:\n            allowed_url:\n              type: string\n            enabled:\n              type: boolean\n            setting:\n              type: string\n              enum:\n                - deny\n                - same_origin\n                - allow_from_url\n      title: StorefrontSecuritySettings\n      x-internal: false\n    StorefrontStatus:\n      type: object\n      properties:\n        down_for_maintenance_message:\n          type: string\n        prelaunch_message:\n          type: string\n        prelaunch_password:\n          description: A read-only value representing the auto-generated storefront password.\n          type: string\n      title: ''\n      x-internal: false\n  responses:\n    200-storefront-product-settings:\n      description: OK. `null` indicates that a particular field has not been overridden on a channel level when channel level settings are requested\n      content:\n        application/json:\n          examples: {}\n          schema:\n            type: object\n            properties:\n              data:\n                $ref: '#/components/schemas/StorefrontProductSettings'\n              meta:\n                type: object\n    422ErrorResp:\n      description: |\n        `422 Unprocessable Entity` Provided settings could not be applied for some reason - detailed errors in the response.\n      content:\n        application/json:\n          examples: {}\n          schema:\n            description: ''\n            type: object\n            properties:\n              errors:\n                type: object\n                properties:\n                  '':\n                    type: string\n                    example: 'Incorrect value [current__only], it should match one of: current_category_only,child_categories_if_category_empty,child_categories; Incorrect value [besling], it should match one of: featured,newest,bestselling,atoz,ztoa,bestreviewed,lowestprice,highestprice'\n                    minLength: 1\n              status:\n                type: number\n                example: 422\n              title:\n                type: string\n                example: JSON data is missing or invalid\n                minLength: 1\n              type:\n                type: string\n                example: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'\n                minLength: 1\n            x-examples:\n              example-1:\n                errors:\n                  '': 'Incorrect value [], it should match one of: current_category_only,child_categories_if_category_empty,child_categories; Incorrect value [], it should match one of: featured,newest,bestselling,atoz,ztoa,bestreviewed,lowestprice,highestprice'\n                status: 422\n                title: JSON data is missing or invalid\n                type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'\n  securitySchemes:\n    X-Auth-Token:\n      description: |-\n        Authenticate requests by including an [OAuth](/api-docs/getting-started/authentication/rest-api-authentication) `access_token` in the request header.\n\n        ```http\n        GET /stores/{{STORE_HASH}}/v3/settings/storefront/status\n        host: api.bigcommerce.com\n        Accept: application/json\n        X-Auth-Token: {{ACCESS_TOKEN}}\n        ```\n\n        ### OAuth Scopes\n        |  **UI Name** | **Permission** | **Parameter** |\n        | --- | --- | --- |\n        |  Information \u0026 Settings | modify | `store_v2_information` |\n        |  Information \u0026 Settings | read-only | `store_v2_information_read_only` |\n      in: header\n      name: X-Auth-Token\n      type: apiKey\ntags:\n  - name: Email Statuses\n  - name: Search Filters\n  - name: Store Locale\n  - name: Storefront Category\n  - name: Storefront Robotstxt\n  - name: Storefront Search\n  - name: Storefront Security\n  - name: Storefront SEO\n  - name: Storefront Status\n  - name: Analytics\n  - name: Catalog\n  - name: Inventory\n  - name: Logo\n  - name: Logo Image\n  - name: Favicon Image\n  - name: Store Profile\n  - name: Storefront Product\nsecurity:\n  - X-Auth-Token: []\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /stores/{store_hash}/v3/settings/inventory/notifications: get: responses: 200: content: application/json: schema: parse schema: allOf: [1]: parse schema: resolve \"https://raw.githubusercontent.com/bigcommerce/api-specs/master/reference/global_refs.yaml#/components/schemas/meta_Empty\": find schema: external base \"https://raw.githubusercontent.com/bigcommerce/api-specs/master/reference/global_refs.yaml\" is not supported"
}