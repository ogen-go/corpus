{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "wowza.com-1-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/wowza.com-1-swagger.yaml",
			"byteSize": 643815,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    name: Contact Us\n    url: https://www.wowza.com/contact\n    x-twitter: wowzamedia\n  description: \u003e\n    \n    # About the REST API\n\n\n    The Wowza Streaming Cloud\u003csup\u003eTM\u003c/sup\u003e REST API (application programming interface) offers complete programmatic control over live streams, transcoders, stream sources, and stream targets. Anything you can do in the Wowza Streaming Cloud UI can also be achieved by making HTTP-based requests to cloud-based servers through the REST API.\n\n\n    The Wowza Streaming Cloud REST API features *cross-origin resource sharing*, or CORS.\n\n    CORS is a [W3C specification](https://www.w3.org/TR/cors/) that provides headers in HTTP requests to enable a web server to safely make a network request to another domain.\n\n\n    In order to protect shared resources, the Wowza Streaming Cloud REST API is subject to limits. For details, see [Wowza Streaming Cloud REST API limits](https://www.wowza.com/docs/wowza-streaming-cloud-rest-api-limits).\n\n    # About this documentation\n\n    This reference documentation is based on the open-source [Swagger framework](http://swagger.io/specification/).\n\n    It allows you to view the operations, parameters, and request and reponse schemas for every resource. Request samples are presented in cURL (Shell) and JavaScript; some samples also include just the JSON object. Response samples are all JSON.\n\n\n    For more information and examples on using the Wowza Streaming Cloud REST API, see our [library of Wowza Streaming Cloud REST API technical articles](https://www.wowza.com/docs/wowza-streaming-cloud-rest-api).\n\n\n    # Query requirements\n\n    The Wowza Streaming Cloud REST API uses HTTP requests to retrieve data from cloud-based servers. Requests must contain proper JSON, two authentication keys, and the correct version number in the base path.\n\n\n    ## JSON\n\n    The Wowza Streaming Cloud REST API uses the [JSON API specification](http://jsonapi.org/format/) to request and return data. This means requests must include the header `Content-Type: application/json` and must include a single resource object in JSON format as primary data.\n\n\n    Responses include HTTP status codes that indicate whether the query was successful. If there was an error, a description explains the problem so that you can fix it and try again.\n\n\n    ## Authentication\n\n    Requests to the Wowza Streaming Cloud REST API must be authenticated with two keys: an API key and an access key. Each key is a 64-character alphanumeric string that you can find on the **API Access** page in Wowza Streaming Cloud.\n\n\n    Use the `wsc-api-key` and `wsc-access-key` headers to authenticate requests, like this (in cURL):\n\n\n    ```bash\n\n    curl -H 'wsc-api-key: [64-character-api-key-goes-here]' -H 'wsc-access-key: [64-character-access-key-goes-here]'\n\n    ```\n\n\n    \u003c!-- ReDoc-Inject: \u003csecurity-definitions\u003e --\u003e\n\n\n    ## Version\n\n    The Wowza Streaming Cloud API is currently at version 1.0.0. Use `v1` in your base path in every request, like this path to the live_streams endpoint:\n\n    ```\n\n    https://api.cloud.wowza.com/api/v1/live_streams\n\n    ```\n\n    ## Example query\n\n    Here is a complete example POST request, in cURL, with proper JSON syntax, headers, authentication, and version information:\n\n    ```bash\n\n    curl -H 'wsc-api-key: [64-character-api-key-goes-here]' -H 'wsc-access-key: [64-character-access-key-goes-here]'\n      -H 'Content-Type: application/json' -X POST -d '{\n        \"live_stream\": {\n          \"name\": \"My live Stream\",\n          \"...\": \"...\"\n        }\n      }' https://api.cloud.wowza.com/api/v1/live_streams\n    ```\n  license:\n    name: Terms of Use\n    url: https://www.wowza.com/legal/terms-of-use\n  termsOfService: http://www.wowza.com/legal/terms-of-use\n  title: Wowza Streaming Cloud REST API Reference Documentation\n  version: \"1\"\n  x-apisguru-categories:\n    - media\n  x-logo:\n    url: https://twitter.com/wowzamedia/profile_image?size=original\n  x-origin:\n    - format: swagger\n      url: https://sandbox.cloud.wowza.com/en/docs/api/v1\n      version: \"2.0\"\n  x-providerName: wowza.com\nexternalDocs:\n  description: \"Quick Start: How to broadcast a live stream by using the Wowza Streaming\n    Cloud REST API\"\n  url: https://www.wowza.com/docs/how-to-broadcast-a-live-stream-by-using-the-wowza-streaming-cloud-rest-api\nsecurity:\n  - wsc-api-key: []\n  - wsc-access-key: []\ntags:\n  - description: Operations related to live streams.\n    name: live_streams\n    x-displayName: Live Streams\n  - description: Operations related to players, which are created through the /live_streams\n      resource.\n    name: players\n    x-displayName: Players\n  - description: Operations related to recordings.\n    name: recordings\n    x-displayName: Recordings\n  - description: Operations related to schedules.\n    name: schedules\n    x-displayName: Schedules\n  - description: Operations related to stream sources.\n    name: stream_sources\n    x-displayName: Stream Sources\n  - description: Operations related to stream targets.\n    name: stream_targets\n    x-displayName: Stream Targets\n  - description: Operations related to transcoders, output renditions, and output stream\n      targets.\n    name: transcoders\n    x-displayName: Transcoders\n  - description: Operations related to network usage for an account.\n    name: network\n    x-displayName: Network\n  - description: Operations related to stream processing time for an account.\n    name: processing time\n    x-displayName: Processing Time\n  - description: Operations related to the Swagger specification.\n    name: specs\n    x-displayName: Specs\n  - description: Operations related to peak recording storage for an account.\n    name: storage\n    x-displayName: Storage\n  - description: Operations related to stream target viewer data.\n    name: viewer data\n    x-displayName: Viewer Data\npaths:\n  /api/v1/specs:\n    get:\n      description: |\n        This operation shows the details of the Swagger specification.\n      operationId: specs\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Spec\"\n      security:\n        - {}\n      summary: Fetch Swagger information\n      tags:\n        - specs\n      x-code-samples:\n        - lang: Shell\n          source: |\n            // Using cURL\n            curl -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/specs\"\n        - lang: JavaScript\n          source: \u003e\n            // Using Node.js\n\n            var https = require('https');\n\n            https.get('https://api-sandbox.cloud.wowza.com/api/v1/specs', function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n  /live_streams:\n    get:\n      description: This operation shows the details of all of your live streams.\n      operationId: listLiveStreams\n      parameters:\n        - $ref: \"#/components/parameters/page\"\n        - $ref: \"#/components/parameters/per_page\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/live_streams\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n      summary: Fetch all live streams\n      tags:\n        - live_streams\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/live_streams\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/live_streams',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n    post:\n      description: This operation creates a live stream.\n      operationId: createLiveStream\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/live_stream_create_input\"\n        description: Provide the details of the live stream to create in the body of the\n          request.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  live_stream:\n                    $ref: \"#/components/schemas/live_stream\"\n                required:\n                  - live_stream\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Create a live stream\n      tags:\n        - live_streams\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"POST\" \"https://api-sandbox.cloud.wowza.com/api/v1/live_streams\" \\\n                 -d $'{\n              \"live_stream\": {\n                \"name\": \"My New Live Stream\",\n                \"transcoder_type\": \"transcoded\",\n                \"billing_mode\": \"pay_as_you_go\",\n                \"broadcast_location\": \"us_west_california\",\n                \"encoder\": \"other_rtmp\",\n                \"delivery_method\": \"push\",\n                \"aspect_ratio_width\": 1920,\n                \"aspect_ratio_height\": 1080\n              }\n            }'\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/live_streams',\n              method: 'POST',\n              headers: {\n                'api-key': 'a726c273...',\n                'access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n            req.write(JSON.stringify({\n              \"live_stream\": {\n                \"name\": \"My New Live Stream\"\n              }\n            }));\n            req.end();\n  \"/live_streams/{id}\":\n    delete:\n      description: This operation deletes a live stream, including all assigned outputs and\n        targets.\n      operationId: deleteLiveStream\n      parameters:\n        - description: The unique alphanumeric string that identifies the live stream.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Delete a live stream\n      tags:\n        - live_streams\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"DELETE\" \"https://api-sandbox.cloud.wowza.com/api/v1/live_streams/2adffc17\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/live_streams/2adffc17',\n              method: 'DELETE',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              // no data being returned, just: 204 NO CONTENT\n              console.log(res.statusCode);\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n    get:\n      description: This operation shows the details of a specific live stream.\n      operationId: showLiveStream\n      parameters:\n        - description: The unique alphanumeric string that identifies the live stream.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  live_stream:\n                    $ref: \"#/components/schemas/live_stream\"\n                required:\n                  - live_stream\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch a live stream\n      tags:\n        - live_streams\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/live_streams/2adffc17\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/live_streams/2adffc17',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n    patch:\n      description: This operation updates a live stream.\n      operationId: updateLiveStream\n      parameters:\n        - description: The unique alphanumeric string that identifies the live stream.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/live_stream_update_input\"\n        description: Provide the details of the live stream to update in the body of the\n          request.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  live_stream:\n                    $ref: \"#/components/schemas/live_stream\"\n                required:\n                  - live_stream\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Update a live stream\n      tags:\n        - live_streams\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"PATCH\" \"https://api-sandbox.cloud.wowza.com/api/v1/live_streams/2adffc17\" \\\n                 -d $'{\n              \"live_stream\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }'\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/live_streams/2adffc17',\n              method: 'PATCH',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n            req.write(JSON.stringify({\n              \"live_stream\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }));\n            req.end();\n  \"/live_streams/{id}/regenerate_connection_code\":\n    put:\n      description: This operation regenerates the connection code of a live stream.\n      operationId: regenerateConnectionCodeLiveStream\n      parameters:\n        - description: The unique alphanumeric string that identifies the live stream.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  live_stream:\n                    properties:\n                      connection_code:\n                        description: A six-character, alphanumeric string that allows\n                          certain encoders, including Wowza Streaming Engine and\n                          the Wowza GoCoder app, to connect with Wowza Streaming\n                          Cloud. The code can be used once and expires 24 hours\n                          after it's created.\n                        example: 0cd2e8\n                        type: string\n                    title: live_stream\n                    type: object\n                required:\n                  - live_stream\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Regenerate the connection code for a live stream\n      tags:\n        - live_streams\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"PUT\" \"https://api-sandbox.cloud.wowza.com/api/v1/live_streams/2adffc17/regenerate_connection_code\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/live_streams/2adffc17/regenerate_connection_code',\n              method: 'PUT',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n            req.end();\n  \"/live_streams/{id}/reset\":\n    put:\n      description: This operation resets a live stream.\n      operationId: resetLiveStream\n      parameters:\n        - description: The unique alphanumeric string that identifies the live stream.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  live_stream:\n                    properties:\n                      state:\n                        description: The state of the live stream.\n                        enum:\n                          - started\n                          - stopped\n                          - starting\n                          - stopping\n                          - resetting\n                        example: resetting\n                        type: string\n                    title: live_stream\n                    type: object\n                required:\n                  - live_stream\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Reset a live stream\n      tags:\n        - live_streams\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"PUT\" \"https://api-sandbox.cloud.wowza.com/api/v1/live_streams/2adffc17/reset\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/live_streams/2adffc17/reset',\n              method: 'PUT',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n            req.end();\n  \"/live_streams/{id}/start\":\n    put:\n      description: This operation starts a live stream.\n      operationId: startLiveStream\n      parameters:\n        - description: The unique alphanumeric string that identifies the live stream.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  live_stream:\n                    properties:\n                      state:\n                        description: The state of the live stream.\n                        enum:\n                          - started\n                          - stopped\n                          - starting\n                          - stopping\n                          - resetting\n                        example: starting\n                        type: string\n                    title: live_stream\n                    type: object\n                required:\n                  - live_stream\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Start a live stream\n      tags:\n        - live_streams\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"PUT\" \"https://api-sandbox.cloud.wowza.com/api/v1/live_streams/2adffc17/start\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/live_streams/2adffc17/start',\n              method: 'PUT',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n            req.end();\n  \"/live_streams/{id}/state\":\n    get:\n      description: This operation shows the current state of a live stream.\n      operationId: showLiveStreamState\n      parameters:\n        - description: The unique alphanumeric string that identifies the live stream.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  live_stream:\n                    properties:\n                      state:\n                        description: The state of the live stream.\n                        enum:\n                          - started\n                          - stopped\n                          - starting\n                          - stopping\n                          - resetting\n                        example: stopped\n                        type: string\n                    title: live_stream\n                    type: object\n                required:\n                  - live_stream\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch the state of a live stream\n      tags:\n        - live_streams\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/live_streams/2adffc17/state\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/live_streams/2adffc17/state',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n  \"/live_streams/{id}/stats\":\n    get:\n      description: This operation returns a hash of metrics keys, each of which identifies\n        a status, text description, unit, and value.\n      operationId: showLiveStreamStats\n      parameters:\n        - description: The unique alphanumeric string that identifies the live stream.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  live_stream:\n                    $ref: \"#/components/schemas/shm_metrics\"\n                required:\n                  - live_stream\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch metrics for an active live stream\n      tags:\n        - live_streams\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/live_streams/2adffc17/stats\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/live_streams/2adffc17/stats',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n  \"/live_streams/{id}/stop\":\n    put:\n      description: This operation stops a live stream.\n      operationId: stopLiveStream\n      parameters:\n        - description: The unique alphanumeric string that identifies the live stream.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  live_stream:\n                    properties:\n                      state:\n                        description: The state of the live stream.\n                        enum:\n                          - started\n                          - stopped\n                          - starting\n                          - stopping\n                          - resetting\n                        example: stopped\n                        type: string\n                    title: live_stream\n                    type: object\n                required:\n                  - live_stream\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Stop a live stream\n      tags:\n        - live_streams\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"PUT\" \"https://api-sandbox.cloud.wowza.com/api/v1/live_streams/2adffc17/stop\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/live_streams/2adffc17/stop',\n              method: 'PUT',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n            req.end();\n  \"/live_streams/{id}/thumbnail_url\":\n    get:\n      description: This operation shows the thumbnail URL of a started live stream.\n      operationId: showLiveStreamThumbnailUrl\n      parameters:\n        - description: The unique alphanumeric string that identifies the live stream.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  live_stream:\n                    properties:\n                      thumbnail_url:\n                        description: The URL to receive the preview thumbnail.\n                        example: https://cloud.wowza.com/proxy/stats/?target=10.11.12.13\u0026app=app-79b8\u0026stream=99b62146@130135.stream\u0026media=json\n                        type: string\n                    title: live_stream\n                    type: object\n                required:\n                  - live_stream\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch the thumbnail URL of a live stream\n      tags:\n        - live_streams\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/live_streams/2adffc17/thumbnail_url\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/live_streams/2adffc17/thumbnail_url',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n  /players:\n    get:\n      description: This operation shows the details of all of your players.\n      operationId: listPlayers\n      parameters:\n        - $ref: \"#/components/parameters/page\"\n        - $ref: \"#/components/parameters/per_page\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/players\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n      summary: Fetch all players\n      tags:\n        - players\n      x-code-samples:\n        - lang: Shell\n          source: |\n            // Using cURL\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/players\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/players',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n  \"/players/{id}\":\n    get:\n      description: This operation shows details of a specific player.\n      operationId: showPlayer\n      parameters:\n        - description: The unique alphanumeric string that identifies the player.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  player:\n                    $ref: \"#/components/schemas/player\"\n                required:\n                  - player\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch a player\n      tags:\n        - players\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/players/2adffc17\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/players/2adffc17',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n    patch:\n      description: This operation updates a player.\n      operationId: updatePlayer\n      parameters:\n        - description: The unique alphanumeric string that identifies the player.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/player_update_input\"\n        description: Provide the details of the player to update in the body of the request.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  player:\n                    $ref: \"#/components/schemas/player\"\n                required:\n                  - player\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Update a player\n      tags:\n        - players\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"PATCH\" \"https://api-sandbox.cloud.wowza.com/api/v1/players/2adffc17\" \\\n                 -d $'{\n              \"player\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }'\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/players/2adffc17',\n              method: 'PATCH',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n            req.write(JSON.stringify({\n              \"player\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }));\n            req.end();\n  \"/players/{id}/rebuild\":\n    post:\n      description: This operation rebuilds the player with the current configuration.\n      operationId: requestPlayerRebuild\n      parameters:\n        - description: The unique alphanumeric string that identifies the player.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  player:\n                    properties:\n                      state:\n                        description: The state of the player.\n                        enum:\n                          - requested\n                          - already_requested\n                          - activated\n                          - archived\n                        example: requested\n                        type: string\n                    title: player\n                    type: object\n                required:\n                  - player\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Rebuild player code\n      tags:\n        - players\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"POST\" \"https://api-sandbox.cloud.wowza.com/api/v1/players/2adffc17/rebuild\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/players/2adffc17/rebuild',\n              method: 'POST',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n            req.end();\n  \"/players/{id}/state\":\n    get:\n      description: This operation shows the current state of a player.\n      operationId: showPlayerState\n      parameters:\n        - description: The unique alphanumeric string that identifies the player.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  player:\n                    properties:\n                      state:\n                        description: The state of the player.\n                        enum:\n                          - requested\n                          - already_requested\n                          - activated\n                          - archived\n                        example: activated\n                        type: string\n                    title: player\n                    type: object\n                required:\n                  - player\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch the state of a player\n      tags:\n        - players\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/players/2adffc17/state\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/players/2adffc17/state',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n  \"/players/{player_id}/urls\":\n    get:\n      description: This operation shows the details of all player URLs.\n      operationId: listPlayerUrls\n      parameters:\n        - description: The unique alphanumeric string that identifies the player.\n          in: path\n          name: player_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/urls\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch all player URLs\n      tags:\n        - players\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/players/2adffc17/urls\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/players/2adffc17/urls',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n    post:\n      description: This operation creates a new player URL.\n      operationId: createPlayerUrl\n      parameters:\n        - description: The unique alphanumeric string that identifies the player.\n          in: path\n          name: player_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/url_create_input\"\n        description: Provide the details of the player URL to create in the body of the\n          request.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  url:\n                    $ref: \"#/components/schemas/url\"\n                required:\n                  - url\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Create a player URL\n      tags:\n        - players\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"POST\" \"https://api-sandbox.cloud.wowza.com/api/v1/players/2adffc17/urls\" \\\n                 -d $'{\n              \"player\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }'\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/players/2adffc17/urls',\n              method: 'POST',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n            req.write(JSON.stringify({\n              \"player\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }));\n            req.end();\n  \"/players/{player_id}/urls/{id}\":\n    delete:\n      description: \"This operation deletes a player URL. \"\n      operationId: deletePlayerUrl\n      parameters:\n        - description: The unique alphanumeric string that identifies the player.\n          in: path\n          name: player_id\n          required: true\n          schema:\n            type: string\n        - description: The unique alphanumeric string that identifies the player URL.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Delete a player URL\n      tags:\n        - players\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"DELETE\" \"https://api-sandbox.cloud.wowza.com/api/v1/players/2adffc17/urls/cupertino-cupertinoProgramDateTimeOffset\"\n        - lang: JavaScript\n          source: \u003e\n            // Using Node.js\n\n            var https = require('https');\n\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/players/2adffc17/urls/cupertino-cupertinoProgramDateTimeOffset',\n              method: 'DELETE',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n\n            https.get(options, function(res) {\n              // no data being returned, just: 204 NO CONTENT\n              console.log(res.statusCode);\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n    get:\n      description: This operation shows the details of a player URL.\n      operationId: showPlayerUrl\n      parameters:\n        - description: The unique alphanumeric string that identifies the player.\n          in: path\n          name: player_id\n          required: true\n          schema:\n            type: string\n        - description: The unique alphanumeric string that identifies the player URL.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  url:\n                    $ref: \"#/components/schemas/url\"\n                required:\n                  - url\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch a player URL\n      tags:\n        - players\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/players/2adffc17/urls/cupertino-cupertinoProgramDateTimeOffset\"\n        - lang: JavaScript\n          source: \u003e\n            // Using Node.js\n\n            var https = require('https');\n\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/players/2adffc17/urls/cupertino-cupertinoProgramDateTimeOffset',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n    patch:\n      description: This operation updates a player URL.\n      operationId: updatePlayerUrl\n      parameters:\n        - description: The unique alphanumeric string that identifies the player.\n          in: path\n          name: player_id\n          required: true\n          schema:\n            type: string\n        - description: The unique alphanumeric string that identifies the player URL.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/url_update_input\"\n        description: Provide the details of the player URL to update in the body of the\n          request.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  url:\n                    $ref: \"#/components/schemas/url\"\n                required:\n                  - url\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Update a player URL\n      tags:\n        - players\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"PATCH\" \"https://api-sandbox.cloud.wowza.com/api/v1/players/2adffc17/urls/cupertino-cupertinoProgramDateTimeOffset\" \\\n                 -d $'{\n              \"player\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }'\n        - lang: JavaScript\n          source: \u003e\n            // Using Node.js\n\n            var https = require('https');\n\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/players/2adffc17/urls/cupertino-cupertinoProgramDateTimeOffset',\n              method: 'PATCH',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n\n            req.write(JSON.stringify({\n              \"player\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }));\n\n            req.end();\n  /recordings:\n    get:\n      description: This operation shows the details of all of your recordings.\n      operationId: listRecordings\n      parameters:\n        - $ref: \"#/components/parameters/page\"\n        - $ref: \"#/components/parameters/per_page\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/recordings\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n      summary: Fetch all recordings\n      tags:\n        - recordings\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/recordings\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/recordings',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n  \"/recordings/{id}\":\n    delete:\n      description: This operation deletes a recording.\n      operationId: deleteRecording\n      parameters:\n        - description: The unique alphanumeric string that identifies the recording.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Delete a recording\n      tags:\n        - recordings\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"DELETE\" \"https://api-sandbox.cloud.wowza.com/api/v1/recordings/2adffc17\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/recordings/2adffc17',\n              method: 'DELETE',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              // no data being returned, just: 204 NO CONTENT\n              console.log(res.statusCode);\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n    get:\n      description: This operation shows the details of a specific recording.\n      operationId: showRecording\n      parameters:\n        - description: The unique alphanumeric string that identifies the recording.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  recording:\n                    $ref: \"#/components/schemas/recording\"\n                required:\n                  - recording\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch a recording\n      tags:\n        - recordings\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/recordings/2adffc17\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/recordings/2adffc17',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n  \"/recordings/{id}/state\":\n    get:\n      description: This operation shows the current state of a recording.\n      operationId: showRecordingState\n      parameters:\n        - description: The unique alphanumeric string that identifies the recording.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  recording:\n                    properties:\n                      state:\n                        description: The state of the recording.\n                        enum:\n                          - uploading\n                          - converting\n                          - removing\n                          - completed\n                          - failed\n                        example: completed\n                        type: string\n                    title: recording\n                    type: object\n                required:\n                  - recording\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch the state of a recording\n      tags:\n        - recordings\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/recordings/2adffc17/state\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/recordings/2adffc17/state',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n  /schedules:\n    get:\n      description: This operation shows the details of all of your schedules.\n      operationId: listSchedules\n      parameters:\n        - $ref: \"#/components/parameters/page\"\n        - $ref: \"#/components/parameters/per_page\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/schedules\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n      summary: Fetch all schedules\n      tags:\n        - schedules\n      x-code-samples:\n        - lang: Shell\n          source: |\n            // Using cURL\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/schedules\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/schedules',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n    post:\n      description: This operation creates a schedule.\n      operationId: createSchedule\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/schedule_create_input\"\n        description: Provide the details of the schedule to create in the body of the\n          request.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  schedule:\n                    $ref: \"#/components/schemas/schedule\"\n                required:\n                  - schedule\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Create a schedule\n      tags:\n        - schedules\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"POST\" \"https://api-sandbox.cloud.wowza.com/api/v1/schedules\" \\\n                 -d $'{\n              \"schedule\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }'\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/schedules',\n              method: 'POST',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n            req.write(JSON.stringify({\n              \"schedule\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }));\n            req.end();\n  \"/schedules/{id}\":\n    delete:\n      description: This operation deletes a schedule.\n      operationId: deleteSchedule\n      parameters:\n        - description: The unique alphanumeric string that identifies the schedule.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Delete a schedule\n      tags:\n        - schedules\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"DELETE\" \"https://api-sandbox.cloud.wowza.com/api/v1/schedules/2adffc17\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/schedules/2adffc17',\n              method: 'DELETE',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              // no data being returned, just: 204 NO CONTENT\n              console.log(res.statusCode);\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n    get:\n      description: This operation shows the details of a specific schedule.\n      operationId: showSchedule\n      parameters:\n        - description: The unique alphanumeric string that identifies the schedule.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  schedule:\n                    $ref: \"#/components/schemas/schedule\"\n                required:\n                  - schedule\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch a schedule\n      tags:\n        - schedules\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/schedules/2adffc17\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/schedules/2adffc17',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n    patch:\n      description: This operation updates a schedule.\n      operationId: updateSchedule\n      parameters:\n        - description: The unique alphanumeric string that identifies the schedule.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/schedule_update_input\"\n        description: Provide the details of the schedule to update in the body of the\n          request.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  schedule:\n                    $ref: \"#/components/schemas/schedule\"\n                required:\n                  - schedule\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Update a schedule\n      tags:\n        - schedules\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"PATCH\" \"https://api-sandbox.cloud.wowza.com/api/v1/schedules/2adffc17\" \\\n                 -d $'{\n              \"schedule\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }'\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/schedules/2adffc17',\n              method: 'PATCH',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n            req.write(JSON.stringify({\n              \"schedule\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }));\n            req.end();\n  \"/schedules/{id}/disable\":\n    put:\n      description: This operation disables a schedule.\n      operationId: disableSchedule\n      parameters:\n        - description: The unique alphanumeric string that identifies the schedule.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  schedule:\n                    properties:\n                      state:\n                        description: A schedule must be \u003cstrong\u003eenabled\u003c/strong\u003e to run.\n                          Specify \u003cstrong\u003eenabled\u003c/strong\u003e to run the schedule\n                          or \u003cstrong\u003edisabled\u003c/strong\u003e to turn off the schedule\n                          so that it doesn't run.\n                        enum:\n                          - enabled\n                          - disabled\n                          - expired\n                        example: disabled\n                        type: string\n                    title: schedule\n                    type: object\n                required:\n                  - schedule\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Disable a schedule\n      tags:\n        - schedules\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"PUT\" \"https://api-sandbox.cloud.wowza.com/api/v1/schedules/2adffc17/disable\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/schedules/2adffc17/disable',\n              method: 'PUT',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n            req.end();\n  \"/schedules/{id}/enable\":\n    put:\n      description: This operation enables a schedule.\n      operationId: enableSchedule\n      parameters:\n        - description: The unique alphanumeric string that identifies the schedule.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  schedule:\n                    properties:\n                      state:\n                        description: A schedule must be \u003cstrong\u003eenabled\u003c/strong\u003e to run.\n                          Specify \u003cstrong\u003eenabled\u003c/strong\u003e to run the schedule\n                          or \u003cstrong\u003edisabled\u003c/strong\u003e to turn off the schedule\n                          so that it doesn't run.\n                        enum:\n                          - enabled\n                          - disabled\n                          - expired\n                        example: enabled\n                        type: string\n                    title: schedule\n                    type: object\n                required:\n                  - schedule\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Enable a schedule\n      tags:\n        - schedules\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"PUT\" \"https://api-sandbox.cloud.wowza.com/api/v1/schedules/2adffc17/enable\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/schedules/2adffc17/enable',\n              method: 'PUT',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n            req.end();\n  \"/schedules/{id}/state\":\n    get:\n      description: This operation shows the current state of a schedule.\n      operationId: showScheduleState\n      parameters:\n        - description: The unique alphanumeric string that identifies the schedule.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  schedule:\n                    properties:\n                      state:\n                        description: A schedule must be \u003cstrong\u003eenabled\u003c/strong\u003e to run.\n                          Specify \u003cstrong\u003eenabled\u003c/strong\u003e to run the schedule\n                          or \u003cstrong\u003edisabled\u003c/strong\u003e to turn off the schedule\n                          so that it doesn't run.\n                        enum:\n                          - enabled\n                          - disabled\n                          - expired\n                        example: enabled\n                        type: string\n                    title: schedule\n                    type: object\n                required:\n                  - schedule\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch the state of a schedule\n      tags:\n        - schedules\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/schedules/2adffc17/state\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/schedules/2adffc17/state',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n  /stream_sources:\n    get:\n      description: This operation shows the details of all of your stream sources.\n      operationId: listStreamSources\n      parameters:\n        - $ref: \"#/components/parameters/page\"\n        - $ref: \"#/components/parameters/per_page\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/stream_sources\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n      summary: Fetch all stream sources\n      tags:\n        - stream_sources\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/stream_sources\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/stream_sources',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n    post:\n      description: This operation adds a stream source.\n      operationId: createStreamSource\n      requestBody:\n        $ref: \"#/components/requestBodies/stream_source_create_input\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  stream_source:\n                    $ref: \"#/components/schemas/stream_source\"\n                required:\n                  - stream_source\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Add a stream source\n      tags:\n        - stream_sources\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"POST\" \"https://api-sandbox.cloud.wowza.com/api/v1/stream_sources\" \\\n                 -d $'{\n              \"stream_source\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }'\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/stream_sources',\n              method: 'POST',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n            req.write(JSON.stringify({\n              \"stream_source\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }));\n            req.end();\n  /stream_sources/add:\n    post:\n      deprecated: true\n      description: POST /stream_sources/add/ is deprecated. To add a stream source, use\n        POST /stream_sources instead.\n      operationId: addStreamSource\n      requestBody:\n        $ref: \"#/components/requestBodies/stream_source_create_input\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  stream_source:\n                    $ref: \"#/components/schemas/stream_source\"\n                required:\n                  - stream_source\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Deprecated operation\n      tags:\n        - stream_sources\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"POST\" \"https://api-sandbox.cloud.wowza.com/api/v1/stream_sources/add\" \\\n                 -d $'{\n              \"stream_source\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }'\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/stream_sources/add',\n              method: 'POST',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n            req.write(JSON.stringify({\n              \"stream_source\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }));\n            req.end();\n  \"/stream_sources/{id}\":\n    delete:\n      description: This operation deletes a stream source.\n      operationId: deleteStreamSource\n      parameters:\n        - description: The unique alphanumeric string that identifies the stream source.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Delete a stream source\n      tags:\n        - stream_sources\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"DELETE\" \"https://api-sandbox.cloud.wowza.com/api/v1/stream_sources/2adffc17\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/stream_sources/2adffc17',\n              method: 'DELETE',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              // no data being returned, just: 204 NO CONTENT\n              console.log(res.statusCode);\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n    get:\n      description: This operation shows details of a specific stream source.\n      operationId: showStreamSource\n      parameters:\n        - description: The unique alphanumeric string that identifies the stream source.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  stream_source:\n                    $ref: \"#/components/schemas/stream_source\"\n                required:\n                  - stream_source\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch a stream source\n      tags:\n        - stream_sources\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/stream_sources/2adffc17\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/stream_sources/2adffc17',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n    patch:\n      description: This operation updates a stream source.\n      operationId: updateStreamSource\n      parameters:\n        - description: The unique alphanumeric string that identifies the stream source.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/stream_source_update_input\"\n        description: Provide the details of the stream source to update in the body of the\n          request.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  stream_source:\n                    $ref: \"#/components/schemas/stream_source\"\n                required:\n                  - stream_source\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Update a stream source\n      tags:\n        - stream_sources\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"PATCH\" \"https://api-sandbox.cloud.wowza.com/api/v1/stream_sources/2adffc17\" \\\n                 -d $'{\n              \"stream_source\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }'\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/stream_sources/2adffc17',\n              method: 'PATCH',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n            req.write(JSON.stringify({\n              \"stream_source\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }));\n            req.end();\n  /stream_targets:\n    get:\n      description: This operation lists the details of all of your stream targets.\n      operationId: listStreamTargets\n      parameters:\n        - $ref: \"#/components/parameters/page\"\n        - $ref: \"#/components/parameters/per_page\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/stream_targets\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n      summary: Fetch all stream targets\n      tags:\n        - stream_targets\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/stream_targets\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/stream_targets',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n    post:\n      description: \"This operation creates a stream target. There are three types of\n        targets that you can create: \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e for an\n        an external, third-party destination; \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e\n        for a Wowza CDN target; or \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e\n        for an ultra low latency Wowza CDN target. The availability of many\n        parameters depends on the type of target you create.\"\n      operationId: createStreamTarget\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/stream_target_create_input\"\n        description: Provide the details of the stream target to create in the body of the\n          request.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  stream_target:\n                    $ref: \"#/components/schemas/stream_target\"\n                required:\n                  - stream_target\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Create a stream target\n      tags:\n        - stream_targets\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"POST\" \"https://api-sandbox.cloud.wowza.com/api/v1/stream_targets\" \\\n                 -d $'{\n              \"stream_target\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }'\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/stream_targets',\n              method: 'POST',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n            req.write(JSON.stringify({\n              \"stream_target\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }));\n            req.end();\n  /stream_targets/add:\n    post:\n      deprecated: true\n      description: POST /stream_targets/add/ is deprecated. To add a stream target, use\n        POST /stream_targets instead.\n      operationId: addStreamTarget\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/wowza_stream_target_input\"\n        description: Provide the details of the stream target to add in the body of the\n          request.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  stream_target:\n                    $ref: \"#/components/schemas/stream_target\"\n                required:\n                  - stream_target\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Deprecated operation\n      tags:\n        - stream_targets\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"POST\" \"https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/add\" \\\n                 -d $'{\n              \"stream_target\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }'\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/stream_targets/add',\n              method: 'POST',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n            req.write(JSON.stringify({\n              \"stream_target\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }));\n            req.end();\n  \"/stream_targets/{id}\":\n    delete:\n      description: This operation deletes a stream target.\n      operationId: deleteStreamTarget\n      parameters:\n        - description: The unique alphanumeric string that identifies the stream target.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Delete a stream target\n      tags:\n        - stream_targets\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"DELETE\" \"https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/2adffc17\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/stream_targets/2adffc17',\n              method: 'DELETE',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              // no data being returned, just: 204 NO CONTENT\n              console.log(res.statusCode);\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n    get:\n      description: This operation shows details of a specific stream target.\n      operationId: showStreamTarget\n      parameters:\n        - description: The unique alphanumeric string that identifies the stream target.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  stream_target:\n                    $ref: \"#/components/schemas/stream_target\"\n                required:\n                  - stream_target\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch a stream target\n      tags:\n        - stream_targets\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/2adffc17\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/stream_targets/2adffc17',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n    patch:\n      description: This operation updates a stream target.\n      operationId: updateStreamTarget\n      parameters:\n        - description: The unique alphanumeric string that identifies the stream target.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/stream_target_update_input\"\n        description: Provide the details of the stream target to update in the body of the\n          request.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  stream_target:\n                    $ref: \"#/components/schemas/stream_target\"\n                required:\n                  - stream_target\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Update a stream target\n      tags:\n        - stream_targets\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"PATCH\" \"https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/2adffc17\" \\\n                 -d $'{\n              \"stream_target\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }'\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/stream_targets/2adffc17',\n              method: 'PATCH',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n            req.write(JSON.stringify({\n              \"stream_target\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }));\n            req.end();\n  \"/stream_targets/{id}/metrics/current\":\n    get:\n      description: This operation returns a snapshot of the current connection and\n        throughput details for an active target whose \u003cem\u003etype\u003c/em\u003e is\n        \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e. The interval for current\n        metrics is 30 seconds from the moment of the query.\n      operationId: showStreamTargetMetricsCurrent\n      parameters:\n        - description: The unique alphanumeric string that identifies the stream target.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                example:\n                  stream_target:\n                    id: abcd1234\n                    metrics:\n                      average_bytes_in: 456789.123\n                      average_total_connections: 10\n                      created_at: 2017-08-09T16:18:26.000Z\n                      dropped_connections: 0\n                      maximum_total_connections: 20\n                      minimum_total_connections: 0\n                      new_connections: 2\n                properties:\n                  id:\n                    description: The unique alphanumeric string that identifies the stream\n                      target.\n                    example: abcd1234\n                    type: string\n                  metrics:\n                    $ref: \"#/components/schemas/stream_target_metrics\"\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch current health metrics for an active Wowza ultra low latency\n        stream target\n      tags:\n        - stream_targets\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/2adffc17/metrics/current\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/stream_targets/2adffc17/metrics/current',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n  \"/stream_targets/{id}/metrics/historic\":\n    get:\n      description: This operation shows historic connection and throughput details for\n        target whose \u003cem\u003etype\u003c/em\u003e is\n        \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e.\n      operationId: showStreamTargetMetricsHistoric\n      parameters:\n        - description: The unique alphanumeric string that identifies the stream target.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: The start of the range of time used to aggregate the metrics.\n            Express the value by using the ISO 8601 standard of\n            \u003cstrong\u003eYYYY-MM-DDTHH:MM:SSZ\u003c/strong\u003e where \u003cstrong\u003eHH\u003c/strong\u003e is a\n            24-hour clock in UTC.\n          in: query\n          name: from\n          required: false\n          schema:\n            type: string\n        - description: The end of the range of time used to aggregate the metrics. Express\n            the value by using the ISO 8601 standard of\n            \u003cstrong\u003eYYYY-MM-DDTHH:MM:SSZ\u003c/strong\u003e where \u003cstrong\u003eHH\u003c/strong\u003e is a\n            24-hour clock in UTC.\n          in: query\n          name: to\n          required: false\n          schema:\n            type: string\n        - description: The length of time for a block of metrics. The default is **10m**\n            (10 minutes).\n          in: query\n          name: interval\n          required: false\n          schema:\n            type: string\n            enum:\n              - second\n              - minute\n              - hour\n              - day\n              - month\n              - \"#s\"\n              - \"#m\"\n              - \"#h\"\n              - \"#d\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                example:\n                  stream_target:\n                    id: abcd1234\n                    interval: 10m\n                    metrics:\n                      - average_bytes_in: 456789.123\n                        average_total_connections: 10.1\n                        created_at: 2017-08-09T16:19:17.000Z\n                        dropped_connections: 3\n                        maximum_total_connections: 20\n                        minimum_total_connections: 0\n                        new_connections: 8\n                      - average_bytes_in: 456789.123\n                        average_total_connections: 5.25\n                        created_at: 2017-08-09T16:19:07.000Z\n                        dropped_connections: 2\n                        maximum_total_connections: 10\n                        minimum_total_connections: 0\n                        new_connections: 7\n                      - average_bytes_in: 456789.123\n                        average_total_connections: 0\n                        created_at: 2017-08-09T16:18:57.000Z\n                        dropped_connections: 0\n                        maximum_total_connections: 0\n                        minimum_total_connections: 0\n                        new_connections: 0\n                properties:\n                  id:\n                    description: The unique alphanumeric string that identifies the stream\n                      target.\n                    example: abcd1234\n                    type: string\n                  interval:\n                    description: The length of time for a block of metrics. The default is\n                      **10m** (10 minutes).\n                    example: 10m\n                    type: string\n                  metrics:\n                    items:\n                      $ref: \"#/components/schemas/stream_target_metrics\"\n                    type: array\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch historic health metrics for a Wowza ultra low latency stream target\n      tags:\n        - stream_targets\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/2adffc17/metrics/historic\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/stream_targets/2adffc17/metrics/historic',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n  \"/stream_targets/{id}/regenerate_connection_code\":\n    put:\n      description: This operation regenerates the connection code of a stream target.\n      operationId: regenerateConnectionCodeStreamTarget\n      parameters:\n        - description: The unique alphanumeric string that identifies the stream target.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  stream_target:\n                    properties:\n                      connection_code:\n                        description: A six-character, alphanumeric string that allows Wowza\n                          Streaming Engine to send a transcoded stream to a\n                          \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e or for the Wowza\n                          GoCoder app to send an encoded stream to a\n                          \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e. The code\n                          can be used once and expires 24 hours after it's\n                          created.\n                        example: 0cd2e8\n                        type: string\n                    title: stream_target\n                    type: object\n                required:\n                  - stream_target\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Regenerate the connection code for a stream target\n      tags:\n        - stream_targets\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"PUT\" \"https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/2adffc17/regenerate_connection_code\"\n        - lang: JavaScript\n          source: \u003e\n            // Using Node.js\n\n            var https = require('https');\n\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/stream_targets/2adffc17/regenerate_connection_code',\n              method: 'PUT',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n\n            req.end();\n  \"/stream_targets/{stream_target_id}/geoblock\":\n    get:\n      description: This operation shows the details of geo-blocking applied to a specific\n        stream target. Only stream targets whose \u003cem\u003etype\u003c/em\u003e is\n        \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e can be geo-blocked.\n      operationId: showStreamTargetGeoblock\n      parameters:\n        - description: The unique alphanumeric string that identifies the stream target.\n          in: path\n          name: stream_target_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  geoblock:\n                    $ref: \"#/components/schemas/geoblock\"\n                required:\n                  - geoblock\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch geo-blocking for a stream target\n      tags:\n        - stream_targets\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/2adffc17/geoblock\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/stream_targets/2adffc17/geoblock',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n    patch:\n      description: This operation updates the geo-blocking applied to a stream target. Only\n        stream targets whose \u003cem\u003etype\u003c/em\u003e is \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e\n        can be geo-blocked.\n      operationId: updateStreamTargetGeoblock\n      parameters:\n        - description: The unique alphanumeric string that identifies the stream target.\n          in: path\n          name: stream_target_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/geoblock_update_input\"\n        description: Provide the details of the geo-blocking to update in the body of the\n          request.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  geoblock:\n                    $ref: \"#/components/schemas/geoblock\"\n                required:\n                  - geoblock\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Update geo-blocking for a stream target\n      tags:\n        - stream_targets\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"PATCH\" \"https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/2adffc17/geoblock\" \\\n                 -d $'{\n              \"stream_target\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }'\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/stream_targets/2adffc17/geoblock',\n              method: 'PATCH',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n            req.write(JSON.stringify({\n              \"stream_target\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }));\n            req.end();\n    post:\n      description: This operation allows you to block or whitelist viewing of a stream\n        target by geographic location. Only stream targets whose \u003cem\u003etype\u003c/em\u003e\n        is \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e can be geo-blocked. For more\n        information see the technical article [How to geo-block stream targets\n        by using the Wowza Streaming Cloud REST\n        API](https://www.wowza.com/docs/how-to-geo-block-stream-targets-by-using-the-wowza-streaming-cloud-rest-api).\n      operationId: createStreamTargetGeoblock\n      parameters:\n        - description: The unique alphanumeric string that identifies the stream target.\n          in: path\n          name: stream_target_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/geoblock_create_input\"\n        description: Provide the details of the geo-blocking to create in the body of the\n          request.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  geoblock:\n                    $ref: \"#/components/schemas/geoblock\"\n                required:\n                  - geoblock\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Create geo-blocking for a stream target\n      tags:\n        - stream_targets\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"POST\" \"https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/2adffc17/geoblock\" \\\n                 -d $'{\n              \"stream_target\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }'\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/stream_targets/2adffc17/geoblock',\n              method: 'POST',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n            req.write(JSON.stringify({\n              \"stream_target\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }));\n            req.end();\n  \"/stream_targets/{stream_target_id}/properties\":\n    get:\n      description: This operation shows the details of all of the properties assigned to a\n        specific stream target. Properties can be applied to a\n        \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e or\n        \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e whose \u003cem\u003eprovider\u003c/em\u003e is\n        \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e.\n      operationId: listStreamTargetProperties\n      parameters:\n        - description: The unique alphanumeric string that identifies the stream target.\n          in: path\n          name: stream_target_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/stream_target_properties\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Fetch all properties of a stream target\n      tags:\n        - stream_targets\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/2adffc17/properties\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/stream_targets/2adffc17/properties',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n    post:\n      description: This operation creates a property for a stream target. Properties can be\n        applied to a \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e or\n        \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e whose \u003cem\u003eprovider\u003c/em\u003e is\n        \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e. For more information see the\n        technical article [How to set advanced properties by using the Wowza\n        Streaming Cloud REST\n        API](https://www.wowza.com/docs/how-to-set-advanced-properties-by-using-the-wowza-streaming-cloud-rest-api).\n      operationId: createStreamTargetProperty\n      parameters:\n        - description: The unique alphanumeric string that identifies the stream target.\n          in: path\n          name: stream_target_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/stream_target_property_create_input\"\n        description: Provide the details of the property to create in the body of the\n          request.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  property:\n                    $ref: \"#/components/schemas/stream_target_property\"\n                required:\n                  - property\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Create a property for a stream target\n      tags:\n        - stream_targets\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"POST\" \"https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/2adffc17/properties\" \\\n                 -d $'{\n              \"stream_target\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }'\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/stream_targets/2adffc17/properties',\n              method: 'POST',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n            req.write(JSON.stringify({\n              \"stream_target\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }));\n            req.end();\n  \"/stream_targets/{stream_target_id}/properties/{id}\":\n    delete:\n      description: This operation removes a property from a stream target.\n      operationId: deleteStreamTargetProperty\n      parameters:\n        - description: The unique alphanumeric string that identifies the stream target.\n          in: path\n          name: stream_target_id\n          required: true\n          schema:\n            type: string\n        - description: The unique string that identifies the stream target property. The\n            string contains the \u003cem\u003esection\u003c/em\u003e and the \u003cem\u003ekey\u003c/em\u003e, connected\n            by a dash. For example, \u003cstrong\u003ehls-chunkSize\u003c/strong\u003e.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Delete a stream target property\n      tags:\n        - stream_targets\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"DELETE\" \"https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/2adffc17/properties/cupertino-cupertinoProgramDateTimeOffset\"\n        - lang: JavaScript\n          source: \u003e\n            // Using Node.js\n\n            var https = require('https');\n\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/stream_targets/2adffc17/properties/cupertino-cupertinoProgramDateTimeOffset',\n              method: 'DELETE',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n\n            https.get(options, function(res) {\n              // no data being returned, just: 204 NO CONTENT\n              console.log(res.statusCode);\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n    get:\n      description: This operation shows the details of a specific property assigned to a\n        specific stream target. Properties can be applied to a\n        \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e or\n        \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e whose \u003cem\u003eprovider\u003c/em\u003e is\n        \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e.\n      operationId: showStreamTargetProperty\n      parameters:\n        - description: The unique alphanumeric string that identifies the stream target.\n          in: path\n          name: stream_target_id\n          required: true\n          schema:\n            type: string\n        - description: The unique string that identifies the stream target property. The\n            string contains the \u003cem\u003esection\u003c/em\u003e and the \u003cem\u003ekey\u003c/em\u003e, connected\n            by a dash. For example, \u003cstrong\u003ehls-chunkSize\u003c/strong\u003e.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  property:\n                    $ref: \"#/components/schemas/stream_target_property\"\n                required:\n                  - property\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch a property of a stream target\n      tags:\n        - stream_targets\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/2adffc17/properties/cupertino-cupertinoProgramDateTimeOffset\"\n        - lang: JavaScript\n          source: \u003e\n            // Using Node.js\n\n            var https = require('https');\n\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/stream_targets/2adffc17/properties/cupertino-cupertinoProgramDateTimeOffset',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n  \"/stream_targets/{stream_target_id}/token_auth\":\n    get:\n      description: This operation shows the details of the token authorization applied to a\n        stream target. Only stream targets whose \u003cem\u003etype\u003c/em\u003e is\n        \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e can use token authorization.\n      operationId: showStreamTargetTokenAuth\n      parameters:\n        - description: The unique alphanumeric string that identifies the stream target.\n          in: path\n          name: stream_target_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  token_auth:\n                    $ref: \"#/components/schemas/token_auth\"\n                required:\n                  - token_auth\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch token authorization for a stream target\n      tags:\n        - stream_targets\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/2adffc17/token_auth\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/stream_targets/2adffc17/token_auth',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n    patch:\n      description: This operation updates the token authorization applied to a stream\n        target. Only stream targets whose \u003cem\u003etype\u003c/em\u003e is\n        \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e can use token authorization.\n      operationId: updateStreamTargetTokenAuth\n      parameters:\n        - description: The unique alphanumeric string that identifies the stream target.\n          in: path\n          name: stream_target_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/token_auth_update_input\"\n        description: Provide the details of the token authorization to update in the body\n          of the request.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  token_auth:\n                    $ref: \"#/components/schemas/token_auth\"\n                required:\n                  - token_auth\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Update token authorization for a stream target\n      tags:\n        - stream_targets\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"PATCH\" \"https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/2adffc17/token_auth\" \\\n                 -d $'{\n              \"stream_target\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }'\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/stream_targets/2adffc17/token_auth',\n              method: 'PATCH',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n            req.write(JSON.stringify({\n              \"stream_target\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }));\n            req.end();\n    post:\n      description: This operation creates token authorization for a stream target. Only\n        stream targets whose \u003cem\u003etype\u003c/em\u003e is \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e\n        can use token authorization. For more information see the technical\n        article [How to protect stream targets with token authorization by using\n        the Wowza Streaming Cloud REST\n        API](https://www.wowza.com/docs/how-to-protect-streams-with-token-authorization-by-using-the-wowza-streaming-cloud-rest-api).\n      operationId: createStreamTargetTokenAuth\n      parameters:\n        - description: The unique alphanumeric string that identifies the stream target.\n          in: path\n          name: stream_target_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/token_auth_create_input\"\n        description: Provide the details of the token authorization to create in the body\n          of the request.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  token_auth:\n                    $ref: \"#/components/schemas/token_auth\"\n                required:\n                  - token_auth\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Create token authorization for a stream target\n      tags:\n        - stream_targets\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"POST\" \"https://api-sandbox.cloud.wowza.com/api/v1/stream_targets/2adffc17/token_auth\" \\\n                 -d $'{\n              \"stream_target\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }'\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/stream_targets/2adffc17/token_auth',\n              method: 'POST',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n            req.write(JSON.stringify({\n              \"stream_target\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }));\n            req.end();\n  /transcoders:\n    get:\n      description: This operation shows the details of all of your transcoders.\n      operationId: listTranscoders\n      parameters:\n        - $ref: \"#/components/parameters/page\"\n        - $ref: \"#/components/parameters/per_page\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/transcoders\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n      summary: Fetch all transcoders\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n    post:\n      description: This operation creates a transcoder.\n      operationId: createTranscoder\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/transcoder_create_input\"\n        description: Provide the details of the transcoder to create in the body of the\n          request.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  transcoder:\n                    $ref: \"#/components/schemas/transcoder\"\n                required:\n                  - transcoder\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Create a transcoder\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"POST\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders\" \\\n                 -d $'{\n              \"transcoder\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }'\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders',\n              method: 'POST',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n            req.write(JSON.stringify({\n              \"transcoder\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }));\n            req.end();\n  \"/transcoders/{id}\":\n    delete:\n      description: This operation deletes a transcoder, including all of its assigned\n        output renditions and stream targets.\n      operationId: deleteTranscoder\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Delete a transcoder\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"DELETE\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17',\n              method: 'DELETE',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              // no data being returned, just: 204 NO CONTENT\n              console.log(res.statusCode);\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n    get:\n      description: This operation shows the details of a specific transcoder.\n      operationId: showTranscoder\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  transcoder:\n                    $ref: \"#/components/schemas/transcoder\"\n                required:\n                  - transcoder\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Fetch a transcoder\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n    patch:\n      description: This operation updates a transcoder.\n      operationId: updateTranscoder\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/transcoder_update_input\"\n        description: Provide the details of the transcoder to update in the body of the\n          request.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  transcoder:\n                    $ref: \"#/components/schemas/transcoder\"\n                required:\n                  - transcoder\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Update a transcoder\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"PATCH\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17\" \\\n                 -d $'{\n              \"transcoder\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }'\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17',\n              method: 'PATCH',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n            req.write(JSON.stringify({\n              \"transcoder\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }));\n            req.end();\n  \"/transcoders/{id}/disable_all_stream_targets\":\n    put:\n      description: This operation disables all of the stream targets assigned to a specific\n        transcoder.\n      operationId: disableAllStreamTargetsTranscoder\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  transcoder:\n                    properties:\n                      stream_targets:\n                        properties:\n                          state:\n                            description: The state of the transcoder's stream targets.\n                            enum:\n                              - enabled\n                              - disabled\n                            example: enabled\n                            type: string\n                        title: stream_targets\n                        type: object\n                    required:\n                      - stream_targets\n                    title: transcoder\n                    type: object\n                required:\n                  - transcoder\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Disable a transcoder's stream targets\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"PUT\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/disable_all_stream_targets\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17/disable_all_stream_targets',\n              method: 'PUT',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n            req.end();\n  \"/transcoders/{id}/enable_all_stream_targets\":\n    put:\n      description: This operation enables all of the stream targets assigned to a specific\n        transcoder.\n      operationId: enableAllStreamTargetsTranscoder\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  transcoder:\n                    properties:\n                      stream_targets:\n                        properties:\n                          state:\n                            description: The state of the transcoder's stream targets.\n                            enum:\n                              - enabled\n                              - disabled\n                            example: enabled\n                            type: string\n                        title: stream_targets\n                        type: object\n                    required:\n                      - stream_targets\n                    title: transcoder\n                    type: object\n                required:\n                  - transcoder\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Enable a transcoder's stream targets\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"PUT\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/enable_all_stream_targets\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17/enable_all_stream_targets',\n              method: 'PUT',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n            req.end();\n  \"/transcoders/{id}/recordings\":\n    get:\n      description: This operation shows the details of all of the recordings for a specific\n        transcoder.\n      operationId: listTranscoderRecordings\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  transcoder:\n                    properties:\n                      recordings:\n                        description: Array of recordings of this transcoder. See\n                          /recordings for more details.\n                        items:\n                          $ref: \"#/components/schemas/recording\"\n                        type: array\n                    title: transcoder\n                    type: object\n                required:\n                  - transcoder\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch a transcoder's recordings\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/recordings\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17/recordings',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n  \"/transcoders/{id}/reset\":\n    put:\n      description: This operation resets a transcoder.\n      operationId: resetTranscoder\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  transcoder:\n                    properties:\n                      state:\n                        description: The state of the transcoder.\n                        enum:\n                          - starting\n                          - stopping\n                          - started\n                          - stopped\n                          - resetting\n                        example: resetting\n                        type: string\n                    title: transcoder\n                    type: object\n                required:\n                  - transcoder\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Reset a transcoder\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"PUT\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/reset\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17/reset',\n              method: 'PUT',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n            req.end();\n  \"/transcoders/{id}/schedules\":\n    get:\n      description: This operation shows the details of all of the schedules for a specific\n        transcoder.\n      operationId: listTranscoderSchedules\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  transcoder:\n                    properties:\n                      schedules:\n                        description: Array of schedules of this transcoder. See /schedules\n                          for more details.\n                        items:\n                          $ref: \"#/components/schemas/schedule\"\n                        type: array\n                    title: transcoder\n                    type: object\n                required:\n                  - transcoder\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch transcoder's schedules\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/schedules\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17/schedules',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n  \"/transcoders/{id}/start\":\n    put:\n      description: This operation starts a transcoder.\n      operationId: startTranscoder\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  transcoder:\n                    properties:\n                      state:\n                        description: The state of the transcoder.\n                        enum:\n                          - starting\n                          - stopping\n                          - started\n                          - stopped\n                          - resetting\n                        example: starting\n                        type: string\n                      transcoding_uptime_id:\n                        description: \u003cstrong\u003eThe \u003cem\u003etranscoding_uptime_id\u003c/em\u003e parameter\n                          is deprecated and is replaced by\n                          \u003cem\u003euptime_id\u003c/em\u003e.\u003c/strong\u003e The unique identifier\n                          associated with a specific uptime period of a\n                          transcoder.\n                        example: abcd1234\n                        type: string\n                    title: transcoder\n                    type: object\n                required:\n                  - transcoder\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Start a transcoder\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"PUT\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/start\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17/start',\n              method: 'PUT',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n            req.end();\n  \"/transcoders/{id}/state\":\n    get:\n      description: This operation shows the current state and uptime ID of a transcoder.\n      operationId: showTranscoderState\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  transcoder:\n                    properties:\n                      state:\n                        description: The state of the transcoder.\n                        enum:\n                          - starting\n                          - stopping\n                          - started\n                          - stopped\n                          - resetting\n                        example: started\n                        type: string\n                      transcoding_uptime_id:\n                        description: \u003cstrong\u003eThe \u003cem\u003etranscoding_uptime_id\u003c/em\u003e parameter\n                          is deprecated and is replaced by\n                          \u003cem\u003euptime_id\u003c/em\u003e.\u003c/strong\u003e The unique identifier\n                          associated with a specific uptime period of a\n                          transcoder.\n                        example: abcd1234\n                        type: string\n                      uptime_id:\n                        description: The unique identifier associated with a specific\n                          uptime period of a transcoder.\n                        example: abcd1234\n                        type: string\n                    title: transcoder\n                    type: object\n                required:\n                  - transcoder\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch the state and uptime ID of a transcoder\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/state\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17/state',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n  \"/transcoders/{id}/stats\":\n    get:\n      description: This operation responds with a hash of metrics (keys) for a currently\n        running transcoder. Each key has a \u003cstrong\u003estatus\u003c/strong\u003e,\n        \u003cstrong\u003etext\u003c/strong\u003e (description), \u003cstrong\u003eunits\u003c/strong\u003e, and\n        \u003cstrong\u003evalue\u003c/strong\u003e.\n      operationId: showTranscoderStats\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  transcoder:\n                    $ref: \"#/components/schemas/shm_metrics\"\n                required:\n                  - transcoder\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch statistics for a current transcoder\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/stats\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17/stats',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n  \"/transcoders/{id}/stop\":\n    put:\n      description: This operation stops a transcoder.\n      operationId: stopTranscoder\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  transcoder:\n                    properties:\n                      state:\n                        description: The state of the transcoder.\n                        enum:\n                          - starting\n                          - stopping\n                          - started\n                          - stopped\n                          - resetting\n                        example: starting\n                        type: string\n                      transcoding_uptime_id:\n                        description: \u003cstrong\u003eThe \u003cem\u003etranscoding_uptime_id\u003c/em\u003e parameter\n                          is deprecated and is replaced by\n                          \u003cem\u003euptime_id\u003c/em\u003e.\u003c/strong\u003e The unique identifier\n                          associated with a specific uptime period of a\n                          transcoder.\n                        example: abcd1234\n                        type: string\n                    title: transcoder\n                    type: object\n                required:\n                  - transcoder\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Stop a transcoder\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"PUT\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/stop\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17/stop',\n              method: 'PUT',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n            req.end();\n  \"/transcoders/{id}/thumbnail_url\":\n    get:\n      description: This operation shows the thumbnail URL of a started transcoder.\n      operationId: showTranscoderThumbnailUrl\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  transcoder:\n                    properties:\n                      thumbnail_url:\n                        description: The URL to receive the preview thumbnail.\n                        example: https://cloud.wowza.com/proxy/stats/?target=10.11.12.13\u0026app=app-79b8\u0026stream=99b62146@130135.stream\u0026media=json\n                        type: string\n                    title: transcoder\n                    type: object\n                required:\n                  - transcoder\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch the thumbnail URL of a transcoder\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/thumbnail_url\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17/thumbnail_url',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n  \"/transcoders/{transcoder_id}/outputs\":\n    get:\n      description: This operation shows the details of all of the output renditions of a\n        specific transcoder.\n      operationId: listTranscoderOutputs\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: transcoder_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/outputs\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch all outputs of a transcoder\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/outputs\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17/outputs',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n    post:\n      description: This operation creates an output rendition for a specific transcoder.\n      operationId: createTranscoderOutput\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: transcoder_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/output_create_input\"\n        description: Provide the details of the output rendition to create in the body of\n          the request.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  output:\n                    $ref: \"#/components/schemas/output\"\n                required:\n                  - output\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Create an output\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"POST\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/outputs\" \\\n                 -d $'{\n              \"transcoder\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }'\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17/outputs',\n              method: 'POST',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n            req.write(JSON.stringify({\n              \"transcoder\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }));\n            req.end();\n  \"/transcoders/{transcoder_id}/outputs/{id}\":\n    delete:\n      description: This operation deletes an output, including all of its assigned targets.\n      operationId: deleteTranscoderOutput\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: transcoder_id\n          required: true\n          schema:\n            type: string\n        - description: The unique alphanumeric string that identifies the output rendition.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Delete an output\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"DELETE\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset\"\n        - lang: JavaScript\n          source: \u003e\n            // Using Node.js\n\n            var https = require('https');\n\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset',\n              method: 'DELETE',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n\n            https.get(options, function(res) {\n              // no data being returned, just: 204 NO CONTENT\n              console.log(res.statusCode);\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n    get:\n      description: This operation shows the details of a specific output rendition for a\n        specific transcoder.\n      operationId: showTranscoderOutput\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: transcoder_id\n          required: true\n          schema:\n            type: string\n        - description: The unique alphanumeric string that identifies the output rendition.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  output:\n                    $ref: \"#/components/schemas/output\"\n                required:\n                  - output\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch an output\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset\"\n        - lang: JavaScript\n          source: \u003e\n            // Using Node.js\n\n            var https = require('https');\n\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n    patch:\n      description: This operation updates an output rendition.\n      operationId: updateTranscoderOutput\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: transcoder_id\n          required: true\n          schema:\n            type: string\n        - description: The unique alphanumeric string that identifies the output rendition.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/output_update_input\"\n        description: Provide the details of the output rendition to update in the body of\n          the request.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  output:\n                    $ref: \"#/components/schemas/output\"\n                required:\n                  - output\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Update an output\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"PATCH\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset\" \\\n                 -d $'{\n              \"transcoder\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }'\n        - lang: JavaScript\n          source: \u003e\n            // Using Node.js\n\n            var https = require('https');\n\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset',\n              method: 'PATCH',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n\n            req.write(JSON.stringify({\n              \"transcoder\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }));\n\n            req.end();\n  \"/transcoders/{transcoder_id}/outputs/{id}/add_stream_target\":\n    post:\n      deprecated: true\n      description: The operation POST\n        /transcoders/{transcoder_id}/outputs/{id}/add_stream_target is\n        deprecated. Use POST\n        /transcoders/{transcoder_id}/outputs/{output_id}/output_stream_targets\n        to add an existing stream target to an output.\n      operationId: addStreamTargetToTranscoderOutput\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: transcoder_id\n          required: true\n          schema:\n            type: string\n        - description: The unique alphanumeric string that identifies the output rendition.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/output_add_stream_target_input\"\n        description: Provide the details of the stream target to add in the body of the\n          request.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  output_stream_target:\n                    $ref: \"#/components/schemas/output_stream_target\"\n                required:\n                  - output_stream_target\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Deprecated operation\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"POST\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/add_stream_target\" \\\n                 -d $'{\n              \"transcoder\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }'\n        - lang: JavaScript\n          source: \u003e\n            // Using Node.js\n\n            var https = require('https');\n\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/add_stream_target',\n              method: 'POST',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n\n            req.write(JSON.stringify({\n              \"transcoder\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }));\n\n            req.end();\n  \"/transcoders/{transcoder_id}/outputs/{id}/remove_stream_target\":\n    delete:\n      deprecated: true\n      description: The operation DELETE\n        /transcoders/{transcoder_id}/outputs/{id}/remove_stream_target is\n        deprecated. Use DELETE\n        /transcoders/{transcoder_id}/outputs/{output_id}/output_stream_targets/{id}\n        to remove a stream target from an output.\n      operationId: removeStreamTargetToTranscoderOutput\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: transcoder_id\n          required: true\n          schema:\n            type: string\n        - description: The unique alphanumeric string that identifies the output rendition.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/output_remove_stream_target_input\"\n        description: Provide the details of the stream target to remove in the body of the\n          request.\n        required: true\n      responses:\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Deprecated operation\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"POST\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/remove_stream_target\" \\\n                 -d $'{\n              \"transcoder\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }'\n        - lang: JavaScript\n          source: \u003e\n            // Using Node.js\n\n            var https = require('https');\n\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/remove_stream_target',\n              method: 'POST',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n\n            req.write(JSON.stringify({\n              \"transcoder\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }));\n\n            req.end();\n  \"/transcoders/{transcoder_id}/outputs/{output_id}/output_stream_targets\":\n    get:\n      description: This operation shows the details of all of the output stream targets of\n        an output of a transcoder.\n      operationId: listTranscoderOutputOutputStreamTargets\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: transcoder_id\n          required: true\n          schema:\n            type: string\n        - description: The unique alphanumeric string that identifies the output rendition.\n          in: path\n          name: output_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/output_stream_target\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch all output stream targets of an output of a transcoder\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/output_stream_targets\"\n        - lang: JavaScript\n          source: \u003e\n            // Using Node.js\n\n            var https = require('https');\n\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/output_stream_targets',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n    post:\n      description: This operation creates an output stream target. Targets whose\n        \u003cem\u003etype\u003c/em\u003e is \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e can't be\n        added to output renditions.\n      operationId: createTranscoderOutputOutputStreamTarget\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: transcoder_id\n          required: true\n          schema:\n            type: string\n        - description: The unique alphanumeric string that identifies the output rendition.\n          in: path\n          name: output_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/output_stream_target_create_input\"\n        description: Provide the details of the output stream target to create in the body\n          of the request. Targets whose \u003cem\u003etype\u003c/em\u003e is\n          \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e can't be added to output\n          renditions.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  output_stream_target:\n                    $ref: \"#/components/schemas/output_stream_target\"\n                required:\n                  - output_stream_target\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Create an output stream target\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"POST\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/output_stream_targets\" \\\n                 -d $'{\n              \"transcoder\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }'\n        - lang: JavaScript\n          source: \u003e\n            // Using Node.js\n\n            var https = require('https');\n\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/output_stream_targets',\n              method: 'POST',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n\n            req.write(JSON.stringify({\n              \"transcoder\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }));\n\n            req.end();\n  \"/transcoders/{transcoder_id}/outputs/{output_id}/output_stream_targets/{stream_target_id}\":\n    delete:\n      description: This operation deletes an output stream target, including all of its\n        assigned targets.\n      operationId: deleteTranscoderOutputOutputStreamTarget\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: transcoder_id\n          required: true\n          schema:\n            type: string\n        - description: The unique alphanumeric string that identifies the output rendition.\n          in: path\n          name: output_id\n          required: true\n          schema:\n            type: string\n        - description: The unique alphanumeric string that identifies the stream target.\n          in: path\n          name: stream_target_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Delete an output stream target\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"DELETE\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/output_stream_targets/82daaf77\"\n        - lang: JavaScript\n          source: \u003e\n            // Using Node.js\n\n            var https = require('https');\n\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/output_stream_targets/82daaf77',\n              method: 'DELETE',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n\n            https.get(options, function(res) {\n              // no data being returned, just: 204 NO CONTENT\n              console.log(res.statusCode);\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n    get:\n      description: This operation shows the details of an output stream target.\n      operationId: showTranscoderOutputOutputStreamTarget\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: transcoder_id\n          required: true\n          schema:\n            type: string\n        - description: The unique alphanumeric string that identifies the output rendition.\n          in: path\n          name: output_id\n          required: true\n          schema:\n            type: string\n        - description: The unique alphanumeric string that identifies the stream target.\n          in: path\n          name: stream_target_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  output_stream_target:\n                    $ref: \"#/components/schemas/output_stream_target\"\n                required:\n                  - output_stream_target\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch an output stream target\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/output_stream_targets/82daaf77\"\n        - lang: JavaScript\n          source: \u003e\n            // Using Node.js\n\n            var https = require('https');\n\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/output_stream_targets/82daaf77',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n    patch:\n      description: This operation updates an output stream target.\n      operationId: updateTranscoderOutputOutputStreamTarget\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: transcoder_id\n          required: true\n          schema:\n            type: string\n        - description: The unique alphanumeric string that identifies the output rendition.\n          in: path\n          name: output_id\n          required: true\n          schema:\n            type: string\n        - description: The unique alphanumeric string that identifies the stream target.\n          in: path\n          name: stream_target_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/output_stream_target_update_input\"\n        description: Provide the details of the output stream target to update in the body\n          of the request.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  output_stream_target:\n                    $ref: \"#/components/schemas/output_stream_target\"\n                required:\n                  - output_stream_target\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Update an output stream target\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"PATCH\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/output_stream_targets/82daaf77\" \\\n                 -d $'{\n              \"transcoder\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }'\n        - lang: JavaScript\n          source: \u003e\n            // Using Node.js\n\n            var https = require('https');\n\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/output_stream_targets/82daaf77',\n              method: 'PATCH',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n\n            req.write(JSON.stringify({\n              \"transcoder\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }));\n\n            req.end();\n  \"/transcoders/{transcoder_id}/outputs/{output_id}/output_stream_targets/{stream_target_id}/disable\":\n    put:\n      description: This operation disables an output stream target.\n      operationId: disableTranscoderOutputOutputStreamTarget\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: transcoder_id\n          required: true\n          schema:\n            type: string\n        - description: The unique alphanumeric string that identifies the output rendition.\n          in: path\n          name: output_id\n          required: true\n          schema:\n            type: string\n        - description: The unique alphanumeric string that identifies the stream target.\n          in: path\n          name: stream_target_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  stream_target:\n                    properties:\n                      state:\n                        description: The state of the output stream target.\n                        enum:\n                          - enabled\n                          - disabled\n                          - restarted\n                        example: disabled\n                        type: string\n                    title: stream_target\n                    type: object\n                required:\n                  - stream_target\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Disable an output stream target\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"PUT\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/output_stream_targets/82daaf77/disable\"\n        - lang: JavaScript\n          source: \u003e\n            // Using Node.js\n\n            var https = require('https');\n\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/output_stream_targets/82daaf77/disable',\n              method: 'PUT',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n\n            req.end();\n  \"/transcoders/{transcoder_id}/outputs/{output_id}/output_stream_targets/{stream_target_id}/enable\":\n    put:\n      description: This operation enables an output stream target.\n      operationId: enableTranscoderOutputOutputStreamTarget\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: transcoder_id\n          required: true\n          schema:\n            type: string\n        - description: The unique alphanumeric string that identifies the output rendition.\n          in: path\n          name: output_id\n          required: true\n          schema:\n            type: string\n        - description: The unique alphanumeric string that identifies the stream target.\n          in: path\n          name: stream_target_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  stream_target:\n                    properties:\n                      state:\n                        description: The state of the output stream target.\n                        enum:\n                          - enabled\n                          - disabled\n                          - restarted\n                        example: enabled\n                        type: string\n                    title: stream_target\n                    type: object\n                required:\n                  - stream_target\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Enable an output stream target\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"PUT\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/output_stream_targets/82daaf77/enable\"\n        - lang: JavaScript\n          source: \u003e\n            // Using Node.js\n\n            var https = require('https');\n\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/output_stream_targets/82daaf77/enable',\n              method: 'PUT',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n\n            req.end();\n  \"/transcoders/{transcoder_id}/outputs/{output_id}/output_stream_targets/{stream_target_id}/restart\":\n    put:\n      description: This operation restarts an output stream target.\n      operationId: restartTranscoderOutputOutputStreamTarget\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: transcoder_id\n          required: true\n          schema:\n            type: string\n        - description: The unique alphanumeric string that identifies the output rendition.\n          in: path\n          name: output_id\n          required: true\n          schema:\n            type: string\n        - description: The unique alphanumeric string that identifies the stream target.\n          in: path\n          name: stream_target_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  stream_target:\n                    properties:\n                      state:\n                        description: The state of the output stream target.\n                        enum:\n                          - enabled\n                          - disabled\n                          - restarted\n                        example: restarted\n                        type: string\n                    title: stream_target\n                    type: object\n                required:\n                  - stream_target\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Restart an output stream target\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"PUT\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/output_stream_targets/82daaf77/restart\"\n        - lang: JavaScript\n          source: \u003e\n            // Using Node.js\n\n            var https = require('https');\n\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17/outputs/cupertino-cupertinoProgramDateTimeOffset/output_stream_targets/82daaf77/restart',\n              method: 'PUT',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n\n            req.end();\n  \"/transcoders/{transcoder_id}/properties\":\n    get:\n      description: This operation shows all of the properties of a specific transcoder.\n      operationId: listTranscoderProperties\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: transcoder_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/transcoder_properties\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Fetch a transcoder's properties\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/properties\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17/properties',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n    post:\n      description: This operation creates a property for a transcoder. For more information\n        see the technical article [How to set advanced properties by using the\n        Wowza Streaming Cloud REST\n        API](https://www.wowza.com/docs/how-to-set-advanced-properties-by-using-the-wowza-streaming-cloud-rest-api).\n      operationId: createTranscoderProperty\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: transcoder_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/transcoder_property_create_input\"\n        description: Provide the details of the property to create in the body of the\n          request.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  property:\n                    $ref: \"#/components/schemas/transcoder_property\"\n                required:\n                  - property\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Create a property for a transcoder\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"POST\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/properties\" \\\n                 -d $'{\n              \"transcoder\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }'\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17/properties',\n              method: 'POST',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            const req = https.request(options, function(res) {\n              var body = '';\n              res.on('data', function(data) {\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n            req.write(JSON.stringify({\n              \"transcoder\": {\n                \"property\": \"My Value\",\n                \"...\": \"...\"\n              }\n            }));\n            req.end();\n  \"/transcoders/{transcoder_id}/properties/{id}\":\n    delete:\n      description: This operation deletes a specific property from a specific transcoder.\n      operationId: deleteTranscoderProperty\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: transcoder_id\n          required: true\n          schema:\n            type: string\n        - description: The unique string that identifies the transcoder property. The\n            string contains the section and the key, connected by a dash. For\n            example, cupertino-cupertinoProgramDateTimeOffset.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n        \"422\":\n          description: Unprocessable Entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422\"\n      summary: Delete a transcoder's property\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"DELETE\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/properties/cupertino-cupertinoProgramDateTimeOffset\"\n        - lang: JavaScript\n          source: \u003e\n            // Using Node.js\n\n            var https = require('https');\n\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17/properties/cupertino-cupertinoProgramDateTimeOffset',\n              method: 'DELETE',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n\n            https.get(options, function(res) {\n              // no data being returned, just: 204 NO CONTENT\n              console.log(res.statusCode);\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n    get:\n      description: This operation shows the details of a specific property for a specific\n        transcoder.\n      operationId: showTranscoderProperty\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: transcoder_id\n          required: true\n          schema:\n            type: string\n        - description: The unique string that identifies the transcoder property. The\n            string contains the section and the key, connected by a dash. For\n            example, cupertino-cupertinoProgramDateTimeOffset.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                properties:\n                  property:\n                    $ref: \"#/components/schemas/transcoder_property\"\n                required:\n                  - property\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch a property for a transcoder\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/properties/cupertino-cupertinoProgramDateTimeOffset\"\n        - lang: JavaScript\n          source: \u003e\n            // Using Node.js\n\n            var https = require('https');\n\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17/properties/cupertino-cupertinoProgramDateTimeOffset',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n  \"/transcoders/{transcoder_id}/uptimes\":\n    get:\n      description: This operation shows all of the uptime records for a specific\n        transcoder. An \u003cem\u003euptime record\u003c/em\u003e identifies a specific transcoding\n        session.\n      operationId: indexUptimes\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: transcoder_id\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/page\"\n        - $ref: \"#/components/parameters/per_page\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/uptimes\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch all uptime records for a transcoder\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/uptimes\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17/uptimes',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n  \"/transcoders/{transcoder_id}/uptimes/{id}\":\n    get:\n      description: This operation shows the details of a specific uptime record for a\n        specific transcoder. An \u003cem\u003euptime record\u003c/em\u003e identifies a transcoding\n        session.\n      operationId: showUptime\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: transcoder_id\n          required: true\n          schema:\n            type: string\n        - description: The unique alphanumeric string that identifies the uptime record.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/uptime\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch an uptime record\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/uptimes/cupertino-cupertinoProgramDateTimeOffset\"\n        - lang: JavaScript\n          source: \u003e\n            // Using Node.js\n\n            var https = require('https');\n\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17/uptimes/cupertino-cupertinoProgramDateTimeOffset',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n  \"/transcoders/{transcoder_id}/uptimes/{id}/metrics/current\":\n    get:\n      description: This operation returns a snapshot of the current source connection and\n        processing details of an active (running) transcoder.\n      operationId: showUptimeMetricsCurrent\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: transcoder_id\n          required: true\n          schema:\n            type: string\n        - description: The unique alphanumeric string that identifies the uptime record.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: A comma-separated list of fields to return.\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                example:\n                  current:\n                    audio_codec:\n                      status: normal\n                      text: \"\"\n                      units: \"\"\n                      value: aac\n                    bits_in_rate:\n                      status: normal\n                      text: \"\"\n                      units: Kbps\n                      value: 317.3\n                    bits_out_rate:\n                      status: normal\n                      text: \"\"\n                      units: Kbps\n                      value: 856\n                    bytes_in_rate:\n                      status: normal\n                      text: \"\"\n                      units: KBps\n                      value: 317.3\n                    bytes_out_rate:\n                      status: normal\n                      text: \"\"\n                      units: KBps\n                      value: 856\n                    configured_bytes_out_rate:\n                      status: warning\n                      text: Outbound bitrate is lower than the configured bitrate.\n                        There might be a problem with the stream targets.\n                      units: Kbps\n                      value: 8192\n                    connected:\n                      status: normal\n                      text: \"\"\n                      units: \"\"\n                      value: Yes\n                    cpu:\n                      status: normal\n                      text: \"\"\n                      units: \"%\"\n                      value: 20\n                    frame_rate:\n                      status: normal\n                      text: \"\"\n                      units: FPS\n                      value: 30\n                    frame_size:\n                      status: warning\n                      text: \"Configured frame size is different from what Wowza\n                        Streaming Cloud is receiving from the source: 1280x720.\"\n                      units: \"\"\n                      value: 1280x720\n                    gpu_decoder_usage:\n                      status: normal\n                      text: \"\"\n                      units: \"%\"\n                      value: 50\n                    gpu_driver_version:\n                      status: normal\n                      text: \"\"\n                      units: \"\"\n                      value: not_installed\n                    gpu_encoder_usage:\n                      status: normal\n                      text: \"\"\n                      units: \"%\"\n                      value: 50\n                    gpu_memory_usage:\n                      status: normal\n                      text: \"\"\n                      units: \"%\"\n                      value: 50\n                    gpu_usage:\n                      status: normal\n                      text: \"\"\n                      units: \"%\"\n                      value: 50\n                    height:\n                      status: warning\n                      text: \"Configured height is different from what Wowza\n                        Streaming Cloud is receiving from the source: 720.\"\n                      units: px\n                      value: 720\n                    keyframe_interval:\n                      status: normal\n                      text: \"\"\n                      units: GOP\n                      value: 69\n                    stream_target_status_OUTPUTIDX_STREAMTARGETIDX:\n                      status: normal\n                      text: \"\"\n                      units: \"\"\n                      value: Active\n                    unique_views:\n                      status: normal\n                      text: \"\"\n                      units: \"%\"\n                      value: 1030\n                    video_codec:\n                      status: normal\n                      text: \"\"\n                      units: \"\"\n                      value: avc1\n                    width:\n                      status: warning\n                      text: \"Configured width is different from what Wowza Streaming\n                        Cloud is receiving from the source: 1280.\"\n                      units: px\n                      value: 1280\n                  limits:\n                    fields:\n                      - audio_codec\n                      - bits_in_rate\n                      - bits_out_rate\n                      - bytes_in_rate\n                      - bytes_out_rate\n                      - configured_bytes_out_rate\n                      - connected\n                      - cpu\n                      - frame_size\n                      - frame_rate\n                      - gpu_decoder_usage\n                      - gpu_driver_version\n                      - gpu_encoder_usage\n                      - gpu_memory_usage\n                      - gpu_usage\n                      - height\n                      - width\n                      - keyframe_interval\n                      - unique_views\n                      - video_codec\n                      - width\n                      - stream_target_status_OUTPUTIDX_STREAMTARGETIDX\n                properties:\n                  current:\n                    $ref: \"#/components/schemas/shm_metrics\"\n                  limits:\n                    properties:\n                      fields:\n                        description: A comma-separated list of fields that were returned in\n                          the request.\n                        title: fields\n                        type: string\n                    required:\n                      - fields\n                    title: limits\n                    type: object\n                required:\n                  - current\n                  - limits\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch current stream health metrics for an active transcoder\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/uptimes/cupertino-cupertinoProgramDateTimeOffset/metrics/current\"\n        - lang: JavaScript\n          source: \u003e\n            // Using Node.js\n\n            var https = require('https');\n\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17/uptimes/cupertino-cupertinoProgramDateTimeOffset/metrics/current',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n  \"/transcoders/{transcoder_id}/uptimes/{id}/metrics/historic\":\n    get:\n      description: This operation shows the historic source connection and processing\n        details for a transcoding session (uptime record). The transcoder can be\n        running or stopped. Metrics are recorded every 20 seconds.\n      operationId: showUptimeMetricsHistoric\n      parameters:\n        - description: The unique alphanumeric string that identifies the transcoder.\n          in: path\n          name: transcoder_id\n          required: true\n          schema:\n            type: string\n        - description: The unique alphanumeric string that identifies the uptime record.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: A comma-separated list of fields to return.\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: The start of the range of time used to aggregate the metrics.\n            Express the value by using the ISO 8601 standard of\n            \u003cstrong\u003eYYYY-MM-DDTHH:MM:SSZ\u003c/strong\u003e where \u003cstrong\u003eHH\u003c/strong\u003e is a\n            24-hour clock in UTC.\n          in: query\n          name: from\n          required: false\n          schema:\n            type: string\n        - description: The end of the range of time used to aggregate the metrics. Express\n            the value by using the ISO 8601 standard of\n            \u003cstrong\u003eYYYY-MM-DDTHH:MM:SSZ\u003c/strong\u003e where \u003cstrong\u003eHH\u003c/strong\u003e is a\n            24-hour clock in UTC.\n          in: query\n          name: to\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                example:\n                  historic:\n                    - audio_codec:\n                        status: normal\n                        text: \"\"\n                        units: \"\"\n                        value: aac\n                      bits_in_rate:\n                        status: normal\n                        text: \"\"\n                        units: Kbps\n                        value: 317.3\n                      bits_out_rate:\n                        status: normal\n                        text: \"\"\n                        units: Kbps\n                        value: 856\n                      cpu_idle:\n                        status: normal\n                        text: \"\"\n                        units: \"%\"\n                        value: 20\n                      created_at: 2017-07-06T14:20:00Z\n                      frame_rate:\n                        status: normal\n                        text: \"\"\n                        units: FPS\n                        value: 30\n                      height:\n                        status: warning\n                        text: \"Configured height is different from what Wowza\n                          Streaming Cloud is receiving from the source: 720.\"\n                        units: px\n                        value: 720\n                      keyframe_interval:\n                        status: normal\n                        text: \"\"\n                        units: GOP\n                        value: 69\n                      video_codec:\n                        status: normal\n                        text: \"\"\n                        units: \"\"\n                        value: avc1\n                      width:\n                        status: warning\n                        text: \"Configured width is different from what Wowza\n                          Streaming Cloud is receiving from the source: 1280.\"\n                        units: px\n                        value: 1280\n                    - audio_codec:\n                        status: normal\n                        text: \"\"\n                        units: \"\"\n                        value: aac\n                      bits_in_rate:\n                        status: normal\n                        text: \"\"\n                        units: Kbps\n                        value: 317.3\n                      bits_out_rate:\n                        status: normal\n                        text: \"\"\n                        units: Kbps\n                        value: 856\n                      cpu_idle:\n                        status: normal\n                        text: \"\"\n                        units: \"%\"\n                        value: 20\n                      created_at: 2017-07-06T14:20:20Z\n                      frame_rate:\n                        status: normal\n                        text: \"\"\n                        units: FPS\n                        value: 30\n                      height:\n                        status: warning\n                        text: \"Configured height is different from what Wowza\n                          Streaming Cloud is receiving from the source: 720.\"\n                        units: px\n                        value: 720\n                      keyframe_interval:\n                        status: normal\n                        text: \"\"\n                        units: GOP\n                        value: 69\n                      video_codec:\n                        status: normal\n                        text: \"\"\n                        units: \"\"\n                        value: avc1\n                      width:\n                        status: warning\n                        text: \"Configured width is different from what Wowza\n                          Streaming Cloud is receiving from the source: 1280.\"\n                        units: px\n                        value: 1280\n                  limits:\n                    fields:\n                      - audio_codec\n                      - bits_in_rate\n                      - bits_out_rate\n                      - cpu_idle\n                      - frame_rate\n                      - height\n                      - keyframe_interval\n                      - width\n                      - video_codec\n                    from: 2017-07-06T14:20:00Z\n                    to: 2017-07-06T14:20:20Z\n                properties:\n                  historic:\n                    items:\n                      $ref: \"#/components/schemas/shm_historic_metrics\"\n                    type: array\n                  limits:\n                    properties:\n                      fields:\n                        description: A comma-separated list of fields that were returned in\n                          the request.\n                        title: fields\n                        type: string\n                      from:\n                        description: The start of range of time when the metrics were\n                          aggregated for the query.\n                        format: date-time\n                        title: from\n                        type: string\n                      to:\n                        description: The end of the range of time when the metrics were\n                          aggregated for the query.\n                        format: date-time\n                        title: to\n                        type: string\n                    required:\n                      - fields\n                      - from\n                      - to\n                    title: limits\n                    type: object\n                required:\n                  - historic\n                  - limits\n                type: object\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch historic stream health metrics for a transcoder\n      tags:\n        - transcoders\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/transcoders/2adffc17/uptimes/cupertino-cupertinoProgramDateTimeOffset/metrics/historic\"\n        - lang: JavaScript\n          source: \u003e\n            // Using Node.js\n\n            var https = require('https');\n\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/transcoders/2adffc17/uptimes/cupertino-cupertinoProgramDateTimeOffset/metrics/historic',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n  /usage/network/stream_sources:\n    get:\n      description: This operation shows the amount of network usage for all stream sources\n        in the account. The default time frame is \u003cem\u003efrom\u003c/em\u003e the last billing\n        date \u003cem\u003eto\u003c/em\u003e the end of the current day.\n      operationId: usageNetworkStreamSourcesIndex\n      parameters:\n        - description: The start of the range of time you want to view. Specify\n            \u003cstrong\u003eYYYY-MM-DD HH:MM:SS\u003c/strong\u003e where \u003cstrong\u003eHH\u003c/strong\u003e is a\n            24-hour clock in UTC. The \u003cem\u003efrom\u003c/em\u003e default is the last billing\n            date.\n          in: query\n          name: from\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: The end of the range of time you want to view. Specify\n            \u003cstrong\u003eYYYY-MM-DD HH:MM:SS\u003c/strong\u003e where \u003cstrong\u003eHH\u003c/strong\u003e is a\n            24-hour clock in UTC. The \u003cem\u003eto\u003c/em\u003e default is the end of the\n            current day.\n          in: query\n          name: to\n          required: false\n          schema:\n            type: string\n            format: date-time\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/usage_network_stream_sources\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n      summary: Fetch network usage for all stream sources\n      tags:\n        - network\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/usage/network/stream_sources\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/usage/network/stream_sources',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n  /usage/network/stream_targets:\n    get:\n      description: This operation shows the amount of network usage for all stream targets\n        in the account cumulatively and individually. The default time frame is\n        \u003cem\u003efrom\u003c/em\u003e the last billing date \u003cem\u003eto\u003c/em\u003e the end of the current\n        day.\n      operationId: usageNetworkStreamTargetsIndex\n      parameters:\n        - description: The start of the range of time you want to view. Specify\n            \u003cstrong\u003eYYYY-MM-DD HH:MM:SS\u003c/strong\u003e where \u003cstrong\u003eHH\u003c/strong\u003e is a\n            24-hour clock in UTC. The \u003cem\u003efrom\u003c/em\u003e default is the last billing\n            date.\n          in: query\n          name: from\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: The end of the range of time you want to view. Specify\n            \u003cstrong\u003eYYYY-MM-DD HH:MM:SS\u003c/strong\u003e where \u003cstrong\u003eHH\u003c/strong\u003e is a\n            24-hour clock in UTC. The \u003cem\u003eto\u003c/em\u003e default is the end of the\n            current day.\n          in: query\n          name: to\n          required: false\n          schema:\n            type: string\n            format: date-time\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/usage_network_stream_targets\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n      summary: Fetch network usage for all stream targets\n      tags:\n        - network\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/usage/network/stream_targets\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/usage/network/stream_targets',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n  /usage/network/transcoders:\n    get:\n      description: This operation shows the amount of network usage (egress) for all\n        transcoders in the account. The default time frame is \u003cem\u003efrom\u003c/em\u003e the\n        last billing date \u003cem\u003eto\u003c/em\u003e the end of the current day.\n      operationId: usageNetworkTranscodersIndex\n      parameters:\n        - description: The start of the range of time you want to view. Specify\n            \u003cstrong\u003eYYYY-MM-DD HH:MM:SS\u003c/strong\u003e where \u003cstrong\u003eHH\u003c/strong\u003e is a\n            24-hour clock in UTC. The \u003cem\u003efrom\u003c/em\u003e default is the last billing\n            date.\n          in: query\n          name: from\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: The end of the range of time you want to view. Specify\n            \u003cstrong\u003eYYYY-MM-DD HH:MM:SS\u003c/strong\u003e where \u003cstrong\u003eHH\u003c/strong\u003e is a\n            24-hour clock in UTC. The \u003cem\u003eto\u003c/em\u003e default is the end of the\n            current day.\n          in: query\n          name: to\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: The type of transcoder. The default is \u003cstrong\u003etranscoded\u003c/strong\u003e.\n          in: query\n          name: transcoder_type\n          required: false\n          schema:\n            type: string\n            enum:\n              - transcoded\n              - passthrough\n        - description: The billing mode for the transcoder. The default is\n            \u003cstrong\u003epay_as_you_go\u003c/strong\u003e.\n          in: query\n          name: billing_mode\n          required: false\n          schema:\n            type: string\n            enum:\n              - pay_as_you_go\n              - twentyfour_seven\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/usage_network_transcoders\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n      summary: Fetch network usage for all transcoders\n      tags:\n        - network\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/usage/network/transcoders\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/usage/network/transcoders',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n  /usage/storage/peak_recording:\n    get:\n      description: This operation shows the amount of peak recording storage used for the\n        account. The default time frame is \u003cem\u003efrom\u003c/em\u003e the last billing date\n        \u003cem\u003eto\u003c/em\u003e the end of the current day.\n      operationId: usageStoragePeakRecordingIndex\n      parameters:\n        - description: The start of the range of time you want to view. Specify\n            \u003cstrong\u003eYYYY-MM-DD HH:MM:SS\u003c/strong\u003e where \u003cstrong\u003eHH\u003c/strong\u003e is a\n            24-hour clock in UTC. The \u003cem\u003efrom\u003c/em\u003e default is the last billing\n            date.\n          in: query\n          name: from\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: The end of the range of time you want to view. Specify\n            \u003cstrong\u003eYYYY-MM-DD HH:MM:SS\u003c/strong\u003e where \u003cstrong\u003eHH\u003c/strong\u003e is a\n            24-hour clock in UTC. The \u003cem\u003eto\u003c/em\u003e default is the end of the\n            current day.\n          in: query\n          name: to\n          required: false\n          schema:\n            type: string\n            format: date-time\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/usage_storage_peak_recording\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n      summary: Fetch peak recording storage\n      tags:\n        - storage\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/usage/storage/peak_recording\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/usage/storage/peak_recording',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n  /usage/time/transcoders:\n    get:\n      description: This operation shows the amount of stream processing time used by all\n        transcoders in the account. The default time frame is \u003cem\u003efrom\u003c/em\u003e the\n        last billing date \u003cem\u003eto\u003c/em\u003e the end of the current day.\n      operationId: usageTimeTranscodersIndex\n      parameters:\n        - description: The start of the range of time you want to view. Specify\n            \u003cstrong\u003eYYYY-MM-DD HH:MM:SS\u003c/strong\u003e where \u003cstrong\u003eHH\u003c/strong\u003e is a\n            24-hour clock in UTC. The \u003cem\u003efrom\u003c/em\u003e default is the last billing\n            date.\n          in: query\n          name: from\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: The end of the range of time you want to view. Specify\n            \u003cstrong\u003eYYYY-MM-DD HH:MM:SS\u003c/strong\u003e where \u003cstrong\u003eHH\u003c/strong\u003e is a\n            24-hour clock in UTC. The \u003cem\u003eto\u003c/em\u003e default is the end of the\n            current day.\n          in: query\n          name: to\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: The type of transcoder. The default is \u003cstrong\u003etranscoded\u003c/strong\u003e.\n          in: query\n          name: transcoder_type\n          required: false\n          schema:\n            type: string\n            enum:\n              - transcoded\n              - passthrough\n        - description: The billing mode for the transcoder. The default is\n            \u003cstrong\u003epay_as_you_go\u003c/strong\u003e.\n          in: query\n          name: billing_mode\n          required: false\n          schema:\n            type: string\n            enum:\n              - pay_as_you_go\n              - twentyfour_seven\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/usage_time_transcoders\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"422\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error422InvalidTimeFormat\"\n      summary: Fetch stream processing time\n      tags:\n        - processing time\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/usage/time/transcoders\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/usage/time/transcoders',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\n  \"/usage/viewer_data/stream_targets/{id}\":\n    get:\n      description: This operation shows viewer data for a specific stream target. The\n        default time frame is \u003cem\u003efrom\u003c/em\u003e the last billing date \u003cem\u003eto\u003c/em\u003e\n        the end of the current day.\n      operationId: showViewerDataStreamTarget\n      parameters:\n        - description: The unique alphanumeric string that identifies the stream target.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: The start of the range of time you want to view. Specify\n            \u003cstrong\u003eYYYY-MM-DD HH:MM:SS\u003c/strong\u003e where \u003cstrong\u003eHH\u003c/strong\u003e is a\n            24-hour clock in UTC. The \u003cem\u003efrom\u003c/em\u003e default is the last billing\n            date.\n          in: query\n          name: from\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: The end of the range of time you want to view. Specify\n            \u003cstrong\u003eYYYY-MM-DD HH:MM:SS\u003c/strong\u003e where \u003cstrong\u003eHH\u003c/strong\u003e is a\n            24-hour clock in UTC. The \u003cem\u003eto\u003c/em\u003e default is the end of the\n            current day.\n          in: query\n          name: to\n          required: false\n          schema:\n            type: string\n            format: date-time\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/usage_viewer_data_stream_target\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error401\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error403\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error404\"\n        \"410\":\n          description: Gone\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error410\"\n      summary: Fetch viewer data for a stream target\n      tags:\n        - viewer data\n      x-code-samples:\n        - lang: Shell\n          source: \u003e\n            // Using cURL\n\n            curl -H \"wsc-api-key: a726c273...\" \\\n                 -H \"wsc-access-key: 68289d8d...\" \\\n                 -H \"Content-Type: application/json\" \\\n                 -X \"GET\" \"https://api-sandbox.cloud.wowza.com/api/v1/usage/viewer_data/stream_targets/2adffc17\"\n        - lang: JavaScript\n          source: |\n            // Using Node.js\n            var https = require('https');\n            const options = {\n              hostname: 'api-sandbox.cloud.wowza.com',\n              path: '/api/v1/usage/viewer_data/stream_targets/2adffc17',\n              headers: {\n                'wsc-api-key': 'a726c273...',\n                'wsc-access-key': '68289d8d...',\n                'Content-Type': 'application/json'\n              }\n            };\n            https.get(options, function(res) {\n              var body = '';\n              res.on('data', function(data){\n                body += data;\n              });\n              res.on('end', function() {\n                console.log(JSON.parse(body));\n              });\n            }).on('error', function(e) {\n              console.log(e.message);\n            });\nx-tagGroups:\n  - name: Resource Management\n    tags:\n      - live_streams\n      - players\n      - transcoders\n      - stream_sources\n      - stream_targets\n      - recordings\n      - schedules\n  - name: Usage\n    tags:\n      - processing time\n      - network\n      - storage\n      - viewer data\n  - name: Non-Auth Endpoints\n    tags:\n      - specs\nservers:\n  - url: https://api-sandbox.cloud.wowza.com/api/v1\ncomponents:\n  parameters:\n    page:\n      description: Returns a paginated view of results from the HTTP request. Specify a\n        positive integer to indicate which page of the results should be\n        displayed first. \u003cstrong\u003eNext\u003c/strong\u003e and \u003cstrong\u003ePrevious\u003c/strong\u003e\n        links allow you to navigate multiple pages of results. Omit the\n        \u003cem\u003epage\u003c/em\u003e parameter or specify an integer that's less than or equal\n        to \u003cstrong\u003e0\u003c/strong\u003e to view all (unpaginated) results.\n      in: query\n      name: page\n      schema:\n        type: integer\n    per_page:\n      description: For use with the \u003cem\u003epage\u003c/em\u003e parameter. Indicates how many records\n        should be included on each page of results. A valid value is any\n        positive integer. The default is \u003cstrong\u003e10\u003c/strong\u003e.\n      in: query\n      name: per_page\n      schema:\n        type: integer\n    filter_from_:\n      description: The start of the date and time range for calculating usage. Express the\n        value by using the ISO 8601 standard of **YYYY-MM-DDTHH:MM:SSZ** where\n        **HH** is a 24-hour clock in UTC. The default is the beginning of the\n        current month.\n      in: query\n      name: filter[from]\n      schema:\n        type: string\n    filter_interval_:\n      description: The length of time for a block of usage data. Valid values are **year**,\n        **quarter**, **month**, **week**, **day** or **1d** - **364d**, **hour**\n        or **1h** to **23h**, **minute** or **1m** - **59m**, and **second** or\n        **1s** - **59s**. The default is **10m** (10 minutes).\n      in: query\n      name: filter[interval]\n      schema:\n        type: string\n    filter_to_:\n      description: The end of the date and time range for calculating usage. Express the\n        value by using the ISO 8601 standard of **YYYY-MM-DDTHH:MM:SSZ** where\n        **HH** is a 24-hour clock in UTC. The default is the current date and\n        time.\n      in: query\n      name: filter[to]\n      schema:\n        type: string\n  requestBodies:\n    stream_source_create_input:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/stream_source_create_input\"\n      description: Provide the details of the stream source to add in the body of the\n        request.\n      required: true\n  securitySchemes:\n    wsc-access-key:\n      description: A valid 64-digit, alphanumeric API access key.\n      in: header\n      name: wsc-access-key\n      type: apiKey\n    wsc-api-key:\n      description: \"Your account's 64-digit, alphanumeric API key. \"\n      in: header\n      name: wsc-api-key\n      type: apiKey\n  schemas:\n    Error401:\n      example:\n        Example Response 1:\n          meta:\n            code: ERR-401-NoApiKey\n            description: \"\"\n            links: []\n            message: No API key sent in header.\n            status: 401\n            title: No API Key Error\n        Example Response 2:\n          meta:\n            code: ERR-401-NoAccessKey\n            description: \"\"\n            links: []\n            message: No access key sent in header.\n            status: 401\n            title: No Access Key Error\n        Example Response 3:\n          meta:\n            code: ERR-401-InvalidApiKey\n            description: \"\"\n            links: []\n            message: Invalid API key.\n            status: 401\n            title: Invalid Api Key Error\n        Example Response 4:\n          meta:\n            code: ERR-401-InvalidAccessKey\n            description: \"\"\n            links: []\n            message: Invalid access key.\n            status: 401\n            title: Invalid Access Key Error\n        Example Response 5:\n          meta:\n            code: ERR-401-BadAccountStatus\n            description: \"\"\n            links: []\n            message: Your account's status doesn't allow this action.\n            status: 401\n            title: Bad Account Status Error\n        Example Response 6:\n          meta:\n            code: ERR-401-FeatureNotEnabled\n            description: \"\"\n            links: []\n            message: This feature isn't enabled.\n            status: 401\n            title: Feature Not Enabled Error\n        Example Response 7:\n          meta:\n            code: ERR-401-TrialExceeded\n            description: \"\"\n            links: []\n            message: Your billing status needs attention. You can't start or add live\n              streams until your billing status is updated.\n            status: 401\n            title: Bad Billing Status Error\n      properties:\n        meta:\n          properties:\n            code:\n              type: string\n            description:\n              type: string\n            links:\n              items:\n                type: string\n              type: array\n            message:\n              type: string\n            status:\n              format: int32\n              type: integer\n            title:\n              type: string\n          title: meta\n          type: object\n      required:\n        - meta\n    Error403:\n      example:\n        Example Response 1:\n          meta:\n            code: ERR-403-RecordUnaccessible\n            description: \"\"\n            links: []\n            message: The requested resource isn't accessible.\n            status: 403\n            title: Record Unaccessible Error\n      properties:\n        meta:\n          properties:\n            code:\n              type: string\n            description:\n              type: string\n            links:\n              items:\n                type: string\n              type: array\n            message:\n              type: string\n            status:\n              format: int32\n              type: integer\n            title:\n              type: string\n          title: meta\n          type: object\n      required:\n        - meta\n    Error404:\n      example:\n        Example Response 1:\n          meta:\n            code: ERR-404-RecordNotFound\n            description: \"\"\n            links: []\n            message: The requested resource couldn't be found.\n            status: 404\n            title: Record Not Found Error\n      properties:\n        meta:\n          properties:\n            code:\n              type: string\n            description:\n              type: string\n            links:\n              items:\n                type: string\n              type: array\n            message:\n              type: string\n            status:\n              format: int32\n              type: integer\n            title:\n              type: string\n          title: meta\n          type: object\n      required:\n        - meta\n    Error410:\n      example:\n        Example Response 1:\n          meta:\n            code: ERR-410-RecordDeleted\n            description: \"\"\n            links: []\n            message: The requested resource has been deleted.\n            status: 410\n            title: Record Deleted Error\n      properties:\n        meta:\n          properties:\n            code:\n              type: string\n            description:\n              type: string\n            links:\n              items:\n                type: string\n              type: array\n            message:\n              type: string\n            status:\n              format: int32\n              type: integer\n            title:\n              type: string\n          title: meta\n          type: object\n      required:\n        - meta\n    Error422:\n      example:\n        Example Response 1:\n          meta:\n            code: ERR-422-RecordInvalid\n            description: \"\"\n            links: []\n            message: The request couldn't be processed. ... can't be blank\n            status: 422\n            title: Record Invalid Error\n      properties:\n        meta:\n          properties:\n            code:\n              type: string\n            description:\n              type: string\n            links:\n              items:\n                type: string\n              type: array\n            message:\n              type: string\n            status:\n              format: int32\n              type: integer\n            title:\n              type: string\n          title: meta\n          type: object\n      required:\n        - meta\n    Error422InvalidTimeFormat:\n      example:\n        Example Response 1:\n          meta:\n            code: ERR-422-InvalidTimeFormat\n            description: \"\"\n            links: []\n            message: Invalid time format.\n            status: 422\n            title: Invalid Time Format Error\n      properties:\n        meta:\n          properties:\n            code:\n              type: string\n            description:\n              type: string\n            links:\n              items:\n                type: string\n              type: array\n            message:\n              type: string\n            status:\n              format: int32\n              type: integer\n            title:\n              type: string\n          title: meta\n          type: object\n      required:\n        - meta\n    Spec:\n      properties:\n        basePath:\n          description: The base path on which the API is served, relative to the **host**.\n          example: /v1\n          type: string\n        consumes:\n          description: A list of MIME types that the API can consume.\n          example:\n            - application/json\n          items:\n            type: string\n          type: array\n        definitions:\n          description: The data types produced and consumed by operations.\n          type: object\n        externalDocs:\n          description: Links to and descriptions of related external documentation.\n          type: object\n        host:\n          description: The host (domain name or IP address) serving the API.\n          example: api.cloud.wowza.com\n          type: string\n        info:\n          description: Metadata about the API.\n          type: object\n        paths:\n          description: The paths and operations available to the API.\n          type: object\n        produces:\n          description: A list of MIME types that the API can produce.\n          example:\n            - application/json\n          items:\n            type: string\n          type: array\n        schemes:\n          description: The transfer protocol being used by the API.\n          example: https\n          items:\n            type: string\n          type: array\n        security:\n          description: A list of the security schemes being used by the API.\n          example:\n            - wsc-api-key: []\n            - wsc-access-key: []\n          items:\n            type: object\n          type: array\n        securityDefinitions:\n          description: The security scheme definitions being used by the API.\n          items:\n            type: object\n          type: object\n        swagger:\n          description: The version of the Swagger specification that's being used.\n          example: 1.0.0\n          type: string\n        tags:\n          description: A list of tags used by the specification, with metadata.\n          items:\n            type: object\n          type: array\n        x-tagGroups:\n          description: A list of the groups and tags used in the left column of the Swagger\n            page.\n          items:\n            type: object\n          type: array\n      type: object\n    audio_codec_metric:\n      properties:\n        status:\n          description: The status of the current key. Possible values are\n            \u003cstrong\u003enormal\u003c/strong\u003e (everything is fine),\n            \u003cstrong\u003ewarning\u003c/strong\u003e (something may be misconfigured), and\n            \u003cstrong\u003eno_data\u003c/strong\u003e (no data was returned, perhaps because the\n            instance isn't running).\n          example: normal\n          type: string\n        text:\n          description: A message related to the value and status of the current key.\n            Usually blank unless there's a warning status.\n          example: \"\"\n          type: string\n        units:\n          description: The unit of the returned value, such as \u003cstrong\u003eKbps\u003c/strong\u003e,\n            \u003cstrong\u003ebps\u003c/strong\u003e, \u003cstrong\u003e%\u003c/strong\u003e, \u003cstrong\u003eFPS\u003c/strong\u003e, or\n            \u003cstrong\u003eGOP\u003c/strong\u003e.\n          example: \"\"\n          type: string\n        value:\n          description: The value of the associated key.\n          example: aac\n          type: string\n      type: object\n    bits_in_rate_metric:\n      properties:\n        status:\n          description: The status of the current key. Possible values are\n            \u003cstrong\u003enormal\u003c/strong\u003e (everything is fine),\n            \u003cstrong\u003ewarning\u003c/strong\u003e (something may be misconfigured), and\n            \u003cstrong\u003eno_data\u003c/strong\u003e (no data was returned, perhaps because the\n            instance isn't running).\n          example: normal\n          type: string\n        text:\n          description: A message related to the value and status of the current key.\n            Usually blank unless there's a warning status.\n          example: \"\"\n          type: string\n        units:\n          description: The unit of the returned value, such as \u003cstrong\u003eKbps\u003c/strong\u003e,\n            \u003cstrong\u003ebps\u003c/strong\u003e, \u003cstrong\u003e%\u003c/strong\u003e, \u003cstrong\u003eFPS\u003c/strong\u003e, or\n            \u003cstrong\u003eGOP\u003c/strong\u003e.\n          example: Kbps\n          type: string\n        value:\n          description: The value of the associated key.\n          example: 317.3\n          format: float\n          type: number\n      type: object\n    bits_out_rate_metric:\n      properties:\n        status:\n          description: The status of the current key. Possible values are\n            \u003cstrong\u003enormal\u003c/strong\u003e (everything is fine),\n            \u003cstrong\u003ewarning\u003c/strong\u003e (something may be misconfigured), and\n            \u003cstrong\u003eno_data\u003c/strong\u003e (no data was returned, perhaps because the\n            instance isn't running).\n          example: normal\n          type: string\n        text:\n          description: A message related to the value and status of the current key.\n            Usually blank unless there's a warning status.\n          example: \"\"\n          type: string\n        units:\n          description: The unit of the returned value, such as \u003cstrong\u003eKbps\u003c/strong\u003e,\n            \u003cstrong\u003ebps\u003c/strong\u003e, \u003cstrong\u003e%\u003c/strong\u003e, \u003cstrong\u003eFPS\u003c/strong\u003e, or\n            \u003cstrong\u003eGOP\u003c/strong\u003e.\n          example: Kbps\n          type: string\n        value:\n          description: The value of the associated key.\n          example: 856\n          format: float\n          type: number\n      type: object\n    bytes_in_rate_metric:\n      properties:\n        status:\n          description: The status of the current key. Possible values are\n            \u003cstrong\u003enormal\u003c/strong\u003e (everything is fine),\n            \u003cstrong\u003ewarning\u003c/strong\u003e (something may be misconfigured), and\n            \u003cstrong\u003eno_data\u003c/strong\u003e (no data was returned, perhaps because the\n            instance isn't running).\n          example: normal\n          type: string\n        text:\n          description: A message related to the value and status of the current key.\n            Usually blank unless there's a warning status.\n          example: \"\"\n          type: string\n        units:\n          description: The unit of the returned value, such as \u003cstrong\u003eKbps\u003c/strong\u003e,\n            \u003cstrong\u003ebps\u003c/strong\u003e, \u003cstrong\u003e%\u003c/strong\u003e, \u003cstrong\u003eFPS\u003c/strong\u003e, or\n            \u003cstrong\u003eGOP\u003c/strong\u003e.\n          example: KBps\n          type: string\n        value:\n          description: The value of the associated key.\n          example: 317.3\n          format: float\n          type: number\n      type: object\n    bytes_out_rate_metric:\n      properties:\n        status:\n          description: The status of the current key. Possible values are\n            \u003cstrong\u003enormal\u003c/strong\u003e (everything is fine),\n            \u003cstrong\u003ewarning\u003c/strong\u003e (something may be misconfigured), and\n            \u003cstrong\u003eno_data\u003c/strong\u003e (no data was returned, perhaps because the\n            instance isn't running).\n          example: normal\n          type: string\n        text:\n          description: A message related to the value and status of the current key.\n            Usually blank unless there's a warning status.\n          example: \"\"\n          type: string\n        units:\n          description: The unit of the returned value, such as \u003cstrong\u003eKbps\u003c/strong\u003e,\n            \u003cstrong\u003ebps\u003c/strong\u003e, \u003cstrong\u003e%\u003c/strong\u003e, \u003cstrong\u003eFPS\u003c/strong\u003e, or\n            \u003cstrong\u003eGOP\u003c/strong\u003e.\n          example: KBps\n          type: string\n        value:\n          description: The value of the associated key.\n          example: 856\n          format: float\n          type: number\n      type: object\n    configured_bytes_out_rate_metric:\n      properties:\n        status:\n          description: The status of the current key. Possible values are\n            \u003cstrong\u003enormal\u003c/strong\u003e (everything is fine),\n            \u003cstrong\u003ewarning\u003c/strong\u003e (something may be misconfigured), and\n            \u003cstrong\u003eno_data\u003c/strong\u003e (no data was returned, perhaps because the\n            instance isn't running).\n          example: warning\n          type: string\n        text:\n          description: A message related to the value and status of the current key.\n            Usually blank unless there's a warning status.\n          example: Outbound bitrate is lower than the configured bitrate. There might\n            be a problem with the stream targets.\n          type: string\n        units:\n          description: The unit of the returned value, such as \u003cstrong\u003eKbps\u003c/strong\u003e,\n            \u003cstrong\u003ebps\u003c/strong\u003e, \u003cstrong\u003e%\u003c/strong\u003e, \u003cstrong\u003eFPS\u003c/strong\u003e, or\n            \u003cstrong\u003eGOP\u003c/strong\u003e.\n          example: Kbps\n          type: string\n        value:\n          description: The value of the associated key.\n          example: 8192\n          type: integer\n      type: object\n    connected_metric:\n      properties:\n        status:\n          description: The status of the current key. Possible values are\n            \u003cstrong\u003enormal\u003c/strong\u003e (everything is fine),\n            \u003cstrong\u003ewarning\u003c/strong\u003e (something may be misconfigured), and\n            \u003cstrong\u003eno_data\u003c/strong\u003e (no data was returned, perhaps because the\n            instance isn't running).\n          example: normal\n          type: string\n        text:\n          description: A message related to the value and status of the current key.\n            Usually blank unless there's a warning status.\n          example: \"\"\n          type: string\n        units:\n          description: The unit of the returned value, such as \u003cstrong\u003eKbps\u003c/strong\u003e,\n            \u003cstrong\u003ebps\u003c/strong\u003e, \u003cstrong\u003e%\u003c/strong\u003e, \u003cstrong\u003eFPS\u003c/strong\u003e, or\n            \u003cstrong\u003eGOP\u003c/strong\u003e.\n          example: \"\"\n          type: string\n        value:\n          description: The value of the associated key.\n          example: Yes\n          type: string\n      type: object\n    cpu_idle_metric:\n      properties:\n        status:\n          description: The status of the current key. Possible values are\n            \u003cstrong\u003enormal\u003c/strong\u003e (everything is fine),\n            \u003cstrong\u003ewarning\u003c/strong\u003e (something may be misconfigured), and\n            \u003cstrong\u003eno_data\u003c/strong\u003e (no data was returned, perhaps because the\n            instance isn't running).\n          example: normal\n          type: string\n        text:\n          description: A message related to the value and status of the current key.\n            Usually blank unless there's a warning status.\n          example: \"\"\n          type: string\n        units:\n          description: The unit of the returned value, such as \u003cstrong\u003eKbps\u003c/strong\u003e,\n            \u003cstrong\u003ebps\u003c/strong\u003e, \u003cstrong\u003e%\u003c/strong\u003e, \u003cstrong\u003eFPS\u003c/strong\u003e, or\n            \u003cstrong\u003eGOP\u003c/strong\u003e.\n          example: \"%\"\n          type: string\n        value:\n          description: The value of the associated key.\n          example: 20\n          type: integer\n      type: object\n    cpu_metric:\n      properties:\n        status:\n          description: The status of the current key. Possible values are\n            \u003cstrong\u003enormal\u003c/strong\u003e (everything is fine),\n            \u003cstrong\u003ewarning\u003c/strong\u003e (something may be misconfigured), and\n            \u003cstrong\u003eno_data\u003c/strong\u003e (no data was returned, perhaps because the\n            instance isn't running).\n          example: normal\n          type: string\n        text:\n          description: A message related to the value and status of the current key.\n            Usually blank unless there's a warning status.\n          example: \"\"\n          type: string\n        units:\n          description: The unit of the returned value, such as \u003cstrong\u003eKbps\u003c/strong\u003e,\n            \u003cstrong\u003ebps\u003c/strong\u003e, \u003cstrong\u003e%\u003c/strong\u003e, \u003cstrong\u003eFPS\u003c/strong\u003e, or\n            \u003cstrong\u003eGOP\u003c/strong\u003e.\n          example: \"%\"\n          type: string\n        value:\n          description: The value of the associated key.\n          example: 20\n          type: integer\n      type: object\n    custom_stream_target_input:\n      properties:\n        stream_target:\n          properties:\n            backup_url:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e. The backup RTMP ingest URL\n                of the target, without the preceding protocol and without the\n                trailing slash (/).\n              example: rtmp://b.ep337857.i.akamaientrypoint.net/EntryPoint\n              type: string\n            hds_playback_url:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e and \u003cem\u003eprovider\u003c/em\u003e is\n                \u003cem\u003enot\u003c/em\u003e \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e. The web address\n                that the target uses to play Adobe HDS streams.\n              example: rtmp://cp319499.live.edgefcs.net/live/c9467d50@337857\n              type: string\n            hls_playback_url:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e. The web address that the\n                target uses to play Apple HLS streams.\n              example: http://xyz.akamaihd.net/z/723a8b9c_1@337857/manifest.f4m\n              type: string\n            name:\n              description: A descriptive name for the stream target. Maximum 255 characters.\n              example: My Custom Stream Target\n              type: string\n            password:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e and \u003cem\u003eprovider\u003c/em\u003e is\n                \u003cem\u003enot\u003c/em\u003e **akamai_cupertino**. A \u003cem\u003eusername\u003c/em\u003e must also\n                be present. The password associated with the target username for\n                RTMP authentication.\n              example: cb1e77e98d\n              type: string\n            primary_url:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e. The primary RTMP ingest\n                URL, without the preceding protocol and without the trailing\n                slash (/).\n              example: rtmp://p.ep337857.i.akamaientrypoint.net/EntryPoint\n              type: string\n            provider:\n              description: The CDN for the target. \u003cbr /\u003e\u003cbr /\u003eRequired for targets whose\n                \u003cem\u003etype\u003c/em\u003e is \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e. Valid\n                values for \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e are\n                \u003cstrong\u003eakamai\u003c/strong\u003e, \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e,\n                \u003cstrong\u003eakamai_rtmp\u003c/strong\u003e, \u003cstrong\u003elimelight\u003c/strong\u003e,\n                \u003cstrong\u003ertmp\u003c/strong\u003e, and \u003cstrong\u003eustream\u003c/strong\u003e. Values can\n                be appended with **_mock** to use in the sandbox environment.\n                \u003cbr /\u003e\u003cbr /\u003eValid values for \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e\n                are \u003cstrong\u003eakamai\u003c/strong\u003e, \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e\n                (default), \u003cstrong\u003eakamai_legacy_rtmp\u003c/strong\u003e, and\n                \u003cstrong\u003ewowza\u003c/strong\u003e. \u003cbr /\u003e\u003cbr\n                /\u003e\u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e defaults to and\n                must be \u003cstrong\u003ewowza\u003c/strong\u003e.\n              example: rtmp\n              type: string\n            rtmp_playback_url:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e. The web address that the\n                target uses to play RTMP streams.\n              example: rtmp://cp123456.live.edgefcs.net/live//[EVENT]@654321\n              type: string\n            stream_name:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e. The name of the stream as\n                defined in the target's ingestion settings.\n              example: c8467d50@337857\n              type: string\n            type:\n              description: \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e is a Wowza CDN target.\n                \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e is an ultra low\n                latency Wowza stream target. \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e\n                (the default) is an external, third-party destination. \u003c!--and\n                \u003cstrong\u003eFacebookStreamTarget\u003c/strong\u003e (a Facebook Live\n                target).--\u003e\n              example: CustomStreamTarget\n              type: string\n            username:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e and \u003cem\u003eprovider\u003c/em\u003e is\n                \u003cem\u003enot\u003c/em\u003e **akamai_cupertino**. The username or ID that the\n                target uses for RTMP authentication.\n              example: \"319699\"\n              type: string\n          required:\n            - name\n            - primary_url\n            - provider\n            - stream_name\n          title: custom_stream_target\n          type: object\n      required:\n        - stream_target\n      type: object\n    frame_rate_metric:\n      properties:\n        status:\n          description: The status of the current key. Possible values are\n            \u003cstrong\u003enormal\u003c/strong\u003e (everything is fine),\n            \u003cstrong\u003ewarning\u003c/strong\u003e (something may be misconfigured), and\n            \u003cstrong\u003eno_data\u003c/strong\u003e (no data was returned, perhaps because the\n            instance isn't running).\n          example: normal\n          type: string\n        text:\n          description: A message related to the value and status of the current key.\n            Usually blank unless there's a warning status.\n          example: \"\"\n          type: string\n        units:\n          description: The unit of the returned value, such as \u003cstrong\u003eKbps\u003c/strong\u003e,\n            \u003cstrong\u003ebps\u003c/strong\u003e, \u003cstrong\u003e%\u003c/strong\u003e, \u003cstrong\u003eFPS\u003c/strong\u003e, or\n            \u003cstrong\u003eGOP\u003c/strong\u003e.\n          example: FPS\n          type: string\n        value:\n          description: The value of the associated key.\n          example: 30\n          type: integer\n      type: object\n    frame_size_metric:\n      properties:\n        status:\n          description: The status of the current key. Possible values are\n            \u003cstrong\u003enormal\u003c/strong\u003e (everything is fine),\n            \u003cstrong\u003ewarning\u003c/strong\u003e (something may be misconfigured), and\n            \u003cstrong\u003eno_data\u003c/strong\u003e (no data was returned, perhaps because the\n            instance isn't running).\n          example: warning\n          type: string\n        text:\n          description: A message related to the value and status of the current key.\n            Usually blank unless there's a warning status.\n          example: \"Configured frame size is different from what Wowza Streaming Cloud\n            is receiving from the source: 1280x720.\"\n          type: string\n        units:\n          description: The unit of the returned value, such as \u003cstrong\u003eKbps\u003c/strong\u003e,\n            \u003cstrong\u003ebps\u003c/strong\u003e, \u003cstrong\u003e%\u003c/strong\u003e, \u003cstrong\u003eFPS\u003c/strong\u003e, or\n            \u003cstrong\u003eGOP\u003c/strong\u003e.\n          example: \"\"\n          type: string\n        value:\n          description: The value of the associated key.\n          example: 1280x720\n          type: string\n      type: object\n    geoblock:\n      example:\n        countries:\n          - us\n          - de\n        created_at: 2017-11-13T20:00:42.966Z\n        state: requested\n        stream_target_id: PblTJm1t\n        type: allow\n        updated_at: 2017-11-15T03:39:40.966Z\n        whitelist:\n          - 1.2.3.4\n          - 9.8.7.6\n      properties:\n        countries:\n          description: Required when \u003cem\u003etype\u003c/em\u003e is \u003cstrong\u003eallow\u003c/strong\u003e or\n            \u003cstrong\u003edeny\u003c/strong\u003e. The locations affected by the geo-blocking.\n            Enter a comma-separated list (an array) of two-letter ISO 3166-1\n            country codes. For a list, see \u003ca\n            href='https://en.wikipedia.org/wiki/ISO_3166-1' target='_blank'\u003eISO\n            3166-1\u003c/a\u003e on wikipedia.\n          items:\n            type: string\n          type: array\n        created_at:\n          description: The date and time that the geo-blocking rendition was created.\n          format: date-time\n          type: string\n        state:\n          description: The state of the geo-blocking.\n          enum:\n            - requested\n            - activated\n            - update_requested\n            - delete_requested\n            - failed\n          type: string\n        stream_target_id:\n          description: The unique alphanumeric string that identifies the stream target.\n          type: string\n        type:\n          description: The type of geo-blocking to apply. The value \u003cstrong\u003eallow\u003c/strong\u003e\n            permits viewing only in the locations specified by the\n            \u003cem\u003ecountries\u003c/em\u003e parameter. The value \u003cstrong\u003edeny\u003c/strong\u003e\n            prohibits viewing in the locations specified by the\n            \u003cem\u003ecountries\u003c/em\u003e parameter. The value \u003cstrong\u003edisabled\u003c/strong\u003e\n            (the default) permits viewing everywhere.\n          enum:\n            - disabled\n            - allow\n            - deny\n          type: string\n        updated_at:\n          description: The date and time that the geo-blocking rendition was updated.\n          format: date-time\n          type: string\n        whitelist:\n          description: Whitelisted addresses can be viewed even if they're within a\n            geo-blocked location. Enter a comma-separated list (an array) of IP\n            addresses that always allow streaming.\n          items:\n            type: string\n          type: array\n      type: object\n    geoblock_create_input:\n      allOf:\n        - $ref: \"#/components/schemas/geoblock_input\"\n    geoblock_input:\n      properties:\n        geoblock:\n          properties:\n            countries:\n              description: Required when \u003cem\u003etype\u003c/em\u003e is \u003cstrong\u003eallow\u003c/strong\u003e or\n                \u003cstrong\u003edeny\u003c/strong\u003e. The locations affected by the\n                geo-blocking. Enter a comma-separated list (an array) of\n                two-letter ISO 3166-1 country codes. For a list, see \u003ca\n                href='https://en.wikipedia.org/wiki/ISO_3166-1'\n                target='_blank'\u003eISO 3166-1\u003c/a\u003e on wikipedia.\n              example:\n                - us\n                - de\n              items:\n                type: string\n              type: array\n            type:\n              description: The type of geo-blocking to apply. The value\n                \u003cstrong\u003eallow\u003c/strong\u003e permits viewing only in the locations\n                specified by the \u003cem\u003ecountries\u003c/em\u003e parameter. The value\n                \u003cstrong\u003edeny\u003c/strong\u003e prohibits viewing in the locations\n                specified by the \u003cem\u003ecountries\u003c/em\u003e parameter. The value\n                \u003cstrong\u003edisabled\u003c/strong\u003e (the default) permits viewing\n                everywhere.\n              enum:\n                - disabled\n                - allow\n                - deny\n              example: allow\n              type: string\n            whitelist:\n              description: Whitelisted addresses can be viewed even if they're within a\n                geo-blocked location. Enter a comma-separated list (an array) of\n                IP addresses that always allow streaming.\n              example:\n                - 1.2.3.4\n                - 9.8.7.6\n              items:\n                type: string\n              type: array\n          required:\n            - type\n          title: geoblock\n          type: object\n      required:\n        - geoblock\n      type: object\n    geoblock_update_input:\n      allOf:\n        - $ref: \"#/components/schemas/geoblock_input\"\n    gpu_decoder_usage_metric:\n      properties:\n        status:\n          description: The status of the current key. Possible values are\n            \u003cstrong\u003enormal\u003c/strong\u003e (everything is fine),\n            \u003cstrong\u003ewarning\u003c/strong\u003e (something may be misconfigured), and\n            \u003cstrong\u003eno_data\u003c/strong\u003e (no data was returned, perhaps because the\n            instance isn't running).\n          example: normal\n          type: string\n        text:\n          description: A message related to the value and status of the current key.\n            Usually blank unless there's a warning status.\n          example: \"\"\n          type: string\n        units:\n          description: The unit of the returned value, such as \u003cstrong\u003eKbps\u003c/strong\u003e,\n            \u003cstrong\u003ebps\u003c/strong\u003e, \u003cstrong\u003e%\u003c/strong\u003e, \u003cstrong\u003eFPS\u003c/strong\u003e, or\n            \u003cstrong\u003eGOP\u003c/strong\u003e.\n          example: \"%\"\n          type: string\n        value:\n          description: The value of the associated key.\n          example: 50\n          type: integer\n      type: object\n    gpu_driver_version_metric:\n      properties:\n        status:\n          description: The status of the current key. Possible values are\n            \u003cstrong\u003enormal\u003c/strong\u003e (everything is fine),\n            \u003cstrong\u003ewarning\u003c/strong\u003e (something may be misconfigured), and\n            \u003cstrong\u003eno_data\u003c/strong\u003e (no data was returned, perhaps because the\n            instance isn't running).\n          example: normal\n          type: string\n        text:\n          description: A message related to the value and status of the current key.\n            Usually blank unless there's a warning status.\n          example: \"\"\n          type: string\n        units:\n          description: The unit of the returned value, such as \u003cstrong\u003eKbps\u003c/strong\u003e,\n            \u003cstrong\u003ebps\u003c/strong\u003e, \u003cstrong\u003e%\u003c/strong\u003e, \u003cstrong\u003eFPS\u003c/strong\u003e, or\n            \u003cstrong\u003eGOP\u003c/strong\u003e.\n          example: \"\"\n          type: string\n        value:\n          description: The value of the associated key.\n          example: not_installed\n          type: string\n      type: object\n    gpu_encoder_usage_metric:\n      properties:\n        status:\n          description: The status of the current key. Possible values are\n            \u003cstrong\u003enormal\u003c/strong\u003e (everything is fine),\n            \u003cstrong\u003ewarning\u003c/strong\u003e (something may be misconfigured), and\n            \u003cstrong\u003eno_data\u003c/strong\u003e (no data was returned, perhaps because the\n            instance isn't running).\n          example: normal\n          type: string\n        text:\n          description: A message related to the value and status of the current key.\n            Usually blank unless there's a warning status.\n          example: \"\"\n          type: string\n        units:\n          description: The unit of the returned value, such as \u003cstrong\u003eKbps\u003c/strong\u003e,\n            \u003cstrong\u003ebps\u003c/strong\u003e, \u003cstrong\u003e%\u003c/strong\u003e, \u003cstrong\u003eFPS\u003c/strong\u003e, or\n            \u003cstrong\u003eGOP\u003c/strong\u003e.\n          example: \"%\"\n          type: string\n        value:\n          description: The value of the associated key.\n          example: 50\n          type: integer\n      type: object\n    gpu_memory_usage_metric:\n      properties:\n        status:\n          description: The status of the current key. Possible values are\n            \u003cstrong\u003enormal\u003c/strong\u003e (everything is fine),\n            \u003cstrong\u003ewarning\u003c/strong\u003e (something may be misconfigured), and\n            \u003cstrong\u003eno_data\u003c/strong\u003e (no data was returned, perhaps because the\n            instance isn't running).\n          example: normal\n          type: string\n        text:\n          description: A message related to the value and status of the current key.\n            Usually blank unless there's a warning status.\n          example: \"\"\n          type: string\n        units:\n          description: The unit of the returned value, such as \u003cstrong\u003eKbps\u003c/strong\u003e,\n            \u003cstrong\u003ebps\u003c/strong\u003e, \u003cstrong\u003e%\u003c/strong\u003e, \u003cstrong\u003eFPS\u003c/strong\u003e, or\n            \u003cstrong\u003eGOP\u003c/strong\u003e.\n          example: \"%\"\n          type: string\n        value:\n          description: The value of the associated key.\n          example: 50\n          type: integer\n      type: object\n    gpu_usage_metric:\n      properties:\n        status:\n          description: The status of the current key. Possible values are\n            \u003cstrong\u003enormal\u003c/strong\u003e (everything is fine),\n            \u003cstrong\u003ewarning\u003c/strong\u003e (something may be misconfigured), and\n            \u003cstrong\u003eno_data\u003c/strong\u003e (no data was returned, perhaps because the\n            instance isn't running).\n          example: normal\n          type: string\n        text:\n          description: A message related to the value and status of the current key.\n            Usually blank unless there's a warning status.\n          example: \"\"\n          type: string\n        units:\n          description: The unit of the returned value, such as \u003cstrong\u003eKbps\u003c/strong\u003e,\n            \u003cstrong\u003ebps\u003c/strong\u003e, \u003cstrong\u003e%\u003c/strong\u003e, \u003cstrong\u003eFPS\u003c/strong\u003e, or\n            \u003cstrong\u003eGOP\u003c/strong\u003e.\n          example: \"%\"\n          type: string\n        value:\n          description: The value of the associated key.\n          example: 50\n          type: integer\n      type: object\n    height_metric:\n      properties:\n        status:\n          description: The status of the current key. Possible values are\n            \u003cstrong\u003enormal\u003c/strong\u003e (everything is fine),\n            \u003cstrong\u003ewarning\u003c/strong\u003e (something may be misconfigured), and\n            \u003cstrong\u003eno_data\u003c/strong\u003e (no data was returned, perhaps because the\n            instance isn't running).\n          example: warning\n          type: string\n        text:\n          description: A message related to the value and status of the current key.\n            Usually blank unless there's a warning status.\n          example: \"Configured height is different from what Wowza Streaming Cloud is\n            receiving from the source: 720.\"\n          type: string\n        units:\n          description: The unit of the returned value, such as \u003cstrong\u003eKbps\u003c/strong\u003e,\n            \u003cstrong\u003ebps\u003c/strong\u003e, \u003cstrong\u003e%\u003c/strong\u003e, \u003cstrong\u003eFPS\u003c/strong\u003e, or\n            \u003cstrong\u003eGOP\u003c/strong\u003e.\n          example: px\n          type: string\n        value:\n          description: The value of the associated key.\n          example: 720\n          type: integer\n      type: object\n    index_stream_target:\n      example:\n        connection_code: 133fcc\n        connection_code_expires_at: 2018-09-15T20:00:43.306Z\n        created_at: 2017-11-13T20:00:43.306Z\n        hds_playback_url: http://[subdomain].akamaihd.net/i/76fa8b9c_1@335304/manifest.f4m\n        hls_playback_url: http://[subdomain].akamaihd.net/z/76fa8b9c_1@335304/master.m3u8\n        id: 2adffc17\n        location: us_west_california\n        name: My RTMP Stream Target\n        password: 0c7cba98e7\n        primary_url: rtmp://p.ep336304.i.akamaientrypoint.net/EntryPoint\n        provider: akamai\n        secure_ingest_query_param: ...\n        stream_name: 76fa8b9c_1_[bitrate]@335304\n        type: WowzaStreamTarget\n        updated_at: 2017-11-14T22:00:02.306Z\n        use_cors: false\n        username: \"169630\"\n      properties:\n        chunk_size:\n          description: \u003cstrong\u003eThe \u003cem\u003echunk_size\u003c/em\u003e parameter is deprecated. To set the\n            chunk size of a stream target, use the POST\n            /stream_targets/[stream_target_id]/properties endpoint.\u003c/strong\u003e\n            Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n            \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e and \u003cem\u003eprovider\u003c/em\u003e is\n            \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e. The segment duration for HLS\n            encoding. The default is \u003cstrong\u003e10\u003c/strong\u003e.\n          enum:\n            - 2\n            - 4\n            - 6\n            - 8\n            - 10\n          type: string\n        connection_code:\n          description: A six-character, alphanumeric string that allows Wowza Streaming\n            Engine to send a transcoded stream to a\n            \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e or for the Wowza GoCoder app to\n            send an encoded stream to a\n            \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e. The code can be used\n            once and expires 24 hours after it's created.\n          type: string\n        connection_code_expires_at:\n          description: The date and time that the \u003cem\u003econnection_code\u003c/em\u003e expires.\n          format: date-time\n          type: string\n        created_at:\n          description: The date and time that the stream target was created.\n          format: date-time\n          type: string\n        hds_playback_url:\n          description: The web address that the target uses to play Adobe HDS streams.\n          type: string\n        hls_playback_url:\n          description: Only for targets whose \u003cem\u003eprovider\u003c/em\u003e is\n            \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e. The web address that the target\n            uses to play Apple HLS streams.\n          type: string\n        id:\n          description: The unique alphanumeric string that identifies the stream target.\n          type: string\n        location:\n          description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n            \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e and \u003cem\u003eprovider\u003c/em\u003e is\n            \u003cem\u003enot\u003c/em\u003e \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e. Choose a location as\n            close as possible to your video source.\n          enum:\n            - asia_pacific_australia\n            - asia_pacific_japan\n            - asia_pacific_singapore\n            - asia_pacific_taiwan\n            - eu_belgium\n            - eu_germany\n            - eu_ireland\n            - south_america_brazil\n            - us_central_iowa\n            - us_east_s_carolina\n            - us_east_virginia\n            - us_west_california\n            - us_west_oregon\n          type: string\n        name:\n          description: A descriptive name for the stream target. Maximum 255 characters.\n          type: string\n        primary_url:\n          description: The primary ingest URL of the target.\n          type: string\n        provider:\n          description: The CDN for the target. \u003cbr /\u003e\u003cbr /\u003eRequired for targets whose\n            \u003cem\u003etype\u003c/em\u003e is \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e. Valid values\n            for \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e are \u003cstrong\u003eakamai\u003c/strong\u003e,\n            \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e, \u003cstrong\u003eakamai_rtmp\u003c/strong\u003e,\n            \u003cstrong\u003elimelight\u003c/strong\u003e, \u003cstrong\u003ertmp\u003c/strong\u003e, and\n            \u003cstrong\u003eustream\u003c/strong\u003e. Values can be appended with **_mock** to\n            use in the sandbox environment. \u003cbr /\u003e\u003cbr /\u003eValid values for\n            \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e are \u003cstrong\u003eakamai\u003c/strong\u003e,\n            \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e (default),\n            \u003cstrong\u003eakamai_legacy_rtmp\u003c/strong\u003e, and \u003cstrong\u003ewowza\u003c/strong\u003e. \u003cbr\n            /\u003e\u003cbr /\u003e\u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e defaults to and\n            must be \u003cstrong\u003ewowza\u003c/strong\u003e.\n          type: string\n        rtmp_playback_url:\n          description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n            \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e. The web address that the target\n            uses to play RTMP streams.\n          type: string\n        stream_name:\n          description: The name of the stream being ingested into the target. Returned for\n            all targets except those whose \u003cem\u003etype\u003c/em\u003e is\n            \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e and whose\n            \u003cem\u003esource_delivery_method\u003c/em\u003e is **pull**.\n          type: string\n        type:\n          description: \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e is a Wowza CDN target.\n            \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e is an ultra low latency\n            Wowza stream target. \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e (the\n            default) is an external, third-party destination. \u003c!--and\n            \u003cstrong\u003eFacebookStreamTarget\u003c/strong\u003e (a Facebook Live target).--\u003e\n          enum:\n            - WowzaStreamTarget\n            - UltraLowLatencyStreamTarget\n            - CustomStreamTarget\n          type: string\n        updated_at:\n          description: The date and time that the stream target was updated.\n          format: date-time\n          type: string\n        username:\n          description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n            \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e and \u003cem\u003eprovider\u003c/em\u003e is\n            \u003cem\u003enot\u003c/em\u003e **akamai_cupertino**. The username or ID that the\n            target uses for RTMP authentication.\n          type: string\n      type: object\n    keyframe_interval_metric:\n      properties:\n        status:\n          description: The status of the current key. Possible values are\n            \u003cstrong\u003enormal\u003c/strong\u003e (everything is fine),\n            \u003cstrong\u003ewarning\u003c/strong\u003e (something may be misconfigured), and\n            \u003cstrong\u003eno_data\u003c/strong\u003e (no data was returned, perhaps because the\n            instance isn't running).\n          example: normal\n          type: string\n        text:\n          description: A message related to the value and status of the current key.\n            Usually blank unless there's a warning status.\n          example: \"\"\n          type: string\n        units:\n          description: The unit of the returned value, such as \u003cstrong\u003eKbps\u003c/strong\u003e,\n            \u003cstrong\u003ebps\u003c/strong\u003e, \u003cstrong\u003e%\u003c/strong\u003e, \u003cstrong\u003eFPS\u003c/strong\u003e, or\n            \u003cstrong\u003eGOP\u003c/strong\u003e.\n          example: GOP\n          type: string\n        value:\n          description: The value of the associated key.\n          example: 69\n          type: integer\n      type: object\n    live_stream:\n      example:\n        aspect_ratio_height: 1080\n        aspect_ratio_width: 1920\n        billing_mode: pay_as_you_go\n        broadcast_location: us_west_california\n        closed_caption_type: cea\n        connection_code: 0e15cb\n        connection_code_expires_at: 2018-09-15T20:00:43.217Z\n        created_at: 2017-11-13T20:00:43.217Z\n        delivery_method: push\n        delivery_protocols:\n          - rtmp\n          - rtsp\n          - wowz\n        delivery_type: multi-bitrate\n        direct_playback_urls:\n          - rtmp:\n              - name: source\n                url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789\n              - name: 1920x1080\n                output_id: dcxq5q6c\n                url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream1\n              - name: 1280x720\n                output_id: 0g116zkf\n                url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream2\n              - name: 854x480\n                output_id: 4qqkwndt\n                url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream3\n              - name: 640x360\n                output_id: 0pv8djpg\n                url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream4\n              - name: 512x288\n                output_id: b09xrxjf\n                url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream5\n              - name: 320x180\n                output_id: bvkh2nsz\n                url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream6\n          - rtsp:\n              - name: source\n                url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789\n              - name: 1920x1080\n                output_id: dcxq5q6c\n                url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream1\n              - name: 1280x720\n                output_id: 0g116zkf\n                url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream2\n              - name: 854x480\n                output_id: 4qqkwndt\n                url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream3\n              - name: 640x360\n                output_id: 0pv8djpg\n                url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream4\n              - name: 512x288\n                output_id: b09xrxjf\n                url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream5\n              - name: 320x180\n                output_id: bvkh2nsz\n                url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream6\n          - wowz:\n              - name: source\n                url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789\n              - name: 1920x1080\n                output_id: dcxq5q6c\n                url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream1\n              - name: 1280x720\n                output_id: 0g116zkf\n                url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream2\n              - name: 854x480\n                output_id: 4qqkwndt\n                url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream3\n              - name: 640x360\n                output_id: 0pv8djpg\n                url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream4\n              - name: 512x288\n                output_id: b09xrxjf\n                url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream5\n              - name: 320x180\n                output_id: bvkh2nsz\n                url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream6\n        encoder: wowza_streaming_engine\n        hosted_page: true\n        hosted_page_description: My Hosted Page Description\n        hosted_page_logo_image_url: https://prod.s3.amazonaws.com/uploads/player/hosted_page_logo_image/23424/5bad28.jpg\n        hosted_page_sharing_icons: true\n        hosted_page_title: My Hosted Page\n        hosted_page_url: https://player.cloud.wowza.com/hosted/e8dk5bf6/player.html\n        id: wdjfqvsv\n        name: My PAYG Transcoded WSE Live Stream\n        player_countdown: true\n        player_countdown_at: 2017-11-16T20:00:00.000Z\n        player_embed_code: \u003cdiv id='wowza_player'\u003e\u003c/div\u003e\u003cscript id='player_embed'\n          src='//player.cloud.wowza.com/hosted/e8dk5bf6/wowza.js'\n          type='text/javascript'\u003e\u003c/script\u003e\n        player_hds_playback_url: http://wowza-lh.akamaihd.net/z/d24b8a50_1@123456/manifest.f4m\n        player_hls_playback_url: http://wowza-lh.akamaihd.net/z/d24b8a50_1@123456/master.m3u8\n        player_id: kwb6pwnv\n        player_logo_image_url: https://prod.s3.amazonaws.com/uploads/player/logo_image/23424/5bad28.jpg\n        player_logo_position: top-right\n        player_responsive: false\n        player_type: original_html5\n        player_video_poster_image_url: https://prod.s3.amazonaws.com/uploads/player/video_poster_image/23424/5bad28.jpg\n        player_width: 640\n        recording: true\n        stream_source_id: 5skrfpyf\n        stream_targets:\n          - id: klbmg2h8\n          - id: bnjtdmmc\n        target_delivery_protocol: hls\n        transcoder_type: transcoded\n        updated_at: 2017-11-15T01:38:04.217Z\n        use_stream_source: true\n        video_fallback: false\n      properties:\n        aspect_ratio_height:\n          description: The height, in pixels, of the video source. Should correspond to a\n            widescreen (16:9) or standard (4:3) aspect ratio and be divisible by\n            8.\n          format: int32\n          type: integer\n        aspect_ratio_width:\n          description: The width, in pixels, of the video source. Should correspond to a\n            widescreen (16:9) or standard (4:3) aspect ratio and be divisible by\n            8.\n          format: int32\n          type: integer\n        billing_mode:\n          description: The billing mode for the stream. The default is\n            \u003cstrong\u003epay_as_you_go\u003c/strong\u003e.\n          enum:\n            - pay_as_you_go\n            - twentyfour_seven\n          type: string\n        broadcast_location:\n          description: The location of your stream. Choose a location as close as possible\n            to your video source.\n          enum:\n            - asia_pacific_australia\n            - asia_pacific_japan\n            - asia_pacific_singapore\n            - asia_pacific_taiwan\n            - eu_belgium\n            - eu_germany\n            - eu_ireland\n            - south_america_brazil\n            - us_central_iowa\n            - us_east_s_carolina\n            - us_east_virginia\n            - us_west_california\n            - us_west_oregon\n          type: string\n        closed_caption_type:\n          description: The type of closed caption data being passed from the source. The\n            default, \u003cstrong\u003enone\u003c/strong\u003e, indicates that no data is being\n            provided. \u003cstrong\u003ecea\u003c/strong\u003e indicates that a CEA closed\n            captioning data stream is being provided. \u003cstrong\u003eon_text\u003c/strong\u003e\n            indicates that an onTextData closed captioning data stream is being\n            provided. \u003cstrong\u003eboth\u003c/strong\u003e indicates that both CEA and\n            onTextData closed captioing data streams are being provided.\n          enum:\n            - none\n            - cea\n            - on_text\n            - both\n          type: string\n        connection_code:\n          description: A six-character, alphanumeric string that allows certain encoders,\n            including Wowza Streaming Engine and the Wowza GoCoder app, to\n            connect with Wowza Streaming Cloud. The code can be used once and\n            expires 24 hours after it's created.\n          type: string\n        connection_code_expires_at:\n          description: The date and time that the \u003cem\u003econnection_code\u003c/em\u003e expires.\n          format: date-time\n          type: string\n        created_at:\n          description: The date and time that the live stream was created.\n          format: date-time\n          type: string\n        delivery_method:\n          description: The type of connection between the video source and the transcoder.\n            The default, \u003cstrong\u003epull\u003c/strong\u003e, instructs the transcoder to pull\n            the video from the source. \u003cstrong\u003epush\u003c/strong\u003e instructs the\n            source to push the stream to the transcoder. \u003cstrong\u003ecdn\u003c/strong\u003e\n            uses a stream source to deliver the stream to the transcoder.\n          enum:\n            - pull\n            - cdn\n            - push\n          type: string\n        delivery_protocol:\n          description: \u003cstrong\u003eThe \u003cem\u003edelivery_protocol\u003c/em\u003e parameter is deprecated. To\n            set the delivery protocol of a transcoder's target, use\n            \u003cem\u003etarget_delivery_protocol\u003c/em\u003e.\u003c/strong\u003e\n          enum:\n            - hls-https\n            - hls-hds\n          type: string\n        delivery_protocols:\n          description: An array of direct delivery protocols enabled for this live stream.\n            By default, \u003cstrong\u003ertmp\u003c/strong\u003e, \u003cstrong\u003ertsp\u003c/strong\u003e, and\n            \u003cstrong\u003ewowz\u003c/strong\u003e are enabled.\n          items:\n            type: string\n          type: array\n        delivery_type:\n          description: For streams whose \u003cem\u003eencoder\u003c/em\u003e is\n            \u003cstrong\u003ewowza_streaming_engine\u003c/strong\u003e. The default is\n            \u003cstrong\u003emulti-bitrate\u003c/strong\u003e, which means you're sending one or\n            more bitrate renditions from Wowza Streaming Engine directly to a\n            Wowza CDN target without transcoding in Wowza Streaming Cloud. The\n            value \u003cstrong\u003esingle-bitrate\u003c/strong\u003e means you're sending a single\n            source stream to Wowza Streaming Cloud for transcoding and/or to\n            deliver the source stream to multiple stream targets in Wowza\n            Streaming Cloud.\n          enum:\n            - single-bitrate\n            - multi-bitrate\n          type: string\n        direct_playback_urls:\n          description: An array of direct playback URLs for the live stream's delivery\n            protocols. Each protocol has a URL for the source and a URL for each\n            output rendition.\n          items:\n            properties:\n              name:\n                description: \"The name of the playback URL: \u003cstrong\u003esource\u003c/strong\u003e,\n                  \u003cstrong\u003edefault\u003c/strong\u003e, \u003cstrong\u003epassthrough\u003c/strong\u003e, or the\n                  output rendition's resolution.\"\n                example: hls\n                type: string\n              output_id:\n                description: Only for output rendition-based playback URLs, not source\n                  playback URLs. The unique alphanumeric string that identifies\n                  the output rendition.\n                example: dcxq5q6c\n                type: string\n              url:\n                description: The playback URL for the source or output rendition.\n                example: https://abcdef.dev.entrypoint.cloud.wowza.com/app-16ea/ngrp:43a23e5a_all/playlist.m3u8\n                type: string\n            title: playback_url\n            type: object\n          type: array\n        encoder:\n          description: The video source for the live stream. Choose the type of camera or\n            encoder you're using to connect to the Wowza Streaming Cloud\n            transcoder. If your specific device isn't listed, choose\n            \u003cstrong\u003eipcamera\u003c/strong\u003e, \u003cstrong\u003eother_rtmp\u003c/strong\u003e, or\n            \u003cstrong\u003eother_rtsp\u003c/strong\u003e.\n          enum:\n            - wowza_streaming_engine\n            - wowza_gocoder\n            - media_ds\n            - axis\n            - epiphan\n            - hauppauge\n            - jvc\n            - live_u\n            - matrox\n            - newtek_tricaster\n            - osprey\n            - sony\n            - telestream_wirecast\n            - teradek_cube\n            - vmix\n            - x_split\n            - ipcamera\n            - other_rtmp\n            - other_rtsp\n          type: string\n        hosted_page:\n          description: A web page hosted by Wowza Streaming Cloud that includes a player\n            for the live stream. The default, \u003cstrong\u003etrue\u003c/strong\u003e, creates a\n            hosted page. Specify \u003cstrong\u003efalse\u003c/strong\u003e to not create a hosted\n            web page.\n          type: boolean\n        hosted_page_description:\n          description: A description that appears on the hosted page below the player.\n            Can't include custom HTML, JavaScript, or other tags.\n          type: string\n        hosted_page_logo_image_url:\n          description: The path to a GIF, JPEG, or PNG logo file that appears in the\n            upper-left corner of the hosted page. Logo file must be 2.5 MB or\n            smaller.\n          type: string\n        hosted_page_sharing_icons:\n          description: Icons that let viewers share the stream on Facebook, Google+,\n            Twitter, and by email. The default, \u003cstrong\u003etrue\u003c/strong\u003e, includes\n            sharing icons on the hosted page. Specify \u003cstrong\u003efalse\u003c/strong\u003e to\n            omit sharing icons.\n          type: boolean\n        hosted_page_title:\n          description: A title for the page that appears above the player. Can't include\n            custom HTML, JavaScript, or other tags.\n          type: string\n        hosted_page_url:\n          description: The URL of the Wowza Streaming Cloud-hosted webpage that viewers can\n            visit to watch the stream.\n          type: string\n        id:\n          description: The unique alphanumeric string that identifies the live stream.\n          type: string\n        low_latency:\n          description: For streams whose \u003cem\u003etarget_delivery_protocol\u003c/em\u003e is\n            \u003cstrong\u003ehls-https\u003c/strong\u003e. If \u003cstrong\u003etrue\u003c/strong\u003e, turns off\n            incoming and sort packet buffers and delivers smaller video packets\n            to the player, which can reduce latency as long as networks can\n            handle the increased overhead. The default is\n            \u003cstrong\u003efalse\u003c/strong\u003e. \u003cbr /\u003e\u003cbr /\u003eThis parameter only affects\n            streams played over a target whose \u003cem\u003etype\u003c/em\u003e is\n            \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e and whose \u003cem\u003eprovider\u003c/em\u003e is\n            \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e. It does \u003cem\u003enot\u003c/em\u003e reduce\n            latency in streams played over a hosted page and is unrelated to\n            Wowza ultra low latency stream targets.\n          type: boolean\n        name:\n          description: A descriptive name for the live stream. Maximum 200 characters.\n          type: string\n        player_countdown:\n          description: A clock that appears in the player before the event and counts down\n            to the start of the stream. Specify \u003cstrong\u003etrue\u003c/strong\u003e to display\n            the countdown clock. The default is \u003cstrong\u003efalse\u003c/strong\u003e.\n          type: boolean\n        player_countdown_at:\n          description: The date and time that the event starts, used by the countdown\n            clock. Specify \u003cstrong\u003eYYYY-MM-DD HH:MM:SS\u003c/strong\u003e, where\n            \u003cstrong\u003eHH\u003c/strong\u003e is a 24-hour clock in UTC.\n          format: date-time\n          type: string\n        player_embed_code:\n          description: The HTML code that can be used in an external webpage to host the\n            Wowza Streaming Cloud player.\n          type: string\n        player_hds_playback_url:\n          description: The address that can be used to configure playback of the stream\n            using the Adobe HDS protocol.\n          type: string\n        player_hls_playback_url:\n          description: The address that can be used to configure playback of the stream\n            using the Apple HLS protocol.\n          type: string\n        player_id:\n          description: The unique alphanumeric string that identifies the player.\n          type: string\n        player_logo_image_url:\n          description: The path to a GIF, JPEG, or PNG logo file that appears partially\n            transparent in a corner of the player throughout playback. Logo file\n            must be 2.5 MB or smaller.\n          type: string\n        player_logo_position:\n          description: The corner of the player in which you want the player logo to\n            appear. The default is \u003cstrong\u003etop-left\u003c/strong\u003e.\n          enum:\n            - top-left\n            - top-right\n            - bottom-left\n            - bottom-right\n          type: string\n        player_responsive:\n          description: A player whose size adjusts according to the device on which it's\n            being viewed. If \u003cstrong\u003etrue\u003c/strong\u003e, creates a responsive player.\n            If \u003cstrong\u003efalse\u003c/strong\u003e, specify a \u003cem\u003eplayer_width\u003c/em\u003e.\n          type: boolean\n        player_type:\n          description: The player you want to use. Valid values are\n            \u003cstrong\u003eoriginal_html5\u003c/strong\u003e, which provides HTML5 playback and\n            falls back to Flash on older browsers, and\n            \u003cstrong\u003ewowza_player\u003c/strong\u003e, which provides HTML5 playback over\n            Apple HLS. \u003cstrong\u003ewowza_player\u003c/strong\u003e requires that\n            \u003cstrong\u003etarget_delivery_protocol\u003c/strong\u003e be\n            \u003cstrong\u003ehls-https\u003c/strong\u003e and \u003cstrong\u003eclosed_caption_type\u003c/strong\u003e\n            be \u003cstrong\u003enone\u003c/strong\u003e. The default is\n            \u003cstrong\u003eoriginal_html5\u003c/strong\u003e.\n          type: string\n        player_video_poster_image_url:\n          description: The path to a GIF, JPEG, or PNG poster image that appears in the\n            player before the stream begins. Poster image files must be 2.5 MB\n            or smaller.\n          type: string\n        player_width:\n          description: The width, in pixels, of a fixed-size player. The default is\n            \u003cstrong\u003e640\u003c/strong\u003e.\n          format: int32\n          type: integer\n        recording:\n          description: If \u003cstrong\u003etrue\u003c/strong\u003e, creates a recording of the live stream.\n            The default is \u003cstrong\u003efalse\u003c/strong\u003e.\n          type: boolean\n        source_connection_information:\n          description: Details that you can use to manually configure and connect a video\n            source to the live stream.\n          type: object\n        stream_source_id:\n          description: The unique alphanumeric string that identifies the stream source, if\n            a stream source is used.\n          type: string\n        stream_targets:\n          description: An array of unique alphanumeric strings that identify the stream\n            targets used by the live stream.\n          items:\n            properties:\n              id:\n                description: The unique alphanumeric string that identifies the stream\n                  target.\n                example: dcxq5q6c\n                type: string\n            title: stream_targets\n            type: object\n          type: array\n        target_delivery_protocol:\n          description: The type of stream being delivered from Wowza Streaming Cloud. The\n            default is \u003cstrong\u003ehls-https\u003c/strong\u003e.\n          enum:\n            - hls-https\n            - hls-hds\n          type: string\n        transcoder_type:\n          description: The type of transcoder, either \u003cstrong\u003etranscoded\u003c/strong\u003e for\n            streams that are transcoded into adaptive bitrate renditions or\n            \u003cstrong\u003epassthrough\u003c/strong\u003e for streams that aren't processed by\n            the transcoder. The default is \u003cstrong\u003etranscoded\u003c/strong\u003e.\n          enum:\n            - transcoded\n            - passthrough\n          type: string\n        updated_at:\n          description: The date and time that the live stream was updated.\n          format: date-time\n          type: string\n        use_stream_source:\n          description: If \u003cstrong\u003etrue\u003c/strong\u003e, uses a stream source to deliver the stream\n            to Wowza Streaming Cloud. The default, \u003cstrong\u003efalse\u003c/strong\u003e,\n            pushes directly to Wowza Streaming Cloud.\n          type: boolean\n        video_fallback:\n          description: If \u003cstrong\u003etrue\u003c/strong\u003e, black video plays if the video source\n            disconnects from the transcoder. If \u003cstrong\u003efalse\u003c/strong\u003e (the\n            default), a stream-not-available message appears. Works only with\n            HLS stream targets.\n          type: boolean\n      type: object\n    live_stream_create_input:\n      properties:\n        live_stream:\n          properties:\n            aspect_ratio_height:\n              description: The height, in pixels, of the video source. Should correspond to\n                a widescreen (16:9) or standard (4:3) aspect ratio and be\n                divisible by 8.\n              example: 1080\n              format: int32\n              type: integer\n            aspect_ratio_width:\n              description: The width, in pixels, of the video source. Should correspond to\n                a widescreen (16:9) or standard (4:3) aspect ratio and be\n                divisible by 8.\n              example: 1920\n              format: int32\n              type: integer\n            billing_mode:\n              description: The billing mode for the stream. The default is\n                \u003cstrong\u003epay_as_you_go\u003c/strong\u003e.\n              enum:\n                - pay_as_you_go\n                - twentyfour_seven\n              example: pay_as_you_go\n              type: string\n            broadcast_location:\n              description: The location of your stream. Choose a location as close as\n                possible to your video source.\n              enum:\n                - asia_pacific_australia\n                - asia_pacific_japan\n                - asia_pacific_singapore\n                - asia_pacific_taiwan\n                - eu_belgium\n                - eu_germany\n                - eu_ireland\n                - south_america_brazil\n                - us_central_iowa\n                - us_east_s_carolina\n                - us_east_virginia\n                - us_west_california\n                - us_west_oregon\n              example: eu_germany\n              type: string\n            closed_caption_type:\n              description: The type of closed caption data being passed from the source.\n                The default, \u003cstrong\u003enone\u003c/strong\u003e, indicates that no data is\n                being provided. \u003cstrong\u003ecea\u003c/strong\u003e indicates that a CEA closed\n                captioning data stream is being provided.\n                \u003cstrong\u003eon_text\u003c/strong\u003e indicates that an onTextData closed\n                captioning data stream is being provided. \u003cstrong\u003eboth\u003c/strong\u003e\n                indicates that both CEA and onTextData closed captioing data\n                streams are being provided.\n              enum:\n                - none\n                - cea\n                - on_text\n                - both\n              example: none\n              type: string\n            delivery_method:\n              description: The type of connection between the video source and the\n                transcoder. The default, \u003cstrong\u003epull\u003c/strong\u003e, instructs the\n                transcoder to pull the video from the source.\n                \u003cstrong\u003epush\u003c/strong\u003e instructs the source to push the stream to\n                the transcoder. \u003cstrong\u003ecdn\u003c/strong\u003e uses a stream source to\n                deliver the stream to the transcoder.\n              enum:\n                - pull\n                - cdn\n                - push\n              example: push\n              type: string\n            delivery_protocols:\n              description: An array of direct delivery protocols enabled for this live\n                stream. By default, \u003cstrong\u003ertmp\u003c/strong\u003e,\n                \u003cstrong\u003ertsp\u003c/strong\u003e, and \u003cstrong\u003ewowz\u003c/strong\u003e are enabled.\n              example:\n                - rtmp\n                - rtsp\n                - wowz\n              items:\n                type: string\n              type: array\n            delivery_type:\n              description: For streams whose \u003cem\u003eencoder\u003c/em\u003e is\n                \u003cstrong\u003ewowza_streaming_engine\u003c/strong\u003e. The default is\n                \u003cstrong\u003emulti-bitrate\u003c/strong\u003e, which means you're sending one\n                or more bitrate renditions from Wowza Streaming Engine directly\n                to a Wowza CDN target without transcoding in Wowza Streaming\n                Cloud. The value \u003cstrong\u003esingle-bitrate\u003c/strong\u003e means you're\n                sending a single source stream to Wowza Streaming Cloud for\n                transcoding and/or to deliver the source stream to multiple\n                stream targets in Wowza Streaming Cloud.\n              enum:\n                - single-bitrate\n                - multi-bitrate\n              example: single-bitrate\n              type: string\n            disable_authentication:\n              description: Authentication is required by default for RTMP and RTSP push\n                connections from a video source to Wowza Streaming Cloud.\n                Specify \u003cstrong\u003etrue\u003c/strong\u003e to disable authentication with the\n                video source.\n              example: false\n              type: boolean\n            encoder:\n              description: The video source for the live stream. Choose the type of camera\n                or encoder you're using to connect to the Wowza Streaming Cloud\n                transcoder. If your specific device isn't listed, choose\n                \u003cstrong\u003eipcamera\u003c/strong\u003e, \u003cstrong\u003eother_rtmp\u003c/strong\u003e, or\n                \u003cstrong\u003eother_rtsp\u003c/strong\u003e.\n              enum:\n                - wowza_streaming_engine\n                - wowza_gocoder\n                - media_ds\n                - axis\n                - epiphan\n                - hauppauge\n                - jvc\n                - live_u\n                - matrox\n                - newtek_tricaster\n                - osprey\n                - sony\n                - telestream_wirecast\n                - teradek_cube\n                - vmix\n                - x_split\n                - ipcamera\n                - other_rtmp\n                - other_rtsp\n              example: wowza_gocoder\n              type: string\n            hosted_page:\n              description: A web page hosted by Wowza Streaming Cloud that includes a\n                player for the live stream. The default, \u003cstrong\u003etrue\u003c/strong\u003e,\n                creates a hosted page. Specify \u003cstrong\u003efalse\u003c/strong\u003e to not\n                create a hosted web page.\n              example: true\n              type: boolean\n            hosted_page_description:\n              description: A description that appears on the hosted page below the player.\n                Can't include custom HTML, JavaScript, or other tags.\n              example: My Hosted Page Description\n              type: string\n            hosted_page_logo_image:\n              description: A Base64-encoded string representation of a GIF, JPEG, or PNG\n                logo file that that appears in the upper-left corner of the\n                hosted page. Logo file must be 2.5 MB or smaller.\n              example: https://prod.s3.amazonaws.com/uploads/player/hosted_page_logo_image/23424/5bad28.jpg\n              type: string\n            hosted_page_sharing_icons:\n              description: Icons that let viewers share the stream on Facebook, Google+,\n                Twitter, and by email. The default, \u003cstrong\u003etrue\u003c/strong\u003e,\n                includes sharing icons on the hosted page. Specify\n                \u003cstrong\u003efalse\u003c/strong\u003e to omit sharing icons.\n              example: true\n              type: boolean\n            hosted_page_title:\n              description: A title for the page that appears above the player. Can't\n                include custom HTML, JavaScript, or other tags.\n              example: My Hosted Page\n              type: string\n            low_latency:\n              description: For streams whose \u003cem\u003etarget_delivery_protocol\u003c/em\u003e is\n                \u003cstrong\u003ehls-https\u003c/strong\u003e. If \u003cstrong\u003etrue\u003c/strong\u003e, turns off\n                incoming and sort packet buffers and delivers smaller video\n                packets to the player, which can reduce latency as long as\n                networks can handle the increased overhead. The default is\n                \u003cstrong\u003efalse\u003c/strong\u003e. \u003cbr /\u003e\u003cbr /\u003eThis parameter only affects\n                streams played over a target whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e and whose \u003cem\u003eprovider\u003c/em\u003e\n                is \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e. It does \u003cem\u003enot\u003c/em\u003e\n                reduce latency in streams played over a hosted page and is\n                unrelated to Wowza ultra low latency stream targets.\n              example: false\n              type: boolean\n            name:\n              description: A descriptive name for the live stream. Maximum 200 characters.\n              example: My Live Stream\n              type: string\n            password:\n              description: A password for authenticating an RTMP or RTSP push connection.\n                Can contain only uppercase and lowercase letters; numbers; and\n                the period (.), underscore (_), and hyphen (-) characters. No\n                other special characters can be used.\n              example: \"68332313\"\n              type: string\n            player_countdown:\n              description: A clock that appears in the player before the event and counts\n                down to the start of the stream. Specify \u003cstrong\u003etrue\u003c/strong\u003e\n                to display the countdown clock. The default is\n                \u003cstrong\u003efalse\u003c/strong\u003e.\n              example: true\n              type: boolean\n            player_countdown_at:\n              description: The date and time that the event starts, used by the countdown\n                clock. Specify \u003cstrong\u003eYYYY-MM-DD HH:MM:SS\u003c/strong\u003e, where\n                \u003cstrong\u003eHH\u003c/strong\u003e is a 24-hour clock in UTC.\n              example: 2017-11-16T20:00:00.000Z\n              format: date-time\n              type: string\n            player_logo_image:\n              description: A Base64-encoded string representation of a GIF, JPEG, or PNG\n                logo file that appears partially transparent in a corner of the\n                player throughout playback. Logo file must be 2.5 MB or smaller.\n              example: https://prod.s3.amazonaws.com/uploads/player/logo_image/23424/5bad28.jpg\n              type: string\n            player_logo_position:\n              description: The corner of the player in which you want the player logo to\n                appear. The default is \u003cstrong\u003etop-left\u003c/strong\u003e.\n              enum:\n                - top-left\n                - top-right\n                - bottom-left\n                - bottom-right\n              example: top-right\n              type: string\n            player_responsive:\n              description: A player whose size adjusts according to the device on which\n                it's being viewed. If \u003cstrong\u003etrue\u003c/strong\u003e, creates a\n                responsive player. If \u003cstrong\u003efalse\u003c/strong\u003e, specify a\n                \u003cem\u003eplayer_width\u003c/em\u003e.\n              example: false\n              type: boolean\n            player_type:\n              description: The player you want to use. Valid values are\n                \u003cstrong\u003eoriginal_html5\u003c/strong\u003e, which provides HTML5 playback\n                and falls back to Flash on older browsers, and\n                \u003cstrong\u003ewowza_player\u003c/strong\u003e, which provides HTML5 playback\n                over Apple HLS. \u003cstrong\u003ewowza_player\u003c/strong\u003e requires that\n                \u003cstrong\u003etarget_delivery_protocol\u003c/strong\u003e be\n                \u003cstrong\u003ehls-https\u003c/strong\u003e and\n                \u003cstrong\u003eclosed_caption_type\u003c/strong\u003e be \u003cstrong\u003enone\u003c/strong\u003e.\n                The default is \u003cstrong\u003eoriginal_html5\u003c/strong\u003e.\n              example: wowza_player\n              type: string\n            player_video_poster_image:\n              description: A Base64-encoded string representation of a GIF, JPEG, or PNG\n                poster image that appears in the player before the stream\n                begins. Poster image files must be 2.5 MB or smaller.\n              example: https://prod.s3.amazonaws.com/uploads/player/video_poster_image/23424/5bad28.jpg\n              type: string\n            player_width:\n              description: The width, in pixels, of a fixed-size player. The default is\n                \u003cstrong\u003e640\u003c/strong\u003e.\n              example: 640\n              format: int32\n              type: integer\n            recording:\n              description: If \u003cstrong\u003etrue\u003c/strong\u003e, creates a recording of the live\n                stream. The default is \u003cstrong\u003efalse\u003c/strong\u003e.\n              example: true\n              type: boolean\n            remove_hosted_page_logo_image:\n              description: If \u003cstrong\u003etrue\u003c/strong\u003e, removes the logo file from the hosted\n                page. The default is \u003cstrong\u003efalse\u003c/strong\u003e.\n              example: true\n              type: boolean\n            remove_player_logo_image:\n              description: If \u003cstrong\u003etrue\u003c/strong\u003e, removes the logo file from the player.\n                The default is \u003cstrong\u003efalse\u003c/strong\u003e.\n              example: true\n              type: boolean\n            remove_player_video_poster_image:\n              description: If \u003cstrong\u003etrue\u003c/strong\u003e, removes the poster image. The default\n                is \u003cstrong\u003efalse\u003c/strong\u003e.\n              example: true\n              type: boolean\n            source_url:\n              description: The URL of an IP camera or video encoder using an RTMP and RTSP\n                pull connection to Wowza Streaming Cloud. Consult the camera or\n                encoder documentation for the URL syntax.\n              example: xyz.streamlock.net/vod/mp4:Movie.mov\n              type: string\n            target_delivery_protocol:\n              description: The type of stream being delivered from Wowza Streaming Cloud.\n                The default is \u003cstrong\u003ehls-https\u003c/strong\u003e.\n              enum:\n                - hls-https\n                - hls-hds\n              example: hls-https\n              type: string\n            transcoder_type:\n              description: The type of transcoder, either \u003cstrong\u003etranscoded\u003c/strong\u003e for\n                streams that are transcoded into adaptive bitrate renditions or\n                \u003cstrong\u003epassthrough\u003c/strong\u003e for streams that aren't processed\n                by the transcoder. The default is \u003cstrong\u003etranscoded\u003c/strong\u003e.\n              enum:\n                - transcoded\n                - passthrough\n              example: transcoded\n              type: string\n            use_stream_source:\n              description: If \u003cstrong\u003etrue\u003c/strong\u003e, uses a stream source to deliver the\n                stream to Wowza Streaming Cloud. The default,\n                \u003cstrong\u003efalse\u003c/strong\u003e, pushes directly to Wowza Streaming\n                Cloud.\n              example: false\n              type: boolean\n            username:\n              description: A username for authenticating an RTMP or RTSP push connection.\n                Can contain only uppercase and lowercase letters; numbers; and\n                the period (.), underscore (_), and hyphen (-) characters. No\n                other special characters can be used.\n              example: client2\n              type: string\n            video_fallback:\n              description: If \u003cstrong\u003etrue\u003c/strong\u003e, black video plays if the video source\n                disconnects from the transcoder. If \u003cstrong\u003efalse\u003c/strong\u003e (the\n                default), a stream-not-available message appears. Works only\n                with HLS stream targets.\n              example: false\n              type: boolean\n          required:\n            - name\n            - transcoder_type\n            - billing_mode\n            - broadcast_location\n            - encoder\n            - aspect_ratio_width\n            - aspect_ratio_height\n          title: live_stream\n          type: object\n      required:\n        - live_stream\n      type: object\n    live_stream_update_input:\n      properties:\n        live_stream:\n          properties:\n            aspect_ratio_height:\n              description: The height, in pixels, of the video source. Should correspond to\n                a widescreen (16:9) or standard (4:3) aspect ratio and be\n                divisible by 8.\n              example: 1080\n              format: int32\n              type: integer\n            aspect_ratio_width:\n              description: The width, in pixels, of the video source. Should correspond to\n                a widescreen (16:9) or standard (4:3) aspect ratio and be\n                divisible by 8.\n              example: 1920\n              format: int32\n              type: integer\n            closed_caption_type:\n              description: The type of closed caption data being passed from the source.\n                The default, \u003cstrong\u003enone\u003c/strong\u003e, indicates that no data is\n                being provided. \u003cstrong\u003ecea\u003c/strong\u003e indicates that a CEA closed\n                captioning data stream is being provided.\n                \u003cstrong\u003eon_text\u003c/strong\u003e indicates that an onTextData closed\n                captioning data stream is being provided. \u003cstrong\u003eboth\u003c/strong\u003e\n                indicates that both CEA and onTextData closed captioing data\n                streams are being provided.\n              enum:\n                - none\n                - cea\n                - on_text\n                - both\n              example: cea\n              type: string\n            delivery_method:\n              description: The type of connection between the video source and the\n                transcoder. The default, \u003cstrong\u003epull\u003c/strong\u003e, instructs the\n                transcoder to pull the video from the source.\n                \u003cstrong\u003epush\u003c/strong\u003e instructs the source to push the stream to\n                the transcoder. \u003cstrong\u003ecdn\u003c/strong\u003e uses a stream source to\n                deliver the stream to the transcoder.\n              enum:\n                - pull\n                - cdn\n                - push\n              example: push\n              type: string\n            delivery_protocols:\n              description: An array of direct delivery protocols enabled for this live\n                stream. By default, \u003cstrong\u003ertmp\u003c/strong\u003e,\n                \u003cstrong\u003ertsp\u003c/strong\u003e, and \u003cstrong\u003ewowz\u003c/strong\u003e are enabled.\n              example:\n                - rtmp\n                - rtsp\n                - wowz\n              items:\n                type: string\n              type: array\n            disable_authentication:\n              description: Authentication is required by default for RTMP and RTSP push\n                connections from a video source to Wowza Streaming Cloud.\n                Specify \u003cstrong\u003etrue\u003c/strong\u003e to disable authentication with the\n                video source.\n              example: false\n              type: boolean\n            encoder:\n              description: The video source for the live stream. Choose the type of camera\n                or encoder you're using to connect to the Wowza Streaming Cloud\n                transcoder. If your specific device isn't listed, choose\n                \u003cstrong\u003eipcamera\u003c/strong\u003e, \u003cstrong\u003eother_rtmp\u003c/strong\u003e, or\n                \u003cstrong\u003eother_rtsp\u003c/strong\u003e.\n              enum:\n                - wowza_streaming_engine\n                - wowza_gocoder\n                - media_ds\n                - axis\n                - epiphan\n                - hauppauge\n                - jvc\n                - live_u\n                - matrox\n                - newtek_tricaster\n                - osprey\n                - sony\n                - telestream_wirecast\n                - teradek_cube\n                - vmix\n                - x_split\n                - ipcamera\n                - other_rtmp\n                - other_rtsp\n              example: wowza_gocoder\n              type: string\n            hosted_page_description:\n              description: A description that appears on the hosted page below the player.\n                Can't include custom HTML, JavaScript, or other tags.\n              example: My Hosted Page Description\n              type: string\n            hosted_page_logo_image:\n              description: A Base64-encoded string representation of a GIF, JPEG, or PNG\n                logo file that that appears in the upper-left corner of the\n                hosted page. Logo file must be 2.5 MB or smaller.\n              example: https://prod.s3.amazonaws.com/uploads/player/hosted_page_logo_image/23424/5bad28.jpg\n              type: string\n            hosted_page_sharing_icons:\n              description: Icons that let viewers share the stream on Facebook, Google+,\n                Twitter, and by email. The default, \u003cstrong\u003etrue\u003c/strong\u003e,\n                includes sharing icons on the hosted page. Specify\n                \u003cstrong\u003efalse\u003c/strong\u003e to omit sharing icons.\n              example: true\n              type: boolean\n            hosted_page_title:\n              description: A title for the page that appears above the player. Can't\n                include custom HTML, JavaScript, or other tags.\n              example: My Hosted Page\n              type: string\n            name:\n              description: A descriptive name for the live stream. Maximum 200 characters.\n              example: My Live Stream\n              type: string\n            password:\n              description: A password for authenticating an RTMP or RTSP push connection.\n                Can contain only uppercase and lowercase letters; numbers; and\n                the period (.), underscore (_), and hyphen (-) characters. No\n                other special characters can be used.\n              example: \"68332313\"\n              type: string\n            player_countdown:\n              description: A clock that appears in the player before the event and counts\n                down to the start of the stream. Specify \u003cstrong\u003etrue\u003c/strong\u003e\n                to display the countdown clock. The default is\n                \u003cstrong\u003efalse\u003c/strong\u003e.\n              example: true\n              type: boolean\n            player_countdown_at:\n              description: The date and time that the event starts, used by the countdown\n                clock. Specify \u003cstrong\u003eYYYY-MM-DD HH:MM:SS\u003c/strong\u003e, where\n                \u003cstrong\u003eHH\u003c/strong\u003e is a 24-hour clock in UTC.\n              example: 2017-11-16T20:00:00.000Z\n              format: date-time\n              type: string\n            player_logo_image:\n              description: A Base64-encoded string representation of a GIF, JPEG, or PNG\n                logo file that appears partially transparent in a corner of the\n                player throughout playback. Logo file must be 2.5 MB or smaller.\n              example: https://prod.s3.amazonaws.com/uploads/player/logo_image/23424/5bad28.jpg\n              type: string\n            player_logo_position:\n              description: The corner of the player in which you want the player logo to\n                appear. The default is \u003cstrong\u003etop-left\u003c/strong\u003e.\n              enum:\n                - top-left\n                - top-right\n                - bottom-left\n                - bottom-right\n              example: top-right\n              type: string\n            player_responsive:\n              description: A player whose size adjusts according to the device on which\n                it's being viewed. If \u003cstrong\u003etrue\u003c/strong\u003e, creates a\n                responsive player. If \u003cstrong\u003efalse\u003c/strong\u003e, specify a\n                \u003cem\u003eplayer_width\u003c/em\u003e.\n              example: false\n              type: boolean\n            player_type:\n              description: The player you want to use. Valid values are\n                \u003cstrong\u003eoriginal_html5\u003c/strong\u003e, which provides HTML5 playback\n                and falls back to Flash on older browsers, and\n                \u003cstrong\u003ewowza_player\u003c/strong\u003e, which provides HTML5 playback\n                over Apple HLS. \u003cstrong\u003ewowza_player\u003c/strong\u003e requires that\n                \u003cstrong\u003etarget_delivery_protocol\u003c/strong\u003e be\n                \u003cstrong\u003ehls-https\u003c/strong\u003e and\n                \u003cstrong\u003eclosed_caption_type\u003c/strong\u003e be \u003cstrong\u003enone\u003c/strong\u003e.\n                The default is \u003cstrong\u003eoriginal_html5\u003c/strong\u003e.\n              example: wowza_player\n              type: string\n            player_video_poster_image:\n              description: A Base64-encoded string representation of a GIF, JPEG, or PNG\n                poster image that appears in the player before the stream\n                begins. Poster image files must be 2.5 MB or smaller.\n              example: https://prod.s3.amazonaws.com/uploads/player/video_poster_image/23424/5bad28.jpg\n              type: string\n            player_width:\n              description: The width, in pixels, of a fixed-size player. The default is\n                \u003cstrong\u003e640\u003c/strong\u003e.\n              example: 640\n              format: int32\n              type: integer\n            recording:\n              description: If \u003cstrong\u003etrue\u003c/strong\u003e, creates a recording of the live\n                stream. The default is \u003cstrong\u003efalse\u003c/strong\u003e.\n              example: true\n              type: boolean\n            remove_hosted_page_logo_image:\n              description: If \u003cstrong\u003etrue\u003c/strong\u003e, removes the logo file from the hosted\n                page. The default is \u003cstrong\u003efalse\u003c/strong\u003e.\n              example: true\n              type: boolean\n            remove_player_logo_image:\n              description: If \u003cstrong\u003etrue\u003c/strong\u003e, removes the logo file from the player.\n                The default is \u003cstrong\u003efalse\u003c/strong\u003e.\n              example: true\n              type: boolean\n            remove_player_video_poster_image:\n              description: If \u003cstrong\u003etrue\u003c/strong\u003e, removes the poster image. The default\n                is \u003cstrong\u003efalse\u003c/strong\u003e.\n              example: true\n              type: boolean\n            source_url:\n              description: The URL of an IP camera or video encoder using an RTMP and RTSP\n                pull connection to Wowza Streaming Cloud. Consult the camera or\n                encoder documentation for the URL syntax.\n              example: xyz.streamlock.net/vod/mp4:Movie.mov\n              type: string\n            target_delivery_protocol:\n              description: The type of stream being delivered from Wowza Streaming Cloud.\n                The default is \u003cstrong\u003ehls-https\u003c/strong\u003e.\n              enum:\n                - hls-https\n                - hls-hds\n              example: hls-https\n              type: string\n            use_stream_source:\n              description: If \u003cstrong\u003etrue\u003c/strong\u003e, uses a stream source to deliver the\n                stream to Wowza Streaming Cloud. The default,\n                \u003cstrong\u003efalse\u003c/strong\u003e, pushes directly to Wowza Streaming\n                Cloud.\n              example: false\n              type: boolean\n            username:\n              description: A username for authenticating an RTMP or RTSP push connection.\n                Can contain only uppercase and lowercase letters; numbers; and\n                the period (.), underscore (_), and hyphen (-) characters. No\n                other special characters can be used.\n              example: client2\n              type: string\n            video_fallback:\n              description: If \u003cstrong\u003etrue\u003c/strong\u003e, black video plays if the video source\n                disconnects from the transcoder. If \u003cstrong\u003efalse\u003c/strong\u003e (the\n                default), a stream-not-available message appears. Works only\n                with HLS stream targets.\n              example: false\n              type: boolean\n          required:\n            - name\n            - encoder\n            - aspect_ratio_width\n            - aspect_ratio_height\n          title: live_stream\n          type: object\n      required:\n        - live_stream\n      type: object\n    live_streams:\n      example:\n        live_streams:\n          - aspect_ratio_height: 1080\n            aspect_ratio_width: 1920\n            billing_mode: pay_as_you_go\n            broadcast_location: us_west_california\n            closed_caption_type: cea\n            connection_code: 0e15cb\n            connection_code_expires_at: 2018-09-15T20:00:42.970Z\n            created_at: 2017-11-13T20:00:42.970Z\n            delivery_method: push\n            delivery_protocols:\n              - rtmp\n              - rtsp\n              - wowz\n            delivery_type: multi-bitrate\n            direct_playback_urls:\n              - rtmp:\n                  - name: source\n                    url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789\n                  - name: 1920x1080\n                    output_id: dcxq5q6c\n                    url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream1\n                  - name: 1280x720\n                    output_id: 0g116zkf\n                    url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream2\n                  - name: 854x480\n                    output_id: 4qqkwndt\n                    url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream3\n                  - name: 640x360\n                    output_id: 0pv8djpg\n                    url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream4\n                  - name: 512x288\n                    output_id: b09xrxjf\n                    url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream5\n                  - name: 320x180\n                    output_id: bvkh2nsz\n                    url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream6\n              - rtsp:\n                  - name: source\n                    url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789\n                  - name: 1920x1080\n                    output_id: dcxq5q6c\n                    url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream1\n                  - name: 1280x720\n                    output_id: 0g116zkf\n                    url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream2\n                  - name: 854x480\n                    output_id: 4qqkwndt\n                    url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream3\n                  - name: 640x360\n                    output_id: 0pv8djpg\n                    url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream4\n                  - name: 512x288\n                    output_id: b09xrxjf\n                    url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream5\n                  - name: 320x180\n                    output_id: bvkh2nsz\n                    url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream6\n              - wowz:\n                  - name: source\n                    url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789\n                  - name: 1920x1080\n                    output_id: dcxq5q6c\n                    url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream1\n                  - name: 1280x720\n                    output_id: 0g116zkf\n                    url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream2\n                  - name: 854x480\n                    output_id: 4qqkwndt\n                    url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream3\n                  - name: 640x360\n                    output_id: 0pv8djpg\n                    url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream4\n                  - name: 512x288\n                    output_id: b09xrxjf\n                    url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream5\n                  - name: 320x180\n                    output_id: bvkh2nsz\n                    url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream6\n            encoder: wowza_streaming_engine\n            hosted_page: true\n            hosted_page_description: My Hosted Page Description\n            hosted_page_logo_image_url: https://prod.s3.amazonaws.com/uploads/player/hosted_page_logo_image/23424/5bad28.jpg\n            hosted_page_sharing_icons: true\n            hosted_page_title: My Hosted Page\n            hosted_page_url: https://player.cloud.wowza.com/hosted/e8dk5bf6/player.html\n            id: wdjfqvsv\n            name: My PAYG Transcoded WSE Live Stream\n            player_countdown: true\n            player_countdown_at: 2017-11-16T20:00:00.000Z\n            player_embed_code: \u003cdiv id='wowza_player'\u003e\u003c/div\u003e\u003cscript id='player_embed'\n              src='//player.cloud.wowza.com/hosted/e8dk5bf6/wowza.js'\n              type='text/javascript'\u003e\u003c/script\u003e\n            player_hds_playback_url: http://wowza-lh.akamaihd.net/z/d24b8a50_1@123456/manifest.f4m\n            player_hls_playback_url: http://wowza-lh.akamaihd.net/z/d24b8a50_1@123456/master.m3u8\n            player_id: kwb6pwnv\n            player_logo_image_url: https://prod.s3.amazonaws.com/uploads/player/logo_image/23424/5bad28.jpg\n            player_logo_position: top-right\n            player_responsive: false\n            player_type: original_html5\n            player_video_poster_image_url: https://prod.s3.amazonaws.com/uploads/player/video_poster_image/23424/5bad28.jpg\n            player_width: 640\n            recording: true\n            stream_source_id: 5skrfpyf\n            stream_targets:\n              - id: klbmg2h8\n              - id: bnjtdmmc\n            target_delivery_protocol: hls\n            transcoder_type: transcoded\n            updated_at: 2017-11-15T17:49:14.970Z\n            use_stream_source: true\n            video_fallback: false\n          - aspect_ratio_height: 1080\n            aspect_ratio_width: 1920\n            billing_mode: twentyfour_seven\n            broadcast_location: eu_germany\n            closed_caption_type: none\n            connection_code: \"170153\"\n            connection_code_expires_at: 2018-09-15T20:00:42.970Z\n            created_at: 2017-11-13T20:00:42.970Z\n            delivery_method: push\n            delivery_protocols:\n              - rtmp\n              - rtsp\n              - wowz\n            direct_playback_urls:\n              - {}\n            encoder: wowza_gocoder\n            hosted_page: false\n            id: KyxWKtHQ\n            name: My 24x7 Passthrough GoCoder Live Stream\n            player_countdown: false\n            player_embed_code: \u003cdiv id='wowza_player'\u003e\u003c/div\u003e\u003cscript id='player_embed'\n              src='//player.cloud.wowza.com/hosted/e8dk5bf6/wowza.js'\n              type='text/javascript'\u003e\u003c/script\u003e\n            player_hds_playback_url: http://wowza-lh.akamaihd.net/z/d24b8a50_1@123456/manifest.f4m\n            player_hls_playback_url: http://wowza-lh.akamaihd.net/z/d24b8a50_1@123456/master.m3u8\n            player_id: r2wjnclg\n            player_responsive: true\n            player_type: original_html5\n            recording: false\n            source_connection_information:\n              host_port: 1935\n              password: 51eac9b5\n              primary_server: rtsp://ff5ccd.qa.entrypoint.cloud.wowza.com/app-0279\n              stream_name: 62bbe7c6\n              username: client1\n            stream_targets:\n              - id: klbmg2h8\n              - id: bnjtdmmc\n            target_delivery_protocol: hls-hds\n            transcoder_type: passthrough\n            updated_at: 2017-11-15T12:58:27.971Z\n            use_stream_source: false\n            video_fallback: false\n          - aspect_ratio_height: 1080\n            aspect_ratio_width: 1920\n            billing_mode: pay_as_you_go\n            broadcast_location: us_east_virginia\n            closed_caption_type: none\n            connection_code: already_used\n            connection_code_expires_at: 2017-10-15T20:00:42.971Z\n            created_at: 2017-11-13T20:00:42.971Z\n            delivery_method: cdn\n            delivery_protocols:\n              - rtmp\n              - rtsp\n              - wowz\n            direct_playback_urls:\n              - {}\n            encoder: teradek_cube\n            hosted_page: false\n            id: Ly40ZDSg\n            name: My PAYG Transcoded Teradek Cube Live Stream\n            player_countdown: false\n            player_embed_code: \u003cdiv id='wowza_player'\u003e\u003c/div\u003e\u003cscript id='player_embed'\n              src='//player.cloud.wowza.com/hosted/e8dk5bf6/wowza.js'\n              type='text/javascript'\u003e\u003c/script\u003e\n            player_hds_playback_url: http://wowza-lh.akamaihd.net/z/d24b8a50_1@123456/manifest.f4m\n            player_hls_playback_url: http://wowza-lh.akamaihd.net/z/d24b8a50_1@123456/master.m3u8\n            player_id: vbfnfmbx\n            player_responsive: true\n            player_type: original_html5\n            recording: true\n            source_connection_information:\n              backup_server: rtmp://b.ep118446.i.akamaientrypoint.net/EntryPoint\n              host_port: 1935\n              password: 164edc9d58\n              primary_server: rtmp://p.ep118446.i.akamaientrypoint.net/EntryPoint\n              stream_name: e1a34178@118446\n              teradek_cube_config_url: https://westre.am/T1xEa8pV\n              username: \"310232\"\n            stream_source_id: 5skrfpyf\n            stream_targets:\n              - id: klbmg2h8\n              - id: bnjtdmmc\n            target_delivery_protocol: hls-https\n            transcoder_type: transcoded\n            updated_at: 2017-11-15T14:33:13.971Z\n            use_stream_source: true\n            video_fallback: false\n      properties:\n        live_streams:\n          items:\n            $ref: \"#/components/schemas/live_stream\"\n          type: array\n      required:\n        - live_streams\n      type: object\n    output:\n      example:\n        aspect_ratio_height: 480\n        aspect_ratio_width: 848\n        bitrate_audio: 128\n        bitrate_video: 1600\n        created_at: 2017-11-13T20:00:43.237Z\n        framerate_reduction: 1/2\n        h264_profile: main\n        id: w9vJm3BJ\n        keyframes: follow_source\n        name: Video+Audio=1600+128, main, 848 x 480\n        output_stream_targets:\n          - {}\n        passthrough_audio: false\n        passthrough_video: false\n        stream_format: audiovideo\n        transcoder_id: PblTJm1t\n        updated_at: 2017-11-15T03:31:50.237Z\n      properties:\n        aspect_ratio_height:\n          description: The height, in pixels, of the output rendition. Should correspond to\n            a widescreen or standard aspect ratio and be divisible by 8. The\n            default is \u003cstrong\u003e1080\u003c/strong\u003e.\n          format: int32\n          type: integer\n        aspect_ratio_width:\n          description: The width, in pixels, of the output rendition. Should correspond to\n            a widescreen or standard aspect ratio and be divisible by 8. The\n            default is \u003cstrong\u003e1980\u003c/strong\u003e.\n          format: int32\n          type: integer\n        bitrate_audio:\n          description: The audio bitrate, in kilobits per second (Kbps). Must be between\n            \u003cstrong\u003e0\u003c/strong\u003e (for passthrough audio) and\n            \u003cstrong\u003e1000\u003c/strong\u003e. The default is \u003cstrong\u003e128\u003c/strong\u003e.\n          format: int32\n          type: integer\n        bitrate_video:\n          description: The video bitrate, in kilobits per second (Kbps). Must be between\n            \u003cstrong\u003e0\u003c/strong\u003e (for passthrough video) and\n            \u003cstrong\u003e10240\u003c/strong\u003e. The default is \u003cstrong\u003e4000\u003c/strong\u003e.\n          format: int32\n          type: integer\n        created_at:\n          description: The date and time that the output rendition was created.\n          format: date-time\n          type: string\n        framerate_reduction:\n          description: Reduce the frame rate of the transcoded output rendition. The\n            default, \u003cstrong\u003e0\u003c/strong\u003e, uses the encoded stream's frame rate\n            without reduction.\n          enum:\n            - \"0\"\n            - 1/2\n            - 1/4\n            - 1/25\n            - 1/30\n            - 1/50\n            - 1/60\n          type: string\n        h264_profile:\n          description: The encoding method. Specify \u003cstrong\u003emain\u003c/strong\u003e for desktop\n            streaming, \u003cstrong\u003ebaseline\u003c/strong\u003e for playback on mobile devices,\n            or \u003cstrong\u003ehigh\u003c/strong\u003e for HD playback. The default is\n            \u003cstrong\u003ehigh\u003c/strong\u003e.\n          enum:\n            - main\n            - baseline\n            - high\n          type: string\n        id:\n          description: The unique alphanumeric string that identifies the output rendition.\n          type: string\n        keyframes:\n          description: The interval used to define the compression applied to a group of\n            frames. The default, \u003cstrong\u003efollow_source\u003c/strong\u003e, uses the\n            keyframe interval of the source video.\n          enum:\n            - follow_source\n            - \"25\"\n            - \"30\"\n            - \"50\"\n            - \"60\"\n            - \"100\"\n            - \"120\"\n          type: string\n        name:\n          description: A descriptive name for the output (generated, not writable).\n          type: string\n        output_stream_targets:\n          items:\n            $ref: \"#/components/schemas/output_stream_target\"\n          type: array\n        passthrough_audio:\n          description: If \u003cstrong\u003etrue\u003c/strong\u003e, sends the audio track to the target\n            without transcoding. The default is \u003cstrong\u003efalse\u003c/strong\u003e.\n          type: boolean\n        passthrough_video:\n          description: If \u003cstrong\u003etrue\u003c/strong\u003e, sends the video track to the target\n            without transcoding. The default is \u003cstrong\u003efalse\u003c/strong\u003e.\n          type: boolean\n        stream_format:\n          description: The contents of the stream. The default is both audio and video\n            (\u003cstrong\u003eaudiovideo\u003c/strong\u003e).\n          enum:\n            - audiovideo\n            - videoonly\n            - audioonly\n          type: string\n        transcoder_id:\n          description: The unique alphanumeric string that identifies the transcoder.\n          type: string\n        updated_at:\n          description: The date and time that the output rendition was updated.\n          format: date-time\n          type: string\n      type: object\n    output_add_stream_target_input:\n      properties:\n        output_stream_target:\n          properties:\n            stream_target_id:\n              description: The unique alphanumeric string that identifies the stream target.\n              example: jfbKkrTL\n              type: string\n              x-lookup-uri: stream_targets\n            use_stream_target_backup_url:\n              description: Use the target's backup URL. Not available for targets whose\n                \u003cem\u003eprovider\u003c/em\u003e is \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e. The\n                default is \u003cstrong\u003efalse\u003c/strong\u003e.\n              example: true\n              type: boolean\n          required:\n            - stream_target_id\n          title: output_stream_target\n          type: object\n      required:\n        - output_stream_target\n      type: object\n    output_create_input:\n      allOf:\n        - $ref: \"#/components/schemas/output_input\"\n    output_input:\n      properties:\n        output:\n          properties:\n            aspect_ratio_height:\n              description: The height, in pixels, of the output rendition. Should\n                correspond to a widescreen or standard aspect ratio and be\n                divisible by 8. The default is \u003cstrong\u003e1080\u003c/strong\u003e.\n              example: 480\n              format: int32\n              type: integer\n            aspect_ratio_width:\n              description: The width, in pixels, of the output rendition. Should correspond\n                to a widescreen or standard aspect ratio and be divisible by 8.\n                The default is \u003cstrong\u003e1980\u003c/strong\u003e.\n              example: 848\n              format: int32\n              type: integer\n            bitrate_audio:\n              description: The audio bitrate, in kilobits per second (Kbps). Must be\n                between \u003cstrong\u003e0\u003c/strong\u003e (for passthrough audio) and\n                \u003cstrong\u003e1000\u003c/strong\u003e. The default is \u003cstrong\u003e128\u003c/strong\u003e.\n              example: 128\n              format: int32\n              type: integer\n            bitrate_video:\n              description: The video bitrate, in kilobits per second (Kbps). Must be\n                between \u003cstrong\u003e0\u003c/strong\u003e (for passthrough video) and\n                \u003cstrong\u003e10240\u003c/strong\u003e. The default is \u003cstrong\u003e4000\u003c/strong\u003e.\n              example: 1600\n              format: int32\n              type: integer\n            framerate_reduction:\n              description: Reduce the frame rate of the transcoded output rendition. The\n                default, \u003cstrong\u003e0\u003c/strong\u003e, uses the encoded stream's frame\n                rate without reduction.\n              enum:\n                - \"0\"\n                - 1/2\n                - 1/4\n                - 1/25\n                - 1/30\n                - 1/50\n                - 1/60\n              example: 1/2\n              type: string\n            h264_profile:\n              description: The encoding method. Specify \u003cstrong\u003emain\u003c/strong\u003e for desktop\n                streaming, \u003cstrong\u003ebaseline\u003c/strong\u003e for playback on mobile\n                devices, or \u003cstrong\u003ehigh\u003c/strong\u003e for HD playback. The default\n                is \u003cstrong\u003ehigh\u003c/strong\u003e.\n              enum:\n                - main\n                - baseline\n                - high\n              example: main\n              type: string\n            keyframes:\n              description: The interval used to define the compression applied to a group\n                of frames. The default, \u003cstrong\u003efollow_source\u003c/strong\u003e, uses the\n                keyframe interval of the source video.\n              enum:\n                - follow_source\n                - \"25\"\n                - \"30\"\n                - \"50\"\n                - \"60\"\n                - \"100\"\n                - \"120\"\n              example: follow_source\n              type: string\n            passthrough_audio:\n              description: If \u003cstrong\u003etrue\u003c/strong\u003e, sends the audio track to the target\n                without transcoding. The default is \u003cstrong\u003efalse\u003c/strong\u003e.\n              example: false\n              type: boolean\n            passthrough_video:\n              description: If \u003cstrong\u003etrue\u003c/strong\u003e, sends the video track to the target\n                without transcoding. The default is \u003cstrong\u003efalse\u003c/strong\u003e.\n              example: false\n              type: boolean\n            stream_format:\n              description: The contents of the stream. The default is both audio and video\n                (\u003cstrong\u003eaudiovideo\u003c/strong\u003e).\n              enum:\n                - audiovideo\n                - videoonly\n                - audioonly\n              example: audiovideo\n              type: string\n          required:\n            - stream_format\n          title: output\n          type: object\n      required:\n        - output\n      type: object\n    output_remove_stream_target_input:\n      properties:\n        output_stream_target:\n          properties:\n            stream_target_id:\n              description: The unique alphanumeric string that identifies the stream target.\n              example: jfbKkrTL\n              type: string\n              x-lookup-uri: /transcoders/{transcoder_id}/outputs/{id}.targets\n          required:\n            - stream_target_id\n          title: output_stream_target\n          type: object\n      required:\n        - output_stream_target\n      type: object\n    output_stream_target:\n      example:\n        id: 4Gp5rF23\n        output_id: w9vJm3BJ\n        stream_target:\n          connection_code: 133fcc\n          connection_code_expires_at: 2018-09-15T20:00:43.239Z\n          created_at: 2017-11-13T20:00:43.239Z\n          hds_playback_url: http://xyz.akamaihd.net/i/76fa8b9c_1@335304/master.m3u8\n          hls_playback_url: http://xyz.akamaihd.net/z/76fa8b9c_1@335304/manifest.f4m\n          id: QvvJYJjk\n          location: us_west_california\n          name: My provisioned RTMP Stream Target\n          password: 0c7cba98e7\n          primary_url: rtmp://p.ep336304.i.akamaientrypoint.net/EntryPoint\n          provider: akamai\n          stream_name: 76fa8b9c_1_[BITRATE]@335304\n          type: WowzaStreamTarget\n          updated_at: 2017-11-14T19:55:19.239Z\n          username: \"169630\"\n        stream_target_id: QvvJYJjk\n        use_stream_target_backup_url: false\n      properties:\n        created_at:\n          description: The date and time that the output stream target was created.\n          format: date-time\n          type: string\n        id:\n          description: The unique alphanumeric string that identifies the output stream\n            target.\n          type: string\n        output_id:\n          description: The unique alphanumeric string that identifies the output rendition.\n          type: string\n        stream_target:\n          $ref: \"#/components/schemas/stream_target\"\n        stream_target_id:\n          description: The unique alphanumeric string that identifies the stream target.\n          type: string\n        updated_at:\n          description: The date and time that the output stream target was updated.\n          format: date-time\n          type: string\n        use_stream_target_backup_url:\n          description: Specifies whether to use the stream target's primary or backup URL.\n          type: boolean\n      type: object\n    output_stream_target_create_input:\n      allOf:\n        - $ref: \"#/components/schemas/output_stream_target_input\"\n    output_stream_target_input:\n      properties:\n        output_stream_target:\n          properties:\n            stream_target_id:\n              description: The unique alphanumeric string that identifies the stream target.\n              example: 1234abcd\n              type: string\n            use_stream_target_backup_url:\n              description: Specifies whether to use the stream target's primary or backup\n                URL.\n              example: true\n              type: boolean\n          required:\n            - stream_target_id\n          title: output_stream_target\n          type: object\n      required:\n        - output_stream_target\n      type: object\n    output_stream_target_update_input:\n      allOf:\n        - $ref: \"#/components/schemas/output_stream_target_input\"\n    output_stream_targets:\n      example:\n        output_stream_targets:\n          - id: 4Gp5rF23\n            output_id: w9vJm3BJ\n            stream_target:\n              connection_code: 133fcc\n              connection_code_expires_at: 2018-09-15T20:00:43.239Z\n              created_at: 2017-11-13T20:00:43.239Z\n              hds_playback_url: http://xyz.akamaihd.net/i/76fa8b9c_1@335304/master.m3u8\n              hls_playback_url: http://xyz.akamaihd.net/z/76fa8b9c_1@335304/manifest.f4m\n              id: QvvJYJjk\n              location: us_west_california\n              name: My provisioned RTMP Stream Target\n              password: 0c7cba98e7\n              primary_url: rtmp://p.ep336304.i.akamaientrypoint.net/EntryPoint\n              provider: akamai\n              stream_name: 76fa8b9c_1_[BITRATE]@335304\n              type: WowzaStreamTarget\n              updated_at: 2017-11-14T21:41:35.239Z\n              username: \"169630\"\n            stream_target_id: QvvJYJjk\n            use_stream_target_backup_url: false\n          - id: 345Gd9Hs\n            output_id: w9vJm3BJ\n            stream_target:\n              connection_code: 133fcc\n              connection_code_expires_at: 2018-09-15T20:00:43.239Z\n              created_at: 2017-11-13T20:00:43.239Z\n              hds_playback_url: http://xyz.akamaihd.net/i/76fa8b9c_1@335304/master.m3u8\n              hls_playback_url: http://xyz.akamaihd.net/z/76fa8b9c_1@335304/manifest.f4m\n              id: R32u8HDk\n              location: us_west_california\n              name: My other provisioned RTMP Stream Target\n              password: 0c7cba98e7\n              primary_url: rtmp://p.ep336304.i.akamaientrypoint.net/EntryPoint\n              provider: akamai\n              secure_ingest_query_param: ...\n              stream_name: 76fa8b9c_1_[BITRATE]@335304\n              type: WowzaStreamTarget\n              updated_at: 2017-11-14T19:43:14.239Z\n              username: \"169630\"\n            stream_target_id: R32u8HDk\n            use_stream_target_backup_url: false\n      properties:\n        output_stream_targets:\n          items:\n            $ref: \"#/components/schemas/output_stream_target\"\n          type: array\n      required:\n        - output_stream_targets\n      type: object\n    output_update_input:\n      allOf:\n        - $ref: \"#/components/schemas/output_input\"\n    outputs:\n      example:\n        outputs:\n          - aspect_ratio_height: 480\n            aspect_ratio_width: 848\n            bitrate_audio: 128\n            bitrate_video: 1600\n            created_at: 2017-11-13T20:00:43.228Z\n            framerate_reduction: 1/2\n            h264_profile: main\n            id: w9vJm3BJ\n            keyframes: follow_source\n            name: Video+Audio=1600+128, main, 848 x 480\n            output_stream_targets:\n              - {}\n            passthrough_audio: false\n            passthrough_video: false\n            stream_format: audiovideo\n            transcoder_id: PblTJm1t\n            updated_at: 2017-11-14T17:27:27.228Z\n          - created_at: 2017-11-13T20:00:43.228Z\n            id: PPqV0kcm\n            name: Video+Audio=Passthrough+Passthrough\n            output_stream_targets:\n              - {}\n            passthrough_audio: true\n            passthrough_video: true\n            stream_format: audiovideo\n            transcoder_id: Yf5lyjCV\n            updated_at: 2017-11-15T13:40:58.228Z\n      properties:\n        outputs:\n          items:\n            $ref: \"#/components/schemas/output\"\n          type: array\n      required:\n        - outputs\n      type: object\n    player:\n      example:\n        countdown: true\n        countdown_at: 2017-11-16T20:00:00.000Z\n        created_at: 2017-11-13T20:00:43.277Z\n        embed_code: \u003cdiv id='wowza_player'\u003e\u003c/div\u003e\u003cscript id='player_embed'\n          src='//player.cloud.wowza.com/hosted/e8dk5bf6/wowza.js'\n          type='text/javascript'\u003e\u003c/script\u003e\n        hds_playback_url: http://wowza-lh.akamaihd.net/z/d24b8a50_1@123456/manifest.f4m\n        hls_playback_url: http://wowza-lh.akamaihd.net/z/d24b8a50_1@123456/master.m3u8\n        hosted_page: true\n        hosted_page_description: My Hosted Page Description\n        hosted_page_logo_image_url: https://prod.s3.amazonaws.com/uploads/player/hosted_page_logo_image/23424/5bad28.jpg\n        hosted_page_sharing_icons: false\n        hosted_page_title: My Hosted Page\n        hosted_page_url: https://player.cloud.wowza.com/hosted/e8dk5bf6/player.html\n        id: e8dk5bf6\n        logo_image_url: https://prod.s3.amazonaws.com/uploads/player/logo_image/23424/5bad28.jpg\n        logo_position: bottom-left\n        responsive: false\n        transcoder_id: 6Qbymbbq\n        type: original_html5\n        updated_at: 2017-11-14T17:55:32.277Z\n        video_poster_image_url: https://prod.s3.amazonaws.com/uploads/player/video_poster_image/23424/5bad28.jpg\n        width: 640\n      properties:\n        countdown:\n          description: A clock that appears in the player before the event and counts down\n            to the start of the stream. Specify \u003cstrong\u003etrue\u003c/strong\u003e to display\n            the countdown clock. The default is \u003cstrong\u003efalse\u003c/strong\u003e.\n          type: boolean\n        countdown_at:\n          description: The date and time that the event starts, used by the countdown\n            clock. Enter \u003cstrong\u003eYYYY-MM-DD HH:MM:SS\u003c/strong\u003e where\n            \u003cstrong\u003eHH\u003c/strong\u003e is a 24-hour clock in UTC.\n          format: date-time\n          type: string\n        created_at:\n          description: The date and time that the player was created.\n          format: date-time\n          type: string\n        embed_code:\n          description: The HTML code that can be used in an external webpage to host the\n            Wowza Streaming Cloud player.\n          type: string\n        hds_playback_url:\n          description: The address that can be used to configure playback of the stream\n            using the Adobe HDS protocol.\n          type: string\n        hls_playback_url:\n          description: The address that can be used to configure playback of the stream\n            using the Apple HLS protocol.\n          type: string\n        hosted_page:\n          description: A web page hosted by Wowza Streaming Cloud that includes a player\n            for the live stream. The default, \u003cstrong\u003etrue\u003c/strong\u003e, creates a\n            hosted page. Specify \u003cstrong\u003efalse\u003c/strong\u003e to not create a hosted\n            web page.\n          type: boolean\n        hosted_page_description:\n          description: A description that appears on the hosted page below the player.\n            Can't include custom HTML, JavaScript, or other tags.\n          type: string\n        hosted_page_logo_image_url:\n          description: The path to a GIF, JPEG, or PNG logo file that appears in the\n            upper-left corner of the hosted page. Logo file must be 2.5 MB or\n            smaller.\n          type: string\n        hosted_page_sharing_icons:\n          description: Icons that let viewers share the stream on Facebook, Google+,\n            Twitter, and by email. The default, \u003cstrong\u003etrue\u003c/strong\u003e, includes\n            sharing icons on the hosted page. Specify \u003cstrong\u003efalse\u003c/strong\u003e to\n            omit sharing icons.\n          type: string\n        hosted_page_title:\n          description: A title for the page that appears above the player. Can't include\n            custom HTML, JavaScript, or other tags.\n          type: string\n        hosted_page_url:\n          description: The URL of the Wowza Streaming Cloud-hosted webpage that viewers can\n            visit to watch the stream.\n          type: string\n        id:\n          description: The unique alphanumeric string that identifies the player.\n          type: string\n        logo_image_url:\n          description: The path to a GIF, JPEG, or PNG logo file that appears partially\n            transparent in a corner of the player throughout playback. Logo file\n            must be 2.5 MB or smaller.\n          type: string\n        logo_position:\n          description: The corner of the player in which you want the player logo to\n            appear. The default is \u003cstrong\u003etop-left\u003c/strong\u003e.\n          type: string\n        responsive:\n          description: A player whose size adjusts according to the device on which it's\n            being viewed. If \u003cstrong\u003etrue\u003c/strong\u003e, creates a responsive player.\n            If \u003cstrong\u003efalse\u003c/strong\u003e, specify a \u003cstrong\u003ewidth\u003c/strong\u003e.\n          type: boolean\n        transcoder_id:\n          description: The unique alphanumeric string that identifies the transcoder.\n          type: string\n        type:\n          description: The player you want to use. Valid values are\n            \u003cstrong\u003eoriginal_html5\u003c/strong\u003e, which provides HTML5 playback and\n            falls back to Flash on older browsers, and\n            \u003cstrong\u003ewowza_player\u003c/strong\u003e, which provides HTML5 playback over\n            Apple HLS. \u003cstrong\u003ewowza_player\u003c/strong\u003e requires that\n            \u003cem\u003etarget_delivery_protocol\u003c/em\u003e be \u003cstrong\u003ehls-https\u003c/strong\u003e and\n            \u003cem\u003eclosed_caption_type\u003c/em\u003e be \u003cstrong\u003enone\u003c/strong\u003e. The default\n            is \u003cstrong\u003eoriginal_html5\u003c/strong\u003e.\n          type: string\n        updated_at:\n          description: The date and time that the player was updated.\n          format: date-time\n          type: string\n        video_poster_image_url:\n          description: The path to a GIF, JPEG, or PNG poster image that appears in the\n            player before the stream begins. Poster image files must be 2.5 MB\n            or smaller.\n          type: string\n        width:\n          description: The width, in pixels, of a fixed-size player. The default is\n            \u003cstrong\u003e640\u003c/strong\u003e.\n          format: int32\n          type: integer\n      type: object\n    player_update_input:\n      properties:\n        player:\n          properties:\n            countdown:\n              description: A clock that appears in the player before the event and counts\n                down to the start of the stream. Specify \u003cstrong\u003etrue\u003c/strong\u003e\n                to display the countdown clock. The default is\n                \u003cstrong\u003efalse\u003c/strong\u003e.\n              example: true\n              type: boolean\n            countdown_at:\n              description: The date and time that the event starts, used by the countdown\n                clock. Enter \u003cstrong\u003eYYYY-MM-DD HH:MM:SS\u003c/strong\u003e where\n                \u003cstrong\u003eHH\u003c/strong\u003e is a 24-hour clock in UTC.\n              example: 2017-11-16T20:00:00.000Z\n              format: date-time\n              type: string\n            hosted_page:\n              description: A web page hosted by Wowza Streaming Cloud that includes a\n                player for the live stream. The default, \u003cstrong\u003etrue\u003c/strong\u003e,\n                creates a hosted page. Specify \u003cstrong\u003efalse\u003c/strong\u003e to not\n                create a hosted web page.\n              example: true\n              type: boolean\n            hosted_page_description:\n              description: A description that appears on the hosted page below the player.\n                Can't include custom HTML, JavaScript, or other tags.\n              example: My Hosted Page Description\n              type: string\n            hosted_page_logo_image:\n              description: A Base64-encoded string representation of a GIF, JPEG, or PNG\n                logo file that appears in the upper-left corner of the hosted\n                page. Logo file must be 2.5 MB or smaller.\n              example: \"[Base64-encoded string representation of an image]\"\n              type: string\n            hosted_page_sharing_icons:\n              description: Icons that let viewers share the stream on Facebook, Google+,\n                Twitter, and by email. The default, \u003cstrong\u003etrue\u003c/strong\u003e,\n                includes sharing icons on the hosted page. Specify\n                \u003cstrong\u003efalse\u003c/strong\u003e to omit sharing icons.\n              example: true\n              type: boolean\n            hosted_page_title:\n              description: A title for the page that appears above the player. Can't\n                include custom HTML, JavaScript, or other tags.\n              example: My Hosted Page\n              type: string\n            logo_image:\n              description: A Base64-encoded string representation of a GIF, JPEG, or PNG\n                logo file that appears partially transparent in a corner of the\n                player throughout playback. Logo file must be 2.5 MB or smaller.\n              example: \"[Base64-encoded string representation of an image]\"\n              type: string\n            logo_position:\n              description: The corner of the player in which you want the player logo to\n                appear. The default is \u003cstrong\u003etop-left\u003c/strong\u003e.\n              example: top-right\n              type: string\n            remove_hosted_page_logo_image:\n              description: If \u003cstrong\u003etrue\u003c/strong\u003e, removes the logo file from the output.\n                The default is \u003cstrong\u003efalse\u003c/strong\u003e.\n              example: true\n              type: boolean\n            remove_logo_image:\n              description: If \u003cstrong\u003etrue\u003c/strong\u003e, removes the logo file from the output.\n                The default is \u003cstrong\u003efalse\u003c/strong\u003e.\n              example: true\n              type: boolean\n            remove_video_poster_image:\n              description: If \u003cstrong\u003etrue\u003c/strong\u003e, removes the poster image from the\n                output. The default is \u003cstrong\u003efalse\u003c/strong\u003e.\n              example: true\n              type: boolean\n            responsive:\n              description: A player whose size adjusts according to the device on which\n                it's being viewed. If \u003cstrong\u003etrue\u003c/strong\u003e, creates a\n                responsive player. If \u003cstrong\u003efalse\u003c/strong\u003e, specify a\n                \u003cstrong\u003ewidth\u003c/strong\u003e.\n              example: false\n              type: boolean\n            type:\n              description: The player you want to use. Valid values are\n                \u003cstrong\u003eoriginal_html5\u003c/strong\u003e, which provides HTML5 playback\n                and falls back to Flash on older browsers, and\n                \u003cstrong\u003ewowza_player\u003c/strong\u003e, which provides HTML5 playback\n                over Apple HLS. \u003cstrong\u003ewowza_player\u003c/strong\u003e requires that\n                \u003cem\u003etarget_delivery_protocol\u003c/em\u003e be \u003cstrong\u003ehls-https\u003c/strong\u003e\n                and \u003cem\u003eclosed_caption_type\u003c/em\u003e be \u003cstrong\u003enone\u003c/strong\u003e. The\n                default is \u003cstrong\u003eoriginal_html5\u003c/strong\u003e.\n              example: wowza_player\n              type: string\n            video_poster_image:\n              description: A Base64-encoded string representation of a GIF, JPEG, or PNG\n                poster image that appears in the player before the stream\n                begins. Poster image files must be 2.5 MB or smaller.\n              example: \"[Base64-encoded string representation of an image]\"\n              type: string\n            width:\n              description: The width, in pixels, of a fixed-size player. The default is\n                \u003cstrong\u003e640\u003c/strong\u003e.\n              example: 640\n              format: int32\n              type: integer\n          title: player\n          type: object\n      required:\n        - player\n      type: object\n    players:\n      example:\n        players:\n          - countdown: true\n            countdown_at: 2017-11-16T20:00:00.000Z\n            created_at: 2017-11-13T20:00:43.244Z\n            embed_code: \u003cdiv id='wowza_player'\u003e\u003c/div\u003e\u003cscript id='player_embed'\n              src='//player.cloud.wowza.com/hosted/e8dk5bf6/wowza.js'\n              type='text/javascript'\u003e\u003c/script\u003e\n            hds_playback_url: http://wowza-lh.akamaihd.net/z/d24b8a50_1@123456/manifest.f4m\n            hls_playback_url: http://wowza-lh.akamaihd.net/z/d24b8a50_1@123456/master.m3u8\n            hosted_page: true\n            hosted_page_description: My Hosted Page Description\n            hosted_page_logo_image_url: https://prod.s3.amazonaws.com/uploads/player/hosted_page_logo_image/23424/5bad28.jpg\n            hosted_page_sharing_icons: false\n            hosted_page_title: My Hosted Page\n            hosted_page_url: https://player.cloud.wowza.com/hosted/e8dk5bf6/player.html\n            id: e8dk5bf6\n            logo_image_url: https://prod.s3.amazonaws.com/uploads/player/logo_image/23424/5bad28.jpg\n            logo_position: top-right\n            responsive: false\n            transcoder_id: 6Qbymbbq\n            type: original_html5\n            updated_at: 2017-11-14T20:15:05.276Z\n            video_poster_image_url: https://prod.s3.amazonaws.com/uploads/player/video_poster_image/23424/5bad28.jpg\n            width: 640\n          - countdown: false\n            created_at: 2017-11-13T20:00:43.276Z\n            embed_code: \u003cdiv id='wowza_player'\u003e\u003c/div\u003e\u003cscript id='player_embed'\n              src='//player.cloud.wowza.com/hosted/s3jmdnbl/wowza.js'\n              type='text/javascript'\u003e\u003c/script\u003e\n            hds_playback_url: http://wowza-lh.akamaihd.net/z/e32c4b20_1@123456/manifest.f4m\n            hls_playback_url: http://wowza-lh.akamaihd.net/z/e32c4b20_1@123456/master.m3u8\n            hosted_page: false\n            id: s3jmdnbl\n            responsive: true\n            transcoder_id: 3kbb0hvf\n            updated_at: 2017-11-15T03:22:52.276Z\n      properties:\n        players:\n          items:\n            $ref: \"#/components/schemas/player\"\n          type: array\n      required:\n        - players\n      type: object\n    recording:\n      example:\n        created_at: 2017-11-13T20:00:43.281Z\n        download_url: https://s3.amazonaws.com/prod-wse-recordings/transcoder_035163/64886_00a613bf@367500.stream.0.mp4\n        duration: 362905\n        file_name: 00a613bf@367500.stream.0.mp4\n        file_size: 53113429\n        id: 4Jjzstdt\n        reason: \"\"\n        starts_at: 2017-11-16T00:00:00.000Z\n        state: completed\n        transcoder_id: bjQplmRw\n        transcoder_name: My Camera\n        transcoding_uptime_id: vxyz9876\n        updated_at: 2017-11-15T07:13:04.281Z\n      properties:\n        created_at:\n          description: The date and time that the recording was created.\n          format: date-time\n          type: string\n        download_url:\n          description: The URL that can be used to download the recording.\n          type: string\n        duration:\n          description: The length of the recording, in hours, minutes, and seconds.\n          format: int64\n          type: integer\n        file_name:\n          description: The file name of the recording.\n          type: string\n        file_size:\n          description: The file size of the recording.\n          format: int64\n          type: integer\n        id:\n          description: The unique alphanumeric string that identifies the recording.\n          type: string\n        reason:\n          description: The reason that a recording has the state \u003cstrong\u003efailed\u003c/strong\u003e.\n          type: string\n        starts_at:\n          description: The date and time that the recording started.\n          type: string\n        state:\n          description: The state of the recording.\n          enum:\n            - uploading\n            - converting\n            - removing\n            - completed\n            - failed\n          type: string\n        transcoder_id:\n          description: The unique alphanumeric string that identifies the transcoder that\n            was recorded.\n          type: string\n        transcoder_name:\n          description: The descriptive name of the transcoder that was recorded.\n          type: string\n        transcoding_uptime_id:\n          description: The unique identifier associated with the transcoding uptime for\n            this recording.\n          format: date-time\n          type: string\n        updated_at:\n          description: The date and time that the recording was updated.\n          format: date-time\n          type: string\n      type: object\n    recordings:\n      example:\n        recordings:\n          - created_at: 2017-11-13T20:00:43.281Z\n            download_url: https://s3.amazonaws.com/prod-wse-recordings/transcoder_035163/64886_00a613bf@367500.stream.0.mp4\n            duration: 362905\n            file_name: 00a613bf@367500.stream.0.mp4\n            file_size: 53113429\n            id: 4Jjzstdt\n            reason: \"\"\n            starts_at: 2017-11-16T00:00:00.000Z\n            state: completed\n            transcoder_id: bjQplmRw\n            transcoder_name: My Camera\n            transcoding_uptime_id: vxyz9876\n            updated_at: 2017-11-15T15:37:56.281Z\n          - created_at: 2017-11-12T20:00:43.281Z\n            download_url: https://s3.amazonaws.com/prod-wse-recordings/transcoder_014877/62726_bfcc36a2@196282.stream.0.mp4\n            duration: 28455905\n            file_name: bfcc36a2@196282.stream.0.mp4\n            file_size: 7109841765\n            id: fFWxVsyj\n            reason: \"\"\n            starts_at: 2017-11-16T00:00:00.000Z\n            state: archived\n            transcoder_id: PMNVbL4n\n            transcoder_name: My Other Camera\n            transcoding_uptime_id: abcd1234\n            updated_at: 2017-11-14T18:28:11.281Z\n      properties:\n        recordings:\n          items:\n            $ref: \"#/components/schemas/recording\"\n          type: array\n      required:\n        - recordings\n      type: object\n    schedule:\n      example:\n        action_type: start_stop\n        begins_at: 2017-11-16T00:00:00.000Z\n        created_at: 2017-11-13T20:00:43.284Z\n        end_repeat: 2017-12-15\n        ends_at: 2017-12-15T23:59:59.999Z\n        id: 28bwb5WT\n        name: Scheduled recurring start for my camera\n        recurrence_data: monday,tuesday,wednesday,thursday,friday\n        recurrence_type: recur\n        start_repeat: 2017-11-16\n        state: disabled\n        transcoder_id: VGB21JFJ\n        transcoder_name: My Camera\n        updated_at: 2017-11-15T08:51:36.284Z\n      properties:\n        action_type:\n          description: The type of action that the schedule should trigger on the\n            transcoder. The default is \u003cstrong\u003estart\u003c/strong\u003e.\n          enum:\n            - start\n            - stop\n            - start_stop\n          example: start_stop\n          type: string\n        created_at:\n          description: The date and time that the schedule was created.\n          example: 2017-11-13T20:00:43.283Z\n          format: date-time\n          type: string\n        end_repeat:\n          description: The month, day, and year that a recurring schedule should stop\n            running. Specify \u003cstrong\u003eYYYY-MM-DD\u003c/strong\u003e.\n          example: 2017-12-15\n          format: date\n          type: string\n        id:\n          description: The unique alphanumeric string that identifies the schedule.\n          example: 9w49LQ8L\n          type: string\n        name:\n          description: A descriptive name for the schedule. Maximum 255 characters.\n          example: Scheduled start for my camera\n          type: string\n        recurrence_data:\n          description: The day or days of the week that a recurring schedule should run.\n          enum:\n            - sunday\n            - monday\n            - tuesday\n            - wednesday\n            - thursday\n            - friday\n            - saturday\n          example: monday,tuesday,wednesday,thursday,friday\n          type: string\n        recurrence_type:\n          description: A schedule can run one time only (\u003cstrong\u003eonce\u003c/strong\u003e) or repeat\n            (\u003cstrong\u003erecur\u003c/strong\u003e) until a specified \u003cem\u003eend_repeat\u003c/em\u003e date.\n            The default is \u003cstrong\u003eonce\u003c/strong\u003e.\n          enum:\n            - once\n            - recur\n          example: recur\n          type: string\n        start_repeat:\n          description: The month, day, and year that the recurring schedule should go into\n            effect. Specify \u003cstrong\u003eYYYY-MM-DD\u003c/strong\u003e.\n          example: 2017-11-16\n          format: date\n          type: string\n        start_transcoder:\n          description: The month, day, year, and time of day that the \u003cem\u003eaction_type\u003c/em\u003e\n            \u003cstrong\u003estart\u003c/strong\u003e should occur. Specify \u003cstrong\u003eYYYY-MM-DD\n            HH:MM:SS\u003c/strong\u003e where \u003cstrong\u003eHH\u003c/strong\u003e is a 24-hour clock in\n            UTC.\n          example: 2017-11-16T00:00:00.000Z\n          format: date-time\n          type: string\n        state:\n          description: A schedule must be \u003cstrong\u003eenabled\u003c/strong\u003e to run. Specify\n            \u003cstrong\u003eenabled\u003c/strong\u003e to run the schedule or\n            \u003cstrong\u003edisabled\u003c/strong\u003e to turn off the schedule so that it\n            doesn't run.\n          enum:\n            - enabled\n            - disabled\n            - expired\n          example: enabled\n          type: string\n        stop_transcoder:\n          description: The month, day, year, and time of day that the \u003cem\u003eaction_type\u003c/em\u003e\n            \u003cstrong\u003estop\u003c/strong\u003e should occur. Specify \u003cstrong\u003eYYYY-MM-DD\n            HH:MM:SS\u003c/strong\u003e where \u003cstrong\u003eHH\u003c/strong\u003e is a 24-hour clock in\n            UTC.\n          example: 2017-12-15T23:59:59.999Z\n          format: date-time\n          type: string\n        transcoder_id:\n          description: The unique alphanumeric string that identifies the transcoder being\n            scheduled.\n          example: kZjkbPS3\n          type: string\n        transcoder_name:\n          description: The name of the transcoder being scheduled.\n          example: My Camera\n          type: string\n        updated_at:\n          description: The date and time that the schedule was updated.\n          example: 2017-11-14T18:26:18.284Z\n          format: date-time\n          type: string\n      type: object\n    schedule_create_input:\n      properties:\n        schedule:\n          properties:\n            action_type:\n              description: The type of action that the schedule should trigger on the\n                transcoder. The default is \u003cstrong\u003estart\u003c/strong\u003e.\n              enum:\n                - start\n                - stop\n                - start_stop\n              example: start_stop\n              type: string\n            end_repeat:\n              description: The month, day, and year that a recurring schedule should stop\n                running. Specify \u003cstrong\u003eYYYY-MM-DD\u003c/strong\u003e.\n              example: 2017-12-15\n              format: date\n              type: string\n            name:\n              description: A descriptive name for the schedule. Maximum 255 characters.\n              example: Scheduled start for my camera\n              type: string\n            recurrence_data:\n              description: The day or days of the week that a recurring schedule should run.\n              enum:\n                - sunday\n                - monday\n                - tuesday\n                - wednesday\n                - thursday\n                - friday\n                - saturday\n              example: monday,tuesday,wednesday,thursday,friday\n              type: string\n            recurrence_type:\n              description: A schedule can run one time only (\u003cstrong\u003eonce\u003c/strong\u003e) or\n                repeat (\u003cstrong\u003erecur\u003c/strong\u003e) until a specified\n                \u003cem\u003eend_repeat\u003c/em\u003e date. The default is \u003cstrong\u003eonce\u003c/strong\u003e.\n              enum:\n                - once\n                - recur\n              example: recur\n              type: string\n            start_repeat:\n              description: The month, day, and year that the recurring schedule should go\n                into effect. Specify \u003cstrong\u003eYYYY-MM-DD\u003c/strong\u003e.\n              example: 2017-11-16\n              format: date\n              type: string\n            start_transcoder:\n              description: The month, day, year, and time of day that the\n                \u003cem\u003eaction_type\u003c/em\u003e \u003cstrong\u003estart\u003c/strong\u003e should occur.\n                Specify \u003cstrong\u003eYYYY-MM-DD HH:MM:SS\u003c/strong\u003e where\n                \u003cstrong\u003eHH\u003c/strong\u003e is a 24-hour clock in UTC.\n              example: 2017-11-16T00:00:00.000Z\n              format: date-time\n              type: string\n            stop_transcoder:\n              description: The month, day, year, and time of day that the\n                \u003cem\u003eaction_type\u003c/em\u003e \u003cstrong\u003estop\u003c/strong\u003e should occur. Specify\n                \u003cstrong\u003eYYYY-MM-DD HH:MM:SS\u003c/strong\u003e where \u003cstrong\u003eHH\u003c/strong\u003e\n                is a 24-hour clock in UTC.\n              example: 2017-12-15T23:59:59.999Z\n              format: date-time\n              type: string\n            transcoder_id:\n              description: The unique alphanumeric string that identifies the transcoder\n                being scheduled.\n              example: Vq7zwF1P\n              type: string\n          required:\n            - name\n            - transcoder_id\n            - action_type\n            - recurrence_type\n          title: schedule\n          type: object\n      required:\n        - schedule\n      type: object\n    schedule_update_input:\n      properties:\n        schedule:\n          properties:\n            action_type:\n              description: The type of action that the schedule should trigger on the\n                transcoder. The default is \u003cstrong\u003estart\u003c/strong\u003e.\n              enum:\n                - start\n                - stop\n                - start_stop\n              example: start_stop\n              type: string\n            end_repeat:\n              description: The month, day, and year that a recurring schedule should stop\n                running. Specify \u003cstrong\u003eYYYY-MM-DD\u003c/strong\u003e.\n              example: 2017-12-15\n              format: date\n              type: string\n            name:\n              description: A descriptive name for the schedule. Maximum 255 characters.\n              example: Scheduled start for my camera\n              type: string\n            recurrence_data:\n              description: The day or days of the week that a recurring schedule should run.\n              enum:\n                - sunday\n                - monday\n                - tuesday\n                - wednesday\n                - thursday\n                - friday\n                - saturday\n              example: monday,tuesday,wednesday,thursday,friday\n              type: string\n            start_repeat:\n              description: The month, day, and year that the recurring schedule should go\n                into effect. Specify \u003cstrong\u003eYYYY-MM-DD\u003c/strong\u003e.\n              example: 2017-11-16\n              format: date\n              type: string\n            start_transcoder:\n              description: The month, day, year, and time of day that the\n                \u003cem\u003eaction_type\u003c/em\u003e \u003cstrong\u003estart\u003c/strong\u003e should occur.\n                Specify \u003cstrong\u003eYYYY-MM-DD HH:MM:SS\u003c/strong\u003e where\n                \u003cstrong\u003eHH\u003c/strong\u003e is a 24-hour clock in UTC.\n              example: 2017-11-16T00:00:00.000Z\n              format: date-time\n              type: string\n            stop_transcoder:\n              description: The month, day, year, and time of day that the\n                \u003cem\u003eaction_type\u003c/em\u003e \u003cstrong\u003estop\u003c/strong\u003e should occur. Specify\n                \u003cstrong\u003eYYYY-MM-DD HH:MM:SS\u003c/strong\u003e where \u003cstrong\u003eHH\u003c/strong\u003e\n                is a 24-hour clock in UTC.\n              example: 2017-12-15T23:59:59.999Z\n              format: date-time\n              type: string\n          required:\n            - name\n            - action_type\n          title: schedule\n          type: object\n      required:\n        - schedule\n      type: object\n    schedules:\n      example:\n        schedules:\n          - action_type: start_stop\n            begins_at: 2017-11-16T00:00:00.000Z\n            created_at: 2017-11-13T20:00:43.283Z\n            end_repeat: 2017-12-15\n            ends_at: 2017-12-15T23:59:59.999Z\n            id: 28bwb5WT\n            name: Scheduled recurring start for my camera\n            recurrence_data: monday,tuesday,wednesday,thursday,friday\n            recurrence_type: recur\n            start_repeat: 2017-11-16\n            state: disabled\n            transcoder_id: VGB21JFJ\n            transcoder_name: My Camera\n            updated_at: 2017-11-15T00:43:42.283Z\n          - action_type: stop\n            begins_at: 2017-11-16T00:00:00.000Z\n            created_at: 2017-11-13T20:00:43.283Z\n            ends_at: 2017-12-15T23:59:59.999Z\n            id: 4RCWgfS5\n            name: Scheduled stop for my live event\n            recurrence_type: once\n            state: enabled\n            transcoder_id: Qjl5J38Z\n            transcoder_name: Awesome Live Event\n            updated_at: 2017-11-14T22:04:48.283Z\n      properties:\n        schedules:\n          items:\n            $ref: \"#/components/schemas/schedule\"\n          type: array\n      required:\n        - schedules\n      type: object\n    shm_historic_metrics:\n      properties:\n        audio_codec:\n          $ref: \"#/components/schemas/audio_codec_metric\"\n        bits_in_rate:\n          $ref: \"#/components/schemas/bits_in_rate_metric\"\n        bits_out_rate:\n          $ref: \"#/components/schemas/bits_out_rate_metric\"\n        cpu_idle:\n          $ref: \"#/components/schemas/cpu_idle_metric\"\n        created_at:\n          description: The date and time that the stream health record was created.\n          example: 2017-07-06T14:20:00Z\n          type: string\n        frame_rate:\n          $ref: \"#/components/schemas/frame_rate_metric\"\n        height:\n          $ref: \"#/components/schemas/height_metric\"\n        keyframe_interval:\n          $ref: \"#/components/schemas/keyframe_interval_metric\"\n        video_codec:\n          $ref: \"#/components/schemas/video_codec_metric\"\n        width:\n          $ref: \"#/components/schemas/width_metric\"\n      type: object\n    shm_metrics:\n      properties:\n        audio_codec:\n          $ref: \"#/components/schemas/audio_codec_metric\"\n        bits_in_rate:\n          $ref: \"#/components/schemas/bits_in_rate_metric\"\n        bits_out_rate:\n          $ref: \"#/components/schemas/bits_out_rate_metric\"\n        bytes_in_rate:\n          $ref: \"#/components/schemas/bytes_in_rate_metric\"\n        bytes_out_rate:\n          $ref: \"#/components/schemas/bytes_out_rate_metric\"\n        configured_bytes_out_rate:\n          $ref: \"#/components/schemas/configured_bytes_out_rate_metric\"\n        connected:\n          $ref: \"#/components/schemas/connected_metric\"\n        cpu:\n          $ref: \"#/components/schemas/cpu_metric\"\n        frame_rate:\n          $ref: \"#/components/schemas/frame_rate_metric\"\n        frame_size:\n          $ref: \"#/components/schemas/frame_size_metric\"\n        gpu_decoder_usage:\n          $ref: \"#/components/schemas/gpu_decoder_usage_metric\"\n        gpu_driver_version:\n          $ref: \"#/components/schemas/gpu_driver_version_metric\"\n        gpu_encoder_usage:\n          $ref: \"#/components/schemas/gpu_encoder_usage_metric\"\n        gpu_memory_usage:\n          $ref: \"#/components/schemas/gpu_memory_usage_metric\"\n        gpu_usage:\n          $ref: \"#/components/schemas/gpu_usage_metric\"\n        height:\n          $ref: \"#/components/schemas/height_metric\"\n        keyframe_interval:\n          $ref: \"#/components/schemas/keyframe_interval_metric\"\n        stream_target_status_OUTPUTIDX_STREAMTARGETIDX:\n          $ref: \"#/components/schemas/stream_target_status_OUTPUTIDX_STREAMTARGETID\\\n            X_metric\"\n        unique_views:\n          $ref: \"#/components/schemas/unique_views_metric\"\n        video_codec:\n          $ref: \"#/components/schemas/video_codec_metric\"\n        width:\n          $ref: \"#/components/schemas/width_metric\"\n      type: object\n    stream_source:\n      example:\n        backup_ip_address: 54.183.109.82\n        backup_url: rtmp://b.ep335658.i.akamaientrypoint.net/EntryPoint\n        created_at: 2017-11-13T20:00:43.296Z\n        id: cJYndjJt\n        ip_address: 54.183.109.81\n        location: us_west_california\n        location_method: region\n        name: My region-based Stream Source\n        password: 0da80af99e\n        playback_url: rtmp://cp319499.live.edgefcs.net/live/148e575d@335658\n        primary_url: rtmp://p.ep335658.i.akamaientrypoint.net/EntryPoint\n        provider: akamai\n        stream_name: 148e575d@335658\n        updated_at: 2017-11-15T19:26:08.296Z\n        username: \"383435\"\n      properties:\n        backup_ip_address:\n          description: If \u003cem\u003elocation_method\u003c/em\u003e is \u003cstrong\u003eip_address\u003c/strong\u003e, specify\n            the backup IP address of the source encoder.\n          type: string\n        backup_url:\n          description: The backup RTMP playback URL of the transcoded stream.\n          type: string\n        created_at:\n          description: The date and time that the stream source was created.\n          format: date-time\n          type: string\n        id:\n          description: The unique alphanumeric string that identifies the stream source.\n          type: string\n        ip_address:\n          description: If \u003cem\u003elocation_method\u003c/em\u003e is \u003cstrong\u003eip_address\u003c/strong\u003e, specify\n            the primary IP address of the source encoder.\n          type: string\n        location:\n          description: If \u003cem\u003elocation_method\u003c/em\u003e is \u003cstrong\u003eregion\u003c/strong\u003e, specify a\n            location as close as possible to the source encoder.\n          enum:\n            - asia_pacific_australia\n            - asia_pacific_japan\n            - asia_pacific_singapore\n            - asia_pacific_taiwan\n            - eu_belgium\n            - eu_germany\n            - eu_ireland\n            - south_america_brazil\n            - us_central_iowa\n            - us_east_s_carolina\n            - us_east_virginia\n            - us_west_california\n            - us_west_oregon\n          type: string\n        location_method:\n          description: The method used to determine the location of the stream source,\n            either by \u003cstrong\u003eregion\u003c/strong\u003e or based on the source encoder's\n            \u003cstrong\u003eip_address\u003c/strong\u003e.\n          enum:\n            - region\n            - ip_address\n          type: string\n        name:\n          description: A descriptive name for the stream source. Maximum 255 characters.\n          type: string\n        password:\n          description: The password that you can use to configure the source encoder to\n            authenticate to the stream source.\n          type: string\n        playback_url:\n          description: The full RTMP playback URL.\n          type: string\n        primary_url:\n          description: The primary RTMP playback URL of the transcoded stream.\n          type: string\n        provider:\n          description: The provider of the Wowza Streaming Cloud stream source.\n          type: string\n        stream_name:\n          description: The name of the stream that you can use to configure the source\n            encoder to connect to the stream source.\n          type: string\n        updated_at:\n          description: The date and time that the stream source was updated.\n          format: date-time\n          type: string\n        username:\n          description: The username that you can use to configure the source encoder to\n            authenticate to the stream source.\n          type: string\n      type: object\n    stream_source_create_input:\n      properties:\n        stream_source:\n          properties:\n            backup_ip_address:\n              description: If \u003cem\u003elocation_method\u003c/em\u003e is \u003cstrong\u003eip_address\u003c/strong\u003e,\n                specify the backup IP address of the source encoder.\n              example: 12.13.14.16\n              type: string\n            ip_address:\n              description: If \u003cem\u003elocation_method\u003c/em\u003e is \u003cstrong\u003eip_address\u003c/strong\u003e,\n                specify the primary IP address of the source encoder.\n              example: 12.13.14.16\n              type: string\n            location:\n              description: If \u003cem\u003elocation_method\u003c/em\u003e is \u003cstrong\u003eregion\u003c/strong\u003e, specify\n                a location as close as possible to the source encoder.\n              enum:\n                - asia_pacific_australia\n                - asia_pacific_japan\n                - asia_pacific_singapore\n                - asia_pacific_taiwan\n                - eu_belgium\n                - eu_germany\n                - eu_ireland\n                - south_america_brazil\n                - us_central_iowa\n                - us_east_s_carolina\n                - us_east_virginia\n                - us_west_california\n                - us_west_oregon\n              example: us_west_california\n              type: string\n            location_method:\n              description: The method used to determine the location of the stream source,\n                either by \u003cstrong\u003eregion\u003c/strong\u003e or based on the source\n                encoder's \u003cstrong\u003eip_address\u003c/strong\u003e.\n              enum:\n                - region\n                - ip_address\n              example: region\n              type: string\n            name:\n              description: A descriptive name for the stream source. Maximum 255 characters.\n              example: My Stream Source\n              type: string\n          required:\n            - name\n            - location_method\n          title: stream_source\n          type: object\n      required:\n        - stream_source\n      type: object\n    stream_source_update_input:\n      properties:\n        stream_source:\n          properties:\n            name:\n              description: A descriptive name for the stream source. Maximum 255 characters.\n              example: My Stream Source\n              type: string\n          required:\n            - name\n          title: stream_source\n          type: object\n      required:\n        - stream_source\n      type: object\n    stream_sources:\n      example:\n        stream_sources:\n          - backup_ip_address: 54.183.109.82\n            backup_url: rtmp://b.ep335658.i.akamaientrypoint.net/EntryPoint\n            created_at: 2017-11-13T20:00:43.293Z\n            id: cJYndjJt\n            ip_address: 54.183.109.81\n            location: us_west_california\n            location_method: region\n            name: My region-based Stream Source\n            password: 0da80af99e\n            playback_url: rtmp://cp319499.live.edgefcs.net/live/148e575d@335658\n            primary_url: rtmp://p.ep335658.i.akamaientrypoint.net/EntryPoint\n            provider: akamai\n            stream_name: 148e575d@335658\n            updated_at: 2017-11-15T10:10:12.293Z\n            username: \"383435\"\n          - backup_ip_address: 70.36.141.78\n            backup_url: rtmp://b.ep335658.i.akamaientrypoint.net/EntryPoint\n            created_at: 2017-11-12T20:00:43.293Z\n            id: pvVWPLZC\n            ip_address: 70.36.141.78\n            location_method: ip_address\n            name: My IP address based Stream Source\n            password: 384edc9f58\n            playback_url: rtmp://cp319499.live.edgefcs.net/live/37d5f10e@156549\n            primary_url: rtmp://p.ep335658.i.akamaientrypoint.net/EntryPoint\n            provider: akamai\n            stream_name: 37d5f10e@156549\n            updated_at: 2017-11-15T17:02:32.293Z\n            username: \"319399\"\n      properties:\n        stream_sources:\n          items:\n            $ref: \"#/components/schemas/stream_source\"\n          type: array\n      required:\n        - stream_sources\n      type: object\n    stream_target:\n      example:\n        connection_code: 133fcc\n        connection_code_expires_at: 2018-09-15T20:00:43.309Z\n        created_at: 2017-11-13T20:00:43.309Z\n        hds_playback_url: http://[subdomain].akamaihd.net/i/76fa8b9c_1@335304/manifest.f4m\n        hls_playback_url: http://[subdomain].akamaihd.net/z/76fa8b9c_1@335304/master.m3u8\n        id: 2adffc17\n        location: us_west_california\n        name: My RTMP Stream Target\n        password: 0c7cba98e7\n        primary_url: rtmp://p.ep336304.i.akamaientrypoint.net/EntryPoint\n        provider: akamai\n        secure_ingest_query_param: ...\n        stream_name: 76fa8b9c_1_[bitrate]@335304\n        type: WowzaStreamTarget\n        updated_at: 2017-11-14T20:03:45.309Z\n        use_cors: false\n        username: \"169630\"\n      properties:\n        backup_url:\n          description: The backup ingest URL for a target whose \u003cem\u003etype\u003c/em\u003e is\n            \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e or\n            \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e.\n          type: string\n        chunk_size:\n          description: \u003cstrong\u003eThe \u003cem\u003echunk_size\u003c/em\u003e parameter is deprecated. To set the\n            chunk size of a stream target, use the POST\n            /stream_targets/[stream_target_id]/properties endpoint.\u003c/strong\u003e\n            Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n            \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e and \u003cem\u003eprovider\u003c/em\u003e is\n            \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e. The segment duration for HLS\n            encoding. The default is \u003cstrong\u003e10\u003c/strong\u003e.\n          enum:\n            - 2\n            - 4\n            - 6\n            - 8\n            - 10\n          type: string\n        connection_code:\n          description: A six-character, alphanumeric string that allows Wowza Streaming\n            Engine to send a transcoded stream to a\n            \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e or for the Wowza GoCoder app to\n            send an encoded stream to a\n            \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e. The code can be used\n            once and expires 24 hours after it's created.\n          type: string\n        connection_code_expires_at:\n          description: The date and time that the \u003cem\u003econnection_code\u003c/em\u003e expires.\n          format: date-time\n          type: string\n        created_at:\n          description: The date and time that the stream target was created.\n          format: date-time\n          type: string\n        enable_hls:\n          description: Returned only for targets whose \u003cem\u003etype\u003c/em\u003e is\n            \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e. Indicates whether\n            Apple HLS playback is enabled for the stream target.\n          type: boolean\n        enabled:\n          description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n            \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e. If\n            \u003cstrong\u003etrue\u003c/strong\u003e (the default), the source stream is ready to\n            be ingested. If **false**, the source stream won't be ingested by\n            the target's origin server.\n          type: boolean\n        hds_playback_url:\n          description: The web address that the target uses to play Adobe HDS streams.\n          type: string\n        hls_playback_url:\n          description: Only for targets whose \u003cem\u003eprovider\u003c/em\u003e is\n            \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e. The web address that the target\n            uses to play Apple HLS streams.\n          type: string\n        id:\n          description: The unique alphanumeric string that identifies the stream target.\n          type: string\n        ingest_ip_whitelist:\n          description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n            \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e and\n            \u003cem\u003esource_delivery_method\u003c/em\u003e is **push**. A list of IP addresses\n            that can be used to connect to the target's origin server.\n          items:\n            type: string\n          type: array\n        location:\n          description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n            \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e and \u003cem\u003eprovider\u003c/em\u003e is\n            \u003cem\u003enot\u003c/em\u003e \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e. Choose a location as\n            close as possible to your video source.\n          enum:\n            - asia_pacific_australia\n            - asia_pacific_japan\n            - asia_pacific_singapore\n            - asia_pacific_taiwan\n            - eu_belgium\n            - eu_germany\n            - eu_ireland\n            - south_america_brazil\n            - us_central_iowa\n            - us_east_s_carolina\n            - us_east_virginia\n            - us_west_california\n            - us_west_oregon\n          type: string\n        name:\n          description: A descriptive name for the stream target. Maximum 255 characters.\n          type: string\n        password:\n          description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n            \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e and \u003cem\u003eprovider\u003c/em\u003e is\n            \u003cem\u003enot\u003c/em\u003e **akamai_cupertino**. A \u003cem\u003eusername\u003c/em\u003e must also be\n            present. The password associated with the target username for RTMP\n            authentication.\n          type: string\n        playback_urls:\n          description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n            \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e. A hash of **hls**,\n            **wowz**, and **ws** URLs that can be used by the player.\n          properties:\n            hls:\n              description: The web address that the ultra low latency target can use to\n                play the Apple HLS stream.\n              example: https://wowzasubdomain-i.akamaihd.net/hls/live/268548/0P1q1S0lVTE5MQmZVRWM1UXB0Z3V5e3b/playlist.m3u8\n              type: string\n            wowz:\n              description: The **wowz** and **wowzs** web addresses that the ultra low\n                latency target can use to play WOWZ streams.\n              example: wowz://edge-subdomain.cdn.wowza.com/live/_definst_/0P1q1bGo4YmR1bGNKWW9nWVVodHJ6010\n              type: string\n            ws:\n              description: The **ws** and **wss** web addresses that the ultra low latency\n                target can use to play the WebSocket stream.\n              example: ws://edge-subdomain.cdn.wowza.com/live/_definst_/0P1q1bGo4YmR1bGNKWW9nWVVodHJ6010\n              type: string\n          title: Hash of playback URLs\n          type: object\n        primary_url:\n          description: The primary ingest URL of the target.\n          type: string\n        provider:\n          description: The CDN for the target. \u003cbr /\u003e\u003cbr /\u003eRequired for targets whose\n            \u003cem\u003etype\u003c/em\u003e is \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e. Valid values\n            for \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e are \u003cstrong\u003eakamai\u003c/strong\u003e,\n            \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e, \u003cstrong\u003eakamai_rtmp\u003c/strong\u003e,\n            \u003cstrong\u003elimelight\u003c/strong\u003e, \u003cstrong\u003ertmp\u003c/strong\u003e, and\n            \u003cstrong\u003eustream\u003c/strong\u003e. Values can be appended with **_mock** to\n            use in the sandbox environment. \u003cbr /\u003e\u003cbr /\u003eValid values for\n            \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e are \u003cstrong\u003eakamai\u003c/strong\u003e,\n            \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e (default),\n            \u003cstrong\u003eakamai_legacy_rtmp\u003c/strong\u003e, and \u003cstrong\u003ewowza\u003c/strong\u003e. \u003cbr\n            /\u003e\u003cbr /\u003e\u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e defaults to and\n            must be \u003cstrong\u003ewowza\u003c/strong\u003e.\n          type: string\n        region_override:\n          description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n            \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e and\n            \u003cem\u003esource_delivery_method\u003c/em\u003e is **pull**. The location of the\n            stream target's origin server. If unspecified, Wowza Streaming Cloud\n            determines the optimal region for the origin server.\n          enum:\n            - azure-westus\n            - azure-eastus2\n            - azure-northeurope\n            - \"null\"\n          type: string\n        rtmp_playback_url:\n          description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n            \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e. The web address that the target\n            uses to play RTMP streams.\n          type: string\n        secure_ingest_query_param:\n          description: Only for targets whose \u003cem\u003euse_secure_ingest\u003c/em\u003e is\n            \u003cstrong\u003etrue\u003c/strong\u003e. The query parameter needed for secure stream\n            delivery between the transcoder and the target.\n          type: string\n        source_delivery_method:\n          description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n            \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e. The type of connection\n            between the stream source and the stream target. **push** instructs\n            the source to push the stream to the stream target. **pull**\n            instructs the stream target to pull the stream from the source.\n          enum:\n            - push\n            - pull\n          type: string\n        source_url:\n          description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n            \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e and\n            \u003cem\u003esource_delivery_method\u003c/em\u003e is **pull**. The URL of a source IP\n            camera or encoder connecting to the stream target.\n          type: string\n        stream_name:\n          description: The name of the stream being ingested into the target. Returned for\n            all targets except those whose \u003cem\u003etype\u003c/em\u003e is\n            \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e and whose\n            \u003cem\u003esource_delivery_method\u003c/em\u003e is **pull**.\n          type: string\n        type:\n          description: \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e is a Wowza CDN target.\n            \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e is an ultra low latency\n            Wowza stream target. \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e (the\n            default) is an external, third-party destination. \u003c!--and\n            \u003cstrong\u003eFacebookStreamTarget\u003c/strong\u003e (a Facebook Live target).--\u003e\n          enum:\n            - WowzaStreamTarget\n            - UltraLowLatencyStreamTarget\n            - CustomStreamTarget\n          type: string\n        updated_at:\n          description: The date and time that the stream target was updated.\n          format: date-time\n          type: string\n        use_cors:\n          description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n            \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e and \u003cem\u003eprovider\u003c/em\u003e is\n            \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e. CORS, or cross-origin resource\n            sharing, allows streams to be sent to providers such as Peer5,\n            Viblast, and Streamroot, which implement a peer-to-peer grid\n            delivery system.\n          type: boolean\n        use_https:\n          description: \u003cstrong\u003eThe \u003cem\u003euse_https\u003c/em\u003e parameter is deprecated. Use the POST\n            /stream_targets/[\u003cem\u003estream_target_id\u003c/em\u003e]/properties endpoint and\n            the \u003cem\u003erelative_playlists\u003c/em\u003e parameter instead.\u003c/strong\u003e\n          type: boolean\n        use_secure_ingest:\n          description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n            \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e and \u003cem\u003eprovider\u003c/em\u003e is\n            \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e. If \u003cstrong\u003etrue\u003c/strong\u003e,\n            generates a \u003cem\u003esecure_ingest_query_param\u003c/em\u003e to securely deliver\n            the stream from the transcoder to the provider.\n          type: boolean\n        username:\n          description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n            \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e and \u003cem\u003eprovider\u003c/em\u003e is\n            \u003cem\u003enot\u003c/em\u003e **akamai_cupertino**. The username or ID that the\n            target uses for RTMP authentication.\n          type: string\n      type: object\n    stream_target_create_input:\n      allOf:\n        - $ref: \"#/components/schemas/stream_target_input\"\n      example:\n        stream_target:\n          location: us_west_california\n          name: My RTMP Stream Target\n          provider: akamai\n          type: WowzaStreamTarget\n    stream_target_input:\n      properties:\n        stream_target:\n          properties:\n            backup_url:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e. The backup RTMP ingest URL\n                of the target, without the preceding protocol and without the\n                trailing slash (/).\n              example: rtmp://b.ep337857.i.akamaientrypoint.net/EntryPoint\n              type: string\n            chunk_size:\n              description: \u003cstrong\u003eThe \u003cem\u003echunk_size\u003c/em\u003e parameter is deprecated. To set\n                the chunk size of a stream target, use the POST\n                /stream_targets/[stream_target_id]/properties endpoint.\u003c/strong\u003e\n                Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e and \u003cem\u003eprovider\u003c/em\u003e is\n                \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e. The segment duration for HLS\n                encoding. The default is \u003cstrong\u003e10\u003c/strong\u003e.\n              enum:\n                - 2\n                - 4\n                - 6\n                - 8\n                - 10\n              example: 10\n              type: string\n            enable_hls:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e. If\n                \u003cstrong\u003etrue\u003c/strong\u003e, creates an Apple HLS URL for playback on\n                iOS devices (\u003cem\u003ehls_playback_url\u003c/em\u003e). The default is\n                \u003cstrong\u003efalse\u003c/strong\u003e.\n              example: true\n              type: boolean\n            enabled:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e. If\n                \u003cstrong\u003etrue\u003c/strong\u003e (the default), the source stream is ready\n                to be ingested. If **false**, the source stream won't be\n                ingested by the target's origin server.\n              example: true\n              type: boolean\n            hds_playback_url:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e and \u003cem\u003eprovider\u003c/em\u003e is\n                \u003cem\u003enot\u003c/em\u003e \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e. The web address\n                that the target uses to play Adobe HDS streams.\n              example: rtmp://cp319499.live.edgefcs.net/live/c9467d50@337857\n              type: string\n            hls_playback_url:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e. The web address that the\n                target uses to play Apple HLS streams.\n              example: http://xyz.akamaihd.net/z/723a8b9c_1@337857/manifest.f4m\n              type: string\n            ingest_ip_whitelist:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e and\n                \u003cem\u003esource_delivery_method\u003c/em\u003e is **push**. A list of IP\n                addresses that can be used to connect to the target's origin\n                server.\n              example:\n                - 10.11.12.*\n                - 13.12.11.10\n              items:\n                type: string\n              type: array\n            location:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e and \u003cem\u003eprovider\u003c/em\u003e is\n                \u003cem\u003enot\u003c/em\u003e \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e. Choose a\n                location as close as possible to your video source.\n              enum:\n                - asia_pacific_australia\n                - asia_pacific_japan\n                - asia_pacific_singapore\n                - asia_pacific_taiwan\n                - eu_belgium\n                - eu_germany\n                - eu_ireland\n                - south_america_brazil\n                - us_central_iowa\n                - us_east_s_carolina\n                - us_east_virginia\n                - us_west_california\n                - us_west_oregon\n              example: eu_germany\n              type: string\n            name:\n              description: A descriptive name for the stream target. Maximum 255 characters.\n              example: My Custom Stream Target\n              type: string\n            password:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e and \u003cem\u003eprovider\u003c/em\u003e is\n                \u003cem\u003enot\u003c/em\u003e **akamai_cupertino**. A \u003cem\u003eusername\u003c/em\u003e must also\n                be present. The password associated with the target username for\n                RTMP authentication.\n              example: cb1e77e98d\n              type: string\n            primary_url:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e. The primary RTMP ingest\n                URL, without the preceding protocol and without the trailing\n                slash (/).\n              example: rtmp://p.ep337857.i.akamaientrypoint.net/EntryPoint\n              type: string\n            provider:\n              description: The CDN for the target. \u003cbr /\u003e\u003cbr /\u003eRequired for targets whose\n                \u003cem\u003etype\u003c/em\u003e is \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e. Valid\n                values for \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e are\n                \u003cstrong\u003eakamai\u003c/strong\u003e, \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e,\n                \u003cstrong\u003eakamai_rtmp\u003c/strong\u003e, \u003cstrong\u003elimelight\u003c/strong\u003e,\n                \u003cstrong\u003ertmp\u003c/strong\u003e, and \u003cstrong\u003eustream\u003c/strong\u003e. Values can\n                be appended with **_mock** to use in the sandbox environment.\n                \u003cbr /\u003e\u003cbr /\u003eValid values for \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e\n                are \u003cstrong\u003eakamai\u003c/strong\u003e, \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e\n                (default), \u003cstrong\u003eakamai_legacy_rtmp\u003c/strong\u003e, and\n                \u003cstrong\u003ewowza\u003c/strong\u003e. \u003cbr /\u003e\u003cbr\n                /\u003e\u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e defaults to and\n                must be \u003cstrong\u003ewowza\u003c/strong\u003e.\n              example: rtmp\n              type: string\n            region_override:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e and\n                \u003cem\u003esource_delivery_method\u003c/em\u003e is **pull**. The location of the\n                stream target's origin server. If unspecified, Wowza Streaming\n                Cloud determines the optimal region for the origin server.\n              enum:\n                - azure-westus\n                - azure-eastus2\n                - azure-northeurope\n              example: azure-westus\n              type: string\n            rtmp_playback_url:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e. The web address that the\n                target uses to play RTMP streams.\n              example: rtmp://cp123456.live.edgefcs.net/live//[EVENT]@654321\n              type: string\n            source_delivery_method:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e. The type of\n                connection between the stream source and the stream target.\n                **push** instructs the source to push the stream to the stream\n                target. **pull** instructs the stream target to pull the stream\n                from the source.\n              enum:\n                - push\n                - pull\n              example: pull\n              type: string\n            source_url:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e and\n                \u003cem\u003esource_delivery_method\u003c/em\u003e is **pull**. The URL of a source\n                IP camera or encoder connecting to the stream target.\n              example: rtsp://example.com/video\n              type: string\n            stream_name:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e. The name of the stream as\n                defined in the target's ingestion settings.\n              example: c8467d50@337857\n              type: string\n            type:\n              description: \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e is a Wowza CDN target.\n                \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e is an ultra low\n                latency Wowza stream target. \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e\n                (the default) is an external, third-party destination. \u003c!--and\n                \u003cstrong\u003eFacebookStreamTarget\u003c/strong\u003e (a Facebook Live\n                target).--\u003e\n              enum:\n                - WowzaStreamTarget\n                - UltraLowLatencyStreamTarget\n                - CustomStreamTarget\n              example: CustomStreamTarget\n              type: string\n            use_cors:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e and \u003cem\u003eprovider\u003c/em\u003e is\n                \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e. CORS, or cross-origin\n                resource sharing, allows streams to be sent to providers such as\n                Peer5, Viblast, and Streamroot, which implement a peer-to-peer\n                grid delivery system.\n              example: true\n              type: boolean\n            use_https:\n              description: \u003cstrong\u003eThe \u003cem\u003euse_https\u003c/em\u003e parameter is deprecated. Use the\n                POST /stream_targets/[\u003cem\u003estream_target_id\u003c/em\u003e]/properties\n                endpoint and the \u003cem\u003erelative_playlists\u003c/em\u003e parameter\n                instead.\u003c/strong\u003e\n              example: true\n              type: boolean\n            use_secure_ingest:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e and \u003cem\u003eprovider\u003c/em\u003e is\n                \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e. If \u003cstrong\u003etrue\u003c/strong\u003e,\n                generates a \u003cem\u003esecure_ingest_query_param\u003c/em\u003e to securely\n                deliver the stream from the transcoder to the provider.\n              example: true\n              type: boolean\n            username:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e and \u003cem\u003eprovider\u003c/em\u003e is\n                \u003cem\u003enot\u003c/em\u003e **akamai_cupertino**. The username or ID that the\n                target uses for RTMP authentication.\n              example: \"319699\"\n              type: string\n          required:\n            - name\n            - location\n            - primary_url\n            - source_delivery_method\n            - source_url\n            - stream_name\n          title: stream_target\n          type: object\n      required:\n        - stream_target\n      type: object\n    stream_target_metrics:\n      properties:\n        average_bytes_in:\n          description: The average number of bytes transfered to the origin server by the\n            source.\n          example: 456789.123\n          format: float\n          type: number\n        average_total_connections:\n          description: The total number of current connections.\n          example: 10\n          format: float\n          type: number\n        created_at:\n          description: The date and time, in UTC, that the metrics were recorded.\n          format: date-time\n          type: string\n        dropped_connections:\n          description: The total number of dropped connections since the last interval.\n          example: 0\n          type: integer\n        maximum_total_connections:\n          description: The maximum number of connections during the interval.\n          example: 20\n          type: integer\n        minimum_total_connections:\n          description: The minimum number of connections during the interval.\n          example: 0\n          type: integer\n        new_connections:\n          description: The total number of new connections since the last interval.\n          example: 0\n          type: integer\n      type: object\n    stream_target_properties:\n      example:\n        properties:\n          - key: chunkSize\n            section: hls\n            value: \"6\"\n          - key: relativePlaylists\n            section: playlist\n            value: \"true\"\n      properties:\n        properties:\n          items:\n            $ref: \"#/components/schemas/stream_target_property\"\n          type: array\n      required:\n        - properties\n      type: object\n    stream_target_property:\n      example:\n        key: chunkSize\n        section: hls\n        value: \"6\"\n      properties:\n        key:\n          description: \u003cstrong\u003echunkSize\u003c/strong\u003e defines the duration of the time-based\n            audio and video chunks that Wowza Streaming Cloud delivers to the\n            target. \u003cstrong\u003eplaySSL\u003c/strong\u003e determines whether Wowza Streaming\n            Cloud sends the stream from the target to the player by using SSL\n            (HTTPS). \u003cstrong\u003erelativePlaylists\u003c/strong\u003e allows the viewer to\n            watch the stream over HTTP and HTTPS, whichever protocol their\n            browser calls. \u003cstrong\u003esendSSL\u003c/strong\u003e determines whether Wowza\n            Streaming Cloud sends the stream from the transcoder to the target\n            by using SSL (HTTPS).\n          enum:\n            - chunkSize\n            - playSSL\n            - relativePlaylists\n            - sendSSL\n          type: string\n        section:\n          description: The section of the stream target configuration table that contains\n            the property. For \u003cstrong\u003echunkSize\u003c/strong\u003e and\n            \u003cstrong\u003esendSSL\u003c/strong\u003e, use \u003cstrong\u003ehls\u003c/strong\u003e. For\n            \u003cstrong\u003eplaySSL\u003c/strong\u003e and \u003cstrong\u003erelativePlaylists\u003c/strong\u003e, use\n            \u003cstrong\u003eplaylist\u003c/strong\u003e.\n          enum:\n            - hls\n            - playlist\n          type: string\n        stream_target_id:\n          description: The unique alphanumeric string that identifies the stream target.\n          type: string\n        value:\n          description: For \u003cstrong\u003echunkSize\u003c/strong\u003e use \u003cstrong\u003e2\u003c/strong\u003e,\n            \u003cstrong\u003e4\u003c/strong\u003e, \u003cstrong\u003e6\u003c/strong\u003e, \u003cstrong\u003e8\u003c/strong\u003e, or\n            \u003cstrong\u003e10\u003c/strong\u003e. For \u003cstrong\u003eplaySSL\u003c/strong\u003e,\n            \u003cstrong\u003erelativePlaylists\u003c/strong\u003e, and \u003cstrong\u003esendSSL\u003c/strong\u003e use\n            \u003cstrong\u003etrue\u003c/strong\u003e or \u003cstrong\u003efalse\u003c/strong\u003e.\n          enum:\n            - \"2\"\n            - \"4\"\n            - \"6\"\n            - \"8\"\n            - \"10\"\n            - \"true\"\n            - \"false\"\n          type: string\n      type: object\n    stream_target_property_create_input:\n      properties:\n        property:\n          properties:\n            key:\n              description: \u003cstrong\u003echunkSize\u003c/strong\u003e defines the duration of the\n                time-based audio and video chunks that Wowza Streaming Cloud\n                delivers to the target. \u003cstrong\u003eplaySSL\u003c/strong\u003e determines\n                whether Wowza Streaming Cloud sends the stream from the target\n                to the player by using SSL (HTTPS).\n                \u003cstrong\u003erelativePlaylists\u003c/strong\u003e allows the viewer to watch\n                the stream over HTTP and HTTPS, whichever protocol their browser\n                calls. \u003cstrong\u003esendSSL\u003c/strong\u003e determines whether Wowza\n                Streaming Cloud sends the stream from the transcoder to the\n                target by using SSL (HTTPS).\n              enum:\n                - chunkSize\n                - playSSL\n                - relativePlaylists\n                - sendSSL\n              example: chunkSize\n              type: string\n            section:\n              description: The section of the stream target configuration table that\n                contains the property. For \u003cstrong\u003echunkSize\u003c/strong\u003e and\n                \u003cstrong\u003esendSSL\u003c/strong\u003e, use \u003cstrong\u003ehls\u003c/strong\u003e. For\n                \u003cstrong\u003eplaySSL\u003c/strong\u003e and \u003cstrong\u003erelativePlaylists\u003c/strong\u003e,\n                use \u003cstrong\u003eplaylist\u003c/strong\u003e.\n              enum:\n                - hls\n                - playlist\n              example: hls\n              type: string\n            value:\n              description: For \u003cstrong\u003echunkSize\u003c/strong\u003e use \u003cstrong\u003e2\u003c/strong\u003e,\n                \u003cstrong\u003e4\u003c/strong\u003e, \u003cstrong\u003e6\u003c/strong\u003e, \u003cstrong\u003e8\u003c/strong\u003e, or\n                \u003cstrong\u003e10\u003c/strong\u003e. For \u003cstrong\u003eplaySSL\u003c/strong\u003e,\n                \u003cstrong\u003erelativePlaylists\u003c/strong\u003e, and \u003cstrong\u003esendSSL\u003c/strong\u003e\n                use \u003cstrong\u003etrue\u003c/strong\u003e or \u003cstrong\u003efalse\u003c/strong\u003e.\n              enum:\n                - \"2\"\n                - \"4\"\n                - \"6\"\n                - \"8\"\n                - \"10\"\n                - \"true\"\n                - \"false\"\n              example: \"6\"\n              type: string\n          required:\n            - section\n            - key\n            - value\n          title: property\n          type: object\n      required:\n        - property\n      type: object\n    stream_target_status_OUTPUTIDX_STREAMTARGETIDX_metric:\n      properties:\n        status:\n          description: The status of the current key. Possible values are\n            \u003cstrong\u003enormal\u003c/strong\u003e (everything is fine),\n            \u003cstrong\u003ewarning\u003c/strong\u003e (something may be misconfigured), and\n            \u003cstrong\u003eno_data\u003c/strong\u003e (no data was returned, perhaps because the\n            instance isn't running).\n          example: normal\n          type: string\n        text:\n          description: A message related to the value and status of the current key.\n            Usually blank unless there's a warning status.\n          example: \"\"\n          type: string\n        units:\n          description: The unit of the returned value, such as \u003cstrong\u003eKbps\u003c/strong\u003e,\n            \u003cstrong\u003ebps\u003c/strong\u003e, \u003cstrong\u003e%\u003c/strong\u003e, \u003cstrong\u003eFPS\u003c/strong\u003e, or\n            \u003cstrong\u003eGOP\u003c/strong\u003e.\n          example: \"\"\n          type: string\n        value:\n          description: The value of the associated key.\n          example: Active\n          type: string\n      type: object\n    stream_target_update_input:\n      properties:\n        stream_target:\n          properties:\n            backup_url:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e. The backup RTMP ingest URL\n                of the target, without the preceding protocol and without the\n                trailing slash (/).\n              example: rtmp://b.ep337857.i.akamaientrypoint.net/EntryPoint\n              type: string\n            chunk_size:\n              description: \u003cstrong\u003eThe \u003cem\u003echunk_size\u003c/em\u003e parameter is deprecated. To set\n                the chunk size of a stream target, use the POST\n                /stream_targets/[stream_target_id]/properties endpoint.\u003c/strong\u003e\n                Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e and \u003cem\u003eprovider\u003c/em\u003e is\n                \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e. The segment duration for HLS\n                encoding. The default is \u003cstrong\u003e10\u003c/strong\u003e.\n              enum:\n                - 2\n                - 4\n                - 6\n                - 8\n                - 10\n              example: 10\n              type: string\n            enabled:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e. If\n                \u003cstrong\u003etrue\u003c/strong\u003e (the default), the source stream is ready\n                to be ingested. If **false**, the source stream won't be\n                ingested by the target's origin server.\n              example: true\n              type: boolean\n            hds_playback_url:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e and \u003cem\u003eprovider\u003c/em\u003e is\n                \u003cem\u003enot\u003c/em\u003e \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e. The web address\n                that the target uses to play Adobe HDS streams.\n              example: rtmp://cp319499.live.edgefcs.net/live/c9467d50@337857\n              type: string\n            hls_playback_url:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e. The web address that the\n                target uses to play Apple HLS streams.\n              example: http://xyz.akamaihd.net/z/723a8b9c_1@337857/manifest.f4m\n              type: string\n            ingest_ip_whitelist:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e and\n                \u003cem\u003esource_delivery_method\u003c/em\u003e is **push**. A list of IP\n                addresses that can be used to connect to the target's origin\n                server.\n              example:\n                - 10.11.12.*\n                - 13.12.11.10\n              items:\n                type: string\n              type: array\n            name:\n              description: A descriptive name for the stream target. Maximum 255 characters.\n              example: My Custom Stream Target\n              type: string\n            password:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e and \u003cem\u003eprovider\u003c/em\u003e is\n                \u003cem\u003enot\u003c/em\u003e **akamai_cupertino**. A \u003cem\u003eusername\u003c/em\u003e must also\n                be present. The password associated with the target username for\n                RTMP authentication.\n              example: cb1e77e98d\n              type: string\n            primary_url:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e. The primary RTMP ingest\n                URL, without the preceding protocol and without the trailing\n                slash (/).\n              example: rtmp://p.ep337857.i.akamaientrypoint.net/EntryPoint\n              type: string\n            provider:\n              description: The CDN for the target. \u003cbr /\u003e\u003cbr /\u003eRequired for targets whose\n                \u003cem\u003etype\u003c/em\u003e is \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e. Valid\n                values for \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e are\n                \u003cstrong\u003eakamai\u003c/strong\u003e, \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e,\n                \u003cstrong\u003eakamai_rtmp\u003c/strong\u003e, \u003cstrong\u003elimelight\u003c/strong\u003e,\n                \u003cstrong\u003ertmp\u003c/strong\u003e, and \u003cstrong\u003eustream\u003c/strong\u003e. Values can\n                be appended with **_mock** to use in the sandbox environment.\n                \u003cbr /\u003e\u003cbr /\u003eValid values for \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e\n                are \u003cstrong\u003eakamai\u003c/strong\u003e, \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e\n                (default), \u003cstrong\u003eakamai_legacy_rtmp\u003c/strong\u003e, and\n                \u003cstrong\u003ewowza\u003c/strong\u003e. \u003cbr /\u003e\u003cbr\n                /\u003e\u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e defaults to and\n                must be \u003cstrong\u003ewowza\u003c/strong\u003e.\n              example: rtmp\n              type: string\n            rtmp_playback_url:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e. The web address that the\n                target uses to play RTMP streams.\n              example: rtmp://cp123456.live.edgefcs.net/live//[EVENT]@654321\n              type: string\n            source_url:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e and\n                \u003cem\u003esource_delivery_method\u003c/em\u003e is **pull**. The URL of a source\n                IP camera or encoder connecting to the stream target.\n              example: ws://example.com/stream/stream1\n              type: string\n            stream_name:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e. The name of the stream as\n                defined in the target's ingestion settings.\n              example: c8467d50@337857\n              type: string\n            username:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e and \u003cem\u003eprovider\u003c/em\u003e is\n                \u003cem\u003enot\u003c/em\u003e **akamai_cupertino**. The username or ID that the\n                target uses for RTMP authentication.\n              example: \"319699\"\n              type: string\n          title: stream_target\n          type: object\n      required:\n        - stream_target\n      type: object\n    stream_targets:\n      example:\n        stream_targets:\n          - connection_code: 133fcc\n            connection_code_expires_at: 2018-09-15T20:00:43.303Z\n            created_at: 2017-11-13T20:00:43.303Z\n            hds_playback_url: http://[subdomain].akamaihd.net/i/76fa8b9c_1@335304/manifest.f4m\n            hls_playback_url: http://[subdomain].akamaihd.net/z/76fa8b9c_1@335304/master.m3u8\n            id: QvvJYJjk\n            location: us_west_california\n            name: My Provisioned RTMP Stream Target\n            primary_url: rtmp://p.ep336304.i.akamaientrypoint.net/EntryPoint\n            provider: akamai\n            stream_name: 76fa8b9c_1_[bitrate]@335304\n            type: WowzaStreamTarget\n            updated_at: 2017-11-14T22:22:44.303Z\n            username: \"169630\"\n          - backup_url: http://post-b.ingest1-i.akamaihd.net/228559-b/4a1799\n            connection_code: 16da69\n            connection_code_expires_at: 2018-09-15T20:00:43.303Z\n            created_at: 2017-11-12T20:00:43.303Z\n            hls_playback_url: http://ingest1-i.akamaihd.net/hls/live/228559/5f6712/playlist.m3u8\n            id: J75Mlh3V\n            name: My Provisioned HLS Push Stream Target\n            primary_url: http://post.ingest1-i.akamaihd.net/228559/5f6712\n            provider: akamai_cupertino\n            stream_name: a535aa63\n            type: WowzaStreamTarget\n            updated_at: 2017-11-15T03:25:07.303Z\n          - backup_url: rtmp://b.ep337857.i.akamaientrypoint.net/EntryPoint\n            created_at: 2017-11-12T20:00:43.303Z\n            hds_playback_url: rtmp://cp319499.live.edgefcs.net/live/c9467d50@337857\n            hls_playback_url: http://[subdomain].akamaihd.net/z/723a8b9c_1@337857/master.m3u8\n            id: J75Mlh3V\n            name: My Custom Stream Target\n            primary_url: rtmp://p.ep337857.i.akamaientrypoint.net/EntryPoint\n            provider: rtmp\n            stream_name: c8467d50@337857\n            type: CustomStreamTarget\n            updated_at: 2017-11-15T07:41:21.303Z\n            username: \"319699\"\n          - connection_code: 25ddf4\n            connection_code_expires_at: 2018-09-15T20:00:43.303Z\n            created_at: 2017-11-12T20:00:43.303Z\n            id: K3MRRlfvx\n            name: My Wowza Ultra Low Latency Stream Target\n            primary_url: rtmp://origin-subdomain.cdn.wowza.com:1935/live/0I0q1bjZhRzZtfSdv4TpCnlmwQT16236\n            provider: wowza\n            stream_name: 0I0q1bjZhRzZtfSdv4TpCnlmwQT16236\n            type: UltraLowLatencyStreamTarget\n            updated_at: 2017-11-14T17:24:14.303Z\n      properties:\n        stream_targets:\n          items:\n            $ref: \"#/components/schemas/index_stream_target\"\n          type: array\n      required:\n        - stream_targets\n      type: object\n    token_auth:\n      example:\n        created_at: 2017-11-13T20:00:43.322Z\n        enabled: true\n        stream_target_id: PblTJm1t\n        trusted_shared_secret: 499602D2\n        updated_at: 2017-11-14T16:59:47.322Z\n      properties:\n        created_at:\n          description: The date and time that the token authorization was created.\n          format: date-time\n          type: string\n        enabled:\n          description: Specify \u003cstrong\u003etrue\u003c/strong\u003e to enable token authorization or\n            \u003cstrong\u003efalse\u003c/strong\u003e to disable.\n          type: boolean\n        stream_target_id:\n          description: The unique alphanumeric string that identifies the stream target.\n          type: string\n        trusted_shared_secret:\n          description: The trusted shared secret of the token authorization. Must contain\n            only hexadecimal characters and be an even number of total\n            characters not exceeding 32.\n          type: string\n        updated_at:\n          description: The date and time that the token authorization was updated.\n          format: date-time\n          type: string\n      type: object\n    token_auth_create_input:\n      properties:\n        token_auth:\n          properties:\n            enabled:\n              description: Specify \u003cstrong\u003etrue\u003c/strong\u003e to enable token authorization or\n                \u003cstrong\u003efalse\u003c/strong\u003e to disable.\n              example: true\n              type: boolean\n            trusted_shared_secret:\n              description: The trusted shared secret of the token authorization. Must\n                contain only hexadecimal characters and be an even number of\n                total characters not exceeding 32.\n              example: 499602D2\n              type: string\n          required:\n            - enabled\n            - trusted_shared_secret\n          title: token_auth\n          type: object\n      required:\n        - token_auth\n      type: object\n    token_auth_update_input:\n      properties:\n        token_auth:\n          properties:\n            enabled:\n              description: Specify \u003cstrong\u003etrue\u003c/strong\u003e to enable token authorization or\n                \u003cstrong\u003efalse\u003c/strong\u003e to disable.\n              example: true\n              type: boolean\n            trusted_shared_secret:\n              description: The trusted shared secret of the token authorization. Must\n                contain only hexadecimal characters and be an even number of\n                total characters not exceeding 32.\n              example: 499602D2\n              type: string\n          title: token_auth\n          type: object\n      required:\n        - token_auth\n      type: object\n    transcoder:\n      example:\n        application_name: app-3757\n        billing_mode: pay_as_you_go\n        broadcast_location: us_central_iowa\n        buffer_size: 4000\n        closed_caption_type: cea\n        created_at: 2017-11-12T20:00:43.329Z\n        delivery_method: push\n        delivery_protocols:\n          - rtmp\n          - rtsp\n          - wowz\n        description: My Transcoder Description\n        direct_playback_urls:\n          - rtmp:\n              - name: source\n                url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789\n              - name: 1920x1080\n                output_id: dcxq5q6c\n                url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream1\n              - name: 1280x720\n                output_id: 0g116zkf\n                url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream2\n              - name: 854x480\n                output_id: 4qqkwndt\n                url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream3\n              - name: 640x360\n                output_id: 0pv8djpg\n                url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream4\n              - name: 512x288\n                output_id: b09xrxjf\n                url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream5\n              - name: 320x180\n                output_id: bvkh2nsz\n                url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream6\n          - rtsp:\n              - name: source\n                url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789\n              - name: 1920x1080\n                output_id: dcxq5q6c\n                url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream1\n              - name: 1280x720\n                output_id: 0g116zkf\n                url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream2\n              - name: 854x480\n                output_id: 4qqkwndt\n                url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream3\n              - name: 640x360\n                output_id: 0pv8djpg\n                url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream4\n              - name: 512x288\n                output_id: b09xrxjf\n                url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream5\n              - name: 320x180\n                output_id: bvkh2nsz\n                url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream6\n          - wowz:\n              - name: source\n                url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789\n              - name: 1920x1080\n                output_id: dcxq5q6c\n                url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream1\n              - name: 1280x720\n                output_id: 0g116zkf\n                url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream2\n              - name: 854x480\n                output_id: 4qqkwndt\n                url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream3\n              - name: 640x360\n                output_id: 0pv8djpg\n                url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream4\n              - name: 512x288\n                output_id: b09xrxjf\n                url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream5\n              - name: 320x180\n                output_id: bvkh2nsz\n                url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream6\n        disable_authentication: false\n        domain_name: f92334.entrypoint.cloud.wowza.com\n        id: 2lsWj3F9\n        idle_timeout: 1200\n        low_latency: false\n        name: My PAYG Transcoder\n        outputs:\n          - {}\n        password: 82e0e971\n        protocol: rtmp\n        recording: true\n        source_port: 1935\n        stream_extension: .sdp\n        stream_name: 10eb0ed8\n        stream_smoother: false\n        suppress_stream_target_start: false\n        transcoder_type: transcoded\n        updated_at: 2017-11-14T18:16:07.329Z\n        username: client2\n        video_fallback: false\n        watermark: true\n        watermark_height: 80\n        watermark_image_url: https://prod.s3.amazonaws.com/uploads/transcoder/watermark_image/12345/4baa13.jpg\n        watermark_opacity: 75\n        watermark_position: top-right\n        watermark_width: 100\n      properties:\n        application_name:\n          description: The application name from the pull stream source URL.\n          type: string\n        billing_mode:\n          description: The billing mode for the transcoder. The default is\n            \u003cstrong\u003epay_as_you_go\u003c/strong\u003e.\n          enum:\n            - pay_as_you_go\n            - twentyfour_seven\n          type: string\n        broadcast_location:\n          description: The location where Wowza Streaming Cloud transcodes your stream.\n            Choose a location as close as possible to your video source.\n          enum:\n            - asia_pacific_australia\n            - asia_pacific_japan\n            - asia_pacific_singapore\n            - asia_pacific_taiwan\n            - eu_belgium\n            - eu_germany\n            - eu_ireland\n            - south_america_brazil\n            - us_central_iowa\n            - us_east_s_carolina\n            - us_east_virginia\n            - us_west_california\n            - us_west_oregon\n          type: string\n        buffer_size:\n          description: The size, in milliseconds, of the incoming buffer.\n            \u003cstrong\u003e0\u003c/strong\u003e means no buffer. The default is\n            \u003cstrong\u003e4000\u003c/strong\u003e (4 seconds).\n          enum:\n            - 0\n            - 1000\n            - 2000\n            - 3000\n            - 4000\n            - 5000\n            - 6000\n            - 7000\n            - 8000\n          format: int32\n          type: integer\n        closed_caption_type:\n          description: The type of closed caption data being passed from the source. The\n            default, \u003cstrong\u003enone\u003c/strong\u003e, indicates that no data is being\n            provided. \u003cstrong\u003ecea\u003c/strong\u003e indicates that a CEA closed\n            captioning data stream is being provided. \u003cstrong\u003eon_text\u003c/strong\u003e\n            indicates that an onTextData closed captioning data stream is being\n            provided. \u003cstrong\u003eboth\u003c/strong\u003e indicates that both CEA and\n            onTextData closed captioing data streams are being provided.\n          enum:\n            - none\n            - cea\n            - on_text\n            - both\n          type: string\n        created_at:\n          description: The date and time that the transcoder was created.\n          format: date-time\n          type: string\n        delivery_method:\n          description: The type of connection between the source encoder and the\n            transcoder. The default, \u003cstrong\u003epull\u003c/strong\u003e, instructs the\n            transcoder to pull the video from the source. \u003cstrong\u003epush\u003c/strong\u003e\n            instructs the source to push the stream to the transcoder.\n            \u003cstrong\u003ecdn\u003c/strong\u003e uses a stream source to deliver the stream to\n            the transcoder.\n          enum:\n            - pull\n            - cdn\n            - push\n          type: string\n        delivery_protocols:\n          description: An array of playback protocols enabled for this transcoder. By\n            default, \u003cstrong\u003ertmp\u003c/strong\u003e, \u003cstrong\u003ertsp\u003c/strong\u003e, and\n            \u003cstrong\u003ewowz\u003c/strong\u003e are returned.\n          items:\n            type: string\n          type: array\n        description:\n          description: An optional description of the transcoder.\n          type: string\n        direct_playback_urls:\n          description: An array of direct playback URLs the transcoder's delivery\n            protocols. Each protocol has a URL for the source and a URL for each\n            output rendition.\n          items:\n            properties:\n              name:\n                description: \"The name of the playback URL: \u003cstrong\u003esource\u003c/strong\u003e,\n                  \u003cstrong\u003epassthrough\u003c/strong\u003e, or the output rendition's\n                  resolution.\"\n                example: hls\n                type: string\n              output_id:\n                description: Only for output rendition-based playback URLs, not source\n                  playback URLs. The unique alphanumeric string that identifies\n                  the output rendition.\n                example: dcxq5q6c\n                type: string\n              url:\n                description: The playback URL for the source or output rendition.\n                example: https://abcdef.dev.entrypoint.cloud.wowza.com/app-16ea/ngrp:43a23e5a_all/playlist.m3u8\n                type: string\n            title: playback_url\n            type: object\n          type: array\n        disable_authentication:\n          description: Authentication is required by default for RTMP and RTSP push\n            connections from a video source to the transcoder. Specify\n            \u003cstrong\u003etrue\u003c/strong\u003e to disable authentication with the video\n            source.\n          type: boolean\n        domain_name:\n          description: The domain name from the pull stream source URL.\n          type: string\n        id:\n          description: The unique alphanumeric string that identifies the transcoder.\n          type: string\n        idle_timeout:\n          description: The amount of idle time, in seconds, before the transcoder\n            automatically shuts down. Valid values are the integers\n            \u003cstrong\u003e0\u003c/strong\u003e (never shuts down) to \u003cstrong\u003e172800\u003c/strong\u003e (48\n            hours). The default is \u003cstrong\u003e1200\u003c/strong\u003e (20 minutes).\n          format: int32\n          type: integer\n        low_latency:\n          description: If \u003cstrong\u003etrue\u003c/strong\u003e, turns off the sort packet buffer and\n            speeds the time it takes to decode and deliver video data to the\n            player. The default is \u003cstrong\u003efalse\u003c/strong\u003e.\n          type: boolean\n        name:\n          description: A descriptive name for the transcoder. Maximum 200 characters.\n          type: string\n        outputs:\n          description: Output renditions associated with the transcoder.\n          items:\n            $ref: \"#/components/schemas/output\"\n          type: array\n        password:\n          description: A password for authenticating an RTMP or RTSP push connection. Can\n            contain only uppercase and lowercase letters; numbers; and the\n            period (.), underscore (_), and hyphen (-) characters. No other\n            special characters can be used.\n          type: string\n        play_maximum_connections:\n          description: The number of users who are allowed to connect directly to the\n            transcoder.\n          enum:\n            - 10\n            - 11\n            - 12\n            - 13\n            - 14\n            - 15\n            - 16\n            - 17\n            - 18\n            - 19\n            - 20\n            - 21\n            - 22\n            - 23\n            - 24\n            - 25\n            - 26\n            - 27\n            - 28\n            - 29\n            - 30\n            - 31\n            - 32\n            - 33\n            - 34\n            - 35\n            - 36\n            - 37\n            - 38\n            - 39\n            - 40\n            - 41\n            - 42\n            - 43\n            - 44\n            - 45\n            - 46\n            - 47\n            - 48\n            - 49\n            - 50\n            - 51\n            - 52\n            - 53\n            - 54\n            - 55\n            - 56\n            - 57\n            - 58\n            - 59\n            - 60\n            - 61\n            - 62\n            - 63\n            - 64\n            - 65\n            - 66\n            - 67\n            - 68\n            - 69\n            - 70\n            - 71\n            - 72\n            - 73\n            - 74\n            - 75\n            - 76\n            - 77\n            - 78\n            - 79\n            - 80\n            - 81\n            - 82\n            - 83\n            - 84\n            - 85\n            - 86\n            - 87\n            - 88\n            - 89\n            - 90\n            - 91\n            - 92\n            - 93\n            - 94\n            - 95\n            - 96\n            - 97\n            - 98\n            - 99\n            - 100\n          format: int32\n          type: integer\n        protocol:\n          description: The transport protocol for the source video. The default is\n            \u003cstrong\u003ertmp\u003c/strong\u003e.\n          enum:\n            - rtmp\n            - rtsp\n          type: string\n        recording:\n          description: If \u003cstrong\u003etrue\u003c/strong\u003e, creates a recording of the transcoded\n            output. The default is \u003cstrong\u003efalse\u003c/strong\u003e.\n          type: boolean\n        source_port:\n          description: The port used for RTMP pull connections to Wowza Streaming Cloud.\n          format: int32\n          type: integer\n        source_url:\n          description: For the \u003cem\u003edelivery_method\u003c/em\u003e \u003cstrong\u003epull\u003c/strong\u003e. Enter the\n            source's web address without the preceding protocol or the trailing\n            slash (/).\n          type: string\n        stream_extension:\n          description: For the \u003cem\u003edelivery_method\u003c/em\u003e \u003cstrong\u003epush\u003c/strong\u003e. Some\n            encoders append an extension to their stream names. If the device\n            you're using does this, enter the extension.\n          type: string\n        stream_name:\n          description: The stream name from the pull stream source URL.\n          type: string\n        stream_smoother:\n          description: A dynamic buffer that helps stabilize streams in rough network\n            conditions, but adds latency. Specify \u003cstrong\u003etrue\u003c/strong\u003e to\n            enable stream smoothing. The default is \u003cstrong\u003efalse\u003c/strong\u003e.\n          type: boolean\n        stream_source_id:\n          description: For the \u003cem\u003edelivery_method\u003c/em\u003e \u003cstrong\u003ecdn\u003c/strong\u003e. The\n            alphanumeric string that identifies the stream source that you want\n            to use to deliver the stream to the transcoder.\n          type: string\n        suppress_stream_target_start:\n          description: If \u003cstrong\u003etrue\u003c/strong\u003e, disables stream targets when the\n            transcoder starts. If \u003cstrong\u003efalse\u003c/strong\u003e (the default), the\n            targets start when the transcoder starts.\n          type: boolean\n        transcoder_type:\n          description: The type of transcoder, either \u003cstrong\u003etranscoded\u003c/strong\u003e for\n            streams that are transcoded into adaptive bitrate renditions or\n            \u003cstrong\u003epassthrough\u003c/strong\u003e for streams that aren't processed by\n            the transcoder. The default is \u003cstrong\u003etranscoded\u003c/strong\u003e.\n          enum:\n            - transcoded\n            - passthrough\n          type: string\n        updated_at:\n          description: The date and time that the transcoder was updated.\n          format: date-time\n          type: string\n        username:\n          description: A username for authenticating an RTMP or RTSP push connection. Can\n            contain only uppercase and lowercase letters; numbers; and the\n            period (.), underscore (_), and hyphen (-) characters. No other\n            special characters can be used.\n          type: string\n        video_fallback:\n          description: If \u003cstrong\u003etrue\u003c/strong\u003e, black video plays if the video source\n            disconnects from the transcoder. If \u003cstrong\u003efalse\u003c/strong\u003e (the\n            default), a stream-not-available message appears. Works only with\n            stream targets whose \u003cem\u003eprovider\u003c/em\u003e is\n            \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e.\n          type: boolean\n        watermark:\n          description: Embeds an image into the transcoded stream for copyright protection.\n            Specify \u003cstrong\u003etrue\u003c/strong\u003e to embed a watermark image.\n          type: boolean\n        watermark_height:\n          description: The height, in pixels, of the watermark image. If blank, Wowza\n            Streaming Cloud uses the original image height.\n          format: int32\n          type: integer\n        watermark_image_url:\n          description: The path to a GIF, JPEG, or PNG image that is embedded in all\n            bitrate renditions of the stream. Watermark image files must be 2.5\n            MB or smaller.\n          type: string\n        watermark_opacity:\n          description: The opacity, or percentage of transparency, of the watermark.\n            \u003cstrong\u003e0\u003c/strong\u003e is fully transparent; \u003cstrong\u003e100\u003c/strong\u003e is\n            fully opaque.\n          enum:\n            - 0\n            - 1\n            - 2\n            - 3\n            - 4\n            - 5\n            - 6\n            - 7\n            - 8\n            - 9\n            - 10\n            - 11\n            - 12\n            - 13\n            - 14\n            - 15\n            - 16\n            - 17\n            - 18\n            - 19\n            - 20\n            - 21\n            - 22\n            - 23\n            - 24\n            - 25\n            - 26\n            - 27\n            - 28\n            - 29\n            - 30\n            - 31\n            - 32\n            - 33\n            - 34\n            - 35\n            - 36\n            - 37\n            - 38\n            - 39\n            - 40\n            - 41\n            - 42\n            - 43\n            - 44\n            - 45\n            - 46\n            - 47\n            - 48\n            - 49\n            - 50\n            - 51\n            - 52\n            - 53\n            - 54\n            - 55\n            - 56\n            - 57\n            - 58\n            - 59\n            - 60\n            - 61\n            - 62\n            - 63\n            - 64\n            - 65\n            - 66\n            - 67\n            - 68\n            - 69\n            - 70\n            - 71\n            - 72\n            - 73\n            - 74\n            - 75\n            - 76\n            - 77\n            - 78\n            - 79\n            - 80\n            - 81\n            - 82\n            - 83\n            - 84\n            - 85\n            - 86\n            - 87\n            - 88\n            - 89\n            - 90\n            - 91\n            - 92\n            - 93\n            - 94\n            - 95\n            - 96\n            - 97\n            - 98\n            - 99\n            - 100\n          format: int32\n          type: integer\n        watermark_position:\n          description: The corner of the video frame in which you want the watermark to\n            appear. The default is \u003cstrong\u003etop-left\u003c/strong\u003e.\n          enum:\n            - top-left\n            - top-right\n            - bottom-left\n            - bottom-right\n          type: string\n        watermark_width:\n          description: The width, in pixels, of the watermark image. If blank, Wowza\n            Streaming Cloud uses the original image width.\n          format: int32\n          type: integer\n      type: object\n    transcoder_create_input:\n      properties:\n        transcoder:\n          properties:\n            billing_mode:\n              description: The billing mode for the transcoder. The default is\n                \u003cstrong\u003epay_as_you_go\u003c/strong\u003e.\n              enum:\n                - pay_as_you_go\n                - twentyfour_seven\n              example: pay_as_you_go\n              type: string\n            broadcast_location:\n              description: The location where Wowza Streaming Cloud transcodes your stream.\n                Choose a location as close as possible to your video source.\n              enum:\n                - asia_pacific_australia\n                - asia_pacific_japan\n                - asia_pacific_singapore\n                - asia_pacific_taiwan\n                - eu_belgium\n                - eu_germany\n                - eu_ireland\n                - south_america_brazil\n                - us_central_iowa\n                - us_east_s_carolina\n                - us_east_virginia\n                - us_west_california\n                - us_west_oregon\n              example: us_central_iowa\n              type: string\n            buffer_size:\n              description: The size, in milliseconds, of the incoming buffer.\n                \u003cstrong\u003e0\u003c/strong\u003e means no buffer. The default is\n                \u003cstrong\u003e4000\u003c/strong\u003e (4 seconds).\n              enum:\n                - 0\n                - 1000\n                - 2000\n                - 3000\n                - 4000\n                - 5000\n                - 6000\n                - 7000\n                - 8000\n              example: 4000\n              format: int32\n              type: integer\n            closed_caption_type:\n              description: The type of closed caption data being passed from the source.\n                The default, \u003cstrong\u003enone\u003c/strong\u003e, indicates that no data is\n                being provided. \u003cstrong\u003ecea\u003c/strong\u003e indicates that a CEA closed\n                captioning data stream is being provided.\n                \u003cstrong\u003eon_text\u003c/strong\u003e indicates that an onTextData closed\n                captioning data stream is being provided. \u003cstrong\u003eboth\u003c/strong\u003e\n                indicates that both CEA and onTextData closed captioing data\n                streams are being provided.\n              enum:\n                - none\n                - cea\n                - on_text\n                - both\n              example: cea\n              type: string\n            delivery_method:\n              description: The type of connection between the source encoder and the\n                transcoder. The default, \u003cstrong\u003epull\u003c/strong\u003e, instructs the\n                transcoder to pull the video from the source.\n                \u003cstrong\u003epush\u003c/strong\u003e instructs the source to push the stream to\n                the transcoder. \u003cstrong\u003ecdn\u003c/strong\u003e uses a stream source to\n                deliver the stream to the transcoder.\n              enum:\n                - pull\n                - cdn\n                - push\n              example: pull\n              type: string\n            delivery_protocols:\n              description: An array of playback protocols enabled for this transcoder. By\n                default, \u003cstrong\u003ertmp\u003c/strong\u003e, \u003cstrong\u003ertsp\u003c/strong\u003e, and\n                \u003cstrong\u003ewowz\u003c/strong\u003e are returned.\n              example:\n                - rtmp\n                - rtsp\n                - wowz\n              items:\n                type: string\n              type: array\n            description:\n              description: An optional description of the transcoder.\n              example: My Transcoder Description\n              type: string\n            disable_authentication:\n              description: Authentication is required by default for RTMP and RTSP push\n                connections from a video source to the transcoder. Specify\n                \u003cstrong\u003etrue\u003c/strong\u003e to disable authentication with the video\n                source.\n              example: false\n              type: boolean\n            idle_timeout:\n              description: The amount of idle time, in seconds, before the transcoder\n                automatically shuts down. Valid values are the integers\n                \u003cstrong\u003e0\u003c/strong\u003e (never shuts down) to \u003cstrong\u003e172800\u003c/strong\u003e\n                (48 hours). The default is \u003cstrong\u003e1200\u003c/strong\u003e (20 minutes).\n              example: 1200\n              format: int32\n              type: integer\n            low_latency:\n              description: If \u003cstrong\u003etrue\u003c/strong\u003e, turns off the sort packet buffer and\n                speeds the time it takes to decode and deliver video data to the\n                player. The default is \u003cstrong\u003efalse\u003c/strong\u003e.\n              example: false\n              type: boolean\n            name:\n              description: A descriptive name for the transcoder. Maximum 200 characters.\n              example: My PAYG Transcoder\n              type: string\n            password:\n              description: A password for authenticating an RTMP or RTSP push connection.\n                Can contain only uppercase and lowercase letters; numbers; and\n                the period (.), underscore (_), and hyphen (-) characters. No\n                other special characters can be used.\n              example: 82e0e971\n              type: string\n            play_maximum_connections:\n              description: The number of users who are allowed to connect directly to the\n                transcoder.\n              enum:\n                - 10\n                - 11\n                - 12\n                - 13\n                - 14\n                - 15\n                - 16\n                - 17\n                - 18\n                - 19\n                - 20\n                - 21\n                - 22\n                - 23\n                - 24\n                - 25\n                - 26\n                - 27\n                - 28\n                - 29\n                - 30\n                - 31\n                - 32\n                - 33\n                - 34\n                - 35\n                - 36\n                - 37\n                - 38\n                - 39\n                - 40\n                - 41\n                - 42\n                - 43\n                - 44\n                - 45\n                - 46\n                - 47\n                - 48\n                - 49\n                - 50\n                - 51\n                - 52\n                - 53\n                - 54\n                - 55\n                - 56\n                - 57\n                - 58\n                - 59\n                - 60\n                - 61\n                - 62\n                - 63\n                - 64\n                - 65\n                - 66\n                - 67\n                - 68\n                - 69\n                - 70\n                - 71\n                - 72\n                - 73\n                - 74\n                - 75\n                - 76\n                - 77\n                - 78\n                - 79\n                - 80\n                - 81\n                - 82\n                - 83\n                - 84\n                - 85\n                - 86\n                - 87\n                - 88\n                - 89\n                - 90\n                - 91\n                - 92\n                - 93\n                - 94\n                - 95\n                - 96\n                - 97\n                - 98\n                - 99\n                - 100\n              example: 20\n              format: int32\n              type: integer\n            protocol:\n              description: The transport protocol for the source video. The default is\n                \u003cstrong\u003ertmp\u003c/strong\u003e.\n              enum:\n                - rtmp\n                - rtsp\n              example: rtmp\n              type: string\n            recording:\n              description: If \u003cstrong\u003etrue\u003c/strong\u003e, creates a recording of the transcoded\n                output. The default is \u003cstrong\u003efalse\u003c/strong\u003e.\n              example: true\n              type: boolean\n            source_url:\n              description: For the \u003cem\u003edelivery_method\u003c/em\u003e \u003cstrong\u003epull\u003c/strong\u003e. Enter\n                the source's web address without the preceding protocol or the\n                trailing slash (/).\n              example: cp12345.live.edgefcs.net/live/redcarpet@123456\n              type: string\n            stream_extension:\n              description: For the \u003cem\u003edelivery_method\u003c/em\u003e \u003cstrong\u003epush\u003c/strong\u003e. Some\n                encoders append an extension to their stream names. If the\n                device you're using does this, enter the extension.\n              example: .sdp\n              type: string\n            stream_smoother:\n              description: A dynamic buffer that helps stabilize streams in rough network\n                conditions, but adds latency. Specify \u003cstrong\u003etrue\u003c/strong\u003e to\n                enable stream smoothing. The default is \u003cstrong\u003efalse\u003c/strong\u003e.\n              example: false\n              type: boolean\n            stream_source_id:\n              description: For the \u003cem\u003edelivery_method\u003c/em\u003e \u003cstrong\u003ecdn\u003c/strong\u003e. The\n                alphanumeric string that identifies the stream source that you\n                want to use to deliver the stream to the transcoder.\n              example: rxHQQpWw\n              type: string\n            suppress_stream_target_start:\n              description: If \u003cstrong\u003etrue\u003c/strong\u003e, disables stream targets when the\n                transcoder starts. If \u003cstrong\u003efalse\u003c/strong\u003e (the default), the\n                targets start when the transcoder starts.\n              example: false\n              type: boolean\n            transcoder_type:\n              description: The type of transcoder, either \u003cstrong\u003etranscoded\u003c/strong\u003e for\n                streams that are transcoded into adaptive bitrate renditions or\n                \u003cstrong\u003epassthrough\u003c/strong\u003e for streams that aren't processed\n                by the transcoder. The default is \u003cstrong\u003etranscoded\u003c/strong\u003e.\n              enum:\n                - transcoded\n                - passthrough\n              example: transcoded\n              type: string\n            username:\n              description: A username for authenticating an RTMP or RTSP push connection.\n                Can contain only uppercase and lowercase letters; numbers; and\n                the period (.), underscore (_), and hyphen (-) characters. No\n                other special characters can be used.\n              example: client2\n              type: string\n            video_fallback:\n              description: If \u003cstrong\u003etrue\u003c/strong\u003e, black video plays if the video source\n                disconnects from the transcoder. If \u003cstrong\u003efalse\u003c/strong\u003e (the\n                default), a stream-not-available message appears. Works only\n                with stream targets whose \u003cem\u003eprovider\u003c/em\u003e is\n                \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e.\n              example: false\n              type: boolean\n            watermark:\n              description: Embeds an image into the transcoded stream for copyright\n                protection. Specify \u003cstrong\u003etrue\u003c/strong\u003e to embed a watermark\n                image.\n              example: true\n              type: boolean\n            watermark_height:\n              description: The height, in pixels, of the watermark image. If blank, Wowza\n                Streaming Cloud uses the original image height.\n              example: 80\n              format: int32\n              type: integer\n            watermark_image:\n              description: A Base64-encoded string representation of a GIF, JPEG, or PNG\n                image that is embedded in all bitrate renditions of the stream.\n                Watermark image files must be 2.5 MB or smaller.\n              example: https://prod.s3.amazonaws.com/uploads/transcoder/watermark_image/12345/4baa13.jpg\n              type: string\n            watermark_opacity:\n              description: The opacity, or percentage of transparency, of the watermark.\n                \u003cstrong\u003e0\u003c/strong\u003e is fully transparent; \u003cstrong\u003e100\u003c/strong\u003e is\n                fully opaque.\n              enum:\n                - 0\n                - 1\n                - 2\n                - 3\n                - 4\n                - 5\n                - 6\n                - 7\n                - 8\n                - 9\n                - 10\n                - 11\n                - 12\n                - 13\n                - 14\n                - 15\n                - 16\n                - 17\n                - 18\n                - 19\n                - 20\n                - 21\n                - 22\n                - 23\n                - 24\n                - 25\n                - 26\n                - 27\n                - 28\n                - 29\n                - 30\n                - 31\n                - 32\n                - 33\n                - 34\n                - 35\n                - 36\n                - 37\n                - 38\n                - 39\n                - 40\n                - 41\n                - 42\n                - 43\n                - 44\n                - 45\n                - 46\n                - 47\n                - 48\n                - 49\n                - 50\n                - 51\n                - 52\n                - 53\n                - 54\n                - 55\n                - 56\n                - 57\n                - 58\n                - 59\n                - 60\n                - 61\n                - 62\n                - 63\n                - 64\n                - 65\n                - 66\n                - 67\n                - 68\n                - 69\n                - 70\n                - 71\n                - 72\n                - 73\n                - 74\n                - 75\n                - 76\n                - 77\n                - 78\n                - 79\n                - 80\n                - 81\n                - 82\n                - 83\n                - 84\n                - 85\n                - 86\n                - 87\n                - 88\n                - 89\n                - 90\n                - 91\n                - 92\n                - 93\n                - 94\n                - 95\n                - 96\n                - 97\n                - 98\n                - 99\n                - 100\n              example: 75\n              format: int32\n              type: integer\n            watermark_position:\n              description: The corner of the video frame in which you want the watermark to\n                appear. The default is \u003cstrong\u003etop-left\u003c/strong\u003e.\n              enum:\n                - top-left\n                - top-right\n                - bottom-left\n                - bottom-right\n              example: bottom-left\n              type: string\n            watermark_width:\n              description: The width, in pixels, of the watermark image. If blank, Wowza\n                Streaming Cloud uses the original image width.\n              example: 100\n              format: int32\n              type: integer\n          required:\n            - name\n            - transcoder_type\n            - billing_mode\n            - broadcast_location\n            - protocol\n            - delivery_method\n          title: transcoder\n          type: object\n      required:\n        - transcoder\n      type: object\n    transcoder_properties:\n      example:\n        properties:\n          - key: cupertinoProgramDateTimeOffset\n            section: cupertino\n            value: \"50\"\n          - key: rtpIgnoreProfileLevelId\n            section: rtsp\n            value: \"true\"\n      properties:\n        properties:\n          items:\n            $ref: \"#/components/schemas/transcoder_property\"\n          type: array\n      required:\n        - properties\n      type: object\n    transcoder_property:\n      example:\n        key: cupertinoProgramDateTimeOffset\n        section: cupertino\n        value: \"50\"\n      properties:\n        key:\n          description: The key of the property. For \u003cstrong\u003ertsp\u003c/strong\u003e, valid values are\n            \u003cstrong\u003edebugRtspSession\u003c/strong\u003e, \u003cstrong\u003emaxRtcpWaitTime\u003c/strong\u003e,\n            \u003cstrong\u003eavSyncMethod\u003c/strong\u003e,\n            \u003cstrong\u003ertspValidationFrequency\u003c/strong\u003e,\n            \u003cstrong\u003ertpTransportMode\u003c/strong\u003e,\n            \u003cstrong\u003ertspFilterUnknownTracks\u003c/strong\u003e,\n            \u003cstrong\u003ertpIgnoreSpropParameterSets\u003c/strong\u003e, and\n            \u003cstrong\u003ertpIgnoreProfileLevelId\u003c/strong\u003e. For\n            \u003cstrong\u003ecupertino\u003c/strong\u003e, valid values are\n            \u003cstrong\u003ecupertinoEnableProgramDateTime\u003c/strong\u003e,\n            \u003cstrong\u003ecupertinoEnableId3ProgramDateTime\u003c/strong\u003e, and\n            \u003cstrong\u003ecupertinoProgramDateTimeOffset\u003c/strong\u003e.\n          type: string\n        section:\n          description: The section of the transcoder configuration table that contains the\n            property. Valid values are \u003cstrong\u003ertsp\u003c/strong\u003e and\n            \u003cstrong\u003ecupertino\u003c/strong\u003e.\n          type: string\n        transcoder_id:\n          description: The unique alphanumeric string that identifies the transcoder.\n          type: string\n        value:\n          description: The value of the property. For \u003cstrong\u003edebugRtspSession\u003c/strong\u003e,\n            \u003cstrong\u003eavSyncMethod\u003c/strong\u003e,\n            \u003cstrong\u003ertspFilterUnknownTracks\u003c/strong\u003e,\n            \u003cstrong\u003ertpIgnoreSpropParameterSets\u003c/strong\u003e,\n            \u003cstrong\u003ertpIgnoreProfileLevelId\u003c/strong\u003e,\n            \u003cstrong\u003ecupertinoEnableProgramDateTime\u003c/strong\u003e, and\n            \u003cstrong\u003ecupertinoEnableId3ProgramDateTime\u003c/strong\u003e, valid values are\n            \u003cstrong\u003etrue\u003c/strong\u003e or \u003cstrong\u003efalse\u003c/strong\u003e.\n            \u003cstrong\u003emaxRtcpWaitTime\u003c/strong\u003e must be \u003cstrong\u003e0\u003c/strong\u003e (ms,\n            off) or greater. The default is \u003cstrong\u003e2000\u003c/strong\u003e. Valid values\n            for \u003cstrong\u003ertpTransportMode\u003c/strong\u003e are \u003cstrong\u003eudp\u003c/strong\u003e or\n            \u003cstrong\u003einterleave\u003c/strong\u003e (the default).\n            \u003cstrong\u003ertspValidationFrequency\u003c/strong\u003e must be \u003cstrong\u003e0\u003c/strong\u003e\n            (ms, off) or greater. The default is \u003cstrong\u003e15000\u003c/strong\u003e.\n            \u003cstrong\u003ecupertinoProgramDateTimeOffset\u003c/strong\u003e must be an integer,\n            positive or negative. The default is \u003cstrong\u003e0\u003c/strong\u003e (ms).\n          type: string\n      type: object\n    transcoder_property_create_input:\n      properties:\n        property:\n          properties:\n            key:\n              description: The key of the property. For \u003cstrong\u003ertsp\u003c/strong\u003e, valid values\n                are \u003cstrong\u003edebugRtspSession\u003c/strong\u003e,\n                \u003cstrong\u003emaxRtcpWaitTime\u003c/strong\u003e, \u003cstrong\u003eavSyncMethod\u003c/strong\u003e,\n                \u003cstrong\u003ertspValidationFrequency\u003c/strong\u003e,\n                \u003cstrong\u003ertpTransportMode\u003c/strong\u003e,\n                \u003cstrong\u003ertspFilterUnknownTracks\u003c/strong\u003e,\n                \u003cstrong\u003ertpIgnoreSpropParameterSets\u003c/strong\u003e, and\n                \u003cstrong\u003ertpIgnoreProfileLevelId\u003c/strong\u003e. For\n                \u003cstrong\u003ecupertino\u003c/strong\u003e, valid values are\n                \u003cstrong\u003ecupertinoEnableProgramDateTime\u003c/strong\u003e,\n                \u003cstrong\u003ecupertinoEnableId3ProgramDateTime\u003c/strong\u003e, and\n                \u003cstrong\u003ecupertinoProgramDateTimeOffset\u003c/strong\u003e.\n              example: rtpIgnoreProfileLevelId\n              type: string\n            section:\n              description: The section of the transcoder configuration table that contains\n                the property. Valid values are \u003cstrong\u003ertsp\u003c/strong\u003e and\n                \u003cstrong\u003ecupertino\u003c/strong\u003e.\n              example: rtsp\n              type: string\n            value:\n              description: The value of the property. For\n                \u003cstrong\u003edebugRtspSession\u003c/strong\u003e,\n                \u003cstrong\u003eavSyncMethod\u003c/strong\u003e,\n                \u003cstrong\u003ertspFilterUnknownTracks\u003c/strong\u003e,\n                \u003cstrong\u003ertpIgnoreSpropParameterSets\u003c/strong\u003e,\n                \u003cstrong\u003ertpIgnoreProfileLevelId\u003c/strong\u003e,\n                \u003cstrong\u003ecupertinoEnableProgramDateTime\u003c/strong\u003e, and\n                \u003cstrong\u003ecupertinoEnableId3ProgramDateTime\u003c/strong\u003e, valid values\n                are \u003cstrong\u003etrue\u003c/strong\u003e or \u003cstrong\u003efalse\u003c/strong\u003e.\n                \u003cstrong\u003emaxRtcpWaitTime\u003c/strong\u003e must be \u003cstrong\u003e0\u003c/strong\u003e (ms,\n                off) or greater. The default is \u003cstrong\u003e2000\u003c/strong\u003e. Valid\n                values for \u003cstrong\u003ertpTransportMode\u003c/strong\u003e are\n                \u003cstrong\u003eudp\u003c/strong\u003e or \u003cstrong\u003einterleave\u003c/strong\u003e (the\n                default). \u003cstrong\u003ertspValidationFrequency\u003c/strong\u003e must be\n                \u003cstrong\u003e0\u003c/strong\u003e (ms, off) or greater. The default is\n                \u003cstrong\u003e15000\u003c/strong\u003e.\n                \u003cstrong\u003ecupertinoProgramDateTimeOffset\u003c/strong\u003e must be an\n                integer, positive or negative. The default is \u003cstrong\u003e0\u003c/strong\u003e\n                (ms).\n              example: \"1\"\n              type: string\n          required:\n            - section\n            - key\n            - value\n          title: property\n          type: object\n      required:\n        - property\n      type: object\n    transcoder_update_input:\n      properties:\n        transcoder:\n          properties:\n            broadcast_location:\n              description: The location where Wowza Streaming Cloud transcodes your stream.\n                Choose a location as close as possible to your video source.\n              enum:\n                - asia_pacific_australia\n                - asia_pacific_japan\n                - asia_pacific_singapore\n                - asia_pacific_taiwan\n                - eu_belgium\n                - eu_germany\n                - eu_ireland\n                - south_america_brazil\n                - us_central_iowa\n                - us_east_s_carolina\n                - us_east_virginia\n                - us_west_california\n                - us_west_oregon\n              example: us_central_iowa\n              type: string\n            buffer_size:\n              description: The size, in milliseconds, of the incoming buffer.\n                \u003cstrong\u003e0\u003c/strong\u003e means no buffer. The default is\n                \u003cstrong\u003e4000\u003c/strong\u003e (4 seconds).\n              enum:\n                - 0\n                - 1000\n                - 2000\n                - 3000\n                - 4000\n                - 5000\n                - 6000\n                - 7000\n                - 8000\n              example: 4000\n              format: int32\n              type: integer\n            closed_caption_type:\n              description: The type of closed caption data being passed from the source.\n                The default, \u003cstrong\u003enone\u003c/strong\u003e, indicates that no data is\n                being provided. \u003cstrong\u003ecea\u003c/strong\u003e indicates that a CEA closed\n                captioning data stream is being provided.\n                \u003cstrong\u003eon_text\u003c/strong\u003e indicates that an onTextData closed\n                captioning data stream is being provided. \u003cstrong\u003eboth\u003c/strong\u003e\n                indicates that both CEA and onTextData closed captioing data\n                streams are being provided.\n              enum:\n                - none\n                - cea\n                - on_text\n                - both\n              example: cea\n              type: string\n            delivery_method:\n              description: The type of connection between the source encoder and the\n                transcoder. The default, \u003cstrong\u003epull\u003c/strong\u003e, instructs the\n                transcoder to pull the video from the source.\n                \u003cstrong\u003epush\u003c/strong\u003e instructs the source to push the stream to\n                the transcoder. \u003cstrong\u003ecdn\u003c/strong\u003e uses a stream source to\n                deliver the stream to the transcoder.\n              enum:\n                - pull\n                - cdn\n                - push\n              example: pull\n              type: string\n            delivery_protocols:\n              description: An array of playback protocols enabled for this transcoder. By\n                default, \u003cstrong\u003ertmp\u003c/strong\u003e, \u003cstrong\u003ertsp\u003c/strong\u003e, and\n                \u003cstrong\u003ewowz\u003c/strong\u003e are returned.\n              example:\n                - rtmp\n                - rtsp\n                - wowz\n              items:\n                type: string\n              type: array\n            description:\n              description: An optional description of the transcoder.\n              example: My Transcoder Description\n              type: string\n            disable_authentication:\n              description: Authentication is required by default for RTMP and RTSP push\n                connections from a video source to the transcoder. Specify\n                \u003cstrong\u003etrue\u003c/strong\u003e to disable authentication with the video\n                source.\n              example: false\n              type: boolean\n            idle_timeout:\n              description: The amount of idle time, in seconds, before the transcoder\n                automatically shuts down. Valid values are the integers\n                \u003cstrong\u003e0\u003c/strong\u003e (never shuts down) to \u003cstrong\u003e172800\u003c/strong\u003e\n                (48 hours). The default is \u003cstrong\u003e1200\u003c/strong\u003e (20 minutes).\n              example: 1200\n              format: int32\n              type: integer\n            low_latency:\n              description: If \u003cstrong\u003etrue\u003c/strong\u003e, turns off the sort packet buffer and\n                speeds the time it takes to decode and deliver video data to the\n                player. The default is \u003cstrong\u003efalse\u003c/strong\u003e.\n              example: false\n              type: boolean\n            name:\n              description: A descriptive name for the transcoder. Maximum 200 characters.\n              example: My PAYG Transcoder\n              type: string\n            password:\n              description: A password for authenticating an RTMP or RTSP push connection.\n                Can contain only uppercase and lowercase letters; numbers; and\n                the period (.), underscore (_), and hyphen (-) characters. No\n                other special characters can be used.\n              example: 82e0e971\n              type: string\n            play_maximum_connections:\n              description: The number of users who are allowed to connect directly to the\n                transcoder.\n              enum:\n                - 10\n                - 11\n                - 12\n                - 13\n                - 14\n                - 15\n                - 16\n                - 17\n                - 18\n                - 19\n                - 20\n                - 21\n                - 22\n                - 23\n                - 24\n                - 25\n                - 26\n                - 27\n                - 28\n                - 29\n                - 30\n                - 31\n                - 32\n                - 33\n                - 34\n                - 35\n                - 36\n                - 37\n                - 38\n                - 39\n                - 40\n                - 41\n                - 42\n                - 43\n                - 44\n                - 45\n                - 46\n                - 47\n                - 48\n                - 49\n                - 50\n                - 51\n                - 52\n                - 53\n                - 54\n                - 55\n                - 56\n                - 57\n                - 58\n                - 59\n                - 60\n                - 61\n                - 62\n                - 63\n                - 64\n                - 65\n                - 66\n                - 67\n                - 68\n                - 69\n                - 70\n                - 71\n                - 72\n                - 73\n                - 74\n                - 75\n                - 76\n                - 77\n                - 78\n                - 79\n                - 80\n                - 81\n                - 82\n                - 83\n                - 84\n                - 85\n                - 86\n                - 87\n                - 88\n                - 89\n                - 90\n                - 91\n                - 92\n                - 93\n                - 94\n                - 95\n                - 96\n                - 97\n                - 98\n                - 99\n                - 100\n              example: 20\n              format: int32\n              type: integer\n            protocol:\n              description: The transport protocol for the source video. The default is\n                \u003cstrong\u003ertmp\u003c/strong\u003e.\n              enum:\n                - rtmp\n                - rtsp\n              example: rtmp\n              type: string\n            recording:\n              description: If \u003cstrong\u003etrue\u003c/strong\u003e, creates a recording of the transcoded\n                output. The default is \u003cstrong\u003efalse\u003c/strong\u003e.\n              example: true\n              type: boolean\n            remove_watermark_image:\n              description: If \u003cstrong\u003etrue\u003c/strong\u003e, removes the watermark from the output.\n                The default is \u003cstrong\u003efalse\u003c/strong\u003e.\n              example: true\n              type: boolean\n            source_url:\n              description: For the \u003cem\u003edelivery_method\u003c/em\u003e \u003cstrong\u003epull\u003c/strong\u003e. Enter\n                the source's web address without the preceding protocol or the\n                trailing slash (/).\n              example: cp12345.live.edgefcs.net/live/redcarpet@123456\n              type: string\n            stream_extension:\n              description: For the \u003cem\u003edelivery_method\u003c/em\u003e \u003cstrong\u003epush\u003c/strong\u003e. Some\n                encoders append an extension to their stream names. If the\n                device you're using does this, enter the extension.\n              example: .sdp\n              type: string\n            stream_smoother:\n              description: A dynamic buffer that helps stabilize streams in rough network\n                conditions, but adds latency. Specify \u003cstrong\u003etrue\u003c/strong\u003e to\n                enable stream smoothing. The default is \u003cstrong\u003efalse\u003c/strong\u003e.\n              example: false\n              type: boolean\n            stream_source_id:\n              description: For the \u003cem\u003edelivery_method\u003c/em\u003e \u003cstrong\u003ecdn\u003c/strong\u003e. The\n                alphanumeric string that identifies the stream source that you\n                want to use to deliver the stream to the transcoder.\n              example: rxHQQpWw\n              type: string\n            suppress_stream_target_start:\n              description: If \u003cstrong\u003etrue\u003c/strong\u003e, disables stream targets when the\n                transcoder starts. If \u003cstrong\u003efalse\u003c/strong\u003e (the default), the\n                targets start when the transcoder starts.\n              example: false\n              type: boolean\n            username:\n              description: A username for authenticating an RTMP or RTSP push connection.\n                Can contain only uppercase and lowercase letters; numbers; and\n                the period (.), underscore (_), and hyphen (-) characters. No\n                other special characters can be used.\n              example: client2\n              type: string\n            video_fallback:\n              description: If \u003cstrong\u003etrue\u003c/strong\u003e, black video plays if the video source\n                disconnects from the transcoder. If \u003cstrong\u003efalse\u003c/strong\u003e (the\n                default), a stream-not-available message appears. Works only\n                with stream targets whose \u003cem\u003eprovider\u003c/em\u003e is\n                \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e.\n              example: false\n              type: boolean\n            watermark:\n              description: Embeds an image into the transcoded stream for copyright\n                protection. Specify \u003cstrong\u003etrue\u003c/strong\u003e to embed a watermark\n                image.\n              example: true\n              type: boolean\n            watermark_height:\n              description: The height, in pixels, of the watermark image. If blank, Wowza\n                Streaming Cloud uses the original image height.\n              example: 80\n              format: int32\n              type: integer\n            watermark_image:\n              description: A Base64-encoded string representation of a GIF, JPEG, or PNG\n                image that is embedded in all bitrate renditions of the stream.\n                Watermark image files must be 2.5 MB or smaller.\n              example: https://prod.s3.amazonaws.com/uploads/transcoder/watermark_image/12345/4baa13.jpg\n              type: string\n            watermark_opacity:\n              description: The opacity, or percentage of transparency, of the watermark.\n                \u003cstrong\u003e0\u003c/strong\u003e is fully transparent; \u003cstrong\u003e100\u003c/strong\u003e is\n                fully opaque.\n              enum:\n                - 0\n                - 1\n                - 2\n                - 3\n                - 4\n                - 5\n                - 6\n                - 7\n                - 8\n                - 9\n                - 10\n                - 11\n                - 12\n                - 13\n                - 14\n                - 15\n                - 16\n                - 17\n                - 18\n                - 19\n                - 20\n                - 21\n                - 22\n                - 23\n                - 24\n                - 25\n                - 26\n                - 27\n                - 28\n                - 29\n                - 30\n                - 31\n                - 32\n                - 33\n                - 34\n                - 35\n                - 36\n                - 37\n                - 38\n                - 39\n                - 40\n                - 41\n                - 42\n                - 43\n                - 44\n                - 45\n                - 46\n                - 47\n                - 48\n                - 49\n                - 50\n                - 51\n                - 52\n                - 53\n                - 54\n                - 55\n                - 56\n                - 57\n                - 58\n                - 59\n                - 60\n                - 61\n                - 62\n                - 63\n                - 64\n                - 65\n                - 66\n                - 67\n                - 68\n                - 69\n                - 70\n                - 71\n                - 72\n                - 73\n                - 74\n                - 75\n                - 76\n                - 77\n                - 78\n                - 79\n                - 80\n                - 81\n                - 82\n                - 83\n                - 84\n                - 85\n                - 86\n                - 87\n                - 88\n                - 89\n                - 90\n                - 91\n                - 92\n                - 93\n                - 94\n                - 95\n                - 96\n                - 97\n                - 98\n                - 99\n                - 100\n              example: 75\n              format: int32\n              type: integer\n            watermark_position:\n              description: The corner of the video frame in which you want the watermark to\n                appear. The default is \u003cstrong\u003etop-left\u003c/strong\u003e.\n              enum:\n                - top-left\n                - top-right\n                - bottom-left\n                - bottom-right\n              example: bottom-left\n              type: string\n            watermark_width:\n              description: The width, in pixels, of the watermark image. If blank, Wowza\n                Streaming Cloud uses the original image width.\n              example: 100\n              format: int32\n              type: integer\n          required:\n            - name\n            - protocol\n            - delivery_method\n          title: transcoder\n          type: object\n      required:\n        - transcoder\n      type: object\n    transcoders:\n      example:\n        transcoders:\n          - application_name: app-3757\n            billing_mode: pay_as_you_go\n            broadcast_location: us_central_iowa\n            buffer_size: 4000\n            closed_caption_type: cea\n            created_at: 2017-11-12T20:00:43.325Z\n            delivery_method: push\n            delivery_protocols:\n              - rtmp\n              - rtsp\n              - wowz\n            description: My Transcoder Description\n            direct_playback_urls:\n              - rtmp:\n                  - name: source\n                    url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789\n                  - name: 1920x1080\n                    output_id: dcxq5q6c\n                    url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream1\n                  - name: 1280x720\n                    output_id: 0g116zkf\n                    url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream2\n                  - name: 854x480\n                    output_id: 4qqkwndt\n                    url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream3\n                  - name: 640x360\n                    output_id: 0pv8djpg\n                    url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream4\n                  - name: 512x288\n                    output_id: b09xrxjf\n                    url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream5\n                  - name: 320x180\n                    output_id: bvkh2nsz\n                    url: rtmp://abc123.entrypoint.cloud.wowza.com/app-51eb/wxyz6789_stream6\n              - rtsp:\n                  - name: source\n                    url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789\n                  - name: 1920x1080\n                    output_id: dcxq5q6c\n                    url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream1\n                  - name: 1280x720\n                    output_id: 0g116zkf\n                    url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream2\n                  - name: 854x480\n                    output_id: 4qqkwndt\n                    url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream3\n                  - name: 640x360\n                    output_id: 0pv8djpg\n                    url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream4\n                  - name: 512x288\n                    output_id: b09xrxjf\n                    url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream5\n                  - name: 320x180\n                    output_id: bvkh2nsz\n                    url: rtsp://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream6\n              - wowz:\n                  - name: source\n                    url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789\n                  - name: 1920x1080\n                    output_id: dcxq5q6c\n                    url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream1\n                  - name: 1280x720\n                    output_id: 0g116zkf\n                    url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream2\n                  - name: 854x480\n                    output_id: 4qqkwndt\n                    url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream3\n                  - name: 640x360\n                    output_id: 0pv8djpg\n                    url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream4\n                  - name: 512x288\n                    output_id: b09xrxjf\n                    url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream5\n                  - name: 320x180\n                    output_id: bvkh2nsz\n                    url: wowz://abc123.entrypoint.cloud.wowza.com:1935/app-51eb/wxyz6789_stream6\n            disable_authentication: false\n            domain_name: f92334.entrypoint.cloud.wowza.com\n            id: 2lsWj3F9\n            idle_timeout: 1200\n            low_latency: false\n            name: My PAYG Transcoder\n            outputs:\n              - {}\n            password: 82e0e971\n            protocol: rtmp\n            recording: true\n            source_port: 1935\n            stream_extension: .sdp\n            stream_name: 10eb0ed8\n            stream_smoother: false\n            suppress_stream_target_start: false\n            transcoder_type: transcoded\n            updated_at: 2017-11-15T10:51:00.325Z\n            username: client2\n            video_fallback: false\n            watermark: true\n            watermark_height: 80\n            watermark_image_url: https://prod.s3.amazonaws.com/uploads/transcoder/watermark_image/12345/4baa13.jpg\n            watermark_opacity: 75\n            watermark_position: top-right\n            watermark_width: 100\n          - application_name: app-3757\n            billing_mode: twentyfour_seven\n            broadcast_location: asia_pacific_australia\n            buffer_size: 4000\n            closed_caption_type: none\n            created_at: 2017-11-12T20:00:43.325Z\n            delivery_method: pull\n            delivery_protocols:\n              - rtmp\n              - rtsp\n              - wowz\n            direct_playback_urls:\n              - {}\n            disable_authentication: true\n            domain_name: f34523.entrypoint.cloud.wowza.com\n            id: VJbkhjzl\n            idle_timeout: 1200\n            low_latency: false\n            name: My 24x7 Passthrough\n            outputs:\n              - {}\n            play_maximum_connections: 20\n            protocol: rtmp\n            recording: false\n            source_port: 1935\n            source_url: cp12345.live.edgefcs.net/live/redcarpet@123456\n            stream_extension: \"\"\n            stream_name: 10eb1ed8\n            stream_smoother: false\n            transcoder_type: passthrough\n            updated_at: 2017-11-14T18:42:51.325Z\n            video_fallback: false\n            watermark: false\n      properties:\n        transcoders:\n          items:\n            $ref: \"#/components/schemas/transcoder\"\n          type: array\n      required:\n        - transcoders\n      type: object\n    ull_stream_target_input:\n      properties:\n        stream_target:\n          properties:\n            enable_hls:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e. If\n                \u003cstrong\u003etrue\u003c/strong\u003e, creates an Apple HLS URL for playback on\n                iOS devices (\u003cem\u003ehls_playback_url\u003c/em\u003e). The default is\n                \u003cstrong\u003efalse\u003c/strong\u003e.\n              example: true\n              type: boolean\n            enabled:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e. If\n                \u003cstrong\u003etrue\u003c/strong\u003e (the default), the source stream is ready\n                to be ingested. If **false**, the source stream won't be\n                ingested by the target's origin server.\n              example: true\n              type: boolean\n            ingest_ip_whitelist:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e and\n                \u003cem\u003esource_delivery_method\u003c/em\u003e is **push**. A list of IP\n                addresses that can be used to connect to the target's origin\n                server.\n              example:\n                - 10.11.12.*\n                - 13.12.11.10\n              items:\n                type: string\n              type: array\n            name:\n              description: A descriptive name for the stream target. Maximum 255 characters.\n              example: My Ultra Low Latency Stream Target\n              type: string\n            provider:\n              description: The CDN for the target. \u003cbr /\u003e\u003cbr /\u003eRequired for targets whose\n                \u003cem\u003etype\u003c/em\u003e is \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e. Valid\n                values for \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e are\n                \u003cstrong\u003eakamai\u003c/strong\u003e, \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e,\n                \u003cstrong\u003eakamai_rtmp\u003c/strong\u003e, \u003cstrong\u003elimelight\u003c/strong\u003e,\n                \u003cstrong\u003ertmp\u003c/strong\u003e, and \u003cstrong\u003eustream\u003c/strong\u003e. Values can\n                be appended with **_mock** to use in the sandbox environment.\n                \u003cbr /\u003e\u003cbr /\u003eValid values for \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e\n                are \u003cstrong\u003eakamai\u003c/strong\u003e, \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e\n                (default), \u003cstrong\u003eakamai_legacy_rtmp\u003c/strong\u003e, and\n                \u003cstrong\u003ewowza\u003c/strong\u003e. \u003cbr /\u003e\u003cbr\n                /\u003e\u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e defaults to and\n                must be \u003cstrong\u003ewowza\u003c/strong\u003e.\n              example: wowza\n              type: string\n            region_override:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e and\n                \u003cem\u003esource_delivery_method\u003c/em\u003e is **pull**. The location of the\n                stream target's origin server. If unspecified, Wowza Streaming\n                Cloud determines the optimal region for the origin server.\n              example: azure-westus\n              type: string\n            source_delivery_method:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e. The type of\n                connection between the stream source and the stream target.\n                **push** instructs the source to push the stream to the stream\n                target. **pull** instructs the stream target to pull the stream\n                from the source.\n              example: pull\n              type: string\n            source_url:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e and\n                \u003cem\u003esource_delivery_method\u003c/em\u003e is **pull**. The URL of a source\n                IP camera or encoder connecting to the stream target.\n              example: rtsp://example.com/video\n              type: string\n            type:\n              description: \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e is a Wowza CDN target.\n                \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e is an ultra low\n                latency Wowza stream target. \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e\n                (the default) is an external, third-party destination. \u003c!--and\n                \u003cstrong\u003eFacebookStreamTarget\u003c/strong\u003e (a Facebook Live\n                target).--\u003e\n              example: UltraLowLatencyStreamTarget\n              type: string\n          required:\n            - name\n            - source_delivery_method\n            - source_url\n          title: custom_stream_target\n          type: object\n      required:\n        - stream_target\n      type: object\n    unique_views_metric:\n      properties:\n        status:\n          description: The status of the current key. Possible values are\n            \u003cstrong\u003enormal\u003c/strong\u003e (everything is fine),\n            \u003cstrong\u003ewarning\u003c/strong\u003e (something may be misconfigured), and\n            \u003cstrong\u003eno_data\u003c/strong\u003e (no data was returned, perhaps because the\n            instance isn't running).\n          example: normal\n          type: string\n        text:\n          description: A message related to the value and status of the current key.\n            Usually blank unless there's a warning status.\n          example: \"\"\n          type: string\n        units:\n          description: The unit of the returned value, such as \u003cstrong\u003eKbps\u003c/strong\u003e,\n            \u003cstrong\u003ebps\u003c/strong\u003e, \u003cstrong\u003e%\u003c/strong\u003e, \u003cstrong\u003eFPS\u003c/strong\u003e, or\n            \u003cstrong\u003eGOP\u003c/strong\u003e.\n          example: \"%\"\n          type: string\n        value:\n          description: The value of the associated key.\n          example: 1030\n          type: integer\n      type: object\n    uptime:\n      example:\n        billed: false\n        created_at: 2017-07-06T14:22:00Z\n        id: 5678wxyz\n        running: true\n        started_at: 2017-07-06T14:22:00Z\n        transcoder_id: 1234abcd\n        updated_at: 2017-07-06T14:22:00Z\n      properties:\n        billed:\n          description: A Boolean value that indicates if the usage generated by this uptime\n            has been sent for billing processing.\n          type: boolean\n        created_at:\n          description: The date and time that the uptime record was created.\n          format: date-time\n          type: string\n        ended_at:\n          description: The date and time that the transcoder was stopped for this uptime.\n            If this value is not present, it indicates that the transcoder is\n            currently running.\n          format: date-time\n          type: string\n        id:\n          description: The unique alphanumeric string that identifies the uptime record.\n          type: string\n        running:\n          description: A Boolean value that indicates if the transcoder is still running\n            for this uptime.\n          type: boolean\n        started_at:\n          description: The date and time that the transcoder started for this uptime.\n          format: date-time\n          type: string\n        transcoder_id:\n          description: The unique alphanumeric string that identifies the transcoder.\n          type: string\n        updated_at:\n          description: The date and time that the uptime record was updated.\n          type: string\n      type: object\n    uptimes:\n      example:\n        uptimes:\n          - billed: false\n            created_at: 2017-07-06T14:22:00Z\n            id: 5678wxyz\n            running: true\n            started_at: 2017-07-06T14:22:00Z\n            transcoder_id: 1234abcd\n            updated_at: 2017-07-06T14:22:00Z\n          - billed: true\n            created_at: 2017-07-08T14:22:00Z\n            ended_at: 2017-07-08T16:40:00Z\n            id: 5679wxyz\n            running: false\n            started_at: 2017-07-08T14:22:00Z\n            transcoder_id: 1234abcd\n            updated_at: 2017-07-08T16:40:00Z\n      properties:\n        uptimes:\n          items:\n            $ref: \"#/components/schemas/uptime\"\n          type: array\n      required:\n        - uptimes\n      type: object\n    url:\n      example:\n        bitrate: 4138\n        height: 1080\n        id: w9vJm3BJ\n        label: \"1920\"\n        player_id: Jm1tPblTJm1t\n        url: http://someurl.com/some/path/to/a/stream.f4m\n        width: 1920\n      properties:\n        bitrate:\n          description: The video bitrate, in kilobits per second (Kbps), of the output\n            rendition that will be played at the URL. May correspond to the\n            bitrate of an output rendition being used by the live stream or\n            transcoder. Must be greater than \u003cstrong\u003e0\u003c/strong\u003e.\n          format: int32\n          type: integer\n        created_at:\n          description: The date and time that the player URL was created.\n          format: date-time\n          type: string\n        height:\n          description: The height, in pixels, of the output rendition that will be played\n            at the URL. May correspond to the height of an output rendition\n            being used by the live stream or transcoder. Must be greater than\n            \u003cstrong\u003e0\u003c/strong\u003e.\n          format: int32\n          type: integer\n        id:\n          description: The unique alphanumeric string that identifies the player URL.\n          type: string\n        label:\n          description: A descriptive name for the player URL. Maximum 255 characters.\n          type: string\n        player_id:\n          description: The unique alphanumeric string that identifies the player.\n          type: string\n        updated_at:\n          description: The date and time that the player URL was updated.\n          format: date-time\n          type: string\n        url:\n          description: The URL of the player. If using a Wowza CDN target, the URL format\n            is\n            `http://[wowzasubdomain]-f.akamaihd.net/z/[stream_name]_[angle]@[stream_id]/manifest.f4m`\n            for Adobe HDS playback or\n            `http://[wowzasubdomain]-f.akamaihd.net/i/[stream_name]_[angle]@[stream_id]/master.m3u8`\n            for Apple HLS playback.\n          type: string\n        width:\n          description: The width, in pixels, of the output rendition that will be played at\n            the URL. May correspond to the width of an output rendition being\n            used by the live stream or transcoder. Must be greater than\n            \u003cstrong\u003e0\u003c/strong\u003e.\n          format: int32\n          type: integer\n      type: object\n    url_create_input:\n      allOf:\n        - $ref: \"#/components/schemas/url_input\"\n    url_input:\n      properties:\n        url:\n          properties:\n            bitrate:\n              description: The video bitrate, in kilobits per second (Kbps), of the output\n                rendition that will be played at the URL. May correspond to the\n                bitrate of an output rendition being used by the live stream or\n                transcoder. Must be greater than \u003cstrong\u003e0\u003c/strong\u003e.\n              example: 4128\n              format: int32\n              type: integer\n            height:\n              description: The height, in pixels, of the output rendition that will be\n                played at the URL. May correspond to the height of an output\n                rendition being used by the live stream or transcoder. Must be\n                greater than \u003cstrong\u003e0\u003c/strong\u003e.\n              example: 1080\n              format: int32\n              type: integer\n            label:\n              description: A descriptive name for the player URL. Maximum 255 characters.\n              example: \"1920\"\n              type: string\n            url:\n              description: The URL of the player. If using a Wowza CDN target, the URL\n                format is\n                `http://[wowzasubdomain]-f.akamaihd.net/z/[stream_name]_[angle]@[stream_id]/manifest.f4m`\n                for Adobe HDS playback or\n                `http://[wowzasubdomain]-f.akamaihd.net/i/[stream_name]_[angle]@[stream_id]/master.m3u8`\n                for Apple HLS playback.\n              example: http://somedomain.com/path/to/stream.m3u8\n              type: string\n            width:\n              description: The width, in pixels, of the output rendition that will be\n                played at the URL. May correspond to the width of an output\n                rendition being used by the live stream or transcoder. Must be\n                greater than \u003cstrong\u003e0\u003c/strong\u003e.\n              example: 1920\n              format: int32\n              type: integer\n          title: url\n          type: object\n      required:\n        - url\n      type: object\n    url_update_input:\n      allOf:\n        - $ref: \"#/components/schemas/url_input\"\n    urls:\n      example:\n        urls:\n          - bitrate: 4138\n            height: 1080\n            id: w9vJm3BJ\n            label: \"1920\"\n            player_id: Jm1tPblTJm1t\n            url: http://someurl.com/some/path/to/a/stream.f4m\n            width: 1920\n          - bitrate: 4138\n            height: 1080\n            id: PPqV0kcm\n            label: iPhone\n            player_id: Jm1tPblTJm1t\n            transcoder_id: yjCVYf5l\n            url: http://someurl.com/some/path/to/a/stream.m3u8\n            width: 1920\n      properties:\n        urls:\n          items:\n            $ref: \"#/components/schemas/url\"\n          type: array\n      required:\n        - urls\n      type: object\n    usage_network_stream_source:\n      properties:\n        bytes_billed:\n          description: The amount of usage, in bytes, that was billed for the stream source\n            during the selected time frame.\n          format: int32\n          type: integer\n        bytes_used:\n          description: The amount of content, in bytes, that went through the stream source\n            during the selected time frame.\n          format: int32\n          type: integer\n        deleted:\n          description: A value of \u003cstrong\u003etrue\u003c/strong\u003e indicates that the stream source\n            has been removed from Wowza Streaming Cloud.\n          type: boolean\n        id:\n          description: The unique alphanumeric string that identifies the stream source.\n          format: int32\n          type: string\n        name:\n          description: A descriptive name for the stream source.\n          type: string\n      type: object\n    usage_network_stream_sources:\n      example:\n        stream_sources:\n          - bytes_billed: 4567890\n            bytes_used: 4567890\n            deleted: true\n            id: Y8jZdBQd\n            name: My Stream Source\n          - bytes_billed: 876543\n            bytes_used: 987654\n            deleted: false\n            id: jJkFChfv\n            name: My Other Stream Source\n      properties:\n        stream_sources:\n          items:\n            $ref: \"#/components/schemas/usage_network_stream_source\"\n          type: array\n      type: object\n    usage_network_stream_target:\n      properties:\n        stream_targets:\n          description: An array of stream targets and their usage by protocol and zone.\n          properties:\n            bytes_billed:\n              description: The amount of usage, in bytes, that was billed for the stream\n                target during the selected time frame.\n              format: int32\n              type: integer\n            bytes_used:\n              description: The amount of content, in bytes, that went through the stream\n                target during the selected time frame.\n              format: int32\n              type: integer\n            deleted:\n              description: A value of \u003cstrong\u003etrue\u003c/strong\u003e indicates that the stream\n                target has been removed from Wowza Streaming Cloud.\n              type: boolean\n            id:\n              description: The unique alphanumeric string that identifies the stream target.\n              format: int32\n              type: string\n            name:\n              description: A descriptive name for the stream target.\n              type: string\n            protocols:\n              description: A hash of protocols that accrued network usage, keyed by the\n                name of the protocol that generated the usage.\n              properties:\n                zones:\n                  description: A hash of zones with network usage, keyed by the name of the\n                    billing zone where the usage was generated.\n                  properties:\n                    bytes_billed:\n                      description: The amount of usage, in bytes, that was billed for the\n                        stream target during the selected time frame.\n                      format: int32\n                      type: integer\n                    bytes_used:\n                      description: The amount of content, in bytes, that went through the\n                        stream target during the selected time frame.\n                      format: int32\n                      type: integer\n                  title: Hash of zones\n                  type: object\n              title: Hash of protocols\n              type: object\n          title: Array of stream targets\n          type: object\n        total:\n          description: A hash of total usage, including overall total billed and used for\n            all targets, and totals by zone for each protocol.\n          properties:\n            bytes_billed:\n              description: The amount of usage, in bytes, that was billed for all stream\n                targets during the selected time frame.\n              format: int32\n              type: integer\n            bytes_used:\n              description: The amount of content, in bytes, that went through all stream\n                targets during the selected time frame.\n              format: int32\n              type: integer\n            protocols:\n              description: A hash of protocols that accrued network usage, keyed by the\n                name of the protocol that generated the usage.\n              properties:\n                zones:\n                  description: A hash of zones with network usage, keyed by the name of the\n                    billing zone where the usage was generated.\n                  properties:\n                    bytes_billed:\n                      description: The amount of usage, in bytes, that was billed for the\n                        stream target during the selected time frame.\n                      format: int32\n                      type: integer\n                    bytes_used:\n                      description: The amount of content, in bytes, that went through the\n                        stream target during the selected time frame.\n                      format: int32\n                      type: integer\n                  title: Hash of zones\n                  type: object\n              title: Hash of protocols\n              type: object\n          title: Hash of totals\n          type: object\n      type: object\n    usage_network_stream_targets:\n      example:\n        stream_targets:\n          - bytes_billed: 4567890\n            bytes_used: 4567890\n            deleted: true\n            id: p3NBkd4L\n            name: My Stream Target\n            protocols:\n              hls:\n                zones:\n                  global:\n                    bytes_billed: 1072506176\n                    bytes_used: 1093617287\n          - bytes_billed: 876543\n            bytes_used: 987654\n            deleted: false\n            id: MZLfHjLH\n            name: My Wowza Ultra Low Latency Stream Target\n            protocols:\n              hls:\n                zones:\n                  global:\n                    bytes_billed: 72506176\n                    bytes_used: 93617287\n              ull:\n                zones:\n                  azure-northeurope:\n                    bytes_billed: -1\n                    bytes_used: 17673242\n                  azure-westus:\n                    bytes_billed: -1\n                    bytes_used: 1093617287\n          - bytes_billed: 876543\n            bytes_used: 987654\n            deleted: false\n            id: MZLfHjLH\n            name: My Other Stream Target\n            protocols:\n              hls:\n                zones:\n                  global:\n                    bytes_billed: 72506176\n                    bytes_used: 93617287\n        total:\n          bytes_billed: 4567890\n          bytes_used: 4567890\n          protocols:\n            hls:\n              zones:\n                global:\n                  bytes_billed: 72506176\n                  bytes_used: 93617287\n            hls_hds:\n              zones:\n                global:\n                  bytes_billed: 72506176\n                  bytes_used: 93617287\n            ull:\n              zones:\n                azure-northeurope:\n                  bytes_billed: -1\n                  bytes_used: 17673242\n                azure-westus:\n                  bytes_billed: -1\n                  bytes_used: 1093617287\n      properties:\n        stream_targets:\n          description: An array of stream targets and their usage by protocol and zone.\n          properties:\n            bytes_billed:\n              description: The amount of usage, in bytes, that was billed for the stream\n                target during the selected time frame.\n              format: int32\n              type: integer\n            bytes_used:\n              description: The amount of content, in bytes, that went through the stream\n                target during the selected time frame.\n              format: int32\n              type: integer\n            deleted:\n              description: A value of \u003cstrong\u003etrue\u003c/strong\u003e indicates that the stream\n                target has been removed from Wowza Streaming Cloud.\n              type: boolean\n            id:\n              description: The unique alphanumeric string that identifies the stream target.\n              format: int32\n              type: string\n            name:\n              description: A descriptive name for the stream target.\n              type: string\n            protocols:\n              description: A hash of protocols that accrued network usage, keyed by the\n                name of the protocol that generated the usage.\n              properties:\n                zones:\n                  description: A hash of zones with network usage, keyed by the name of the\n                    billing zone where the usage was generated.\n                  properties:\n                    bytes_billed:\n                      description: The amount of usage, in bytes, that was billed for the\n                        stream target during the selected time frame.\n                      format: int32\n                      type: integer\n                    bytes_used:\n                      description: The amount of content, in bytes, that went through the\n                        stream target during the selected time frame.\n                      format: int32\n                      type: integer\n                  title: Hash of zones\n                  type: object\n              title: Hash of protocols\n              type: object\n          title: Array of stream targets\n          type: object\n        total:\n          description: A hash of total usage, including overall total billed and used for\n            all targets, and totals by zone for each protocol.\n          properties:\n            bytes_billed:\n              description: The amount of usage, in bytes, that was billed for all stream\n                targets during the selected time frame.\n              format: int32\n              type: integer\n            bytes_used:\n              description: The amount of content, in bytes, that went through all stream\n                targets during the selected time frame.\n              format: int32\n              type: integer\n            protocols:\n              description: A hash of protocols that accrued network usage, keyed by the\n                name of the protocol that generated the usage.\n              properties:\n                zones:\n                  description: A hash of zones with network usage, keyed by the name of the\n                    billing zone where the usage was generated.\n                  properties:\n                    bytes_billed:\n                      description: The amount of usage, in bytes, that was billed for the\n                        stream target during the selected time frame.\n                      format: int32\n                      type: integer\n                    bytes_used:\n                      description: The amount of content, in bytes, that went through the\n                        stream target during the selected time frame.\n                      format: int32\n                      type: integer\n                  title: Hash of zones\n                  type: object\n              title: Hash of protocols\n              type: object\n          title: Hash of totals\n          type: object\n      type: object\n    usage_network_transcoder:\n      properties:\n        bytes_billed:\n          description: The amount of usage, in bytes, that was billed for the live stream\n            or transcoder during the selected time frame.\n          format: int32\n          type: integer\n        bytes_used:\n          description: The amount of content, in bytes, that went through the live stream\n            or transcoder during the selected time frame.\n          format: int32\n          type: integer\n        deleted:\n          description: A value of \u003cstrong\u003etrue\u003c/strong\u003e indicates that the live stream or\n            transcoder has been removed from Wowza Streaming Cloud.\n          type: boolean\n        id:\n          description: The unique alphanumeric string that identifies the live stream or\n            transcoder.\n          format: int32\n          type: integer\n        name:\n          description: A descriptive name for the live stream or transcoder.\n          type: string\n      type: object\n    usage_network_transcoders:\n      example:\n        transcoders:\n          - bytes_billed: 4567890\n            bytes_used: 4567890\n            deleted: true\n            id: 4FLNJvn6\n            name: My Transcoder\n          - bytes_billed: 876543\n            bytes_used: 987654\n            deleted: false\n            id: pJ8hHY70\n            name: My Other Transcoder\n      properties:\n        transcoders:\n          items:\n            $ref: \"#/components/schemas/usage_network_transcoder\"\n          type: array\n      type: object\n    usage_storage_peak_recording:\n      example:\n        peak_recording:\n          bytes_total: 32429386811\n      properties:\n        peak_recording:\n          properties:\n            bytes_total:\n              description: The amount, in bytes, used to store recordings during the\n                selected time frame. If the time frame is in the past,\n                \u003cem\u003ebytes_total\u003c/em\u003e is the amount of storage that was used and\n                billed. If the time frame includes the current billing period,\n                \u003cem\u003ebytes_total\u003c/em\u003e is the greatest amount of content stored in\n                Wowza Streaming Cloud at any point to date in the billing\n                period.\n              format: int32\n              type: integer\n          title: peak_recording\n          type: object\n      type: object\n    usage_time_transcoder:\n      properties:\n        deleted:\n          description: A value of \u003cstrong\u003etrue\u003c/strong\u003e indicates that the live stream or\n            transcoder has been removed from Wowza Streaming Cloud.\n          type: boolean\n        id:\n          description: The unique alphanumeric string that identifies the live stream or\n            transcoder.\n          format: int32\n          type: integer\n        name:\n          description: A descriptive name for the live stream or transcoder.\n          type: string\n        seconds_billed:\n          description: The amount of stream processing time, in seconds, that was billed\n            for the live stream or transcoder.\n          format: int32\n          type: integer\n        seconds_used:\n          description: The amount of time, in seconds, that it took for the live stream or\n            transcoder to be processed.\n          format: int32\n          type: integer\n      type: object\n    usage_time_transcoders:\n      example:\n        transcoders:\n          - deleted: true\n            id: zBR2LfvH\n            name: My Transcoder\n            seconds_billed: 12345\n            seconds_used: 12345\n          - deleted: false\n            id: 7JlNqKfB\n            name: My Other Transcoder\n            seconds_billed: 4321\n            seconds_used: 4321\n      properties:\n        transcoders:\n          items:\n            $ref: \"#/components/schemas/usage_time_transcoder\"\n          type: array\n      type: object\n    usage_viewer_data_countries:\n      items:\n        properties:\n          country_code:\n            properties:\n              name:\n                description: The name of the country.\n                type: string\n              percentage_viewers:\n                description: Total percentage of viewers (\u003cstrong\u003e100\u003c/strong\u003e).\n                format: int32\n                type: integer\n              percentage_viewing_time:\n                description: The percentage of total viewing time that the protocol or\n                  rendition was viewed. Always \u003cstrong\u003e100\u003c/strong\u003e for\n                  \u003cem\u003estream_target\u003c/em\u003e.\n                format: int32\n                type: integer\n              protocols:\n                $ref: \"#/components/schemas/usage_viewer_data_protocols\"\n              seconds_avg_viewing_time:\n                description: The average length of time, in seconds, that viewers played\n                  the stream at the target.\n                format: int32\n                type: integer\n              seconds_total_viewing_time:\n                description: The total length of time, in seconds, that all viewers played\n                  the stream at the target. \u003cem\u003eseconds_total_viewing_time\u003c/em\u003e\n                  may be longer than the duration of the stream.\n                format: int32\n                type: integer\n              total_unique_viewers:\n                description: The total number of unique viewers that downloaded at least\n                  one chunk of the stream at the target (for HTTP streams) or\n                  connected to and viewed the stream (for ultra low latency\n                  streams). A unique viewer is a single IP address; multiple\n                  users that share the same IP address are counted once.\n                format: int32\n                type: integer\n            title: The country code of the country\n            type: object\n        title: country object\n        type: object\n      type: array\n    usage_viewer_data_protocols:\n      items:\n        properties:\n          protocol_name:\n            properties:\n              name:\n                description: The name of the protocol.\n                type: string\n              percentage_viewers:\n                description: Total percentage of viewers (\u003cstrong\u003e100\u003c/strong\u003e).\n                format: int32\n                type: integer\n              percentage_viewing_time:\n                description: The percentage of total viewing time that the protocol or\n                  rendition was viewed. Always \u003cstrong\u003e100\u003c/strong\u003e for\n                  \u003cem\u003estream_target\u003c/em\u003e.\n                format: int32\n                type: integer\n              seconds_avg_viewing_time:\n                description: The average length of time, in seconds, that viewers played\n                  the stream at the target.\n                format: int32\n                type: integer\n              seconds_total_viewing_time:\n                description: The total length of time, in seconds, that all viewers played\n                  the stream at the target. \u003cem\u003eseconds_total_viewing_time\u003c/em\u003e\n                  may be longer than the duration of the stream.\n                format: int32\n                type: integer\n              total_unique_viewers:\n                description: The total number of unique viewers that downloaded at least\n                  one chunk of the stream at the target (for HTTP streams) or\n                  connected to and viewed the stream (for ultra low latency\n                  streams). A unique viewer is a single IP address; multiple\n                  users that share the same IP address are counted once.\n                format: int32\n                type: integer\n            title: The name of the protocol\n            type: object\n        title: protocol object\n        type: object\n      type: array\n    usage_viewer_data_renditions:\n      items:\n        properties:\n          rendition_name:\n            properties:\n              countries:\n                $ref: \"#/components/schemas/usage_viewer_data_countries\"\n              name:\n                description: The name of the rendition.\n                type: string\n              percentage_viewers:\n                description: Total percentage of viewers (\u003cstrong\u003e100\u003c/strong\u003e).\n                format: int32\n                type: integer\n              percentage_viewing_time:\n                description: The percentage of total viewing time that the protocol or\n                  rendition was viewed. Always \u003cstrong\u003e100\u003c/strong\u003e for\n                  \u003cem\u003estream_target\u003c/em\u003e.\n                format: int32\n                type: integer\n              protocols:\n                $ref: \"#/components/schemas/usage_viewer_data_protocols\"\n              seconds_avg_viewing_time:\n                description: The average length of time, in seconds, that viewers played\n                  the stream at the target.\n                format: int32\n                type: integer\n              seconds_total_viewing_time:\n                description: The total length of time, in seconds, that all viewers played\n                  the stream at the target. \u003cem\u003eseconds_total_viewing_time\u003c/em\u003e\n                  may be longer than the duration of the stream.\n                format: int32\n                type: integer\n              total_unique_viewers:\n                description: The total number of unique viewers that downloaded at least\n                  one chunk of the stream at the target (for HTTP streams) or\n                  connected to and viewed the stream (for ultra low latency\n                  streams). A unique viewer is a single IP address; multiple\n                  users that share the same IP address are counted once.\n                format: int32\n                type: integer\n            title: The name of the rendition\n            type: object\n        title: rendition object\n        type: object\n      type: array\n    usage_viewer_data_stream_target:\n      example:\n        stream_target:\n          countries:\n            - US:\n                ...: ...\n                name: United States of America\n                protocols:\n                  - hds:\n                      ...: ...\n                      name: Adobe HDS\n                  - hls:\n                      ...: ...\n                      name: Apple HLS\n                  - rtmp:\n                      ...: ...\n                      name: RTMP\n            - CA:\n                ...: ...\n                name: Canada\n          country_list:\n            - AU\n            - CA\n            - CH\n            - CZ\n            - DE\n            - FI\n            - GB\n            - IE\n            - IL\n            - IN\n            - MX\n            - PL\n            - SE\n            - US\n          percentage_viewers: 100\n          percentage_viewing_time: 100\n          protocols:\n            - hds:\n                name: Adobe HDS\n                percentage_viewers: 39\n                percentage_viewing_time: 55\n                seconds_avg_viewing_time: 3689.7337516808607\n                seconds_total_viewing_time: 24695388\n                total_unique_viewers: 6693\n            - hls:\n                name: Apple HLS\n                percentage_viewers: 67\n                percentage_viewing_time: 45\n                seconds_avg_viewing_time: 1775.0381679389313\n                seconds_total_viewing_time: 20230110\n                total_unique_viewers: 11397\n            - rtmp:\n                name: RTMP\n                percentage_viewers: 0\n                percentage_viewing_time: 0\n                seconds_avg_viewing_time: 0\n                seconds_total_viewing_time: 0\n                total_unique_viewers: 0\n          rendition_list:\n            - 4128\n            - 2728\n            - 1728\n            - 1152\n            - 640\n            - 448\n          renditions:\n            - \"448\":\n                countries:\n                  - US:\n                      ...: ...\n                      name: United States of America\n                percentage_viewers: 100\n                percentage_viewing_time: 100\n                protocols:\n                  - hds:\n                      ...: ...\n                      name: Adobe HDS\n                  - hls:\n                      ...: ...\n                      name: Apple HLS\n                  - rtmp:\n                      ...: ...\n                      name: RTMP\n                seconds_avg_viewing_time: 387.3736449048422\n                seconds_total_viewing_time: 4823964\n                total_unique_viewers: 12453\n            - \"640\":\n                ...: ...\n          seconds_avg_viewing_time: 2633.690819556806\n          seconds_total_viewing_time: 44925498\n          total_unique_viewers: 17058\n      properties:\n        stream_target:\n          properties:\n            countries:\n              $ref: \"#/components/schemas/usage_viewer_data_countries\"\n            country_list:\n              description: A comma-separated list of all viewed country codes shown as\n                strings, for quick reference.\n              items:\n                type: string\n              type: array\n            percentage_viewers:\n              description: Total percentage of viewers (\u003cstrong\u003e100\u003c/strong\u003e).\n              format: int32\n              type: integer\n            percentage_viewing_time:\n              description: The percentage of total viewing time that the protocol or\n                rendition was viewed. Always \u003cstrong\u003e100\u003c/strong\u003e for\n                \u003cem\u003estream_target\u003c/em\u003e.\n              format: int32\n              type: integer\n            protocols:\n              $ref: \"#/components/schemas/usage_viewer_data_protocols\"\n            rendition_list:\n              description: A comma-separated list of all viewed renditions shown as\n                numbers, for quick reference.\n              items:\n                type: string\n              type: array\n            renditions:\n              $ref: \"#/components/schemas/usage_viewer_data_renditions\"\n            seconds_avg_viewing_time:\n              description: The average length of time, in seconds, that viewers played the\n                stream at the target.\n              format: int32\n              type: integer\n            seconds_total_viewing_time:\n              description: The total length of time, in seconds, that all viewers played\n                the stream at the target. \u003cem\u003eseconds_total_viewing_time\u003c/em\u003e\n                may be longer than the duration of the stream.\n              format: int32\n              type: integer\n            total_unique_viewers:\n              description: The total number of unique viewers that downloaded at least one\n                chunk of the stream at the target (for HTTP streams) or\n                connected to and viewed the stream (for ultra low latency\n                streams). A unique viewer is a single IP address; multiple users\n                that share the same IP address are counted once.\n              format: int32\n              type: integer\n          title: stream_target\n          type: object\n      type: object\n    video_codec_metric:\n      properties:\n        status:\n          description: The status of the current key. Possible values are\n            \u003cstrong\u003enormal\u003c/strong\u003e (everything is fine),\n            \u003cstrong\u003ewarning\u003c/strong\u003e (something may be misconfigured), and\n            \u003cstrong\u003eno_data\u003c/strong\u003e (no data was returned, perhaps because the\n            instance isn't running).\n          example: normal\n          type: string\n        text:\n          description: A message related to the value and status of the current key.\n            Usually blank unless there's a warning status.\n          example: \"\"\n          type: string\n        units:\n          description: The unit of the returned value, such as \u003cstrong\u003eKbps\u003c/strong\u003e,\n            \u003cstrong\u003ebps\u003c/strong\u003e, \u003cstrong\u003e%\u003c/strong\u003e, \u003cstrong\u003eFPS\u003c/strong\u003e, or\n            \u003cstrong\u003eGOP\u003c/strong\u003e.\n          example: \"\"\n          type: string\n        value:\n          description: The value of the associated key.\n          example: avc1\n          type: string\n      type: object\n    width_metric:\n      properties:\n        status:\n          description: The status of the current key. Possible values are\n            \u003cstrong\u003enormal\u003c/strong\u003e (everything is fine),\n            \u003cstrong\u003ewarning\u003c/strong\u003e (something may be misconfigured), and\n            \u003cstrong\u003eno_data\u003c/strong\u003e (no data was returned, perhaps because the\n            instance isn't running).\n          example: warning\n          type: string\n        text:\n          description: A message related to the value and status of the current key.\n            Usually blank unless there's a warning status.\n          example: \"Configured width is different from what Wowza Streaming Cloud is\n            receiving from the source: 1280.\"\n          type: string\n        units:\n          description: The unit of the returned value, such as \u003cstrong\u003eKbps\u003c/strong\u003e,\n            \u003cstrong\u003ebps\u003c/strong\u003e, \u003cstrong\u003e%\u003c/strong\u003e, \u003cstrong\u003eFPS\u003c/strong\u003e, or\n            \u003cstrong\u003eGOP\u003c/strong\u003e.\n          example: px\n          type: string\n        value:\n          description: The value of the associated key.\n          example: 1280\n          type: integer\n      type: object\n    wowza_stream_target_input:\n      properties:\n        stream_target:\n          properties:\n            chunk_size:\n              description: \u003cstrong\u003eThe \u003cem\u003echunk_size\u003c/em\u003e parameter is deprecated. To set\n                the chunk size of a stream target, use the POST\n                /stream_targets/[stream_target_id]/properties endpoint.\u003c/strong\u003e\n                Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e and \u003cem\u003eprovider\u003c/em\u003e is\n                \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e. The segment duration for HLS\n                encoding. The default is \u003cstrong\u003e10\u003c/strong\u003e.\n              enum:\n                - 2\n                - 4\n                - 6\n                - 8\n                - 10\n              example: 10\n              type: string\n            location:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e and \u003cem\u003eprovider\u003c/em\u003e is\n                \u003cem\u003enot\u003c/em\u003e \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e. Choose a\n                location as close as possible to your video source.\n              enum:\n                - asia_pacific_australia\n                - asia_pacific_japan\n                - asia_pacific_singapore\n                - asia_pacific_taiwan\n                - eu_belgium\n                - eu_germany\n                - eu_ireland\n                - south_america_brazil\n                - us_central_iowa\n                - us_east_s_carolina\n                - us_east_virginia\n                - us_west_california\n                - us_west_oregon\n              example: eu_germany\n              type: string\n            name:\n              description: A descriptive name for the stream target. Maximum 255 characters.\n              example: My Stream Target\n              type: string\n            provider:\n              description: The CDN for the target. \u003cbr /\u003e\u003cbr /\u003eRequired for targets whose\n                \u003cem\u003etype\u003c/em\u003e is \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e. Valid\n                values for \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e are\n                \u003cstrong\u003eakamai\u003c/strong\u003e, \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e,\n                \u003cstrong\u003eakamai_rtmp\u003c/strong\u003e, \u003cstrong\u003elimelight\u003c/strong\u003e,\n                \u003cstrong\u003ertmp\u003c/strong\u003e, and \u003cstrong\u003eustream\u003c/strong\u003e. Values can\n                be appended with **_mock** to use in the sandbox environment.\n                \u003cbr /\u003e\u003cbr /\u003eValid values for \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e\n                are \u003cstrong\u003eakamai\u003c/strong\u003e, \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e\n                (default), \u003cstrong\u003eakamai_legacy_rtmp\u003c/strong\u003e, and\n                \u003cstrong\u003ewowza\u003c/strong\u003e. \u003cbr /\u003e\u003cbr\n                /\u003e\u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e defaults to and\n                must be \u003cstrong\u003ewowza\u003c/strong\u003e.\n              example: akamai\n              type: string\n            type:\n              description: \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e is a Wowza CDN target.\n                \u003cstrong\u003eUltraLowLatencyStreamTarget\u003c/strong\u003e is an ultra low\n                latency Wowza stream target. \u003cstrong\u003eCustomStreamTarget\u003c/strong\u003e\n                (the default) is an external, third-party destination. \u003c!--and\n                \u003cstrong\u003eFacebookStreamTarget\u003c/strong\u003e (a Facebook Live\n                target).--\u003e\n              example: WowzaStreamTarget\n              type: string\n            use_cors:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e and \u003cem\u003eprovider\u003c/em\u003e is\n                \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e. CORS, or cross-origin\n                resource sharing, allows streams to be sent to providers such as\n                Peer5, Viblast, and Streamroot, which implement a peer-to-peer\n                grid delivery system.\n              example: true\n              type: boolean\n            use_https:\n              description: \u003cstrong\u003eThe \u003cem\u003euse_https\u003c/em\u003e parameter is deprecated. Use the\n                POST /stream_targets/[\u003cem\u003estream_target_id\u003c/em\u003e]/properties\n                endpoint and the \u003cem\u003erelative_playlists\u003c/em\u003e parameter\n                instead.\u003c/strong\u003e\n              example: true\n              type: boolean\n            use_secure_ingest:\n              description: Only for targets whose \u003cem\u003etype\u003c/em\u003e is\n                \u003cstrong\u003eWowzaStreamTarget\u003c/strong\u003e and \u003cem\u003eprovider\u003c/em\u003e is\n                \u003cstrong\u003eakamai_cupertino\u003c/strong\u003e. If \u003cstrong\u003etrue\u003c/strong\u003e,\n                generates a \u003cem\u003esecure_ingest_query_param\u003c/em\u003e to securely\n                deliver the stream from the transcoder to the provider.\n              example: true\n              type: boolean\n          required:\n            - name\n            - location\n          title: wowza_stream_target\n          type: object\n      required:\n        - stream_target\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/wowza.com-1-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/wowza.com-1-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: schemas: \"stream_target_update_input\": parse schema: property \"stream_target\": at 1:162327: parse schema: property \"chunk_size\": at 1:162692: parse enum values: parse value \"2\": expected type \"string\", got \"number\""
}