{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wepala/weos"
		},
		"file": {
			"name": "blog.yaml",
			"size": 0,
			"path": "controllers/rest/fixtures/blog.yaml",
			"byteSize": 20479,
			"content": "openapi: 3.0.3\ninfo:\n  title: Blog\n  description: Blog example\n  version: 1.0.0\nservers:\n  - url: https://prod1.weos.sh/blog/dev\n    description: WeOS Dev\n  - url: https://prod1.weos.sh/blog/v1\nx-weos-config:\n  event-source:\n    - title: default\n      driver: service\n      endpoint: https://prod1.weos.sh/events/v1\n    - title: event\n      driver: sqlite3\n      database: test.db\n  database:\n    driver: sqlite3\n    database: test.db\n  databases:\n    - title: default\n      driver: sqlite3\n      database: test.db\n  rest:\n    middleware:\n      - RequestID\n      - Recover\n      - ZapLogger\ncomponents:\n  schemas:\n    Category:\n      type: object\n      properties:\n        title:\n          type: string\n        description:\n          type: string\n      required:\n        - title\n      x-identifier:\n        - title\n    Author:\n      type: object\n      properties:\n        id:\n          type: string\n          format: ksuid\n        firstName:\n          type: string\n        lastName:\n          type: string\n        email:\n          type: string\n          format: email\n      required:\n        - firstName\n        - lastName\n      x-identifier:\n        - id\n        - email\n    Blog:\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          x-unique: true\n        title:\n          type: string\n        description:\n          type: string\n        cost:\n          type: number\n          format: double\n        status:\n          type: string\n          nullable: true\n          enum:\n            - \"null\"\n            - unpublished\n            - published\n        image:\n          type: string\n          format: byte\n        categories:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Category\"\n        posts:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Post\"\n        lastUpdated:\n          type: string\n          format: date-time\n          x-update:\n            - Add Blog\n            - Update Blog\n        created:\n          type: string\n          format: date-time\n          x-update:\n            - Add Blog\n      required:\n        - title\n        - url\n    Post:\n      type: object\n      properties:\n        title:\n          type: string\n        description:\n          type: string\n        author:\n          $ref: \"#/components/schemas/Author\"\n        created:\n          type: string\n          format: date-time\npaths:\n  /:\n    get:\n      operationId: Homepage\n      responses:\n        201:\n          description: Application Homepage\n          content:\n            text/html:\n              example: |\n                \u003chtml\u003e\n                  \u003chead\u003e\n                      \u003ctitle\u003eHealth\u003c/title\u003e\n                  \u003c/head\u003e\n                  \u003cbody\u003e\n                    This is a landing page\n                  \u003c/body\u003e\n                \u003c/html\u003e\n  /page:\n    get:\n      summary: Test\n      parameters:\n        - in: header\n          name: Accept\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Test Page\n          content:\n            text/html:\n              example: |\n                \u003chtml\u003e\n                  \u003chead\u003e\n                      \u003ctitle\u003eTest Page\u003c/title\u003e\n                  \u003c/head\u003e\n                  \u003cbody\u003e\n                    This is a test page\n                  \u003c/body\u003e\n                \u003c/html\u003e\n              schema:\n                type: string\n            application/json:\n              example:\n                blog:\n                  value: {\n                    \"title\": \"API Testing\",\n                    \"url\": \"www.example.com\",\n                    \"email\": \"testing@example.com\"\n                  }\n  /another:\n    get:\n      operationId: Homepage\n      parameters:\n        - in: header\n          name: Accept\n          schema:\n            type: string\n      responses:\n        201:\n          description: Application Homepage\n          content:\n            text/html:\n\n            application/json:\n              example:\n                blog:\n                  value: {\n                    \"title\": \"API Testing\",\n                    \"url\": \"www.example.com\",\n                    \"email\": \"testing@example.com\"\n                  }\n  /badtemplates:\n    get:\n      operationId: getAsset\n      responses:\n        200:\n          description: Homepage\n          x-templates:\n            - ./fixtures/templates/base12.html\n        404:\n          description: File not found\n        402:\n          description: User not authenticated\n  /badtemplates1:\n    get:\n      operationId: getAsset\n      responses:\n        200:\n          description: Homepage\n          x-templates:\n            - ./fixtures/templates/badTem.html\n        404:\n          description: File not found\n        402:\n          description: User not authenticated\n  /multipletemplates:\n    get:\n      operationId: getAsset\n      responses:\n        200:\n          description: Homepage\n          x-templates:\n            - ./fixtures/templates/index.html\n            - ./fixtures/templates/ibase.html\n        404:\n          description: File not found\n        402:\n          description: User not authenticated\n  /templates:\n    get:\n      operationId: getAsset\n      parameters:\n        - in: query\n          name: title\n          schema:\n            type: string\n        - in: query\n          name: content\n          schema:\n            type: string\n      responses:\n        200:\n          description: Homepage\n          x-templates:\n            - ./fixtures/templates/base1.html\n        404:\n          description: File not found\n        402:\n          description: User not authenticated\n  /health:\n    summary: Health Check\n    get:\n      x-controller: HealthCheck\n      x-middleware:\n        - Recover\n        - ZapLogger\n      responses:\n        200:\n          description: Health Response\n        500:\n          description: API Internal Error\n  /api:\n      get:\n        operationId: Get API Details\n        x-controller: APIDiscovery\n        responses:\n          200:\n            description: API Details\n            content:\n              application/json:\n                schema:\n                  type: string\n  /blogs:\n    parameters:\n      - in: header\n        name: someHeader\n        schema:\n          type: string\n      - in: header\n        name: someOtherHeader\n        schema:\n          type: string\n        x-context-name: soh\n      - in: header\n        name: X-Account-Id\n        schema:\n          type: string\n        x-context-name: AccountID\n      - in: query\n        name: q\n        schema:\n          type: string\n      - in: query\n        name: cost\n        schema:\n          type: number\n      - in: query\n        name: leverage\n        schema:\n          type: number\n          format: double\n    post:\n      operationId: Add Blog\n      summary: Create Blog\n      x-projection: Default\n      x-event-dispatcher: Default\n      x-command-disptacher: Default\n      requestBody:\n        description: Blog info that is submitted\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Blog\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/Blog\"\n          multipart/form-data:\n            schema:\n              $ref: \"#/components/schemas/Blog\"\n      responses:\n        201:\n          description: Add Blog to Aggregator\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Blog\"\n    get:\n      operationId: Get Blogs\n      summary: Get List of Blogs\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n        - in: query\n          name: l\n          x-alias: limit\n          schema:\n            type: integer\n        - in: query\n          name: _filters\n          style: deepObject\n          explode: true\n          schema:\n            type: object\n            properties:\n              field:\n                type: string\n              operator:\n                type: string\n              values:\n                type: array\n                items:\n                  type: string\n\n          required: false\n          description: query string\n      x-context:\n        _filters:\n          - field: status\n            operator: eq\n            value: Active\n          - field: lastUpdated\n            operator: between\n            values:\n              - 2021-12-17 15:46:00\n              - 2021-12-18 15:46:00\n          - field: categories\n            operator: in\n            values:\n              - Technology\n              - Javascript\n        _sorts:\n          - field: title\n            order: asc\n        page: 1\n        limit: 10\n      responses:\n        200:\n          description: List of blogs\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  total:\n                    type: integer\n                  page:\n                    type: integer\n                  blogs:\n                    type: array\n                    x-alias: items\n                    items:\n                      $ref: \"#/components/schemas/Blog\"\n    put:\n      operationId: Import blogs\n      requestBody:\n        content:\n          text/csv:\n            schema:\n              type: string\n              format: binary\n      responses:\n        201:\n          description: items created\n\n  /blogs/{id}:\n    parameters:\n      - in: query\n        name: sequence_no\n        schema:\n          type: integer\n      - in: query\n        name: use_entity_id\n        schema:\n          type: boolean\n    get:\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: blog id\n        - in: header\n          name: If-Match\n          schema:\n            type: string\n          required: false\n        - in: query\n          name: cost\n          schema:\n            type: number\n        - in: query\n          name: leverage\n          schema:\n            type: number\n            format: double\n      x-context:\n        id: 2\n      summary: Get Blog by id\n      operationId: Get Blog\n      responses:\n        200:\n          description: Blog details without any supporting collections\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Blog\"\n    put:\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: blog id\n        - in: header\n          name: If-Match\n          schema:\n            type: string\n        - in: query\n          name: cost\n          schema:\n            type: number\n        - in: query\n          name: leverage\n          schema:\n            type: number\n            format: double\n      summary: Update blog details\n      operationId: Update Blog\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Blog\"\n      responses:\n        200:\n          description: Update Blog\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Blog\"\n    delete:\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: blog id\n        - in: header\n          name: If-Match\n          schema:\n            type: string\n      x-schema: \"Blog\"\n      summary: Delete blog\n      operationId: Delete Blog\n      responses:\n        200:\n          description: Blog Deleted\n\n  /posts/:\n    post:\n      operationId: Create Blog Post\n      summary: Create Blog Post\n      requestBody:\n        description: Post details\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Post\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/Post\"\n      responses:\n        201:\n          description: Post\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Post\"\n    put:\n      operationId: Import Blog Posts\n      summary: Import Blog Posts\n      requestBody:\n        description: List of posts to import\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: \"#/components/schemas/Post\"\n          application/x-www-form-urlencoded:\n            schema:\n              type: array\n              items:\n                $ref: \"#/components/schemas/Post\"\n      responses:\n        201:\n          description: Post\n    get:\n      operationId: Get Posts\n      summary: Get a blog's list of posts\n      parameters:\n        - in: query\n          name: q\n          schema:\n            type: string\n          required: false\n          description: query string\n      responses:\n        200:\n          description: List of blog posts\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  total:\n                    type: integer\n                  page:\n                    type: integer\n                  items:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Post\"\n\n  /posts/{id}:\n    get:\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n      summary: Get blog post by id\n      responses:\n        200:\n          description: Get blog post information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Post\"\n    put:\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n      summary: Update post\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Post\"\n      responses:\n        200:\n          description: Get blog post information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Post\"\n    delete:\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Post\"\n      summary: Delete post\n      responses:\n        200:\n          description: Delete post\n\n\n  /categories/:\n    post:\n      operationId: Create Blog Category\n      summary: Create Blog Category\n      requestBody:\n        description: Post details\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Category\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/Category\"\n      responses:\n        201:\n          description: Post\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Category\"\n    get:\n      operationId: Get Categories\n      summary: Get a blog's list of categories\n      parameters:\n        - in: query\n          name: q\n          schema:\n            type: string\n          required: false\n          description: query string\n      responses:\n        200:\n          description: List of blog categories\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  total:\n                    type: integer\n                  page:\n                    type: integer\n                  items:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Category\"\n\n  /categories/{title}:\n    get:\n      parameters:\n        - in: path\n          name: title\n          schema:\n            type: string\n          required: true\n      summary: Get blog category by title\n      responses:\n        200:\n          description: Get blog category information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Category\"\n    put:\n      parameters:\n        - in: path\n          name: title\n          schema:\n            type: string\n          required: true\n      summary: Update category\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Category\"\n      responses:\n        200:\n          description: Get blog category information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Category\"\n    delete:\n      parameters:\n        - in: path\n          name: title\n          schema:\n            type: string\n          required: true\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Category\"\n      summary: Delete category\n      responses:\n        200:\n          description: Delete category\n\n  /authors/:\n    post:\n      operationId: Create Blog Author\n      summary: Create Blog Author\n      requestBody:\n        description: Author details\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Author\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/Author\"\n      responses:\n        201:\n          description: Post\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Author\"\n    get:\n      operationId: Get Authors\n      summary: Get a blog's list of authors\n      parameters:\n        - in: query\n          name: q\n          schema:\n            type: string\n          required: false\n          description: query string\n      responses:\n        200:\n          description: List of blog authors\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  total:\n                    type: integer\n                  page:\n                    type: integer\n                  items:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Author\"\n\n  /authors/{id}:\n    get:\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n        - in: header\n          name: email\n          schema:\n            type: string\n            format: email\n          required: true\n      summary: Get Author by email and id\n      responses:\n        200:\n          description: Get author information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Author\"\n    put:\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n        - in: header\n          name: email\n          schema:\n            type: string\n            format: email\n          required: true\n      summary: Update Author details\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Author\"\n      responses:\n        200:\n          description: Author details\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Author\"\n    delete:\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n        - in: header\n          name: email\n          schema:\n            type: string\n            format: email\n          required: true\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Author\"\n      summary: Delete author\n      responses:\n        200:\n          description: Delete author\n",
			"canonicalURL": "/github.com/wepala/weos@84c6a9cc7e2046a1cbf001fccb5e577981d8c644/-/blob/controllers/rest/fixtures/blog.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/wepala/weos/blob/84c6a9cc7e2046a1cbf001fccb5e577981d8c644/controllers/rest/fixtures/blog.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/another\": at 1:1727: get: duplicate operationId: \"Homepage\""
}