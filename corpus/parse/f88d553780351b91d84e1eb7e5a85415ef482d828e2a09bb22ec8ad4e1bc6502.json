{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dkackman/chia-api"
		},
		"file": {
			"name": "harvester.yaml",
			"size": 0,
			"path": "src/harvester.yaml",
			"byteSize": 5651,
			"content": "openapi: 3.0.3\ninfo:\n  description: \"The Chia node and services come with a JSON RPC API server that allows you to access information and control the services. These are accessible via HTTP, WebSockets, or via client SDKs. The ports can be configured in ~/.chia/mainnet/config/config.yaml. The RPC ports should not be exposed to the internet. TLS certificates are used to secure the communication.\"\n  version: 1.3.0.beta.1\n  title: Chia RPC\n  termsOfService: https://www.chia.net/assets/legal/Guidelines-for-Using-Chia-Network.pdf\n  contact:\n    name: Chia Network\n    url: https://www.chia.net/\n    email: hello@chia.net\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\nservers:\n  - url: https://localhost:8560\n    description: Harvester RPC\nsecurity:\n  - bearerAuth: []\ncomponents:\n  requestBodies:\n    empty:\n      $ref: \"./requestBodies/empty.yaml#/empty\"\n  responses:\n    empty:\n      $ref: \"./responses/empty.yaml#/empty\"\n  schemas:\n    k_size:\n      $ref: \"./schemas/k_size.yaml#/k_size\"\n    plot_info:\n      $ref: \"./schemas/plot_info.yaml#/plot_info\"\n    apiResponse:\n      $ref: \"./schemas/apiResponse.yaml#/apiResponse\"\n  securitySchemes:\n    bearerAuth:\n      $ref: \"./securitySchemes/bearerAuth.yaml#/bearerAuth\"\ntags:\n  - name: Harvester\n    description: The harvester RPC API is exposed, by default, on port 8560 and contains methods for managing plot files and directories.\npaths:\n  /add_plot_directory:\n    post:\n      tags:\n        - Harvester\n      summary: Add a plot directory to the harvester configuration.\n      description: Add a plot directory to the harvester configuration.\n      operationId: add_plot_directory\n      requestBody:\n        description: The directory name to add\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - dirname\n              properties:\n                dirname:\n                  type: string\n      responses:\n        200:\n          $ref: \"#/components/responses/empty\"\n  /remove_plot_directory:\n    post:\n      tags:\n        - Harvester\n      summary: Removes a plot directory from the harveser configuration.\n      description: Removes a plot directory from the harveser configuration.\n      operationId: remove_plot_directory\n      requestBody:\n        description: The directory name to remove\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - dirname\n              properties:\n                dirname:\n                  type: string\n      responses:\n        200:\n          $ref: \"#/components/responses/empty\"\n  /get_plot_directories:\n    post:\n      tags:\n        - Harvester\n      summary: Get the list of plot directories from the harvester configuration.\n      description: Get the list of plot directories from the harvester configuration.\n      operationId: get_plot_directories\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      directories:\n                        type: array\n                        items:\n                          type: string\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /refresh_plots:\n    post:\n      tags:\n        - Harvester\n      summary: Refresh the list of plots.\n      description: Refresh the list of plots.\n      operationId: refresh_plots\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        200:\n          $ref: \"#/components/responses/empty\"\n  /get_plots:\n    post:\n      tags:\n        - Harvester\n      summary: Get information about the plots the harvester knows about.\n      description: Get information about the plots the harvester knows about.\n      operationId: get_plots\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      failed_to_open_filenames:\n                        type: array\n                        items:\n                          type: string\n                      not_found_filenames:\n                        type: array\n                        items:\n                          type: string\n                      plots:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/plot_info\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /delete_plot:\n    post:\n      tags:\n        - Harvester\n      summary: Permanently delete a plot file.\n      description: Permanently delete a plot file.\n      operationId: delete_plot\n      requestBody:\n        required: true\n        description: the file name of the plot\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - filename\n              properties:\n                filename:\n                  type: string\n            example:\n              filename: plot-k33-2021-06-12-03-55-1d5a2afe637578d6c9dfa04484854831012b678921a8dce5a8aee9c0fd3c1470.plot\n      responses:\n        200:\n          $ref: \"#/components/responses/empty\"\nexternalDocs:\n  description: Find out more about chia\n  url: https://chia.net\n"
		}
	},
	"Error": "parse: parse spec: paths: /get_plot_directories: post: operation \"get_plot_directories\": requestBody: resolve \"#/components/requestBodies/empty\" reference: resolve \"./requestBodies/empty.yaml#/empty\" reference: invalid requestBody reference: \"./requestBodies/empty.yaml#/empty\""
}