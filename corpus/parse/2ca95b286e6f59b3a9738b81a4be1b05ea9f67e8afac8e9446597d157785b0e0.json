{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/JetBrains/package-search-api-models"
		},
		"file": {
			"name": "swagger-v1.0.0.yaml",
			"size": 0,
			"path": "swagger/swagger-v1.0.0.yaml",
			"byteSize": 17284,
			"content": "openapi: 3.0.0\ninfo:\n  description: JetBrains Package Search API\n  version: \"1.0.0\"\n  title: JetBrains Package Search API\n  termsOfService: 'https://plugins.jetbrains.com/legal/terms-of-use'\n  contact:\n    email: support@jetbrains.com\ntags:\n  - name: package\n    description: Package resource\n  - name: idea\n    description: IntelliJ IDEA-specific resource\npaths:\n  '/package/{id}':\n    get:\n      tags:\n        - package\n      summary: Find package by Maven coordinates\n      description: Returns a single package with the given `groupId:artifactId` coordinates, if any.\n      operationId: getPackageById\n      parameters:\n        - name: id\n          in: path\n          description: \u003e-\n            GroupId and ArtifactId of the package. E.g., `org.jetbrains:package-search`.\n          required: true\n          schema:\n            type: string\n            pattern: '^([\\w.\\-]+):([\\w.\\-]+)$'\n      responses:\n        '200':\n          description: Successful operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MinimalPackage'\n            application/json+org.jetbrains.packagesearch.minimal:\n              schema:\n                $ref: '#/components/schemas/MinimalPackage'\n            application/json+org.jetbrains.packagesearch.standard:\n              schema:\n                $ref: '#/components/schemas/Package'\n        '400':\n          description: Empty or invalid ID, should be in `groupId:artifactId` format.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: No package found with the given coordinates.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: Something went wrong.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/package#range':\n    get:\n      tags:\n        - package\n      summary: Find a range of packages by their Maven coordinates\n      description: Returns a collection of packages that match the provided Maven coordinates (a comma-separated list of `groupId:artifactId`).\u003cbr /\u003eThe result will contain _at most_ the same number of items as the number of IDs provided in the request, but may contain less, if any of the IDs have no matches.\u003cbr /\u003eNote that if none of the provided IDs match you will get an HTTP 200 response with an empty array of results.\n      operationId: getPackagesByRange\n      parameters:\n        - name: range\n          in: query\n          description: Range of package coordinates; max. 25 items in a `groupId:artifactId` format, comma-separated. E.g., `com.jetbrains:my-package,com.jetbrains:another-package`\n          required: true\n          schema:\n            type: array\n            items:\n              type: string\n              pattern: '^([\\w.\\-]+):([\\w.\\-]+)$'\n      responses:\n        '200':\n          description: Successful operation.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MinimalPackage'\n            application/json+org.jetbrains.packagesearch.minimal:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MinimalPackage'\n            application/json+org.jetbrains.packagesearch.standard:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Package'\n        '400':\n          description: Either no non-blank IDs were passed, or more than 25 IDs non-blank IDs were passed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: Something went wrong.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/package#search':\n    get:\n      tags:\n        - package\n      summary: Search for packages by query (fulltext search)\n      description: Returns a collection of packages matching the provided query in any of their fields. If the query only contains Maven coordinates, the service will prioritise exact matches of the coordinates.\n      operationId: searchPackages\n      parameters:\n        - name: query\n          in: query\n          description: Search query, must not be null or blank.\n          required: true\n          schema:\n            type: string\n        - name: onlyStable\n          in: query\n          description: When true, only packages containing stable versions will be returned. Default value `false`.\n          required: false\n          schema:\n            type: boolean\n        - name: includeMPPChild\n          in: query\n          description: When true, mpp child artifacts (platfrom specific) will be included in search results. Default value `false`.\n          required: false\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: Successful operation.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MinimalPackage'\n            application/json+org.jetbrains.packagesearch.minimal:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MinimalPackage'\n            application/json+org.jetbrains.packagesearch.standard:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Package'\n        '400':\n          description: The query parameter must not be blank.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: Something went wrong.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/package#hash':\n    get:\n      tags:\n        - package\n      summary: Find a package by hash\n      description: Returns a matching package, by looking for the provided hash in all packages' versions.\u003cbr /\u003e**⚠ Don't specify both md5 and sha1 at the same time, the behaviour is not defined. ⚠**\n      operationId: getPackagesByHash\n      parameters:\n        - name: sha1\n          in: query\n          description: SHA1 hash of the package to find.\n          required: false\n          schema:\n            type: string\n            pattern: \"^[0-9a-fA-F]{40}$\"\n        - name: md5\n          in: query\n          description: MD5 hash of the package to find.\n          required: false\n          schema:\n            type: string\n            pattern: \"^[0-9a-fA-F]{32}$\"\n      responses:\n        '200':\n          description: Successful operation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MinimalPackage'\n            application/json+org.jetbrains.packagesearch.minimal:\n              schema:\n                $ref: '#/components/schemas/MinimalPackage'\n            application/json+org.jetbrains.packagesearch.standard:\n              schema:\n                $ref: '#/components/schemas/Package'\n        '400':\n          description: The provided hash is empty or doesn't look like it's a valid hash.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '404':\n          description: No package found with the given hash.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: Something went wrong.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/package#suggest':\n    get:\n      tags:\n        - package\n      summary: Get suggested packages\n      description: Returns a collection of suggested packages. At least one of `groupId` and `artifactId` is required to be non-blank.\n      operationId: suggestPackages\n      parameters:\n        - name: artifactId\n          in: query\n          description: ArtifactId to use for suggestions.\n          required: false\n          schema:\n            type: string\n        - name: groupId\n          in: query\n          description: GroupId to use for suggestions.\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful operation.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MinimalPackage'\n            application/json+org.jetbrains.packagesearch.minimal:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MinimalPackage'\n        '400':\n          description: At least one of the groupId and artifactId parameters is required to be non-blank.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '415':\n          description: Unsupported content type — this endpoint only supports minimal format responses.\n          content:\n            application/json+org.jetbrains.packagesearch.standard:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: Something went wrong.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/search/idea/fulltext':\n    get:\n      tags:\n        - idea\n      summary: Full text search (for IDEA)\n      description: Returns a collection of packages matching the query.\n      operationId: ideaSearch\n      parameters:\n        - name: query\n          in: query\n          description: Query to search for.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful operation.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MinimalPackage'\n        '400':\n          description: The query parameter must not be missing.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: Something went wrong.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  '/search/idea/suggest':\n    get:\n      tags:\n        - idea\n      summary: Full text search (for IDEA)\n      description: Returns a collection of packages suggestions; either artifactId or groupId is required (can be blank).\n      operationId: ideaSuggest\n      parameters:\n        - name: groupId\n          in: query\n          description: GroupId to use for suggestions.\n          required: false\n          schema:\n            type: string\n        - name: artifactId\n          in: query\n          description: ArtifactId to use for suggestions.\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful operation.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/MinimalPackage'\n        '400':\n          description: 'At least one of groupId and artifactId is required.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        '500':\n          description: Something went wrong.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\nservers:\n  - url: 'https://package-search.services.jetbrains.com/api'\ncomponents:\n  schemas:\n    Package:\n      type: object\n      properties:\n        groupId:\n          type: string\n        artifactId:\n          type: string\n        packaging:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        url:\n          type: string\n          format: uri\n        scm:\n          $ref: '#/components/schemas/Scm'\n        mpp:\n          $ref: '#/components/schemas/MPPData'\n        platforms:\n          type: array\n          items:\n            $ref: '#/components/schemas/Platform'\n        authors:\n          type: array\n          items:\n            $ref: '#/components/schemas/Author'\n        latestVersion:\n          $ref: '#/components/schemas/Version'\n        versions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Version'\n        dependencyRating:\n          type: number\n          format: float\n          default: 0\n        github:\n          $ref: '#/components/schemas/GitHub'\n        stackoverflow:\n          $ref: '#/components/schemas/StackOverflowTags'\n      required:\n        - groupId\n        - artifactId\n        - versions\n        - name\n        - latestVersion\n        - dependencyRating\n    MPPData:\n      type: object\n      properties:\n        module_type:\n          type: string\n    Platform:\n      type: object\n      properties:\n        type:\n          type: string\n        targets:\n          type: array\n          items:\n            type: string\n    Scm:\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n        connection:\n          type: string\n        developerConnection:\n          type: string\n    Author:\n      type: object\n      properties:\n        name:\n          type: string\n        org:\n          type: string\n        orgUrl:\n          type: string\n          format: uri\n    Version:\n      type: object\n      properties:\n        version:\n          type: string\n        sha1:\n          type: string\n        md5:\n          type: string\n        stable:\n          type: boolean\n        packaging:\n          type: string\n        updated:\n          type: number\n          format: int64\n          default: 0\n      required:\n        - version\n    GitHub:\n      type: object\n      properties:\n        description:\n          type: string\n        url:\n          type: string\n        isFork:\n          type: boolean\n        stars:\n          type: number\n          format: int64\n          default: 0\n        watches:\n          type: number\n          format: int64\n          default: 0\n        forks:\n          type: number\n          format: int64\n          default: 0\n        subscribers:\n          type: number\n          format: int64\n          default: 0\n        network:\n          type: number\n          format: int64\n          default: 0'\n        community_profile:\n          $ref: '#/components/schemas/GitHubCommunityProfile'\n        updated:\n          type: number\n          format: int64\n          default: 0\n      required:\n        - url\n    GitHubCommunityProfile:\n      type: object\n      properties:\n        description:\n          type: string\n        files:\n          $ref: '#/components/schemas/GitHubCommunityProfileFiles'\n        documentation:\n          type: string\n          format: uri\n        health_percentage:\n          type: number\n          format: int32\n    GitHubCommunityProfileFiles:\n      type: object\n      properties:\n        license:\n          $ref: '#/components/schemas/GitHubCommunityProfileFile'\n        readme:\n          $ref: '#/components/schemas/GitHubCommunityProfileFile'\n        code_of_conduct:\n          $ref: '#/components/schemas/GitHubCommunityProfileFile'\n    GitHubCommunityProfileFile:\n      type: object\n      properties:\n        name:\n          type: string\n        url:\n          type: string\n          format: uri\n        html_url:\n          type: string\n          format: uri\n        spdx_id:\n          type: string\n    StackOverflowTags:\n      type: object\n      properties:\n        tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/StackOverflowTag'\n    StackOverflowTag:\n      type: object\n      properties:\n        tag:\n          type: string\n        count:\n          type: number\n          format: int32\n      required:\n        - tag\n        - count\n    MinimalPackage:\n      type: object\n      properties:\n        groupId:\n          type: string\n        artifactId:\n          type: string\n        versions:\n          type: array\n          items:\n            $ref: '#/components/schemas/MinimalVersion'\n      required:\n        - groupId\n        - artifactId\n        - versions\n    MinimalVersion:\n      type: object\n      properties:\n        version:\n          type: string\n      required:\n        - version\n    ErrorResponse:\n      type: object\n      properties:\n        error:\n          type: object\n          properties:\n            message:\n              type: string\n",
			"canonicalURL": "/github.com/JetBrains/package-search-api-models@4383552d19b40110f3dc01dd7329c5c977821387/-/blob/swagger/swagger-v1.0.0.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/JetBrains/package-search-api-models/blob/4383552d19b40110f3dc01dd7329c5c977821387/swagger/swagger-v1.0.0.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"Package\": resolve \"#/components/schemas/Package\": property \"github\": $ref: resolve \"#/components/schemas/GitHub\": property \"network\": at swagger/swagger-v1.0.0.yaml:482:20: parse default: expected type \"number\", got \"string\""
}