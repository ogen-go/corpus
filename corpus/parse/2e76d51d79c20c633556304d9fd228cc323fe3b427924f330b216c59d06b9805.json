{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/pcit-ce/pcit"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/openapi.yaml",
			"byteSize": 68100,
			"content": "openapi: 3.0.0\n# servers:\n#   - url: 'https://ci.khs1994.com/api'\n#     description: PCIT-CE API\n#   - url: 'https://{pcit-url}/api'\n#     description: PCIT-EE API\n#     variables:\n#       pcit-url:\n#         description: your pcit ee url\n#         default: ci.khs1994.com\ninfo:\n  description: PCIT API\n  version: 1.0.0\n  title: PCIT API\n  termsOfService: \"https://github.com/pcit-ce/pcit/blob/master/docs/terms-of-service.md\"\n  contact:\n    email: ci@khs1994.com\n    name: pcit\n    url: \"https://ci.khs1994.com\"\n  license:\n    name: MIT\n    url: \"https://github.com/pcit-ce/pcit/blob/master/LICENSE\"\ntags:\n  - name: Builds\n  - name: Builds.log\n  - name: Builds.job\n  - name: Organization\n  - name: Repositories\n  - name: Repositories.activate\n  - name: Repositories.branches\n  - name: Repositories.caches\n  - name: Repositories.crons\n  - name: Repositories.env_vars\n  - name: Repositories.requests\n  - name: Repositories.settings\n  - name: Repositories.star\n  - name: Repositories.status\n  - name: Repositories.issues\n  - name: User\n  - name: User.beta_features\n  - name: System\npaths:\n  /builds:\n    get:\n      tags:\n        - Builds\n      description: \u003e-\n        This returns a list of builds for the current user. The result is\n        paginated. The default limit is 100.\n      summary: list builds\n      operationId: get-builds\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                description: build list\n                items:\n                  $ref: \"#/components/schemas/builds\"\n              examples:\n                example1:\n                  value:\n                    - id: \"112\"\n                      branch: gh-pages\n                      commit_id: 0fa67f2b1c0d59998b71035b402849f5075a3c60\n                      tag: null\n                      commit_message: \"Deploy Git by PCIT https://ci.khs1994.com\"\n                      compare: \u003e-\n                        https://github.com/pcit-ce/pcit/compare/d492689de936...0fa67f2b1c0d\n                      committer_name: pcit-ce\n                      committer_username: pcit-deploy-robot\n                      build_status: misconfigured\n                      event_type: push\n                      pull_request_number: null\n                    - id: \"111\"\n                      branch: master\n                      commit_id: f807efaa677757682aa7a3f226d3e799086e90dd\n                      tag: null\n                      commit_message: |-\n                        Support actions\n\n                        Signed-off-by: Kang HuaiShuai\n                      compare: \u003e-\n                        https://github.com/pcit-ce/pcit/compare/6746c883155e...f807efaa6777\n                      committer_name: Kang HuaiShuai\n                      committer_username: khs1994\n                      build_status: queued\n                      event_type: push\n                      pull_request_number: null\n      parameters: []\n  \"/repo/{git_type}/{username}/{repo.name}/builds\":\n    get:\n      tags:\n        - Builds\n      description: \u003e-\n        This returns a list of builds for an individual repository. The result\n        is paginated. Each request will return 25 results.\n      summary: find builds By Repo\n      operationId: get-repo-builds\n      parameters:\n        - name: git_type\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: repo.name\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                description: repo build list\n                items:\n                  $ref: \"#/components/schemas/repo-builds\"\n              examples:\n                example:\n                  value:\n                    - id: \"112\"\n                      branch: gh-pages\n                      commit_id: 0fa67f2b1c0d59998b71035b402849f5075a3c60\n                      tag: null\n                      commit_message: \"Deploy Git by PCIT https://ci.khs1994.com\"\n                      compare: \u003e-\n                        https://github.com/pcit-ce/pcit/compare/d492689de936...0fa67f2b1c0d\n                      committer_name: pcit-ce\n                      committer_username: pcit-deploy-robot\n                      build_status: misconfigured\n                      event_type: push\n                      pull_request_number: null\n                      created_at: \"1577892876\"\n                      finished_at: null\n                    - id: \"111\"\n                      branch: master\n                      commit_id: f807efaa677757682aa7a3f226d3e799086e90dd\n                      tag: null\n                      commit_message: |-\n                        Support actions\n\n                        Signed-off-by: Kang HuaiShuai\n                      compare: \u003e-\n                        https://github.com/pcit-ce/pcit/compare/6746c883155e...f807efaa6777\n                      committer_name: Kang HuaiShuai\n                      committer_username: khs1994\n                      build_status: queued\n                      event_type: push\n                      pull_request_number: null\n                      created_at: \"1577892253\"\n                      finished_at: null\n  \"/repo/{git_type}/{username}/{repo.name}/build/current\":\n    get:\n      tags:\n        - Builds\n      summary: find builds By Repo Current\n      description: find builds by repo current\n      operationId: get-repo-current-build\n      parameters:\n        - name: git_type\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: repo.name\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/build-detail\"\n              examples:\n                example1:\n                  value:\n                    id: \"112\"\n                    git_type: github\n                    rid: \"119219872\"\n                    event_type: push\n                    build_status: misconfigured\n                    branch: gh-pages\n                    tag: null\n                    pull_request_title: null\n                    pull_request_number: null\n                    pull_request_source: null\n                    compare: \u003e-\n                      https://github.com/pcit-ce/pcit/compare/d492689de936...0fa67f2b1c0d\n                    commit_id: 0fa67f2b1c0d59998b71035b402849f5075a3c60\n                    commit_message: \"Deploy Git by PCIT https://ci.khs1994.com\"\n                    committer_uid: null\n                    committer_name: pcit-ce\n                    committer_username: pcit-deploy-robot\n                    committer_email: ci@khs1994.com\n                    committer_pic: null\n                    author_uid: null\n                    author_name: pcit-ce\n                    author_username: pcit-deploy-robot\n                    author_email: ci@khs1994.com\n                    author_pic: null\n                    created_at: \"1577892876\"\n                    finished_at: null\n                    deleted_at: null\n                    config: \"[]\"\n                    action: null\n                    check_suites_id: null\n                    internal: \"1\"\n                    private: \"0\"\n                    unique_key: \"0\"\n                    jobs: []\n  \"/build/{build.id}\":\n    get:\n      tags:\n        - Builds\n      description: This returns a single build. result jobs.[index].build_log is always [].\n      summary: find single build\n      operationId: get-single-build\n      parameters:\n        - name: build.id\n          in: path\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/build-detail\"\n              examples:\n                example1:\n                  value:\n                    id: \"100\"\n                    git_type: github\n                    rid: \"230709793\"\n                    event_type: push\n                    build_status: success\n                    branch: master\n                    tag: null\n                    pull_request_title: null\n                    pull_request_number: null\n                    pull_request_source: null\n                    compare: \u003e-\n                      https://github.com/pcit-plugins/pcit-github-release/compare/3f7567e0fc43...e66c9b3cdabb\n                    commit_id: e66c9b3cdabb4572339d430f1ee33ae22a93a976\n                    commit_message: \u003e-\n                      Sync from\n                      pcit-ce/pcit@b4a29da40a05e79d646569ef35bd4c97ae5b69a8 by\n                      PCIT\n                    committer_uid: null\n                    committer_name: khs1994\n                    committer_username: khs1994\n                    committer_email: khs1994@khs1994.com\n                    committer_pic: null\n                    author_uid: null\n                    author_name: khs1994\n                    author_username: khs1994\n                    author_email: khs1994@khs1994.com\n                    author_pic: null\n                    created_at: \"1577627893\"\n                    finished_at: \"1577627957\"\n                    deleted_at: null\n                    config: \u003e-\n                      {\"steps\":{\"github_release\":{\"image\":\"pcit\\/github_release\",\"settings\":{\"token\":\"${GITHUB_TOKEN}\",\"files\":[\"Dockerfile\",\"docker-entrypoint.sh\"],\"overwrite\":true,\"draft\":true,\"prerelease\":true,\"note\":\"nightly\",\"title\":\"nightly\",\"target_commitish\":\"refs\\/tags\\/nightly\"}}}}\n                    action: null\n                    check_suites_id: null\n                    internal: \"1\"\n                    private: \"0\"\n                    unique_key: \"0\"\n                    jobs:\n                      - id: \"131\"\n                        allow_failure: \"0\"\n                        state: success\n                        started_at: \"1577627938\"\n                        finished_at: \"1577627957\"\n                        created_at: \"1577627936\"\n                        updated_at: null\n                        deleted_at: null\n                        build_id: \"100\"\n                        build_log: []\n                        check_run_id: \"366809624\"\n                        config: null\n                        env_vars: \"null\"\n                        container_config: null\n  \"/build/{build.id}/cancel\":\n    post:\n      tags:\n        - Builds\n      description: \u003e-\n        This cancels a currently running build. It will set the build and\n        associated jobs to \"state\": canceled.\n      summary: cancel build\n      operationId: cancel-single-build\n      parameters:\n        - name: build.id\n          in: path\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: success\n  \"/build/{build.id}/restart\":\n    post:\n      tags:\n        - Builds\n      description: This restarts a build that has completed or been canceled.\n      summary: restart build\n      operationId: restart-single-build\n      responses:\n        \"200\":\n          description: success\n      security: []\n      parameters:\n        - name: build.id\n          in: path\n          required: true\n          schema:\n            type: integer\n  \"/job/{job.id}/log\":\n    get:\n      tags:\n        - Builds.log\n      summary: find log\n      description: This returns a single build log.\n      operationId: get-log\n      parameters:\n        - name: job.id\n          in: path\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                description: logs\n                properties:\n                  steps:\n                    type: string\n                    description: step log\n              examples:\n                example:\n                  value:\n                    clone: \u003e-\n                      2019-12-28T12:50:09.012993700Z + git init\n\n                      2019-12-28T12:50:09.048609700Z Initialized empty Git\n                      repository in /app/pcit/.git/\n\n                      2019-12-28T12:50:09.048638100Z + git remote add origin\n                      https://github.com/pcit-ce/pcit\n\n                      2019-12-28T12:50:09.064472600Z + git fetch --no-tags\n                      --depth=25 origin +refs/heads/master:\n\n                      2019-12-28T12:50:17.371708300Z From\n                      https://github.com/pcit-ce/pcit\n\n                      2019-12-28T12:50:17.371726500Z  * branch\n                      master     -\u003e FETCH_HEAD\n\n                      2019-12-28T12:50:17.372141600Z  * [new branch]\n                      master     -\u003e origin/master\n\n                      2019-12-28T12:50:17.377939100Z + git reset --hard -q\n                      41de4b3bd1dba53c4fa55987bad9f57ce91e8f7d\n\n                      2019-12-28T12:50:17.433871900Z + git submodule update\n                      --init --recursive\n    delete:\n      tags:\n        - Builds.log\n      summary: delete log\n      description: \u003e-\n        This removes the contents of a log. It gets replace with the message:\n        Log removed at 2017-02-13 16:00:00 UTC.\n      operationId: delete-log\n      parameters:\n        - name: job.id\n          in: path\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          description: success\n  /jobs:\n    get:\n      tags:\n        - Builds.job\n      summary: list jobs\n      description: This returns a list of jobs a current user has access to.\n      operationId: get-jobs\n      responses:\n        \"200\":\n          description: successful operation\n      parameters: []\n  \"/job/{job.id}\":\n    get:\n      tags:\n        - Builds.job\n      summary: find single job\n      description: This returns a single job.\n      operationId: get-single-job-log\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/jobs\"\n              examples:\n                example1:\n                  value:\n                    id: \"100\"\n                    allow_failure: \"0\"\n                    state: success\n                    started_at: \"1577537406\"\n                    finished_at: \"1577537724\"\n                    created_at: \"1577537046\"\n                    updated_at: null\n                    deleted_at: null\n                    build_id: \"52\"\n                    build_log: log string\n                    check_run_id: \"366020520\"\n                    config: null\n                    env_vars: \u003e-\n                      {\"PHP_VERSION\":\"7.2.24\",\"NGINX_VERSION\":\"1.15.8\",\"REDIS_VERSION\":\"5.0.3\",\"MYSQL_VERSION\":\"5.7.24\"}\n                    container_config: null\n      parameters:\n        - name: job.id\n          in: path\n          required: true\n          schema:\n            type: integer\n  \"/job/{job.id}/cancel\":\n    post:\n      tags:\n        - Builds.job\n      summary: cancel job\n      description: This cancels a currently running job.\n      operationId: cancel-job\n      responses:\n        default:\n          description: successful operation\n      parameters:\n        - name: job.id\n          in: path\n          required: true\n          schema:\n            type: integer\n  \"/job/{job.id}/restart\":\n    post:\n      tags:\n        - Builds.job\n      summary: restart job\n      description: This restarts a job that has completed or been canceled.\n      operationId: restart-job\n      parameters:\n        - name: job.id\n          in: path\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: success\n  /orgs:\n    get:\n      tags:\n        - Organization\n      summary: list orgs\n      description: This returns a list of organizations the current user is a member of.\n      operationId: get-orgs\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                description: \"\"\n                items:\n                  $ref: \"#/components/schemas/org\"\n              examples:\n                example1:\n                  value:\n                    - id: \"3\"\n                      git_type: github\n                      uid: \"31106763\"\n                      name: null\n                      username: khs1994-website\n                      email: null\n                      pic: \"https://avatars2.githubusercontent.com/u/31106763?v=4\"\n                      access_token: null\n                      refresh_token: null\n                      org_admin: '[\"16733187\"]'\n                      type: org\n                      installation_id: \"0\"\n                    - id: \"4\"\n                      git_type: github\n                      uid: \"31461768\"\n                      name: null\n                      username: khs1994-php\n                      email: null\n                      pic: \"https://avatars0.githubusercontent.com/u/31461768?v=4\"\n                      access_token: null\n                      refresh_token: null\n                      org_admin: '[\"16733187\"]'\n                      type: org\n                      installation_id: \"0\"\n      parameters: []\n  \"/org/{git_type}/{organization.name}\":\n    get:\n      tags:\n        - Organization\n      summary: find org\n      description: This returns an individual organization.\n      operationId: get-org\n      parameters:\n        - name: git_type\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: organization.name\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/org\"\n              examples:\n                example1:\n                  value:\n                    id: \"2\"\n                    git_type: github\n                    uid: \"45250309\"\n                    name: pcit-ce\n                    username: pcit-ce\n                    email: ci@khs1994.com\n                    pic: \"https://avatars3.githubusercontent.com/u/45250309?v=4\"\n                    access_token: null\n                    refresh_token: null\n                    org_admin: '[\"16733187\"]'\n                    type: org\n                    installation_id: \"469299\"\n  /repos:\n    get:\n      tags:\n        - Repositories\n      summary: list repos\n      description: This returns a list of repositories the current user has access to.\n      parameters: []\n      operationId: get-repos\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                description: \"\"\n                items: {}\n              examples:\n                example1:\n                  value: []\n  \"/repos/{git_type}/{username}\":\n    get:\n      tags:\n        - Repositories\n      summary: list owner repo\n      description: This returns a list of repositories an owner has access to.\n      parameters:\n        - name: git_type\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n      operationId: get-owner-repo\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                description: \"\"\n                items: {}\n              examples:\n                example1:\n                  value:\n                    - rid: \"119219872\"\n                      repo_full_name: pcit-ce/pcit\n                      default_branch: master\n                      git_type: github\n                      webhooks_status: 1\n                      build_id: \"111\"\n                      build_status: queued\n                      commit_id: f807efaa677757682aa7a3f226d3e799086e90dd\n                    - rid: \"230623025\"\n                      repo_full_name: pcit-ce/pcit-release\n                      default_branch: master\n                      git_type: github\n                      webhooks_status: 1\n                      build_id: null\n                      build_status: null\n                      commit_id: \"0\"\n  \"/repo/{git_type}/{username}/{repo.name}\":\n    get:\n      tags:\n        - Repositories\n      summary: find repo\n      description: This returns an individual repository.\n      parameters:\n        - name: git_type\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: repo.name\n          in: path\n          required: true\n          schema:\n            type: string\n      operationId: get-repo\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                description: \"\"\n                properties: {}\n              examples:\n                example1:\n                  value:\n                    id: \"1\"\n                    git_type: github\n                    rid: \"119219872\"\n                    repo_full_name: pcit-ce/pcit\n                    webhooks_status: null\n                    build_activate: null\n                    repo_admin: '[\"16733187\"]'\n                    repo_collaborators: null\n                    default_branch: master\n                    last_sync: \"1577893114\"\n                    secrets: null\n                    auto_merge: null\n                    private: \"0\"\n  \"/repo/{username}/{repo.name}/activate\":\n    post:\n      tags:\n        - Repositories.activate\n      summary: activate a repository\n      description: \"This will activate a repository, allowing its tests to be run on PCIT.\"\n      parameters:\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: repo.name\n          in: path\n          required: true\n          schema:\n            type: string\n      operationId: activate-repo\n      responses:\n        \"200\":\n          description: success\n  \"/repo/{username}/{repo.name}/deactivate\":\n    post:\n      tags:\n        - Repositories.activate\n      summary: deactivate a repository\n      description: \u003e-\n        This will deactivate a repository, preventing any tests from running on\n        PCIT.\n      parameters:\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: repo.name\n          in: path\n          required: true\n          schema:\n            type: string\n      operationId: deactivate-repo\n      responses:\n        \"200\":\n          description: success\n  \"/repo/{git_type}/{username}/{repo.name}/branches\":\n    get:\n      tags:\n        - Repositories.branches\n      summary: list branches\n      description: This will return a list of branches a repository has on GitHub.\n      parameters:\n        - name: git_type\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: repo.name\n          in: path\n          required: true\n          schema:\n            type: string\n      operationId: get-branches\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                description: \"\"\n                items: {}\n              examples:\n                example1:\n                  value:\n                    - gh-pages\n                    - master\n  \"/repo/{git_type}/{username}/{repo.name}/branch/{branch.name}\":\n    get:\n      tags:\n        - Repositories.branches\n      summary: find branch\n      description: This will return information about an individual branch.\n      parameters:\n        - name: git_type\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: repo.name\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: branch.name\n          in: path\n          required: true\n          schema:\n            type: string\n      operationId: get-branch\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                description: \"\"\n                items:\n                  $ref: \"#/components/schemas/builds\"\n              examples:\n                example1:\n                  value:\n                    - id: \"111\"\n                      branch: master\n                      commit_id: f807efaa677757682aa7a3f226d3e799086e90dd\n                      tag: null\n                      commit_message: |-\n                        Support actions\n\n                        Signed-off-by: Kang HuaiShuai\n                      compare: \u003e-\n                        https://github.com/pcit-ce/pcit/compare/6746c883155e...f807efaa6777\n                      committer_name: Kang HuaiShuai\n                      committer_username: khs1994\n                      build_status: queued\n                      event_type: push\n                    - id: \"109\"\n                      branch: master\n                      commit_id: 6746c883155ebb80014904211de818ee9c625338\n                      tag: null\n                      commit_message: |-\n                        Support actions\n\n                        Signed-off-by: Kang HuaiShuai\n                      compare: \u003e-\n                        https://github.com/pcit-ce/pcit/compare/4dfb85a30c05...6746c883155e\n                      committer_name: Kang HuaiShuai\n                      committer_username: khs1994\n                      build_status: failure\n                      event_type: push\n  \"/repo/{username}/{repo.name}/caches\":\n    get:\n      tags:\n        - Repositories.caches\n      summary: list repo caches\n      description: This returns all the caches for a repository.\n      parameters:\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: repo.name\n          in: path\n          required: true\n          schema:\n            type: string\n      operationId: get-repo-caches\n      responses:\n        \"200\":\n          description: success\n    delete:\n      tags:\n        - Repositories.caches\n      summary: delete repo all caches\n      description: This deletes all caches for a repository.\n      parameters:\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: repo.name\n          in: path\n          required: true\n          schema:\n            type: string\n      operationId: delete-repo-caches\n      responses:\n        \"200\":\n          description: success\n  \"/repo/{username}/{repo.name}/crons\":\n    get:\n      tags:\n        - Repositories.crons\n      summary: get repo crons\n      description: This returns a list of crons for an individual repository.\n      parameters:\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: repo.name\n          in: path\n          required: true\n          schema:\n            type: string\n      operationId: get-repo-crons\n      responses:\n        \"200\":\n          description: success\n  \"/cron/{cron.id}\":\n    get:\n      tags:\n        - Repositories.crons\n      summary: get single cron\n      description: This returns a single cron.\n      parameters:\n        - name: cron.id\n          in: path\n          required: true\n          schema:\n            type: integer\n      operationId: get-cron\n      responses:\n        \"200\":\n          description: success\n    delete:\n      tags:\n        - Repositories.crons\n      summary: delete single cron\n      description: This deletes a single cron.\n      parameters:\n        - name: cron.id\n          in: path\n          required: true\n          schema:\n            type: integer\n      operationId: delete-cron\n      responses:\n        \"200\":\n          description: success\n  \"/repo/{username}/{repo.name}/branch/{branch.name}/cron\":\n    get:\n      tags:\n        - Repositories.crons\n      summary: get repo branch cron\n      description: \u003e-\n        This returns the cron set for the specified branch for the specified\n        repository.\n      parameters:\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: repo.name\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: branch.name\n          in: path\n          required: true\n          schema:\n            type: string\n      operationId: get-repo-branch-cron\n      responses:\n        \"200\":\n          description: success\n    post:\n      tags:\n        - Repositories.crons\n      summary: create repo branch cron\n      description: \u003e-\n        This creates a cron on the specified branch for the specified\n        repository. Content-Type MUST be set in the header and an interval for\n        the cron MUST be specified as a parameter.\n      parameters:\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: repo.name\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: branch.name\n          in: path\n          required: true\n          schema:\n            type: string\n      operationId: create-repo-branch-cron\n      responses:\n        \"200\":\n          description: success\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                cron.interval:\n                  type: string\n                  description: \"interval, daily, weekly or monthly\"\n                cron.dont_run_if_recent_build_exists:\n                  type: boolean\n                  description: dont_run_if_recent_build_exists\n              required:\n                - cron.interval\n                - cron.dont_run_if_recent_build_exists\n            examples:\n              example1:\n                value:\n                  cron.interval: daily\n                  cron.dont_run_if_recent_build_exists: true\n  \"/repo/{username}/{repo.name}/env_vars\":\n    get:\n      tags:\n        - Repositories.env_vars\n      summary: repo env list\n      description: \u003e-\n        This returns a list of environment variables for an individual\n        repository.\n      parameters:\n        - name: username\n          description: username\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: repo.name\n          in: path\n          required: true\n          schema:\n            type: string\n      operationId: get-repo-env-list\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema: {}\n              examples:\n                example1:\n                  value:\n                    - id: \"33\"\n                      git_type: github\n                      rid: \"119219872\"\n                      name: ACCESS_TOKEN\n                      value: abcdefg\n                      public: \"0\"\n                    - id: \"4\"\n                      git_type: github\n                      rid: \"119219872\"\n                      name: CODECOV_TOKEN\n                      value: abcdefg\n                      public: \"0\"\n    post:\n      tags:\n        - Repositories.env_vars\n      summary: create repo env\n      description: This creates an environment variable for an individual repository.\n      parameters:\n        - name: username\n          description: username\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: repo.name\n          in: path\n          required: true\n          schema:\n            type: string\n      operationId: create-repo-env\n      responses:\n        \"200\":\n          description: success\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                env_var.name:\n                  type: string\n                env_var.value:\n                  type: string\n                env_var.public:\n                  type: string\n            examples:\n              example1:\n                value:\n                  env_var.name: k1\n                  env_var.value: v1\n                  env_var.public: \"0\"\n  \"/repo/{username}/{repo.name}/env_var/{env_var.id}\":\n    get:\n      tags:\n        - Repositories.env_vars\n      summary: get repo single env\n      description: This returns a single environment variable.\n      parameters:\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: repo.name\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: env_var.id\n          in: path\n          required: true\n          schema:\n            type: integer\n      operationId: get-repo-single-env\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema: {}\n              examples:\n                example1:\n                  value:\n                    id: \"4\"\n                    git_type: github\n                    rid: \"119219872\"\n                    name: CODECOV_TOKEN\n                    value: abcdef\n                    public: \"0\"\n    post:\n      tags:\n        - Repositories.env_vars\n      summary: update repo single env\n      description: This updates a single environment variable.\n      parameters:\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: repo.name\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: env_var.id\n          in: path\n          required: true\n          schema:\n            type: integer\n      operationId: update-repo-single-env\n      responses:\n        \"200\":\n          description: success\n      requestBody:\n        content:\n          application/json:\n            schema: {}\n            examples:\n              example1:\n                value:\n                  env_var.name: FOO\n                  env_var.value: bar\n                  env_var.public: false\n    delete:\n      tags:\n        - Repositories.env_vars\n      summary: delete repo single env\n      description: This deletes a single environment variable.\n      parameters:\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: repo.name\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: env_var.id\n          in: path\n          required: true\n          schema:\n            type: integer\n      operationId: delete repo single env\n      responses:\n        \"200\":\n          description: success\n  \"/repo/{username}/{repo.name}/requests\":\n    get:\n      tags:\n        - Repositories.requests\n      summary: get repo request list\n      description: This will return a list of requests belonging to a repository.\n      parameters:\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: repo.name\n          in: path\n          required: true\n          schema:\n            type: string\n      operationId: get-repo-request-list\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/repo-builds\"\n              examples:\n                example1:\n                  value:\n                    - id: \"112\"\n                      branch: gh-pages\n                      commit_id: 0fa67f2b1c0d59998b71035b402849f5075a3c60\n                      tag: null\n                      commit_message: \"Deploy Git by PCIT https://ci.khs1994.com\"\n                      compare: \u003e-\n                        https://github.com/pcit-ce/pcit/compare/d492689de936...0fa67f2b1c0d\n                      committer_name: pcit-ce\n                      committer_username: pcit-deploy-robot\n                      build_status: misconfigured\n                      event_type: push\n                      pull_request_number: null\n                      created_at: \"1577892876\"\n                      finished_at: null\n                    - id: \"111\"\n                      branch: master\n                      commit_id: f807efaa677757682aa7a3f226d3e799086e90dd\n                      tag: null\n                      commit_message: |-\n                        Support actions\n\n                        Signed-off-by: Kang HuaiShuai\n                      compare: \u003e-\n                        https://github.com/pcit-ce/pcit/compare/6746c883155e...f807efaa6777\n                      committer_name: Kang HuaiShuai\n                      committer_username: khs1994\n                      build_status: queued\n                      event_type: push\n                      pull_request_number: null\n                      created_at: \"1577892253\"\n                      finished_at: null\n    post:\n      tags:\n        - Repositories.requests\n      summary: create repo single request\n      description: \u003e-\n        This will create a request for an individual repository, triggering a\n        build to run on PCIT.\n      parameters:\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: repo.name\n          in: path\n          required: true\n          schema:\n            type: string\n      operationId: create-repo-single-request\n      responses:\n        \"200\":\n          description: success\n  \"/repo/{username}/{repo.name}/request/{request.id}\":\n    get:\n      tags:\n        - Repositories.requests\n      summary: get repo single request\n      description: This will return information about an individual request.\n      parameters:\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: repo.name\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: request.id\n          in: path\n          required: true\n          schema:\n            type: integer\n      operationId: get-repo-single-request\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/request\"\n              examples:\n                example1:\n                  value:\n                    id: \"111\"\n                    git_type: github\n                    rid: \"119219872\"\n                    event_type: push\n                    build_status: queued\n                    branch: master\n                    tag: null\n                    pull_request_title: null\n                    pull_request_number: null\n                    pull_request_source: null\n                    compare: \u003e-\n                      https://github.com/pcit-ce/pcit/compare/6746c883155e...f807efaa6777\n                    commit_id: f807efaa677757682aa7a3f226d3e799086e90dd\n                    commit_message: |-\n                      Support actions\n\n                      Signed-off-by: Kang HuaiShuai\n                    committer_uid: null\n                    committer_name: Kang HuaiShuai\n                    committer_username: khs1994\n                    committer_email: khs1994@khs1994.com\n                    committer_pic: null\n                    author_uid: null\n                    author_name: Kang HuaiShuai\n                    author_username: khs1994\n                    author_email: khs1994@khs1994.com\n                    author_pic: null\n                    created_at: \"1577892253\"\n                    finished_at: null\n                    deleted_at: null\n                    config: \"{}\"\n                    action: null\n                    check_suites_id: null\n                    internal: \"1\"\n                    private: \"0\"\n                    unique_key: \"0\"\n  \"/repo/{username}/{repo.name}/settings\":\n    get:\n      tags:\n        - Repositories.settings\n      summary: get repo setting list\n      description: This returns a list of the settings for that repository.\n      parameters:\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: repo.name\n          in: path\n          required: true\n          schema:\n            type: string\n      operationId: get-repo-setting-list\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  build_pushes: {}\n                  build_pull_requests: {}\n                  maximum_number_of_builds: {}\n                  auto_cancel_branch_builds: {}\n                  auto_cancel_pull_request_builds: {}\n              examples:\n                example1:\n                  value:\n                    build_pushes: \"1\"\n                    build_pull_requests: \"1\"\n                    maximum_number_of_builds: \"1\"\n                    auto_cancel_branch_builds: \"0\"\n                    auto_cancel_pull_request_builds: \"0\"\n  \"/repo/{username}/{repo.name}/setting/{setting.name}\":\n    get:\n      tags:\n        - Repositories.settings\n      summary: get repo single setting\n      description: This returns a single setting.\n      parameters:\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: repo.name\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: setting.name\n          in: path\n          required: true\n          schema:\n            type: string\n      operationId: get-repo-single-setting\n      responses:\n        \"200\":\n          description: success\n          content: {}\n    post:\n      tags:\n        - Repositories.settings\n      summary: update repo single setting\n      description: This updates a single setting.\n      parameters:\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: repo.name\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: setting.name\n          in: path\n          required: true\n          schema:\n            type: string\n      operationId: update-repo-single-setting\n      responses:\n        \"200\":\n          description: success\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                setting.value:\n                  type: string\n            examples:\n              example1:\n                value:\n                  setting.value: \"1\"\n  \"/repo/{username}/{repo.name}/star\":\n    post:\n      tags:\n        - Repositories.star\n      summary: star a repo\n      description: This will star a repository based on the currently logged in user.\n      parameters:\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: repo.name\n          in: path\n          required: true\n          schema:\n            type: string\n      operationId: star-repo\n      responses:\n        \"200\":\n          description: success\n  \"/repo/{username}/{repo.name}/unstar\":\n    post:\n      tags:\n        - Repositories.star\n      summary: unstar a repo\n      description: This will unstar a repository based on the currently logged in user.\n      parameters:\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: repo.name\n          in: path\n          required: true\n          schema:\n            type: string\n      operationId: unstar-repo\n      responses:\n        \"200\":\n          description: success\n  \"/repo/{username}/{repo.name}/issues/translate/{issue.number}\":\n    patch:\n      tags:\n        - Repositories.issues\n      summary: translate issue title\n      description: translate issue title\n      parameters:\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: repo.name\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: issue.number\n          in: path\n          required: true\n          schema:\n            type: integer\n      operationId: translate-issue-title\n      responses:\n        \"200\":\n          description: success\n  /user/token:\n    post:\n      tags:\n        - User\n      summary: get token\n      description: get token by git username and password\n      parameters: []\n      operationId: get-token\n      responses:\n        \"200\":\n          description: success\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                git_type:\n                  type: string\n                username:\n                  type: string\n                password:\n                  type: string\n            examples:\n              example1:\n                value:\n                  git_type: github\n                  username: username\n                  password: MyPassword\n  /user:\n    get:\n      tags:\n        - User\n      summary: get current user info\n      description: This will return information about the current user.\n      parameters: []\n      operationId: get-current-user-info\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema: {}\n              examples:\n                example1:\n                  value:\n                    id: \"1\"\n                    git_type: github\n                    uid: \"16733187\"\n                    name: null\n                    username: khs1994\n                    email: khs1994@khs1994.com\n                    pic: \"https://avatars2.githubusercontent.com/u/16733187?v=4\"\n                    access_token: abcdefg\n                    refresh_token: null\n                    org_admin: null\n                    type: user\n                    installation_id: \"0\"\n  \"/user/{git_type}/{username}\":\n    get:\n      tags:\n        - User\n      summary: get a user info\n      description: This will return information about an individual user.\n      parameters:\n        - name: git_type\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n      operationId: get-user-info\n      responses:\n        \"200\":\n          description: sucess\n          content:\n            application/json:\n              schema: {}\n              examples:\n                example1:\n                  value:\n                    id: \"1\"\n                    git_type: github\n                    uid: \"16733187\"\n                    name: null\n                    username: khs1994\n                    email: khs1994@khs1994.com\n                    pic: \"https://avatars2.githubusercontent.com/u/16733187?v=4\"\n                    access_token: abcdefg\n                    refresh_token: null\n                    org_admin: null\n                    type: user\n                    installation_id: \"0\"\n  /user/sync:\n    post:\n      tags:\n        - User\n      summary: sync user info\n      description: This triggers a sync on a user's account with their GitHub account.\n      parameters: []\n      operationId: sync-user-info\n      responses:\n        \"200\":\n          description: success\n  \"/user/{git_type}/{owner.login}/active\":\n    get:\n      tags:\n        - User\n      summary: get current user active repo list\n      description: \u003e-\n        A list of all the builds in an \"active\" state, either created or\n        started.\n      parameters:\n        - name: git_type\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: owner.login\n          in: path\n          required: true\n          schema:\n            type: string\n      operationId: \"\"\n      responses:\n        \"200\":\n          description: success\n  \"/user/{user.name}/beta_features\":\n    get:\n      tags:\n        - User.beta_features\n      summary: get user beta features\n      description: This will return a list of beta features available to a user.\n      parameters:\n        - name: user.name\n          in: path\n          required: true\n          schema:\n            type: string\n      operationId: \"\"\n      responses:\n        \"200\":\n          description: success\n  \"/user/{user.name}/beta_feature/{beta_feature.id}\":\n    patch:\n      tags:\n        - User.beta_features\n      summary: update user beta features\n      description: This will update a user's beta_feature.\n      parameters:\n        - name: user.name\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: beta_feature.id\n          in: path\n          required: true\n          schema:\n            type: string\n      operationId: \"\"\n      responses:\n        \"200\":\n          description: success\n    delete:\n      tags:\n        - User.beta_features\n      summary: delete user beta features\n      description: This will delete a user's beta feature.\n      parameters:\n        - name: user.name\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: beta_feature.id\n          in: path\n          required: true\n          schema:\n            type: string\n      operationId: \"\"\n      responses:\n        \"200\":\n          description: success\n  /ci/oauth_client_id:\n    get:\n      tags:\n        - System\n      summary: get oauth client id\n      description: get oauth client id\n      parameters: []\n      operationId: \"\"\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  url:\n                    type: string\n              examples:\n                example1:\n                  value:\n                    url: \u003e-\n                      https://github.com/settings/connections/applications/35cb33c242b808b26270\n  /ci/pending:\n    get:\n      tags:\n        - System\n      summary: get pending jobs number\n      description: get pending jobs number\n      parameters: []\n      operationId: \"\"\n      responses:\n        \"200\":\n          description: success\n  \"/ci/github_app_installation/{uid}\":\n    get:\n      tags:\n        - System\n      summary: get a user or org github app installation url\n      description: get a user or org github app installation url\n      parameters:\n        - name: uid\n          in: path\n          required: true\n          schema:\n            type: integer\n      operationId: \"\"\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  url:\n                    type: string\n              examples:\n                example1:\n                  value:\n                    url: \u003e-\n                      https://github.com/apps/pcit-ce2/installations/new/permissions?suggested_target_id=31106763\n  \"/ci/github_app_settings/{org_name}\":\n    get:\n      tags:\n        - System\n      summary: get pcit github app settings url\n      description: get pcit github app settings url\n      parameters:\n        - name: org_name\n          in: path\n          required: true\n          description: org name\n          schema:\n            type: string\n      operationId: \"\"\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  url:\n                    type: string\n              examples:\n                example1:\n                  value:\n                    url: \u003e-\n                      https://github.com/organizations/pcit-ce/settings/installations\n  /ci/about:\n    get:\n      tags:\n        - System\n      summary: get pcit about info\n      description: get pcit about info\n      parameters: []\n      operationId: \"\"\n      responses:\n        \"200\":\n          description: success\n  /ci/changelog:\n    get:\n      tags:\n        - System\n      summary: get pcit about changelog\n      description: get pcit about changelog\n      parameters: []\n      operationId: \"\"\n      responses:\n        \"200\":\n          description: success\n  /metrics:\n    get:\n      tags:\n        - System\n      summary: get pcit metrics\n      description: get pcit metrics\n      parameters: []\n      operationId: \"\"\n      responses:\n        \"200\":\n          description: success\n          content:\n            text/plain:\n              schema:\n                type: string\n  /healthz:\n    get:\n      tags:\n        - System\n      summary: get pcit healthz\n      description: get pcit healthz\n      parameters: []\n      operationId: \"\"\n      responses:\n        \"200\":\n          description: success\n          content:\n            text/plain:\n              schema:\n                type: string\n              examples:\n                example1:\n                  value: ok\n  /readyz:\n    get:\n      tags:\n        - System\n      summary: get pcit readyz\n      description: get pcit readyz\n      parameters: []\n      operationId: \"\"\n      responses:\n        \"200\":\n          description: success\n          content:\n            text/plain:\n              schema:\n                type: string\n              examples:\n                example1:\n                  value: ok\n  /livez:\n    get:\n      tags:\n        - System\n      summary: get pcit livez\n      description: get pcit livez\n      parameters: []\n      operationId: \"\"\n      responses:\n        \"200\":\n          description: success\n          content:\n            text/plain:\n              schema:\n                type: string\n              examples:\n                example1:\n                  value: ok\n  /openapi:\n    get:\n      tags:\n        - System\n      summary: openapi\n      description: return openapi json\n      parameters:\n        - name: coding\n          description: openapi for coding.net\n          in: query\n          required: false\n          schema:\n            type: boolean\n            default: false\n      operationId: openapi\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                description: openapi\n  /openapi/v3:\n    get:\n      tags:\n        - System\n      summary: openapi v3\n      description: return openapi json\n      parameters:\n        - name: coding\n          description: openapi for coding.net\n          in: query\n          required: false\n          schema:\n            type: boolean\n            default: false\n      operationId: openapi\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                description: openapi\n  /validate:\n    post:\n      tags:\n        - System\n      summary: validate .pcit.yml\n      description: validate .pcit.yml\n      operationId: validate\n      requestBody:\n        content:\n          plain/text:\n            schema:\n              type: string\n            examples:\n              example1:\n                value: |-\n                  language: php\n\n                  steps:\n                    script: echo exec script\n          application/json:\n            schema:\n              type: string\n            examples:\n              example:\n                value: |-\n                  {\"language\": \"php\",\"steps\":{\"script\":\"echo exec script\"}}\n      responses:\n        \"200\":\n          description: validate result\n          content:\n            plain/text:\n              schema:\n                type: string\n                description: validate passed\n              examples:\n                example1:\n                  value: \"ok\"\n            application/json:\n              schema:\n                type: array\n                description: validate error\n                items:\n                  type: object\n              examples:\n                example1:\n                  value:\n                    - steps: The property steps is required\n                    - \"\": The property lanuage is not defined and the definition does not allow additional properties\n                    - \"\": The property test is not defined and the definition does not allow additional properties\ncomponents:\n  parameters:\n    org_name:\n      name: org_name\n      in: path\n      description: org name\n      required: true\n      schema:\n        type: string\n  schemas:\n    builds:\n      title: build list\n      type: object\n      description: builds list\n      properties:\n        id:\n          type: integer\n          description: builds id\n        branch:\n          type: string\n          description: trigger branch\n        commit_id:\n          type: string\n          description: commit sha\n        tag:\n          type: string\n          description: tag name\n        commit_message:\n          type: string\n          description: commit message\n        compare:\n          type: string\n          description: compare url\n        commiter_name:\n          type: string\n          description: committer name\n        committer_username:\n          type: string\n          description: committer username\n        build_status:\n          type: string\n          description: build status\n        event_type:\n          type: string\n          description: event type\n        pull_request_number:\n          type: integer\n          description: pull request number\n    repo-builds:\n      title: repo build list\n      description: repo build list\n      type: object\n      properties:\n        id:\n          type: integer\n          description: builds id\n        branch:\n          type: string\n          description: trigger branch\n        commit_id:\n          type: string\n          description: commit sha\n        tag:\n          type: string\n          description: tag name\n        commit_message:\n          type: string\n          description: commit message\n        compare:\n          type: string\n          description: compare url\n        commiter_name:\n          type: string\n          description: committer name\n        committer_username:\n          type: string\n          description: committer username\n        build_status:\n          type: string\n          description: build status\n        event_type:\n          type: string\n          description: event type\n        pull_request_number:\n          type: integer\n          description: pull request number\n        created_at:\n          type: integer\n          description: created time\n        finished_at:\n          type: integer\n          description: finished time\n    build-detail:\n      title: build detail\n      description: build detail\n      type: object\n      properties:\n        id:\n          type: integer\n          description: build id\n        git_type:\n          type: string\n          description: git type\n        rid:\n          type: integer\n          description: repo id\n        event_type:\n          type: string\n          description: event type\n        build_status:\n          type: string\n          description: build status\n        branch:\n          type: string\n          description: branch\n        tag:\n          type: string\n          description: tag name\n        pull_request_title:\n          type: string\n          description: pull request title\n        pull_request_number:\n          type: integer\n          description: pull request number\n        pull_request_source:\n          type: string\n          description: pull request source repo\n        compare:\n          type: string\n          description: compare url\n        commit_id:\n          type: string\n          description: commit sha\n        commit_message:\n          type: string\n          description: commit message\n        committer_uid:\n          type: integer\n          description: committer uid\n        committer_name:\n          type: string\n          description: committer name\n        committer_username:\n          type: string\n          description: committer username\n        committer_email:\n          type: string\n          description: committer email\n        committer_pic:\n          type: string\n          description: committer pic\n        author_uid:\n          type: integer\n          description: author uid\n        author_name:\n          type: string\n          description: author name\n        author_username:\n          type: string\n          description: author username\n        author_email:\n          type: string\n          description: author email\n        author_pic:\n          type: string\n          description: author pic\n        created_at:\n          type: integer\n          description: create time\n        finished_at:\n          type: integer\n          description: finish time\n        deleted_at:\n          type: integer\n          description: delete time\n        config:\n          type: string\n          description: pcit config string\n        action:\n          type: string\n          description: action\n        check_suites_id:\n          type: integer\n          description: check suites id\n        internal:\n          type: integer\n          description: internal\n        private:\n          type: boolean\n          description: is private\n        unique_key:\n          type: string\n          description: unique key\n        jobs:\n          type: array\n          items:\n            $ref: \"#/components/schemas/jobs\"\n    request:\n      title: request\n      type: object\n      properties:\n        id:\n          type: integer\n          description: build id\n        git_type:\n          type: string\n          description: git type\n        rid:\n          type: integer\n          description: repo id\n        event_type:\n          type: string\n          description: event type\n        build_status:\n          type: string\n          description: build status\n        branch:\n          type: string\n          description: branch\n        tag:\n          type: string\n          description: tag name\n        pull_request_title:\n          type: string\n          description: pull request title\n        pull_request_number:\n          type: integer\n          description: pull request number\n        pull_request_source:\n          type: string\n          description: pull request source repo\n        compare:\n          type: string\n          description: compare url\n        commit_id:\n          type: string\n          description: commit sha\n        commit_message:\n          type: string\n          description: commit message\n        committer_uid:\n          type: integer\n          description: committer uid\n        committer_name:\n          type: string\n          description: committer name\n        committer_username:\n          type: string\n          description: committer username\n        committer_email:\n          type: string\n          description: committer email\n        committer_pic:\n          type: string\n          description: committer pic\n        author_uid:\n          type: integer\n          description: author uid\n        author_name:\n          type: string\n          description: author name\n        author_username:\n          type: string\n          description: author username\n        author_email:\n          type: string\n          description: author email\n        author_pic:\n          type: string\n          description: author pic\n        created_at:\n          type: integer\n          description: create time\n        finished_at:\n          type: integer\n          description: finish time\n        deleted_at:\n          type: integer\n          description: delete time\n        config:\n          type: string\n          description: pcit config string\n        action:\n          type: string\n          description: action\n        check_suites_id:\n          type: integer\n          description: check suites id\n        internal:\n          type: integer\n          description: internal\n        private:\n          type: boolean\n          description: is private\n        unique_key:\n          type: string\n          description: unique key\n    jobs:\n      title: job list\n      type: object\n      description: job list\n      properties:\n        id:\n          type: integer\n          description: job id\n        allow_failure:\n          type: boolean\n          description: allow_failure\n        state:\n          type: string\n          description: job state\n        started_at:\n          type: integer\n          description: starte time\n        finished_at:\n          type: integer\n          description: finish time\n        created_at:\n          type: integer\n          description: create time\n        updated_at:\n          type: integer\n          description: update time\n        deleted_at:\n          type: integer\n          description: delete time\n        build_id:\n          type: integer\n          description: job build id\n        build_log:\n          type: string\n          description: build log\n        check_run_id:\n          type: integer\n          description: github check run id\n        config:\n          type: string\n          description: config\n        env_vars:\n          type: string\n          description: env vars\n        container_config:\n          type: string\n          description: container config\n    org:\n      title: org\n      description: \"\"\n      type: object\n      properties:\n        id:\n          type: integer\n        git_type:\n          type: string\n        uid:\n          type: integer\n        name:\n          type: string\n        username:\n          type: string\n        email:\n          type: string\n          description: email\n        pic:\n          type: string\n          description: pic url\n        access_token:\n          type: string\n        refresh_token:\n          type: string\n        org_admin:\n          type: string\n          description: org admin\n        type:\n          type: string\n          description: org or user\n        installation_id:\n          type: integer\n          description: \"\"\n    repos: {}\n    repo-detail: {}\n  requestBodies: {}\n  securitySchemes:\n    BearerToken:\n      type: apiKey\n      description: Bearer Token\n      in: header\n      name: Authorization\n  links: {}\n  callbacks: {}\nsecurity:\n  - BearerToken: []\nexternalDocs:\n  description: PCIT API\n  url: \"https://docs.ci.khs1994.com\"\n"
		}
	},
	"Error": "parse: parse spec: paths: /openapi/v3: get: duplicate operationId: \"openapi\""
}