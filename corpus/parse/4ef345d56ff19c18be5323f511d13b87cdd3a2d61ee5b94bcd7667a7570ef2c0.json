{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/grinat/moleculer-auto-openapi"
		},
		"file": {
			"name": "expectedSchema.json",
			"size": 0,
			"path": "test/expectedSchema.json",
			"byteSize": 18453,
			"content": "{\n  \"info\": {\n    \"description\": \"Foo\",\n    \"title\": \"Bar\",\n    \"version\": \"0.0.0\"\n  },\n  \"openapi\": \"3.0.3\",\n  \"tags\": [\n    {\n      \"name\": \"auth\"\n    },\n    {\n      \"name\": \"some\"\n    }\n  ],\n  \"paths\": {\n    \"/api/login-custom-function\": {\n      \"post\": {\n        \"summary\": \"Login\\n            (unknown-action)\",\n        \"tags\": [\n          \"auth\"\n        ],\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/ReturnedData\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/ValidationError\"\n          },\n          \"default\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"example\": {\n                  \"login\": \"\",\n                  \"pass\": \"\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/upload\": {\n      \"put\": {\n        \"summary\": \"(some.upload)\",\n        \"tags\": [\n          \"some\"\n        ],\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"example\": {\n                      \"id\": 1,\n                      \"filename\": \"foo.txt\",\n                      \"mimetype\": \"text/plain\",\n                      \"sizeInBytes\": 100\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/FileNotExist\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"413\": {\n            \"$ref\": \"#/components/responses/FileTooBig\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/ValidationError\"\n          },\n          \"default\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"file\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    }\n                  },\n                  \"someField\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/update/{id}\": {\n      \"patch\": {\n        \"summary\": \"Foo bar baz\\n            (some.update)\",\n        \"tags\": [\n          \"some\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/ReturnedData\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/ValidationError\"\n          },\n          \"default\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/some.update\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/find\": {\n      \"get\": {\n        \"summary\": \"Some find summary\\n            (some.find)\",\n        \"tags\": [\n          \"some\"\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"roles[]\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"example\": \"user\",\n                \"type\": \"string\",\n                \"enum\": [\n                  \"user\",\n                  \"admin\"\n                ]\n              }\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"sex\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"male\",\n                \"female\"\n              ],\n              \"example\": \"male\"\n            }\n          },\n          {\n            \"name\": \"populate[]\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"example\": \"\",\n                \"type\": \"string\"\n              },\n              \"minItems\": 2,\n              \"maxItems\": 2\n            }\n          },\n          {\n            \"name\": \"fields[]\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"example\": \"\",\n                \"type\": \"string\"\n              },\n              \"minItems\": 2,\n              \"maxItems\": 2\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"limit\",\n            \"schema\": {\n              \"example\": null,\n              \"type\": \"number\",\n              \"minLength\": 0\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"offset\",\n            \"schema\": {\n              \"example\": null,\n              \"type\": \"number\",\n              \"minLength\": 0\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"sort\",\n            \"schema\": {\n              \"example\": \"\",\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"in\": \"query\",\n            \"name\": \"search\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"find me now\"\n            }\n          },\n          {\n            \"name\": \"searchFields[]\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"example\": \"\",\n                \"type\": \"string\"\n              },\n              \"minItems\": 2,\n              \"maxItems\": 2\n            }\n          },\n          {\n            \"name\": \"query[]\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"example\": \"\",\n                \"type\": \"string\"\n              },\n              \"minItems\": 2,\n              \"maxItems\": 2\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/ReturnedData\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/ValidationError\"\n          },\n          \"default\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        }\n      }\n    },\n    \"/api/go\": {\n      \"post\": {\n        \"summary\": \"(some.go)\",\n        \"tags\": [\n          \"some\"\n        ],\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"example\": {\n                    \"line\": \"number\",\n                    \"text\": \"string\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/ValidationError\"\n          },\n          \"default\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/some.go\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/some-login\": {\n      \"post\": {\n        \"summary\": \"(some.login)\",\n        \"tags\": [\n          \"some\"\n        ],\n        \"parameters\": [],\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/ReturnedData\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/UnauthorizedError\"\n          },\n          \"422\": {\n            \"$ref\": \"#/components/responses/ValidationError\"\n          },\n          \"default\": {\n            \"$ref\": \"#/components/responses/ServerError\"\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/some.login\"\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"DbMixinList\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"rows\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\"\n            }\n          },\n          \"totalCount\": {\n            \"type\": \"number\"\n          }\n        }\n      },\n      \"DbMixinFindList\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\"\n        }\n      },\n      \"Item\": {\n        \"type\": \"object\"\n      },\n      \"unknown-action\": {\n        \"type\": \"object\",\n        \"properties\": {}\n      },\n      \"some.upload\": {\n        \"type\": \"object\",\n        \"properties\": {}\n      },\n      \"some.update\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"roles\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"example\": \"user\",\n              \"type\": \"string\",\n              \"enum\": [\n                \"user\",\n                \"admin\"\n              ]\n            }\n          },\n          \"sex\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"male\",\n              \"female\"\n            ],\n            \"default\": \"female\"\n          },\n          \"numberBy\": {\n            \"example\": null,\n            \"type\": \"number\"\n          },\n          \"someNum\": {\n            \"description\": \"Is some num\",\n            \"example\": null,\n            \"type\": \"number\"\n          },\n          \"types\": {\n            \"description\": \"Types arr\",\n            \"type\": \"array\",\n            \"default\": [\n              {\n                \"id\": 1,\n                \"typeId\": 5\n              }\n            ],\n            \"minItems\": 1,\n            \"maxItems\": 1,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/some.update.types\"\n            }\n          },\n          \"bars\": {\n            \"description\": \"Bars arr\",\n            \"type\": \"array\",\n            \"minItems\": 1,\n            \"maxItems\": 2,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/some.update.bars\"\n            }\n          },\n          \"someObj\": {\n            \"description\": \"Some obj\",\n            \"$ref\": \"#/components/schemas/some.update.someObj\"\n          },\n          \"someBool\": {\n            \"example\": false,\n            \"type\": \"boolean\"\n          },\n          \"desc\": {\n            \"example\": \"\",\n            \"type\": \"string\",\n            \"minLength\": 4,\n            \"maxLength\": 10\n          },\n          \"email\": {\n            \"example\": \"foo@example.com\",\n            \"type\": \"string\",\n            \"format\": \"email\"\n          },\n          \"date\": {\n            \"example\": \"1998-01-10T13:00:00.000Z\",\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"uuid\": {\n            \"example\": \"10ba038e-48da-487b-96e8-8d3b99b6d18a\",\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n          },\n          \"url\": {\n            \"example\": \"https://example.com\",\n            \"type\": \"string\",\n            \"format\": \"uri\"\n          },\n          \"shortObject\": {\n            \"$ref\": \"#/components/schemas/some.update.shortObject\"\n          },\n          \"shortObject2\": {\n            \"$ref\": \"#/components/schemas/some.update.shortObject2\"\n          }\n        },\n        \"required\": [\n          \"sex\",\n          \"numberBy\",\n          \"someNum\",\n          \"types\",\n          \"bars\",\n          \"someObj\",\n          \"email\",\n          \"uuid\",\n          \"url\",\n          \"shortObject\"\n        ],\n        \"minItems\": 1,\n        \"maxItems\": 2\n      },\n      \"some.update.types\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"example\": null,\n            \"type\": \"number\"\n          },\n          \"typeId\": {\n            \"example\": null,\n            \"type\": \"number\"\n          }\n        },\n        \"default\": [\n          {\n            \"id\": 1,\n            \"typeId\": 5\n          }\n        ]\n      },\n      \"some.update.bars\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"example\": null,\n            \"type\": \"number\"\n          },\n          \"fooNum\": {\n            \"description\": \"fooNum\",\n            \"example\": null,\n            \"type\": \"number\"\n          }\n        }\n      },\n      \"some.update.someObj\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"description\": \"Some obj ID\",\n            \"example\": null,\n            \"type\": \"number\"\n          },\n          \"numberId\": {\n            \"example\": null,\n            \"type\": \"number\"\n          },\n          \"name\": {\n            \"example\": \"\",\n            \"type\": \"string\",\n            \"maxLength\": 100\n          }\n        },\n        \"default\": {\n          \"name\": \"bar\"\n        }\n      },\n      \"some.update.shortObject\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"desc\": {\n            \"example\": \"\",\n            \"type\": \"string\",\n            \"maxLength\": 10000\n          },\n          \"url\": {\n            \"example\": \"https://example.com\",\n            \"type\": \"string\",\n            \"format\": \"uri\"\n          }\n        },\n        \"required\": [\n          \"url\"\n        ]\n      },\n      \"some.update.shortObject2\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"desc\": {\n            \"example\": \"\",\n            \"type\": \"string\",\n            \"maxLength\": 10000\n          },\n          \"url\": {\n            \"example\": \"https://example.com\",\n            \"type\": \"string\",\n            \"format\": \"uri\"\n          }\n        },\n        \"required\": [\n          \"url\"\n        ]\n      },\n      \"some.go\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"line\": {\n            \"example\": null,\n            \"type\": \"number\"\n          }\n        },\n        \"required\": [\n          \"line\"\n        ]\n      },\n      \"some.login\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"password\": {\n            \"example\": \"\",\n            \"type\": \"string\",\n            \"minLength\": 8,\n            \"pattern\": \"^[a-zA-Z0-9]+$\"\n          },\n          \"repeatPassword\": {\n            \"example\": \"\",\n            \"type\": \"string\",\n            \"minLength\": 8,\n            \"pattern\": \"^[a-zA-Z0-9]+$\"\n          }\n        },\n        \"required\": [\n          \"password\",\n          \"repeatPassword\"\n        ]\n      }\n    },\n    \"securitySchemes\": {},\n    \"responses\": {\n      \"ServerError\": {\n        \"description\": \"Server errors: 500, 501, 400, 404 and etc...\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"example\": {\n                \"name\": \"MoleculerClientError\",\n                \"message\": \"Server error message\",\n                \"code\": 500\n              }\n            }\n          }\n        }\n      },\n      \"UnauthorizedError\": {\n        \"description\": \"Need auth\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"example\": {\n                \"name\": \"MoleculerClientError\",\n                \"message\": \"Unauth error message\",\n                \"code\": 401\n              }\n            }\n          }\n        }\n      },\n      \"ValidationError\": {\n        \"description\": \"Fields invalid\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"example\": {\n                \"name\": \"MoleculerClientError\",\n                \"message\": \"Error message\",\n                \"code\": 422,\n                \"data\": [\n                  {\n                    \"name\": \"fieldName\",\n                    \"message\": \"Field invalid\"\n                  },\n                  {\n                    \"name\": \"arrayField[0].fieldName\",\n                    \"message\": \"Whats wrong\"\n                  },\n                  {\n                    \"name\": \"object.fieldName\",\n                    \"message\": \"Whats wrong\"\n                  }\n                ]\n              }\n            }\n          }\n        }\n      },\n      \"ReturnedData\": {\n        \"description\": \"\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DbMixinList\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/DbMixinFindList\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/Item\"\n                }\n              ]\n            }\n          }\n        }\n      },\n      \"FileNotExist\": {\n        \"description\": \"File not exist\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"example\": {\n                \"name\": \"MoleculerClientError\",\n                \"message\": \"File missing in the request\",\n                \"code\": 400\n              }\n            }\n          }\n        }\n      },\n      \"FileTooBig\": {\n        \"description\": \"File too big\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"example\": {\n                \"name\": \"PayloadTooLarge\",\n                \"message\": \"Payload too large\",\n                \"code\": 413,\n                \"type\": \"PAYLOAD_TOO_LARGE\",\n                \"data\": {\n                  \"fieldname\": \"file\",\n                  \"filename\": \"4b2005c0b8.png\",\n                  \"encoding\": \"7bit\",\n                  \"mimetype\": \"image/png\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/grinat/moleculer-auto-openapi@97be33835caee22362632bc82180e1ca862637d1/-/blob/test/expectedSchema.json",
			"externalURLs": [
				{
					"url": "https://github.com/grinat/moleculer-auto-openapi/blob/97be33835caee22362632bc82180e1ca862637d1/test/expectedSchema.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"some.update\": parse schema: property \"types\": parse schema: item: parse schema: resolve \"#/components/schemas/some.update.types\": parse default: unexpected type: \"object\""
}