{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/SatoshiPortal/cyphernode"
		},
		"file": {
			"name": "cyphernode-api.yaml",
			"size": 0,
			"path": "doc/openapi/v1/cyphernode-api.yaml",
			"byteSize": 9788,
			"content": "openapi: 3.0.0\ninfo:\n  description: \"Cyphernode API v1\"\n  version: \"1.0.0\"\n  title: \"Cyphernode API\"\nexternalDocs:\n  description: \"Find out more about Swagger\"\n  url: \"http://swagger.io\"\nservers:\n  - url: /v1\n    description: authoring\n  - url: http://localhost:8888/v1\n    description: local cyphernode\ntags:\n  - name: \"cyphernode\"\n    description: \"Everything bitcoin\"\n    externalDocs:\n      description: \"Find out more\"\n      url: \"http://cyphernode.io\"\n  - name: \"openapi generator\"\n    externalDocs:\n      description: \"Find out more\"\n      url: \"https://github.com/OpenAPITools/openapi-generator\"\n  - name: \"watchedAddress\"\n    description: \"Watch addresses\"\n  - name: \"block\"\n    description: \"Block information\"\npaths:\n  /watchedAddress:\n    post:\n      tags:\n        - \"watchedAddress\"\n      summary: \"Add a new address to ne watched\"\n      description: \"Inserts the address and callbacks in the DB and imports the address to the Watching wallet.\"\n      operationId: \"addWatchedAddress\"\n      requestBody:\n        description: \"Address that needs to be watched\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WatchedAddress'\n      responses:\n        201:\n          description: \"successfully created\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WatchedAddress'\n        401:\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        405:\n          $ref: '#/components/schemas/ApiResponseInvalidInput'\n        503:\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n      security:\n        - BearerAuth: []\n    get:\n      tags:\n        - \"watchedAddress\"\n      summary: \"Get list of watched addresses\"\n      description: \"Returns the list of currently watched addresses and callback information.\"\n      operationId: \"listWatchedAddress\"\n      responses:\n        200:\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items:\n                  $ref: '#/components/schemas/WatchedAddress'\n        401:\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        503:\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n      security:\n        - BearerAuth: []\n  /watchedAddress/{address}:\n    get:\n      parameters:\n        - in: \"path\"\n          name: \"address\"\n          description: \"Address\"\n          required: true\n          schema:\n            $ref: '#/components/schemas/TypeAddressString'\n      tags:\n        - \"watchedAddress\"\n      summary: \"Show watched address\"\n      description: \"\"\n      operationId: \"getWatchedAddress\"\n      responses:\n        200:\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WatchedAddress'\n        401:\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        404:\n          $ref: '#/components/schemas/ApiResponseNotFound'\n        503:\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n      security:\n        - BearerAuth: []\n    delete:\n      parameters:\n        - in: \"path\"\n          name: \"address\"\n          description: \"Address\"\n          required: true\n          schema:\n            $ref: '#/components/schemas/TypeAddressString'\n      tags:\n        - \"watchedAddress\"\n      summary: \"Delete watched address\"\n      description: \"Updates the watched address row in DB so that callbacks won't be called on tx confirmations for that address.\"\n      operationId: \"deleteWatchedAddress\"\n      responses:\n        200:\n          description: \"successful operation\"\n        401:\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        404:\n          $ref: '#/components/schemas/ApiResponseNotFound'\n        503:\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n      security:\n        - BearerAuth: []\n  /block/{blockHash}:\n    get:\n      parameters:\n        - in: \"path\"\n          name: \"blockHash\"\n          description: \"Blockhash\"\n          required: true\n          schema:\n            $ref: '#/components/schemas/TypeHashString'\n      tags:\n        - \"block\"\n      summary: \"Show block info\"\n      description: \"\"\n      operationId: \"getBlockInfo\"\n      responses:\n        200:\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Block'\n        401:\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        404:\n          $ref: '#/components/schemas/ApiResponseNotFound'\n        503:\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n      security:\n        - BearerAuth: []\n  /block/best:\n    get:\n      tags:\n        - \"block\"\n      summary: \"Get the best block info\"\n      description: \"\"\n      operationId: \"getBestBlockInfo\"\n      responses:\n        200:\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Block'\n        401:\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        503:\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n      security:\n        - BearerAuth: []\n  /block/bestHash:\n    get:\n      tags:\n        - \"block\"\n      summary: \"Get the best block hash.\"\n      description: \"Returns the best block hash of the watching Bitcoin node.\"\n      operationId: \"getBestBlockHash\"\n      responses:\n        200:\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TypeHashString'\n        401:\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        503:\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n      security:\n        - BearerAuth: []\ncomponents:\n  schemas:\n    WatchedAddress:\n      type: \"object\"\n      required:\n        - \"address\"\n        - \"callback\"\n      properties:\n        id:\n          type: \"integer\"\n        address:\n          $ref: '#/components/schemas/TypeAddressString'\n        callback:\n          description: \"Async callback in case of activity on address\"\n          type: \"string\"\n          format: \"url\"\n        estimatesmartfee2blocks:\n          type: \"number\"\n        estimatesmartfee6blocks:\n          type: \"number\"\n        estimatesmartfee36blocks:\n          type: \"number\"\n        estimatesmartfee144blocks:\n          type: \"number\"\n        watching_since:\n          type: \"string\"\n          format: \"date-time\"\n    Block:\n      type: \"object\"\n      required:\n        - \"address\"\n        - \"callback\"\n      properties:\n        id:\n          type: \"integer\"\n        hash:\n          $ref: '#/components/schemas/TypeHashString'\n        confirmations:\n          type: \"integer\"\n        strippedsize:\n          type: \"integer\"\n        size:\n          type: \"integer\"\n        weight:\n          type: \"integer\"\n        height:\n          type: \"integer\"\n        version:\n          type: \"integer\"\n        versionHex:\n          $ref: '#/components/schemas/TypeInt32HexString'\n        merkleroot:\n          $ref: '#/components/schemas/TypeHashString'\n        transactions:\n          type: \"array\"\n          items:\n            $ref: '#/components/schemas/TypeHashString'\n        time:\n          type: \"integer\"\n        mediantime:\n          type: \"integer\"\n        nonce:\n          type: \"integer\"\n        bits:\n          $ref: '#/components/schemas/TypeInt32HexString'\n        difficulty:\n          type: 'integer'\n        chainwork:\n          $ref: '#/components/schemas/TypeHashString'\n\n        transactionCount:\n          type: 'integer'\n        previousblockhash:\n          $ref: '#/components/schemas/TypeHashString'\n        nextblockhash:\n          $ref: '#/components/schemas/TypeHashString'\n    TypeAddressString:\n      description: \"base58 check encoded address\"\n      type: \"string\"\n      pattern: \"^[a-km-zA-HJ-NP-Z1-9]{26,35}$\"\n    TypeHashString:\n      description: \"64 character hex string\"\n      type: \"string\"\n      pattern: \"^[a-fA-F0-9]{64}$\"\n    TypeInt32HexString:\n      description: \"8 character hex string\"\n      type: \"string\"\n      pattern: \"^[a-fA-F0-9]{8}$\"\n    ApiResponseTemporarilyUnavailable:\n      type: \"object\"\n      properties:\n        reason:\n          type: \"string\"\n    ApiResponseNotAllowed:\n      description: Access token is missing or invalid\n    ApiResponseNotFound:\n      description: Not found\n    ApiResponseInvalidInput:\n      description: Invalid Input\n  securitySchemes:\n    BearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /block/best: get: operation \"getBestBlockInfo\": responses: 401: resolve \"#/components/schemas/ApiResponseNotAllowed\" reference: component by reference not found"
}