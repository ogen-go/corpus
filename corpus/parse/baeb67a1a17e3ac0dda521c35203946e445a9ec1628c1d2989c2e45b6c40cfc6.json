{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/tyntec/api-collection"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "account/keys/v1/openapi.yaml",
			"byteSize": 7272,
			"content": "openapi: 3.0.0\ninfo:\n  version: \"1.0\"\n  title: Account Keys API\n  description: |\n    The keys API helps you managing your account API keys. You can add a secondary key for your account and delete the old one. With this mechanism you can safely rotate a key, on runtime, to keep your account safe.\n  contact:\n    name: tyntec API Support\n    url: http://www.tyntec.com/support\n    email: support@tyntec.com\n  x-repository: https://github.com/tyntec/api-collection/blob/master/tts\n  x-major-version: v1\nservers:\n  - url: https://api.tyntec.com/\nsecurity:\n  - APIKeyHeader: []\ntags:\n  - name: Account keys\n    description: |\n      tyntecâ€™s account keys service allow you to:\n\n      - Add a secondary authentication token key on your account. Both keys (old and new) will be valid and active.\n      - You can delete the old key once your new key is replaced at your systems.\n\n      **Important**\n\n      You can not delete the key you are using for this API call. \n\n      Once a key is deleted, this will have immediate effect and no recovery is possible.\npaths:\n  /account/v1/keys:\n    get:\n      tags:\n        - Account keys\n      summary: List keys available\n      security:\n        - ApiKeyHeader: []\n      operationId: keysGET\n      description: |\n        Returns the api keys available for this account.\n      responses:\n        \"200\":\n          description: The keys that are available for your account.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiKeyResponse\"\n        \"400\":\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Problem\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Problem\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Problem\"\n        \"500\":\n          description: \"Something went wrong. :-(\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Problem\"  \n    post:\n      tags:\n        - Account keys\n      summary: Create a secondary key\n      security:\n        - ApiKeyHeader: []\n      operationId: keysPOST\n      description: |\n        Creates a secondary key for this account that will be active in parallel with the old one. No more than two keys are allowed to exist per account.\n      responses:\n        \"200\":\n          description: The keys that are available for your account.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiKeyResponse\"\n        \"400\":\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Problem\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Problem\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Problem\"\n        \"500\":\n          description: \"Something went wrong. :-(\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Problem\"\n    delete:\n      tags:\n        - Account keys\n      summary: Delete an API key.\n      security:\n        - ApiKeyHeader: []\n      operationId: ipRestrictionDELETE\n      description: |\n        Returns available keys for this account. You can not delete the key used for this request.\n      parameters:\n        - name: deleteApiKey\n          in: query\n          description: The api key token value to be deleted.\n          schema:\n            type: string\n        - name: deleteApiKeyId\n          in: query\n          description: The api key ID token value to be deleted.\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: The API key was deleted.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiKeyResponse\"\n        \"400\":\n          description: Invalid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Problem\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Problem\"\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Problem\"\n        \"500\":\n          description: \"Something went wrong. :-(\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Problem\"\n\ncomponents:\n  securitySchemes:\n    ApiKeyHeader:\n      type: apiKey\n      in: header\n      name: apikey\n      description: |\n        The API key used for this operation; we check as well that the API key has the phone number\n        (either on sending messages or interacting with other phone number based features) assigned.\n  schemas:\n    ApiKeyResponse:\n      type: object\n      description: The keys that are active for this account.\n      properties:\n        apiKeys:\n          type: array\n          items:\n            properties:\n              id:\n                type: string\n                format: uuid\n                description: The ID of the key\n              key:\n                type: string\n                description: The authentication token\n          description: If the whitelist restriction is enabled or not for this account.\n          example: |\n            [\n              {\n                \"id\": \"deadbeef-b111-111f-8c6e-05f1fd3f825c\",\n                \"key\": \"ABCDEFG1234567890ABCDEFG1234567890\"\n              }\n            ] \n    Problem:\n      type: object\n      additionalProperties: true\n      description: The problem object follows [RFC-7807](https://tools.ietf.org/html/rfc7807).\n      required:\n        - type\n        - title\n        - status\n        - detail\n      properties:\n        type:\n          description: The URI reference [RFC3986] that identifies the problem type\n          example: https://docs.tyntec.com/problems/DataNotParseable\n          type: string\n        title:\n          description: Short, human-readable summary of the problem type\n          type: string\n          example: The given data were not parsable.\n        status:\n          description: The HTTP status code (RFC7231, Section 6) generated by the origin server for this occurrence of the problem\n          type: string\n          example: 400\n        detail:\n          description: Human-readable explanation specific to this problem occurrence\n          type: string\n          example: |\n            Unexpected end-of-input: expected close marker for Object (start marker at [Source: UNKNOWN; line: -1, column: -1) at [Source: UNKNOWN; line: 1, column: 97]"
		}
	},
	"Error": "parse: parse spec: paths: /account/v1/keys: get: operation \"keysGET\": security: parse global security: unknown security schema \"APIKeyHeader\""
}