{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dart-ogurets/dart-openapi-maven"
		},
		"file": {
			"name": "test.yaml",
			"size": 0,
			"path": "src/it/k8s_null/test.yaml",
			"byteSize": 15151,
			"content": "openapi: 3.0.1\ninfo:\n  title: test api\n  description: Sample API for test case for k8s\n  version: \"1.1.1\"\npaths:\n  /event/upcoming:\n    post:\n      tags:\n        - ControlService\n      description: \"Get the list of upcoming events\"\n      operationId: upcoming-events\n      x-dart-rich-operationId: upcoming-events-test\n      parameters:\n        - name: Accept-Language\n          in: header\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                id:\n                  type: string\n                secret:\n                  type: string\n                username:\n                  type: array\n                  items:\n                    type: number\n                params:\n                  $ref: '#/components/schemas/EventRequest'\n            encoding:\n              params:\n                contentType: application/json\n      responses:\n        \"200\":\n          description: \"upcoming events\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EventResponse\"\n  /event/sample/{id}/{date}/{dateTime}/{nums}:\n    get:\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: nums\n          in: path\n          required: true\n          schema:\n            type: number\n        - name: date\n          in: path\n          required: true\n          schema:\n            type: string\n            format: date\n        - name: dateTime\n          in: path\n          required: true\n          schema:\n            type: string\n            format: date-time\n        - name: queryDateTime\n          in: query\n          required: false\n          schema:\n            type: string\n            format: date-time\n      operationId: getSampleWithAllTypes\n      tags:\n        - ControlService\n      responses:\n        200:\n          description: \"some desc\"\n  /event/file-test:\n    post:\n      tags:\n        - FileService\n      description: \"file post service\"\n      operationId: fileMultipartPost\n      requestBody:\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                username:\n                  type: string\n                avatar:\n                  type: string\n                  format: binary\n      responses:\n        \"200\":\n          description: yup\n  /event/multi-file-test:\n    post:\n      tags:\n        - FileService\n      description: \"file post service\"\n      operationId: fileMultifilePost\n      requestBody:\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                username:\n                  type: array\n                  items:\n                    type: string\n                avatar:\n                  type: array\n                  items:\n                    type: string\n                    format: binary\n      responses:\n        \"200\":\n          description: yup\n  /event/pure-file-test:\n    post:\n      tags:\n        - FileService\n      description: \"file post service\"\n      operationId: pureFilePost\n      requestBody:\n        required: true\n        content:\n          application/octet-stream:\n            schema:\n              type: string\n              format: file\n      responses:\n        \"200\":\n          description: yup\n  /event/kivan/{id}:\n    get:\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: timestamp\n          in: query\n          schema:\n            type: string\n            format: date-time\n          required: true\n        - name: date\n          in: query\n          schema:\n            type: string\n            format: date\n          required: false\n      tags:\n        - ControlService\n      description: \"testing application/octet-stream\"\n      operationId: getOctetStream\n      responses:\n        200:\n          description: \"content is octet-stream\"\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n  /event/getstatus:\n    post:\n      tags:\n        - ControlService\n      description: \"get individual event\"\n      operationId: getEvent\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                id:\n                  type: string\n                secret:\n                  type: string\n                params:\n                  $ref: '#/components/schemas/UniqueEventRequest'\n            encoding:\n              params:\n                contentType: application/json\n      responses:\n        \"200\":\n          description: \"individual event status\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Event\"\n  #  /event/upcoming2:\n  #    post:\n  #      tags:\n  #        - ControlService\n  #      description: \"Get the list of upcoming events\"\n  #      operationId: upcomingEvents2\n  #      requestBody:\n  #        required: true\n  #        content:\n  #          application/json:\n  #            schema:\n  #              oneOf:\n  #                - $ref: '#/components/schemas/EventRequest'\n  #                - $ref: '#/components/schemas/EventResponse'\n  #      responses:\n  #        \"200\":\n  #          description: \"upcoming events\"\n  #          content:\n  #            application/yaml:\n  #              schema:\n  #                $ref: \"#/components/schemas/EventResponse\"\n  /hello:\n    get:\n      tags:\n        - TestService\n      operationId: helloOp\n      responses:\n        \"200\":\n          description: \"Resulting weird api\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/com.bluetrainsoftware.AddProps1\"\n  /hello2:\n    get:\n      tags:\n        - TestService\n      operationId: helloOp2\n      x-dart-rich-operationId: helloOp2Extended\n      responses:\n        \"200\":\n          description: \"Resulting weird api\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/com.bluetrainsoftware.AddProps2\"\ncomponents:\n  schemas:\n    GeocodedWaypoint:\n      type: object\n      description: GeocodedWaypoint\n      properties:\n        geocoderStatus:\n          type: string\n          enum:\n            - OK\n            - ZERO_RESULTS\n        partialMatch:\n          type: boolean\n        placeId:\n          type: string\n        types:\n          type: array\n          items:\n            type: string\n            enum:\n              - STREET_ADDRESS\n              - STREET_NUMBER\n    HashTest:\n      properties:\n        fieldOne:\n          type: boolean\n        fieldTwo:\n          type: boolean\n    EventRequest:\n      properties:\n        user_id:\n          type: string\n        enable_to_watch:\n          type: integer\n        dateField:\n          type: string\n          format: date\n    EventResponse:\n      properties:\n        error:\n          type: integer\n        error_msg:\n          type: string\n        listofNumbers:\n          type: array\n          items:\n            type: number\n        listOfIntegers:\n          type: array\n          items:\n            type: integer\n        listOfIntString:\n          type: array\n          items:\n            type: string\n            format: int-or-string\n        dateEventsHappen:\n          type: array\n          items:\n            type: string\n            format: date\n        whenEventsHappen:\n          type: array\n          items:\n            type: string\n            format: date-time\n        eventStatuses:\n          type: array\n          items:\n            $ref: \"#/components/schemas/EventStatus\"\n        events:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Event\"\n    Event:\n      properties:\n        status:\n          $ref: \"#/components/schemas/EventStatus\"\n        id:\n          type: string\n        title:\n          type: string\n        img:\n          type: string\n        imageUrl:\n          type: string\n    EventStatus:\n      type: string\n      enum:\n        - STREAMING\n        - ALLOCATING\n        - ALLOCATED\n        - CLOSING\n        - CLOSED\n        - PENDING\n        - ARCHIVING\n    \"com.bluetrainsoftware.AddProps1\":\n      properties:\n        extra:\n          type: object\n          additionalProperties:\n            items:\n              type: string\n            type: array\n          description: \"used extensively in k8s api and generates weird code\"\n        yet_other_things:\n          type: object\n          additionalProperties:\n            items:\n              type: integer\n            type: array\n        dependencies:\n          type: object\n          additionalProperties:\n            $ref: \"#/components/schemas/com.bluetrainsoftware.AddProps2\"\n        groups:\n          type: array\n          description: \"names groups this user is part of\"\n          items:\n            type: string\n        name:\n          type: string\n        mess$age:\n          $ref: \"#/components/schemas/Messages\"\n        $justObjects:\n          type: array\n          items:\n            $ref: \"#/components/schemas/JSONType\"\n        myIntegers:\n          type: array\n          items:\n            type: integer\n    \"com.bluetrainsoftware.AddProps2\":\n      properties:\n        extra:\n          type: object\n          additionalProperties:\n            type: object\n            properties:\n              code:\n                type: integer\n              text:\n                type: string\n    AddProps3:\n      properties:\n        discrim:\n          type: string\n        readings:\n          type: object\n          additionalProperties:\n            type: number\n            format: decimal\n        extra:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: \"#/components/schemas/TimeType\"\n        dependencies:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: \"#/components/schemas/JSONType\"\n        otherDeps:\n          type: object\n          additionalProperties:\n            $ref: \"#/components/schemas/SecondJsonType\"\n        yetMoreAdditional:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              type: string\n        mapWithComplexObject:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: \"#/components/schemas/Event\"\n        mapWithEnums:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: \"#/components/schemas/EventStatus\"\n    \"com.bluetrain-software.AddProps4\":\n      properties:\n        extra:\n          type: object\n          additionalProperties:\n            $ref: \"#/components/schemas/TimeType\"\n    JSONType:\n      description: \"can be anything, no properties\"\n    SecondJsonType:\n      description: \"can be anything, no properties\"\n    TimeType:\n      type: string\n      format: date-time\n    Messages:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/Message'\n    Message:\n      type: object\n      properties:\n        code:\n          type: integer\n        text:\n          type: string\n    UniqueEventRequest:\n      type: array\n      items:\n        $ref: \"#/components/schemas/UniqueEvent\"\n    UniqueEvent:\n      type: object\n      properties:\n        unique_url:\n          type: string\n    EnumsTest:\n      type: array\n      items:\n        $ref: \"#/components/schemas/JSONType\"\n    SampleObject:\n      type: object\n      properties:\n        enums:\n          $ref: \"#/components/schemas/EnumsTest\"\n    \"io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps\":\n      description: \"JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/).\"\n      properties:\n        \"$ref\":\n          type: string\n        \"$schema\":\n          type: string\n        default:\n          $ref: \"#/components/schemas/JSONType\"\n        enum:\n          items:\n            $ref: \"#/components/schemas/JSONType\"\n          type: array\n        example:\n          $ref: \"#/components/schemas/JSONType\"\n    EnumsObjectTest:\n      type: object\n      properties:\n        enums:\n          type: array\n          items:\n            $ref: \"#/components/schemas/JSONType\"\n    InlineEnum:\n      type: object\n      required:\n        - opType\n        - operation\n        - value\n      properties:\n        value:\n          type: string\n        opType:\n          type: string\n          enum:\n            - less_or_equal\n            - greater^equal\n            - not=equal\n            - greater-than\n            - lessThan\n            - equal\n            - matches\n        comparison:\n          type: string\n          enum:\n            - square\n            - logarithmic\n      uniqueItems: false\n    fruit_basket:\n      title: fruit\n      type: object\n      required:\n        - owner\n      properties:\n        owner:\n          type: string\n        fruits:\n          items:\n            # https://swagger.io/docs/specification/data-models/inheritance-and-polymorphism/\n            anyOf:\n              - $ref: '#/components/schemas/my_apple'\n              - $ref: '#/components/schemas/my_banana'\n            discriminator:\n              propertyName: type\n              mapping:\n                banana: '#/components/schemas/my_banana'\n                apple: '#/components/schemas/my_apple'\n          type: array\n    my_apple:\n      title: apple\n      type: object\n      properties:\n        type:\n          type: string\n        kind:\n          type: string\n    my_banana:\n      title: banana\n      type: object\n      properties:\n        type:\n          type: string\n        count:\n          type: number\n    NumericAndSpacedEnum:\n      type: string\n      enum:\n        - Ahoy There\n        - application+json\n        - 18 Spaces Here\n        - 667\n    IntTypeEnum:\n      type: integer\n      enum:\n        - 1\n        - 2\n        - 3\n    ObjectContainingEnum:\n      type: object\n      properties:\n        name:\n          type: string\n        enumFieldAllOf:\n          allOf:\n            - $ref: '#/components/schemas/NumericAndSpacedEnum'\n        enumFieldPlainRef:\n          $ref: '#/components/schemas/NumericAndSpacedEnum'\n    PointGeometry:\n      type: object\n      properties:\n        coordinates:\n          type: array\n          items:\n            type: array\n            items:\n              type: number\n              format: double\n    PatchDocument:\n      type: object\n      properties:\n        value:\n          nullable: true\n        path:\n          type: string\n          nullable: true\n        op:\n          type: string\n          nullable: true\n        from:\n          type: string\n          nullable: true\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"NumericAndSpacedEnum\": parse enum values: parse value \"667\": expected type \"string\", got \"number\""
}