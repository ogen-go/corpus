{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/F5Networks/f5-declarative-onboarding"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "src/schema/latest/openapi.yaml",
			"byteSize": 18181,
			"content": "openapi: 3.0.3\ninfo:\n  title: F5 BIG-IP Declarative Onboarding\n  description: This reference describes the BIG-IP DO API and available endpoints. For more details, see https://clouddocs.f5.com/products/extensions/f5-declarative-onboarding/latest/using-do.html.\n  version: 1.35.0\n  contact:\n    name: BIG-IP Declarative Onboarding\n    email: solutionsfeedback@f5.com\n    url: 'https://github.com/F5Networks/f5-declarative-onboarding'\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\nservers:\n  - url: https://192.0.2.1:443/mgmt/shared/declarative-onboarding\npaths:\n  /:\n    get:\n      summary: Get status of configuration request\n      description: Retrieve the status of the most recently deployed configuration request.\n      operationId: getMostRecentTask\n      tags:\n        - Configuration\n      parameters:\n        - name: show\n          in: query\n          required: false\n          description: Retrieve original and current configuration.\n          schema:\n            type : string\n            enum:\n              - full\n        - name: statusCodes\n          in: query\n          required: false\n          description: |\n            Determines how BIG-IP DO returns HTTP status codes.\n              - *legacy*: Returns any errors as the HTTP status.\n              - *experimental*: Returns a 200 HTTP status code unless there is an actual error with the request. The result in the body of the response contains the status of the task.\n          schema:\n            type : string\n            enum:\n              - legacy\n              - experimental\n            default: legacy\n      responses:\n        200:\n          description: Configuration was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/task'\n              examples:\n                success:\n                  value:\n                    $ref: '#/components/examples/task'\n                failure:\n                  value:\n                    $ref: '#/components/examples/errorConfig'\n        500:\n          $ref: '#/components/responses/500'\n    post:\n      summary: Apply BIG-IP DO configuration\n      description: Configure the device per the declaration.\n      operationId: postDeclaration\n      tags:\n        - Configuration\n      requestBody:\n        description: BIG-IP DO Declaration.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/device'\n      responses:\n        200:\n          description: Successful synchronous response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/task'\n              example:\n                $ref: '#/components/examples/task'\n        202:\n          description: Successful asynchronous response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/task'\n              example:\n                id: 'c098f4f1-d2a4-4c53-8728-7d1ce5567a4a'\n                result:\n                  class: Result,\n                  code: 202,\n                  status: RUNNING,\n                  dryRun: false,\n                  message: processing\n                declaration:\n                  class: Device\n                  schemaVersion: 1.0.0\n                  async: true\n                  Common:\n                    class: Tenant\n                    myLicense:\n                      class: License\n                      licenseType: regKey\n                      regKey: AAAAA-BBBBB-CCCCC-DDDDD-EEEEEEE\n                selfLink: 'https://localhost/mgmt/shared/appsvcs/task/c098f4f1-d2a4-4c53-8728-7d1ce5567a4'\n        422:\n          description: Error while applying config.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/task'\n              example:\n                $ref: '#/components/examples/errorConfig'\n        500:\n          $ref: '#/components/responses/500'\n  /config:\n    get:\n      summary: Return all original configurations\n      description: Retrieve the original configuration of all devices.\n      operationId: getAllConfigs\n      tags:\n        - Configuration\n      responses:\n        200:\n          description: Retrieval was successful.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  allOf:\n                    - $ref: '#/components/schemas/config'\n        500:\n          $ref: '#/components/responses/500'\n  /config/{machineId}:\n    get:\n      summary: Return original configuration by machine ID\n      description: Retrieve the original configuration of a device by machine ID.\n      operationId: getConfig\n      tags:\n        - Configuration\n      parameters:\n        - name: machineId\n          in: path\n          required: true\n          description: The machine ID that is returned by the \u003ccode\u003e/shared/identified-devices/config/device-info\u003c/code\u003e endpoint.\n          schema:\n            type : string\n            format: uuid\n      responses:\n        200:\n          description: Retrieval was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/config'\n        404:\n          $ref: '#/components/responses/404'\n        500:\n          $ref: '#/components/responses/500'\n    delete:\n      summary: Delete the stored original configuration by config ID\n      description: Delete the stored original configuration by config ID. This can be used in some cases when BIG-IP DO has gotten into an unusable state.\n      operationId: deleteConfig\n      tags:\n        - Configuration\n      parameters:\n        - name: configId\n          in: path\n          required: true\n          description: The config ID that was returned by a GET to \u003ccode\u003e/config\u003c/code\u003e\n          schema:\n            type : string\n            format: uuid\n      responses:\n        200:\n          description: Delete was successful.\n          content:\n            application/json:\n              schema:\n                type: array\n              example:\n                []\n        404:\n          $ref: '#/components/responses/404'\n        500:\n          $ref: '#/components/responses/500'\n  /info:\n    get:\n      summary: /mgmt/shared/appsvcs/info\n      tags:\n        - Information\n      description: |\n        This returns version and release information for the instance of BIG-IP DO you are using.\n        It also shows current and minimum required versions of the BIG-IP DO schema.\n      responses:\n        200:\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: integer\n                    enum:\n                      - 0\n                  selfLink:\n                    type: string\n                    format: uri\n                  result:\n                    $ref: '#/components/schemas/result'\n                  version:\n                    type: string\n                    description: The version of BIG-IP DO.\n                  release:\n                    type: string\n                    description: The build number of the current version.\n                  schemaCurrent:\n                    type: string\n                    description: The maximum schema version supported.\n                  schemaMinimum:\n                    type: string\n                    description: The minimum schema version supported.\n              example:\n                id: 0\n                selfLink: https://localhost/mgmt/shared/declarative-onboarding/info,\n                result:\n                  class: Result,\n                  code: 200,\n                  status: OK,\n                  message: \"\"\n                  errors: []\n                version: 1.30.0\n                release: 2\n                schemaCurrent: 1.30.0\n                schemaMinimum: 1.0.0\n        500:\n          $ref: '#/components/responses/500'\n  /inspect:\n    get:\n      summary: Return current configuration\n      description: Retrieve the current configuration of a device.\n      operationId: getInspect\n      tags:\n        - Inspect\n      parameters:\n        - name: targetHost\n          in: query\n          required: false\n          description: The IP address or domain name of the host from which to retrieve the current configuration.\n          schema:\n            type : string\n            default: localhost\n        - name: targetPort\n          in: query\n          required: false\n          description: The port that is used with the targetHost to establish a connection to the device. By default, BIG-IP DO tries to establish a connection to the device using ports 443 and 8443.\n          schema:\n            type : integer\n            minimum: 0\n            maximum: 65535\n        - name: targetUsername\n          in: query\n          required: false\n          description: The username for the targetHost.\n          schema:\n            type : string\n            default: admin\n        - name: targetPassword\n          in: query\n          required: false\n          description: The password for the targetHost.\n          schema:\n            type : string\n            default: admin\n      responses:\n        200:\n          description: Retrieval was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/inspect'\n        500:\n          $ref: '#/components/responses/500'\n  /task:\n    get:\n      summary: Return status of all configurations\n      description: Retrieve the status of all previously deployed configurations.\n      operationId: getAllTasks\n      tags:\n        - Task\n      responses:\n        200:\n          description: Retrieval was successful.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  allOf:\n                    - $ref: '#/components/schemas/task'\n                  example:\n                    $ref: '#/components/examples/task'\n\n        500:\n          $ref: '#/components/responses/500'\n  /task/{taskId}:\n    get:\n      summary: Return status of configuration by task ID\n      description: Retrieve the status of a previously deployed configuration by task ID.\n      operationId: getTask\n      tags:\n        - Task\n      parameters:\n        - name: taskId\n          in: path\n          required: true\n          description: The task ID.\n          schema:\n            type : string\n            format: uuid\n      responses:\n        200:\n          description: Retrieval was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/task'\n              examples:\n                success:\n                  value:\n                    $ref: '#/components/examples/task'\n                failure:\n                  value:\n                    $ref: '#/components/examples/errorConfig'\n        404:\n          $ref: '#/components/responses/404'\n        500:\n          $ref: '#/components/responses/500'\ncomponents:\n  schemas:\n    config:\n      title: Config\n      description: The original configuration of a device.\n      type: object\n      allOf:\n        - properties:\n            id:\n              type: string\n              format: uuid\n            selfLink:\n              type: string\n              format: uri\n            result:\n              $ref: '#/components/schemas/result'\n        - $ref: '#/components/schemas/configObject'\n    configObject:\n      title: Config Object\n      type: object\n      properties:\n        Common:\n          type: object\n          description: A collection of sub-objects that describe the configuration state of a device.\n          additionalProperties: true\n    errorConfig:\n      title: BIG-IP DO Processing Error\n      description: An error response caused by attempting to apply invalid config.\n      type: object\n      properties:\n        id:\n          description: Unique ID for task.\n          type: string\n          format: uuid\n        selfLink:\n          description: URI at which to fetch task on the device.\n          type: string\n          format: uri\n        code:\n          type: integer\n          enum:\n            - 422\n            - 500\n        status:\n          type: string\n          enum:\n            - ERROR\n        message:\n          type: string\n        errors:\n          type: array\n          items:\n            type: string\n        result:\n          $ref: '#/components/schemas/result'\n        declaration:\n            $ref: '#/components/schemas/device'\n    errorProcessing:\n      title: Bad declaration Error\n      description: An error response caused by a bad parameter or bad declaration.\n      type: object\n      properties:\n        code:\n          type: integer\n        message:\n          type: string\n        referer:\n          type: string\n          format: ipv4\n        restOperationId:\n          type: integer\n        kind:\n          type: string\n          enum:\n            - ':resterrorresponse'\n    device:\n      $ref: base.schema.json\n    inspect:\n      title: Inspect\n      description: The current configuration of a device.\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        selfLink:\n          type: string\n          format: uri\n        result:\n          $ref: '#/components/schemas/result'\n        declaration:\n          type: object\n          properties:\n            class:\n              type: string\n              enum:\n                - DO\n            declaration:\n              $ref: '#/components/schemas/device'\n    result:\n      title: Result\n      description: Standard result object in responses.\n      type: object\n      properties:\n        class:\n          type: string\n          enum:\n            - Result\n        code:\n          description: Status code.\n          type: integer\n        status:\n          description: Status string.\n          type: string\n          enum:\n            - OK\n            - ERROR\n            - ROLLING_BACK\n            - RUNNING\n            - REBOOTING\n            - REVOKING\n        message:\n          description: Overall result message.\n          type: string\n        errors:\n          description: Array of errors that occurred.\n          type: array\n          items:\n            type: string\n    task:\n      title: Task\n      description: The configuration status and associated declaration.\n      type: object\n      properties:\n        id:\n          description: Unique ID for task.\n          type: string\n          format: uuid\n        selfLink:\n          description: URI at which to fetch task on the device.\n          type: string\n          format: uri\n        message:\n          description: Overall result message.\n          type: string\n        errors:\n          description: Array of errors that occurred.\n          type: array\n          items:\n            type: string\n        result:\n          $ref: '#/components/schemas/result'\n        declaration:\n          $ref: '#/components/schemas/device'\n        currentConfig:\n          $ref: '#/components/schemas/configObject'\n        originalConfig:\n          $ref: '#/components/schemas/configObject'\n  examples:\n    errorConfig:\n      id: c098f4f1-d2a4-4c53-8728-7d1ce5567a4\n      selfLink: 'https://localhost/mgmt/shared/appsvcs/task/c098f4f1-d2a4-4c53-8728-7d1ce5567a4'\n      code: 422\n      status: ERROR\n      message: 'Error licensing: Invalid reg key'\n      errors:\n        - 'Invalid reg key'\n      result:\n        class: Result\n        code: 422\n        status: ERROR\n        dryRun: false\n        message: 'Error licensing: Invalid reg key'\n        errors:\n          - 'Invalid reg key'\n        declaration:\n          class: Device\n          schemaVersion: 1.0.0\n          async: true\n          Common:\n            class: Tenant\n            myLicense:\n              class: License\n              licenseType: regKey\n              regKey: AAAAA-BBBBB-CCCCC-DDDDD-EEEEEEE\n    errorNotFound:\n      code: 404,\n      message: 'java.net.ProtocolException: status:404, body:b1994382-8b2d-46c1-9e1b-44bd08925e7b does not exist'\n      referer: 172.18.6.16\n      restOperationId: 46740167\n      kind: :resterrorresponse\n    errorProcessing:\n      code: 400\n      message: 'java.net.ProtocolException: status:400, body:DELETE is only supported for the config endpoint'\n      referer: '192.168.0.1'\n      restOperationId: 12345678\n      kind: ':resterrorresponse'\n    task:\n      id: c098f4f1-d2a4-4c53-8728-7d1ce5567a4\n      selfLink: 'https://localhost/mgmt/shared/appsvcs/task/c098f4f1-d2a4-4c53-8728-7d1ce5567a4'\n      result:\n          class: Result\n          code: 200\n          status: OK\n          message: success\n      declaration:\n        class: Device\n        schemaVersion: 1.0.0\n        async: true\n        Common:\n          class: Tenant\n          myLicense:\n            class: License\n            licenseType: regKey\n            regKey: AAAAA-BBBBB-CCCCC-DDDDD-EEEEEEE\n  responses:\n    404:\n      description: ID not found.\n      content:\n        application/json:\n          schema:\n            title: 404\n            description: Not found.\n            type: object\n            properties:\n              code:\n                type: integer\n                enum:\n                  - 404\n              message:\n                type: string\n              referer:\n                type: string\n                format: ipv4\n              restOperationId:\n                type: integer\n              kind:\n                type: string\n          example:\n            $ref: '#/components/examples/errorNotFound'\n    500:\n      description: Something went wrong internally and a bug report should be filed\u0026#58; https://github.com/F5Networks/f5-declarative-onboarding/issues/new/choose.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/errorProcessing'\n          example:\n            $ref: '#/components/examples/errorProcessing'\n",
			"canonicalURL": "/github.com/F5Networks/f5-declarative-onboarding@30f15cc72e2ea13719834194063c9fdf07430c55/-/blob/src/schema/latest/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/F5Networks/f5-declarative-onboarding/blob/30f15cc72e2ea13719834194063c9fdf07430c55/src/schema/latest/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"device\": resolve \"#/components/schemas/device\": $ref: resolve \"base.schema.json\": property \"Common\": at https://raw.githubusercontent.com/F5Networks/f5-declarative-onboarding/30f15cc72e2ea13719834194063c9fdf07430c55/src/schema/latest/base.schema.json:222:24: parse default: unexpected type: \"object\""
}