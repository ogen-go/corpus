{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hyperledger-labs/Scorex"
		},
		"file": {
			"name": "testApi.yaml",
			"size": 0,
			"path": "examples/src/main/resources/api/testApi.yaml",
			"byteSize": 8135,
			"content": "openapi: \"3.0.0\"\n\ninfo:\n  version: \"0.1\"\n  title: Scorex Node API example\n  description: API docs for example Scorex project.\n  contact:\n    name: Scorex framework Team\n    email: kushi@protonmail.com\n    url: https://github.com/scorexfoundation/scorex\n  license:\n    name: CC0 1.0 Universal\n    url: https://raw.githubusercontent.com/ScorexFoundation/Scorex/master/COPYING\n\ncomponents:\n  schemas:\n    # Objects\n    ModifierId:\n      description: Base16-encoded 32 byte modifier id\n      type: string\n      format: base16\n      example: 3ab9da11fc216660e974842cc3b7705e62ebb9e0bf5ff78e53f9cd40abadd117\n\n    Digest32:\n      description: Base16-encoded 32 byte digest\n      type: string\n      format: base16\n      example: e15a5bb0a1ad2f341a50c4f3fdcb01a516f39069baf66977e7e026a69e9a080d\n\n    Peer:\n      type: object\n      required:\n        - address\n      properties:\n        address:\n          type: string\n          example: 127.0.0.1:5673\n        name:\n          type: string\n          example: mynode\n        nonce:\n          type: integer\n          # int32\n          format: int64\n          example: 123456\n        lastSeen:\n          type: integer\n          # int32\n          format: int64\n          example: 123456\n    BlacklistedPeers:\n      type: object\n      required:\n        - addresses\n      properties:\n        addresses:\n          type: array\n          items:\n            type: string\n            example: 127.0.0.1:27272\n    ApiError:\n      type: object\n      required:\n        - error\n        - reason\n        - detail\n      properties:\n        error:\n          type: int32\n          description: Error code\n          example: 500\n        reason:\n          type: string\n          description: String error code\n          example: 'Internal server error'\n        detail:\n          type: string\n          nullable: true\n          description: Detailed error description\n\npaths:\n\n  /nodeView/openSurface:\n    get:\n      summary: Get history open surface\n      operationId: getOpenSurface\n      tags:\n        - nodeView\n      responses:\n        200:\n          description: Array of modifier ids\n          content:\n            application/json:\n              schema:\n                type: array\n                example: [\"3ab9da11fc216660e974842cc3b7705e62ebb9e0bf5ff78e53f9cd40abadd117\"]\n                items:\n                  $ref: '#/components/schemas/ModifierId'\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n\n  /nodeView/persistentModifier/{modifierId}:\n    get:\n      summary: Get history open surface\n      operationId: getPersistentModifierById\n      tags:\n        - nodeView\n      parameters:\n        - in: path\n          name: modifierId\n          required: true\n          description: ID of a requested modifier\n          schema:\n            $ref: '#/components/schemas/ModifierId'\n      responses:\n        200:\n          description: Node view modifier\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - id\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n\n  /nodeView/pool:\n    get:\n      summary: Get memory pool\n      operationId: getPool\n      tags:\n        - nodeView\n      responses:\n        200:\n          description: Memory pool\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - size\n                  - transactions\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n\n  /peers/all:\n    get:\n      summary: Get all known peers\n      operationId: getAllPeers\n      tags:\n        - peers\n      responses:\n        200:\n          description: Array of peer objects\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Peer'\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n\n  /peers/connected:\n    get:\n      summary: Get current connected peers\n      operationId: getConnectedPeers\n      tags:\n        - peers\n      responses:\n        200:\n          description: Array of peer objects\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Peer'\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n\n  /peers/connect:\n    post:\n      summary: Add address to peers list\n      operationId: connectToPeer\n      tags:\n        - peers\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: string\n              example: 127.0.0.1:5673\n      responses:\n        200:\n          description: Attempt to connect to the peer\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n\n  /peers/blacklisted:\n    get:\n      summary: Get blacklisted peers\n      operationId: getBlacklistedPeers\n      tags:\n        - peers\n      responses:\n        200:\n          description: Array of peer objects\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlacklistedPeers'\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n\n  /utils/seed:\n    get:\n      summary: Get random seed with 32 bytes size\n      operationId: getRandomSeed\n      tags:\n        - utils\n      responses:\n        200:\n          description: Base15-encoded 32 byte seed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Digest32'\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n\n  /utils/seed/{length}:\n    get:\n      summary: Generate random seed of specified length in bytes\n      operationId: getRandomSeedWithLength\n      tags:\n        - utils\n      parameters:\n        - in: path\n          name: length\n          required: true\n          description: seed length in bytes\n          schema:\n            type: string\n      responses:\n        200:\n          description: Base16-encoded N byte seed\n          content:\n            application/json:\n              schema:\n                type: string\n                format: base16\n                example: 4e4ddea9ac11c7f55cf98c7af28166e9e7ecfac9ca1079ca7d04c3d66251a7d8\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n\n  /utils/hash/blake2b:\n    post:\n      summary: Return Blake2b hash of specified message\n      operationId: hashBlake2b\n      tags:\n        - utils\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: string\n              format: base16\n              example: 27cda3fa0526ffcfff754baa7886c30a05a21c9b01e4b91b5627a5c578f0bd16\n      responses:\n        200:\n          description: Base16-encoded 32 byte hash\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Digest32'\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiError'\n"
		}
	},
	"Error": "parse: parse spec: paths: /nodeView/openSurface: get: operation \"getOpenSurface\": responses: default: content: \"application/json\": schema: parse schema: resolve \"#/components/schemas/ApiError\": parse schema: property \"error\": parse schema: unexpected schema type: \"int32\""
}