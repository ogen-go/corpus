{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Greenstand/treetracker-admin-api"
		},
		"file": {
			"name": "treetracker-admin.v1.yaml",
			"size": 0,
			"path": "docs/api/spec/treetracker-admin.v1.yaml",
			"byteSize": 58831,
			"content": "openapi: 3.0.0\ninfo:\n  title: Treetracker Admin API\n  version: 2.17.4\npaths:\n  '/organization/{organizationId}/organizations':\n    get:\n      x-controller-name: OrganizationController\n      x-operation-name: findByParentOrg\n      tags:\n        - OrganizationController\n      responses:\n        '200':\n          description: Array of Organization model instances by Org\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Organization'\n      parameters:\n        - name: organizationId\n          in: path\n          schema:\n            type: number\n          required: true\n        - name: filter\n          in: query\n          style: deepObject\n          explode: true\n          schema:\n            type: object\n            properties:\n              where:\n                type: object\n                additionalProperties: true\n              fields:\n                type: object\n                properties:\n                  id:\n                    type: boolean\n                  name:\n                    type: boolean\n                  type:\n                    type: boolean\n                additionalProperties: false\n              offset:\n                type: integer\n                minimum: 0\n              limit:\n                type: integer\n                minimum: 1\n                examples:\n                  - 100\n                example: 100\n              skip:\n                type: integer\n                minimum: 0\n              order:\n                type: array\n                items:\n                  type: string\n            additionalProperties: false\n      operationId: OrganizationController.findByParentOrg\n  '/organization/{organizationId}/planter/count':\n    get:\n      x-controller-name: PlanterOrganizationController\n      x-operation-name: count\n      tags:\n        - PlanterOrganizationController\n      responses:\n        '200':\n          description: Planter model count\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: number\n      parameters:\n        - name: organizationId\n          in: path\n          schema:\n            type: number\n          required: true\n        - name: where\n          in: query\n          style: deepObject\n          explode: true\n          schema:\n            type: object\n            additionalProperties: true\n      operationId: PlanterOrganizationController.count\n  '/organization/{organizationId}/planter/{id}/selfies':\n    get:\n      x-controller-name: PlanterOrganizationController\n      x-operation-name: findSelfiesById\n      tags:\n        - PlanterOrganizationController\n      responses:\n        '200':\n          description: Array of Trees model instances\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Trees'\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: number\n          required: true\n        - name: filter\n          in: query\n          style: deepObject\n          explode: true\n          schema:\n            type: object\n            properties:\n              where:\n                type: object\n                additionalProperties: true\n              fields:\n                type: object\n                properties:\n                  id:\n                    type: boolean\n                  uuid:\n                    type: boolean\n                  timeCreated:\n                    type: boolean\n                  timeUpdated:\n                    type: boolean\n                  missing:\n                    type: boolean\n                  causeOfDeathId:\n                    type: boolean\n                  planterId:\n                    type: boolean\n                  imageUrl:\n                    type: boolean\n                  lat:\n                    type: boolean\n                  lon:\n                    type: boolean\n                  active:\n                    type: boolean\n                  planterIdentifier:\n                    type: boolean\n                  deviceId:\n                    type: boolean\n                  deviceIdentifier:\n                    type: boolean\n                  note:\n                    type: boolean\n                  verified:\n                    type: boolean\n                  approved:\n                    type: boolean\n                  status:\n                    type: boolean\n                  morphology:\n                    type: boolean\n                  age:\n                    type: boolean\n                  speciesId:\n                    type: boolean\n                  captureApprovalTag:\n                    type: boolean\n                  rejectionReason:\n                    type: boolean\n                  plantingOrganizationId:\n                    type: boolean\n                  planterPhotoUrl:\n                    type: boolean\n                  tokenId:\n                    type: boolean\n                additionalProperties: false\n              offset:\n                type: integer\n                minimum: 0\n              limit:\n                type: integer\n                minimum: 1\n                examples:\n                  - 100\n                example: 100\n              skip:\n                type: integer\n                minimum: 0\n              order:\n                type: array\n                items:\n                  type: string\n              include:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    relation:\n                      type: string\n                    scope:\n                      properties:\n                        where:\n                          type: object\n                          additionalProperties: true\n                        fields:\n                          type: object\n                          properties: {}\n                          additionalProperties: true\n                        offset:\n                          type: integer\n                          minimum: 0\n                        limit:\n                          type: integer\n                          minimum: 1\n                          examples:\n                            - 100\n                          example: 100\n                        skip:\n                          type: integer\n                          minimum: 0\n                        order:\n                          type: array\n                          items:\n                            type: string\n                      additionalProperties: false\n            additionalProperties: false\n      operationId: PlanterOrganizationController.findSelfiesById\n  '/organization/{organizationId}/planter/{id}':\n    patch:\n      x-controller-name: PlanterOrganizationController\n      x-operation-name: updateById\n      tags:\n        - PlanterOrganizationController\n      responses:\n        '204':\n          description: Planter PATCH success\n      parameters:\n        - name: organizationId\n          in: path\n          schema:\n            type: number\n          required: true\n        - name: id\n          in: path\n          schema:\n            type: number\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Planter'\n        x-parameter-index: 2\n      operationId: PlanterOrganizationController.updateById\n    get:\n      x-controller-name: PlanterOrganizationController\n      x-operation-name: findById\n      tags:\n        - PlanterOrganizationController\n      responses:\n        '200':\n          description: Planter model instance\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Planter'\n      parameters:\n        - name: organizationId\n          in: path\n          schema:\n            type: number\n          required: true\n        - name: id\n          in: path\n          schema:\n            type: number\n          required: true\n      operationId: PlanterOrganizationController.findById\n  '/organization/{organizationId}/planter':\n    get:\n      x-controller-name: PlanterOrganizationController\n      x-operation-name: find\n      tags:\n        - PlanterOrganizationController\n      responses:\n        '200':\n          description: Array of Planter model instances\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Planter'\n      parameters:\n        - name: organizationId\n          in: path\n          schema:\n            type: number\n          required: true\n        - name: filter\n          in: query\n          style: deepObject\n          explode: true\n          schema:\n            type: object\n            properties:\n              where:\n                type: object\n                additionalProperties: true\n              fields:\n                type: object\n                properties:\n                  id:\n                    type: boolean\n                  firstName:\n                    type: boolean\n                  lastName:\n                    type: boolean\n                  email:\n                    type: boolean\n                  organization:\n                    type: boolean\n                  phone:\n                    type: boolean\n                  pwdResetRequired:\n                    type: boolean\n                  imageUrl:\n                    type: boolean\n                  personId:\n                    type: boolean\n                  organizationId:\n                    type: boolean\n                additionalProperties: false\n              offset:\n                type: integer\n                minimum: 0\n              limit:\n                type: integer\n                minimum: 1\n                examples:\n                  - 100\n                example: 100\n              skip:\n                type: integer\n                minimum: 0\n              order:\n                type: array\n                items:\n                  type: string\n            additionalProperties: false\n      operationId: PlanterOrganizationController.find\n  '/organization/{organizationId}/planter-registration':\n    get:\n      x-controller-name: PlanterOrganizationController\n      x-operation-name: findPlanterRegistration\n      tags:\n        - PlanterOrganizationController\n      responses:\n        '200':\n          description: Array of PlanterRegistration model instances\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PlanterRegistration'\n      parameters:\n        - name: filter\n          in: query\n          style: deepObject\n          explode: true\n          schema:\n            type: object\n            properties:\n              where:\n                type: object\n                additionalProperties: true\n              fields:\n                type: object\n                properties:\n                  id:\n                    type: boolean\n                  planterId:\n                    type: boolean\n                  createdAt:\n                    type: boolean\n                  lat:\n                    type: boolean\n                  lon:\n                    type: boolean\n                additionalProperties: false\n              offset:\n                type: integer\n                minimum: 0\n              limit:\n                type: integer\n                minimum: 1\n                examples:\n                  - 100\n                example: 100\n              skip:\n                type: integer\n                minimum: 0\n              order:\n                type: array\n                items:\n                  type: string\n            additionalProperties: false\n      operationId: PlanterOrganizationController.findPlanterRegistration\n  '/organization/{organizationId}/trees/count':\n    get:\n      x-controller-name: TreesOrganizationController\n      x-operation-name: count\n      tags:\n        - TreesOrganizationController\n      responses:\n        '200':\n          description: Trees model count\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: number\n      parameters:\n        - name: organizationId\n          in: path\n          schema:\n            type: number\n          required: true\n        - name: where\n          in: query\n          style: deepObject\n          explode: true\n          schema:\n            type: object\n            additionalProperties: true\n      operationId: TreesOrganizationController.count\n  '/organization/{organizationId}/trees/near':\n    get:\n      x-controller-name: TreesOrganizationController\n      x-operation-name: near\n      tags:\n        - TreesOrganizationController\n      responses:\n        '200':\n          description: Find trees near a lat/lon with a radius in meters\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Trees'\n      parameters:\n        - name: lat\n          in: query\n          schema:\n            type: number\n        - name: lon\n          in: query\n          schema:\n            type: number\n        - name: radius\n          in: query\n          required: false\n          schema:\n            type: number\n          description: 'measured in meters (default: 100 meters)'\n        - name: limit\n          in: query\n          required: false\n          schema:\n            type: number\n          description: default is 100\n      operationId: TreesOrganizationController.near\n  '/organization/{organizationId}/trees/{id}':\n    patch:\n      x-controller-name: TreesOrganizationController\n      x-operation-name: updateById\n      tags:\n        - TreesOrganizationController\n      responses:\n        '204':\n          description: Trees PATCH success\n      parameters:\n        - name: organizationId\n          in: path\n          schema:\n            type: number\n          required: true\n        - name: id\n          in: path\n          schema:\n            type: number\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Trees'\n        x-parameter-index: 2\n      operationId: TreesOrganizationController.updateById\n    get:\n      x-controller-name: TreesOrganizationController\n      x-operation-name: findById\n      tags:\n        - TreesOrganizationController\n      responses:\n        '200':\n          description: Trees model instance\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Trees'\n      parameters:\n        - name: organizationId\n          in: path\n          schema:\n            type: number\n          required: true\n        - name: id\n          in: path\n          schema:\n            type: number\n          required: true\n      operationId: TreesOrganizationController.findById\n  '/organization/{organizationId}/trees':\n    get:\n      x-controller-name: TreesOrganizationController\n      x-operation-name: find\n      tags:\n        - TreesOrganizationController\n      responses:\n        '200':\n          description: Array of Trees model instances\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Trees'\n      parameters:\n        - name: organizationId\n          in: path\n          schema:\n            type: number\n          required: true\n        - name: filter\n          in: query\n          style: deepObject\n          explode: true\n          schema:\n            type: object\n            properties:\n              where:\n                type: object\n                additionalProperties: true\n              fields:\n                type: object\n                properties:\n                  id:\n                    type: boolean\n                  uuid:\n                    type: boolean\n                  timeCreated:\n                    type: boolean\n                  timeUpdated:\n                    type: boolean\n                  missing:\n                    type: boolean\n                  causeOfDeathId:\n                    type: boolean\n                  planterId:\n                    type: boolean\n                  imageUrl:\n                    type: boolean\n                  lat:\n                    type: boolean\n                  lon:\n                    type: boolean\n                  active:\n                    type: boolean\n                  planterIdentifier:\n                    type: boolean\n                  deviceId:\n                    type: boolean\n                  deviceIdentifier:\n                    type: boolean\n                  note:\n                    type: boolean\n                  verified:\n                    type: boolean\n                  approved:\n                    type: boolean\n                  status:\n                    type: boolean\n                  morphology:\n                    type: boolean\n                  age:\n                    type: boolean\n                  speciesId:\n                    type: boolean\n                  captureApprovalTag:\n                    type: boolean\n                  rejectionReason:\n                    type: boolean\n                  plantingOrganizationId:\n                    type: boolean\n                  planterPhotoUrl:\n                    type: boolean\n                  tokenId:\n                    type: boolean\n                additionalProperties: false\n              offset:\n                type: integer\n                minimum: 0\n              limit:\n                type: integer\n                minimum: 1\n                examples:\n                  - 100\n                example: 100\n              skip:\n                type: integer\n                minimum: 0\n              order:\n                type: array\n                items:\n                  type: string\n              include:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    relation:\n                      type: string\n                    scope:\n                      properties:\n                        where:\n                          type: object\n                          additionalProperties: true\n                        fields:\n                          type: object\n                          properties: {}\n                          additionalProperties: true\n                        offset:\n                          type: integer\n                          minimum: 0\n                        limit:\n                          type: integer\n                          minimum: 1\n                          examples:\n                            - 100\n                          example: 100\n                        skip:\n                          type: integer\n                          minimum: 0\n                        order:\n                          type: array\n                          items:\n                            type: string\n                      additionalProperties: false\n            additionalProperties: false\n      operationId: TreesOrganizationController.find\n  /organizations/count:\n    get:\n      x-controller-name: OrganizationController\n      x-operation-name: count\n      tags:\n        - OrganizationController\n      responses:\n        '200':\n          description: Organization model count\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: number\n      parameters:\n        - name: where\n          in: query\n          style: deepObject\n          explode: true\n          schema:\n            type: object\n            additionalProperties: true\n      operationId: OrganizationController.count\n  '/organizations/{id}':\n    get:\n      x-controller-name: OrganizationController\n      x-operation-name: findById\n      tags:\n        - OrganizationController\n      responses:\n        '200':\n          description: Organization model instance\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Organization'\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: number\n          required: true\n      operationId: OrganizationController.findById\n  /organizations:\n    get:\n      x-controller-name: OrganizationController\n      x-operation-name: find\n      tags:\n        - OrganizationController\n      responses:\n        '200':\n          description: Array of Organization model instances\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Organization'\n      parameters:\n        - name: filter\n          in: query\n          style: deepObject\n          explode: true\n          schema:\n            type: object\n            properties:\n              where:\n                type: object\n                additionalProperties: true\n              fields:\n                type: object\n                properties:\n                  id:\n                    type: boolean\n                  name:\n                    type: boolean\n                  type:\n                    type: boolean\n                additionalProperties: false\n              offset:\n                type: integer\n                minimum: 0\n              limit:\n                type: integer\n                minimum: 1\n                examples:\n                  - 100\n                example: 100\n              skip:\n                type: integer\n                minimum: 0\n              order:\n                type: array\n                items:\n                  type: string\n            additionalProperties: false\n      operationId: OrganizationController.find\n  /ping:\n    get:\n      x-controller-name: PingController\n      x-operation-name: ping\n      tags:\n        - PingController\n      responses:\n        '200':\n          description: Ping Response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  greeting:\n                    type: string\n                  date:\n                    type: string\n                  url:\n                    type: string\n                  headers:\n                    type: object\n                    properties:\n                      Content-Type:\n                        type: string\n                    additionalProperties: true\n      operationId: PingController.ping\n  /planter/count:\n    get:\n      x-controller-name: PlanterController\n      x-operation-name: count\n      tags:\n        - PlanterController\n      responses:\n        '200':\n          description: Planter model count\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: number\n      parameters:\n        - name: where\n          in: query\n          style: deepObject\n          explode: true\n          schema:\n            type: object\n            additionalProperties: true\n      operationId: PlanterController.count\n  '/planter/{id}/selfies':\n    get:\n      x-controller-name: PlanterController\n      x-operation-name: findSelfiesById\n      tags:\n        - PlanterController\n      responses:\n        '200':\n          description: Array of Trees model instances\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Trees'\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: number\n          required: true\n        - name: filter\n          in: query\n          style: deepObject\n          explode: true\n          schema:\n            type: object\n            properties:\n              where:\n                type: object\n                additionalProperties: true\n              fields:\n                type: object\n                properties:\n                  id:\n                    type: boolean\n                  uuid:\n                    type: boolean\n                  timeCreated:\n                    type: boolean\n                  timeUpdated:\n                    type: boolean\n                  missing:\n                    type: boolean\n                  causeOfDeathId:\n                    type: boolean\n                  planterId:\n                    type: boolean\n                  imageUrl:\n                    type: boolean\n                  lat:\n                    type: boolean\n                  lon:\n                    type: boolean\n                  active:\n                    type: boolean\n                  planterIdentifier:\n                    type: boolean\n                  deviceId:\n                    type: boolean\n                  deviceIdentifier:\n                    type: boolean\n                  note:\n                    type: boolean\n                  verified:\n                    type: boolean\n                  approved:\n                    type: boolean\n                  status:\n                    type: boolean\n                  morphology:\n                    type: boolean\n                  age:\n                    type: boolean\n                  speciesId:\n                    type: boolean\n                  captureApprovalTag:\n                    type: boolean\n                  rejectionReason:\n                    type: boolean\n                  plantingOrganizationId:\n                    type: boolean\n                  planterPhotoUrl:\n                    type: boolean\n                  tokenId:\n                    type: boolean\n                additionalProperties: false\n              offset:\n                type: integer\n                minimum: 0\n              limit:\n                type: integer\n                minimum: 1\n                examples:\n                  - 100\n                example: 100\n              skip:\n                type: integer\n                minimum: 0\n              order:\n                type: array\n                items:\n                  type: string\n              include:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    relation:\n                      type: string\n                    scope:\n                      properties:\n                        where:\n                          type: object\n                          additionalProperties: true\n                        fields:\n                          type: object\n                          properties: {}\n                          additionalProperties: true\n                        offset:\n                          type: integer\n                          minimum: 0\n                        limit:\n                          type: integer\n                          minimum: 1\n                          examples:\n                            - 100\n                          example: 100\n                        skip:\n                          type: integer\n                          minimum: 0\n                        order:\n                          type: array\n                          items:\n                            type: string\n                      additionalProperties: false\n            additionalProperties: false\n      operationId: PlanterController.findSelfiesById\n  '/planter/{id}':\n    patch:\n      x-controller-name: PlanterController\n      x-operation-name: updateById\n      tags:\n        - PlanterController\n      responses:\n        '204':\n          description: Planter PATCH success\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: number\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Planter'\n        x-parameter-index: 1\n      operationId: PlanterController.updateById\n    get:\n      x-controller-name: PlanterController\n      x-operation-name: findById\n      tags:\n        - PlanterController\n      responses:\n        '200':\n          description: Planter model instance\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Planter'\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: number\n          required: true\n      operationId: PlanterController.findById\n  /planter:\n    get:\n      x-controller-name: PlanterController\n      x-operation-name: find\n      tags:\n        - PlanterController\n      responses:\n        '200':\n          description: Array of Planter model instances\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Planter'\n      parameters:\n        - name: filter\n          in: query\n          style: deepObject\n          explode: true\n          schema:\n            type: object\n            properties:\n              where:\n                type: object\n                additionalProperties: true\n              fields:\n                type: object\n                properties:\n                  id:\n                    type: boolean\n                  firstName:\n                    type: boolean\n                  lastName:\n                    type: boolean\n                  email:\n                    type: boolean\n                  organization:\n                    type: boolean\n                  phone:\n                    type: boolean\n                  pwdResetRequired:\n                    type: boolean\n                  imageUrl:\n                    type: boolean\n                  personId:\n                    type: boolean\n                  organizationId:\n                    type: boolean\n                additionalProperties: false\n              offset:\n                type: integer\n                minimum: 0\n              limit:\n                type: integer\n                minimum: 1\n                examples:\n                  - 100\n                example: 100\n              skip:\n                type: integer\n                minimum: 0\n              order:\n                type: array\n                items:\n                  type: string\n            additionalProperties: false\n      operationId: PlanterController.find\n  '/planter-registration/{id}':\n    get:\n      x-controller-name: PlanterRegistrationController\n      x-operation-name: findById\n      tags:\n        - PlanterRegistrationController\n      responses:\n        '200':\n          description: PlanterRegistration model instance\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlanterRegistration'\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: number\n          required: true\n      operationId: PlanterRegistrationController.findById\n  /planter-registration:\n    get:\n      x-controller-name: PlanterRegistrationController\n      x-operation-name: find\n      tags:\n        - PlanterRegistrationController\n      responses:\n        '200':\n          description: Array of PlanterRegistration model instances\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PlanterRegistration'\n      parameters:\n        - name: filter\n          in: query\n          style: deepObject\n          explode: true\n          schema:\n            type: object\n            properties:\n              where:\n                type: object\n                additionalProperties: true\n              fields:\n                type: object\n                properties:\n                  id:\n                    type: boolean\n                  planterId:\n                    type: boolean\n                  createdAt:\n                    type: boolean\n                  lat:\n                    type: boolean\n                  lon:\n                    type: boolean\n                additionalProperties: false\n              offset:\n                type: integer\n                minimum: 0\n              limit:\n                type: integer\n                minimum: 1\n                examples:\n                  - 100\n                example: 100\n              skip:\n                type: integer\n                minimum: 0\n              order:\n                type: array\n                items:\n                  type: string\n            additionalProperties: false\n      operationId: PlanterRegistrationController.find\n  /species/combine:\n    post:\n      x-controller-name: SpeciesController\n      x-operation-name: combine\n      tags:\n        - SpeciesController\n      responses:\n        '204':\n          description: Species POST success\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      operationId: SpeciesController.combine\n  /species/count:\n    get:\n      x-controller-name: SpeciesController\n      x-operation-name: count\n      tags:\n        - SpeciesController\n      responses:\n        '200':\n          description: Species model count\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: number\n      parameters:\n        - name: where\n          in: query\n          style: deepObject\n          explode: true\n          schema:\n            type: object\n            additionalProperties: true\n      operationId: SpeciesController.count\n  '/species/{id}':\n    patch:\n      x-controller-name: SpeciesController\n      x-operation-name: updateById\n      tags:\n        - SpeciesController\n      responses:\n        '204':\n          description: Species PATCH success\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: number\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Species'\n        x-parameter-index: 1\n      operationId: SpeciesController.updateById\n    get:\n      x-controller-name: SpeciesController\n      x-operation-name: findById\n      tags:\n        - SpeciesController\n      responses:\n        '200':\n          description: Species model instance\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Species'\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: number\n          required: true\n      operationId: SpeciesController.findById\n    delete:\n      x-controller-name: SpeciesController\n      x-operation-name: delete\n      tags:\n        - SpeciesController\n      responses:\n        '204':\n          description: Species delete success\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: number\n          required: true\n      operationId: SpeciesController.delete\n  /species:\n    post:\n      x-controller-name: SpeciesController\n      x-operation-name: create\n      tags:\n        - SpeciesController\n      responses:\n        '204':\n          description: Species POST success\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Species'\n      operationId: SpeciesController.create\n    get:\n      x-controller-name: SpeciesController\n      x-operation-name: find\n      tags:\n        - SpeciesController\n      responses:\n        '200':\n          description: Array of Species model instances\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Species'\n      parameters:\n        - name: filter\n          in: query\n          style: deepObject\n          explode: true\n          schema:\n            type: object\n            properties:\n              where:\n                type: object\n                additionalProperties: true\n              fields:\n                type: object\n                properties:\n                  id:\n                    type: boolean\n                  name:\n                    type: boolean\n                  desc:\n                    type: boolean\n                  active:\n                    type: boolean\n                  valueFactor:\n                    type: boolean\n                additionalProperties: false\n              offset:\n                type: integer\n                minimum: 0\n              limit:\n                type: integer\n                minimum: 1\n                examples:\n                  - 100\n                example: 100\n              skip:\n                type: integer\n                minimum: 0\n              order:\n                type: array\n                items:\n                  type: string\n            additionalProperties: false\n      operationId: SpeciesController.find\n  /tags/count:\n    get:\n      x-controller-name: TagController\n      x-operation-name: count\n      tags:\n        - TagController\n      responses:\n        '200':\n          description: Tag model count\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: number\n      parameters:\n        - name: where\n          in: query\n          style: deepObject\n          explode: true\n          schema:\n            type: object\n            additionalProperties: true\n      operationId: TagController.count\n  '/tags/{id}':\n    patch:\n      x-controller-name: TagController\n      x-operation-name: updateById\n      tags:\n        - TagController\n      responses:\n        '204':\n          description: Tag PATCH success\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: number\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Tag'\n        x-parameter-index: 1\n      operationId: TagController.updateById\n    get:\n      x-controller-name: TagController\n      x-operation-name: findById\n      tags:\n        - TagController\n      responses:\n        '200':\n          description: Tag model instance\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tag'\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: number\n          required: true\n      operationId: TagController.findById\n    delete:\n      x-controller-name: TagController\n      x-operation-name: delete\n      tags:\n        - TagController\n      responses:\n        '204':\n          description: Tag delete success\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: number\n          required: true\n      operationId: TagController.delete\n  /tags:\n    post:\n      x-controller-name: TagController\n      x-operation-name: create\n      tags:\n        - TagController\n      responses:\n        '204':\n          description: Tag POST success\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Tag'\n      operationId: TagController.create\n    get:\n      x-controller-name: TagController\n      x-operation-name: find\n      tags:\n        - TagController\n      responses:\n        '200':\n          description: Array of Tag model instances\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Tag'\n      parameters:\n        - name: filter\n          in: query\n          style: deepObject\n          explode: true\n          schema:\n            type: object\n            properties:\n              where:\n                type: object\n                additionalProperties: true\n              fields:\n                type: object\n                properties:\n                  id:\n                    type: boolean\n                  tagName:\n                    type: boolean\n                  active:\n                    type: boolean\n                  public:\n                    type: boolean\n                additionalProperties: false\n              offset:\n                type: integer\n                minimum: 0\n              limit:\n                type: integer\n                minimum: 1\n                examples:\n                  - 100\n                example: 100\n              skip:\n                type: integer\n                minimum: 0\n              order:\n                type: array\n                items:\n                  type: string\n            additionalProperties: false\n      operationId: TagController.find\n  /tree_tags/count:\n    get:\n      x-controller-name: TreeTagController\n      x-operation-name: count\n      tags:\n        - TreeTagController\n      responses:\n        '200':\n          description: TreeTag model count\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: number\n      parameters:\n        - name: where\n          in: query\n          style: deepObject\n          explode: true\n          schema:\n            type: object\n            additionalProperties: true\n      operationId: TreeTagController.count\n  '/tree_tags/{id}':\n    patch:\n      x-controller-name: TreeTagController\n      x-operation-name: updateById\n      tags:\n        - TreeTagController\n      responses:\n        '204':\n          description: TreeTag PATCH success\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: number\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TreeTag'\n        x-parameter-index: 1\n      operationId: TreeTagController.updateById\n    get:\n      x-controller-name: TreeTagController\n      x-operation-name: findById\n      tags:\n        - TreeTagController\n      responses:\n        '200':\n          description: TreeTag model instance\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TreeTag'\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: number\n          required: true\n      operationId: TreeTagController.findById\n    delete:\n      x-controller-name: TreeTagController\n      x-operation-name: delete\n      tags:\n        - TreeTagController\n      responses:\n        '204':\n          description: TreeTag delete success\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: number\n          required: true\n      operationId: TreeTagController.delete\n  /tree_tags:\n    post:\n      x-controller-name: TreeTagController\n      x-operation-name: create\n      tags:\n        - TreeTagController\n      responses:\n        '204':\n          description: TreeTag POST success\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TreeTag'\n      operationId: TreeTagController.create\n    get:\n      x-controller-name: TreeTagController\n      x-operation-name: find\n      tags:\n        - TreeTagController\n      responses:\n        '200':\n          description: Array of TreeTag model instances\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TreeTag'\n      parameters:\n        - name: filter\n          in: query\n          style: deepObject\n          explode: true\n          schema:\n            type: object\n            properties:\n              where:\n                type: object\n                additionalProperties: true\n              fields:\n                type: object\n                properties:\n                  id:\n                    type: boolean\n                  treeId:\n                    type: boolean\n                  tagId:\n                    type: boolean\n                additionalProperties: false\n              offset:\n                type: integer\n                minimum: 0\n              limit:\n                type: integer\n                minimum: 1\n                examples:\n                  - 100\n                example: 100\n              skip:\n                type: integer\n                minimum: 0\n              order:\n                type: array\n                items:\n                  type: string\n            additionalProperties: false\n      operationId: TreeTagController.find\n  /trees/count:\n    get:\n      x-controller-name: TreesController\n      x-operation-name: count\n      tags:\n        - TreesController\n      responses:\n        '200':\n          description: Trees model count\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: number\n      parameters:\n        - name: where\n          in: query\n          style: deepObject\n          explode: true\n          schema:\n            type: object\n            additionalProperties: true\n      operationId: TreesController.count\n  /trees/near:\n    get:\n      x-controller-name: TreesController\n      x-operation-name: near\n      tags:\n        - TreesController\n      responses:\n        '200':\n          description: Find trees near a lat/lon with a radius in meters\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Trees'\n      parameters:\n        - name: lat\n          in: query\n          schema:\n            type: number\n        - name: lon\n          in: query\n          schema:\n            type: number\n        - name: radius\n          in: query\n          required: false\n          schema:\n            type: number\n          description: 'measured in meters (default: 100 meters)'\n        - name: limit\n          in: query\n          required: false\n          schema:\n            type: number\n          description: default is 100\n      operationId: TreesController.near\n  '/trees/{id}/tree_tags':\n    post:\n      x-controller-name: TreesTreeTagController\n      x-operation-name: create\n      tags:\n        - TreesTreeTagController\n      responses:\n        '200':\n          description: Trees model instance\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TreeTag'\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: number\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewTreeTagInTrees'\n        x-parameter-index: 1\n      operationId: TreesTreeTagController.create\n    patch:\n      x-controller-name: TreesTreeTagController\n      x-operation-name: patch\n      tags:\n        - TreesTreeTagController\n      responses:\n        '200':\n          description: Trees.TreeTag PATCH success count\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: number\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: number\n          required: true\n        - name: where\n          in: query\n          style: deepObject\n          explode: true\n          schema:\n            type: object\n            additionalProperties: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TreeTagPartial'\n        x-parameter-index: 1\n      operationId: TreesTreeTagController.patch\n    get:\n      x-controller-name: TreesTreeTagController\n      x-operation-name: find\n      tags:\n        - TreesTreeTagController\n      responses:\n        '200':\n          description: Array of Trees has many TreeTag\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/TreeTag'\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: number\n          required: true\n        - name: filter\n          in: query\n          style: deepObject\n          explode: true\n          schema:\n            type: object\n            additionalProperties: true\n      operationId: TreesTreeTagController.find\n    delete:\n      x-controller-name: TreesTreeTagController\n      x-operation-name: delete\n      tags:\n        - TreesTreeTagController\n      responses:\n        '200':\n          description: Trees.TreeTag DELETE success count\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: number\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: number\n          required: true\n        - name: where\n          in: query\n          style: deepObject\n          explode: true\n          schema:\n            type: object\n            additionalProperties: true\n      operationId: TreesTreeTagController.delete\n  '/trees/{id}':\n    patch:\n      x-controller-name: TreesController\n      x-operation-name: updateById\n      tags:\n        - TreesController\n      responses:\n        '204':\n          description: Trees PATCH success\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: number\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Trees'\n        x-parameter-index: 1\n      operationId: TreesController.updateById\n    get:\n      x-controller-name: TreesController\n      x-operation-name: findById\n      tags:\n        - TreesController\n      responses:\n        '200':\n          description: Trees model instance\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Trees'\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: number\n          required: true\n      operationId: TreesController.findById\n  /trees:\n    get:\n      x-controller-name: TreesController\n      x-operation-name: find\n      tags:\n        - TreesController\n      responses:\n        '200':\n          description: Array of Trees model instances\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Trees'\n      parameters:\n        - name: filter\n          in: query\n          style: deepObject\n          explode: true\n          schema:\n            type: object\n            properties:\n              where:\n                type: object\n                additionalProperties: true\n              fields:\n                type: object\n                properties:\n                  id:\n                    type: boolean\n                  uuid:\n                    type: boolean\n                  timeCreated:\n                    type: boolean\n                  timeUpdated:\n                    type: boolean\n                  missing:\n                    type: boolean\n                  causeOfDeathId:\n                    type: boolean\n                  planterId:\n                    type: boolean\n                  imageUrl:\n                    type: boolean\n                  lat:\n                    type: boolean\n                  lon:\n                    type: boolean\n                  active:\n                    type: boolean\n                  planterIdentifier:\n                    type: boolean\n                  deviceId:\n                    type: boolean\n                  deviceIdentifier:\n                    type: boolean\n                  note:\n                    type: boolean\n                  verified:\n                    type: boolean\n                  approved:\n                    type: boolean\n                  status:\n                    type: boolean\n                  morphology:\n                    type: boolean\n                  age:\n                    type: boolean\n                  speciesId:\n                    type: boolean\n                  captureApprovalTag:\n                    type: boolean\n                  rejectionReason:\n                    type: boolean\n                  plantingOrganizationId:\n                    type: boolean\n                  planterPhotoUrl:\n                    type: boolean\n                  tokenId:\n                    type: boolean\n                additionalProperties: false\n              offset:\n                type: integer\n                minimum: 0\n              limit:\n                type: integer\n                minimum: 1\n                examples:\n                  - 100\n                example: 100\n              skip:\n                type: integer\n                minimum: 0\n              order:\n                type: array\n                items:\n                  type: string\n              include:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    relation:\n                      type: string\n                    scope:\n                      properties:\n                        where:\n                          type: object\n                          additionalProperties: true\n                        fields:\n                          type: object\n                          properties: {}\n                          additionalProperties: true\n                        offset:\n                          type: integer\n                          minimum: 0\n                        limit:\n                          type: integer\n                          minimum: 1\n                          examples:\n                            - 100\n                          example: 100\n                        skip:\n                          type: integer\n                          minimum: 0\n                        order:\n                          type: array\n                          items:\n                            type: string\n                      additionalProperties: false\n            additionalProperties: false\n      operationId: TreesController.find\nservers:\n  - url: 'http://localhost:3000/api'\ncomponents:\n  schemas:\n    Organization:\n      title: Organization\n      properties:\n        id:\n          type: number\n        name:\n          type: string\n        type:\n          type: string\n      additionalProperties: false\n    Planter:\n      title: Planter\n      properties:\n        id:\n          type: number\n        firstName:\n          type: string\n        lastName:\n          type: string\n        email:\n          type: string\n        organization:\n          type: string\n        phone:\n          type: string\n        pwdResetRequired:\n          type: boolean\n        imageUrl:\n          type: string\n        personId:\n          type: number\n        organizationId:\n          type: number\n          nullable: true\n      required:\n        - id\n      additionalProperties: false\n    Trees:\n      title: Trees\n      properties:\n        id:\n          type: number\n        uuid:\n          type: string\n        timeCreated:\n          type: string\n        timeUpdated:\n          type: string\n        missing:\n          type: boolean\n        causeOfDeathId:\n          type: number\n        planterId:\n          type: number\n        imageUrl:\n          type: string\n        lat:\n          type: number\n        lon:\n          type: number\n        active:\n          type: boolean\n        planterIdentifier:\n          type: string\n        deviceId:\n          type: number\n        deviceIdentifier:\n          type: string\n        note:\n          type: string\n        verified:\n          type: boolean\n        approved:\n          type: boolean\n        status:\n          type: string\n        morphology:\n          type: string\n        age:\n          type: string\n        speciesId:\n          type: number\n        captureApprovalTag:\n          type: string\n        rejectionReason:\n          type: string\n        plantingOrganizationId:\n          type: number\n        planterPhotoUrl:\n          type: string\n        tokenId:\n          type: string\n      additionalProperties: false\n    PlanterRegistration:\n      title: PlanterRegistration\n      properties:\n        id:\n          type: number\n        planterId:\n          type: number\n        createdAt:\n          type: string\n          format: date-time\n        lat:\n          type: number\n        lon:\n          type: number\n      required:\n        - id\n        - createdAt\n      additionalProperties: false\n    Species:\n      title: Species\n      properties:\n        id:\n          type: number\n        name:\n          type: string\n        desc:\n          type: string\n        active:\n          type: boolean\n        valueFactor:\n          type: number\n      additionalProperties: false\n    Tag:\n      title: Tag\n      properties:\n        id:\n          type: number\n        tagName:\n          type: string\n        active:\n          type: boolean\n        public:\n          type: boolean\n      additionalProperties: false\n    TreeTag:\n      title: TreeTag\n      properties:\n        id:\n          type: number\n        treeId:\n          type: number\n        tagId:\n          type: number\n      additionalProperties: false\n    NewTreeTagInTrees:\n      title: NewTreeTagInTrees\n      description: \"(Schema options: { title: 'NewTreeTagInTrees', exclude: [ 'id' ], optional: [ 'treeId' ] })\"\n      properties:\n        treeId:\n          type: number\n        tagId:\n          type: number\n      additionalProperties: false\n    TreeTagPartial:\n      title: TreeTagPartial\n      description: '(Schema options: { partial: true })'\n      properties:\n        id:\n          type: number\n        treeId:\n          type: number\n        tagId:\n          type: number\n      additionalProperties: false\n",
			"canonicalURL": "/github.com/Greenstand/treetracker-admin-api@ffe026e4256903e293908c88428d526be2dd901d/-/blob/docs/api/spec/treetracker-admin.v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Greenstand/treetracker-admin-api/blob/ffe026e4256903e293908c88428d526be2dd901d/docs/api/spec/treetracker-admin.v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/organization/{organizationId}/planter-registration\": get: operation \"PlanterOrganizationController.findPlanterRegistration\": at 1:5206: parse path \"/organization/{organizationId}/planter-registration\": path parameter not specified: \"organizationId\""
}