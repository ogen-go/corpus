{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hms-dbmi-cellenics/api"
		},
		"file": {
			"name": "api.v2.yaml",
			"size": 0,
			"path": "src/specs/api.v2.yaml",
			"byteSize": 7776,
			"content": "openapi: 3.0.0\ninfo:\n  title: API\n  version: 2.0.0\n  description: The main Node.js pipeline API.\n  license:\n    name: MIT\n    url: 'https://github.com/hms-dbmi-cellenics/api/blob/master/LICENSE'\n  contact:\n    name: Biomage Ltd.\nservers:\n  - url: /v2\ntags:\n  - name: experiments\n    description: Manage your experiments and experiment details.\n  - name: heartbeat\n    description: API health checks.\n  - name: work\n    description: Submitting and receiving work.\n  - name: processing-config\n    description: Structure for configuration of processing steps.\npaths:\n  /health:\n    get:\n      tags:\n        - heartbeat\n      summary: API health check\n      operationId: checkHealth\n      x-eov-operation-id: health#check\n      x-eov-operation-handler: routes/health\n      responses:\n        '200':\n          description: API is available.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                    pattern: up\n                  env:\n                    type: string\n                    enum:\n                      - development\n                      - test\n                      - staging\n                      - production\n                  clusterEnv:\n                    type: string\n                    enum:\n                      - development\n                      - test\n                      - staging\n                      - production\n                required:\n                  - status\n                  - env\n                  - clusterEnv\n      description: Returns a status on the health of the API.\n  '/experiments':\n    get:\n      summary: Get all experiments\n      description: Get all experiments that the user can access\n      operationId: getAllExperiments\n      x-eov-operation-id: experiment#getAllExperiments\n      x-eov-operation-handler: routes/experiment\n      responses:\n        '200':\n          description: All experiments that the user can acess\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllExperiments'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '404':\n          description: Not found error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n  '/experiments/{experimentId}':\n    get:\n      summary: Get an experiment\n      description: Get an experiment\n      operationId: getExperiment\n      x-eov-operation-id: experiment#getExperiment\n      x-eov-operation-handler: routes/experiment\n      responses:\n        '200':\n          description: Get experiment\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExperimentInfo'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '404':\n          description: Not found error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n    post:\n      summary: Create experiment\n      description: Create a new experiment\n      operationId: createExperiment\n      x-eov-operation-id: experiment#createExperiment\n      x-eov-operation-handler: routes/experiment\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateExperiment'\n      responses:\n        '200':\n          description: Create experiment\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPSuccess'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n    patch:\n      summary: Patch an experiment\n      description: Update some properties in an experiment\n      operationId: patchExperiment\n      x-eov-operation-id: experiment#patchExperiment\n      x-eov-operation-handler: routes/experiment\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExperimentPatch'\n      responses:\n        '200':\n          description: Create experiment\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPSuccess'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '404':\n          description: Not found error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n  '/experiments/{experimentId}/samples/position':\n    put:\n      summary: Update position for a sample\n      description: Set a new position for a sample\n      operationId: updateSamplePosition\n      x-eov-operation-id: experiment#updateSamplePosition\n      x-eov-operation-handler: routes/experiment\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                oldPosition: \n                  type: integer\n                newPosition:\n                  type: integer\n              required:\n                - oldPosition\n                - newPosition\n              additionalProperties: false\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPSuccess'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '404':\n          description: Not found error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\ncomponents:\n  schemas:\n    CreateExperiment:\n      $ref: './models/experiment-bodies/CreateExperiment.v2.yaml'\n    ExperimentInfo:\n      $ref: './models/experiment-bodies/ExperimentInfo.v2.yaml'\n    ExperimentPatch:\n      $ref: './models/experiment-bodies/ExperimentPatch.v2.yaml'\n    GetAllExperiments:\n      $ref: './models/experiment-bodies/GetAllExperiments.v2.yaml'\n    HTTPSuccess:\n      $ref: './models/HTTPSuccess.v1.yaml'\n    HTTPError:\n      $ref: './models/HTTPError.v1.yaml'"
		}
	},
	"Error": "parse: parse spec: paths: /experiments: get: operation \"getAllExperiments\": responses: 200: content: \"application/json\": schema: parse schema: resolve \"#/components/schemas/GetAllExperiments\": parse schema: resolve \"./models/experiment-bodies/GetAllExperiments.v2.yaml\": find schema: external base \"./models/experiment-bodies/GetAllExperiments.v2.yaml\" is not supported"
}