{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Szer/GiraffeGenerator"
		},
		"file": {
			"name": "specWithValidation.yaml",
			"path": "tests/GiraffeGenerator.IntegrationTests/specs/specWithValidation.yaml",
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: Spec with validated arguments\n  version: 1\npaths:\n  /test-validation/{versionEnum}/{stringOfRestrictedToBeBetween3And8Length}:\n    parameters:\n      - name: versionEnum\n        in: path\n        required: true\n        schema:\n          type: integer\n          enum:\n            - 1\n            - 2\n            - 3\n      - name: stringOfRestrictedToBeBetween3And8Length\n        in: path\n        required: true\n        schema:\n          type: string\n          minLength: 3\n          maxLength: 8\n    post:\n      tags:\n        - search\n      summary: \u003e-\n        Used to test validation\n      operationId: TestValidation\n      parameters:\n        - name: maxLengthRestrictedTo8String\n          schema:\n            type: string\n            maxLength: 8\n          in: query\n          required: true\n        - name: minLengthRestrictedTo3String\n          schema:\n            type: string\n            minLength: 3\n          in: query\n          required: true\n        - name: stringOfDDMMMPattern\n          schema:\n            type: string\n            pattern: ^((3[0-1])|([0-2]?[0-9]))(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov)$\n          in: query\n          required: true\n        - name: stringOfLengthBetween8And64ContainingAGiraffe\n          schema:\n            type: string\n            pattern: giraffe\n            minLength: 8\n            maxLength: 64\n          in: query\n          required: true\n        - name: integerDivisibleBy2\n          schema:\n            type: integer\n            multipleOf: 2\n          in: query\n          required: true\n        - name: integerBetween8And64\n          schema:\n            type: integer\n            minimum: 8\n            maximum: 64\n          in: query\n          required: true\n        - name: integerBetween8And64Exclusive\n          schema:\n            type: integer\n            minimum: 8\n            maximum: 64\n            exclusiveMaximum: true\n          in: query\n          required: true\n        - name: integerBetween8ExclusiveAnd64\n          schema:\n            type: integer\n            minimum: 8\n            exclusiveMinimum: true\n            maximum: 64\n          in: query\n          required: true\n        - name: integerBetween8ExclusiveAnd64Exclusive\n          schema:\n            type: integer\n            minimum: 8\n            exclusiveMinimum: true\n            maximum: 64\n            exclusiveMaximum: true\n          in: query\n          required: true\n        - name: integerGTE8\n          schema:\n            type: integer\n            minimum: 8\n          in: query\n          required: true\n        - name: integerGT8\n          schema:\n            type: integer\n            minimum: 8\n            exclusiveMinimum: true\n          in: query\n          required: true\n        - name: integerLTE64\n          schema:\n            type: integer\n            maximum: 64\n          in: query\n          required: true\n        - name: integerLT64\n          schema:\n            type: integer\n            maximum: 64\n            exclusiveMaximum: true\n          in: query\n          required: true\n        - name: integerEQ64\n          schema:\n            type: integer\n            minimum: 64\n            maximum: 64\n          in: query\n          required: true\n        - name: longEnum\n          in: query\n          required: true\n          schema:\n            type: integer\n            format: int64\n            enum:\n              - -9223372036854775808\n              - 0\n              - 9223372036854775807\n        - name: longDivisibleBy2\n          schema:\n            type: integer\n            format: int64\n            multipleOf: 2\n          in: query\n          required: true\n        - name: longBetween8And64\n          schema:\n            type: integer\n            format: int64\n            minimum: 8\n            maximum: 64\n          in: query\n          required: true\n        - name: longBetween8And64Exclusive\n          schema:\n            type: integer\n            format: int64\n            minimum: 8\n            maximum: 64\n            exclusiveMaximum: true\n          in: query\n          required: true\n        - name: longBetween8ExclusiveAnd64\n          schema:\n            type: integer\n            format: int64\n            minimum: 8\n            exclusiveMinimum: true\n            maximum: 64\n          in: query\n          required: true\n        - name: longBetween8ExclusiveAnd64Exclusive\n          schema:\n            type: integer\n            format: int64\n            minimum: 8\n            exclusiveMinimum: true\n            maximum: 64\n            exclusiveMaximum: true\n          in: query\n          required: true\n        - name: longGTE8\n          schema:\n            type: integer\n            format: int64\n            minimum: 8\n          in: query\n          required: true\n        - name: longGT8\n          schema:\n            type: integer\n            format: int64\n            minimum: 8\n            exclusiveMinimum: true\n          in: query\n          required: true\n        - name: longLTE64\n          schema:\n            type: integer\n            format: int64\n            maximum: 64\n          in: query\n          required: true\n        - name: longLT64\n          schema:\n            type: integer\n            format: int64\n            maximum: 64\n            exclusiveMaximum: true\n          in: query\n          required: true\n        - name: longEQ64\n          schema:\n            type: integer\n            format: int64\n            minimum: 64\n            maximum: 64\n          in: query\n          required: true\n        - name: floatEnum\n          in: query\n          required: true\n          schema:\n            type: number\n            enum:\n              - 3.14\n              - 3.141\n              - 3.1415\n              - 3.14159\n              - 3.141592\n        - name: floatBetween8And64\n          schema:\n            type: number\n            minimum: 8\n            maximum: 64\n          in: query\n          required: true\n        - name: floatBetween8And64Exclusive\n          schema:\n            type: number\n            minimum: 8\n            maximum: 64\n            exclusiveMaximum: true\n          in: query\n          required: true\n        - name: floatBetween8ExclusiveAnd64\n          schema:\n            type: number\n            minimum: 8\n            exclusiveMinimum: true\n            maximum: 64\n          in: query\n          required: true\n        - name: floatBetween8ExclusiveAnd64Exclusive\n          schema:\n            type: number\n            minimum: 8\n            exclusiveMinimum: true\n            maximum: 64\n            exclusiveMaximum: true\n          in: query\n          required: true\n        - name: floatGTE8\n          schema:\n            type: number\n            minimum: 8\n          in: query\n          required: true\n        - name: floatGT8\n          schema:\n            type: number\n            minimum: 8\n            exclusiveMinimum: true\n          in: query\n          required: true\n        - name: floatLTE64\n          schema:\n            type: number\n            maximum: 64\n          in: query\n          required: true\n        - name: floatLT64\n          schema:\n            type: number\n            maximum: 64\n            exclusiveMaximum: true\n          in: query\n          required: true\n        - name: floatEQ64\n          schema:\n            type: number\n            minimum: 64\n            maximum: 64\n          in: query\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              uniqueItems: true\n              items:\n                type: object\n                properties:\n                  arrayOf2To4UniqueItems:\n                    type: array\n                    uniqueItems: true\n                    minItems: 2\n                    maxItems: 4\n                    items:\n                      type: integer\n                  arrayOf2To4Items:\n                    type: array\n                    minItems: 2\n                    maxItems: 4\n                    items:\n                      type: integer\n                  arrayOptionOfMinimum2Items:\n                    type: array\n                    minItems: 2\n                    items:\n                      type: integer\n                  arrayOfMaximum4Items:\n                    type: array\n                    maxItems: 4\n                    items:\n                      type: integer\n                  nestedValidationArrayOfIntGTE2:\n                    type: array\n                    items:\n                      type: integer\n                      minimum: 2\n                  nestedValidationObjectOfIntGTE2:\n                    type: object\n                    properties:\n                      nestedIntGT2:\n                        type: integer\n                        minimum: 2\n                    required:\n                      - nestedIntGT2\n                  nestedValidationOptionOfIntGTE2:\n                    type: integer\n                    minimum: 2\n                  deeplyNestedValidation:\n                    type: array\n                    items:\n                      type: array\n                      uniqueItems: true\n                      maxItems: 2\n                      items:\n                        type: object\n                        properties:\n                          intGTE2ObjectOption:\n                            type: object\n                            properties:\n                              intGTE2Option:\n                                type: integer\n                                minimum: 2\n                required:\n                  - arrayOf2To4UniqueItems\n                  - arrayOf2To4Items\n                  - arrayOfMaximum4Items\n                  - nestedValidationArrayOfIntGTE2\n                  - nestedValidationObjectOfIntGTE2\n      responses:\n        '200':\n          description: object is valid\n          content:\n            application/json:\n              schema:\n                type: string\n        '400':\n          description: object is invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/validationErrorResponse'\ncomponents:\n  schemas:\n    validationErrorResponse:\n      type: object\n      properties:\n        validationErrors:\n          type: array\n          items:\n            type: object\n            properties:\n              location:\n                type: string\n              propertyPath:\n                type: array\n                items:\n                  type: string\n              message:\n                type: string\n            required:\n              - location\n              - propertyPath\n              - message\n        otherErrors:\n          type: string\n      required:\n        - validationErrors"
		}
	},
	"Error": "json: cannot unmarshal number into Go struct field Info.info.version of type string"
}