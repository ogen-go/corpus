{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/zoho.books/openapi.yaml",
			"byteSize": 11150,
			"content": "openapi: 3.0.1\ninfo:\n  title: Zoho Books API\n  description: \u003e\n    This is a generated connector for [Zoho Books API] OpenAPI specification.\n\n    Zoho Books is online accounting software that manages your finances, automates business workflows, and helps you work collectively across departments.\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials. \n  \n    Create an [Zoho account](https://www.zoho.com/books/signup/) and obtain tokens following [this guide](https://www.zoho.com/books/api/v3/#oauth).\n  x-ballerina-display:\n    label: Zoho Books\n    iconPath: \"icon.png\"\n  version: \"v3\"\nservers:\n- url: https://books.zoho.com\nsecurity:\n  - OAuth2: []\n  - Bearer: []\npaths:\n  /api/v3/contacts:\n    get:\n      summary: List contacts.\n      operationId: listContacts\n      parameters:\n          - in: query\n            name: organization_id\n            schema:\n              type: integer\n            required: true\n            description: Unique identifier for an organization      \n      responses:\n        200:\n          description: Returns list of contacts available\n          content:\n            application/json: \n              schema:\n                $ref: '#/schemas/ContactList'\n    post:\n      summary: Add a contact.\n      operationId: addContact\n      parameters:\n          - in: query\n            name: organization_id\n            schema:\n              type: integer\n            required: true\n            description: Unique identifier for an organization   \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Contact'\n        description: Input contact data in JSON format\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Contact'\n          description: Success\n  /api/v3/contacts/{contacts_id}:\n    get:\n      summary: Get Contact.\n      operationId: getContact\n      parameters:\n          - in: path\n            name: contacts_id\n            schema:\n              type: integer\n            required: true\n            description: Unique identifier for an contact   \n          - in: query\n            name: organization_id\n            schema:\n              type: integer\n            required: true\n            description: Unique identifier for an organization      \n      responses:\n        200:\n          description: Returns information of a contact\n          content:\n            application/json: \n              schema:\n                $ref: '#/schemas/Contact'\n    put:\n      summary: Update a contact.\n      operationId: updateContact\n      parameters:\n          - in: path\n            name: contacts_id\n            schema:\n              type: integer\n            required: true\n            description: Unique identifier for an contact   \n          - in: query\n            name: organization_id\n            schema:\n              type: integer\n            required: true\n            description: Unique identifier for an organization   \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Contact'\n        description: Update contact data in JSON format\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Contact'\n          description: Success\n    delete:\n      summary: Delete a contact.\n      operationId: deleteContact\n      parameters:\n          - in: path\n            name: contacts_id\n            schema:\n              type: integer\n            required: true\n            description: Unique identifier for an contact   \n          - in: query\n            name: organization_id\n            schema:\n              type: integer\n            required: true\n            description: Unique identifier for an organization \n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: \n              schema:\n                $ref: \"#/components/schemas/SuccessOperation\"\n  /api/v3/invoices:\n    get:\n      summary: List Invoices.\n      operationId: listInvoices\n      parameters:\n          - in: query\n            name: organization_id\n            schema:\n              type: integer\n            required: true\n            description: Unique identifier for an organization      \n      responses:\n        200:\n          description: Returns list of invoices available\n          content:\n            application/json: \n              schema:\n                $ref: '#/schemas/InvoiceList'\n    post:\n      summary: Add an invoice.\n      operationId: addInvoice\n      parameters:\n          - in: query\n            name: organization_id\n            schema:\n              type: integer\n            required: true\n            description: Unique identifier for an organization   \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Invoice'\n        description: Input invoice data in JSON format\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Invoice'\n          description: Success\n  /api/v3/invoices/{invoice_id}:\n    get:\n      summary: Get Invoice.\n      operationId: getInvoice\n      parameters:\n          - in: path\n            name: invoice_id\n            schema:\n              type: integer\n            required: true\n            description: Unique identifier for an invoice   \n          - in: query\n            name: organization_id\n            schema:\n              type: integer\n            required: true\n            description: Unique identifier for an organization      \n      responses:\n        200:\n          description: Returns information of a invoice\n          content:\n            application/json: \n              schema:\n                $ref: '#/schemas/Invoice'\n    put:\n      summary: Update an invoice.\n      operationId: updateInvoice\n      parameters:\n          - in: path\n            name: invoice_id\n            schema:\n              type: integer\n            required: true\n            description: Unique identifier for an invoice   \n          - in: query\n            name: organization_id\n            schema:\n              type: integer\n            required: true\n            description: Unique identifier for an organization   \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Invoice'\n        description: Update invoice data in JSON format\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Invoice'\n          description: Success\n    delete:\n      summary: Delete an invoice.\n      operationId: deleteInvoice\n      parameters:\n          - in: path\n            name: invoice_id\n            schema:\n              type: integer\n            required: true\n            description: Unique identifier for an invoice   \n          - in: query\n            name: organization_id\n            schema:\n              type: integer\n            required: true\n            description: Unique identifier for an organization \n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: \n              schema:\n                $ref: \"#/components/schemas/SuccessOperation\"\ncomponents:\n  securitySchemes:\n    OAuth2:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: https://accounts.zoho.com/oauth/v2/auth\n          tokenUrl: https://accounts.zoho.com/oauth/v2/token\n          scopes: {}\n    Bearer:\n      type: http\n      scheme: bearer\n  schemas:\n    Contact:\n      type: object\n      properties:\n        code:\n          type: integer\n        message:\n          type: string\n        contact:\n          type: array\n          items:\n            $ref: '#/schemas/ContactInfo'\n    ContactList:\n      type: object\n      properties:\n        code:\n          type: integer\n        message:\n          type: string\n        contacts:\n          type: array\n          items:\n            $ref: '#/schemas/ContactInfo'\n        page_context:\n          type: object\n          properties:\n            page:\n              type: integer\n            per_page:\n              type: integer\n            has_more_page:\n              type: boolean \n            applied_filter:\n              type: string\n            sort_column:\n              type: string\n            sort_order:\n              type: string          \n    ContactInfo:\n      type: object\n      properties:\n        contact_id:\n          type: integer\n        contact_name:\n          type: string\n        company_name:\n          type: string\n        contact_type:\n          type: string\n        status:\n          type: string\n        payment_terms:\n          type: integer\n        payment_terms_label:\n          type: string\n        currency_id:\n          type: integer\n        currency_code:\n          type: string\n        outstanding_receivable_amount:\n          type: integer\n        unused_credits_receivable_amount:\n          type: number\n        first_name:\n          type: string\n        last_name:\n          type: string\n        email:\n          type: string\n        phone:\n          type: string          \n        mobile:\n          type: string\n        created_time:\n          type: string\n        last_modified_time:\n          type: string\n    Invoice:\n      type: object\n      properties:\n        code:\n          type: integer\n        message:\n          type: string\n        contact:\n          type: array\n          items:\n            $ref: '#/schemas/InvoiceInfo'\n    InvoiceList:\n      type: object\n      properties:\n        code:\n          type: integer\n        message:\n          type: string\n        invoices:\n          type: array\n          items:\n            $ref: '#/schemas/InvoiceInfo'\n        page_context:\n          type: object\n          properties:\n            page:\n              type: integer\n            per_page:\n              type: integer\n            has_more_page:\n              type: boolean \n            report_name:\n              type: string\n            applied_filter:\n              type: string\n            sort_column:\n              type: string\n            sort_order:\n              type: string     \n    InvoiceInfo:\n      type: object\n      properties:\n        invoice_id:\n          type: integer\n        ach_payment_initiated:\n          type: boolean\n        customer_name:\n          type: string\n        customer_id:\n          type: integer\n        status:\n          type: string\n        invoice_number:\n          type: string\n    SuccessOperation:\n      properties:\n        code:    \n          description: Operation status\n          type: integer\n        message:\n          description: Message\n          type: string\n    Errors:\n      properties:\n        code:\n          type: integer\n        message:\n          type: string\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@d8de4a705adce6beeffb8dd580f8d61a7d2662dc/-/blob/openapi/zoho.books/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/d8de4a705adce6beeffb8dd580f8d61a7d2662dc/openapi/zoho.books/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"InvoiceList\": parse schema: property \"invoices\": parse schema: parse schema: at 1:1841: find schema: resolve: can't find value for \"schemas/InvoiceInfo\""
}