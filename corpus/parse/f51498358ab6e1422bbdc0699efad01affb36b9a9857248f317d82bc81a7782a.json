{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "alerts_management.yaml",
			"size": 0,
			"path": "providers/src/azure_extras/v0.1.1/services/alerts_management.yaml",
			"byteSize": 85248,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://management.azure.com/\ninfo:\n  title: Azure Alerts Management Service Resource Provider (Microsoft.AlertsManagement)\n  description: APIs for Azure alert processing rules CRUD operations.\n  contact:\n    name: StackQL Studios\n    url: https://stackql.io/\n    email: info@stackql.io\n  version: 2022-08-24-stackql-generated\nsecurity:\n  - azure_auth:\n      - user_impersonation\ncomponents:\n  securitySchemes:\n    azure_auth:\n      description: Azure Active Directory OAuth2 Flow.\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize\n          scopes:\n            user_impersonation: impersonate your user account\n  schemas:\n    operation:\n      description: Operation provided by provider\n      properties:\n        name:\n          type: string\n          description: Name of the operation\n        display:\n          type: object\n          description: Properties of the operation\n          properties:\n            provider:\n              type: string\n              description: Provider name\n            resource:\n              type: string\n              description: Resource name\n            operation:\n              type: string\n              description: Operation name\n            description:\n              type: string\n              description: Description of the operation\n        origin:\n          type: string\n          description: Origin of the operation\n      type: object\n    operationsList:\n      description: Lists the operations available in the AlertsManagement RP.\n      properties:\n        nextLink:\n          description: URL to fetch the next set of alerts.\n          type: string\n        value:\n          description: Array of operations\n          type: array\n          items:\n            $ref: '#/components/schemas/operation'\n      required:\n        - value\n      type: object\n    errorResponse:\n      description: An error response from the service.\n      properties:\n        error:\n          $ref: '#/components/schemas/errorResponseBody'\n      type: object\n    errorResponseBody:\n      description: Details of error response.\n      properties:\n        code:\n          type: string\n          description: Error code, intended to be consumed programmatically.\n        message:\n          type: string\n          description: Description of the error, intended for display in user interface.\n        target:\n          type: string\n          description: Target of the particular error, for example name of the property.\n        details:\n          type: array\n          description: A list of additional details about the error.\n          items:\n            $ref: '#/components/schemas/errorResponseBody'\n      type: object\n    Resource:\n      x-ms-azure-resource: true\n      description: An azure resource object\n      properties:\n        id:\n          type: string\n          readOnly: true\n          description: Azure resource Id\n        type:\n          type: string\n          readOnly: true\n          description: Azure resource type\n        name:\n          type: string\n          readOnly: true\n          description: Azure resource name\n      type: object\n    alert:\n      type: object\n      description: An alert created in alert management service.\n      allOf:\n        - $ref: '#/components/schemas/Resource'\n      properties:\n        properties:\n          $ref: '#/components/schemas/alertProperties'\n    alertsList:\n      type: object\n      description: List the alerts.\n      properties:\n        nextLink:\n          description: URL to fetch the next set of alerts.\n          type: string\n        value:\n          description: List of alerts\n          type: array\n          items:\n            $ref: '#/components/schemas/alert'\n    alertProperties:\n      type: object\n      description: Alert property bag\n      properties:\n        essentials:\n          $ref: '#/components/schemas/essentials'\n        context:\n          $ref: '#/components/schemas/alertContext'\n        egressConfig:\n          $ref: '#/components/schemas/egressConfig'\n    egressConfig:\n      type: object\n      description: Config which would be used for displaying the data in portal.\n      readOnly: true\n    alertContext:\n      type: object\n      description: Information specific to the monitor service that gives more contextual details about the alert.\n      readOnly: true\n    actionStatus:\n      type: object\n      description: Action status\n      properties:\n        isSuppressed:\n          type: boolean\n          description: Value indicating whether alert is suppressed.\n    essentials:\n      type: object\n      description: This object contains consistent fields across different monitor services.\n      properties:\n        severity:\n          type: string\n          description: Severity of alert Sev0 being highest and Sev4 being lowest.\n          readOnly: true\n          enum:\n            - Sev0\n            - Sev1\n            - Sev2\n            - Sev3\n            - Sev4\n          x-ms-enum:\n            name: Severity\n            modelAsString: true\n        signalType:\n          type: string\n          description: The type of signal the alert is based on, which could be metrics, logs or activity logs.\n          readOnly: true\n          enum:\n            - Metric\n            - Log\n            - Unknown\n          x-ms-enum:\n            name: SignalType\n            modelAsString: true\n        alertState:\n          type: string\n          description: Alert object state, which can be modified by the user.\n          readOnly: true\n          enum:\n            - New\n            - Acknowledged\n            - Closed\n          x-ms-enum:\n            name: AlertState\n            modelAsString: true\n        monitorCondition:\n          type: string\n          description: Condition of the rule at the monitor service. It represents whether the underlying conditions have crossed the defined alert rule thresholds.\n          readOnly: true\n          enum:\n            - Fired\n            - Resolved\n          x-ms-enum:\n            name: MonitorCondition\n            modelAsString: true\n        targetResource:\n          type: string\n          description: Target ARM resource, on which alert got created.\n        targetResourceName:\n          type: string\n          description: Name of the target ARM resource name, on which alert got created.\n        targetResourceGroup:\n          type: string\n          description: Resource group of target ARM resource, on which alert got created.\n        targetResourceType:\n          type: string\n          description: Resource type of target ARM resource, on which alert got created.\n        monitorService:\n          type: string\n          description: Monitor service on which the rule(monitor) is set.\n          readOnly: true\n          enum:\n            - Application Insights\n            - ActivityLog Administrative\n            - ActivityLog Security\n            - ActivityLog Recommendation\n            - ActivityLog Policy\n            - ActivityLog Autoscale\n            - Log Analytics\n            - Nagios\n            - Platform\n            - SCOM\n            - ServiceHealth\n            - SmartDetector\n            - VM Insights\n            - Zabbix\n          x-ms-enum:\n            name: MonitorService\n            modelAsString: true\n        alertRule:\n          type: string\n          description: Rule(monitor) which fired alert instance. Depending on the monitor service,  this would be ARM id or name of the rule.\n          readOnly: true\n        sourceCreatedId:\n          type: string\n          description: Unique Id created by monitor service for each alert instance. This could be used to track the issue at the monitor service, in case of Nagios, Zabbix, SCOM etc.\n          readOnly: true\n        smartGroupId:\n          type: string\n          description: Unique Id of the smart group\n          readOnly: true\n        smartGroupingReason:\n          type: string\n          description: Verbose reason describing the reason why this alert instance is added to a smart group\n          readOnly: true\n        startDateTime:\n          type: string\n          format: date-time\n          description: Creation time(ISO-8601 format) of alert instance.\n          readOnly: true\n        lastModifiedDateTime:\n          type: string\n          format: date-time\n          description: Last modification time(ISO-8601 format) of alert instance.\n          readOnly: true\n        monitorConditionResolvedDateTime:\n          type: string\n          format: date-time\n          description: Resolved time(ISO-8601 format) of alert instance. This will be updated when monitor service resolves the alert instance because the rule condition is no longer met.\n          readOnly: true\n        lastModifiedUserName:\n          type: string\n          description: User who last modified the alert, in case of monitor service updates user would be 'system', otherwise name of the user.\n          readOnly: true\n        actionStatus:\n          $ref: '#/components/schemas/actionStatus'\n        description:\n          type: string\n          description: Alert description.\n    alertModification:\n      type: object\n      description: Alert Modification details\n      allOf:\n        - $ref: '#/components/schemas/Resource'\n      properties:\n        properties:\n          $ref: '#/components/schemas/alertModificationProperties'\n    alertModificationProperties:\n      type: object\n      description: Properties of the alert modification item.\n      properties:\n        alertId:\n          type: string\n          description: Unique Id of the alert for which the history is being retrieved\n          readOnly: true\n        modifications:\n          type: array\n          description: Modification details\n          items:\n            $ref: '#/components/schemas/alertModificationItem'\n    alertModificationItem:\n      type: object\n      description: Alert modification item.\n      properties:\n        modificationEvent:\n          type: string\n          description: Reason for the modification\n          enum:\n            - AlertCreated\n            - StateChange\n            - MonitorConditionChange\n            - SeverityChange\n            - ActionRuleTriggered\n            - ActionRuleSuppressed\n            - ActionsTriggered\n            - ActionsSuppressed\n            - ActionsFailed\n          x-ms-enum:\n            name: AlertModificationEvent\n        oldValue:\n          type: string\n          description: Old value\n        newValue:\n          type: string\n          description: New value\n        modifiedAt:\n          type: string\n          description: Modified date and time\n        modifiedBy:\n          type: string\n          description: Modified user details (Principal client name)\n        comments:\n          type: string\n          description: Modification comments\n        description:\n          type: string\n          description: Description of the modification\n    alertsSummary:\n      type: object\n      description: Summary of alerts based on the input filters and 'groupby' parameters.\n      allOf:\n        - $ref: '#/components/schemas/Resource'\n      properties:\n        properties:\n          $ref: '#/components/schemas/alertsSummaryGroup'\n    alertsSummaryGroup:\n      type: object\n      description: Group the result set.\n      properties:\n        total:\n          type: integer\n          format: int64\n          description: Total count of the result set.\n        smartGroupsCount:\n          type: integer\n          format: int64\n          description: Total count of the smart groups.\n        groupedby:\n          type: string\n          description: Name of the field aggregated\n        values:\n          type: array\n          description: List of the items\n          items:\n            $ref: '#/components/schemas/alertsSummaryGroupItem'\n    alertsSummaryGroupItem:\n      type: object\n      description: Alerts summary group item\n      properties:\n        name:\n          type: string\n          description: Value of the aggregated field\n        count:\n          type: integer\n          format: int64\n          description: Count of the aggregated field\n        groupedby:\n          type: string\n          description: Name of the field aggregated\n        values:\n          type: array\n          description: List of the items\n          items:\n            $ref: '#/components/schemas/alertsSummaryGroupItem'\n    alertsMetaData:\n      type: object\n      description: alert meta data information.\n      properties:\n        properties:\n          $ref: '#/components/schemas/alertsMetaDataProperties'\n    alertsMetaDataProperties:\n      type: object\n      description: alert meta data property bag\n      discriminator:\n        propertyName: metadataIdentifier\n      required:\n        - metadataIdentifier\n      properties:\n        metadataIdentifier:\n          type: string\n          description: Identification of the information to be retrieved by API call\n          enum:\n            - MonitorServiceList\n          x-ms-enum:\n            name: metadataIdentifier\n            modelAsString: true\n    MonitorServiceList:\n      type: object\n      title: Monitor service details\n      description: Monitor service details\n      required:\n        - data\n      allOf:\n        - $ref: '#/components/schemas/alertsMetaDataProperties'\n        - type: object\n      properties:\n        data:\n          description: Array of operations\n          type: array\n          items:\n            $ref: '#/components/schemas/MonitorServiceDetails'\n    MonitorServiceDetails:\n      type: object\n      description: Details of a monitor service\n      properties:\n        name:\n          type: string\n          description: Monitor service name\n        displayName:\n          type: string\n          description: Monitor service display name\n    smartGroupModification:\n      type: object\n      description: Alert Modification details\n      allOf:\n        - $ref: '#/components/schemas/Resource'\n      properties:\n        properties:\n          $ref: '#/components/schemas/smartGroupModificationProperties'\n    smartGroupModificationProperties:\n      type: object\n      description: Properties of the smartGroup modification item.\n      properties:\n        smartGroupId:\n          type: string\n          description: Unique Id of the smartGroup for which the history is being retrieved\n          readOnly: true\n        modifications:\n          type: array\n          description: Modification details\n          items:\n            $ref: '#/components/schemas/smartGroupModificationItem'\n        nextLink:\n          description: URL to fetch the next set of results.\n          type: string\n    smartGroupModificationItem:\n      type: object\n      description: smartGroup modification item.\n      properties:\n        modificationEvent:\n          type: string\n          description: Reason for the modification\n          enum:\n            - SmartGroupCreated\n            - StateChange\n            - AlertAdded\n            - AlertRemoved\n          x-ms-enum:\n            name: SmartGroupModificationEvent\n        oldValue:\n          type: string\n          description: Old value\n        newValue:\n          type: string\n          description: New value\n        modifiedAt:\n          type: string\n          description: Modified date and time\n        modifiedBy:\n          type: string\n          description: Modified user details (Principal client name)\n        comments:\n          type: string\n          description: Modification comments\n        description:\n          type: string\n          description: Description of the modification\n    smartGroupsList:\n      type: object\n      description: List the alerts.\n      properties:\n        nextLink:\n          description: URL to fetch the next set of alerts.\n          type: string\n        value:\n          description: List of alerts\n          type: array\n          items:\n            $ref: '#/components/schemas/smartGroup'\n    smartGroup:\n      type: object\n      description: Set of related alerts grouped together smartly by AMS.\n      allOf:\n        - $ref: '#/components/schemas/Resource'\n      properties:\n        properties:\n          x-ms-client-flatten: true\n          $ref: '#/components/schemas/smartGroupProperties'\n    smartGroupProperties:\n      type: object\n      description: Properties of smart group.\n      properties:\n        alertsCount:\n          type: integer\n          format: int64\n          description: Total number of alerts in smart group\n        smartGroupState:\n          type: string\n          description: Smart group state\n          readOnly: true\n          enum:\n            - New\n            - Acknowledged\n            - Closed\n          x-ms-enum:\n            name: State\n            modelAsString: true\n        severity:\n          type: string\n          description: Severity of smart group is the highest(Sev0 \u003e... \u003e Sev4) severity of all the alerts in the group.\n          readOnly: true\n          enum:\n            - Sev0\n            - Sev1\n            - Sev2\n            - Sev3\n            - Sev4\n          x-ms-enum:\n            name: Severity\n            modelAsString: true\n        startDateTime:\n          type: string\n          format: date-time\n          description: Creation time of smart group. Date-Time in ISO-8601 format.\n          readOnly: true\n        lastModifiedDateTime:\n          type: string\n          format: date-time\n          description: Last updated time of smart group. Date-Time in ISO-8601 format.\n          readOnly: true\n        lastModifiedUserName:\n          type: string\n          description: Last modified by user name.\n          readOnly: true\n        resources:\n          items:\n            $ref: '#/components/schemas/smartGroupAggregatedProperty'\n          type: array\n          description: Summary of target resources in the smart group\n        resourceTypes:\n          items:\n            $ref: '#/components/schemas/smartGroupAggregatedProperty'\n          type: array\n          description: Summary of target resource types in the smart group\n        resourceGroups:\n          items:\n            $ref: '#/components/schemas/smartGroupAggregatedProperty'\n          type: array\n          description: Summary of target resource groups in the smart group\n        monitorServices:\n          items:\n            $ref: '#/components/schemas/smartGroupAggregatedProperty'\n          type: array\n          description: Summary of monitorServices in the smart group\n        monitorConditions:\n          items:\n            $ref: '#/components/schemas/smartGroupAggregatedProperty'\n          type: array\n          description: Summary of monitorConditions in the smart group\n        alertStates:\n          items:\n            $ref: '#/components/schemas/smartGroupAggregatedProperty'\n          type: array\n          description: Summary of alertStates in the smart group\n        alertSeverities:\n          items:\n            $ref: '#/components/schemas/smartGroupAggregatedProperty'\n          type: array\n          description: Summary of alertSeverities in the smart group\n        nextLink:\n          type: string\n          description: The URI to fetch the next page of alerts. Call ListNext() with this URI to fetch the next page alerts.\n    smartGroupAggregatedProperty:\n      type: object\n      description: Aggregated property of each type\n      properties:\n        name:\n          type: string\n          description: Name of the type.\n        count:\n          type: integer\n          format: int64\n          description: Total number of items of type.\n    AzureEntityResource:\n      x-ms-client-name: AzureEntityResource\n      title: Entity Resource\n      description: The resource model definition for an Azure Resource Manager resource with an etag.\n      type: object\n      properties:\n        etag:\n          type: string\n          readOnly: true\n          description: Resource Etag.\n      allOf:\n        - $ref: '#/components/schemas/Resource'\n    TrackedResource:\n      title: Tracked Resource\n      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'\n      type: object\n      properties:\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n          x-ms-mutability:\n            - read\n            - create\n            - update\n          description: Resource tags.\n        location:\n          type: string\n          x-ms-mutability:\n            - read\n            - create\n          description: The geo-location where the resource lives\n      required:\n        - location\n      allOf:\n        - $ref: '#/components/schemas/Resource'\n    ProxyResource:\n      title: Proxy Resource\n      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/Resource'\n    ResourceModelWithAllowedPropertySet:\n      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.\n      type: object\n      properties:\n        id:\n          readOnly: true\n          type: string\n          x-ms-mutability:\n            - read\n          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n        name:\n          readOnly: true\n          type: string\n          description: The name of the resource\n        type:\n          readOnly: true\n          type: string\n          x-ms-mutability:\n            - read\n          description: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n        location:\n          type: string\n          x-ms-mutability:\n            - read\n            - create\n          description: The geo-location where the resource lives\n        managedBy:\n          type: string\n          x-ms-mutability:\n            - read\n            - create\n            - update\n          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.\n        kind:\n          type: string\n          x-ms-mutability:\n            - read\n            - create\n          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.\n          pattern: ^[-\\w\\._,\\(\\)]+$\n        etag:\n          readOnly: true\n          type: string\n          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n          x-ms-mutability:\n            - read\n            - create\n            - update\n          description: Resource tags.\n        identity:\n          allOf:\n            - $ref: '#/components/schemas/Identity'\n        sku:\n          allOf:\n            - $ref: '#/components/schemas/Sku'\n        plan:\n          allOf:\n            - $ref: '#/components/schemas/Plan'\n      x-ms-azure-resource: true\n    Sku:\n      description: The resource model definition representing SKU\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the SKU. Ex - P3. It is typically a letter+number code\n        tier:\n          type: string\n          enum:\n            - Free\n            - Basic\n            - Standard\n            - Premium\n          x-ms-enum:\n            name: SkuTier\n            modelAsString: false\n          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.\n        size:\n          type: string\n          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '\n        family:\n          type: string\n          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.\n        capacity:\n          type: integer\n          format: int32\n          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.\n      required:\n        - name\n    Identity:\n      description: Identity for the resource.\n      type: object\n      properties:\n        principalId:\n          readOnly: true\n          type: string\n          description: The principal ID of resource identity.\n        tenantId:\n          readOnly: true\n          type: string\n          description: The tenant ID of resource.\n        type:\n          type: string\n          description: The identity type.\n          enum:\n            - SystemAssigned\n          x-ms-enum:\n            name: ResourceIdentityType\n            modelAsString: false\n    Plan:\n      type: object\n      properties:\n        name:\n          type: string\n          description: A user defined name of the 3rd Party Artifact that is being procured.\n        publisher:\n          type: string\n          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic\n        product:\n          type: string\n          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '\n        promotionCode:\n          type: string\n          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.\n        version:\n          type: string\n          description: The version of the desired product/artifact.\n      description: Plan for the resource.\n      required:\n        - name\n        - publisher\n        - product\n    ErrorDetail:\n      description: The error detail.\n      type: object\n      properties:\n        code:\n          readOnly: true\n          type: string\n          description: The error code.\n        message:\n          readOnly: true\n          type: string\n          description: The error message.\n        target:\n          readOnly: true\n          type: string\n          description: The error target.\n        details:\n          readOnly: true\n          type: array\n          items:\n            $ref: '#/components/schemas/ErrorDetail'\n          x-ms-identifiers:\n            - message\n            - target\n          description: The error details.\n        additionalInfo:\n          readOnly: true\n          type: array\n          items:\n            $ref: '#/components/schemas/ErrorAdditionalInfo'\n          x-ms-identifiers: []\n          description: The error additional info.\n    ErrorResponse:\n      title: Error response\n      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).\n      type: object\n      properties:\n        error:\n          description: The error object.\n          $ref: '#/components/schemas/ErrorDetail'\n    ErrorAdditionalInfo:\n      type: object\n      properties:\n        type:\n          readOnly: true\n          type: string\n          description: The additional info type.\n        info:\n          readOnly: true\n          type: object\n          description: The additional info.\n      description: The resource management error additional info.\n    Operation:\n      title: REST API Operation\n      description: Details of a REST API operation, returned from the Resource Provider Operations API\n      type: object\n      properties:\n        name:\n          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"'\n          type: string\n          readOnly: true\n        isDataAction:\n          description: Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.\n          type: boolean\n          readOnly: true\n        display:\n          description: Localized display information for this particular operation.\n          type: object\n          properties:\n            provider:\n              description: The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".\n              type: string\n              readOnly: true\n            resource:\n              description: The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".\n              type: string\n              readOnly: true\n            operation:\n              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".\n              type: string\n              readOnly: true\n            description:\n              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.\n              type: string\n              readOnly: true\n        origin:\n          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"\n          type: string\n          readOnly: true\n          enum:\n            - user\n            - system\n            - user,system\n          x-ms-enum:\n            name: Origin\n            modelAsString: true\n        actionType:\n          description: Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.\n          type: string\n          readOnly: true\n          enum:\n            - Internal\n          x-ms-enum:\n            name: ActionType\n            modelAsString: true\n    OperationListResult:\n      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/Operation'\n          x-ms-identifiers:\n            - name\n          description: List of operations supported by the resource provider\n          readOnly: true\n        nextLink:\n          type: string\n          description: URL to get the next set of operation list results (if there are any).\n          readOnly: true\n    OperationStatusResult:\n      description: The current status of an async operation.\n      type: object\n      required:\n        - status\n      properties:\n        id:\n          description: Fully qualified ID for the async operation.\n          type: string\n        name:\n          description: Name of the async operation.\n          type: string\n        status:\n          description: Operation status.\n          type: string\n        percentComplete:\n          description: Percent of the operation that is complete.\n          type: number\n          minimum: 0\n          maximum: 100\n        startTime:\n          description: The start time of the operation.\n          type: string\n          format: date-time\n        endTime:\n          description: The end time of the operation.\n          type: string\n          format: date-time\n        operations:\n          description: The operations list.\n          type: array\n          items:\n            $ref: '#/components/schemas/OperationStatusResult'\n        error:\n          description: If present, details of the operation error.\n          $ref: '#/components/schemas/ErrorDetail'\n    locationData:\n      description: Metadata pertaining to the geographic location of the resource.\n      type: object\n      properties:\n        name:\n          type: string\n          maxLength: 256\n          description: A canonical name for the geographic or physical location.\n        city:\n          type: string\n          description: The city or locality where the resource is located.\n        district:\n          type: string\n          description: The district, state, or province where the resource is located.\n        countryOrRegion:\n          type: string\n          description: The country or region where the resource is located\n      required:\n        - name\n    systemData:\n      description: Metadata pertaining to creation and last modification of the resource.\n      type: object\n      readOnly: true\n      properties:\n        createdBy:\n          type: string\n          description: The identity that created the resource.\n        createdByType:\n          type: string\n          description: The type of identity that created the resource.\n          enum:\n            - User\n            - Application\n            - ManagedIdentity\n            - Key\n          x-ms-enum:\n            name: createdByType\n            modelAsString: true\n        createdAt:\n          type: string\n          format: date-time\n          description: The timestamp of resource creation (UTC).\n        lastModifiedBy:\n          type: string\n          description: The identity that last modified the resource.\n        lastModifiedByType:\n          type: string\n          description: The type of identity that last modified the resource.\n          enum:\n            - User\n            - Application\n            - ManagedIdentity\n            - Key\n          x-ms-enum:\n            name: createdByType\n            modelAsString: true\n        lastModifiedAt:\n          type: string\n          format: date-time\n          description: The timestamp of resource last modification (UTC)\n    encryptionProperties:\n      description: Configuration of key for data encryption\n      type: object\n      properties:\n        status:\n          description: Indicates whether or not the encryption is enabled for container registry.\n          enum:\n            - enabled\n            - disabled\n          type: string\n          x-ms-enum:\n            name: EncryptionStatus\n            modelAsString: true\n        keyVaultProperties:\n          $ref: '#/components/schemas/KeyVaultProperties'\n          description: Key vault properties.\n    KeyVaultProperties:\n      type: object\n      properties:\n        keyIdentifier:\n          description: Key vault uri to access the encryption key.\n          type: string\n        identity:\n          description: The client ID of the identity which will be used to access key vault.\n          type: string\n    CheckNameAvailabilityRequest:\n      description: The check availability request body.\n      type: object\n      properties:\n        name:\n          description: The name of the resource for which availability needs to be checked.\n          type: string\n        type:\n          description: The resource type.\n          type: string\n    CheckNameAvailabilityResponse:\n      description: The check availability result.\n      type: object\n      properties:\n        nameAvailable:\n          description: Indicates if the resource name is available.\n          type: boolean\n        reason:\n          description: The reason why the given name is not available.\n          type: string\n          enum:\n            - Invalid\n            - AlreadyExists\n          x-ms-enum:\n            name: CheckNameAvailabilityReason\n            modelAsString: true\n        message:\n          description: Detailed reason why the given name is available.\n          type: string\n    ManagedResource:\n      description: An azure managed resource object.\n      allOf:\n        - $ref: '#/components/schemas/Resource'\n      properties:\n        location:\n          type: string\n          description: Resource location\n          x-ms-mutability:\n            - create\n            - read\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n          description: Resource tags\n      required:\n        - location\n      type: object\n    Scopes:\n      type: array\n      description: List of ARM IDs which will be the target of the given alert processing rule.\n      items:\n        type: string\n    Condition:\n      type: object\n      description: Condition to trigger an alert processing rule.\n      properties:\n        field:\n          type: string\n          description: Field for a given condition.\n          enum:\n            - Severity\n            - MonitorService\n            - MonitorCondition\n            - SignalType\n            - TargetResourceType\n            - TargetResource\n            - TargetResourceGroup\n            - AlertRuleId\n            - AlertRuleName\n            - Description\n            - AlertContext\n          x-ms-enum:\n            name: Field\n            modelAsString: true\n        operator:\n          type: string\n          description: Operator for a given condition.\n          enum:\n            - Equals\n            - NotEquals\n            - Contains\n            - DoesNotContain\n          x-ms-enum:\n            name: Operator\n            modelAsString: true\n        values:\n          type: array\n          description: List of values to match for a given condition.\n          items:\n            type: string\n    Conditions:\n      type: array\n      description: Conditions in alert instance to be matched for a given alert processing rule. Default value is all. Multiple values could be provided with comma separation.\n      items:\n        $ref: '#/components/schemas/Condition'\n    Schedule:\n      type: object\n      description: Scheduling configuration for a given alert processing rule.\n      properties:\n        effectiveFrom:\n          type: string\n          pattern: ^(?:(\\d{4}-\\d{2}-\\d{2})T(\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?))$\n          description: Scheduling effective from time. Date-Time in ISO-8601 format without timezone suffix.\n        effectiveUntil:\n          type: string\n          pattern: ^(?:(\\d{4}-\\d{2}-\\d{2})T(\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?))$\n          description: Scheduling effective until time. Date-Time in ISO-8601 format without timezone suffix.\n        timeZone:\n          type: string\n          description: Scheduling time zone.\n        recurrences:\n          type: array\n          description: List of recurrences.\n          items:\n            $ref: '#/components/schemas/Recurrence'\n    Recurrence:\n      type: object\n      description: Recurrence object.\n      discriminator:\n        propertyName: recurrenceType\n      required:\n        - recurrenceType\n      properties:\n        recurrenceType:\n          type: string\n          description: Specifies when the recurrence should be applied.\n          enum:\n            - Daily\n            - Weekly\n            - Monthly\n          x-ms-enum:\n            name: RecurrenceType\n            modelAsString: true\n        startTime:\n          type: string\n          description: Start time for recurrence.\n        endTime:\n          type: string\n          description: End time for recurrence.\n    DailyRecurrence:\n      x-ms-discriminator-value: Daily\n      type: object\n      description: Daily recurrence object.\n      required:\n        - startTime\n        - endTime\n      allOf:\n        - $ref: '#/components/schemas/Recurrence'\n    WeeklyRecurrence:\n      x-ms-discriminator-value: Weekly\n      type: object\n      description: Weekly recurrence object.\n      required:\n        - daysOfWeek\n      allOf:\n        - $ref: '#/components/schemas/Recurrence'\n      properties:\n        daysOfWeek:\n          type: array\n          description: Specifies the values for weekly recurrence pattern.\n          items:\n            $ref: '#/components/schemas/DaysOfWeek'\n    MonthlyRecurrence:\n      x-ms-discriminator-value: Monthly\n      type: object\n      description: Monthly recurrence object.\n      required:\n        - daysOfMonth\n      allOf:\n        - $ref: '#/components/schemas/Recurrence'\n      properties:\n        daysOfMonth:\n          type: array\n          description: Specifies the values for monthly recurrence pattern.\n          items:\n            type: integer\n            format: int32\n    DaysOfWeek:\n      type: string\n      description: Days of week.\n      enum:\n        - Sunday\n        - Monday\n        - Tuesday\n        - Wednesday\n        - Thursday\n        - Friday\n        - Saturday\n      x-ms-enum:\n        name: DaysOfWeek\n        modelAsString: true\n    AlertProcessingRule:\n      type: object\n      description: Alert processing rule object containing target scopes, conditions and scheduling logic.\n      allOf:\n        - $ref: '#/components/schemas/ManagedResource'\n      properties:\n        properties:\n          description: Alert processing rule properties.\n          $ref: '#/components/schemas/AlertProcessingRuleProperties'\n        systemData:\n          description: Alert processing rule system data.\n          $ref: '#/components/schemas/systemData'\n    AlertProcessingRuleProperties:\n      type: object\n      description: Alert processing rule properties defining scopes, conditions and scheduling logic for alert processing rule.\n      required:\n        - scopes\n        - actions\n      properties:\n        scopes:\n          description: Scopes on which alert processing rule will apply.\n          $ref: '#/components/schemas/Scopes'\n        conditions:\n          description: Conditions on which alerts will be filtered.\n          $ref: '#/components/schemas/Conditions'\n        schedule:\n          description: Scheduling for alert processing rule.\n          $ref: '#/components/schemas/Schedule'\n        actions:\n          type: array\n          description: Actions to be applied.\n          items:\n            $ref: '#/components/schemas/Action'\n        description:\n          type: string\n          description: Description of alert processing rule.\n        enabled:\n          type: boolean\n          default: true\n          description: Indicates if the given alert processing rule is enabled or disabled.\n    Action:\n      type: object\n      description: Action to be applied.\n      discriminator:\n        propertyName: actionType\n      required:\n        - actionType\n      properties:\n        actionType:\n          type: string\n          description: Action that should be applied.\n          enum:\n            - AddActionGroups\n            - RemoveAllActionGroups\n          x-ms-enum:\n            name: actionType\n            modelAsString: true\n    AddActionGroups:\n      x-ms-discriminator-value: AddActionGroups\n      type: object\n      description: Add action groups to alert processing rule.\n      required:\n        - actionGroupIds\n      allOf:\n        - $ref: '#/components/schemas/Action'\n      properties:\n        actionGroupIds:\n          description: List of action group Ids to add to alert processing rule.\n          type: array\n          items:\n            type: string\n    RemoveAllActionGroups:\n      x-ms-discriminator-value: RemoveAllActionGroups\n      type: object\n      description: Indicates if all action groups should be removed.\n      allOf:\n        - $ref: '#/components/schemas/Action'\n    AlertProcessingRulesList:\n      type: object\n      description: List of alert processing rules.\n      properties:\n        nextLink:\n          type: string\n          description: URL to fetch the next set of alert processing rules.\n        value:\n          type: array\n          description: List of alert processing rules.\n          items:\n            $ref: '#/components/schemas/AlertProcessingRule'\n    PatchProperties:\n      description: Alert processing rule properties supported by patch.\n      properties:\n        enabled:\n          type: boolean\n          description: Indicates if the given alert processing rule is enabled or disabled.\n      type: object\n    PatchObject:\n      description: Data contract for patch.\n      properties:\n        properties:\n          x-ms-client-flatten: true\n          description: Properties supported by patch operation.\n          $ref: '#/components/schemas/PatchProperties'\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n          description: Tags to be updated.\n      type: object\n  parameters:\n    subscriptionId:\n      name: subscriptionId\n      in: path\n      description: The ID of the target subscription.\n      required: true\n      schema:\n        minLength: 1\n        type: string\n    api-version:\n      name: api-version\n      in: query\n      description: Client API version.\n      required: true\n      schema:\n        enum:\n          - '2021-08-08'\n        x-ms-enum:\n          name: api-version\n          modelAsString: true\n        type: string\n    alertId:\n      name: alertId\n      in: path\n      description: Unique ID of an alert instance.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    targetResourceGroup:\n      name: targetResourceGroup\n      in: query\n      description: Filter by target resource group name. Default value is select all.\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    targetResource:\n      name: targetResource\n      in: query\n      description: Filter by target resource( which is full ARM ID) Default value is select all.\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    targetResourceType:\n      name: targetResourceType\n      in: query\n      description: Filter by target resource type. Default value is select all.\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    monitorService:\n      name: monitorService\n      in: query\n      description: Filter by monitor service which generates the alert instance. Default value is select all.\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        enum:\n          - Application Insights\n          - ActivityLog Administrative\n          - ActivityLog Security\n          - ActivityLog Recommendation\n          - ActivityLog Policy\n          - ActivityLog Autoscale\n          - Log Analytics\n          - Nagios\n          - Platform\n          - SCOM\n          - ServiceHealth\n          - SmartDetector\n          - VM Insights\n          - Zabbix\n        x-ms-enum:\n          name: MonitorService\n          modelAsString: true\n        type: string\n    severity:\n      name: severity\n      in: query\n      description: Filter by severity.  Default value is select all.\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        enum:\n          - Sev0\n          - Sev1\n          - Sev2\n          - Sev3\n          - Sev4\n        x-ms-enum:\n          name: Severity\n          modelAsString: true\n        type: string\n    smartGroupIdFilter:\n      name: smartGroupId\n      in: query\n      description: Filter the alerts list by the Smart Group Id. Default value is none.\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    newState:\n      name: newState\n      in: query\n      description: New state of the alert.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        enum:\n          - New\n          - Acknowledged\n          - Closed\n        x-ms-enum:\n          name: AlertState\n          modelAsString: true\n        type: string\n    alertState:\n      name: alertState\n      in: query\n      description: Filter by state of the alert instance. Default value is to select all.\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        enum:\n          - New\n          - Acknowledged\n          - Closed\n        x-ms-enum:\n          name: AlertState\n          modelAsString: true\n        type: string\n    monitorCondition:\n      name: monitorCondition\n      in: query\n      description: Filter by monitor condition which is either 'Fired' or 'Resolved'. Default value is to select all.\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        enum:\n          - Fired\n          - Resolved\n        x-ms-enum:\n          name: MonitorCondition\n          modelAsString: true\n        type: string\n    alertRule:\n      name: alertRule\n      in: query\n      description: Filter by specific alert rule.  Default value is to select all.\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    timeRange:\n      name: timeRange\n      in: query\n      description: Filter by time range by below listed values. Default value is 1 day.\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        enum:\n          - 1h\n          - 1d\n          - 7d\n          - 30d\n        x-ms-enum:\n          name: TimeRange\n          modelAsString: true\n        type: string\n    customTimeRange:\n      name: customTimeRange\n      in: query\n      description: Filter by custom time range in the format \u003cstart-time\u003e/\u003cend-time\u003e  where time is in (ISO-8601 format)'. Permissible values is within 30 days from  query time. Either timeRange or customTimeRange could be used but not both. Default is none.\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    includeContext:\n      name: includeContext\n      in: query\n      description: Include context which has contextual data specific to the monitor service. Default value is false'\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        type: boolean\n    includeEgressConfig:\n      name: includeEgressConfig\n      in: query\n      description: Include egress config which would be used for displaying the content in portal.  Default value is 'false'.\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        type: boolean\n    includeSmartGroupsCount:\n      name: includeSmartGroupsCount\n      in: query\n      description: Include count of the SmartGroups as part of the summary. Default value is 'false'.\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        type: boolean\n    pageCount:\n      name: pageCount\n      in: query\n      description: Determines number of alerts returned per page in response. Permissible value is between 1 to 250. When the \"includeContent\"  filter is selected, maximum value allowed is 25. Default value is 25.\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        format: int64\n        type: integer\n    alertsSortBy:\n      name: sortBy\n      in: query\n      description: Sort the query results by input field,  Default value is 'lastModifiedDateTime'.\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        enum:\n          - name\n          - severity\n          - alertState\n          - monitorCondition\n          - targetResource\n          - targetResourceName\n          - targetResourceGroup\n          - targetResourceType\n          - startDateTime\n          - lastModifiedDateTime\n        x-ms-enum:\n          name: AlertsSortByFields\n          modelAsString: true\n        type: string\n    alertsSummaryGroupBy:\n      name: groupby\n      in: query\n      description: This parameter allows the result set to be grouped by input fields (Maximum 2 comma separated fields supported). For example, groupby=severity or groupby=severity,alertstate.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        enum:\n          - severity\n          - alertState\n          - monitorCondition\n          - monitorService\n          - signalType\n          - alertRule\n        x-ms-enum:\n          name: AlertsSummaryGroupByFields\n          modelAsString: true\n        type: string\n    sortOrder:\n      name: sortOrder\n      in: query\n      description: Sort the query results order in either ascending or descending.  Default value is 'desc' for time fields and 'asc' for others.\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        enum:\n          - asc\n          - desc\n        x-ms-enum:\n          name: SortOrder\n          modelAsString: true\n        type: string\n    select:\n      name: select\n      in: query\n      description: This filter allows to selection of the fields(comma separated) which would  be part of the essential section. This would allow to project only the  required fields rather than getting entire content.  Default is to fetch all the fields in the essentials section.\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    identifier:\n      name: identifier\n      in: query\n      description: Identification of the information to be retrieved by API call.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        enum:\n          - MonitorServiceList\n        x-ms-enum:\n          name: identifier\n          modelAsString: true\n        type: string\n    smartGroupId:\n      name: smartGroupId\n      in: path\n      description: 'Smart group unique id. '\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    smartGroupState:\n      name: smartGroupState\n      in: query\n      description: Filter by state of the smart group. Default value is to select all.\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        enum:\n          - New\n          - Acknowledged\n          - Closed\n        x-ms-enum:\n          name: AlertState\n          modelAsString: true\n        type: string\n    smartGroupsSortBy:\n      name: sortBy\n      in: query\n      description: Sort the query results by input field. Default value is sort by 'lastModifiedDateTime'.\n      required: false\n      x-ms-parameter-location: method\n      schema:\n        enum:\n          - alertsCount\n          - state\n          - severity\n          - startDateTime\n          - lastModifiedDateTime\n        x-ms-enum:\n          name: SmartGroupsSortByFields\n          modelAsString: true\n        type: string\n    SubscriptionIdParameter:\n      name: subscriptionId\n      in: path\n      description: The ID of the target subscription.\n      required: true\n      schema:\n        minLength: 1\n        type: string\n    ApiVersionParameter:\n      name: api-version\n      in: query\n      description: The API version to use for this operation.\n      required: true\n      schema:\n        minLength: 1\n        type: string\n    ResourceGroupNameParameter:\n      name: resourceGroupName\n      in: path\n      description: The name of the resource group. The name is case insensitive.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        minLength: 1\n        maxLength: 90\n        type: string\n    OperationIdParameter:\n      name: operationId\n      in: path\n      description: The ID of an ongoing async operation.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        minLength: 1\n        type: string\n    LocationParameter:\n      name: location\n      in: path\n      description: The name of Azure region.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        minLength: 1\n        type: string\n    resourceGroupName:\n      name: resourceGroupName\n      in: path\n      description: Resource group name where the resource is created.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n  x-stackQL-resources:\n    operations:\n      id: azure_extras.alerts_management.operations\n      name: operations\n      title: Operations\n      methods:\n        Operations_List:\n          operation:\n            $ref: '#/paths/~1providers~1Microsoft.AlertsManagement~1operations~1?api-version=2019-05-05-preview/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/operations/methods/Operations_List'\n        insert: []\n        update: []\n        delete: []\n    alerts:\n      id: azure_extras.alerts_management.alerts\n      name: alerts\n      title: Alerts\n      methods:\n        Alerts_MetaData:\n          operation:\n            $ref: '#/paths/~1providers~1Microsoft.AlertsManagement~1alertsMetaData~1?api-version=2019-05-05-preview/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        Alerts_GetAll:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AlertsManagement~1alerts~1?api-version=2019-05-05-preview/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        Alerts_GetById:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AlertsManagement~1alerts~1{alertId}~1?api-version=2019-05-05-preview/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        Alerts_ChangeState:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AlertsManagement~1alerts~1{alertId}~1changestate~1?api-version=2019-05-05-preview/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        Alerts_GetHistory:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AlertsManagement~1alerts~1{alertId}~1history~1?api-version=2019-05-05-preview/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        Alerts_GetSummary:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AlertsManagement~1alertsSummary~1?api-version=2019-05-05-preview/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n      sqlVerbs:\n        select: []\n        insert: []\n        update: []\n        delete: []\n    smart_groups:\n      id: azure_extras.alerts_management.smart_groups\n      name: smart_groups\n      title: Smart_groups\n      methods:\n        SmartGroups_GetAll:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AlertsManagement~1smartGroups~1?api-version=2019-05-05-preview/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        SmartGroups_GetById:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AlertsManagement~1smartGroups~1{smartGroupId}~1?api-version=2019-05-05-preview/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        SmartGroups_ChangeState:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AlertsManagement~1smartGroups~1{smartGroupId}~1changeState~1?api-version=2019-05-05-preview/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        SmartGroups_GetHistory:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AlertsManagement~1smartGroups~1{smartGroupId}~1history~1?api-version=2019-05-05-preview/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n      sqlVerbs:\n        select: []\n        insert: []\n        update: []\n        delete: []\n    alert_processing_rules:\n      id: azure_extras.alerts_management.alert_processing_rules\n      name: alert_processing_rules\n      title: Alert_processing_rules\n      methods:\n        AlertProcessingRules_ListBySubscription:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AlertsManagement~1actionRules~1?api-version=2021-08-08/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        AlertProcessingRules_ListByResourceGroup:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AlertsManagement~1actionRules~1?api-version=2021-08-08/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        AlertProcessingRules_GetByName:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AlertsManagement~1actionRules~1{alertProcessingRuleName}~1?api-version=2021-08-08/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        AlertProcessingRules_CreateOrUpdate:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AlertsManagement~1actionRules~1{alertProcessingRuleName}~1?api-version=2021-08-08/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        AlertProcessingRules_Delete:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AlertsManagement~1actionRules~1{alertProcessingRuleName}~1?api-version=2021-08-08/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        AlertProcessingRules_Update:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.AlertsManagement~1actionRules~1{alertProcessingRuleName}~1?api-version=2021-08-08/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/alert_processing_rules/methods/AlertProcessingRules_ListByResourceGroup'\n          - $ref: '#/components/x-stackQL-resources/alert_processing_rules/methods/AlertProcessingRules_ListBySubscription'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/alert_processing_rules/methods/AlertProcessingRules_CreateOrUpdate'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/alert_processing_rules/methods/AlertProcessingRules_Delete'\npaths:\n  /providers/Microsoft.AlertsManagement/operations/?api-version=2019-05-05-preview:\n    get:\n      operationId: Operations_List\n      description: List all operations available through Azure Alerts Management Resource Provider.\n      parameters:\n        - $ref: '#/components/parameters/api-version'\n      responses:\n        '200':\n          description: OK. Successfully retrieved operations list.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/operationsList'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: operations\n      x-stackQL-verb: select\n  /providers/Microsoft.AlertsManagement/alertsMetaData/?api-version=2019-05-05-preview:\n    get:\n      operationId: Alerts_MetaData\n      description: List alerts meta data information based on value of identifier parameter.\n      parameters:\n        - $ref: '#/components/parameters/api-version'\n        - $ref: '#/components/parameters/identifier'\n      responses:\n        '200':\n          description: OK. Successfully listed alert meta data.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/alertsMetaData'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n      x-stackQL-resource: alerts\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/alerts/?api-version=2019-05-05-preview:\n    get:\n      operationId: Alerts_GetAll\n      description: 'List all existing alerts, where the results can be filtered on the basis of multiple parameters (e.g. time range). The results can then be sorted on the basis specific fields, with the default being lastModifiedDateTime. '\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/targetResource'\n        - $ref: '#/components/parameters/targetResourceType'\n        - $ref: '#/components/parameters/targetResourceGroup'\n        - $ref: '#/components/parameters/monitorService'\n        - $ref: '#/components/parameters/monitorCondition'\n        - $ref: '#/components/parameters/severity'\n        - $ref: '#/components/parameters/alertState'\n        - $ref: '#/components/parameters/alertRule'\n        - $ref: '#/components/parameters/smartGroupIdFilter'\n        - $ref: '#/components/parameters/includeContext'\n        - $ref: '#/components/parameters/includeEgressConfig'\n        - $ref: '#/components/parameters/pageCount'\n        - $ref: '#/components/parameters/alertsSortBy'\n        - $ref: '#/components/parameters/sortOrder'\n        - $ref: '#/components/parameters/select'\n        - $ref: '#/components/parameters/timeRange'\n        - $ref: '#/components/parameters/customTimeRange'\n        - $ref: '#/components/parameters/api-version'\n      responses:\n        '200':\n          description: OK. Successfully listed alert objects.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/alertsList'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: alerts\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/alerts/{alertId}/?api-version=2019-05-05-preview:\n    get:\n      operationId: Alerts_GetById\n      summary: Get a specific alert.\n      description: Get information related to a specific alert\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/alertId'\n        - $ref: '#/components/parameters/api-version'\n      responses:\n        '200':\n          description: OK. Returns the alert with the specified ID.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/alert'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n      x-stackQL-resource: alerts\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/alerts/{alertId}/changestate/?api-version=2019-05-05-preview:\n    post:\n      operationId: Alerts_ChangeState\n      description: Change the state of an alert.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/alertId'\n        - $ref: '#/components/parameters/api-version'\n        - $ref: '#/components/parameters/newState'\n      requestBody:\n        description: reason of change alert state\n        required: false\n        x-ms-requestBody-name: comment\n        x-ms-parameter-location: method\n        content:\n          application/json:\n            schema:\n              type: string\n      responses:\n        '200':\n          description: OK. Alert state updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/alert'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n      x-stackQL-resource: alerts\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/alerts/{alertId}/history/?api-version=2019-05-05-preview:\n    get:\n      operationId: Alerts_GetHistory\n      description: Get the history of an alert, which captures any monitor condition changes (Fired/Resolved) and alert state changes (New/Acknowledged/Closed).\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/alertId'\n        - $ref: '#/components/parameters/api-version'\n      responses:\n        '200':\n          description: OK. Returns the history of the specified alert.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/alertModification'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n      x-stackQL-resource: alerts\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/alertsSummary/?api-version=2019-05-05-preview:\n    get:\n      operationId: Alerts_GetSummary\n      description: Get a summarized count of your alerts grouped by various parameters (e.g. grouping by 'Severity' returns the count of alerts for each severity).\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/alertsSummaryGroupBy'\n        - $ref: '#/components/parameters/includeSmartGroupsCount'\n        - $ref: '#/components/parameters/targetResource'\n        - $ref: '#/components/parameters/targetResourceType'\n        - $ref: '#/components/parameters/targetResourceGroup'\n        - $ref: '#/components/parameters/monitorService'\n        - $ref: '#/components/parameters/monitorCondition'\n        - $ref: '#/components/parameters/severity'\n        - $ref: '#/components/parameters/alertState'\n        - $ref: '#/components/parameters/alertRule'\n        - $ref: '#/components/parameters/timeRange'\n        - $ref: '#/components/parameters/customTimeRange'\n        - $ref: '#/components/parameters/api-version'\n      responses:\n        '200':\n          description: OK. Alert summary returned.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/alertsSummary'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n      x-stackQL-resource: alerts\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/smartGroups/?api-version=2019-05-05-preview:\n    get:\n      operationId: SmartGroups_GetAll\n      summary: Get all Smart Groups within a specified subscription\n      description: 'List all the Smart Groups within a specified subscription. '\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/targetResource'\n        - $ref: '#/components/parameters/targetResourceGroup'\n        - $ref: '#/components/parameters/targetResourceType'\n        - $ref: '#/components/parameters/monitorService'\n        - $ref: '#/components/parameters/monitorCondition'\n        - $ref: '#/components/parameters/severity'\n        - $ref: '#/components/parameters/smartGroupState'\n        - $ref: '#/components/parameters/timeRange'\n        - $ref: '#/components/parameters/pageCount'\n        - $ref: '#/components/parameters/smartGroupsSortBy'\n        - $ref: '#/components/parameters/sortOrder'\n        - $ref: '#/components/parameters/api-version'\n      responses:\n        '200':\n          description: OK. Returns list of all smartGroups.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/smartGroupsList'\n                description: List of smart groups in value property.\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: smart_groups\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/smartGroups/{smartGroupId}/?api-version=2019-05-05-preview:\n    get:\n      operationId: SmartGroups_GetById\n      summary: Get information related to a specific Smart Group.\n      description: Get information related to a specific Smart Group.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/smartGroupId'\n        - $ref: '#/components/parameters/api-version'\n      responses:\n        '200':\n          description: OK. Returns the group with the specified smart group Id.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/smartGroup'\n          headers:\n            x-ms-request-id:\n              schema:\n                type: string\n              description: Service generated Request ID.\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n      x-stackQL-resource: smart_groups\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/smartGroups/{smartGroupId}/changeState/?api-version=2019-05-05-preview:\n    post:\n      operationId: SmartGroups_ChangeState\n      description: Change the state of a Smart Group.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/smartGroupId'\n        - $ref: '#/components/parameters/api-version'\n        - $ref: '#/components/parameters/newState'\n      responses:\n        '200':\n          description: OK. Smart Group state updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/smartGroup'\n          headers:\n            x-ms-request-id:\n              schema:\n                type: string\n              description: Service generated Request ID.\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n      x-stackQL-resource: smart_groups\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/smartGroups/{smartGroupId}/history/?api-version=2019-05-05-preview:\n    get:\n      operationId: SmartGroups_GetHistory\n      description: Get the history a smart group, which captures any Smart Group state changes (New/Acknowledged/Closed) .\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/smartGroupId'\n        - $ref: '#/components/parameters/api-version'\n      responses:\n        '200':\n          description: OK. Returns the list of changes of smart group.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/smartGroupModification'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n      x-stackQL-resource: smart_groups\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/actionRules/?api-version=2021-08-08:\n    get:\n      description: List all alert processing rules in a subscription.\n      operationId: AlertProcessingRules_ListBySubscription\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/api-version'\n      responses:\n        '200':\n          description: OK. Return the list of alert processing rules.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AlertProcessingRulesList'\n          headers:\n            x-ms-request-id:\n              schema:\n                type: string\n              description: Service generated Request ID.\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: alert_processing_rules\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AlertsManagement/actionRules/?api-version=2021-08-08:\n    get:\n      operationId: AlertProcessingRules_ListByResourceGroup\n      description: List all alert processing rules in a resource group.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/resourceGroupName'\n        - $ref: '#/components/parameters/api-version'\n      responses:\n        '200':\n          description: OK. Return the list of alert processing rules.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AlertProcessingRulesList'\n          headers:\n            x-ms-request-id:\n              schema:\n                type: string\n              description: Service generated Request ID.\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: alert_processing_rules\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AlertsManagement/actionRules/{alertProcessingRuleName}/?api-version=2021-08-08:\n    get:\n      description: Get an alert processing rule by name.\n      operationId: AlertProcessingRules_GetByName\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/resourceGroupName'\n        - name: alertProcessingRuleName\n          in: path\n          description: The name of the alert processing rule that needs to be fetched.\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/api-version'\n      responses:\n        '200':\n          description: OK. Returns the specific alert processing rule.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AlertProcessingRule'\n          headers:\n            x-ms-request-id:\n              schema:\n                type: string\n              description: Service generated Request ID.\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n      x-stackQL-resource: alert_processing_rules\n      x-stackQL-verb: exec\n    put:\n      operationId: AlertProcessingRules_CreateOrUpdate\n      description: Create or update an alert processing rule.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/resourceGroupName'\n        - name: alertProcessingRuleName\n          in: path\n          description: The name of the alert processing rule that needs to be created/updated.\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/api-version'\n      requestBody:\n        description: Alert processing rule to be created/updated.\n        required: true\n        x-ms-requestBody-name: alertProcessingRule\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AlertProcessingRule'\n      responses:\n        '200':\n          description: OK. Returns the updated alert processing rule.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AlertProcessingRule'\n          headers:\n            x-ms-request-id:\n              schema:\n                type: string\n              description: Service generated Request ID.\n        '201':\n          description: Created. Returns the created alert processing rule.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AlertProcessingRule'\n          headers:\n            x-ms-request-id:\n              schema:\n                type: string\n              description: Service generated Request ID.\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n      x-stackQL-resource: alert_processing_rules\n      x-stackQL-verb: insert\n    delete:\n      description: Delete an alert processing rule.\n      operationId: AlertProcessingRules_Delete\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/resourceGroupName'\n        - name: alertProcessingRuleName\n          in: path\n          description: The name of the alert processing rule that needs to be deleted.\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/api-version'\n      responses:\n        '200':\n          description: Successful request to delete an alert processing rule.\n          headers:\n            x-ms-request-id:\n              schema:\n                type: string\n              description: Service generated Request ID.\n        '204':\n          description: 'No content: the request was successful, but the response is empty.'\n          headers:\n            x-ms-request-id:\n              schema:\n                type: string\n              description: Service generated Request ID.\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n      x-stackQL-resource: alert_processing_rules\n      x-stackQL-verb: delete\n    patch:\n      description: Enable, disable, or update tags for an alert processing rule.\n      operationId: AlertProcessingRules_Update\n      parameters:\n        - $ref: '#/components/parameters/subscriptionId'\n        - $ref: '#/components/parameters/resourceGroupName'\n        - name: alertProcessingRuleName\n          in: path\n          description: The name that needs to be updated.\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/api-version'\n      requestBody:\n        description: Parameters supplied to the operation.\n        required: true\n        x-ms-requestBody-name: alertProcessingRulePatch\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchObject'\n      responses:\n        '200':\n          description: OK. Returns the created/updated alert processing rule.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AlertProcessingRule'\n          headers:\n            x-ms-request-id:\n              schema:\n                type: string\n              description: Service generated Request ID.\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/errorResponse'\n      x-stackQL-resource: alert_processing_rules\n      x-stackQL-verb: exec\nx-stackQL-config:\n  variations:\n    isObjectSchemaImplicitlyUnioned: true\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@fdd3b1cbf58f01c98633c24ea0e690a47550090d/-/blob/providers/src/azure_extras/v0.1.1/services/alerts_management.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/fdd3b1cbf58f01c98633c24ea0e690a47550090d/providers/src/azure_extras/v0.1.1/services/alerts_management.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/providers/Microsoft.AlertsManagement/alertsMetaData/?api-version=2019-05-05-preview\": get: operation \"Alerts_MetaData\": at 1:51738: parse path \"/providers/Microsoft.AlertsManagement/alertsMetaData/?api-version=2019-05-05-preview\": path MUST NOT contain a query string"
}