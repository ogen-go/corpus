{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hms-dbmi-cellenics/api"
		},
		"file": {
			"name": "api.v2.yaml",
			"size": 0,
			"path": "src/specs/api.v2.yaml",
			"byteSize": 47902,
			"content": "openapi: 3.0.0\ninfo:\n  title: API\n  version: 2.0.0\n  description: The main Node.js pipeline API.\n  license:\n    name: MIT\n    url: 'https://github.com/hms-dbmi-cellenics/api/blob/master/LICENSE'\n  contact:\n    name: Biomage Ltd.\nservers:\n  - url: /v2\ntags:\n  - name: experiments\n    description: Manage your experiments and experiment details.\n  - name: heartbeat\n    description: API health checks.\n  - name: work\n    description: Submitting and receiving work.\n  - name: processing-config\n    description: Structure for configuration of processing steps.\npaths:\n  /health:\n    get:\n      tags:\n        - heartbeat\n      summary: API health check\n      operationId: checkHealth\n      x-eov-operation-id: health#check\n      x-eov-operation-handler: routes/health\n      responses:\n        '200':\n          description: API is available.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                    pattern: up\n                  env:\n                    type: string\n                    enum:\n                      - development\n                      - test\n                      - staging\n                      - production\n                  clusterEnv:\n                    type: string\n                    enum:\n                      - development\n                      - test\n                      - staging\n                      - production\n                required:\n                  - status\n                  - env\n                  - clusterEnv\n      description: Returns a status on the health of the API.\n\n  '/experiments/{experimentId}/cellSets':\n    parameters:\n      - name: experimentId\n        in: path\n        description: ID of experiment to find cell sets of.\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - experiments\n      summary: Get cell sets for experiment\n      description: Returns a hirearchical view of cell sets in the experiment.\n      operationId: getExperimentCellSets\n      x-eov-operation-id: cellSets#getCellSets\n      x-eov-operation-handler: routes/cellSets\n      responses:\n        '200':\n          description: 'Request successful, hierarchy returned below.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CellSets'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '403':\n          description: The authenticated user is not authorized to view this resource.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '404':\n          description: Experiment not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n    patch:\n      summary: ''\n      operationId: patchExperimentCellSets\n      x-eov-operation-id: cellSets#patchCellSets\n      x-eov-operation-handler: routes/cellSets\n      responses:\n        '200':\n          description: Update to object in response successful.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '403':\n          description: The authenticated user is not authorized to view this resource.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n      description: Performs a partial update on the experiment's cell sets.\n      requestBody:\n        content:\n          application/boschni-json-merger+json:\n            schema:\n              oneOf:\n                - type: array\n                  items: {}\n                - type: object\n        description: The patch in the format declared by boschni/json-merger. Note the explicit naming of the content subtype (boschni-json-merger+json) which must be used to explicitly acknowledge the format.\n\n  '/experiments/{experimentId}/processingConfig':\n    get:\n      summary: Get processing configuration for an experiment\n      description: Get processing configuration for an experiment\n      operationId: getProcessingConfig\n      x-eov-operation-id: experiment#getProcessingConfig\n      x-eov-operation-handler: routes/experiment\n      responses:\n        '200':\n          description: get processing configuration for an experiment\n          content:\n            application/json:\n              schema:\n                anyOf:\n                  - type: object\n                    additionalProperties: false\n                  - $ref: '#/components/schemas/ProcessingConfig'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '403':\n          description: Forbidden request for this user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '404':\n          description: Not found error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n\n    put:\n      summary: Update processing configuration for an experiment\n      description: Update processing configuration for an experiment\n      operationId: updateProcessingConfig\n      x-eov-operation-id: experiment#updateProcessingConfig\n      x-eov-operation-handler: routes/experiment\n      responses:\n        '200':\n          description: Processing configuration for an experiment\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPSuccess'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '403':\n          description: Forbidden request for this user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '404':\n          description: Not found error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n\n  '/experiments':\n    get:\n      summary: Get all experiments\n      description: Get all experiments that the user can access\n      operationId: getAllExperiments\n      x-eov-operation-id: experiment#getAllExperiments\n      x-eov-operation-handler: routes/experiment\n      responses:\n        '200':\n          description: All experiments that the user can acess\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllExperiments'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '404':\n          description: Not found error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n  '/experiments/{experimentId}':\n    get:\n      summary: Get an experiment\n      description: Get an experiment\n      operationId: getExperiment\n      x-eov-operation-id: experiment#getExperiment\n      x-eov-operation-handler: routes/experiment\n      responses:\n        '200':\n          description: Get experiment\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExperimentInfo'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '403':\n          description: Forbidden request for this user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '404':\n          description: Not found error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n    post:\n      summary: Create experiment\n      description: Create a new experiment\n      operationId: createExperiment\n      x-eov-operation-id: experiment#createExperiment\n      x-eov-operation-handler: routes/experiment\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateExperiment'\n      responses:\n        '200':\n          description: Create experiment\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPSuccess'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n    patch:\n      summary: Patch an experiment\n      description: Update some properties in an experiment\n      operationId: patchExperiment\n      x-eov-operation-id: experiment#patchExperiment\n      x-eov-operation-handler: routes/experiment\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchExperiment'\n      responses:\n        '200':\n          description: Create experiment\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPSuccess'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '403':\n          description: Forbidden request for this user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '404':\n          description: Not found error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n    delete:\n      summary: Delete an experiment\n      description: Delete an experiment\n      operationId: deleteExperiment\n      x-eov-operation-id: experiment#deleteExperiment\n      x-eov-operation-handler: routes/experiment\n      responses:\n        '200':\n          description: Get experiment\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPSuccess'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '403':\n          description: Forbidden request for this user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '404':\n          description: Not found error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n  '/experiments/{experimentId}/backendStatus':\n    get:\n      summary: Get backend status for an experiment\n      description: Get the status fo qc, gem2s and the worker for an experiment\n      operationId: getBackendStatus\n      x-eov-operation-id: experiment#getBackendStatus\n      x-eov-operation-handler: routes/experiment\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '403':\n          description: The authenticated user is not authorized to view this resource.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '404':\n          description: Experiment not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n    parameters:\n      - schema:\n          type: string\n        name: experimentId\n        in: path\n        required: true\n        description: ID of the experiment\n  '/experiments/{experimentId}/samples':\n    get:\n      summary: Get samples for an experiment\n      operationId: getSamples\n      x-eov-operation-id: sample#getSamples\n      x-eov-operation-handler: routes/sample\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetSamples'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '403':\n          description: Forbidden request for this user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '404':\n          description: Not found error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n  '/experiments/{experimentId}/samples/{sampleId}':\n    post:\n      summary: Create sample\n      operationId: createSample\n      x-eov-operation-id: sample#createSample\n      x-eov-operation-handler: routes/sample\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateSample'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPSuccess'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '403':\n          description: Forbidden request for this user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '404':\n          description: Not found error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n    patch:\n      summary: Patch sample\n      operationId: patchSample\n      x-eov-operation-id: sample#patchSample\n      x-eov-operation-handler: routes/sample\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n              additionalProperties: false\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPSuccess'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '403':\n          description: Forbidden request for this user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '404':\n          description: Not found error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n\n    delete:\n      summary: Delete sample\n      operationId: deleteSample\n      x-eov-operation-id: sample#deleteSample\n      x-eov-operation-handler: routes/sample\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPSuccess'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '403':\n          description: Forbidden request for this user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '404':\n          description: Not found error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n\n  '/experiments/{experimentId}/samples/position':\n    put:\n      summary: Update position for a sample\n      description: Set a new position for a sample\n      operationId: updateSamplePosition\n      x-eov-operation-id: experiment#updateSamplePosition\n      x-eov-operation-handler: routes/experiment\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                oldPosition:\n                  type: integer\n                newPosition:\n                  type: integer\n              required:\n                - oldPosition\n                - newPosition\n              additionalProperties: false\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPSuccess'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '403':\n          description: Forbidden request for this user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '404':\n          description: Not found error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n\n  '/experiments/{experimentId}/samples/{sampleId}/files/{sampleFileType}/downloadUrl':\n    get:\n      summary: Get file download url\n      description: Get temporary s3 download url for file\n      operationId: downloadSampleFileUrl\n      x-eov-operation-id: sampleFile#downloadUrl\n      x-eov-operation-handler: routes/sampleFile\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '403':\n          description: The authenticated user is not authorized to view this resource.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '404':\n          description: Experiment not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n\n  '/experiments/{experimentId}/metadataTracks/{metadataTrackKey}':\n    post:\n      summary: Creates a new metadata track\n      description: Creates a new metadata track, no requestBody required\n      operationId: createMetadataTrack\n      x-eov-operation-id: metadataTrack#createMetadataTrack\n      x-eov-operation-handler: routes/metadataTrack\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPSuccess'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '403':\n          description: Forbidden request for this user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '404':\n          description: Not found error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n    patch:\n      summary: Updates a metadata tracks properties\n      description: Updates a metadata tracks properties\n      operationId: patchMetadataTrack\n      x-eov-operation-id: metadataTrack#patchMetadataTrack\n      x-eov-operation-handler: routes/metadataTrack\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                key:\n                  type: string\n              required:\n                - key\n              additionalProperties: false\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPSuccess'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '403':\n          description: Forbidden request for this user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '404':\n          description: Not found error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n    delete:\n      summary: Deletes a metadata track\n      description: Deletes a metadata track, no requestBody required\n      operationId: deleteMetadataTrack\n      x-eov-operation-id: metadataTrack#deleteMetadataTrack\n      x-eov-operation-handler: routes/metadataTrack\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPSuccess'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '403':\n          description: Forbidden request for this user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '404':\n          description: Not found error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n  '/experiments/{experimentId}/samples/{sampleId}/metadataTracks/{metadataTrackKey}':\n    patch:\n      summary: Updates the value that a sample has in a metadata track in particular\n      description: Updates a metadata tracks properties\n      operationId: patchMetadataTrack\n      x-eov-operation-id: metadataTrack#patchSampleInMetadataTrackValue\n      x-eov-operation-handler: routes/metadataTrack\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                value:\n                  type: string\n              required:\n                - value\n              additionalProperties: false\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPSuccess'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '403':\n          description: Forbidden request for this user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '404':\n          description: Not found error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n  '/experiments/{experimentId}/samples/{sampleId}/sampleFiles/{sampleFileType}':\n    post:\n      summary: Create a new file for a sample\n      description: Set a new file for a sample, returns signed url to upload sample file\n      operationId: createFile\n      x-eov-operation-id: sampleFile#create\n      x-eov-operation-handler: routes/sampleFile\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateSampleFile'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: string\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '403':\n          description: Forbidden request for this user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '404':\n          description: Not found error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n    patch:\n      summary: Update a sample files property\n      operationId: patchFile\n      x-eov-operation-id: sampleFile#patch\n      x-eov-operation-handler: routes/sampleFile\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchSampleFile'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPSuccess'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '403':\n          description: Forbidden request for this user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '404':\n          description: Not found error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n  '/access/{experimentId}':\n    get:\n      summary: Get the users with access to an experiment\n      operationId: getAccess\n      x-eov-operation-id: access#getExperimentUsers\n      x-eov-operation-handler: routes/access\n      description: Returns the users with access to the experiment\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: array\n                properties:\n                  name:\n                    type: string\n                  email:\n                    type: string\n                  role:\n                    type: string\n                required:\n                  - name\n                  - email\n                  - role\n        '404':\n          description: Experiment not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n    put:\n      summary: Add user to an experiment\n      operationId: inviteUser\n      x-eov-operation-id: access#inviteUser\n      x-eov-operation-handler: routes/access\n      description: Adds permissions for the user email for the experiment from the body\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPSuccess'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '403':\n          description: The authenticated user does not have permissions to add users to this resource\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '404':\n          description: User not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                userEmail:\n                  type: string\n                role:\n                  type: string\n              required:\n                - userEmail\n                - role\n    delete:\n      summary: Revoke access to users\n      operationId: deleteAccess\n      x-eov-operation-id: access#revokeAccess\n      x-eov-operation-handler: routes/access\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPSuccess'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '403':\n          description: The user does not have permissions to revoke the role.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '404':\n          description: Role not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n      description: Delete a role for a user in experiment\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                userEmail:\n                  type: string\n                  minLength: 1\n              required:\n                - userEmail\n        description: email of the user to remove from experiment\n\n  /access/post-registration:\n    post:\n      summary: Endpoint for handling post-registration\n      description: Endpoint for handling post-registartion.\n      operationId: postRegistration\n      x-eov-operation-id: access#postRegistration\n      x-eov-operation-handler: routes/access\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPSuccess'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n      requestBody:\n        content:\n          text/plain:\n            schema:\n              type: string\n            examples: {}\n          application/json:\n            schema:\n              type: object\n              properties:\n                userEmail:\n                  type: string\n                  minLength: 1\n                userId:\n                  type: string\n                  minLength: 1\n                \n  '/workResults/{experimentId}/{ETag}':\n    get:\n      summary: Get the work results from S3\n      operationId: getWorkResults\n      x-eov-operation-id: work#getResults\n      x-eov-operation-handler: routes/work\n      description: 'On success, returns a signed url with the uploaded worker results in S3'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  signedUrl:\n                    type: string\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '403':\n          description: The user does not have permissions to view the work results.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '404':\n          description: The work results were not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n  '/experiments/{experimentId}/gem2s':\n    post:\n      summary: Run gem2s\n      operationId: runGem2s\n      x-eov-operation-id: gem2s#run\n      x-eov-operation-handler: routes/gem2s\n      description: Triggers a new gem2s run\n      requestBody: \n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                paramsHash:\n                  type: string\n              required:\n                - paramsHash\n              additionalProperties: false\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPSuccess'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '403':\n          description: The authenticated user is not authorized to view this resource.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '404':\n          description: Experiment not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n  '/experiments/{experimentId}/plots/{plotUuid}':\n    parameters:\n      - schema:\n          type: string\n        name: plotUuid\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: experimentId\n        in: path\n        required: true\n    get:\n      summary: Get a plot or table config\n      operationId: getPlotTable\n      x-eov-operation-id: plots#get\n      x-eov-operation-handler: routes/plots\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlotConfig'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '403':\n          description: The authenticated user is not authorized to view this resource.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '404':\n          description: Experiment/plot not found.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n      description: Reads a plot and table for a given experiment with the data specified.\n    put:\n      summary: Update a plot or table config\n      operationId: updatePlotTable\n      x-eov-operation-id: plots#update\n      x-eov-operation-handler: routes/plots\n      responses:\n        '200':\n          description: Update to object in response successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPSuccess'\n        '201':\n          description: New resource created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPSuccess'\n        '400':\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '403':\n          description: The authenticated user is not authorized to view this resource.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '404':\n          description: Invalid experiment ID specified.\n      description: Updates a plot and table for a given experiment with the data specified.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PlotConfig'\n        description: The new configuration to update the old one by.\n\n  '/experiments/{experimentId}/qc':\n    parameters:\n      - schema:\n          type: string\n        name: experimentId\n        in: path\n        required: true\n    post:\n      summary: Run qc\n      description: Triggers a new qc run\n      operationId: runQC\n      x-eov-operation-id: qc#run\n      x-eov-operation-handler: routes/qc\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPSuccess'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '403':\n          description: The authenticated user is not authorized to view this resource.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '404':\n          description: Experiment not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n\n  /gem2sResults:\n    post:\n      summary: Retrieve results from pipeline step functions\n      description: |-\n        Results from Step Function pipeline steps are relayed to the API through this endpoint.\n        Note that this endpoint is only exposed to AWS SNS, and since it has a specific communication protocol with limited feedback, the schema defined here is designed to be liberally enforceable. This endpoint is also used by SNS to handle subscribe/unsubscribe events.\n        The actual JSON passed by SNS is found in the `PipelineResponse` model, which is to be validated by the API.\n      operationId: receiveGem2sResponse\n      x-eov-operation-id: gem2s#response\n      x-eov-operation-handler: routes/gem2s\n      requestBody:\n        description: 'The results from the execution of a pipeline step, sent via SNS.'\n        required: true\n        content:\n          text/plain:\n            schema:\n              type: string\n          application/json:\n            schema:\n              type: object\n              properties: {}\n      responses:\n        '200':\n          description: 'A JSON-parseable was received by the server, *irrespective of whether it was correct/acceptable or not*.'\n          content:\n            text/plain:\n              schema:\n                type: string\n                pattern: ok\n        '500':\n          description: The data sent by the server could not be parsed as JSON.\n          content:\n            text/plain:\n              schema:\n                type: string\n                pattern: nok\n    parameters: []\n  /pipelineResults:\n    post:\n      summary: Placeholder endpoint for qc, necessary so subscriptions to sns work\n      operationId: receiveQCResponse\n      x-eov-operation-id: qc#response\n      x-eov-operation-handler: routes/qc\n      requestBody:\n        description: 'The results from the execution of a pipeline step, sent via SNS.'\n        required: true\n        content:\n          text/plain:\n            schema:\n              type: string\n          application/json:\n            schema:\n              type: object\n              properties: {}\n      responses:\n        '200':\n          description: 'A JSON-parseable was received by the server, *irrespective of whether it was correct/acceptable or not*.'\n          content:\n            text/plain:\n              schema:\n                type: string\n                pattern: ok\n        '500':\n          description: The data sent by the server could not be parsed as JSON.\n          content:\n            text/plain:\n              schema:\n                type: string\n                pattern: nok\n  '/experiments/{experimentId}/download/{type}':\n    get:\n      summary: Download data according to the requested type\n      operationId: downloadExperimentData\n      x-eov-operation-id: experiment#downloadData\n      x-eov-operation-handler: routes/experiment\n      responses:\n        '200':\n          description: Download request successful.\n          content:\n            application/json:\n              schema:\n                type: string\n                description: signed URL of the resource\n        '400':\n          description: Invalid download type request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '403':\n          description: The authenticated user is not authorized to view this resource.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n        '404':\n          description: Invalid experiment ID or download type specified\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPError'\n  /kubernetesEvents:\n    post:\n      summary: Monitoring of kubernetes cluster events\n      description: Events from Kubernetes Event Exporter relayed to the API.\n      operationId: receiveKubernetesEvent\n      x-eov-operation-id: kubernetes#event\n      x-eov-operation-handler: routes/kubernetes\n      responses:\n        '200':\n          description: 'A JSON-parseable was received by the server, *irrespective of whether it was correct/acceptable or not*.'\n          content:\n            text/plain:\n              schema:\n                type: string\n                pattern: ok\n        '500':\n          description: The data sent by the server could not be parsed as JSON.\n          content:\n            text/plain:\n              schema:\n                type: string\n                pattern: nok\n\ncomponents:\n  schemas:\n    CreateExperiment:\n      $ref: './models/experiment-bodies/CreateExperiment.v2.yaml'\n    ExperimentInfo:\n      $ref: './models/experiment-bodies/ExperimentInfo.v2.yaml'\n    PatchExperiment:\n      $ref: './models/experiment-bodies/PatchExperiment.v2.yaml'\n    ProcessingConfig:\n      $ref: './models/experiment-bodies/ProcessingConfig.v2.yaml'\n    GetAllExperiments:\n      $ref: './models/experiment-bodies/GetAllExperiments.v2.yaml'\n    CreateSample:\n      $ref: './models/samples-bodies/CreateSample.v2.yaml'\n    GetSamples:\n      items:\n        $ref: ./models/samples-bodies/Sample.v2.yaml\n    CreateSampleFile:\n      $ref: './models/samples-bodies/CreateSampleFile.v2.yaml'\n    PatchSampleFile:\n      $ref: './models/samples-bodies/PatchSampleFile.v2.yaml'\n    CellSets:\n      $ref: ./models/cell-sets-bodies/CellSets.v2.yaml\n    PlotConfig:\n      $ref: ./models/plots-bodies/PlotConfig.v2.yaml\n    HTTPSuccess:\n      $ref: './models/HTTPSuccess.v1.yaml'\n    HTTPError:\n      $ref: './models/HTTPError.v1.yaml'"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"CreateSampleFile\": parse schema: resolve \"./models/samples-bodies/CreateSampleFile.v2.yaml\": external \"./models/samples-bodies/CreateSampleFile.v2.yaml\": file: local file reference is not allowed"
}