{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/just-eat.co.uk/1.0.0/openapi.yaml",
			"byteSize": 863982,
			"content": "openapi: 3.0.0\nservers:\n  - description: Production URL for the UK API\n    url: https://uk.api.just-eat.io\n  - description: Production URL for the DK, ES, IE, IT and NO API\n    url: https://i18n.api.just-eat.io\n  - description: Production URL for the AU and NZ API\n    url: https://aus.api.just-eat.io\ninfo:\n  contact:\n    x-twitter: JustEatUK\n  description: |-\n    # Just Eat API\n    Just Eat offers services for our various business partners and our consumer applications.\n    How you interact with the API depends on the services you wish to interact with.\n    ## Security\n    ### HTTPS\n    All api calls and callbacks require HTTPS. Your service will need a valid SSL certificate and be accessible via the standard SSL port (port 443).\n    ## Making an API request\n    Some API calls require an API key, to authenticate the partner calling the API.\n    ```\n    PUT https://uk-partnerapi.just-eat.io/orders/abcd1234 HTTP/1.1\n    Authorization: JE-API-KEY abcd123456789\n    ```\n    Other calls require a user token in the form of a JWT.\n    ```\n    GET https://uk.api.just-eat.io/consumer/me/orders/uk HTTP/1.1\n    Authorization: Bearer abcd123456789\n    ```\n\n    ## Date Formats\n    ### Date and time formats\n    All dates and times should use the [ISO 8601 standard for representation of dates and times](https://en.wikipedia.org/wiki/ISO_8601).\n\n    #### For instance:\n    * DueDateWithUtcOffset: `\"2015-05-26T14:52:35.5444292+01:00\"`\n      - Local time: `14:52`\n      - UTC time: `13:52`\n      - UTC offset: `+1hr` (due to daylight time saving)\n    * DueDateWithUtcOffset: `\"2015-02-03T11:10:00.0000000+00:00\"`\n      - Local time: `11:10`\n      - UTC time: `11:10`\n      - UTC offset: `0` (no daylight time saving, local time is equivalent to UTC)\n\n    Note that the offset may be for a timezone different to your own, so you should alway convert to your own local time for display purposes (e.g. on receipts and terminals).\n\n    ### Callback timestamps\n    Timestamps sent to Just Eat should be recorded as the current local time (including any changes needed to account for daylight saving) with an accompanying offset that shows the difference between the recorded local time and the current UTC time.\n\n    If it is not possible to record timestamps in local time, timestamps may be recorded in UTC time with a 00:00 offset.\n    ## Async Webhooks\n    Some of the webhooks on the platform are configured as being 'async' webhooks. These are for long-running operations, and work as follows:\n      1. Your webhook is invoked with a `?callback={returnUrl}` query string parameter. The `returnUrl` is a unique URL that you will need to send the async response to.\n      2. Return an immediate `202 Accepted` response from the webhook endpoint, to indicate that you have received the request.\n      3. Perform the long-running operation. This can be deemed either a _success_; or a _failure_.\n      4. If the result is a _**success**_, return the following:\n      ```\n      POST {returnUrl} HTTP/1.1\n\n      {\n            \"status\": \"Success\",\n            \"message\": \"{successMessage}\",\n            \"data\": {}   // webhook-specific response object\n      }\n      ```\n      5. Otherwise, if the result is a _**failure**_, return the following:\n      ```\n      POST {returnUrl} HTTP/1.1\n\n      {\n            \"status\": \"Failure\",\n            \"message\": \"{failureMessage}\",\n            \"data\": {}   // webhook-specific response object\n      }\n      ```\n  title: Just Eat UK\n  version: 1.0.0\n  x-apisguru-categories:\n    - ecommerce\n  x-logo:\n    url: https://twitter.com/JustEatUK/profile_image?size=original\n  x-origin:\n    - format: openapi\n      url: https://uk.api.just-eat.io/docs/openapi.json\n      version: \"3.0\"\n  x-providerName: just-eat.co.uk\npaths:\n  /acceptance-requested:\n    post:\n      description: This webhook will be invoked whenever acceptance has been requested for the order.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/acceptance-requested\"\n        required: true\n      responses:\n        \"200\":\n          description: Respond with a 200 status code to indicate that you have received the notification.\n      summary: Acceptance requested\n      tags:\n        - Order Acceptance Webhooks\n        - publicly-accessible\n  /attempted-delivery-query-resolved:\n    put:\n      description: This webhook will be invoked whenever an attempted delivery query has been resolved.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/attempted-delivery-resolved\"\n        required: true\n      responses:\n        \"200\":\n          description: Respond with a 200 status code to indicate that you have received the notification.\n      summary: Attempted delivery query resolved\n      tags:\n        - Attempted Delivery Webhooks\n        - publicly-accessible\n      x-status: Stable\n  \"/checkout/{tenant}/{checkoutId}\":\n    get:\n      description: |\n        Get the details required to fulfil an order, which includes:\n          - The restaurant selling the items to be purchased\n          - The customer making the purchase\n          - How, where and when the items will be received by the customer\n          - Instructions about the order\n      parameters:\n        - description: |\n            A two-character country code. \n\n            The following countries are supported:\n              - United Kingdom (UK)\n              - Australia (AU)\n              - New Zealand (NZ)\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: A unique identifier for a checkout. This is currently a Basket Id.\n          in: path\n          name: checkoutId\n          required: true\n          schema:\n            type: string\n        - description: Allows the server to identify the application making the request.\n          in: header\n          name: User-Agent\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                customer:\n                  firstName: Joe\n                  lastName: Bloggs\n                  phoneNumber: \"+447111111111\"\n                fulfilment:\n                  location:\n                    address:\n                      administrativeArea: Somerset\n                      lines:\n                        - 1 Bristol Road\n                      locality: Bristol\n                      postalCode: BS1 1AA\n                    geolocation:\n                      latitude: 1\n                      longitude: -1\n                  time:\n                    asap: false\n                    scheduled:\n                      from: 2020-01-01T00:30:00.000Z\n                      to: 2020-01-01T00:30:00.000Z\n                isFulfillable: true\n                issues:\n                  - code: RESTAURANT_NOT_TAKING_ORDERS\n                  - additionalSpendRequired: 100\n                    code: MINIMUM_ORDER_VALUE_NOT_MET\n                    currency: GBP\n                    minimumOrderValue: 1000\n                restaurant:\n                  availabilityId: \"5678\"\n                  id: \"1234\"\n                serviceType: delivery\n              schema:\n                $ref: \"#/components/schemas/CheckoutGetResponse\"\n          description: \"OK : Request has succeeded.\"\n          headers:\n            cache-control:\n              description: Response caching must not be applied.\n              schema:\n                enum:\n                  - no-store\n                type: string\n        \"400\":\n          content:\n            application/json:\n              example:\n                fault:\n                  errors:\n                    - description: The tenant is invalid\n                      errorCode: TENANT_INVALID\n                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                  traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/CheckoutGet400Error\"\n          description: \"BAD REQUEST : Cannot process the request due to error by client.\"\n        \"401\":\n          content:\n            application/json:\n              example:\n                fault:\n                  errors:\n                    - description: Authentication required to access this resource\n                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                  traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/CheckoutDefaultError\"\n          description: \"UNAUTHORIZED : Missing authentication credentials to access target resource.\"\n        \"403\":\n          content:\n            application/json:\n              example:\n                fault:\n                  errors:\n                    - description: Access to the resource is forbidden\n                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                  traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/CheckoutDefaultError\"\n          description: \"FORBIDDEN : Not authorised to access target resource.\"\n        \"404\":\n          content:\n            application/json:\n              example:\n                fault:\n                  errors:\n                    - description: The tenant is not supported\n                      errorCode: TENANT_NOT_SUPPORTED\n                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                  traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/Checkout404Error\"\n          description: \"NOT FOUND : Target resource could not be found.\"\n        \"409\":\n          content:\n            application/json:\n              example:\n                fault:\n                  errors:\n                    - description: The checkout is in an invalid state\n                      errorCode: CHECKOUT_INVALID\n                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                  traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/Checkout409Error\"\n          description: \"CONFLICT : Request not completed as it conflicts with target resource.\"\n        \"429\":\n          content:\n            application/json:\n              example:\n                fault:\n                  errors:\n                    - description: Couldn't complete request\n                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                  traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/CheckoutDefaultError\"\n          description: \"TOO MANY REQUESTS : Request not completed as server has received too many requests in a given amount of time.\"\n        \"500\":\n          content:\n            application/json:\n              example:\n                fault:\n                  errors:\n                    - description: Internal Server Error\n                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                  traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/CheckoutDefaultError\"\n          description: \"INTERNAL SERVER ERROR : Error on server preventing request from being fulfilled.\"\n        \"503\":\n          content:\n            application/json:\n              example:\n                fault:\n                  errors:\n                    - description: Couldn't complete request\n                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                  traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/CheckoutDefaultError\"\n          description: \"SERVICE UNAVAILABLE : Server currently unable to fulfil the request. The request can be retried.\"\n      security:\n        - Bearer: []\n      summary: Get Checkout\n      tags:\n        - Checkout\n        - publicly-accessible\n      x-status: Stable\n    patch:\n      description: |\n        Update the details required to fulfil an order, which includes:\n          - The customer making the purchase\n          - Where and when the items will be received by the customer\n          - Instructions about the order\n      parameters:\n        - description: |\n            A two-character country code. \n\n            The following countries are supported:\n              - United Kingdom (UK)\n              - Australia (AU)\n              - New Zealand (NZ)\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: A unique identifier for a checkout. This is currently a Basket Id.\n          in: path\n          name: checkoutId\n          required: true\n          schema:\n            type: string\n        - description: Allows the server to identify the application making the request.\n          in: header\n          name: User-Agent\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json-patch+json:\n            example:\n              - op: add\n                path: /customer\n                value:\n                  dateOfBirth: 1980-01-30\n                  phoneNumber: \"+447111111111\"\n            schema:\n              $ref: \"#/components/schemas/CheckoutUpdateRequest\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                isFulfillable: true\n                issues:\n                  - code: RESTAURANT_NOT_TAKING_ORDERS\n                  - additionalSpendRequired: 100\n                    code: MINIMUM_ORDER_VALUE_NOT_MET\n                    currency: GBP\n                    minimumOrderValue: 1000\n              schema:\n                $ref: \"#/components/schemas/CheckoutUpdateResponse\"\n          description: \"OK : Request has succeeded.\"\n          headers:\n            cache-control:\n              description: Response caching must not be applied.\n              schema:\n                enum:\n                  - no-store\n                type: string\n        \"400\":\n          content:\n            application/json:\n              example:\n                fault:\n                  errors:\n                    - description: The tenant is invalid\n                      errorCode: TENANT_INVALID\n                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                  traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/CheckoutUpdate400Error\"\n          description: \"BAD REQUEST : Cannot process the request due to error by client.\"\n        \"401\":\n          content:\n            application/json:\n              example:\n                fault:\n                  errors:\n                    - description: Authentication required to access this resource\n                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                  traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/CheckoutDefaultError\"\n          description: \"UNAUTHORIZED : Missing authentication credentials to access target resource.\"\n        \"403\":\n          content:\n            application/json:\n              example:\n                fault:\n                  errors:\n                    - description: Access to the resource is forbidden\n                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                  traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/CheckoutDefaultError\"\n          description: \"FORBIDDEN : Not authorised to access target resource.\"\n        \"404\":\n          content:\n            application/json:\n              example:\n                fault:\n                  errors:\n                    - description: The tenant is not supported\n                      errorCode: TENANT_NOT_SUPPORTED\n                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                  traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/Checkout404Error\"\n          description: \"NOT FOUND : Target resource could not be found.\"\n        \"409\":\n          content:\n            application/json:\n              example:\n                fault:\n                  errors:\n                    - description: The checkout is in an invalid state\n                      errorCode: CHECKOUT_INVALID\n                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                  traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/Checkout409Error\"\n          description: \"CONFLICT : Request not completed as it conflicts with target resource.\"\n        \"429\":\n          content:\n            application/json:\n              example:\n                fault:\n                  errors:\n                    - description: Couldn't complete request\n                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                  traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/CheckoutDefaultError\"\n          description: \"TOO MANY REQUESTS : Request not completed as server has received too many requests in a given amount of time.\"\n        \"500\":\n          content:\n            application/json:\n              example:\n                fault:\n                  errors:\n                    - description: Internal Server Error\n                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                  traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/CheckoutDefaultError\"\n          description: \"INTERNAL SERVER ERROR : Error on server preventing request from being fulfilled.\"\n        \"503\":\n          content:\n            application/json:\n              example:\n                fault:\n                  errors:\n                    - description: Couldn't complete request\n                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                  traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/CheckoutDefaultError\"\n          description: \"SERVICE UNAVAILABLE : Server currently unable to fulfil the request. The request can be retried.\"\n      security:\n        - Bearer: []\n      summary: Update Checkout\n      tags:\n        - Checkout\n        - publicly-accessible\n      x-status: Stable\n  \"/checkout/{tenant}/{checkoutId}/fulfilment/availabletimes\":\n    get:\n      description: Gets a collection of times for when an order can be fulfilled.\n      parameters:\n        - description: |\n            A two-character country code. \n\n            The following countries are supported:\n              - United Kingdom (UK)\n              - Australia (AU)\n              - New Zealand (NZ)\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: A unique identifier for a checkout. This is currently a Basket Id.\n          in: path\n          name: checkoutId\n          required: true\n          schema:\n            type: string\n        - description: Allows the server to identify the application making the request.\n          in: header\n          name: User-Agent\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                asapAvailable: true\n                times:\n                  - from: 2020-01-01T00:30:00.000Z\n                    to: 2020-01-01T00:45:00.000Z\n                  - from: 2020-01-01T00:45:00.000Z\n                    to: 2020-01-01T01:00:00.000Z\n              schema:\n                $ref: \"#/components/schemas/GetAvailableFulfilmentTimesResponse\"\n          description: \"OK : Request has succeeded.\"\n          headers:\n            cache-control:\n              description: Response caching must not be applied.\n              schema:\n                enum:\n                  - no-store\n                type: string\n        \"400\":\n          content:\n            application/json:\n              example:\n                fault:\n                  errors:\n                    - description: The tenant is invalid\n                      errorCode: TENANT_INVALID\n                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                  traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/CheckoutGet400Error\"\n          description: \"BAD REQUEST : Cannot process the request due to error by client.\"\n        \"404\":\n          content:\n            application/json:\n              example:\n                fault:\n                  errors:\n                    - description: The tenant is not supported\n                      errorCode: TENANT_NOT_SUPPORTED\n                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                  traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/Checkout404Error\"\n          description: \"NOT FOUND : Target resource could not be found.\"\n        \"409\":\n          content:\n            application/json:\n              example:\n                fault:\n                  errors:\n                    - description: The fulfilment time bands are in an invalid state\n                      errorCode: FULFILMENT_TIME_BANDS_INVALID\n                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                  traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/AvailableFulfilmentTimes409Error\"\n          description: \"CONFLICT : Request not completed as it conflicts with target resource.\"\n        \"429\":\n          content:\n            application/json:\n              example:\n                fault:\n                  errors:\n                    - description: Couldn't complete request\n                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                  traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/CheckoutDefaultError\"\n          description: \"TOO MANY REQUESTS : Request not completed as server has received too many requests in a given amount of time.\"\n        \"500\":\n          content:\n            application/json:\n              example:\n                fault:\n                  errors:\n                    - description: Internal Server Error\n                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                  traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/CheckoutDefaultError\"\n          description: \"INTERNAL SERVER ERROR : Error on server preventing request from being fulfilled.\"\n        \"503\":\n          content:\n            application/json:\n              example:\n                fault:\n                  errors:\n                    - description: Couldn't complete request\n                  faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                  traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/CheckoutDefaultError\"\n          description: \"SERVICE UNAVAILABLE : Server currently unable to fulfil the request. The request can be retried.\"\n      summary: Get Available Fulfilment Times\n      tags:\n        - Checkout\n        - publicly-accessible\n      x-status: Stable\n  \"/consumers/{tenant}\":\n    get:\n      description: Currently this operation only supports retrieving a count of consumer accounts given an email address.\n      parameters:\n        - description: The identifier for the tenant.\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: Email address of the consumer.\n          in: query\n          name: emailAddress\n          required: true\n          schema:\n            type: string\n        - description: The account type of the consumer - currently only 'registered' accounts are supported.\n          in: query\n          name: accountType\n          required: true\n          schema:\n            default: registered\n            enum:\n              - registered\n            type: string\n        - description: Returns the number of consumers that matches the `emailAddress` and `accountType`. The query value should be empty, e.g. `/consumers/uk/?emailAddress=someone@email.com\u0026accountType=registered\u0026count`.\n          in: query\n          name: count\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            text/plain:\n              example: 1\n              schema:\n                type: integer\n          description: Success\n          headers:\n            cache-control:\n              description: Information about how the response can be cached.\n              schema:\n                type: string\n        \"400\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: The Email is missing or invalid.\n                    errorCode: InvalidEmail\n                faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Bad request.\n        \"404\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Tenant not found\n                    errorCode: TenantNotFound\n                faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: The specified tenant does not exist.\n        \"500\":\n          $ref: \"#/components/responses/500ErrorResponse\"\n        \"501\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Non-Count queries have not been implemented\n                    errorCode: NotImplemented\n                faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/5XXErrorSchema\"\n          description: The operation has not been implemented\n      summary: Get consumers details\n      tags:\n        - Consumers\n        - publicly-accessible\n    post:\n      description: Creates a consumer for the given tenant.\n      parameters:\n        - description: The identifier for the tenant. The only supported tenants are `uk`, `au` and `nz`\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ConsumerCreate\"\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConsumerCreateResponse\"\n          description: Consumer created.\n        \"400\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Email is required.\n                    errorCode: BadRequest\n                faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Bad request.\n        \"403\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Not authorized to do this.\n                    errorCode: Forbidden\n                faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Forbidden.\n        \"404\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Tenant not found\n                    errorCode: TenantNotFound\n                faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: The specified tenant does not exist.\n        \"409\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: The specified email already exists\n                    errorCode: Conflict\n                faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: The specified email already exists.\n        \"500\":\n          $ref: \"#/components/responses/500ErrorResponse\"\n      summary: Create consumer\n      tags:\n        - Consumers\n        - publicly-accessible\n  \"/consumers/{tenant}/me/communication-preferences\":\n    get:\n      description: Get all communication preferences for a given consumer.\n      parameters:\n        - description: Request tenant.\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                marketing:\n                  isDefault: false\n                  subscribedChannels:\n                    - email\n                    - sms\n              schema:\n                $ref: \"#/components/schemas/CommunicationPreferences\"\n          description: Success\n          headers:\n            cache-control:\n              description: Information about how the response can be cached.\n              schema:\n                type: string\n        \"401\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: You are unauthorized to perform this request.\n                    errorCode: Unauthorized\n                faultId: b39ae4c1-142f-4308-838d-1f01815e1cf1\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: You are forbidden from performing this request.\n                    errorCode: Forbidden\n                faultId: b39ae4c1-142f-4308-838d-1f01815e1cf1\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Tenant could not be found.\n                    errorCode: NotFound\n                faultId: b39ae4c1-142f-4308-838d-1f01815e1cf1\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Not Found\n        \"500\":\n          $ref: \"#/components/responses/500ErrorResponse\"\n          description: Internal Server Error\n      summary: Get communication preferences\n      tags:\n        - Consumers\n        - publicly-accessible\n  \"/consumers/{tenant}/me/communication-preferences/{type}\":\n    get:\n      description: Get channel subscriptions for a given consumer's communication preference type\n      parameters:\n        - description: Request tenant.\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: The type of communication preferences.\n          in: path\n          name: type\n          required: true\n          schema:\n            $ref: \"#/components/schemas/CommunicationTypes\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                isDefault: false\n                subscribedChannels:\n                  - email\n                  - sms\n              schema:\n                $ref: \"#/components/schemas/ChannelSubscriptionsWithDerivedField\"\n          description: Success\n          headers:\n            cache-control:\n              description: Information about how the response can be cached.\n              schema:\n                type: string\n        \"401\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: You are unauthorized to perform this request.\n                    errorCode: Unauthorized\n                faultId: b39ae4c1-142f-4308-838d-1f01815e1cf1\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: You are forbidden from performing this request.\n                    errorCode: Forbidden\n                faultId: b39ae4c1-142f-4308-838d-1f01815e1cf1\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Tenant could not be found.\n                    errorCode: NotFound\n                faultId: b39ae4c1-142f-4308-838d-1f01815e1cf1\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Not Found\n        \"500\":\n          $ref: \"#/components/responses/500ErrorResponse\"\n          description: Internal Server Error\n      summary: Get channel subscriptions for a given consumer's communication preference type\n      tags:\n        - Consumers\n        - publicly-accessible\n    put:\n      description: Set only the channel subscriptions for a given consumer's communication preference type. E.g., An empty list of subscribed Channels implies unsubscribe from all channels.\n      parameters:\n        - description: Request tenant.\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: The type of communication preferences.\n          in: path\n          name: type\n          required: true\n          schema:\n            $ref: \"#/components/schemas/CommunicationTypes\"\n      requestBody:\n        content:\n          application/json:\n            example:\n              subscribedChannels:\n                - email\n                - sms\n            schema:\n              $ref: \"#/components/schemas/ChannelSubscriptions\"\n        description: The list of channels that the consumer should be subscribed to.\n        required: true\n      responses:\n        \"204\":\n          content: {}\n          description: Success\n        \"401\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: You are unauthorized to perform this request.\n                    errorCode: Unauthorized\n                faultId: b39ae4c1-142f-4308-838d-1f01815e1cf1\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Unauthorized\n        \"404\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Tenant could not be found.\n                    errorCode: NotFound\n                faultId: b39ae4c1-142f-4308-838d-1f01815e1cf1\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Not Found\n        \"500\":\n          $ref: \"#/components/responses/500ErrorResponse\"\n          description: Internal Server Error\n      summary: Set only the channel subscriptions for a given consumer's communication preference type\n      tags:\n        - Consumers\n        - publicly-accessible\n  \"/consumers/{tenant}/me/communication-preferences/{type}/subscribedChannels/{channel}\":\n    delete:\n      description: Remove subscription of a specific communication preference channel.\n      parameters:\n        - description: Request tenant.\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: The type of communication preference.\n          in: path\n          name: type\n          required: true\n          schema:\n            $ref: \"#/components/schemas/CommunicationTypes\"\n        - description: The channel.\n          in: path\n          name: channel\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content: {}\n        required: false\n      responses:\n        \"204\":\n          content: {}\n          description: Success\n        \"401\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: You are unauthorized to perform this request.\n                    errorCode: Unauthorized\n                faultId: b39ae4c1-142f-4308-838d-1f01815e1cf1\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Unauthorized\n        \"404\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Tenant could not be found.\n                    errorCode: NotFound\n                faultId: b39ae4c1-142f-4308-838d-1f01815e1cf1\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Not Found\n        \"500\":\n          $ref: \"#/components/responses/500ErrorResponse\"\n          description: Internal Server Error\n      summary: Remove subscription of a specific communication preference channel\n      tags:\n        - Consumers\n        - publicly-accessible\n    post:\n      description: Subscribe to a specific communication preference channel.\n      parameters:\n        - description: Request tenant.\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: The type of communication preferences.\n          in: path\n          name: type\n          required: true\n          schema:\n            $ref: \"#/components/schemas/CommunicationTypes\"\n        - description: The channel.\n          in: path\n          name: channel\n          required: true\n          schema:\n            $ref: \"#/components/schemas/CommunicationChannels\"\n      requestBody:\n        content: {}\n        required: false\n      responses:\n        \"204\":\n          content: {}\n          description: Success\n        \"401\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: You are unauthorized to perform this request.\n                    errorCode: Unauthorized\n                faultId: b39ae4c1-142f-4308-838d-1f01815e1cf1\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: You are forbidden from performing this request.\n                    errorCode: Forbidden\n                faultId: b39ae4c1-142f-4308-838d-1f01815e1cf1\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Tenant could not be found.\n                    errorCode: NotFound\n                faultId: b39ae4c1-142f-4308-838d-1f01815e1cf1\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Not Found\n        \"500\":\n          $ref: \"#/components/responses/500ErrorResponse\"\n          description: Internal Server Error\n      summary: Subscribe to a specific communication preference channel\n      tags:\n        - Consumers\n        - publicly-accessible\n  /delivery-failed:\n    put:\n      description: This webhook will be invoked whenever an attempted delivery event is created from the device.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/attempted-delivery-created\"\n        required: true\n      responses:\n        \"200\":\n          description: Respond with a 200 status code to indicate that you have received the notification.\n      summary: Delivery Attempt Failed\n      tags:\n        - Attempted Delivery Webhooks\n        - publicly-accessible\n  \"/delivery-fees/{tenant}\":\n    get:\n      description: Retrieve delivery fees for many restaurants. Returns fees and minimum order values required for delivery orders.\n      parameters:\n        - description: Tenant containing the restaurants.\n          example: uk\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: Restaurant IDs which fees are requested for. e.g. `?restaurantIds=1,2,3,4`\n          example:\n            - \"1\"\n            - \"2\"\n            - \"3\"\n            - \"4\"\n          explode: false\n          in: query\n          name: restaurantIds\n          required: true\n          schema:\n            items:\n              type: string\n            maxItems: 200\n            type: array\n          style: form\n        - description: Delivery date/time when fees are required (ISO8601 format).\n          example: 2019-09-05T12:43:48.431Z\n          in: query\n          name: deliveryTime\n          required: true\n          schema:\n            format: date-time\n            type: string\n        - description: Postcode or other location name identifying the location to which delivery is required. For use when precise location is not available. This will be removed in future in favour of location.\n          example: BS1\n          in: query\n          name: zone\n          required: false\n          schema:\n            type: string\n        - description: Point to which delivery is required (latitude, longitude). Supply this where possible as support for zone-only based lookups will be removed in future.\n          example:\n            - 51.3851513\n            - -2.0841275\n          explode: false\n          in: query\n          name: latlong\n          required: false\n          schema:\n            items:\n              format: double\n              type: number\n            maxItems: 2\n            minItems: 2\n            type: array\n          style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                flatRate:\n                  summary: Single fee, with and without minimum order value\n                  value:\n                    restaurants:\n                      - bands:\n                          - fee: 250\n                            minimumAmount: 1000\n                        minimumOrderValue: 1000\n                        restaurantId: \"1234\"\n                      - bands:\n                          - fee: 100\n                            minimumAmount: 0\n                        minimumOrderValue: 0\n                        restaurantId: \"5678\"\n                flatRateWithFreeTier:\n                  summary: Single fee with minimum order value, and free delivery threshold\n                  value:\n                    restaurants:\n                      - bands:\n                          - fee: 250\n                            minimumAmount: 1000\n                          - fee: 0\n                            minimumAmount: 2000\n                        minimumOrderValue: 1000\n                        restaurantId: \"1234\"\n                threeTier:\n                  summary: No minimum order value, three pricing tiers\n                  value:\n                    restaurants:\n                      - bands:\n                          - fee: 250\n                            minimumAmount: 0\n                          - fee: 100\n                            minimumAmount: 10\n                          - fee: 0\n                            minimumAmount: 2000\n                        minimumOrderValue: 0\n                        restaurantId: \"1234\"\n              schema:\n                nullable: true\n                properties:\n                  restaurants:\n                    description: Collection of restaurants for which delivery fees were found.\n                    items:\n                      $ref: \"#/components/schemas/RestaurantDeliveryFees\"\n                    type: array\n                type: object\n          description: Success\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Not found\n      summary: Get restaurant delivery fees\n      tags:\n        - DeliveryFee\n        - publicly-accessible\n  /delivery/estimate:\n    get:\n      deprecated: true\n      description: Get delivery estimate\n      parameters:\n        - description: The reference of the restaurant to estimate the delivery time from.\n          in: query\n          name: restaurantReference\n          required: true\n          schema:\n            type: string\n        - description: The latitude of the position to estimate the delivery time to.\n          in: query\n          name: toLat\n          required: false\n          schema:\n            type: string\n        - description: The longitude of the position to estimate the delivery time to.\n          in: query\n          name: toLon\n          required: false\n          schema:\n            type: string\n        - description: The postcode to estimate the delivery time to.\n          in: query\n          name: toPostcode\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/estimated-delivery-time\"\n          description: OK\n      summary: Get delivery estimate\n      tags:\n        - Order Delivery API\n        - publicly-accessible\n  /delivery/pools:\n    get:\n      description: A delivery pool is a named group of drivers which deliver food for a set of restaurants.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    b9c6673b8e5948b98cfbd14a982de2c2:\n                      name: Toronto - East\n                      restaurants:\n                        - 789\n                    d5f72466a6dd49a08166d5a044c5b9e4:\n                      name: Toronto - West\n                      restaurants:\n                        - 123\n                        - 456\n              schema:\n                properties:\n                  delivery-pool-id:\n                    properties:\n                      name:\n                        description: The name of the pool, used by operations teams, in reports, etc.\n                        type: string\n                      restaurants:\n                        description: A list of Just Eat restaurant ids served by the delivery pool.\n                        items:\n                          format: int32\n                          type: number\n                        type: array\n                    type: object\n                type: object\n          description: OK\n        \"500\":\n          content:\n            text/plain:\n              examples:\n                response:\n                  value: Internal Server Error\n          description: Internal Server Error\n      summary: Get your delivery pools\n      tags:\n        - Delivery Pools API\n        - publicly-accessible\n    post:\n      description: A delivery pool is a named group of drivers which deliver food for a set of restaurants.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/create-delivery-pool\"\n        required: true\n      responses:\n        \"201\":\n          description: Pool has been created.\n        \"400\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    name:\n                      - \"'Name' should not be empty\"\n          description: There was something invalid in your request - check response body for details\n        \"500\":\n          content:\n            text/plain:\n              examples:\n                response:\n                  value: Internal Server Error\n          description: Internal Server Error\n      summary: Create a new delivery pool\n      tags:\n        - Delivery Pools API\n        - publicly-accessible\n  \"/delivery/pools/{deliveryPoolId}\":\n    delete:\n      description: The restaurants will no longer be associated with the pool.\n      responses:\n        \"200\":\n          description: Pool deleted\n        \"404\":\n          description: The pool could not be found\n        \"500\":\n          content:\n            text/plain:\n              examples:\n                response:\n                  value: Internal Server Error\n          description: Internal Server Error\n      summary: Delete a delivery pool\n      tags:\n        - Delivery Pools API\n        - publicly-accessible\n    get:\n      description: A delivery pool is a named group of drivers which deliver food for a set of restaurants.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    name: Toronto - West\n                    restaurants:\n                      - 123\n                      - 456\n              schema:\n                properties:\n                  name:\n                    description: The name of the pool, used by operations teams, in reports, etc.\n                    type: string\n                  restaurants:\n                    description: A list of Just Eat restaurant ids served by the delivery pool.\n                    items:\n                      format: int32\n                      type: number\n                    type: array\n                type: object\n          description: OK\n        \"404\":\n          description: The pool could not be found\n        \"500\":\n          content:\n            text/plain:\n              examples:\n                response:\n                  value: Internal Server Error\n          description: Internal Server Error\n      summary: Get an individual delivery pool\n      tags:\n        - Delivery Pools API\n        - publicly-accessible\n    parameters:\n      - description: Identifier for the pool\n        in: path\n        name: deliveryPoolId\n        required: true\n        schema:\n          type: string\n    patch:\n      description: Modify a delivery pool, changing its name, restaurants or both\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/patch-delivery-pool\"\n        description: Request body should contain an object with either or both of the properties. If a property is not specified then the existing values are retained.\n        required: true\n      responses:\n        \"202\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    name: Toronto - North\n                    restaurants:\n                      - 123\n                      - 456\n              schema:\n                properties:\n                  name:\n                    description: The name of the pool, used by operations teams, in reports, etc.\n                    type: string\n                  restaurants:\n                    description: A list of Just Eat restaurant ids served by the delivery pool.\n                    items:\n                      format: int32\n                      type: number\n                    type: array\n                type: object\n          description: Pool has been updated\n        \"400\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    name:\n                      - \"'Name' should not be empty\"\n          description: There was something invalid in your request - check response body for details\n        \"404\":\n          description: The pool could not be found\n        \"409\":\n          content:\n            text/plain:\n              examples:\n                response:\n                  value: \"Restaurant(s) are already assigned to pools : `{RestaurantId:55474, PoolId:cccebb96452349b799b71a7adc51df66}`\"\n          description: A restaurant in your request already belongs to another pool\n        \"500\":\n          content:\n            text/plain:\n              examples:\n                response:\n                  value: Internal Server Error\n          description: Internal Server Error\n      summary: Modify a delivery pool\n      tags:\n        - Delivery Pools API\n        - publicly-accessible\n    put:\n      description: Replace an existing delivery pool changing all of its properties\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/create-delivery-pool\"\n        required: true\n      responses:\n        \"202\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    name: Toronto - West\n                    restaurants:\n                      - 123\n                      - 456\n              schema:\n                properties:\n                  name:\n                    description: The name of the pool, used by operations teams, in reports, etc.\n                    type: string\n                  restaurants:\n                    description: A list of Just Eat restaurant ids served by the delivery pool.\n                    items:\n                      format: int32\n                      type: number\n                    type: array\n                type: object\n          description: Pool has been replaced\n        \"400\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    name:\n                      - \"'Name' should not be empty\"\n          description: There was something invalid in your request - check response body for details\n        \"404\":\n          description: The pool could not be found\n        \"409\":\n          content:\n            text/plain:\n              examples:\n                response:\n                  value: \"Restaurant(s) are already assigned to pools : `{RestaurantId:55474, PoolId:cccebb96452349b799b71a7adc51df66}`\"\n          description: A restaurant in your request already belongs to another pool\n        \"500\":\n          content:\n            text/plain:\n              examples:\n                response:\n                  value: Internal Server Error\n          description: Internal Server Error\n      summary: Replace an existing delivery pool\n      tags:\n        - Delivery Pools API\n        - publicly-accessible\n  \"/delivery/pools/{deliveryPoolId}/availability/relative\":\n    get:\n      description: Get the current amount of time it will take a driver to collect a new order from a restaurant in the pool.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                request:\n                  value:\n                    bestGuess: 00:35:00\n              schema:\n                properties:\n                  bestGuess:\n                    description: Your best estimation (hh:mm:ss)\n                    type: string\n                type: object\n          description: OK\n        \"404\":\n          description: The pool could not be found\n      summary: Get availability for pickup\n      tags:\n        - Delivery Pools API\n        - publicly-accessible\n    parameters:\n      - description: Identifier for the pool\n        in: path\n        name: deliveryPoolId\n        required: true\n        schema:\n          type: string\n    put:\n      description: Set the average amount of time it will take a driver to collect a new order from a restaurant in the pool.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/estimated-time\"\n        required: true\n      responses:\n        \"202\":\n          description: Update will take effect shortly\n        \"404\":\n          description: The pool could not be found\n      summary: Set availability for pickup\n      tags:\n        - Delivery Pools API\n        - publicly-accessible\n  \"/delivery/pools/{deliveryPoolId}/hours\":\n    parameters:\n      - description: Identifier for the pool\n        in: path\n        name: deliveryPoolId\n        required: true\n        schema:\n          type: string\n    put:\n      description: Set the daily start and end times for a pool or set closed flag if the pool does not operate on that day. Start and end times for all days must be provided. Though the API accepts array of start and end times for each day, multiple start and end time for a day are not accepted. If the end time for a day is equal to or before start time, end time will be considered as time for the next day.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/delivery-pool-hours\"\n        required: true\n      responses:\n        \"200\":\n          description: Pool hours have been updated\n        \"404\":\n          description: The pool could not be found\n      summary: Set the delivery pools daily start and end times\n      tags:\n        - Delivery Pools API\n        - publicly-accessible\n  \"/delivery/pools/{deliveryPoolId}/restaurants\":\n    delete:\n      description: Remove restaurants from a delivery pool\n      requestBody:\n        content:\n          application/json:\n            schema:\n              example:\n                restaurants:\n                  - 123\n                  - 456\n              properties:\n                restaurants:\n                  description: A list of Just Eat restaurant ids served by the delivery pool.\n                  items:\n                    format: int32\n                    type: number\n                  type: array\n              type: object\n        required: true\n      responses:\n        \"200\":\n          description: Pool has been updated\n        \"400\":\n          description: There was something invalid in your request - check response body for details\n        \"404\":\n          description: The pool could not be found\n      summary: Remove restaurants from a delivery pool\n      tags:\n        - Delivery Pools API\n        - publicly-accessible\n    parameters:\n      - description: Identifier for the pool\n        in: path\n        name: deliveryPoolId\n        required: true\n        schema:\n          type: string\n    put:\n      description: Add additional restaurants to a delivery pool\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value:\n                    restaurants:\n                      - 123\n                      - 456\n              schema:\n                $ref: \"#/components/schemas/delivery-restaurantslist\"\n          description: OK\n        \"400\":\n          description: There was something invalid in your request - check response body for details\n        \"404\":\n          description: The pool could not be found\n        \"409\":\n          description: The restaurants could not be added to the pool. Typically this is because they are already assigned to another pool\n      summary: Add restaurants to an existing delivery pool\n      tags:\n        - Delivery Pools API\n        - publicly-accessible\n  /driver-assigned-to-delivery:\n    put:\n      description: Driver Assigned to Delivery\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/driver-status\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n      summary: Driver Assigned to Delivery\n      tags:\n        - Order Delivery Webhooks\n        - publicly-accessible\n  /driver-at-delivery-address:\n    put:\n      description: Driver at delivery address\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/driver-status\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n      summary: Driver at delivery address\n      tags:\n        - Order Delivery Webhooks\n        - publicly-accessible\n  /driver-at-restaurant:\n    put:\n      description: Driver at restaurant\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/driver-status\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n      summary: Driver at restaurant\n      tags:\n        - Order Delivery Webhooks\n        - publicly-accessible\n  /driver-has-delivered-order:\n    put:\n      description: Driver has delivered order\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/driver-status\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n      summary: Driver has delivered order\n      tags:\n        - Order Delivery Webhooks\n        - publicly-accessible\n  /driver-location:\n    put:\n      description: Driver Location\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/driver-location\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n      summary: Driver Location\n      tags:\n        - Order Delivery Webhooks\n        - publicly-accessible\n  /driver-on-their-way-to-delivery-address:\n    put:\n      description: Driver on their way to delivery address\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/driver-status\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n      summary: Driver on their way to delivery address\n      tags:\n        - Order Delivery Webhooks\n        - publicly-accessible\n  /late-order-compensation-query:\n    post:\n      description: This webhook will be invoked when a late order compensation query has been raised and a restaurant response is required.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/late-order-compensation-query\"\n        required: true\n      responses:\n        \"200\":\n          description: Respond with a 200 status code to indicate that you have received the notification\n      summary: late order compensation query, restaurant response required\n      tags:\n        - Consumer Queries Webhooks\n        - publicly-accessible\n  /late-order-query:\n    post:\n      description: This webhook will be invoked when a late order query has been raised and a restaurant response is required.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/late-order-query\"\n        required: true\n      responses:\n        \"200\":\n          description: Respond with a 200 status code to indicate that you have received the notification.\n      summary: late order query, restaurant response required\n      tags:\n        - Consumer Queries Webhooks\n        - publicly-accessible\n  /menu-ingestion-complete:\n    post:\n      description: Callback to confirm that an attempt to ingest a menu has completed either successfully or unsuccessfully\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/menu-ingestion-complete\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n      summary: Menu ingestion complete\n      tags:\n        - Restaurant Webhooks\n        - publicly-accessible\n  /order-accepted:\n    post:\n      description: This webhook will be invoked whenever the order was accepted.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/order-accepted\"\n        required: true\n      responses:\n        \"200\":\n          description: Respond with a 200 status code to indicate that you have received the notification.\n      summary: Order accepted\n      tags:\n        - Order Acceptance Webhooks\n        - publicly-accessible\n  /order-cancelled:\n    post:\n      description: This webhook will be invoked whenever the order was cancelled.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/order-cancelled\"\n        required: true\n      responses:\n        \"200\":\n          description: Respond with a 200 status code to indicate that you have received the notification.\n      summary: Order cancelled\n      tags:\n        - Order Acceptance Webhooks\n        - publicly-accessible\n  /order-eligible-for-restaurant-compensation:\n    post:\n      description: |\n        This webhook will be invoked for every cancelled order and it will inform if the order is eligible for compensation.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OrderEligibleForRestaurantCompensation\"\n        required: true\n      responses:\n        \"200\":\n          description: Respond with a 200 status code to indicate that you have received the notification.\n      summary: Order Eligible For Restaurant Compensation\n      tags:\n        - RestaurantQueries Webhooks\n        - publicly-accessible\n  /order-is-ready-for-pickup:\n    put:\n      description: \u003cp\u003eThe \"Ready for pickup\" event lets the delivery partner know that the food has been cooked and is now ready for collection up from the restaurant.\u003c/p\u003e\u003cp\u003eWhen this event is received, it is important that you let your driver know that the order should now be collected from inside the restaurant. For example, this driver notification could take the form of an in-app notification or an SMS message.\u003c/p\u003e\u003cp\u003eThis communication is needed to support restaurants who are unable to accommodate drivers inside their premises, as it allows restaurants to notify drivers waiting outside that they should come inside to collect their order.\u003c/p\u003e\u003cp\u003eNB\u0026semi; This event can be sent by the restaurant at any point after the order is accepted by the restaurant (for instance, this event may be sent before the driver has arrived at the restaurant).\u003c/p\u003e\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ready-for-pickup\"\n        required: true\n      responses:\n        \"200\":\n          description: Upon successful receipt of the event, delivery partners should return a 200 HTTP status code indicating acknowledgement of transmission.\n        default:\n          content:\n            application/json:\n              schema:\n                properties:\n                  Details:\n                    type: string\n                  Message:\n                    type: string\n                  OrderId:\n                    type: string\n                  Timestamp:\n                    format: date-time\n                    type: string\n                type: object\n          description: In the unlikely case of unknown errors, JUST EAT will log a raw response. If possible, the response should have the following format\n      summary: Order ready for pickup\n      tags:\n        - Order Delivery Webhooks\n        - publicly-accessible\n  /order-ready-for-preparation-async:\n    post:\n      description: |\n        This webhook will be invoked when we have determined that an order is ready for preparation. Upon receiving the request, you should perform any preparation-related activities, such as sending the order to the POS system / kitchen screen.\n        **NOTE:** This version of the webhook is asynchronous, and we expect a response in two parts:\n          1. We expect an immediate `202` response from this webhook to denote that you have received the request;\n          2. Following that, we expect an [async callback](#section/Async-Webhooks) - indicating either success or failure of the operation. The body for the async callbacks are as below:\n          \n          **Success callback**\n          ```\n          {\n                \"status\": \"Success\",\n                \"message\": \"Order successfully sent to POS\",\n                \"data\": {}\n          }\n          ```\n          **Failure callback**\n          ```\n          {\n                \"status\": \"Failure\",\n                \"message\": \"{errorMessage}\",   // e.g. \"The POS is currently in use\"\n                \"data\": {}\n          }\n          ```\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/order-ready-for-preparation\"\n        required: true\n      responses:\n        \"202\":\n          description: Upon successful receipt of this event, a `202` status code should be returned, indicating the request has been accepted. You should then later respond with the result of processing this request, via the [callback URL](#section/Async-Webhooks) endpoint.\n        \"400\":\n          description: \"Should the initial validation of the order fail, return a `400` status code. NOTE: In this instance we do not also expect a failure callback via the async callback URL.\"\n      summary: Order ready for preparation (async)\n      tags:\n        - Order Webhooks\n        - publicly-accessible\n  /order-ready-for-preparation-sync:\n    post:\n      description: |\n        This webhook will be invoked when we have determined that an order is ready for preparation. Upon receiving the request, you should perform any preparation-related activities, such as sending the order to the POS system / kitchen screen.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/order-ready-for-preparation\"\n        required: true\n      responses:\n        \"200\":\n          description: Respond with a 200 status code to indicate that you have received the notification.\n      summary: Order ready for preparation (sync)\n      tags:\n        - Order Webhooks\n        - publicly-accessible\n  /order-rejected:\n    post:\n      description: This webhook will be invoked whenever the order was rejected.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/order-rejected\"\n        required: true\n      responses:\n        \"200\":\n          description: Respond with a 200 status code to indicate that you have received the notification.\n      summary: Order rejected\n      tags:\n        - Order Acceptance Webhooks\n        - publicly-accessible\n  /order-requires-delivery-acceptance:\n    put:\n      description: This webhook will be invoked when we have determined that an order is required acceptance for delivery. Upon receiving the request, the order should be scheduled for pickup by a courier/driver. We expect an immediate `201` response from this webhook to denote that you have received the request.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/connectorder-list\"\n        required: true\n      responses:\n        \"201\":\n          description: In the event of successful handling of the request, a 201 status code should be returned, indicating acknowledgement of transmission success.\n        default:\n          content:\n            application/json:\n              schema:\n                properties:\n                  errors:\n                    items:\n                      properties:\n                        code:\n                          description: \u003cp\u003eEach code should be selected from the following list of valid reasons.\u003c/p\u003e\u003ctable\u003e\u003ctr\u003e\u003cth\u003ecode\u003c/th\u003e\u003cth\u003eexplanation\u003c/th\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e`outside_hours`\u003c/td\u003e\u003ctd\u003eDelivery partner is closed and not accepting requests.\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e`too_busy`\u003c/td\u003e\u003ctd\u003eDelivery partner does not have enough capacity to accept this request.\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e`too_far`\u003c/td\u003e\u003ctd\u003eThe customer is too far away from the restaurant, either by time or distance.\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e`not_supported`\u003c/td\u003e\u003ctd\u003eDelivery partner is currently unable to deliver to the customer's location.\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e`bad_address`\u003c/td\u003e\u003ctd\u003eThe order contains an address that could not be processed or understood.\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e`bad_request`\u003c/td\u003e\u003ctd\u003eThe order format is invalid or the order contains required data or information that cannot be processed.\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e`restaurant_not_configured`\u003c/td\u003e\u003ctd\u003eDelivery partner is not configured to accept requests for given restaurant.\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e`duplicate`\u003c/td\u003e\u003ctd\u003eThe request has already been processed before.\u003c/td\u003e\u003c/tr\u003e\u003ctr\u003e\u003ctd\u003e`other`\u003c/td\u003e\u003ctd\u003eAny validation failure or unexpected error not covered by the above codes.\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n                          enum:\n                            - outside_hours\n                            - too_busy\n                            - too_far\n                            - not_supported\n                            - bad_address\n                            - bad_request\n                            - restaurant_not_configured\n                            - duplicate\n                            - other\n                          type: string\n                        message:\n                          description: \u003cp\u003eThe accompanying message should, in each case, provide an explanation of the specific problem that was experienced.\u003c/p\u003e\u003cbr/\u003e\u003cp\u003ePlease note that the accompanying explanatory text are part of the code is only intended as an explanation of each reason code - and should not be returned to us as the message.\u003c/p\u003e\n                          type: string\n                      type: object\n                    type: array\n                type: object\n          description: In the case that the order cannot be accepted, an appropriate HTTP status code, such as 400 (Bad request) or 500 (Internal server error) should be returned.  In addition to the HTTP status code, a specific reason code and explanatory message should be provided within the response body\n      summary: Order requires delivery acceptance\n      tags:\n        - Order Delivery Webhooks\n        - publicly-accessible\n  /order-time-updated:\n    post:\n      description: Callback to notify recipients that there has been a change to the restaurant order times for a given day and service type\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/order-time-updated\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n      summary: Order time updated\n      tags:\n        - Restaurant Webhooks\n        - publicly-accessible\n  /orders:\n    post:\n      description: Create order\n      parameters:\n        - description: The api version to use. Version 2.0 is the only available version.\n          example: 2\n          in: header\n          name: x-je-api-version\n          required: false\n          schema:\n            default: 1\n            type: number\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/order-request-v2\"\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  OrderId:\n                    type: string\n                type: object\n          description: Created\n        \"400\":\n          description: Bad Request - Request is for deprecated API version or has failed validation in some way - see response body for details\n        \"409\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  OrderId:\n                    type: string\n                type: object\n          description: Conflict - you've already told us about an order with this `OrderReference`\n      summary: Create order\n      tags:\n        - Order API\n        - publicly-accessible\n  /orders/deliverystate/driverlocation:\n    put:\n      description: Current driver location (bulk upload)\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/bulk-delivery-details-list\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n      summary: Update current driver locations (bulk upload)\n      tags:\n        - Order Delivery API\n        - publicly-accessible\n  \"/orders/{orderId}/accept\":\n    put:\n      description: Call when an order has been accepted. An order can only be accepted if it hasn't previously been accepted, rejected, cancelled or ignored\n      parameters:\n        - in: path\n          name: orderId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/order-accept-request\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n        \"404\":\n          description: Order could not be found\n        \"409\":\n          description: Conflict. This order has either already been accepted, rejected or ignored by restaurant or cancelled by ops\n      summary: Accept order\n      tags:\n        - Order Acceptance API\n        - publicly-accessible\n  \"/orders/{orderId}/cancel\":\n    put:\n      description: Call when an order has been cancelled by Ops. Cancelling an order overrides any previous accept/reject calls. This should not be used for restaurant rejection but only from Ops involvement\n      parameters:\n        - in: path\n          name: orderId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/order-cancel-request\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n        \"404\":\n          description: Order could not be found\n        \"409\":\n          description: Conflict. This order has already been cancelled\n      summary: Cancel order\n      tags:\n        - Order Acceptance API\n        - publicly-accessible\n  \"/orders/{orderId}/complete\":\n    post:\n      description: Call when an order is complete. An order can only be marked as complete if it hasn't already been marked as cancelled or complete.\n      parameters:\n        - description: The ID of the order to mark as complete\n          in: path\n          name: orderId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: No content - status updated successfully\n        \"404\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Order could not be found\n                faultId: b6a1d658-dda4-41b6-a9a5-dbfb7ba7b2aa\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Not found - order could not be found\n        \"409\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Order cannot be marked as complete because it is already marked as cancelled\n                faultId: 9c63827b-6fad-46bf-9e9a-9aafec941824\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Conflict - this order has already been marked as cancelled or complete\n        \"500\":\n          $ref: \"#/components/responses/500ErrorResponse\"\n      summary: Complete order\n      tags:\n        - Order Acceptance API\n        - publicly-accessible\n    x-status: Draft\n  \"/orders/{orderId}/deliverystate/atdeliveryaddress\":\n    put:\n      description: \u003cp\u003eThe _at delivery address_ callback should be sent when the driver thinks that they have arrived at the specified delivery address.\u003c/p\u003e\u003cp\u003eNB\u0026semi; This callback should be distinct from the delivered callback, as Just Eat use this callback to understand how much time is spent locating the customer's address.\u003c/p\u003e\n      parameters:\n        - description: Just Eat order identifier\n          in: path\n          name: orderId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/delivery-details\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n      summary: Update order with driver at delivery address details\n      tags:\n        - Order Delivery API\n        - publicly-accessible\n  \"/orders/{orderId}/deliverystate/atrestaurant\":\n    put:\n      description: The _at restaurant_ callback should be sent when the driver arrives at the restaurant and is ready to collect the order.\n      parameters:\n        - description: Just Eat order identifier\n          in: path\n          name: orderId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/delivery-driver-details-with-eta\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n      summary: Update order with driver at restaurant details\n      tags:\n        - Order Delivery API\n        - publicly-accessible\n  \"/orders/{orderId}/deliverystate/atrestauranteta\":\n    put:\n      description: \u003cp\u003eIn the UK, this endpoint updates the estimated arrival time at the restaurant. This value can be overridden from other endpoints like \u003ca href=\"https://uk.api.just-eat.io/docs#tag/Order-Delivery-API/paths/~1orders~1{orderId}~1deliverystate~1driverlocation/put\"\u003eDriver Locations\u003c/a\u003e \u003c/p\u003e \u003cp\u003e This endpoint should be used to set initial at restaurant ETAs prior to driver assignment where available. The earlier a delivery partner is able to provide an estimate of when the driver will arrive at the restaurant the more likely it is that driver arrival and order preparation will be aligned. \u003c/p\u003e \u003cp\u003e In other tenants (Not UK):Note that if set for a given order, this Eta will NOT be overridden by any other at restaurant ETAs provided in `DriverAssigned` or `DriverLocation` requests\u003c/p\u003e \u003cp\u003eThis value is significant since it informs when a restaurant is instructed to start preparing food. When the time remaining between current time and the estimated time of arrival becomes less than the restaurant's configured preparation time, food preparation is initiated\u003c/p\u003e\n      parameters:\n        - description: Just Eat order identifier\n          in: path\n          name: orderId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/eta-estimate\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n      summary: Update the driver's estimated time to arrive at the Restaurant\n      tags:\n        - Order Delivery API\n        - publicly-accessible\n  \"/orders/{orderId}/deliverystate/delivered\":\n    put:\n      description: The _delivered_ callback should be sent when the driver has handed the food to the customer and completed the order.\n      parameters:\n        - description: Just Eat order identifier\n          in: path\n          name: orderId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/delivery-details\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n      summary: Update order with delivered details\n      tags:\n        - Order Delivery API\n        - publicly-accessible\n  \"/orders/{orderId}/deliverystate/driverassigned\":\n    put:\n      description: The _driver assigned_ callback should be sent when a driver is assigned to the order. It should communicate important details about the driver - and also an estimated time for the driver to arrive at the restaurant and delivery address.\n      parameters:\n        - description: Just Eat order identifier\n          in: path\n          name: orderId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/delivery-driver-assigned-details\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n      summary: Update order with driver assigned details\n      tags:\n        - Order Delivery API\n        - publicly-accessible\n  \"/orders/{orderId}/deliverystate/driverlocation\":\n    put:\n      description: \u003cp\u003eJust Eat requires all delivery partners to send regular driver location callbacks, that record the GPS location of the drivers assigned to each order\u003c/p\u003e\u003cp\u003ePartners should aim to supply this callback approximately every 10 seconds.\u003c/p\u003e\u003cp\u003ePlease provide an up-to-date ETA for when the driver will reach the restaurant in this request - this value is significant since it informs when a restaurant is instructed to start preparing food - when the time remaining between current time and the estimated time of arrival becomes less than the restaurant's configured preparation time, food preparation is initiated\u003c/p\u003e\u003cp\u003eNote that at restaurant Eta provided in this request will NOT override any ETA set in the Driver At Restaurant Eta request\u003c/p\u003e\n      parameters:\n        - description: Just Eat order identifier\n          in: path\n          name: orderId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/delivery-driver-location\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n      summary: Update the driver's current location\n      tags:\n        - Order Delivery API\n        - publicly-accessible\n  \"/orders/{orderId}/deliverystate/driverunassigned\":\n    put:\n      description: The _driver unassigned_ callback should be sent when a driver is unassigned from the order. It may details about the reason for cancelling the assignment, the driver details, and any newer at restaurant and customer estimations.\n      parameters:\n        - description: Just Eat order identifier\n          in: path\n          name: orderId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/delivery-driver-unassigned-details\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              example:\n                partnerId:\n                  - Partner id was not found or could not be parsed\n              schema:\n                $ref: \"#/components/schemas/extensibleObject\"\n          description: Bad Request.\n      summary: Update order with driver unassigned details\n      tags:\n        - Order Delivery API\n        - publicly-accessible\n  \"/orders/{orderId}/deliverystate/onitsway\":\n    put:\n      description: The _on its way_ callback should be sent when the driver departs the restaurant with the customer's order. It should contain an ETA that records when the driver expects to arrive at the customer's address.\n      parameters:\n        - in: path\n          name: orderId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/on-its-way-details\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n      summary: Update order with driver on its way details\n      tags:\n        - Order Delivery API\n        - publicly-accessible\n  \"/orders/{orderId}/duedate\":\n    put:\n      description: |\n        Use this to update the estimated time of arrival for an order (i.e. when you expect the customer to receive the food). NOTE: An initial estimate is given [upon acceptance](#/paths/~1orders~1{orderId}~1accept/put). This endpoint can be used to update that estimate.\n      parameters:\n        - in: path\n          name: orderId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/order-due-date-request\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          description: The due date is missing, or out of range (either in the past, or \u003e 7 days in the future).\n        \"404\":\n          description: The order could not be found.\n      summary: Update order ETA\n      tags:\n        - Order Acceptance API\n        - publicly-accessible\n  \"/orders/{orderId}/ignore\":\n    put:\n      description: Call when an order has been ignored by restaurant. An order can only be ignored if it hasn't previously been accepted, rejected, cancelled or ignored\n      parameters:\n        - in: path\n          name: orderId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n        \"404\":\n          description: Order could not be found\n        \"409\":\n          description: Conflict. This order has either already been accepted, rejected or ignored by restaurant or cancelled by ops\n      summary: Ignore order\n      tags:\n        - Order Acceptance API\n        - publicly-accessible\n  \"/orders/{orderId}/readyforcollection\":\n    post:\n      description: Call when a collection order is ready to be collected by the customer. An order can only be marked as ready for collection if it is a collection order in the accepted state.\n      parameters:\n        - description: The ID of the order to mark as ready for collection\n          in: path\n          name: orderId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: No content - status updated successfully\n        \"400\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Order cannot be marked as ready for collection because it is not a collection order\n                faultId: aa5d282c-498e-47dd-acca-d4bb811a8f9d\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Bad request - order cannot be marked as ready for collection because it is not a collection order\n        \"404\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Order could not be found\n                faultId: 15c27f5b-5121-4c1f-bea3-34378dff2a79\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Not found - order could not be found\n        \"409\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Order cannot be marked as ready for collection because it is already marked as complete\n                faultId: 9c63827b-6fad-46bf-9e9a-9aafec941824\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Conflict - this order is not in the accepted state\n        \"500\":\n          $ref: \"#/components/responses/500ErrorResponse\"\n      summary: Mark order as ready for collection\n      tags:\n        - Order Acceptance API\n        - publicly-accessible\n    x-status: Draft\n  \"/orders/{orderId}/reject\":\n    put:\n      description: Call when an order has been rejected. An order can only be rejected if it hasn't previously been accepted, rejected, cancelled or ignored\n      parameters:\n        - in: path\n          name: orderId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/order-reject-request\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n        \"404\":\n          description: Order could not be found\n        \"409\":\n          description: Conflict. This order has either already been accepted, rejected or ignored by restaurant or cancelled by ops\n      summary: Reject order\n      tags:\n        - Order Acceptance API\n        - publicly-accessible\n  \"/orders/{tenant}/{orderId}/consumerqueries/lateorder/restaurantresponse\":\n    post:\n      description: If a customer has requested an update on the status of a late order, a response can be given by calling this endpoint.\n      parameters:\n        - description: Request tenant.\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: Id for the order.\n          in: path\n          name: orderId\n          required: true\n          schema:\n            type: string\n        - description: Containing a partner issued API key e.g. `JE-API-KEY ABCDE123456789`\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            example:\n              additionalDeliveryTimeToAddMinutes: 5\n              lateOrderStatus: OnItsWay\n            schema:\n              $ref: \"#/components/schemas/LateOrderRestaurantResponse\"\n        description: An object for updating the status of a late order query with the amount of time to add to the delivery estimate in minutes (optional)\n        required: true\n      responses:\n        \"202\":\n          description: Accepted\n        \"400\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Justification notes are required for this query. Query Type:type Tenant:tenant QueryId:queryId OrderId:orderId\n                    errorCode: BadRequest\n                faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Bad Request. Returned if the request is invalid i.e. missing a required parameters\n        \"401\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Unauthorized.\n                    errorCode: Unauthorized\n                faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Unauthorized. Consumer is not authorized to modify the resource\n        \"404\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Order 1234 was not found\n                    errorCode: NotFound\n                faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Not Found. Order query or Order not found\n        \"409\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Query 1234 cannot be responded to at this time\n                    errorCode: Conflict\n                faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Conflict. Query not in state to accept response\n        \"500\":\n          $ref: \"#/components/responses/500ErrorResponse\"\n      summary: Response to Late Order Update Request\n      tags:\n        - ConsumerQueries\n        - publicly-accessible\n  \"/orders/{tenant}/{orderId}/consumerqueries/lateordercompensation/restaurantresponse\":\n    post:\n      description: If a customer has requested compensation for a late order, a restaurant response is given by calling this endpoint.\n      parameters:\n        - description: Request tenant.\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: Id for the order.\n          in: path\n          name: orderId\n          required: true\n          schema:\n            type: string\n        - description: Containing a partner issued API key e.g. `JE-API-KEY ABCDE123456789`\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LateOrderCompensationRestaurantResolution\"\n        description: The restaurant response to a late order compensation request. Indicates either a monetary amount (when the compensation is accepted); or a rejection reason (when compensation is rejected).\n        required: true\n      responses:\n        \"202\":\n          description: Accepted\n        \"400\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: A reason is required when compensation is rejected.\n                    errorCode: BadRequest\n                faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Bad Request. Returned if the request is invalid - e.g. contains missing or invalid parameters.\n        \"401\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Unauthorized.\n                    errorCode: Unauthorized\n                faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Unauthorized. Consumer is not authorized to modify the resource\n        \"404\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Order 1234 was not found\n                    errorCode: NotFound\n                faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Not Found. Order query or Order not found\n        \"409\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Query 1234 cannot be responded to at this time\n                    errorCode: Conflict\n                faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Conflict. Query not in state to accept response\n        \"500\":\n          $ref: \"#/components/responses/500ErrorResponse\"\n      summary: Update late order compensation request with Restaurant response\n      tags:\n        - ConsumerQueries\n        - publicly-accessible\n      x-status: Unstable\n  \"/orders/{tenant}/{orderId}/restaurantqueries/compensation\":\n    post:\n      description: When an order is cancelled the restaurant might be eligible for compensation, this endpoint allows a request for compensation to be created.\n      parameters:\n        - description: Request tenant.\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: Id for the order.\n          in: path\n          name: orderId\n          required: true\n          schema:\n            type: string\n        - description: Containing a partner issued API key e.g. `JE-API-KEY ABCDE123456789`\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateRestaurantCompensationQuery\"\n        description: An object for providing the reason that the compensation is being created\n        required: true\n      responses:\n        \"201\":\n          description: Created\n        \"400\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: The value provided in the field ReasonCode is invalid\n                    errorCode: InvalidReasonCode\n                  - description: Comments field is too long, max 1000\n                    errorCode: CommentsTooLong\n                faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Bad Request - returned if providing invalid data such as an unacceptable reason code\n        \"401\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Invalid credentials\n                    errorCode: Unauthorized\n                faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Unauthorized - consumer has not provided the necessary credentials\n        \"403\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: The credentials provided doesn't have permissions to perform the request\n                    errorCode: Forbidden\n                faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Forbidden - credentials provided by consumer do not allow access to this resource\n        \"404\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Resource not found\n                    errorCode: NotFound\n                faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Resource not found\n        \"409\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: This order is not eligible for compensation\n                    errorCode: OrderNotEligible\n                  - description: A compensation request has already been requested for this order\n                    errorCode: CompensationAlreadyExists\n                faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Conflict - returned if tried to claim compensation for an order that is not eligible\n        \"500\":\n          $ref: \"#/components/responses/500ErrorResponse\"\n      summary: Create Compensation requests\n      tags:\n        - RestaurantQueries\n        - publicly-accessible\n  /redelivery-requested:\n    put:\n      description: This webhook will be invoked whenever the customer responds to the attempted delivery notification.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/attempted-delivery-response-received\"\n        required: true\n      responses:\n        \"200\":\n          description: Respond with a 200 status code to indicate that you have received the notification.\n      summary: Customer Requested Redelivery\n      tags:\n        - Order Acceptance Webhooks\n        - publicly-accessible\n  /restaurant-offline-status:\n    put:\n      description: Callback to notify that a restaurant has been taken offline through an active Restaurant Event or there's been a change in whether the restaurant can override a previous offline status.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RestaurantOfflineStatus\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n      summary: Restaurant Offline Status\n      tags:\n        - Restaurant Events Webhooks\n        - publicly-accessible\n  /restaurant-online-status:\n    put:\n      description: Callback to notify that a restaurant is now able to come back online as there are no longer any active offline Restaurant Events\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RestaurantOfflineStatus\"\n        required: true\n      responses:\n        \"200\":\n          description: OK\n      summary: Restaurant Online Status\n      tags:\n        - Restaurant Events Webhooks\n        - publicly-accessible\n  /restaurants/bylatlong:\n    get:\n      description: Provides details of all restaurants that deliver to the specified location\n      operationId: SearchByLocation\n      parameters:\n        - description: OAuth2 token issued for logged in consumer or API key issued to partner\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n        - description: A valid country code, e.g. \"uk\". Filter search results to only include restaurants for the specified country. Required when using OAuth for authentication.\n          in: header\n          name: Accept-Tenant\n          required: false\n          schema:\n            type: string\n        - description: Filter search results to only include restaurants that deliver to the specified location\n          in: query\n          name: latitude\n          required: true\n          schema:\n            type: number\n          x-position: 1\n        - description: Filter search results to only include restaurants that deliver to the specified location\n          in: query\n          name: longitude\n          required: true\n          schema:\n            type: number\n          x-position: 2\n        - description: Filter search results to only include restaurants that offer the specified cuisine\n          in: query\n          name: cuisine\n          required: false\n          schema:\n            type: string\n          x-position: 3\n        - description: Filter search results to only include restaurants that have a name that matches the specified value\n          in: query\n          name: restaurantName\n          required: false\n          schema:\n            type: string\n          x-position: 4\n        - description: Filter search results to only include restaurants of the specified brand\n          in: query\n          name: brandName\n          required: false\n          schema:\n            type: string\n          x-position: 5\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/SearchResponse\"\n                  - $ref: \"#/components/schemas/ExternalSearchResponse\"\n                  - $ref: \"#/components/schemas/SearchWebResponse\"\n          description: OK\n          headers:\n            cache-control:\n              description: Information about how the response can be cached.\n              schema:\n                type: string\n        \"400\":\n          content:\n            application/json:\n              example:\n                Message: The request is invalid.\n                ModelState:\n                  Longitude:\n                    - The value 'nan' is not valid for Longitude.\n              schema:\n                type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              example:\n                message: No API key found in request\n              schema:\n                type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              example:\n                ExceptionMessage: Object reference not set to an instance of an object.\n                ExceptionType: System.NullReferenceException\n                Message: An error has occurred.\n                StackTrace: \"   at JE.SearchOrchestrator.Controllers.Filters.CacheControlFilter.OnActionExecuted(HttpActionExecutedContext actionExecutedContext) in \\\\\\\\Mac\\\\Home\\\\Documents\\\\GitHub\\\\SearchOrchestrator\\\\src\\\\JE.SearchOrchestrator\\\\Controllers\\\\Filters\\\\CacheControlFilter.cs:line 18\\r\n\n                  \\   at System.Web.Http.Filters.ActionFilterAttribute.OnActionExecutedAsync(HttpActionExecutedContext actionExecutedContext, CancellationToken cancellationToken)\\r\n\n                  --- End of stack\"\n              schema:\n                type: object\n          description: Server Error\n      summary: Get restaurants by location\n      tags:\n        - Restaurants\n        - publicly-accessible\n      x-status: Deprecated\n  \"/restaurants/bypostcode/{postcode}\":\n    get:\n      description: Provides details of restaurants that deliver to the specified postcode\n      operationId: SearchByPostcode\n      parameters:\n        - description: OAuth2 token issued for logged in consumer or API key issued to partner\n          in: header\n          name: Authorization\n          required: false\n          schema:\n            type: string\n        - description: A valid country code, e.g. \"uk\". Filter search results to only include restaurants for the specified country. Required when using OAuth for authentication.\n          in: header\n          name: Accept-Tenant\n          required: false\n          schema:\n            type: string\n        - description: Filter search results to only include restaurants that deliver to the specified postcode\n          in: path\n          name: postcode\n          required: true\n          schema:\n            type: string\n        - description: Filter search results to only include restaurants that offer the specified cuisine\n          in: query\n          name: cuisine\n          required: false\n          schema:\n            type: string\n          x-position: 1\n        - description: Filter search results to only include restaurants that have a name that matches the specified value\n          in: query\n          name: restaurantName\n          required: false\n          schema:\n            type: string\n          x-position: 2\n        - description: Filter search results to only include restaurants of the specified brand\n          in: query\n          name: brandName\n          required: false\n          schema:\n            type: string\n          x-position: 3\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/SearchResponse\"\n                  - $ref: \"#/components/schemas/ExternalSearchResponse\"\n                  - $ref: \"#/components/schemas/SearchWebResponse\"\n          description: OK\n          headers:\n            cache-control:\n              description: Information about how the response can be cached.\n              schema:\n                type: string\n        \"400\":\n          content:\n            application/json:\n              example:\n                Message: The request is invalid.\n                ModelState:\n                  Postcode:\n                    - Invalid Postcode.\n              schema:\n                type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              example:\n                message: No API key found in request\n              schema:\n                type: object\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              example:\n                ExceptionMessage: Object reference not set to an instance of an object.\n                ExceptionType: System.NullReferenceException\n                Message: An error has occurred.\n                StackTrace: \"   at JE.SearchOrchestrator.Controllers.Filters.CacheControlFilter.OnActionExecuted(HttpActionExecutedContext actionExecutedContext) in \\\\\\\\Mac\\\\Home\\\\Documents\\\\GitHub\\\\SearchOrchestrator\\\\src\\\\JE.SearchOrchestrator\\\\Controllers\\\\Filters\\\\CacheControlFilter.cs:line 18\\r\n\n                  \\   at System.Web.Http.Filters.ActionFilterAttribute.OnActionExecutedAsync(HttpActionExecutedContext actionExecutedContext, CancellationToken cancellationToken)\\r\n\n                  --- End of stack\"\n              schema:\n                type: object\n          description: Server Error\n      summary: Get restaurants by postcode\n      tags:\n        - Restaurants\n        - publicly-accessible\n      x-status: Deprecated\n  /restaurants/driver/eta:\n    put:\n      description: Set the average amount of time it will take a driver to collect a new order from a restaurant.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/RestaurantETAs\"\n        required: true\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IgnoredRestaurantIds\"\n          description: Update will take effect shortly\n        \"400\":\n          description: There was something invalid in your request - check response body for details\n      summary: Set ETA for pickup\n      tags:\n        - Restaurants\n        - publicly-accessible\n  \"/restaurants/{tenant}/{restaurantId}/catalogue\":\n    get:\n      description: Get details of the restaurant's product catalogue\n      parameters:\n        - description: Request tenant.\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: The restaurant Id.\n          in: path\n          name: restaurantId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MenuBase\"\n          description: Request succeeded.\n          headers:\n            cache-control:\n              description: Information about how the response can be cached.\n              schema:\n                type: string\n        \"404\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Resource with identifier restaurantId:95224345321 for tenant:uk not found.\n                faultId: b39ae4c1-142f-4308-838d-1f01815e1cf1\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: No product catalogue found for given tenant and restaurantId.\n        \"500\":\n          $ref: \"#/components/responses/500ErrorResponse\"\n      summary: Get product catalogue\n      tags:\n        - Restaurants\n        - publicly-accessible\n      x-status: Stable\n  \"/restaurants/{tenant}/{restaurantId}/catalogue/availabilities\":\n    get:\n      description: Get all availabilities on the restaurant's menu\n      parameters:\n        - description: Request tenant.\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: The restaurant Id.\n          in: path\n          name: restaurantId\n          required: true\n          schema:\n            type: string\n        - description: The maximum number of availabilities to fetch.\n          in: query\n          name: limit\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Value representing a cursor - position to use when retrieving the next page of data. If provided, the value of this parameter must be URL encoded.\n          in: query\n          name: after\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PagedAvailabilitiesResponse\"\n          description: Request succeeded.\n          headers:\n            cache-control:\n              description: Information about how the response can be cached.\n              schema:\n                type: string\n        \"400\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Invalid value 0 for parameter limit.\n                faultId: e21a9947-4352-449f-a4dc-5e69d57b0c5f\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Bad request.\n        \"404\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Resource with identifier restaurantId:95224345321 for tenant:uk not found.\n                faultId: b39ae4c1-142f-4308-838d-1f01815e1cf1\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: No availabilities found for given tenant and restaurantId.\n        \"500\":\n          $ref: \"#/components/responses/500ErrorResponse\"\n      summary: Get all availabilities\n      tags:\n        - Restaurants\n        - publicly-accessible\n      x-status: Stable\n  \"/restaurants/{tenant}/{restaurantId}/catalogue/categories\":\n    get:\n      description: Get all categories on the restaurant's menu\n      parameters:\n        - description: Request tenant.\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: The restaurant Id.\n          in: path\n          name: restaurantId\n          required: true\n          schema:\n            type: string\n        - description: The maximum number of categories to fetch.\n          in: query\n          name: limit\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Value representing a cursor - position to use when retrieving the next page of data. If provided, the value of this parameter must be URL encoded.\n          in: query\n          name: after\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PagedCategoriesResponse\"\n          description: Request succeeded.\n          headers:\n            cache-control:\n              description: Information about how the response can be cached.\n              schema:\n                type: string\n        \"400\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Invalid value 0 for parameter limit.\n                faultId: e21a9947-4352-449f-a4dc-5e69d57b0c5f\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Bad request.\n        \"404\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Resource with identifier restaurantId:95224345321 for tenant:uk not found.\n                faultId: b39ae4c1-142f-4308-838d-1f01815e1cf1\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: No availabilities found for given tenant and restaurantId.\n        \"500\":\n          $ref: \"#/components/responses/500ErrorResponse\"\n      summary: Get all categories\n      tags:\n        - Restaurants\n        - publicly-accessible\n      x-status: Stable\n  \"/restaurants/{tenant}/{restaurantId}/catalogue/categories/{categoryId}/items\":\n    get:\n      description: Get all item IDs which are assigned to the specified category\n      parameters:\n        - description: Request tenant.\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: The restaurant ID.\n          in: path\n          name: restaurantId\n          required: true\n          schema:\n            type: string\n        - description: The category ID.\n          in: path\n          name: categoryId\n          required: true\n          schema:\n            type: string\n        - description: The maximum number of item IDs to fetch.\n          in: query\n          name: limit\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Value representing a cursor - position to use when retrieving the next page of data. If provided, the value of this parameter must be URL encoded.\n          in: query\n          name: after\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PagedCategoryItemsResponse\"\n          description: Request succeeded.\n          headers:\n            cache-control:\n              description: Information about how the response can be cached.\n              schema:\n                type: string\n        \"400\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Invalid value 0 for parameter limit.\n                faultId: e21a9947-4352-449f-a4dc-5e69d57b0c5f\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Bad request.\n        \"404\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Resource with identifier restaurantId:95224345321 for tenant:uk not found.\n                faultId: b39ae4c1-142f-4308-838d-1f01815e1cf1\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: No availabilities found for given tenant and restaurantId.\n        \"500\":\n          $ref: \"#/components/responses/500ErrorResponse\"\n      summary: Get all category item IDs\n      tags:\n        - Restaurants\n        - publicly-accessible\n      x-status: Stable\n  \"/restaurants/{tenant}/{restaurantId}/catalogue/items\":\n    get:\n      description: Get all menu items on the restaurant's menu\n      parameters:\n        - description: Request tenant.\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: The restaurant Id.\n          in: path\n          name: restaurantId\n          required: true\n          schema:\n            type: string\n        - description: The maximum number of menu items to fetch.\n          in: query\n          name: limit\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Value representing a cursor - position to use when retrieving the next page of data. If provided, the value of this parameter must be URL encoded.\n          in: query\n          name: after\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PagedMenuItemsResponse\"\n          description: Request succeeded.\n          headers:\n            cache-control:\n              description: Information about how the response can be cached.\n              schema:\n                type: string\n        \"400\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Invalid value 0 for parameter limit.\n                faultId: e21a9947-4352-449f-a4dc-5e69d57b0c5f\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Bad request.\n        \"404\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Resource with identifier restaurantId:95224345321 for tenant:uk not found.\n                faultId: b39ae4c1-142f-4308-838d-1f01815e1cf1\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: No menu items found for given tenant and restaurantId.\n        \"500\":\n          $ref: \"#/components/responses/500ErrorResponse\"\n      summary: Get all menu items\n      tags:\n        - Restaurants\n        - publicly-accessible\n      x-status: Stable\n  \"/restaurants/{tenant}/{restaurantId}/catalogue/items/{itemId}/dealgroups\":\n    get:\n      description: Get all deal groups for the menu item with the provided ID\n      parameters:\n        - description: Request tenant\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: The restaurant ID\n          in: path\n          name: restaurantId\n          required: true\n          schema:\n            type: string\n        - description: The menu item ID\n          in: path\n          name: itemId\n          required: true\n          schema:\n            type: string\n        - description: The maximum number of menu items to fetch.\n          in: query\n          name: limit\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Value representing a cursor - position to use when retrieving the next page of data. If provided, the value of this parameter must be URL encoded.\n          in: query\n          name: after\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PagedMenuDealGroupsResponse\"\n          description: Request succeeded.\n          headers:\n            cache-control:\n              description: Information about how the response can be cached.\n              schema:\n                type: string\n        \"400\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Invalid value 0 for parameter limit.\n                faultId: e21a9947-4352-449f-a4dc-5e69d57b0c5f\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Bad request.\n        \"404\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Resource with identifier restaurantId:95224345321 for tenant:uk and itemId:534685 not found.\n                faultId: b39ae4c1-142f-4308-838d-1f01815e1cf1\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: No deal groups found for given `tenant`, `restaurantId` and `itemId`.\n        \"500\":\n          $ref: \"#/components/responses/500ErrorResponse\"\n      summary: Get all menu item deal groups\n      tags:\n        - Restaurants\n        - publicly-accessible\n      x-status: Stable\n  \"/restaurants/{tenant}/{restaurantId}/catalogue/items/{itemId}/dealgroups/{dealGroupId}/dealitemvariations\":\n    get:\n      description: Get all deal item variations for the deal group with the specified ID, in the menu item with the specified ID\n      parameters:\n        - description: Request tenant\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: The restaurant ID\n          in: path\n          name: restaurantId\n          required: true\n          schema:\n            type: string\n        - description: The menu item ID\n          in: path\n          name: itemId\n          required: true\n          schema:\n            type: string\n        - description: The menu item ID\n          in: path\n          name: dealGroupId\n          required: true\n          schema:\n            type: string\n        - description: The maximum number of menu items to fetch.\n          in: query\n          name: limit\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Value representing a cursor - position to use when retrieving the next page of data. If provided, the value of this parameter must be URL encoded.\n          in: query\n          name: after\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PagedDealItemVariationResponse\"\n          description: Request succeeded.\n          headers:\n            cache-control:\n              description: Information about how the response can be cached.\n              schema:\n                type: string\n        \"400\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Invalid value 0 for parameter limit.\n                faultId: e21a9947-4352-449f-a4dc-5e69d57b0c5f\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Bad request.\n        \"404\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Resource with identifier restaurantId:95224345321 for tenant:uk for itemId:534685 and dealGroupId:463847 not found.\n                faultId: b39ae4c1-142f-4308-838d-1f01815e1cf1\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: No deal item variations found for given `tenant`, `restaurantId`, `itemId` and `dealGroupId`.\n        \"500\":\n          $ref: \"#/components/responses/500ErrorResponse\"\n      summary: Get all deal item variations for a deal group\n      tags:\n        - Restaurants\n        - publicly-accessible\n      x-status: Stable\n  \"/restaurants/{tenant}/{restaurantId}/catalogue/items/{itemId}/modifiergroups\":\n    get:\n      description: Get all modifier groups for the menu item with the provided ID\n      parameters:\n        - description: Request tenant\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: The restaurant ID\n          in: path\n          name: restaurantId\n          required: true\n          schema:\n            type: string\n        - description: The menu item ID\n          in: path\n          name: itemId\n          required: true\n          schema:\n            type: string\n        - description: The maximum number of menu items to fetch.\n          in: query\n          name: limit\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Value representing a cursor - position to use when retrieving the next page of data. If provided, the value of this parameter must be URL encoded.\n          in: query\n          name: after\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PagedMenuModifierGroupsResponse\"\n          description: Request succeeded.\n          headers:\n            cache-control:\n              description: Information about how the response can be cached.\n              schema:\n                type: string\n        \"400\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Invalid value 0 for parameter limit.\n                faultId: e21a9947-4352-449f-a4dc-5e69d57b0c5f\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Bad request.\n        \"404\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Resource with identifier restaurantId:95224345321 for tenant:uk and itemId:534685 not found.\n                faultId: b39ae4c1-142f-4308-838d-1f01815e1cf1\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: No modifier groups found for given `tenant`, `restaurantId` and `itemId`.\n        \"500\":\n          $ref: \"#/components/responses/500ErrorResponse\"\n      summary: Get all menu item modifier groups\n      tags:\n        - Restaurants\n        - publicly-accessible\n      x-status: Stable\n  \"/restaurants/{tenant}/{restaurantId}/catalogue/items/{itemId}/variations\":\n    get:\n      description: Get all variations for the menu item with the provided ID\n      parameters:\n        - description: Request tenant\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: The restaurant ID\n          in: path\n          name: restaurantId\n          required: true\n          schema:\n            type: string\n        - description: The menu item ID\n          in: path\n          name: itemId\n          required: true\n          schema:\n            type: string\n        - description: The maximum number of menu items to fetch.\n          in: query\n          name: limit\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: Value representing a cursor - position to use when retrieving the next page of data. If provided, the value of this parameter must be URL encoded.\n          in: query\n          name: after\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PagedVariationsResponse\"\n          description: Request succeeded.\n          headers:\n            cache-control:\n              description: Information about how the response can be cached.\n              schema:\n                type: string\n        \"400\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Invalid value 0 for parameter limit.\n                faultId: e21a9947-4352-449f-a4dc-5e69d57b0c5f\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Bad request.\n        \"404\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Resource with identifier restaurantId:95224345321 for tenant:uk and itemId:534685 not found.\n                faultId: b39ae4c1-142f-4308-838d-1f01815e1cf1\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: No variations found for given `tenant`, `restaurantId` and `itemId`.\n        \"500\":\n          $ref: \"#/components/responses/500ErrorResponse\"\n      summary: Get all menu item variations\n      tags:\n        - Restaurants\n        - publicly-accessible\n      x-status: Stable\n  \"/restaurants/{tenant}/{restaurantId}/customerclaims\":\n    get:\n      description: Provides claims for a given restaurant with optional filtering\n      parameters:\n        - description: Two letter code indicating the tenant\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: Just Eat restaurant identifier\n          in: path\n          name: restaurantId\n          required: true\n          schema:\n            type: string\n        - description: Start date limiter\n          in: query\n          name: fromDate\n          required: false\n          schema:\n            format: date-time\n            nullable: true\n            type: string\n        - description: End date limiter\n          in: query\n          name: toDate\n          required: false\n          schema:\n            format: date-time\n            nullable: true\n            type: string\n        - description: Pagination limit\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 20\n            format: int32\n            maximum: 100\n            minimum: 1\n            nullable: true\n            type: integer\n        - description: Pagination offset\n          in: query\n          name: offset\n          required: false\n          schema:\n            format: int32\n            minimum: 0\n            nullable: true\n            type: integer\n        - description: Indicates what type of response client understands and is also used for content type negotiation (if version is specified), otherwise tells the server to return the latest version\n          example: application/json;v=1\n          in: header\n          name: Accept\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClaimsResponse\"\n          description: Request succeeded\n          headers:\n            Content-Type:\n              description: Content type of document including version\n              example: application/json;v=1\n              schema:\n                type: string\n            cache-control:\n              description: Information about how the response can be cached\n              schema:\n                type: string\n        \"400\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Bad Request. End date limiter should have date-time format.\n                faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Bad Request. Returned if the request is invalid e.g. has incorrect date limiter format\n        \"401\":\n          $ref: \"#/components/responses/401UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/403ForbiddenResponse\"\n        \"500\":\n          $ref: \"#/components/responses/500ErrorResponse\"\n      security:\n        - Bearer: []\n      summary: Get claims\n      tags:\n        - Restaurant Claims\n        - publicly-accessible\n      x-status: Draft\n  \"/restaurants/{tenant}/{restaurantId}/customerclaims/{id}\":\n    get:\n      description: Get information about a order claim\n      parameters:\n        - description: Two letter code indicating the tenant\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: Just Eat restaurant identifier\n          in: path\n          name: restaurantId\n          required: true\n          schema:\n            type: string\n        - description: Claim identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Indicates what type of response client understands and is also used for content type negotiation (if version is specified), otherwise tells the server to return the latest version\n          example: application/json;v=1\n          in: header\n          name: Accept\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OrderClaim\"\n          description: Request succeeded\n          headers:\n            Content-Type:\n              description: Content type of document including version\n              example: application/json;v=1\n              schema:\n                type: string\n            cache-control:\n              description: Information about how the response can be cached.\n              schema:\n                type: string\n        \"401\":\n          $ref: \"#/components/responses/401UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/403ForbiddenResponse\"\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Not Found. Claim could not be found\n        \"500\":\n          $ref: \"#/components/responses/500ErrorResponse\"\n      security:\n        - Bearer: []\n      summary: Get order claim\n      tags:\n        - Restaurant Claims\n        - publicly-accessible\n      x-status: Draft\n  \"/restaurants/{tenant}/{restaurantId}/customerclaims/{id}/restaurantresponse\":\n    post:\n      description: Submit a restaurant response for the claim, where the restaurant can tell us if they accept or reject the claim\n      parameters:\n        - description: Two letter code indicating the tenant\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: Just Eat restaurant identifier\n          in: path\n          name: restaurantId\n          required: true\n          schema:\n            type: string\n        - description: Claim identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Indicates the representation of the request body the client is sending (including version)\n          example: application/json;v=1\n          in: header\n          name: Content-Type\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OrderClaimRestaurantResponse\"\n        description: Payload containing the response of the restaurant on the order claim\n      responses:\n        \"201\":\n          description: Request succeeded. Your response to the claim has been submitted\n        \"400\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Bad Request. Incorrect decision\n                    errorCode: IncorrectDecision\n                  - description: Bad Request. Missing decision\n                    errorCode: MissingDecision\n                  - description: Bad Request. The request you are sending is missing some items for the claim you are trying to resolve\n                    errorCode: MissingItems\n                faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Bad Request. Returned if the request is invalid e.g. decision value is incorrect\n        \"401\":\n          $ref: \"#/components/responses/401UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/403ForbiddenResponse\"\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Not Found. Claim could not be found\n        \"409\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: The claim you are attempting to resolve is has been resolved\n                    errorCode: AlreadyResolved\n                faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Conflict. The claim you are attempting to resolve is has been resolved\n        \"422\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: The claim you are attempting to update does not contain the items from the request\n                    errorCode: WrongItems\n                faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Unprocessable. The claim you are attempting to update does not contain the items from the request\n        \"500\":\n          $ref: \"#/components/responses/500ErrorResponse\"\n      security:\n        - Bearer: []\n      summary: Submit a restaurant response for the claim\n      tags:\n        - Restaurant Claims\n        - publicly-accessible\n      x-status: Draft\n  \"/restaurants/{tenant}/{restaurantId}/customerclaims/{id}/restaurantresponse/justification\":\n    put:\n      description: Add reason and optional comments in case of rejection of order claim\n      parameters:\n        - description: Two letter code indicating the tenant\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: Just Eat restaurant identifier\n          in: path\n          name: restaurantId\n          required: true\n          schema:\n            type: string\n        - description: Claim identifier\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Indicates the representation of the request body the client is sending (including version)\n          example: application/json;v=1\n          in: header\n          name: Content-Type\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Justification\"\n        description: Payload containing the reason of rejection and optional comments\n      responses:\n        \"204\":\n          description: Request succeeded. Justification was successfully submitted\n        \"400\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Bad Request. Reason doesn't match any of the predefined values\n                faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Bad Request. Returned if the request is invalid e.g. reason doesn't match any of the predefined values\n        \"401\":\n          $ref: \"#/components/responses/401UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/403ForbiddenResponse\"\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Not Found. Claim could not be found\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Conflict. The claim you are attempting to update is older than the current claim. Fetch the last copy of the entity and try the request again.\n        \"500\":\n          $ref: \"#/components/responses/500ErrorResponse\"\n      security:\n        - Bearer: []\n      summary: Add reason and comments to the response\n      tags:\n        - Restaurant Claims\n        - publicly-accessible\n      x-status: Draft\n  \"/restaurants/{tenant}/{restaurantId}/fees\":\n    get:\n      description: Get the fees currently applied to a restaurant in a particular tenant\n      parameters:\n        - description: A two-character country code for which country the restaurant resides in.\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: A unique identifier for a restaurant\n          in: path\n          name: restaurantId\n          required: true\n          schema:\n            type: string\n        - description: Request header string that allows the server to identify the application making the request.\n          in: header\n          name: User-Agent\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                bagFee:\n                  description: A charge for bags in delivery\n                  serviceTypes:\n                    collection:\n                      amount: 5\n                    default:\n                      amount: 0\n                    delivery:\n                      amount: 10\n              schema:\n                $ref: \"#/components/schemas/RestaurantFees\"\n          description: Success\n          headers:\n            cache-control:\n              description: Information about how the response can be cached. (No caching will be applied)\n              schema:\n                enum:\n                  - no-store\n                type: string\n        \"400\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: The supplied tenant is not supported\n                    errorCode: UnsupportedTenant\n                faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Authorization required\n                    errorCode: Unauthorized\n                faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: You do not have permission to access this resource\n                    errorCode: Forbidden\n                faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: The requested resource does not exist on this server\n                    errorCode: NotFound\n                faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Not Found\n        \"500\":\n          $ref: \"#/components/responses/500ErrorResponse\"\n          description: Internal Server Error\n      security:\n        - Bearer: []\n      summary: Get Restaurant Fees\n      tags:\n        - Restaurants\n        - publicly-accessible\n      x-status: Draft\n    put:\n      description: Creates or Updates the fees for a restaurant in a particular tenant\n      parameters:\n        - description: A two-character country code for which country the restaurant resides in.\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: A unique identifier for a restaurant\n          in: path\n          name: restaurantId\n          required: true\n          schema:\n            type: string\n        - description: Request header string that allows the server to identify the application making the request.\n          in: header\n          name: User-Agent\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            example:\n              bagFee:\n                description: A charge for bags in delivery\n                serviceTypes:\n                  collection:\n                    amount: 5\n                  default:\n                    amount: 0\n                  delivery:\n                    amount: 10\n            schema:\n              $ref: \"#/components/schemas/RestaurantFees\"\n        description: Update Restaurant Fees\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                bagFee:\n                  description: A charge for bags in delivery\n                  serviceTypes:\n                    collection:\n                      amount: 5\n                    default:\n                      amount: 0\n                    delivery:\n                      amount: 10\n              schema:\n                $ref: \"#/components/schemas/RestaurantFees\"\n          description: Success\n          headers:\n            cache-control:\n              description: Information about how the response can be cached. (No caching will be applied)\n              schema:\n                enum:\n                  - no-store\n                type: string\n        \"400\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: The supplied tenant is not supported\n                    errorCode: UnsupportedTenant\n                faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Authorization required\n                    errorCode: Unauthorized\n                faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: You do not have permission to access this resource\n                    errorCode: Forbidden\n                faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: The requested resource does not exist on this server\n                    errorCode: NotFound\n                faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Not Found\n        \"500\":\n          $ref: \"#/components/responses/500ErrorResponse\"\n          description: Internal Server Error\n      security:\n        - Bearer: []\n      summary: Create or Update Restaurant Fees\n      tags:\n        - Restaurants\n        - publicly-accessible\n      x-status: Draft\n  \"/restaurants/{tenant}/{restaurantId}/menu\":\n    get:\n      description: The endpoint will return a 301 redirect containing a URL that will grant access to the Menu file. The URL will only be available for a short period of time. The Menu file will be a single document containing the information that Just Eat has and uses to display the Menu on our customer clients. This will include a collection of items, a collection of Categories and a collection of Availabilities for when the items are available. Partners will be able to retrieve the Menu for any Restaurants that they currently manage.\n      parameters:\n        - description: The tenant of the restaurant in which to put a menu\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: The restaurant identifier to associated with the menu\n          in: path\n          name: restaurantId\n          required: true\n          schema:\n            type: string\n        - description: Containing a partner issued API key e.g. Bearer ABCDE123456789\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n      responses:\n        \"301\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Menu\"\n          description: Temporary Redirect. The redirect will contain the signed URL that the client needs to access the resource\n        \"400\":\n          description: Bad Request. We were unable to process the request due to data you sent us\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConsumerErrorResponse\"\n          description: Server Error\n      summary: Get the latest version of the restaurant's full menu\n      tags:\n        - Restaurants\n        - publicly-accessible\n      x-status: Stable\n    put:\n      description: This will begin an asynchronous process that will lead to that menu becoming live on the Just Eat platform\n      operationId: putMenuForIngestion\n      parameters:\n        - description: The tenant of the restaurant in which to put a menu\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: The restaurant identifier to associated with the menu\n          in: path\n          name: restaurantId\n          required: true\n          schema:\n            type: string\n        - description: Containing a partner issued API key e.g. `JE-API-KEY ABCDE123456789`\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n        - description: Used to denote the version of the menu payload within the body, will default to latest if not supplied e.g. application/=1.0\n          in: header\n          name: Content-Type\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Menu\"\n        description: \"Specification of the menu. This must be valid according to the rules described here: https://developers.just-eat.com/docs/pos-how-the-integration-works#validation-rules\"\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MenuIngestionResponse\"\n          description: Accepted\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConsumerErrorResponse\"\n          description: Server Error\n      summary: Create or update a menu\n      tags:\n        - Restaurants\n        - publicly-accessible\n      x-status: Stable\n  \"/restaurants/{tenant}/{restaurantId}/ordertimes\":\n    get:\n      description: Get list of the delivery and collection lead times supplied by the restaurant\n      operationId: GetOrderTimes\n      parameters:\n        - description: A valid country code, e.g. \"uk\".\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: The restaurant Id.\n          in: path\n          name: restaurantId\n          required: true\n          schema:\n            type: string\n        - description: OAuth2 token issued for logged in restaurant\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                - dayOfWeek: Sunday\n                  lowerBoundMinutes: 35\n                  serviceType: Delivery\n                  upperBoundMinutes: 50\n                - dayOfWeek: Monday\n                  lowerBoundMinutes: 35\n                  serviceType: Delivery\n                  upperBoundMinutes: 50\n                - dayOfWeek: Tuesday\n                  lowerBoundMinutes: 35\n                  serviceType: Delivery\n                  upperBoundMinutes: 50\n                - dayOfWeek: Wednesday\n                  lowerBoundMinutes: 35\n                  serviceType: Delivery\n                  upperBoundMinutes: 50\n                - dayOfWeek: Thursday\n                  lowerBoundMinutes: 35\n                  serviceType: Delivery\n                  upperBoundMinutes: 50\n                - dayOfWeek: Friday\n                  lowerBoundMinutes: 35\n                  serviceType: Delivery\n                  upperBoundMinutes: 50\n                - dayOfWeek: Saturday\n                  lowerBoundMinutes: 35\n                  serviceType: Delivery\n                  upperBoundMinutes: 50\n                - dayOfWeek: Sunday\n                  lowerBoundMinutes: 35\n                  serviceType: Collection\n                  upperBoundMinutes: 50\n                - dayOfWeek: Monday\n                  lowerBoundMinutes: 35\n                  serviceType: Collection\n                  upperBoundMinutes: 50\n                - dayOfWeek: Tuesday\n                  lowerBoundMinutes: 35\n                  serviceType: Collection\n                  upperBoundMinutes: 50\n                - dayOfWeek: Wednesday\n                  lowerBoundMinutes: 35\n                  serviceType: Collection\n                  upperBoundMinutes: 50\n                - dayOfWeek: Thursday\n                  lowerBoundMinutes: 35\n                  serviceType: Collection\n                  upperBoundMinutes: 50\n                - dayOfWeek: Friday\n                  lowerBoundMinutes: 35\n                  serviceType: Collection\n                  upperBoundMinutes: 50\n                - dayOfWeek: Saturday\n                  lowerBoundMinutes: 35\n                  serviceType: Collection\n                  upperBoundMinutes: 50\n              schema:\n                items:\n                  $ref: \"#/components/schemas/orderTime\"\n                maxItems: 14\n                type: array\n                uniqueItems: true\n          description: Success\n          headers:\n            cache-control:\n              description: Information about how the response can be cached.\n              schema:\n                type: string\n        \"401\":\n          $ref: \"#/components/responses/401UnauthorizedResponse\"\n        \"403\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: The restaurant still uses deprecated approach of Lunch and Night menus\n                    errorCode: Forbidden\n                faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Forbidden - the restaurant still uses deprecated approach of Lunch and Night menus\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/500ErrorSchema\"\n          description: Internal Server Error\n      summary: Get the restaurant's delivery and collection lead times\n      tags:\n        - publicly-accessible\n        - Restaurant OrderTimes\n  \"/restaurants/{tenant}/{restaurantId}/ordertimes/{dayOfWeek}/{serviceType}\":\n    put:\n      description: Update the restaurant's delivery and collection lead times\n      operationId: UpdateOrderTime\n      parameters:\n        - description: A valid country code, e.g. \"uk\".\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: The restaurant Id.\n          in: path\n          name: restaurantId\n          required: true\n          schema:\n            type: string\n        - description: Day of week for order time\n          in: path\n          name: dayOfWeek\n          required: true\n          schema:\n            enum:\n              - Sunday\n              - Monday\n              - Tuesday\n              - Wednesday\n              - Thursday\n              - Friday\n              - Saturday\n            type: string\n        - description: Service type of the order time\n          in: path\n          name: serviceType\n          required: true\n          schema:\n            enum:\n              - Delivery\n              - Collection\n            type: string\n        - description: OAuth2 token issued for logged in restaurant OR API token for third party, in the format `Bearer {api_key}`\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/updateOrderTimeRequest\"\n        required: true\n      responses:\n        \"204\":\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Bad Request\n                    errorCode: ERR400\n                faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Bad Request\n        \"401\":\n          $ref: \"#/components/responses/401UnauthorizedResponse\"\n        \"403\":\n          $ref: \"#/components/responses/403ForbiddenResponse\"\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/500ErrorSchema\"\n          description: Internal Server Error\n      summary: Update the restaurant's delivery and collection lead times\n      tags:\n        - publicly-accessible\n        - Restaurant OrderTimes\n  \"/restaurants/{tenant}/{restaurantId}/servicetimes\":\n    get:\n      description: Gets the service times (the weekly times at which a restaurant is in service for delivery or collection) for a restaurant\n      operationId: getRestaurantServiceTimes\n      parameters:\n        - description: Two letter code of restaurant's tenant\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: The restaurant identifier\n          in: path\n          name: restaurantId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceTimes\"\n          description: The restaurant's service times\n          headers:\n            cache-control:\n              description: Information about how the response can be cached.\n              schema:\n                type: string\n        \"403\":\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Order not found\n                    errorCode: ERR1234\n                faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Not found\n        \"500\":\n          $ref: \"#/components/responses/500ErrorResponse\"\n      summary: Get service times\n      tags:\n        - Restaurants\n        - publicly-accessible\n      x-status: Draft\n    put:\n      description: Creates or updates the service times (the weekly times at which a restaurant is in service for delivery or collection) for a restaurant\n      operationId: putRestaurantServiceTimes\n      parameters:\n        - description: Two letter code of restaurant's tenant\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: The restaurant identifier\n          in: path\n          name: restaurantId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ServiceTimes\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceTimes\"\n          description: The new service times\n          headers:\n            cache-control:\n              description: Information about how the response can be cached.\n              schema:\n                type: string\n        \"400\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: The value of \"end\" must be greater than \"start\", or \"00:00:00\"\n                    errorCode: ERR1234\n                faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd\n                traceId: H3TKh4QSJUSwVBCBqEtkKw==\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Bad request\n        \"403\":\n          description: Forbidden\n        \"500\":\n          $ref: \"#/components/responses/500ErrorResponse\"\n      summary: Create or update service times\n      tags:\n        - Restaurants\n        - publicly-accessible\n      x-status: Draft\n  \"/search/autocomplete/{tenant}\":\n    get:\n      description: Provides auto-completed search terms for restaurants, cuisines and products available in a given location.\n      parameters:\n        - description: A valid country code, e.g. \"uk\".\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: User's search term - at least one character required\n          in: query\n          name: searchTerm\n          required: true\n          schema:\n            type: string\n        - description: \"The latitude and longitude coordinates of the location in which to search.\\r\n\n            Specify the coordinates as latitude,longitude.\"\n          example:\n            - 51.501285\n            - -0.1424422\n          explode: false\n          in: query\n          name: latlong\n          required: true\n          schema:\n            items:\n              format: decimal\n              type: number\n            maxItems: 2\n            minItems: 2\n            type: array\n          style: form\n        - description: Limit the number of auto-completed terms returned by the API. Defaults to 7. Valid values 1 - 10\n          in: query\n          name: limit\n          required: false\n          schema:\n            format: integer\n            type: number\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AutoCompleteSearchResponse\"\n          description: Success\n          headers:\n            cache-control:\n              description: Information about how the response can be cached.\n              schema:\n                type: string\n        \"400\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Validation failed on one or more fields\n                    errorCode: 400\n                    fields:\n                      - latlong\n                faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                traceId: 0HLOCKDKQPKIU\n              schema:\n                description: A HTTP 4xx error response\n                properties:\n                  fault:\n                    properties:\n                      errors:\n                        items:\n                          properties:\n                            description:\n                              description: Specific details about the error that may assist the you in resolving the issue\n                              type: string\n                            errorCode:\n                              description: A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error\n                              type: string\n                            fields:\n                              description: An array of invalid query fields\n                              items:\n                                type: string\n                              type: array\n                          type: object\n                        type: array\n                      faultId:\n                        description: A value that helps identify this response back to logs, so we can easily find this specific fault\n                        type: string\n                      traceId:\n                        description: A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated\n                        type: string\n                    required:\n                      - faultId\n                    type: object\n                type: object\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - errorCode: \"401\"\n                faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Unauthorized\n        \"500\":\n          $ref: \"#/components/responses/500ErrorResponse\"\n        \"503\":\n          content:\n            application/json:\n              example:\n                faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                traceId: 0HLOCKDKQPKIU\n              schema:\n                description: Service Unavailable\n                properties:\n                  fault:\n                    properties:\n                      faultId:\n                        description: A value that helps identify this response back to logs, so we can easily find this specific fault\n                        type: string\n                      traceId:\n                        description: A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated\n                        type: string\n                    required:\n                      - faultId\n                    type: object\n                type: object\n          description: Service Unavailable\n      summary: Get auto-completed search terms\n      tags:\n        - Search\n        - publicly-accessible\n      x-status: Stable\n  \"/search/restaurants/{tenant}\":\n    get:\n      description: \"Get restaurants available in a given lat-long which match a search term.\\r\n\n        Matches can be found against the name, a cuisine or a product.\"\n      parameters:\n        - description: A valid country code, e.g. \"uk\".\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: User's search term.\n          in: query\n          name: searchTerm\n          required: true\n          schema:\n            type: string\n        - description: \"The latitude and longitude coordinates of the location in which to search.\\r\n\n            Specify the coordinates as latitude,longitude.\"\n          example:\n            - 51.501285\n            - -0.1424422\n          explode: false\n          in: query\n          name: latlong\n          required: true\n          schema:\n            items:\n              format: decimal\n              type: number\n            maxItems: 2\n            minItems: 2\n            type: array\n          style: form\n        - description: \"Limit the number of restaurants returned by the API.\\r\n\n            Valid values are numbers between 1 and 500.\\r\n\n            If not provided, the limit defaults to 300.\"\n          in: query\n          name: limit\n          required: false\n          schema:\n            format: integer\n            type: number\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestaurantSearchResponse\"\n          description: Success\n          headers:\n            cache-control:\n              description: Information about how the response can be cached.\n              schema:\n                type: string\n        \"400\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - description: Validation failed on one or more fields\n                    errorCode: 400\n                    fields:\n                      - latlong\n                faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - errorCode: \"401\"\n                faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Unauthorized\n        \"422\":\n          content:\n            application/json:\n              example:\n                errors:\n                  - errorCode: \"422\"\n                faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                traceId: 0HLOCKDKQPKIU\n              schema:\n                $ref: \"#/components/schemas/4XXErrorSchema\"\n          description: Unprocessable Entity - search term rejected\n        \"500\":\n          $ref: \"#/components/responses/500ErrorResponse\"\n        \"503\":\n          content:\n            application/json:\n              example:\n                faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n                traceId: 0HLOCKDKQPKIU\n              schema:\n                description: Service Unavailable\n                properties:\n                  fault:\n                    properties:\n                      faultId:\n                        description: A value that helps identify this response back to logs, so we can easily find this specific fault\n                        type: string\n                      traceId:\n                        description: A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated\n                        type: string\n                    required:\n                      - faultId\n                    type: object\n                type: object\n          description: Service Unavailable\n      summary: Search restaurants\n      tags:\n        - Search\n        - publicly-accessible\n      x-status: Stable\n  /send-to-pos-failed:\n    post:\n      description: \"This webhook will be invoked if we experience an error or timeout in sending an order to the underlying POS / kitchen screen. When notified via this webhook, typically you will perform some form of alerting or backup flow (e.g. ask the operator to enter the order manually into the POS). NOTE: This message contains the `OrderId`, but not the full order. It is assumed that you have stored/cached the full order details earlier in the flow - e.g. via the [/order-ready-for-preparation](#/paths/~1order-ready-for-preparation-sync/post) webhook.\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/send-to-pos-failed\"\n        required: true\n      responses:\n        \"200\":\n          description: Respond with a 200 status code to indicate that you have received the notification.\n      summary: Send to POS failed\n      tags:\n        - Order Webhooks\n        - publicly-accessible\n  \"/v1/{tenant}/restaurants/event/offline\":\n    post:\n      description: Creates an event for the specified restaurants that indicates a reason for those restaurants to be offline.\n      parameters:\n        - description: The identifier for the tenant\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n          x-position: 1\n        - description: Name of the user or system creating the event. Used for auditing purposes\n          in: header\n          name: X-JE-Requester\n          required: true\n          schema:\n            type: string\n        - in: header\n          name: X-JE-User-Role\n          required: true\n          schema:\n            $ref: \"#/components/schemas/UserRole\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OfflineRestaurantsRequestModel\"\n        required: true\n        x-name: model\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                example:\n                  restaurantEventId: 03bff206-d136-405f-b789-95190e9711a4\n                  restaurantIds: \"12345\"\n                properties:\n                  restaurantEventId:\n                    description: The ID of the offline event created\n                    type: string\n                  restaurantIds:\n                    description: A CSV of the restaurant IDs added to the offline event\n                    type: string\n                type: object\n          description: Created\n        \"400\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ValidationError\"\n                type: array\n          description: Bad Request\n        \"500\":\n          description: Server Error\n      summary: Create Offline Event\n      tags:\n        - Restaurant Events\n        - publicly-accessible\n      x-status: Stable\n  \"/v1/{tenant}/restaurants/{id}/event/offline\":\n    delete:\n      description: Removes specified restaurant from offline events. If role header is `System` or `Operations` only events created by the specified role will be affected. If role header is `Restaurant` then all events that have `allowRestaurantOverride=true` will be affected.\n      parameters:\n        - description: The identifier for the tenant\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n          x-position: 1\n        - description: The identifier for the restaurant\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n          x-position: 2\n        - description: Name of the user or system creating the event. Used for auditing purposes\n          in: header\n          name: X-JE-Requester\n          required: true\n          schema:\n            type: string\n        - description: The role the user or system creating the event has assumed.\n          in: header\n          name: X-JE-User-Role\n          required: true\n          schema:\n            $ref: \"#/components/schemas/UserRole\"\n      responses:\n        \"200\":\n          description: No Events to Delete\n        \"202\":\n          description: Request Succeeded\n        \"400\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ValidationError\"\n                type: array\n          description: Bad Request\n        \"500\":\n          description: Server Error\n      summary: Delete Offline Event\n      tags:\n        - Restaurant Events\n        - publicly-accessible\n      x-status: Stable\n  \"/{tenant}/orders/{orderId}/queries/attempteddelivery\":\n    post:\n      description: If the customer hasn't answered the door to collect the order, then an attempted delivery event can be created using this endpoint.\n      parameters:\n        - description: Request tenant e.g. uk.\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: Id for the order.\n          in: path\n          name: orderId\n          required: true\n          schema:\n            type: string\n        - description: Containing a partner issued API key e.g. `JE-API-KEY ABCDE123456789`\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/create-attempted-delivery\"\n        description: An object for providing the reason that the attempted delivery event is being created\n        required: true\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          description: Bad Request - returned if providing invalid data such as an unacceptable reason code\n        \"401\":\n          description: Unauthorized - consumer has not provided the necessary credentials\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal server error\n      summary: Delivery Attempt Failed\n      tags:\n        - Attempted Delivery API\n        - publicly-accessible\n      x-status: Stable\n  \"/{tenant}/orders/{orderId}/queries/attempteddelivery/resolution/redeliverorder\":\n    post:\n      description: If the customer responds, then you can trigger the redelivery of an order through this endpoint\n      parameters:\n        - description: Request tenant e.g. uk.\n          in: path\n          name: tenant\n          required: true\n          schema:\n            type: string\n        - description: Id for the order.\n          in: path\n          name: orderId\n          required: true\n          schema:\n            type: string\n        - description: Containing a partner issued API key e.g. `JE-API-KEY ABCDE123456789`\n          in: header\n          name: Authorization\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/resolve-attempted-delivery-redeliver\"\n        description: An object for providing the new status of the order and the updated due date\n        required: true\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          description: Bad Request - returned if providing invalid data such as an unacceptable reason code\n        \"401\":\n          description: Unauthorized - consumer has not provided the necessary credentials\n        \"404\":\n          description: Resource not found\n        \"500\":\n          description: Internal server error\n      summary: Request Redelivery of the Order\n      tags:\n        - Attempted Delivery API\n        - publicly-accessible\n      x-status: Stable\ncomponents:\n  headers:\n    ExpiresAfter:\n      description: date in UTC when token expires\n      schema:\n        format: date-time\n        type: string\n    Retry-After:\n      description: The Retry-After HTTP response header indicates how long the User Agent should wait before making a follow-up request\n      required: false\n      schema:\n        type: string\n  responses:\n    401UnauthorizedResponse:\n      content:\n        application/json:\n          example:\n            errors:\n              - description: Unauthorized. The client did not provide an authentication token or the token was invalid.\n                errorCode: ERR401\n            faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd\n            traceId: H3TKh4QSJUSwVBCBqEtkKw==\n          schema:\n            $ref: \"#/components/schemas/4XXErrorSchema\"\n      description: Unauthorized. The client did not provide an authentication token or the token was invalid\n    403ForbiddenResponse:\n      content:\n        application/json:\n          example:\n            errors:\n              - description: Forbidden\n            faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd\n            traceId: H3TKh4QSJUSwVBCBqEtkKw==\n          schema:\n            $ref: \"#/components/schemas/4XXErrorSchema\"\n      description: Forbidden. The client is not allowed to perform this action\n    500ErrorResponse:\n      content:\n        application/json:\n          example:\n            errors:\n              - description: Internal Server Error\n            faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd\n            traceId: H3TKh4QSJUSwVBCBqEtkKw==\n          schema:\n            $ref: \"#/components/schemas/500ErrorSchema\"\n      description: Internal Server Error\n    503ServiceUnavailableResponse:\n      content:\n        application/json:\n          example:\n            errors:\n              - description: Service Unavailable\n            faultId: 25bbe062-c53d-4fbc-9d6c-3df6127b94fd\n            traceId: H3TKh4QSJUSwVBCBqEtkKw==\n          schema:\n            $ref: \"#/components/schemas/5XXErrorSchema\"\n      description: Service Unavailable\n      headers:\n        Retry-After:\n          $ref: \"#/components/headers/Retry-After\"\n  schemas:\n    400ConnectTokenResponse:\n      properties:\n        error:\n          description: A description of the error that occurred.\n          type: string\n      type: object\n    400CourierSyncErrorResponse:\n      description: The error object returned when an operation fails\n      properties:\n        error:\n          description: Error Title\n          example: Invalid Request\n          type: string\n        message:\n          description: Error Message Text\n          example: Invalid Request\n          type: string\n      type: object\n    400LiveMetricsErrorResponse:\n      description: The error object returned when an operation fails\n      properties:\n        error:\n          description: Error Title\n          example: Invalid Request\n          type: string\n        message:\n          description: Error Message Text\n          example: Invalid Request\n          type: string\n      type: object\n    400MarketplaceRankingErrorResponse:\n      description: The error object returned when an operation fails\n      properties:\n        error:\n          description: Error Title\n          example: Invalid Request\n          type: string\n        message:\n          description: Error Message Text\n          example: Invalid Request\n          type: string\n      type: object\n    400ZoneProfileErrorResponse:\n      description: The error object returned when an operation fails\n      properties:\n        error:\n          description: Error Title\n          example: Invalid Request\n          type: string\n        message:\n          description: Error Message Text\n          example: Invalid Request\n          type: string\n      type: object\n    401CourierSyncErrorResponse:\n      description: The error object returned when an operation fails\n      properties:\n        error:\n          description: Error Title\n          example: Unauthorized Request\n          type: string\n        message:\n          description: Error Message Text\n          example: Unauthorized Request\n          type: string\n      type: object\n    401LiveMetricsErrorResponse:\n      description: The error object returned when an operation fails\n      properties:\n        error:\n          description: Error Title\n          example: Unauthorized Request\n          type: string\n        message:\n          description: Error Message Text\n          example: Unauthorized Request\n          type: string\n      type: object\n    401MarketplaceRankingErrorResponse:\n      description: The error object returned when an operation fails\n      properties:\n        error:\n          description: Error Title\n          example: Unauthorized Request\n          type: string\n        message:\n          description: Error Message Text\n          example: Unauthorized Request\n          type: string\n      type: object\n    401ZoneProfileErrorResponse:\n      description: The error object returned when an operation fails\n      properties:\n        error:\n          description: Error Title\n          example: Unauthorized Request\n          type: string\n        message:\n          description: Error Message Text\n          example: Unauthorized Request\n          type: string\n      type: object\n    404CourierSyncErrorResponse:\n      description: The error object returned when an operation fails\n      properties:\n        error:\n          description: Error Title\n          example: Courier Sync not found\n          type: string\n        message:\n          description: Error Message Text\n          example: Courier Sync not found\n          type: string\n      type: object\n    404LiveMetricsErrorResponse:\n      description: The error object returned when an operation fails\n      properties:\n        error:\n          description: Error Title\n          example: Live Metrics not found for delivery zone\n          type: string\n        message:\n          description: Error Message Text\n          example: Live Metrics not found for delivery zone\n          type: string\n      type: object\n    404MarketplaceRankingErrorResponse:\n      description: The error object returned when an operation fails\n      properties:\n        error:\n          description: Error Title\n          example: Marketplace Ranking Settings not found\n          type: string\n        message:\n          description: Error Message Text\n          example: Marketplace Ranking Settings not found\n          type: string\n      type: object\n    404ZoneProfileErrorResponse:\n      description: The error object returned when an operation fails\n      properties:\n        error:\n          description: Error Title\n          example: Zone Profile Settings not found\n          type: string\n        message:\n          description: Error Message Text\n          example: Zone Profile Settings not found\n          type: string\n      type: object\n    4XXErrorSchema:\n      description: A HTTP 4xx error response\n      properties:\n        fault:\n          properties:\n            errors:\n              items:\n                properties:\n                  description:\n                    description: Specific details about the error that may assist you in resolving the issue\n                    type: string\n                  errorCode:\n                    description: A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error\n                    type: string\n                type: object\n              type: array\n            faultId:\n              description: A value that helps identify this response back to logs, so we can easily find this specific fault\n              type: string\n            traceId:\n              description: A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated\n              type: string\n          required:\n            - faultId\n          type: object\n      type: object\n    500CourierSyncErrorResponse:\n      description: The error object returned when an operation fails\n      properties:\n        error:\n          description: Error Title\n          example: Internal Server Error\n          type: string\n        message:\n          description: Error Message Text\n          example: Internal Server Error\n          type: string\n      type: object\n    500ErrorSchema:\n      description: A HTTP 500 error response\n      properties:\n        fault:\n          properties:\n            errors:\n              items:\n                properties:\n                  description:\n                    description: If returned, the only value returned will be Internal Server Error\"\n                    enum:\n                      - Internal Server Error\n                    type: string\n                type: object\n              type: array\n            faultId:\n              description: A value that helps identify this response back to logs, so we can easily find this specific fault\n              type: string\n            traceId:\n              description: A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated\n              type: string\n          required:\n            - faultId\n          type: object\n      type: object\n    500LiveMetricsErrorResponse:\n      description: The error object returned when an operation fails\n      properties:\n        error:\n          description: Error Title\n          example: Internal Server Error\n          type: string\n        message:\n          description: Error Message Text\n          example: Internal Server Error\n          type: string\n      type: object\n    500MarketplaceRankingErrorResponse:\n      description: The error object returned when an operation fails\n      properties:\n        error:\n          description: Error Title\n          example: Internal Server Error\n          type: string\n        message:\n          description: Error Message Text\n          example: Internal Server Error\n          type: string\n      type: object\n    500ZoneProfileErrorResponse:\n      description: The error object returned when an operation fails\n      properties:\n        error:\n          description: Error Title\n          example: Internal Server Error\n          type: string\n        message:\n          description: Error Message Text\n          example: Internal Server Error\n          type: string\n      type: object\n    5XXErrorSchema:\n      description: A HTTP 5xx error response\n      properties:\n        fault:\n          description: An object representing the nature of the failure.\n          properties:\n            errors:\n              description: The list of errors.\n              items:\n                properties:\n                  description:\n                    description: Specific details about the error that may assist you in resolving the issue\n                    type: string\n                  errorCode:\n                    description: A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error\n                    type: string\n                type: object\n              type: array\n            faultId:\n              description: A value that helps identify this response back to logs, so we can easily find this specific fault\n              type: string\n            traceId:\n              description: A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated\n              type: string\n          required:\n            - faultId\n          type: object\n      type: object\n    AccountBalanceResponse:\n      properties:\n        value:\n          format: int32\n          type: integer\n      type: object\n    ActiveConsumerOffer:\n      additionalProperties: false\n      properties:\n        Type:\n          description: Contains the offer data type name\n          type: string\n        offerId:\n          description: Unique Identifier for Offer\n          nullable: false\n          type: string\n      required:\n        - Type\n        - offerId\n      type: object\n    ActiveConsumerOffersByRestaurant:\n      additionalProperties: false\n      example:\n        offers:\n          - Type: Percent\n            amount: 20\n            maxQualifyingValue: 45000\n            offerId: 12345sd\n            qualifyingValue: 15000\n          - Type: Percent\n            amount: 15\n            maxQualifyingValue: 70000\n            offerId: 45sd345\n            qualifyingValue: 35000\n        restaurantId: 1234sd\n      properties:\n        offers:\n          description: A Collection of Active Offers for `RestaurantId`\n          items:\n            discriminator:\n              mapping:\n                Percent: \"#/components/schemas/Percent\"\n              propertyName: Type\n            oneOf:\n              - $ref: \"#/components/schemas/ActiveConsumerOffer\"\n              - $ref: \"#/components/schemas/Percent\"\n          nullable: true\n          type: array\n        restaurantId:\n          description: The `RestaurantId` applicable to the Offer\n          example: 1234567ds\n          nullable: true\n          type: string\n      type: object\n    ActiveConsumerOffersRequest:\n      additionalProperties: false\n      example:\n        applicableDateTimeUtc: 2021-01-20T19:35:13.643Z\n        consumerId: \"1050450174\"\n        restaurantIds:\n          - \"12879\"\n          - \"450174\"\n      properties:\n        applicableDateTimeUtc:\n          description: |-\n            This is to support the basket use case, where\n            an Offer may be active and displayed in Search or Menu\n            but could become inactive by the time the consumer\n            completes the order.\n          format: date-time\n          nullable: true\n          type: string\n        consumerId:\n          description: Global Consumer Id\n          nullable: true\n          type: string\n        restaurantIds:\n          description: The identifiers of the restaurants. Allows offers to be returned for many restaurants.\n          items:\n            type: string\n          minItems: 1\n          type: array\n      required:\n        - restaurantIds\n      type: object\n    ActiveConsumerOffersResponse:\n      additionalProperties: false\n      properties:\n        activeConsumerOffersByRestaurants:\n          description: A Collection of Active Offers by Restaurant\n          items:\n            $ref: \"#/components/schemas/ActiveConsumerOffersByRestaurant\"\n          nullable: true\n          type: array\n      type: object\n    AddCommentToTicketModel:\n      description: Used when Scoober sends a reply about a support incident, to add to a Just Eat Zendesk ticket\n      properties:\n        description:\n          description: Comment to add to the ticket.\n          example: Happy to help!\n          type: string\n        externalId:\n          description: Scoober job reference, or similar ID used by Scoober to identify this ticket.\n          example: slack:1\n          type: string\n        requesterEmail:\n          description: E-Mail address of the ticket requester.\n          example: requester@scoober.com\n          nullable: true\n          type: string\n        responseUrl:\n          description: Where should we respond to with progress on this request?\n          example: https://zenbox-api.bob.external.tkwy-staging.io/ticket/reply/response\n          type: string\n        status:\n          description: \"What status should we set the ticket to: Open, pending or solved.\"\n          example: pending\n          nullable: true\n          type: string\n        ticketId:\n          description: The ticket ID to add the comment to.\n          example: 1234\n          format: int64\n          type: integer\n      required:\n        - description\n        - externalId\n        - responseUrl\n        - ticketId\n      type: object\n    AddMenuView:\n      properties:\n        anonymousUserId:\n          type: string\n        app:\n          type: string\n        gaUserId:\n          type: string\n        globalUserId:\n          type: string\n        isSponsored:\n          type: boolean\n        latitude:\n          format: double\n          nullable: true\n          type: number\n        longitude:\n          format: double\n          nullable: true\n          type: number\n        menuDisplayedTimestampUtc:\n          format: date-time\n          nullable: true\n          type: string\n        outcode:\n          type: string\n        searchDisplayedTimestampUtc:\n          format: date-time\n          nullable: true\n          type: string\n      type: object\n    AddReplyMessageModel:\n      description: Information sent when a Just Eat agent sends a follow up message about a Scoober support ticket to Scoober\n      properties:\n        city:\n          deprecated: true\n          description: City this order is located in.\n          example: london\n          nullable: true\n          type: string\n        countryCode:\n          description: 2 letter ISO code this ticket is about.\n          example: gb\n          nullable: true\n          type: string\n        description:\n          description: \"Description, i.e.: main body, of the message.\"\n          example: Happy to help!\n          type: string\n        externalId:\n          description: External ID for this ticket, e.g. Scoober job ID (assigned by them).\n          example: slack:1\n          type: string\n        reason:\n          description: Scoober contact reason for this ticket.\n          example: front_line_reason_food_quality_cold_crushed_spilled\n          type: string\n        restaurantId:\n          description: Restaurant Id of the order.\n          example: \"1234567\"\n          nullable: true\n          type: string\n        scooberJobId:\n          description: Scoober job ID for this order.\n          example: \"1234\"\n          nullable: true\n          type: string\n        status:\n          description: \"Status of the ticket. Can be: New, pending, solved.\"\n          example: pending\n          type: string\n        subject:\n          description: Subject of the message.\n          example: Scoober Test\n          type: string\n        ticketId:\n          description: Zendesk ticket ID this message is about.\n          example: 1234\n          format: int64\n          type: integer\n      required:\n        - description\n        - externalId\n        - reason\n        - status\n        - subject\n        - ticketId\n      type: object\n    Additive:\n      additionalProperties: false\n      description: List of Additives\n      example:\n        code: \"10.2\"\n      properties:\n        code:\n          description: Additive code of Takeaway Standard from TMS\n          nullable: false\n          type: string\n      type: object\n    Address:\n      description: Address information.\n      properties:\n        address1:\n          description: Site's complete street address\n          example: \"121 17 Ave SW #405\"\n          type: string\n        city:\n          description: City's name\n          example: Calgary\n          type: string\n        latitude:\n          description: The address latitude coordinate.\n          example: 51.048615\n          format: double\n          type: number\n        longitude:\n          description: The address longitude coordinate.\n          example: -114.070847\n          format: double\n          type: number\n        name:\n          description: Site's institution name or commercial name.\n          example: Clinic Hospital\n          type: string\n        phone:\n          description: Customer's phone number\n          example: +1 (222) 2222-2222\n          type: string\n        postalCode:\n          description: Postal code.\n          example: T0R 0X1\n          type: string\n        province:\n          description: Province's name\n          example: Alberta\n          type: string\n        specialInstructions:\n          description: Special instructions for delivery\n          example: Contactless Delivery Please\n          type: string\n        useLatLongAddress:\n          description: When enabled use latitude and longitude address.\n          type: boolean\n      type: object\n    AddressGeocodingRequest:\n      example:\n        addressLines:\n          - 2 Fleet Place\n          - Fleet Place\n          - London\n          - EC4M 7RF\n      properties:\n        addressLines:\n          description: Lines of the consumers address, a minimum of 3 is preferred but only 1 is required.\n          items:\n            type: string\n          minItems: 1\n          type: array\n      required:\n        - addressLines\n      type: object\n    Allergen:\n      additionalProperties: false\n      description: List of  Allergens\n      example:\n        code: A\n      properties:\n        code:\n          description: Allergen code of Takeaway Standard from TMS\n          nullable: false\n          type: string\n      type: object\n    AppType:\n      description: Application type\n      enum:\n        - Orderpad\n        - OrdertrackerDroid\n        - OrdertrackerTouch\n        - Orderbox\n        - OrderDeliveryService\n        - OrderpadDroid\n        - OrderpadTouch\n        - None\n      type: string\n    ApproveCancellationQuery:\n      additionalProperties: false\n      properties:\n        fee:\n          description: Approved fee\n          format: decimal\n          nullable: true\n          type: number\n        notes:\n          description: Notes about this cancellation\n          nullable: true\n          type: string\n      type: object\n    AttemptedDeliveryQuery:\n      additionalProperties: false\n      properties:\n        requestType:\n          description: Type of attempted delivery request\n          enum:\n            - problem_with_address\n            - no_answer\n          nullable: true\n          type: string\n        resolution:\n          $ref: \"#/components/schemas/AttemptedDeliveryResolution\"\n          description: The restaurants resolution to the query\n          nullable: true\n        response:\n          $ref: \"#/components/schemas/AttemptedDeliveryResponse\"\n          description: The customers reponse to the query\n          nullable: true\n        timeStamp:\n          description: DateTime that the query was created in ISO 8601 format\n          format: date-time\n          type: string\n      type: object\n    AttemptedDeliveryRequest:\n      additionalProperties: false\n      properties:\n        reasonCode:\n          description: Reason for requesting attempted delivery\n          enum:\n            - problem_with_address\n            - no_answer\n          type: string\n      type: object\n    AttemptedDeliveryResolution:\n      additionalProperties: false\n      properties:\n        cancellationReason:\n          description: Reason for cancelling order\n          enum:\n            - new_address_not_within_area\n            - unable_to_reprepare\n            - driver_not_available\n            - area_unsafe\n            - customer_doesnt_want_anymore\n          nullable: true\n          type: string\n        hasBeenMarkedAsOnItsWay:\n          description: Flag to indicate whether redelivery is on it's way\n          type: boolean\n        redeliveryStatus:\n          description: Status of the redelivery request\n          enum:\n            - driver_at_address\n            - repreparing\n          nullable: true\n          type: string\n        redeliveryTime:\n          description: Estimated redelivery time in ISO 8601 format\n          format: date-time\n          nullable: true\n          type: string\n      type: object\n    AttemptedDeliveryResolutionCancellationRequest:\n      additionalProperties: false\n      properties:\n        reasonCode:\n          description: The reason the order has been cancelled\n          enum:\n            - new_address_not_within_area\n            - unable_to_reprepare\n            - driver_not_available\n            - area_unsafe\n            - customer_doesnt_want_anymore\n          type: string\n      type: object\n    AttemptedDeliveryResolutionRedeliveryRequest:\n      additionalProperties: false\n      properties:\n        newDueDate:\n          description: New date and time in ISO 8601 format the order is due to be delivered\n          format: date-time\n          nullable: true\n          type: string\n        status:\n          description: New status of attempted delivery\n          enum:\n            - driver_at_address\n            - repreparing\n          nullable: true\n          type: string\n      type: object\n    AttemptedDeliveryResponse:\n      additionalProperties: false\n      properties:\n        isViewed:\n          description: Has the response been viewed\n          type: boolean\n        message:\n          description: Response message from customer\n          nullable: true\n          type: string\n        responseType:\n          description: Response code from the customer for attempted delivery\n          enum:\n            - response\n            - already_delivered\n          nullable: true\n          type: string\n      type: object\n    AuthorizeResponse:\n      description: The response object for the `authorize` endpoint.\n      type: object\n    AutoCompleteSearchResponse:\n      example:\n        terms:\n          - classification: Restaurant\n            term: Pizza Palace\n          - classification: Cuisine\n            term: Pizza\n          - classification: Dish\n            term: Large Hawaiian\n      properties:\n        terms:\n          description: Ordered list of suggested term completions\n          items:\n            $ref: \"#/components/schemas/AutoCompleteSearchResponseItem\"\n          maxItems: 10\n          type: array\n          uniqueItems: false\n      type: object\n    AutoCompleteSearchResponseItem:\n      example:\n        classification: Restaurant\n        term: Pizza Palace\n      properties:\n        classification:\n          description: Grouping to which term belongs\n          enum:\n            - Restaurant\n            - Cuisine\n            - Dish\n          type: string\n        term:\n          description: Auto-completed search term\n          type: string\n      type: object\n    Availability:\n      example:\n        description: Menu items available for delivery during weekdays for lunch.\n        id: 1-lunch-delivery\n        name: Delivery Lunch\n        serviceTypes:\n          - delivery\n        times:\n          - daysOfTheWeek:\n              - monday\n              - tuesday\n              - wednesday\n              - thursday\n              - friday\n              - saturday\n              - sunday\n            fromDateTime: 11:30:00\n            toDateTime: 14:30:00\n      properties:\n        description:\n          description: The description of the availability.\n          type: string\n        id:\n          description: A unique identifier at menu level for a given availability.\n          type: string\n        name:\n          description: The name for the availability.\n          type: string\n        serviceTypes:\n          description: Values can be \"collection\" or \"delivery\" and are used to denote what types of service apply to the availability.\n          items:\n            enum:\n              - collection\n              - delivery\n            type: string\n          type: array\n        times:\n          description: An array of times when the availability is active.\n          items:\n            $ref: \"#/components/schemas/Time\"\n          type: array\n      type: object\n    AvailableFulfilmentTimes409Error:\n      description: An HTTP 409 error response\n      properties:\n        fault:\n          additionalProperties: false\n          description: A list of values that helps identify this response back to logs, so we can easily find faults.\n          nullable: true\n          properties:\n            errors:\n              description: List of errors that may assist you in resolving the issues.\n              items:\n                additionalProperties: false\n                description: Details about the error that may assist you in resolving the issue.\n                nullable: false\n                properties:\n                  description:\n                    description: Specific details about the error that may assist you in resolving the issue.\n                    nullable: false\n                    type: string\n                  errorCode:\n                    description: A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error.\n                    enum:\n                      - FULFILMENT_TIME_BANDS_INVALID\n                      - FULFILMENT_TIME_BANDS_NOT_FOUND\n                    nullable: false\n                    type: string\n                required:\n                  - description\n                  - errorCode\n                type: object\n              nullable: false\n              type: array\n            faultId:\n              description: A value that helps identify this response back to logs, so we can easily find this specific fault.\n              nullable: false\n              type: string\n            traceId:\n              description: A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated.\n              nullable: false\n              type: string\n          required:\n            - faultId\n            - traceId\n            - errors\n          type: object\n      type: object\n    AvailableTimeSlotsResponse:\n      additionalProperties: false\n      example:\n        available:\n          - from: 12:00:00\n            to: 12:30:00\n          - from: 12:30:00\n            to: 13:00:00\n        overlappingOfferIds:\n          - \"1\"\n          - \"2\"\n      properties:\n        available:\n          description: The collection of available time slots in restaurant local time\n          items:\n            description: Pair of start and end time of available period to create offer\n            properties:\n              from:\n                description: The available offer start time\n                format: time\n                nullable: false\n                type: string\n              to:\n                description: The available offer end time\n                format: time\n                nullable: false\n                type: string\n            type: object\n          nullable: false\n          type: array\n        overlappingOfferIds:\n          description: The collection of overlapped offer ids for same date\n          items:\n            type: string\n          nullable: false\n          type: array\n      type: object\n    BadItem:\n      additionalProperties: false\n      properties:\n        name:\n          description: Name of the item\n          nullable: true\n          type: string\n        quantity:\n          description: Quantity of bad items\n          format: int32\n          type: integer\n        totalCost:\n          description: Total cost of all bad items\n          format: decimal\n          type: number\n        unitPrice:\n          description: Price of a single item in local currency\n          format: decimal\n          type: number\n      type: object\n    BadItemClaim:\n      additionalProperties: false\n      properties:\n        id:\n          description: Id of the claim\n          nullable: true\n          type: string\n        issues:\n          description: Bad item issues\n          items:\n            $ref: \"#/components/schemas/BadItemsGroupedByIssue\"\n          nullable: true\n          type: array\n        refundRefusedReasonCode:\n          description: If claim is refused, the reason for refusal\n          nullable: true\n          type: string\n        status:\n          $ref: \"#/components/schemas/BadItemClaimStatus\"\n          description: Current status of the claim\n        totalCost:\n          description: Total cost of the claim in local currency\n          format: decimal\n          type: number\n      type: object\n    BadItemClaimStatus:\n      description: Current status of a bad item claim\n      enum:\n        - Pending\n        - Viewed\n        - RefundAccepted\n        - RefundRefused\n      type: string\n    BadItemClaimUpdate:\n      additionalProperties: false\n      properties:\n        comment:\n          description: Additional comment\n          nullable: true\n          type: string\n        newStatus:\n          $ref: \"#/components/schemas/BadItemClaimStatus\"\n          description: New status of claim\n        refundRejectedReasonCode:\n          description: If claim is refused, the reason for refusal\n          enum:\n            - AlreadyRefunded\n            - ItemReplaced\n            - PartialRefundRequired\n            - WasNotMissing\n            - WillRedeliver\n            - OrderWasHot\n            - OrderWasOnTime\n            - OrderWasPacked\n            - FoodWasIntact\n            - AddExtraItem\n            - Other\n          type: string\n      type: object\n    BadItemIssueSelectionStep:\n      allOf:\n        - $ref: \"#/components/schemas/FlowStepBase\"\n        - properties:\n            actions:\n              description: Array of actions (i.e. buttons)\n              items:\n                $ref: \"#/components/schemas/HelpAction\"\n              type: array\n            body:\n              description: Array of paragraphs for body text\n              items:\n                type: string\n              type: array\n            foodSafetyAction:\n              $ref: \"#/components/schemas/HelpAction\"\n              description: Action that opens Food Safety info\n            header:\n              description: Display header\n              type: string\n            issueOptionActions:\n              description: Array of actions that select the issue\n              items:\n                $ref: \"#/components/schemas/HelpAction\"\n                description: Array of items to choose\n              type: array\n            leaveReviewAction:\n              $ref: \"#/components/schemas/HelpAction\"\n              description: Action to leave a review\n          type: object\n      description: Flow step used for selecting the issue (e.g. missing / cold) when complaining about order items\n      type: object\n    BadItemsGroupedByIssue:\n      additionalProperties: false\n      properties:\n        issue:\n          description: Bad item issue type\n          enum:\n            - Missing\n            - Cold\n            - Damaged\n          nullable: true\n          type: string\n        items:\n          description: Group of items which have the same issue type\n          items:\n            $ref: \"#/components/schemas/BadItem\"\n          nullable: true\n          type: array\n      type: object\n    BadRequestMarketingResponse:\n      description: 400 Bad Request Returned\n      example:\n        errors:\n          - description: Bad Request\n            errorCode: \"400\"\n        faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n        message: Unable to process the request.\n    BasketErrorResponse:\n      description: The error object returned when an operation fails\n      properties:\n        ErrorType:\n          $ref: \"#/components/schemas/BasketErrorType\"\n        InnerErrors:\n          items:\n            properties:\n              ErrorType:\n                $ref: \"#/components/schemas/BasketErrorType\"\n              Message:\n                type: string\n            type: object\n          type: array\n        Message:\n          type: string\n      type: object\n    BasketErrorType:\n      enum:\n        - Unknown\n        - MenuNotFound\n        - BasketNotRetrieved\n        - BasketNotMapped\n        - BasketNotDeserialised\n        - BasketErrorsNotDeserialised\n        - InvalidBasketItems\n        - BasketNotCreated\n        - InvalidBasketUpdateRequest\n        - ProductNotFound\n        - ProductNotUpdated\n        - ZipcodeNotUpdated\n        - ServiceTypeNotUpdated\n        - ProductNotAdded\n        - ProductsNotAdded\n        - MaximumBasketSizeReached\n        - MinimumBasketSizeReached\n        - OrderItemNotRemoved\n        - NoAvailableMenu\n        - RestaurantDoesNotDeliverToLocation\n        - InvalidLocation\n        - OrderItemNotFound\n        - PartialProductsUpdate\n        - AllProductsUpdateFailed\n        - ProductsNotRemoved\n        - InvalidCreateBasketRequest\n        - BasketNotFound\n      type: string\n    BasketGeoLocation:\n      properties:\n        Latitude:\n          format: decimal\n          type: number\n        Longitude:\n          format: decimal\n          type: number\n      type: object\n    BasketLocation:\n      properties:\n        GeoLocation:\n          allOf:\n            - $ref: \"#/components/schemas/BasketGeoLocation\"\n          description: Not available across platform yet, but applied for future proofing.\n          nullable: true\n        ZipCode:\n          type: string\n      type: object\n    BasketProductsRequest:\n      description: Describes a request for product recommendations based on products in a user's basket.\n      properties:\n        productIds:\n          description: An array of product ids that are in the user's basket.\n          items:\n            type: string\n          type: array\n        restaurantId:\n          description: The id of the restaurant that the recommendations are for.\n          type: string\n        userExperimentValues:\n          description: \"An array of experiment name/variant values that the user is part of.\\r\n\n            If none of these match the experiment names that the Cross Sell API\\r\n\n            knows about, an error will be thrown.\"\n          items:\n            $ref: \"#/components/schemas/ExperimentValue\"\n          type: array\n      required:\n        - productIds\n        - restaurantId\n        - userExperimentValues\n      type: object\n    BasketResponse:\n      description: The response object for all basket endpoints.\n      properties:\n        BasketId:\n          type: string\n        BasketSummary:\n          allOf:\n            - $ref: \"#/components/schemas/BasketSummary\"\n          description: Information for displaying the basket to the user.\n        CreateDate:\n          description: \"`YYYY-MM-DDThh:mm:ssZ (UTC)`\"\n          nullable: true\n          type: string\n        IsOrderable:\n          type: boolean\n        MenuGroupId:\n          type: string\n        RestaurantSeoName:\n          description: A unique per tenant identifier for a restaurant used for external operations.\n          nullable: true\n          type: string\n        ServiceType:\n          type: string\n      type: object\n    BasketSummary:\n      properties:\n        BasketTotals:\n          items:\n            $ref: \"#/components/schemas/BasketTotals\"\n          type: object\n        CategoryOffers:\n          items:\n            $ref: \"#/components/schemas/CategoryOffer\"\n          type: array\n        Deals:\n          items:\n            $ref: \"#/components/schemas/Deal\"\n          type: array\n        DeliveryCharge:\n          format: decimal\n          type: number\n        MaximumAdditionalOrderItems:\n          format: integer\n          type: number\n        PaymentDirectives:\n          $ref: \"#/components/schemas/PaymentDirectives\"\n          description: The directives to payment component\n          example:\n            DisableCashPayment: true\n        Products:\n          items:\n            $ref: \"#/components/schemas/Product\"\n          type: array\n        Prompts:\n          $ref: \"#/components/schemas/Prompts\"\n          nullable: true\n          type: object\n        RestaurantOffers:\n          description: The list of restaurant offers\n          example:\n            - ConsumerSegment: NewToRestaurant\n              DiscountApplied: 8.37\n              DiscountValue: 20\n              OfferId: ftcOfferId75\n              OfferType: Percent\n            - ConsumerSegment: All\n              DiscountApplied: 28.37\n              DiscountCode: mgt36rtp8VoucherCode\n              DiscountValue: 0\n              OfferId: stampCardLoyaltyCampaignOfferId287\n              OfferType: StampCard\n          items:\n            $ref: \"#/components/schemas/RestaurantOffer\"\n          type: array\n      required:\n        - MaximumAdditionalOrderItems\n      type: object\n    BasketTotals:\n      properties:\n        SubTotal:\n          format: decimal\n          type: number\n        Total:\n          format: decimal\n          type: number\n      type: object\n    BenderErrorResponse:\n      description: The error object returned when an operation fails\n      properties:\n        error:\n          description: Error Title\n          type: string\n        message:\n          description: Error Message Text\n          type: string\n      type: object\n    BenderFlexStateType:\n      description: \u003cp\u003eThe flex state type changes according to the exponential moving average and is used as a reference to bring more couriers to suffice the demand in a given delivery zone.\u003c/p\u003e \u003cp\u003eIf the flex state type is \"Off\", it means no shifts will be offered for the delivery zone.\u003c/p\u003e \u003cp\u003eIf the state is \"CLOSED\", only scheduled shifts will be allowed for the delivery zone.\u003c/p\u003e \u003cp\u003eIf the state is \"SEEKING\", the shift offers are going to be made across the courier network in order to suffice the current demand.\u003c/p\u003e \u003cp\u003eIf the state is \"OPEN\", it means demand is high and couriers from all over the courier network are allowed to create shifts for themselves to suffice the current demand.\u003c/p\u003e \u003cp\u003eIf the state is \"CODE_RED\", it means not only can everyone create shifts for themselves for the delivery zone but also couriers from other delivery zones might reallocate to help suffice the demand of that particular delivery zone.\u003c/p\u003e\n      enum:\n        - CODE_RED\n        - OPEN\n        - SEEKING\n        - CLOSED\n        - Off\n      type: string\n    BenderSettings:\n      description: The bender settings object for all endpoints.\n      properties:\n        benderStatus:\n          description: Bender On/Off Status\n          type: boolean\n        deliveryZoneId:\n          description: Bender Settings Delivery Zone Id\n          type: string\n        protectionThreshold:\n          description: Number of hours of Threshold protection\n          format: integer\n          type: number\n        settingsFlexStates:\n          allOf:\n            - $ref: \"#/components/schemas/SettingsFlexStates\"\n          description: Flex states information for given Delivery Zone Id\n        targetUsage:\n          description: Minimum target Usage Percentage\n          format: double\n          nullable: true\n          type: number\n      type: object\n    BenderSettingsList:\n      description: Bender Settings List\n      properties:\n        benderSettingsList:\n          description: List of Bender Settings\n          items:\n            $ref: \"#/components/schemas/BenderSettings\"\n          type: array\n      type: object\n    BonusSummary:\n      description: The zone profile object for a given delivery zone.\n      properties:\n        type:\n          $ref: \"#/components/schemas/BonusType\"\n          description: Types of bonuses that may be granted to the courier.\n        value:\n          description: Bonus value\n          format: integer\n          type: number\n      type: object\n    BonusType:\n      description: Types of bonuses that may be granted to the courier. \u003cp\u003eTOP_UP_PROMOTION - In order to calculate top up promotion skip has a database table containing required acceptance rate and top up value for each existing delivery zone, when the courier's order acceptance rate is greater than the required acceptance rate and the total value is lower than top up value for that given delivery zone, the courier will be granted the difference between the top up value and total order value, know as top up promotion.\u003c/p\u003e\n      enum:\n        - TOP_UP_PROMOTION\n      type: string\n    BringOnlineRequest:\n      additionalProperties: false\n      properties:\n        comment:\n          description: Any additional information\n          nullable: true\n          type: string\n      type: object\n    CallReceivedOrUpdatedModel:\n      properties:\n        callSid:\n          description: UID used by Twilio, identifying a phone call\n          type: string\n        callStep:\n          description: CallStep\n          type: string\n        callerId:\n          description: Caller's phone number\n          type: string\n        orderId:\n          description: Legacy/friendly Order ID\n          type: string\n        queryType:\n          description: QueryType\n          type: string\n        resolution:\n          description: Resolution\n          type: string\n        status:\n          description: Contains the status of the order, if known\n          type: string\n        tags:\n          description: Open-ended tag collection, for on-the-fly adjustment of data slicing; comma separated.\n          type: string\n      type: object\n    CallerInformationCallRequest:\n      properties:\n        accountSid:\n          description: The SID of the Twilio Account that created the Call resource\n          type: string\n        apiVersion:\n          description: The Twilio API version used to start a new TwiML session\n          type: string\n        callSid:\n          description: A unique identifier for the call, generated by Twilio\n          type: string\n        callStatus:\n          description: A descriptive status for the call\n          type: string\n        called:\n          description: The caller identifier\n          type: string\n        calledCountry:\n          description: The country of the called sender\n          type: string\n        calledState:\n          description: The state of the called sender\n          type: string\n        caller:\n          description: The name or phone number of the caller\n          type: string\n        callerCountry:\n          description: The country of the called sender\n          type: string\n        digits:\n          description: The digits that caller entered on their keypad\n          type: string\n        direction:\n          description: A string describing the direction of the call\n          type: string\n        finishedOnKey:\n          description: Gets or sets a value that caller pressed to submit their digits input\n          type: string\n        from:\n          description: The phone number or client identifier to use as the caller id\n          type: string\n        fromCountry:\n          description: The country of the called sender\n          type: string\n        to:\n          description: The phone number, SIP address, or client identifier to call\n          type: string\n        toCountry:\n          description: The country of the recipient\n          type: string\n      type: object\n    CancelOrderResolution:\n      properties:\n        ReasonCode:\n          description: The reason the order has been cancelled\n          enum:\n            - NewAddressNotWithinDeliveryArea\n            - UnableToReprepare\n            - DriverNoLongerAvailable\n            - AreaIsUnsafe\n            - CustomerDoesnotWantOrderAnymore\n          type: string\n      type: object\n    CancellationInfo:\n      additionalProperties: false\n      properties:\n        canRequestCompensation:\n          description: Can the restaurant claim compensation for this cancellation\n          type: boolean\n        hasRequestedCompensation:\n          description: Has the restaurant claimed compensation for this cancellation\n          type: boolean\n        initiatedBy:\n          $ref: \"#/components/schemas/CancellationInitiatedBy\"\n          description: Whether cancellation has been initiated by restaurant or consumer\n        reason:\n          $ref: \"#/components/schemas/CancellationReason\"\n          description: Reason for cancellation\n          nullable: true\n        restaurantAware:\n          description: Is restaurant already aware of the cancellation\n          type: boolean\n        restaurantTransaction:\n          $ref: \"#/components/schemas/CancellationRestaurantTransaction\"\n          description: Potential compensation or fee applied to the restaurant for the cancellation\n          nullable: true\n      type: object\n    CancellationInitiatedBy:\n      description: Who initiated the cancellation\n      enum:\n        - Unknown\n        - Restaurant\n        - Customer\n        - System\n      type: string\n    CancellationQueryResponse:\n      additionalProperties: false\n      properties:\n        comments:\n          description: Additional comments\n          nullable: true\n          type: string\n        createdAt:\n          description: Cancellation query creation date and time in ISO 8601 format\n          format: date-time\n          type: string\n        orderId:\n          description: The id of the order\n          nullable: true\n          type: string\n        policyResult:\n          $ref: \"#/components/schemas/PolicyResult\"\n          description: Result of the policy run\n        reasonCode:\n          description: Reason for order cancellation\n          enum:\n            - rest_cancelled_customer_requested\n            - rest_cancelled_customer_absent\n            - rest_cancelled_out_of_stock\n            - rest_cancelled_drivers_unavailable\n            - rest_cancelled_fake_order\n            - rest_cancelled_too_busy\n            - rest_cancelled_other\n          nullable: true\n          type: string\n        resolution:\n          $ref: \"#/components/schemas/CancellationResolution\"\n          description: Resolution of this cancellation querry\n        state:\n          description: Cancellation query outcome\n          enum:\n            - New\n            - Offered\n            - Declined\n            - Approved\n          nullable: true\n          type: string\n      type: object\n    CancellationReason:\n      additionalProperties: false\n      properties:\n        code:\n          description: Reason for order cancellation\n          enum:\n            - rest_cancelled_out_of_stock\n            - rest_cancelled_drivers_unavailable\n            - rest_cancelled_customer_requested\n            - rest_cancelled_customer_absent\n            - rest_cancelled_fake_order\n            - rest_cancelled_other\n            - cust_cancelled_delivery_too_long\n            - cust_cancelled_made_mistake\n            - cust_cancelled_other\n            - cust_cancelled_changed_mind\n            - deleted_system_error\n            - deleted_test_order\n            - deleted_rejected_by_restaurant\n          nullable: true\n          type: string\n        description:\n          description: Any additional comments\n          nullable: true\n          type: string\n      type: object\n    CancellationResolution:\n      additionalProperties: false\n      properties:\n        at:\n          description: Creation date and time of the cancellation in ISO 8601 format\n          format: date-time\n          type: string\n        by:\n          description: Role of cancellation requester\n          enum:\n            - Agent\n            - Restaurant\n            - System\n          nullable: true\n          type: string\n        feeApplied:\n          description: Approved amount\n          format: decimal\n          type: number\n        notes:\n          description: Additional notes\n          nullable: true\n          type: string\n        state:\n          description: State of the cancellation resolution\n          enum:\n            - Approved\n          nullable: true\n          type: string\n        userName:\n          description: User name who created this cancellation\n          nullable: true\n          type: string\n      type: object\n    CancellationRestaurantTransaction:\n      additionalProperties: false\n      properties:\n        amount:\n          description: The total amount of the transaction\n          format: decimal\n          type: number\n        percentage:\n          description: The percentage of the order value of the transaction\n          format: decimal\n          type: number\n        type:\n          $ref: \"#/components/schemas/CancellationRestaurantTransactionType\"\n          description: The type of cancellation transaction\n      type: object\n    CancellationRestaurantTransactionType:\n      description: The transaction type\n      enum:\n        - Unknown\n        - Compensation\n        - Fee\n      type: string\n    CategoriesResponse:\n      description: Categories of products for given restaurant.\n      items:\n        properties:\n          Description:\n            description: Category description.\n            type: string\n          Id:\n            description: Category identifier.\n            type: string\n          Name:\n            description: Category name.\n            type: string\n        type: object\n      type: array\n    Category:\n      allOf:\n        - $ref: \"#/components/schemas/CategoryBase\"\n        - properties:\n            itemIds:\n              description: The ids of the menu items that are within the category. Each id must be unique within the category.\n              items:\n                type: string\n              type: array\n          type: object\n      example:\n        description: \"\"\n        id: \"3\"\n        itemIds:\n          - \"65143901\"\n          - \"65143902\"\n          - \"65143903\"\n          - \"65143904\"\n          - \"65143905\"\n        name: Starters\n    CategoryBase:\n      example:\n        description: \"\"\n        id: \"3\"\n        name: Starters\n      properties:\n        description:\n          description: The description of the category.\n          type: string\n        id:\n          description: A unique identifier at menu level for a given category.\n          type: string\n        name:\n          description: The name of the category.\n          type: string\n      type: object\n    CategoryOffer:\n      properties:\n        CategoryId:\n          type: string\n        DiscountType:\n          description: The type of discount\n          type: string\n        DiscountValue:\n          format: decimal\n          type: number\n        OfferId:\n          description: The unique identifier of underlying consumer offers, if applicable\n          nullable: true\n          type: string\n        ProductId:\n          description: The unique identifier of product qualified for discount\n          type: string\n      type: object\n    CategoryRequest:\n      example:\n        Id: \"21\"\n        Name: Pizzas\n      properties:\n        Id:\n          description: Id of the Category\n          type: string\n        Name:\n          description: Name of the Category\n          type: string\n      type: object\n    CategoryResponse:\n      example:\n        Id: \"21\"\n        Name: Pizzas\n      properties:\n        Id:\n          description: Id of the Category\n          type: string\n        Name:\n          description: Name of the Category\n          type: string\n      type: object\n    ChangeRestaurantContactsRequest:\n      description: Request containing new restaurant and owner contact details\n      example:\n        ownerMobileNumber: \"+14151231234\"\n        restaurantEmailAddress: super-kebab@gmail.com\n        restaurantPhoneNumber: \"+14151231234\"\n      properties:\n        ownerMobileNumber:\n          description: Restaurant owner mobile phone number in E.164 format.\n          type: string\n        restaurantEmailAddress:\n          description: Restaurant email address\n          type: string\n        restaurantPhoneNumber:\n          description: Restaurant phone number in E.164 format.\n          type: string\n      type: object\n    ChangeRestaurantLogoRequest:\n      description: Request containing path to new logo file that was  uploaded to AWS S3 bucket\n      example:\n        fileKey: ASIASJNB7IVSWQWRLQEQ_logo.jpeg\n      properties:\n        fileKey:\n          description: Path to the file that was uploaded to the AWS S3 bucket\n          type: string\n      type: object\n    ChangeRestaurantMenuItemsRequest:\n      description: Request containing information about what to change in the restaurant menu (item/section/category)\n      example:\n        containsAllergensInfomation: true\n        message: Change name from \"Meat burger\" to \"Vegan burger\"\n      properties:\n        containsAllergensInfomation:\n          description: The value indicating whether request has changes of allergen information\n          type: boolean\n        message:\n          description: The message with the details of what needs to be changed in the menu (item/section/category)\n          type: string\n      type: object\n    ChangeRestaurantMenuPricesRequest:\n      description: Request containing information about restaurant menu price changes\n      example:\n        fileKeys:\n          - 3c81dq0k9bhj1bn_menu_1.pdf\n          - 1rhj7qhr6fhjgbm_menu_2.pdf\n        message: Change the price of \"Meat burger\" from 5$ to 7$\n      properties:\n        fileKeys:\n          description: Array of paths to the updated menu files that Were uploaded to the AWS S3 bucket\n          items:\n            description: Path to the file that was uploaded to the certain AWS S3 bucket\n            type: string\n          maxLength: 10\n          type: array\n        message:\n          description: The message with the details of what prices need to be changed\n          type: string\n      type: object\n    ChannelSubscriptions:\n      properties:\n        subscribedChannels:\n          description: The list of channels that the consumer should only be subscribed to.\n          items:\n            $ref: \"#/components/schemas/CommunicationChannels\"\n          type: array\n      type: object\n    ChannelSubscriptionsWithDerivedField:\n      properties:\n        isDefault:\n          description: Are these channel subscriptions the default or have they been set elsewhere. This is a read-only derived field.\n          type: boolean\n        subscribedChannels:\n          description: The list of channels that are subscribed\n          items:\n            $ref: \"#/components/schemas/CommunicationChannels\"\n          type: array\n      type: object\n    CheckedInState:\n      description: The state of a courier on a shift. A courier might be checked in or not.\n      enum:\n        - CHECKED_IN\n        - NOT_CHECKED_IN\n      type: string\n    Checkout404Error:\n      description: An HTTP 404 error response\n      properties:\n        fault:\n          additionalProperties: false\n          description: A list of values that helps identify this response back to logs, so we can easily find faults.\n          nullable: true\n          properties:\n            errors:\n              description: List of errors that may assist you in resolving the issues.\n              items:\n                additionalProperties: false\n                description: Details about the error that may assist you in resolving the issue.\n                nullable: false\n                properties:\n                  description:\n                    description: Specific details about the error that may assist you in resolving the issue.\n                    nullable: false\n                    type: string\n                  errorCode:\n                    description: A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error.\n                    enum:\n                      - TENANT_NOT_SUPPORTED\n                      - CHECKOUT_NOT_FOUND\n                    nullable: false\n                    type: string\n                required:\n                  - description\n                  - errorCode\n                type: object\n              nullable: false\n              type: array\n            faultId:\n              description: A value that helps identify this response back to logs, so we can easily find this specific fault.\n              nullable: false\n              type: string\n            traceId:\n              description: A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated.\n              nullable: false\n              type: string\n          required:\n            - faultId\n            - traceId\n            - errors\n          type: object\n      type: object\n    Checkout409Error:\n      description: An HTTP 409 error response\n      properties:\n        fault:\n          additionalProperties: false\n          description: A list of values that helps identify this response back to logs, so we can easily find faults .\n          nullable: true\n          properties:\n            errors:\n              description: List of errors that may assist you in resolving the issues.\n              items:\n                additionalProperties: false\n                description: Details about the error that may assist you in resolving the issue.\n                nullable: false\n                properties:\n                  description:\n                    description: Specific details about the error that may assist you in resolving the issue.\n                    nullable: false\n                    type: string\n                  errorCode:\n                    description: A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error.\n                    enum:\n                      - CHECKOUT_INVALID\n                    nullable: false\n                    type: string\n                required:\n                  - description\n                  - errorCode\n                type: object\n              nullable: false\n              type: array\n            faultId:\n              description: A value that helps identify this response back to logs, so we can easily find this specific fault.\n              nullable: false\n              type: string\n            traceId:\n              description: A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated.\n              nullable: false\n              type: string\n          required:\n            - faultId\n            - traceId\n            - errors\n          type: object\n      type: object\n    CheckoutAction:\n      description: Action data needed to make payment for payment method in use. This data is dependant on the Payment Service Provider and payment method. When used for checkout where fraud-check is required, device-id, payer email and payer identifier should be provided.\n      properties:\n        data:\n          additionalProperties:\n            type: string\n          description: Action data dictionary. Key value pairs required to make payment.\n          example:\n            braintreeDeviceData: someescapedjson\n            deviceId: somedeviceid\n            nonce: acbd2334\n            payerEmail: someemail@paypal.com\n            payerId: somepaypalpayerid12345\n          type: object\n        type:\n          description: Identifier for the type of action data for the payment method dependant on paymentOptionType.\n          type: string\n      required:\n        - type\n        - data\n      type: object\n    CheckoutDefaultError:\n      description: A default HTTP error response\n      properties:\n        fault:\n          additionalProperties: false\n          description: A list of values that helps identify this response back to logs, so we can easily find faults.\n          nullable: true\n          properties:\n            errors:\n              description: List of errors that may assist you in resolving the issues.\n              items:\n                additionalProperties: false\n                nullable: false\n                properties:\n                  description:\n                    description: Specific details about the error that may assist you in resolving the issue.\n                    nullable: false\n                    type: string\n                required:\n                  - description\n                type: object\n              nullable: false\n              type: array\n            faultId:\n              description: A value that helps identify this response back to logs, so we can easily find this specific fault.\n              nullable: false\n              type: string\n            traceId:\n              description: A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated.\n              nullable: false\n              type: string\n          required:\n            - faultId\n            - traceId\n            - errors\n          type: object\n      type: object\n    CheckoutGet400Error:\n      description: An HTTP 400 error response\n      properties:\n        fault:\n          additionalProperties: false\n          description: A list of values that helps identify this response back to logs, so we can easily find faults.\n          nullable: true\n          properties:\n            errors:\n              description: List of errors that may assist you in resolving the issues.\n              items:\n                additionalProperties: false\n                description: Details about the error that may assist you in resolving the issue.\n                nullable: false\n                properties:\n                  description:\n                    description: Specific details about the error that may assist you in resolving the issue.\n                    nullable: false\n                    type: string\n                  errorCode:\n                    description: A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error.\n                    enum:\n                      - TENANT_INVALID\n                      - CHECKOUT_ID_INVALID\n                    nullable: false\n                    type: string\n                required:\n                  - description\n                  - errorCode\n                type: object\n              nullable: false\n              type: array\n            faultId:\n              description: A value that helps identify this response back to logs, so we can easily find this specific fault.\n              nullable: false\n              type: string\n            traceId:\n              description: A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated.\n              nullable: false\n              type: string\n          required:\n            - faultId\n            - traceId\n            - errors\n          type: object\n      type: object\n    CheckoutGetResponse:\n      description: Properties apply to all supported country codes, except where specified.\n      properties:\n        customer:\n          description: |\n            Details of the customer making the purchase.\n\n            Details of the customer will need to be submitted to the service. No default values will be set.\n          nullable: false\n          properties:\n            firstName:\n              description: |\n                Customer's first name. \n\n                Also known as Given Name(s).\n              maxLength: 100\n              minLength: 1\n              nullable: true\n              type: string\n            lastName:\n              description: |\n                Customer's last name (Optional).\n\n                Also known as Family Name.\n              maxLength: 100\n              minLength: 0\n              nullable: true\n              type: string\n            phoneNumber:\n              description: |\n                Customer's phone number.\n\n                A phone number can be represented in:\n                  - E.164 format e.g. +447777111111 or;\n                  - Local format of submitted tenant e.g. 07777111111.\n\n                E.164 formatted phone numbers are preferred.\n              maxLength: 16\n              minLength: 3\n              nullable: true\n              type: string\n          type: object\n        fulfilment:\n          description: How and when the items will be received by the customer.\n          nullable: false\n          properties:\n            location:\n              description: |\n                The destination the customer wants to receive the order.\n\n                This only applies to purchases with a delivery service type.\n              nullable: true\n              properties:\n                address:\n                  description: The postal address where the customer wants to receive the order.\n                  nullable: true\n                  properties:\n                    administrativeArea:\n                      description: |\n                        Geographical region of this address. \n\n                        Also known as County or State.\n\n                        Required in Australia (AU) only for an order to be fulfilled.\n                      maxLength: 50\n                      minLength: 1\n                      nullable: true\n                      type: string\n                    lines:\n                      description: One or more lines representing the street address.\n                      items:\n                        description: Represents part of a street address.\n                        maxLength: 100\n                        minLength: 1\n                        nullable: false\n                        type: string\n                      maxItems: 4\n                      minItems: 0\n                      nullable: false\n                      type: array\n                    locality:\n                      description: |\n                        The locality of this address.\n\n                        Also known as Town or City.\n                      maxLength: 50\n                      minLength: 1\n                      nullable: true\n                      type: string\n                    postalCode:\n                      description: Postal code of this address.\n                      maxLength: 50\n                      minLength: 1\n                      nullable: true\n                      type: string\n                  type: object\n                geolocation:\n                  description: |\n                    The coordinates of a geographical location where the customer wants to receive the order.\n\n                    Required in Australia (AU) and New Zealand (NZ) only for an order to be fulfilled.\n                  nullable: true\n                  properties:\n                    latitude:\n                      description: The latitude of the geographical location.\n                      format: decimal\n                      nullable: false\n                      type: number\n                    longitude:\n                      description: The longitude of the geographical location.\n                      format: decimal\n                      nullable: false\n                      type: number\n                  required:\n                    - latitude\n                    - longitude\n                  type: object\n              type: object\n            time:\n              description: Time the customer wants to receive the order i.e. when order is fulfilled.\n              nullable: true\n              properties:\n                asap:\n                  description: |\n                    If the order should be fulfilled as soon as possible (ASAP).\n\n                    ASAP may not be fulfillable.\n\n                    Default is false.\n                  nullable: false\n                  type: boolean\n                scheduled:\n                  description: |\n                    Scheduled time the customer wants the order to be fulfilled.\n\n                    If ASAP is selected and fulfillable, this will be set to the next available fulfilment time.\n                  nullable: true\n                  properties:\n                    from:\n                      description: Earliest time the customer wants the order to be fulfilled represented in ISO 8601 UTC (Zulu Time).\n                      nullable: false\n                      type: string\n                    to:\n                      description: |\n                        Latest time the customer wants the order to be fulfilled represented in ISO 8601 UTC (Zulu Time). \n\n                        This time must be greater than or equal to the from time.\n                      nullable: false\n                      type: string\n                  required:\n                    - from\n                    - to\n                  type: object\n              required:\n                - asap\n              type: object\n          type: object\n        isFulfillable:\n          description: Whether the proposed order can be placed.\n          nullable: false\n          type: boolean\n        issues:\n          description: One or more issues associated the proposed order, that may impact whether it can be placed.\n          items:\n            $ref: \"#/components/schemas/CheckoutIssue\"\n            description: Represents a single issue associated with the proposed order.\n            nullable: false\n          maxItems: 18\n          minItems: 0\n          nullable: false\n          type: array\n        restaurant:\n          description: The restaurant selling the items to be purchased.\n          nullable: false\n          properties:\n            availabilityId:\n              deprecated: true\n              description: |\n                Unique identifier to identify when item(s) are available for ordering.\n              nullable: false\n              type: string\n            id:\n              description: Unique identifier for the restaurant.\n              nullable: false\n              type: string\n          required:\n            - id\n            - availabilityId\n          type: object\n        serviceType:\n          description: How the order will be dispatched.\n          enum:\n            - delivery\n            - collection\n          nullable: false\n          type: string\n      required:\n        - restaurant\n        - serviceType\n        - customer\n        - fulfilment\n        - isFulfillable\n        - issues\n      type: object\n    CheckoutIssue:\n      discriminator:\n        mapping:\n          ADDITIONAL_ITEMS_REQUIRED: \"#/components/schemas/CheckoutIssue_AdditionalItemsRequired\"\n          ADDRESS_LINES_REQUIRED: \"#/components/schemas/CheckoutIssue_AddressLinesRequired\"\n          ADMINISTRATIVE_AREA_REQUIRED: \"#/components/schemas/CheckoutIssue_AdministrativeAreaRequired\"\n          AGE_VERIFICATION_FAILED: \"#/components/schemas/CheckoutIssue_AgeVerificationFailed\"\n          DATE_OF_BIRTH_REQUIRED: \"#/components/schemas/CheckoutIssue_DateOfBirthRequired\"\n          FIRST_NAME_REQUIRED: \"#/components/schemas/CheckoutIssue_FirstNameRequired\"\n          FULFILMENT_TIME_REQUIRED: \"#/components/schemas/CheckoutIssue_FulfilmentTimeRequired\"\n          FULFILMENT_TIME_UNAVAILABLE: \"#/components/schemas/CheckoutIssue_FulfilmentTimeUnavailable\"\n          GEOLOCATION_REQUIRED: \"#/components/schemas/CheckoutIssue_GeolocationRequired\"\n          ITEMS_UNORDERABLE: \"#/components/schemas/CheckoutIssue_ItemsUnorderable\"\n          LOCALITY_REQUIRED: \"#/components/schemas/CheckoutIssue_LocalityRequired\"\n          LOCATION_UNDELIVERABLE: \"#/components/schemas/CheckoutIssue_LocationUndeliverable\"\n          MINIMUM_ORDER_VALUE_NOT_MET: \"#/components/schemas/CheckoutIssue_MinimumOrderValueNotMet\"\n          PHONE_NUMBER_REQUIRED: \"#/components/schemas/CheckoutIssue_PhoneNumberRequired\"\n          POSTAL_CODE_REQUIRED: \"#/components/schemas/CheckoutIssue_PostalCodeRequired\"\n          RESTAURANT_NOT_TAKING_ORDERS: \"#/components/schemas/CheckoutIssue_RestaurantNotTakingOrders\"\n          SERVICE_TYPE_UNAVAILABLE: \"#/components/schemas/CheckoutIssue_ServiceTypeUnavailable\"\n        propertyName: code\n      properties:\n        code:\n          description: The issue code\n          enum:\n            - RESTAURANT_NOT_TAKING_ORDERS\n            - SERVICE_TYPE_UNAVAILABLE\n            - ITEMS_UNORDERABLE\n            - ADDITIONAL_ITEMS_REQUIRED\n            - MINIMUM_ORDER_VALUE_NOT_MET\n            - FULFILMENT_TIME_UNAVAILABLE\n            - LOCATION_UNDELIVERABLE\n            - AGE_VERIFICATION_FAILED\n            - FIRST_NAME_REQUIRED\n            - PHONE_NUMBER_REQUIRED\n            - DATE_OF_BIRTH_REQUIRED\n            - FULFILMENT_TIME_REQUIRED\n            - ADDRESS_LINES_REQUIRED\n            - LOCALITY_REQUIRED\n            - ADMINISTRATIVE_AREA_REQUIRED\n            - POSTAL_CODE_REQUIRED\n            - GEOLOCATION_REQUIRED\n          nullable: false\n          type: string\n      required:\n        - code\n      type: object\n    CheckoutIssue_AdditionalItemsRequired:\n      allOf:\n        - $ref: \"#/components/schemas/CheckoutIssue\"\n        - additionalProperties: false\n          type: object\n      properties:\n        code:\n          description: The collection of items are not orderable in their current state. Items need to be added.\n    CheckoutIssue_AddressLinesRequired:\n      allOf:\n        - $ref: \"#/components/schemas/CheckoutIssue\"\n        - additionalProperties: false\n          type: object\n      properties:\n        code:\n          description: Indicates that the fulfilment address lines is required to fulfil an order.\n    CheckoutIssue_AdministrativeAreaRequired:\n      allOf:\n        - $ref: \"#/components/schemas/CheckoutIssue\"\n        - additionalProperties: false\n          type: object\n      properties:\n        code:\n          description: |\n            Indicates that the fulfilment address administrative area is required to fulfil an order.\n\n            Occurs in Australia (AU) only.\n    CheckoutIssue_AgeVerificationFailed:\n      allOf:\n        - $ref: \"#/components/schemas/CheckoutIssue\"\n        - additionalProperties: false\n          type: object\n      properties:\n        code:\n          description: |\n            The order cannot proceed because the customer has failed the required age verification check.\n\n            Occurs in Australia (AU) and New Zealand (NZ) only.\n    CheckoutIssue_DateOfBirthRequired:\n      allOf:\n        - $ref: \"#/components/schemas/CheckoutIssue\"\n        - additionalProperties: false\n          type: object\n      properties:\n        code:\n          description: |\n            Indicates that the customer's date of birth is required to fulfil an order.\n\n            Occurs in Australia (AU) and New Zealand (NZ) only.\n    CheckoutIssue_FirstNameRequired:\n      allOf:\n        - $ref: \"#/components/schemas/CheckoutIssue\"\n        - additionalProperties: false\n          type: object\n      properties:\n        code:\n          description: Indicates that the customer's first name is required to fulfil an order.\n    CheckoutIssue_FulfilmentTimeRequired:\n      allOf:\n        - $ref: \"#/components/schemas/CheckoutIssue\"\n        - additionalProperties: false\n          type: object\n      properties:\n        code:\n          description: Indicates that a fulfilment time is required to fulfil an order.\n    CheckoutIssue_FulfilmentTimeUnavailable:\n      allOf:\n        - $ref: \"#/components/schemas/CheckoutIssue\"\n        - additionalProperties: false\n          type: object\n      properties:\n        code:\n          description: The selected fulfilment time is no longer available. A new fulfilment time may be available for selection.\n    CheckoutIssue_GeolocationRequired:\n      allOf:\n        - $ref: \"#/components/schemas/CheckoutIssue\"\n        - additionalProperties: false\n          type: object\n      properties:\n        code:\n          description: |\n            Indicates that the fulfilment geolocation is required to fulfil an order.\n\n            Occurs in Australia (AU) and New Zealand (NZ) only.\n    CheckoutIssue_ItemsUnorderable:\n      allOf:\n        - $ref: \"#/components/schemas/CheckoutIssue\"\n        - additionalProperties: false\n          type: object\n      properties:\n        code:\n          description: The collection of items are not orderable.\n    CheckoutIssue_LocalityRequired:\n      allOf:\n        - $ref: \"#/components/schemas/CheckoutIssue\"\n        - additionalProperties: false\n          type: object\n      properties:\n        code:\n          description: Indicates that the fulfilment address locality is required to fulfil an order.\n    CheckoutIssue_LocationUndeliverable:\n      allOf:\n        - $ref: \"#/components/schemas/CheckoutIssue\"\n        - additionalProperties: false\n          type: object\n      properties:\n        code:\n          description: The restaurant is unable to deliver to this location.\n    CheckoutIssue_MinimumOrderValueNotMet:\n      allOf:\n        - $ref: \"#/components/schemas/CheckoutIssue\"\n        - additionalProperties: false\n          properties:\n            additionalSpendRequired:\n              description: The amount the customer needs to spend to meet minimum order value. This is in the smallest unit of local currency e.g. pence.\n              format: integer\n              nullable: false\n              type: number\n            currency:\n              description: The currency in which the value amounts are returned represented in ISO 4217 format.\n              nullable: false\n              type: string\n            minimumOrderValue:\n              description: The minimum order value required to complete an order. This is in the smallest unit of local currency e.g. pence.\n              format: integer\n              nullable: false\n              type: number\n          required:\n            - currency\n            - minimumOrderValue\n            - additionalSpendRequired\n          type: object\n      properties:\n        code:\n          description: The checkout does not meet the minimum order value.\n    CheckoutIssue_PhoneNumberRequired:\n      allOf:\n        - $ref: \"#/components/schemas/CheckoutIssue\"\n        - additionalProperties: false\n          type: object\n      properties:\n        code:\n          description: Indicates that the customer's phone number is required to fulfil an order.\n    CheckoutIssue_PostalCodeRequired:\n      allOf:\n        - $ref: \"#/components/schemas/CheckoutIssue\"\n        - additionalProperties: false\n          type: object\n      properties:\n        code:\n          description: Indicates that the fulfilment postal code is required to fulfil an order.\n    CheckoutIssue_RestaurantNotTakingOrders:\n      allOf:\n        - $ref: \"#/components/schemas/CheckoutIssue\"\n        - additionalProperties: false\n          type: object\n      properties:\n        code:\n          description: The restaurant being ordered from is no longer taking orders. Either the restaurant is not offline or is no longer available on the platform.\n    CheckoutIssue_ServiceTypeUnavailable:\n      allOf:\n        - $ref: \"#/components/schemas/CheckoutIssue\"\n        - additionalProperties: false\n          type: object\n      properties:\n        code:\n          description: The selected service type is not available. The restaurant may still be available to order from with a different service type.\n    CheckoutRequest:\n      description: Details needed to make a payment.\n      properties:\n        action:\n          $ref: \"#/components/schemas/CheckoutAction\"\n          description: Action data needed to make payment for payment method in use. This data is dependant on the Payment Service Provider and payment method. When used for checkout where fraud-check is required, device-id, payer email and payer identifier should be provided.\n          type: object\n        paymentOptionId:\n          description: Token to use for saved card payment. Tokens retrieved from order payment options or basket payment options calls on Public API.\n          type: string\n        paymentOptionType:\n          description: Identifier used to determine method of payment.\n          enum:\n            - AccountCredit\n            - AndroidPay\n            - ApplePay\n            - Card\n            - Cash\n            - GooglePay\n            - PayPal\n            - SavedCard\n            - VCO\n          type: string\n        voucherCode:\n          description: Voucher code to apply to order.\n          type: string\n      required:\n        - paymentOptionType\n      type: object\n    CheckoutResponse:\n      description: The result of a payment attempt.\n      properties:\n        orderId:\n          description: The Id of the order.\n          type: string\n        result:\n          description: The result of payment attempt. 2xxxx = successful payment. 4xxxxx = validation error, 5xxxx = server error\n          enum:\n            - \"20000\"\n            - \"40000\"\n            - \"50000\"\n          type: string\n        tenant:\n          description: The tenant associated with the consumer.\n          type: string\n        timestamp:\n          description: The UTC timestamp of the date and time that the response was generated at.\n          format: date-time\n          type: string\n          x-api-version-from: 2019-04\n      type: object\n    CheckoutUpdate400Error:\n      description: An HTTP 400 error response\n      properties:\n        fault:\n          additionalProperties: false\n          description: A list of values that helps identify this response back to logs, so we can easily find faults.\n          nullable: true\n          properties:\n            errors:\n              description: List of errors that may assist you in resolving the issues.\n              items:\n                additionalProperties: false\n                description: Details about the error that may assist you in resolving the issue.\n                nullable: false\n                properties:\n                  description:\n                    description: Specific details about the error that may assist you in resolving the issue.\n                    nullable: false\n                    type: string\n                  errorCode:\n                    description: A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error.\n                    enum:\n                      - TENANT_INVALID\n                      - CHECKOUT_ID_INVALID\n                      - INVALID_REQUEST\n                      - FIRST_NAME_INVALID\n                      - LAST_NAME_INVALID\n                      - PHONE_NUMBER_INVALID\n                      - DATE_OF_BIRTH_INVALID\n                      - FULFILMENT_TIME_INVALID\n                      - ADDRESS_LINES_INVALID\n                      - LOCALITY_INVALID\n                      - ADMINISTRATIVE_AREA_INVALID\n                      - POSTAL_CODE_INVALID\n                      - GEOLOCATION_INVALID\n                      - DELIVERY_NOTE_INVALID\n                    nullable: false\n                    type: string\n                required:\n                  - description\n                  - errorCode\n                type: object\n              nullable: false\n              type: array\n            faultId:\n              description: A value that helps identify this response back to logs, so we can easily find this specific fault.\n              nullable: false\n              type: string\n            traceId:\n              description: A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated.\n              nullable: false\n              type: string\n          required:\n            - faultId\n            - traceId\n            - errors\n          type: object\n      type: object\n    CheckoutUpdateRequest:\n      description: |\n        Properties apply to all supported country codes, except where specified.\n\n        We do not support a PATCH request on the root path and a 400 status code will be returned.\n      properties:\n        customer:\n          description: Details of the customer making the purchase.\n          nullable: true\n          properties:\n            dateOfBirth:\n              description: |\n                Customer's date of birth represented in ISO 8601 format. If a time is submitted, it will be ignored.\n\n                Required in Australia (AU) and New Zealand (NZ) only for fulfilling an order that contain items being purchased that require age verification.\n              nullable: true\n              type: string\n            firstName:\n              description: |\n                Customer's first name. \n\n                Also known as Given Name(s).\n              maxLength: 100\n              minLength: 1\n              nullable: true\n              type: string\n            lastName:\n              description: |\n                Customer's last name (Optional). \n\n                Also known as Family Name.\n              maxLength: 100\n              minLength: 0\n              nullable: true\n              type: string\n            phoneNumber:\n              description: |\n                Customer's phone number.\n\n                A phone number can be represented in:\n                  - E.164 format e.g. +447777111111 or;\n                  - Local format of submitted tenant e.g. 07777111111.\n\n                E.164 formatted phone numbers are preferred.\n              maxLength: 16\n              minLength: 3\n              nullable: true\n              type: string\n          type: object\n        fulfilment:\n          description: How and when the items will be received by the customer.\n          nullable: true\n          properties:\n            location:\n              description: |\n                The destination the customer wants to receive the order.\n\n                This only applies to purchases with a delivery service type.\n              nullable: true\n              properties:\n                address:\n                  description: The postal address where the customer wants to receive the order.\n                  nullable: true\n                  properties:\n                    administrativeArea:\n                      description: |\n                        Geographical region of this address. \n\n                        Also known as County or State.\n\n                        Required in Australia (AU) only for an order to be fulfilled.\n                      maxLength: 50\n                      minLength: 1\n                      nullable: true\n                      type: string\n                    lines:\n                      description: One or more lines representing the street address.\n                      items:\n                        description: Represents part of a street address.\n                        maxLength: 100\n                        minLength: 1\n                        nullable: false\n                        type: string\n                      maxItems: 4\n                      minItems: 1\n                      nullable: true\n                      type: array\n                    locality:\n                      description: |\n                        The locality of this address.\n\n                        Also known as Town or City.\n                      maxLength: 50\n                      minLength: 1\n                      nullable: true\n                      type: string\n                    postalCode:\n                      description: Postal code of this address.\n                      maxLength: 50\n                      minLength: 1\n                      nullable: true\n                      type: string\n                  type: object\n                geolocation:\n                  description: |\n                    The coordinates of a geographical location where the customer wants to receive the order.\n\n                    Required in Australia (AU) and New Zealand (NZ) only for an order to be fulfilled.\n                  nullable: true\n                  properties:\n                    latitude:\n                      description: The latitude of the geographical location.\n                      format: decimal\n                      nullable: false\n                      type: number\n                    longitude:\n                      description: The longitude of the geographical location.\n                      format: decimal\n                      nullable: false\n                      type: number\n                  required:\n                    - latitude\n                    - longitude\n                  type: object\n              type: object\n            time:\n              description: Time the customer wants to receive the order i.e. when order is fulfilled.\n              nullable: true\n              properties:\n                asap:\n                  description: |\n                    If the order should be fulfilled as soon as possible (ASAP).\n\n                    ASAP may not be fulfillable.\n\n                    Default is false.\n                  nullable: false\n                  type: boolean\n                scheduled:\n                  description: |\n                    Scheduled time the customer wants the order to be fulfilled.\n\n                    The scheduled time will be ignored if ASAP is selected.\n                  nullable: true\n                  properties:\n                    from:\n                      description: Earliest time the customer wants the order to be fulfilled represented in ISO 8601 UTC (Zulu Time).\n                      nullable: false\n                      type: string\n                    to:\n                      description: |\n                        Latest time the customer wants the order to be fulfilled represented in ISO 8601 UTC (Zulu Time). \n\n                        This time must be greater than or equal to the from time.\n                      nullable: false\n                      type: string\n                  required:\n                    - from\n                    - to\n                  type: object\n              type: object\n          type: object\n        notes:\n          description: Instructions about the order that the customer wants to submit.\n          items:\n            description: Instructions about the order that the customer wants to submit.\n            nullable: false\n            properties:\n              note:\n                description: The contents of the note.\n                maxLength: 250\n                minLength: 0\n                nullable: false\n                type: string\n              type:\n                description: The type of note.\n                enum:\n                  - delivery\n                nullable: false\n                type: string\n            required:\n              - type\n              - note\n            type: object\n          maxItems: 1\n          minItems: 0\n          nullable: true\n          type: array\n      type: object\n    CheckoutUpdateResponse:\n      properties:\n        isFulfillable:\n          description: Whether the proposed order can be placed.\n          nullable: false\n          type: boolean\n        issues:\n          description: One or more issues associated the proposed order, that may impact whether it can be placed.\n          items:\n            $ref: \"#/components/schemas/CheckoutIssue\"\n            description: Represents a single issue associated with the proposed order.\n            nullable: false\n          maxItems: 18\n          minItems: 0\n          nullable: false\n          type: array\n      required:\n        - isFulfillable\n        - issues\n      type: object\n    ClaimResolution:\n      description: Representation of the decision made about a claim\n      example:\n        decision: Accepted\n        resolvedChannel: PartnerCentre\n        resolvedDate: 2020-05-28T06:40:48.1053368+00:00\n        totalClaimedAccepted: 1900\n      nullable: true\n      properties:\n        decision:\n          description: Indicates whether the claim is accepted, partially accepted or rejected - claim is partially accepted if at least one of the claimed items is accepted\n          enum:\n            - Accepted\n            - PartiallyAccepted\n            - Rejected\n          type: string\n        resolvedChannel:\n          description: Channel which was used to resolved the claim\n          type: string\n        resolvedDate:\n          description: Date when decision on the claim was submitted\n          format: date-time\n          type: string\n        totalClaimedAccepted:\n          description: Total claimed money accepted by the restaurant in smallest unit of relevant currency\n          type: number\n      type: object\n    ClaimResponse:\n      $ref: \"#/components/schemas/OrderClaim\"\n      description: Response containing a single claim\n      example:\n        affectedItems:\n          - additionalContext: Potato skin was damaged\n            decision: Rejected\n            id: NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\n            name: Potato skin\n            quantity: 1\n            reference: productid%4t56574596\n            totalClaimed: 1900\n            unitPrice: 2000\n          - additionalContext: Pizza was damaged too\n            decision: Accepted\n            id: 123iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\n            name: Pizza\n            quantity: 1\n            reference: productid%t5y6574596\n            totalClaimed: 1900\n            unitPrice: 2000\n        currency: GBP\n        expirationDate: 2020-05-22T14:22:11.1053368+00:00\n        friendlyOrderReference: \"451226580\"\n        id: 2f749442-a62a-abcd-8623-04202878e034\n        issueType: Damaged\n        orderId: r23tqoxdoeupdx9w8evorw\n        resolution:\n          decision: PartiallyAccepted\n          resolvedChannel: PartnerCentre\n          resolvedDate: 2020-05-28T06:40:48.1053368+00:00\n          totalClaimedAccepted: 1900\n        restaurantResponse:\n          items:\n            - decision: Rejected\n              id: NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\n            - decision: Accepted\n              id: 123iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\n          justification:\n            comments: Not our fault at all\n            reason: Other\n        state: Closed\n        submittedDate: 2020-05-20T14:22:11.1053368+00:00\n        totalClaimed: 3800\n      type: object\n    ClaimsResponse:\n      description: Response containing claims for a restaurant which match the given filter\n      example:\n        claims:\n          - currency: GBP\n            expirationDate: 2020-05-22T14:22:11.1053368+00:00\n            friendlyOrderReference: \"954226580\"\n            id: z2749442-a62a-abcd-8623-04202878e034\n            issueType: LateOrder\n            orderId: z27tqoxdoeupdx9w8evorw\n            resolution:\n              decision: Accepted\n              resolvedChannel: OrderPad\n              resolvedDate: 2020-05-28T06:40:48.1053368+00:00\n              totalClaimedAccepted: 4000\n            restaurantResponse:\n              decision: Accepted\n              justification: null\n            state: Closed\n            submittedDate: 2020-05-20T14:22:11.1053368+00:00\n            totalClaimed: 4000\n          - affectedItems:\n              - additionalContext: null\n                decision: NotDecided\n                id: NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\n                name: Potato skin\n                quantity: 1\n                reference: productid%4t56574596\n                totalClaimed: 1900\n                unitPrice: 2000\n              - additionalContext: null\n                decision: NotDecided\n                id: 123iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\n                name: Pizza\n                quantity: 1\n                reference: productid%t5y6574596\n                totalClaimed: 1900\n                unitPrice: 2000\n            currency: GBP\n            expirationDate: 2020-05-22T14:22:11.1053368+00:00\n            friendlyOrderReference: \"451226580\"\n            id: 2f749442-a62a-abcd-8623-04202878e034\n            issueType: Damaged\n            orderId: r23tqoxdoeupdx9w8evorw\n            resolution: null\n            restaurantResponse: null\n            state: Open\n            submittedDate: 2020-05-20T14:22:11.1053368+00:00\n            totalClaimed: 3800\n          - affectedItems:\n              - additionalContext: Potato skin was cold\n                decision: Rejected\n                id: NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\n                name: Potato skin\n                quantity: 1\n                reference: productid%4t56574596\n                totalClaimed: 1900\n                unitPrice: 2000\n            currency: GBP\n            expirationDate: 2020-05-22T14:22:11.1053368+00:00\n            friendlyOrderReference: \"151226580\"\n            id: 1f749442-a62a-abcd-8623-04202878e034\n            issueType: Cold\n            orderId: a23tqoxdoeupdx9w8evorw\n            resolution:\n              decision: Rejected\n              resolvedChannel: PartnerCentre\n              resolvedDate: 2020-05-28T06:40:48.1053368+00:00\n              totalClaimedAccepted: 0\n            restaurantResponse:\n              items:\n                - decision: Rejected\n                  id: NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\n              justification:\n                comments: null\n                reason: OrderWasHot\n            state: Closed\n            submittedDate: 2020-05-20T14:22:11.1053368+00:00\n            totalClaimed: 1900\n          - affectedItems:\n              - additionalContext: Potato skin was cold\n                decision: Accepted\n                id: NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\n                name: Potato skin\n                quantity: 1\n                reference: productid%4t56574596\n                totalClaimed: 1900\n                unitPrice: 2000\n            currency: GBP\n            expirationDate: 2020-05-22T14:22:11.1053368+00:00\n            friendlyOrderReference: \"951226580\"\n            id: zf749442-a62a-abcd-8623-04202878e034\n            issueType: Cold\n            orderId: z23tqoxdoeupdx9w8evorw\n            resolution:\n              decision: Accepted\n              resolvedChannel: OrderPad\n              resolvedDate: 2020-05-28T06:40:48.1053368+00:00\n              totalClaimedAccepted: 1900\n            restaurantResponse:\n              items:\n                - decision: Accepted\n                  id: NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\n              justification: null\n            state: Closed\n            submittedDate: 2020-05-20T14:22:11.1053368+00:00\n            totalClaimed: 1900\n          - affectedItems:\n              - additionalContext: Potato skin was cold\n                decision: Accepted\n                id: NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\n                name: Potato skin\n                quantity: 1\n                reference: productid%4t56574596\n                totalClaimed: 1900\n                unitPrice: 2000\n              - additionalContext: Meat was terribly cold\n                decision: Rejected\n                id: NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc3\n                name: Meat\n                quantity: 1\n                reference: productid%4t56574593\n                totalClaimed: 2900\n                unitPrice: 3000\n            currency: GBP\n            expirationDate: 2020-05-22T14:22:11.1053368+00:00\n            friendlyOrderReference: \"951226588\"\n            id: zf749442-a62a-abcd-8623-04202878e038\n            issueType: Cold\n            orderId: z23tqoxdoeupdx9w8evorz\n            resolution:\n              decision: PartiallyAccepted\n              resolvedChannel: OrderPad\n              resolvedDate: 2020-05-28T06:40:48.1053368+00:00\n              totalClaimedAccepted: 1900\n            restaurantResponse:\n              items:\n                - decision: Accepted\n                  id: NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\n                - decision: Rejected\n                  id: NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc3\n              justification: null\n            state: Closed\n            submittedDate: 2020-05-20T14:22:11.1053368+00:00\n            totalClaimed: 1900\n      properties:\n        claims:\n          description: Array with claims\n          items:\n            $ref: \"#/components/schemas/OrderClaim\"\n          type: array\n      type: object\n    ClientOrderState:\n      description: The state of the client order\n      enum:\n        - AtCounter\n        - InKitchen\n        - Ready\n        - Collected\n        - WithDriver\n        - Delivered\n        - RejectedTooBusy\n        - RejectedTooFar\n        - Cancelled\n        - Received\n        - RejectedNoDriverAvailable\n        - RejectedMenuItemsOutOfStock\n        - RejectedOther\n        - TestOrderDelete\n        - CancelledAcknowledged\n        - CancelledUnacknowledged\n        - CancelledDismissed\n        - Complete\n      type: string\n    CodeType:\n      description: \"\"\n      enum:\n        - 0\n        - 1\n        - 2\n      type: integer\n      x-enumNames:\n        - Unknown\n        - DynamicSingleUse\n        - StaticMultipleUse\n    CollectionActionType:\n      enum:\n        - REPLACE\n        - APPEND\n        - PREPEND\n        - REMOVE\n      type: string\n    CommunicationChannels:\n      enum:\n        - email\n        - sms\n        - push\n      type: string\n    CommunicationPreferences:\n      properties:\n        marketing:\n          $ref: \"#/components/schemas/ChannelSubscriptionsWithDerivedField\"\n          description: The marketing communication preferences.\n          type: object\n      type: object\n    CommunicationTypes:\n      enum:\n        - marketing\n      type: string\n    CompensationReason:\n      additionalProperties: false\n      properties:\n        code:\n          $ref: \"#/components/schemas/CompensationReasonCode\"\n          description: Compensation reason code\n        comments:\n          description: Additional comments\n          nullable: true\n          type: string\n        description:\n          description: Additional description\n          nullable: true\n          type: string\n      type: object\n    CompensationReasonCode:\n      description: Compensation reason code\n      enum:\n        - Unknown\n        - NotSet\n        - BeingPrepared\n        - OnItsWay\n        - Delivered\n      type: string\n    ConflictMarketingResponse:\n      $ref: \"#/components/schemas/MarketingErrorResponse\"\n      additionalProperties: false\n      description: 409 Conflict Returned\n      example:\n        faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n        message: A marketing campaign already exists with this configuration\n    ConnectTokenRequest:\n      properties:\n        acr_values:\n          description: |-\n            Allows passing in additional authentication related information for the `password` grant type - the following  are special proprietary `acr_values`:\n            - `idp:name_of_idp` bypasses the login/home realm screen and forwards the user directly to the selected identity provider (if allowed per client configuration)\n            - `tenant:name_of_tenant` can be used to pass a tenant name to the token endpoint\n          type: string\n        client_id:\n          description: client identifier\n          type: string\n        client_secret:\n          description: The client secret - either in the post body, or as a basic authentication header.\n          type: string\n        code:\n          description: The authorization code (required for `authorization_code` grant type)\n          type: string\n        code_verifier:\n          description: PKCE proof key\n          type: string\n        device_code:\n          description: The device code (required for `urn:ietf:params:oauth:grant-type:device_code` grant type)\n          type: string\n        grant_type:\n          description: The grant type which determines the type of flow. A custom value is also allowed.\n          enum:\n            - authorization_code\n            - client_credentials\n            - password\n            - refresh_token\n            - urn:ietf:params:oauth:grant-type:device_code\n          type: string\n        password:\n          description: Resource owner password (required for `password` grant type)\n          type: string\n        redirect_uri:\n          description: Required for the `authorization_code` grant type\n          type: string\n        refresh_token:\n          description: The refresh token (required for `refresh_token` grant type)\n          type: string\n        scope:\n          description: One or more registered scopes. If not specified, a token for all explicitly  allowed scopes will be issued.\n          type: string\n        username:\n          description: Resource owner username (required for `password` grant type)\n          type: string\n      required:\n        - client_id\n        - grant_type\n    ConnectTokenResponse:\n      properties:\n        access_token:\n          description: The access token. This is a JSON web token (JWT) encoded as Base64 URL-encoding. This is returned if the `response_type` included `token`.\n          type: string\n        expires_in:\n          description: The number of seconds until the access token expires.\n          type: integer\n        id_token:\n          description: |-\n            An ID token. This is a JSON web token (JWT) encoded as Base64 URL-encoding. \n            This is returned if the `response_type` included `id_token`.\n          type: string\n        scope:\n          description: The original scopes you provided.\n          type: string\n        token_type:\n          description: This is always `bearer`, and is returned only  when `token` is specified as a `response_type`.\n          type: string\n      type: object\n    ConsumerCreate:\n      example:\n        emailAddress: consumer@just-eat.com\n        firstName: Bob\n        lastName: Smith\n        password: Pa55word\n        registrationSource: Native\n      properties:\n        emailAddress:\n          description: The consumer's email address\n          format: email\n          maxLength: 160\n          type: string\n        firstName:\n          description: The consumer's first name\n          maxLength: 160\n          type: string\n        lastName:\n          description: The consumer's last name\n          maxLength: 160\n          type: string\n        marketingPreferences:\n          $ref: \"#/components/schemas/consumerMarketingPreference\"\n          description: The selected marketing preferences for the consumer\n        password:\n          description: The consumer's password\n          maxLength: 160\n          minLength: 4\n          type: string\n        registrationSource:\n          default: Native\n          description: The registration source of the consumer. Australia and New Zealand only support Guest\n          enum:\n            - Native\n            - Guest\n          type: string\n      required:\n        - emailAddress\n        - firstName\n        - lastName\n      type: object\n    ConsumerCreateResponse:\n      example:\n        token: SKgaDl0wZxnwjNgLxBnU646PDTquWLHOyPuyzidIZIg=\n        type: otac\n      properties:\n        token:\n          description: The One Time Access Code (OTAC)\n          type: string\n        type:\n          description: |\n            The type of token. At the moment, this will only ever be a One Time Access Code (OTAC)\n          enum:\n            - otac\n          type: string\n      required:\n        - type\n        - token\n      type: object\n    ConsumerErrorResponse:\n      properties:\n        code:\n          format: int32\n          type: integer\n        codeText:\n          type: string\n      type: object\n    ConsumerOffer:\n      additionalProperties: false\n      properties:\n        campaignId:\n          description: The unique identifier of the offer campaign.\n          nullable: true\n          type: string\n        consumerSegment:\n          $ref: \"#/components/schemas/ConsumerSegment\"\n          description: Consumer Segment to which offer applies\n          nullable: false\n        offerId:\n          description: The unique identifier of the offer.\n          nullable: false\n          type: string\n        offerType:\n          $ref: \"#/components/schemas/ConsumerOfferType\"\n          description: The type of the offer.\n          nullable: false\n        priority:\n          $ref: \"#/components/schemas/ConsumerOffersPriority\"\n          description: The offers priority dictates the order and combination approach when multiple offers are executed together.\n          nullable: false\n        qualifyingConditions:\n          $ref: \"#/components/schemas/ConsumerOfferQualifyingConditions\"\n          description: Conditions that must be met in order to get the offer.\n          nullable: true\n        restaurantId:\n          description: The unique identifier of the restaurant providing the offers.\n          nullable: false\n          type: string\n      required:\n        - offerId\n        - restaurantId\n        - offerType\n        - consumerSegment\n        - priority\n      title: ConsumerOffer\n      type: object\n    ConsumerOfferNotification:\n      example:\n        campaignId: CheekyTuesday\n        consumerSegment: All\n        description: Get one free\n        offerId: 12345c\n        offerType: Percent\n        restaurantId: 1234567ds\n      properties:\n        campaignId:\n          description: The unique identifier of the offer campaign.\n          nullable: true\n          type: string\n        consumerSegment:\n          $ref: \"#/components/schemas/ConsumerSegment\"\n          description: Consumer Segment to which offer applies\n          nullable: false\n        description:\n          description: The description of the offer.\n          nullable: true\n          type: string\n        offerId:\n          description: The unique identifier of the offer.\n          nullable: false\n          type: string\n        offerType:\n          $ref: \"#/components/schemas/ConsumerOfferType\"\n          description: The type of the offer.\n          nullable: false\n        restaurantId:\n          description: The unique identifier of the restaurant providing the offers.\n          nullable: false\n          type: string\n      required:\n        - offerId\n        - restaurantId\n        - offerType\n        - consumerSegment\n      title: ConsumerOfferNotification\n      type: object\n    ConsumerOfferPrompt:\n      allOf:\n        - additionalProperties: false\n          properties:\n            description:\n              description: The description of offer to show in prompt for customer\n              type: string\n            header:\n              description: The header to show in prompt for customer\n              nullable: true\n              type: string\n            title:\n              description: The title to show in prompt for customer\n              type: string\n          type: object\n      example:\n        description: We�ll apply the discount at checkout\n        header: Free item\n        title: Nice! You get this free with your order\n    ConsumerOfferQualifyingConditions:\n      additionalProperties: false\n      example:\n        minimumOrderValue: 1000\n        qualifyingProductCategories:\n          - categoryId: Sides111\n        qualifyingProducts:\n          - id: FrenchFriesBig1\n      properties:\n        minimumOrderValue:\n          description: The minimum order value required to be eligible for the Offer in smallest unit of relevant currency.\n          format: integer\n          nullable: true\n          type: number\n        qualifyingProductCategories:\n          description: One of the products from category needed to be included in the basket to make offer applicable\n          items:\n            $ref: \"#/components/schemas/ConsumerOffersProductCategory\"\n          minItems: 1\n          nullable: true\n          type: array\n        qualifyingProducts:\n          description: One of those products needed to be included in the basket to make offer applicable\n          items:\n            $ref: \"#/components/schemas/ConsumerOffersProduct\"\n          minItems: 1\n          nullable: true\n          type: array\n      title: ConsumerOfferQualifyingConditions\n      type: object\n    ConsumerOfferStampCardDiscount:\n      additionalProperties: false\n      properties:\n        discountCode:\n          description: The unique code of the discount, acts as a lock object at payment stage\n          nullable: false\n          type: string\n        discountValue:\n          description: The discount value in smallest unit of relevant currency.\n          format: integer\n          nullable: false\n          type: number\n      required:\n        - discountValue\n        - discountCode\n      type: object\n    ConsumerOfferType:\n      enum:\n        - Percent\n        - FreeItem\n        - Bogof\n        - StampCard\n      type: string\n    ConsumerOffer_Bogof:\n      allOf:\n        - $ref: \"#/components/schemas/ConsumerOffer\"\n        - additionalProperties: false\n          properties:\n            productCategories:\n              description: |-\n                One of the products from category needed to be included in the basket to make offer applicable.\n                The second occurrence of such product gets 100% discount\n              items:\n                $ref: \"#/components/schemas/ConsumerOffersProductCategory\"\n              minItems: 1\n              nullable: true\n              type: array\n            products:\n              description: |-\n                One of those products needed to be included in the basket to make offer applicable.\n                The second occurrence of such product gets 100% discount\n              items:\n                $ref: \"#/components/schemas/ConsumerOffersProduct\"\n              minItems: 1\n              nullable: false\n              type: array\n            prompt:\n              $ref: \"#/components/schemas/ConsumerOfferPrompt\"\n              description: A prompt displayed to consumer\n              nullable: false\n          required:\n            - products\n            - prompt\n          type: object\n      example:\n        campaignId: freeIceCream\n        consumerSegment: All\n        offerId: 12345sd\n        offerType: Bogof\n        products:\n          - id: iceCreamA\n          - id: iceCreamB\n          - id: iceCreamC\n        prompt:\n          description: Ice Cream for free when you order Ice Cream\n          title: Nice! You get this free with your order\n        restaurantId: 1234sd\n    ConsumerOffer_FreeItem:\n      allOf:\n        - $ref: \"#/components/schemas/ConsumerOffer\"\n        - additionalProperties: false\n          properties:\n            freeProduct:\n              $ref: \"#/components/schemas/ConsumerOffersProduct\"\n              deprecated: true\n              description: The product that gets 100% discount applied [Deprecated - use freeProducts instead]\n              nullable: false\n            freeProducts:\n              description: One or more of those products gets 100% discount applied\n              items:\n                $ref: \"#/components/schemas/ConsumerOffersProduct\"\n              minItems: 1\n              nullable: false\n              type: array\n            maximumRedemptions:\n              description: The maximum number of discounted items for this offer\n              format: integer\n              minimum: 1\n              nullable: false\n              type: number\n            prompt:\n              $ref: \"#/components/schemas/ConsumerOfferPrompt\"\n              description: A prompt displayed to consumer\n              nullable: false\n            qualifyingProducts:\n              deprecated: true\n              description: One of those products needed to be included in the collection of products to make offer applicable [Deprecated - use `qualifyingConditions` instead]\n              items:\n                $ref: \"#/components/schemas/ConsumerOffersProduct\"\n              minItems: 1\n              nullable: false\n              type: array\n          required:\n            - qualifyingProducts\n            - freeProduct\n            - prompt\n          type: object\n      example:\n        campaignId: freePotato\n        consumerSegment: All\n        freeProducts:\n          - id: PotatoId\n            preferableModifierIds:\n              - ketchupModifierId\n        maximumRedemptions: 1\n        offerId: 12345sd\n        offerType: FreeItem\n        prompt:\n          description: Potato for free when you order Ice Cream\n          title: Nice! You get this free with your order\n        qualifyingConditions:\n          qualifyingProducts:\n            - id: BigMacId\n            - id: DoubleBigMacId\n            - id: BigMacMenuId\n        restaurantId: 1234sd\n    ConsumerOffer_Percent:\n      allOf:\n        - $ref: \"#/components/schemas/ConsumerOffer\"\n        - additionalProperties: false\n          properties:\n            amount:\n              description: The percentage value discount\n              format: decimal\n              nullable: false\n              type: number\n            qualifyingValue:\n              deprecated: true\n              description: The minimum order value required to be eligible for the Offer in smallest unit of relevant currency. [Deprecated - use `qualifyingConditions` instead]\n              format: integer\n              nullable: true\n              type: number\n          required:\n            - amount\n          type: object\n      example:\n        amount: 10\n        qualifyingConditions:\n          minimumOrderValue: 1500\n    ConsumerOffer_StampCard:\n      allOf:\n        - $ref: \"#/components/schemas/ConsumerOffer\"\n        - additionalProperties: false\n          properties:\n            discounts:\n              description: The list of completed stamp card discounts\n              items:\n                $ref: \"#/components/schemas/ConsumerOfferStampCardDiscount\"\n              type: array\n          required:\n            - discounts\n          type: object\n    ConsumerOffersBasket:\n      additionalProperties: false\n      properties:\n        basketItems:\n          description: The collection of the basket items.\n          items:\n            $ref: \"#/components/schemas/ConsumerOffersBasketItem\"\n          nullable: true\n          type: array\n      title: ConsumerOffersBasket\n      type: object\n    ConsumerOffersBasketItem:\n      additionalProperties: false\n      example:\n        productId: BRGR123\n        quantity: 1\n      properties:\n        productId:\n          description: The `ProductId` of basket item.\n          nullable: true\n          type: string\n        quantity:\n          description: The quantity of basket item.\n          format: int32\n          nullable: true\n          type: integer\n      title: ConsumerOffersBasketItem\n      type: object\n    ConsumerOffersNotificationsRequest:\n      additionalProperties: false\n      example:\n        applicableDateTimeUtc: 2020-04-20T16:20:00.000Z\n        restaurantIds:\n          - 123456cc\n          - 123456aa\n          - 12335bb\n          - 12335dd\n          - 12335ee\n          - 12335ff\n          - 12335gg\n          - 12335hh\n          - 12335ii\n          - 12335jj\n          - 12335kk\n      properties:\n        applicableDateTimeUtc:\n          description: |-\n            Overrides the current time for determining whether offers are active.\n            Enables offers to be returned that have become\n            inactive after the order was added to a consumer's basket.\n          example: 2021-01-20T19:35:13.643Z\n          format: date-time\n          nullable: true\n          type: string\n        restaurantIds:\n          description: The identifiers of the restaurants. Allows offers to be returned for many restaurants.\n          items:\n            type: string\n          maxItems: 150\n          minItems: 11\n          type: array\n      required:\n        - restaurantIds\n      title: ConsumerOffersNotificationsRequest\n      type: object\n    ConsumerOffersNotificationsResponse:\n      description: Holder of Consumer Offer Notifications\n      properties:\n        offerNotifications:\n          description: Provide consumer offer notifications for given restaurants, containing offer description but not exact details like discount etc.\n          items:\n            $ref: \"#/components/schemas/ConsumerOfferNotification\"\n          type: array\n      title: ConsumerOffersNotificationsResponse\n      type: object\n    ConsumerOffersPriority:\n      additionalProperties: false\n      example:\n        type: Stackable\n        value: 1\n      properties:\n        type:\n          description: |-\n            All offers are evaluated based on type and priority value in descending order.\n            Universal offers are always executed. Exclusive offers are evaluated after Universal offers, the first Exclusive offer triggered will return effects\n            If an Exclusive offer is triggered, the Stackable offers will be skipped.\n          enum:\n            - Exclusive\n            - Stackable\n            - Universal\n          type: string\n        value:\n          description: The offers are evaluated based on priority in descending order. The first triggered will return effects\n          format: integer\n          type: number\n      required:\n        - value\n        - type\n      title: ConsumerOffersPriority\n      type: object\n    ConsumerOffersProduct:\n      additionalProperties: false\n      example:\n        id: 6 Chicken Nuggets\n        preferableModifierIds:\n          - ketchupModifierId\n      properties:\n        id:\n          description: The unique identifier of the product.\n          type: string\n        preferableModifierIds:\n          description: The collection of preselected modifiers for the item.\n          items:\n            type: string\n          nullable: true\n          type: array\n        showModifiersSelectionDialog:\n          description: Determinate if modifiers selection dialogue will be shown to customer.\n          type: boolean\n      required:\n        - id\n      title: ConsumerOffersProduct\n      type: object\n    ConsumerOffersProductCategory:\n      additionalProperties: false\n      example:\n        categoryId: Pizza1234\n        categoryName: Pizza\n      properties:\n        categoryId:\n          description: The unique identifier of the product category.\n          type: string\n        categoryName:\n          description: The name of the product category.\n          type: string\n        preferableModifierIds:\n          description: The collection of preselected modifiers for the items in category.\n          items:\n            type: string\n          nullable: true\n          type: array\n      required:\n        - categoryId\n      title: ConsumerOffersProductCategory\n      type: object\n    ConsumerOffersRequest:\n      additionalProperties: false\n      example:\n        applicableDateTimeUtc: 2020-04-20T16:20:00.000Z\n        consumerOffersBasket:\n          basketItems:\n            - productId: BRGR123\n              quantity: 1\n        restaurantId: asd12345\n      properties:\n        applicableDateTimeUtc:\n          description: |-\n            Overrides the current time for determining whether offers are active.\n            Enables offers to be returned that for the time in future (e.g. Pre-order)\n          example: 2021-01-20T19:35:13.643Z\n          format: date-time\n          type: string\n        consumerId:\n          description: Global Consumer Id\n          nullable: true\n          type: string\n        consumerOffersBasket:\n          $ref: \"#/components/schemas/ConsumerOffersBasket\"\n          description: The consumer basket content\n        restaurantId:\n          description: The identifier of the restaurant.\n          minLength: 1\n          type: string\n      required:\n        - restaurantId\n        - consumerOffersBasket\n      title: ConsumerOffersRequest\n      type: object\n    ConsumerOffersResponse:\n      description: Holder of consumer offers\n      example:\n        offers:\n          - campaignId: CheekyTuesday\n            consumerSegment: All\n            offerId: 12345sd\n            offerType: Percent\n            priority:\n              type: Stackable\n              value: 1\n            qualifyingConditions:\n              minimumOrderValue: 15000\n            restaurantId: 1234sd\n          - consumerSegment: All\n            freeProducts:\n              - id: 6 Chicken Nuggets\n                preferableModifierIds:\n                  - ketchupModifierId\n            offerId: 345sd\n            offerType: FreeItem\n            priority:\n              type: Stackable\n              value: 1\n            prompt:\n              description: 6 Nuggets for free when you order Big Mac\n              title: Nice! You get this free with your order\n            qualifyingConditions:\n              qualifyingProducts:\n                - id: BigMacId\n                - id: DoubleBigMacId\n                - id: BigMacMenuId\n            restaurantId: 1234sd\n          - campaignId: freeIceCream\n            consumerSegment: All\n            offerId: 345345sd\n            offerType: Bogof\n            priority:\n              type: Stackable\n              value: 1\n            products:\n              - id: CookieDoughId\n              - id: FishFoodId\n              - id: ChocFudgeBrownieId\n            prompt:\n              description: Get 2 for 1 on Any Ice Cream Company's 465ml\n              title: Nice! You get this free with your order\n            restaurantId: 1234sd\n      properties:\n        offers:\n          description: Provide applicable consumer offers based on provided `restaurantId` and basket content.\n          items:\n            discriminator:\n              mapping:\n                Bogof: \"#/components/schemas/ConsumerOffer_Bogof\"\n                FreeItem: \"#/components/schemas/ConsumerOffer_FreeItem\"\n                Percent: \"#/components/schemas/ConsumerOffer_Percent\"\n                StampCard: \"#/components/schemas/ConsumerOffer_StampCard\"\n              propertyName: offerType\n            oneOf:\n              - $ref: \"#/components/schemas/ConsumerOffer_FreeItem\"\n              - $ref: \"#/components/schemas/ConsumerOffer_Percent\"\n              - $ref: \"#/components/schemas/ConsumerOffer_StampCard\"\n              - $ref: \"#/components/schemas/ConsumerOffer_Bogof\"\n          type: array\n      title: ConsumerOffersResponse\n      type: object\n    ConsumerOrderAddress:\n      description: A postal address.\n      properties:\n        addressLines:\n          description: The lines of the address.\n          items:\n            type: string\n          type: array\n        city:\n          description: The city or town.\n          type: string\n        countryCode:\n          description: The ISO 3166-1 alpha-2 country code.\n          type: string\n        locality:\n          description: The locality, such as a district or suburb, if any.\n          type: string\n        location:\n          $ref: \"#/components/schemas/ConsumerOrderGeoposition\"\n        postalCode:\n          description: The postal code.\n          type: string\n        region:\n          description: The region, such as a county, province or state.\n          type: string\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderApplicationInfo:\n      description: Information about an application used to place an order.\n      properties:\n        clientIdentifier:\n          description: The client identifier associated with the order, if any, such as a device Id or IP address.\n          type: string\n        feature:\n          description: The name of the Just Eat feature that placed the order.\n          type: string\n        name:\n          description: The name of the application that placed the order.\n          type: string\n        userAgent:\n          description: The User Agent of the client that placed the order.\n          type: string\n        version:\n          description: The version of the application that placed the order.\n          type: string\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderBasketInfo:\n      description: Information about the items in the basket for an order.\n      properties:\n        currencyCode:\n          description: The ISO-4217 currency code associated with the basket.\n          type: string\n        discounts:\n          additionalProperties:\n            format: double\n            type: number\n          description: The discounts applied to the basket, if any.\n          type: object\n        fees:\n          additionalProperties:\n            format: double\n            type: number\n          description: The fees applied to the basket, if any.\n          type: object\n        items:\n          description: The items in the basket.\n          items:\n            $ref: \"#/components/schemas/ConsumerOrderBasketItem\"\n          type: array\n        metadata:\n          additionalProperties:\n            type: string\n          description: Arbitrary metadata about the basket.\n          type: object\n        offers:\n          description: The offer discounts applied to the basket.\n          items:\n            $ref: \"#/components/schemas/ConsumerOrderOffer\"\n          type: array\n        subtotal:\n          description: The subtotal for the basket before any discounts or fees.\n          format: double\n          type: number\n        summary:\n          $ref: \"#/components/schemas/ConsumerOrderBasketSummary\"\n        tips:\n          additionalProperties:\n            $ref: \"#/components/schemas/ConsumerOrderTipItem\"\n          description: The tips associated with the basket.\n          type: object\n        total:\n          description: The total value of the basket.\n          format: double\n          type: number\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderBasketItem:\n      description: An item in a basket.\n      properties:\n        bulkDiscounts:\n          description: The bulk discounts, if any.\n          items:\n            $ref: \"#/components/schemas/ConsumerOrderBulkDiscount\"\n          type: array\n        combinedPrice:\n          description: The combined price for the item, including any accessories and/or discounts.\n          format: double\n          type: number\n        description:\n          description: The description for the item.\n          type: string\n        discounts:\n          description: The discounts, if any.\n          items:\n            $ref: \"#/components/schemas/ConsumerOrderDiscount\"\n          type: array\n        name:\n          description: The name of the item.\n          type: string\n        optionalAccessories:\n          description: The optional meal part accessories, if any.\n          items:\n            $ref: \"#/components/schemas/ConsumerOrderMealAccessory\"\n          type: array\n        parts:\n          description: The parts of the meal, if any.\n          items:\n            $ref: \"#/components/schemas/ConsumerOrderMealPart\"\n          type: array\n        productId:\n          description: The product Id.\n          type: string\n        requiredAccessories:\n          description: The required meal part accessories, if any.\n          items:\n            $ref: \"#/components/schemas/ConsumerOrderMealAccessory\"\n          type: array\n        synonym:\n          description: The synonym of the item.\n          type: string\n        unitPrice:\n          description: The unit price for the item.\n          format: double\n          type: number\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderBasketSummary:\n      description: A summary of the items in the basket for an order.\n      properties:\n        items:\n          description: The items in the basket summary.\n          items:\n            $ref: \"#/components/schemas/ConsumerOrderBasketSummaryItem\"\n          type: array\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderBasketSummaryItem:\n      description: A summarised item in a basket.\n      properties:\n        accessories:\n          description: The accessories in the basket summary item.\n          items:\n            $ref: \"#/components/schemas/ConsumerOrderMealAccessory\"\n          type: array\n        id:\n          description: The Id of the item, such as a product Id or meal part Id.\n          type: string\n        items:\n          description: The items in the basket summary item.\n          items:\n            $ref: \"#/components/schemas/ConsumerOrderBasketSummaryItem\"\n          type: array\n        name:\n          description: The name of the item.\n          type: string\n        price:\n          description: The price of the item for the associated quantity.\n          format: double\n          type: number\n        quantity:\n          description: The quantity of the item.\n          format: int32\n          type: integer\n        synonym:\n          description: The synonym of the item.\n          type: string\n        unitPrice:\n          description: The unit price of the item.\n          format: double\n          type: number\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderBulkDiscount:\n      description: A bulk discount.\n      properties:\n        amount:\n          description: The amount of the bulk discount.\n          format: double\n          type: number\n        name:\n          description: The name of the bulk discount.\n          type: string\n        productTypeId:\n          description: The Id of the product type the discount applies to.\n          type: string\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderConsumerInfo:\n      description: Information about a consumer.\n      properties:\n        contactNumber:\n          description: The consumer's contact number.\n          type: string\n        deliveryAddress:\n          $ref: \"#/components/schemas/ConsumerOrderAddress\"\n        email:\n          description: The consumer's email address.\n          type: string\n        id:\n          description: The consumer Id.\n          type: string\n        name:\n          description: The consumer's name.\n          type: string\n        timeZone:\n          description: The IANA time zone Id the consumer is located in.\n          type: string\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderConsumerReview:\n      description: A consumer's review of an order.\n      properties:\n        comments:\n          description: Any comments left by the consumer in the review.\n          type: string\n        scores:\n          additionalProperties:\n            format: double\n            type: number\n          description: The scores given for the scored attributes of the review by the consumer.\n          type: object\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderCuisineInfo:\n      description: Information about a restaurant cuisine.\n      properties:\n        id:\n          description: The Id of the cuisine.\n          type: string\n        name:\n          description: The name of the cuisine.\n          type: string\n        rank:\n          description: The ranking for the cuisine.\n          format: int32\n          type: integer\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderDateTimeRange:\n      description: A range of date and time values.\n      properties:\n        end:\n          description: The end of the range.\n          format: date-time\n          type: string\n        start:\n          description: The start of the range.\n          format: date-time\n          type: string\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderDiscount:\n      description: A discount.\n      properties:\n        amount:\n          description: The amount of the discount.\n          format: double\n          type: number\n        name:\n          description: The name of the discount.\n          type: string\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderErrorResponse:\n      description: An error response.\n      properties:\n        _links:\n          additionalProperties:\n            $ref: \"#/components/schemas/ConsumerOrderLink\"\n          description: The links information, if any.\n          type: object\n        detail:\n          description: The optional error detail.\n          type: object\n        errorCode:\n          description: The API error code, if any.\n          type: string\n        errorId:\n          description: The error Id.\n          type: string\n        fingerprint:\n          description: The error fingerprint, if available.\n          type: string\n        message:\n          description: The error message.\n          type: string\n        requestId:\n          description: The request Id, if available.\n          type: string\n        statusCode:\n          description: The HTTP status code.\n          format: int32\n          type: integer\n        timestamp:\n          description: The timestamp of the error.\n          format: date-time\n          type: string\n        version:\n          description: The version of the API that generated the error.\n          type: string\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderGeoposition:\n      description: A geoposition.\n      properties:\n        latitude:\n          description: The latitude.\n          format: double\n          type: number\n        longitude:\n          description: The longitude.\n          format: double\n          type: number\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderImage:\n      description: An image.\n      properties:\n        height:\n          description: The optional height of the image, in pixels.\n          format: int32\n          nullable: true\n          type: integer\n        imageType:\n          description: The type of the image, such as a logo.\n          type: string\n        uri:\n          description: The URI of the image.\n          type: string\n        width:\n          description: The optional width of the image, in pixels.\n          format: int32\n          nullable: true\n          type: integer\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderLink:\n      description: A link to an API resource.\n      properties:\n        href:\n          description: The URL of the link.\n          type: string\n        templated:\n          description: A value indicating whether the URL is templated.\n          type: boolean\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderMealAccessory:\n      description: An accessory for a meal.\n      properties:\n        accessoryId:\n          description: The accessory Id.\n          type: string\n        name:\n          description: The name of the accessory.\n          type: string\n        quantity:\n          description: The quantity of the accessory.\n          format: int32\n          type: integer\n        unitPrice:\n          description: The unit price of the accessory.\n          format: double\n          type: number\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderMealPart:\n      description: A part of a meal.\n      properties:\n        groupId:\n          description: The group Id.\n          type: string\n        mealPartId:\n          description: The meal part Id.\n          type: string\n        name:\n          description: The name of the meal part.\n          type: string\n        optionalAccessories:\n          description: The optional meal part accessories, if any.\n          items:\n            $ref: \"#/components/schemas/ConsumerOrderMealAccessory\"\n          type: array\n        requiredAccessories:\n          description: The required meal part accessories, if any.\n          items:\n            $ref: \"#/components/schemas/ConsumerOrderMealAccessory\"\n          type: array\n        synonym:\n          description: The synonym of the meal part.\n          type: string\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderOffer:\n      description: An offer applied to a basket.\n      properties:\n        id:\n          description: The offer Id.\n          type: string\n        offerAmount:\n          description: The value of the offer.\n          format: double\n          type: number\n        offerType:\n          description: The type of the offer.\n          type: string\n        qualifyingValue:\n          description: The qualifying value for the offer.\n          format: double\n          type: number\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderOrder:\n      description: An order.\n      properties:\n        _links:\n          additionalProperties:\n            $ref: \"#/components/schemas/ConsumerOrderLink\"\n          description: The links information, if any.\n          type: object\n        application:\n          $ref: \"#/components/schemas/ConsumerOrderApplicationInfo\"\n        basket:\n          $ref: \"#/components/schemas/ConsumerOrderBasketInfo\"\n        consumer:\n          $ref: \"#/components/schemas/ConsumerOrderConsumerInfo\"\n        friendlyId:\n          description: The friendly order Id.\n          type: string\n        id:\n          description: The Id of the order.\n          type: string\n        information:\n          $ref: \"#/components/schemas/ConsumerOrderOrderInfo\"\n        metadata:\n          additionalProperties:\n            type: string\n          description: Arbitrary metadata about the order.\n          type: object\n        payment:\n          $ref: \"#/components/schemas/ConsumerOrderPaymentInfo\"\n        restaurant:\n          $ref: \"#/components/schemas/ConsumerOrderRestaurantInfo\"\n        review:\n          $ref: \"#/components/schemas/ConsumerOrderReviewInfo\"\n        status:\n          $ref: \"#/components/schemas/ConsumerOrderStatusInfo\"\n        tenant:\n          description: The tenant associated with the order.\n          type: string\n        timestamp:\n          description: The UTC timestamp of the date and time that the response was generated at.\n          format: date-time\n          type: string\n          x-api-version-from: 2019-04\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderOrderHistory:\n      description: The order history of a consumer.\n      properties:\n        _links:\n          additionalProperties:\n            $ref: \"#/components/schemas/ConsumerOrderLink\"\n          description: The links information, if any.\n          type: object\n        _pagination:\n          $ref: \"#/components/schemas/ConsumerOrderPaginationInfo\"\n        consumerId:\n          description: The Id of the consumer.\n          type: string\n        orders:\n          description: The consumer's orders.\n          items:\n            $ref: \"#/components/schemas/ConsumerOrderOrder\"\n          type: array\n        tenant:\n          description: The tenant associated with the consumer.\n          type: string\n        timestamp:\n          description: The UTC timestamp of the date and time that the response was generated at.\n          format: date-time\n          type: string\n          x-api-version-from: 2019-04\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderOrderInfo:\n      description: Additional information about an order.\n      properties:\n        canReorder:\n          description: A value indicating whether the order can be re-ordered.\n          type: boolean\n        createdAt:\n          description: The date and time the order was created.\n          format: date-time\n          type: string\n        isAsap:\n          description: A value indicating whether the order should be fulfilled as soon as possible.\n          type: boolean\n        isForDelivery:\n          description: A value indicating whether the order is for delivery.\n          type: boolean\n        notes:\n          additionalProperties:\n            type: string\n          description: Any notes associated with the order given by the consumer.\n          type: object\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderOrderStatus:\n      description: The status of an order.\n      properties:\n        consumerId:\n          description: The Id of consumer associated with the order.\n          type: string\n        id:\n          description: The Id of the order.\n          type: string\n        isForDelivery:\n          description: A value indicating whether the order is for delivery.\n          type: boolean\n        restaurantName:\n          description: The name of the restaurant associated with the order.\n          type: string\n        status:\n          $ref: \"#/components/schemas/ConsumerOrderStatusInfo\"\n        tenant:\n          description: The tenant associated with the order.\n          type: string\n        timestamp:\n          description: The UTC timestamp of the date and time that the response was generated at.\n          format: date-time\n          type: string\n          x-api-version-from: 2019-04\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderPaginationInfo:\n      description: Pagination information for a request.\n      properties:\n        count:\n          description: The current number of results.\n          format: int64\n          type: integer\n        links:\n          additionalProperties:\n            $ref: \"#/components/schemas/ConsumerOrderLink\"\n          description: The pagination links.\n          type: object\n        token:\n          description: The pagination token for the next page of results, if any.\n          type: string\n        total:\n          description: The total number of results, if known.\n          format: int64\n          nullable: true\n          type: integer\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderPaymentInfo:\n      description: Information about a payment.\n      properties:\n        currencyCode:\n          description: The ISO-4217 currency code associated with the payment.\n          type: string\n        fees:\n          additionalProperties:\n            format: double\n            type: number\n          description: The amount of fees applied to the order.\n          type: object\n        paidAt:\n          description: The date and time the order was paid for, if known.\n          format: date-time\n          nullable: true\n          type: string\n        payments:\n          description: The individual payment(s).\n          items:\n            $ref: \"#/components/schemas/ConsumerOrderPaymentItem\"\n          type: array\n        taxes:\n          additionalProperties:\n            $ref: \"#/components/schemas/ConsumerOrderTaxItem\"\n          description: The taxes applied to the order.\n          type: object\n        totals:\n          $ref: \"#/components/schemas/ConsumerOrderTotals\"\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderPaymentItem:\n      description: An individual payment.\n      properties:\n        cardType:\n          description: The card type, such as VISA, if used.\n          type: string\n        deferredFee:\n          description: The deferred fee value, if any.\n          format: double\n          type: number\n          x-api-version-from: 2019-05\n        fee:\n          description: The payment fee, if any.\n          format: double\n          type: number\n        lastCardDigits:\n          description: The last digits of a payment card, if used.\n          type: string\n        paymentMethod:\n          description: The payment method, such as cash or card.\n          enum:\n            - None\n            - Cash\n            - Card\n            - AccountCredit\n            - Voucher\n            - PayPal\n            - Interac\n            - ApplePay\n          type: string\n          x-api-version-from: 2017-10\n        pspName:\n          description: The name of the Payment Service Provider, if any.\n          type: string\n        transactionReference:\n          description: The transaction reference, if any.\n          type: string\n        value:\n          description: The payment value.\n          format: double\n          type: number\n        voucherCode:\n          description: The voucher code used, if any.\n          type: string\n          x-api-version-from: 2019-05\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderReorderResponse:\n      additionalProperties: false\n      description: A reorder response.\n      properties:\n        basketId:\n          description: The basket Id.\n          type: string\n        menuId:\n          description: The menu Id.\n          type: string\n        restaurantId:\n          description: The restaurant Id.\n          type: string\n        restaurantSeoName:\n          description: The restaurant SEO name.\n          type: string\n        serviceType:\n          description: The service type, such as collection or delivery.\n          type: string\n        tenant:\n          description: The tenant.\n          type: string\n        unavailableProductIds:\n          description: The unavailable product Ids.\n          items:\n            type: string\n          type: array\n      type: object\n      x-api-version-from: 2020-06\n    ConsumerOrderRestaurantCapability:\n      description: A capability of a restaurant.\n      properties:\n        isCapable:\n          description: A value indicating whether the restaurant is capable of fulfilling the capability.\n          type: boolean\n        metadata:\n          additionalProperties:\n            type: string\n          description: Arbitrary metadata about the capability.\n          type: object\n        name:\n          description: The name of the capability.\n          type: string\n      type: object\n      x-api-version-from: 2018-09\n    ConsumerOrderRestaurantInfo:\n      description: Information about a restaurant.\n      properties:\n        capabilities:\n          additionalProperties:\n            $ref: \"#/components/schemas/ConsumerOrderRestaurantCapability\"\n          description: The capabilities of the restaurant.\n          type: object\n          x-api-version-from: 2018-09\n        contactNumber:\n          description: The contact telephone number for the restaurant.\n          type: string\n        cuisines:\n          description: The cuisines associated with the restaurant.\n          items:\n            $ref: \"#/components/schemas/ConsumerOrderCuisineInfo\"\n          type: array\n        displayName:\n          description: The display name of the restaurant.\n          type: string\n        id:\n          description: The Id of the restaurant.\n          type: string\n        images:\n          additionalProperties:\n            $ref: \"#/components/schemas/ConsumerOrderImage\"\n          description: The images associated with the restaurant.\n          type: object\n        isClosed:\n          description: A value indicating whether the restaurant is currently closed.\n          type: boolean\n        isOffline:\n          description: A value indicating whether the restaurant is currently offline.\n          type: boolean\n        metadata:\n          additionalProperties:\n            type: string\n          description: Arbitrary metadata about the restaurant.\n          type: object\n        nextClosesAt:\n          description: The date and time the restaurant next closes, if open.\n          format: date-time\n          nullable: true\n          type: string\n        nextOpensAt:\n          description: The date and time the restaurant next opens, if closed.\n          format: date-time\n          nullable: true\n          type: string\n        postalAddress:\n          $ref: \"#/components/schemas/ConsumerOrderAddress\"\n        seoName:\n          description: The SEO name of the restaurant.\n          type: string\n        timeZone:\n          description: IANA time zone Id the restaurant is located in.\n          type: string\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderReviewInfo:\n      description: Information about the review for an order.\n      properties:\n        averageScore:\n          description: The average score for the attributes of the review.\n          format: double\n          nullable: true\n          type: number\n        canReview:\n          description: A value indicating whether the order can be reviewed.\n          type: boolean\n        comments:\n          description: Any comments left by the consumer in the review.\n          type: string\n        isReviewed:\n          description: A value indicating whether the order has been reviewed.\n          type: boolean\n        maximumScore:\n          description: The maximum score that can be given to an attribute of the review.\n          format: double\n          type: number\n        ratingCode:\n          description: The rating code for the review.\n          type: string\n        scores:\n          additionalProperties:\n            format: double\n            type: number\n          description: The scores given for the scored attributes of the review.\n          type: object\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderStatusHistoryItem:\n      description: Information about the status of an order at a specific point in time.\n      properties:\n        confidence:\n          description: The confidence level of the status.\n          type: string\n        dueDate:\n          description: The due date at the date and time associated with the timestamp, if any.\n          format: date-time\n          nullable: true\n          type: string\n        reason:\n          description: |-\n            The reason for the order's status, if known.\n            If your client does not understand this reason, assume that it has no value.\n          type: string\n          x-api-version-from: 2019-05\n        timestamp:\n          description: The timestamp associated with this order status.\n          format: date-time\n          type: string\n        value:\n          description: The order status at the date and time associated with the timestamp.\n          type: string\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderStatusInfo:\n      description: Information about the status of an order.\n      properties:\n        confidence:\n          description: The confidence level of the order's status.\n          type: string\n        currentDueDate:\n          description: The current due date of the order, if any.\n          format: date-time\n          nullable: true\n          type: string\n        delay:\n          description: How delayed the order is.\n          type: string\n        estimatedCompletion:\n          $ref: \"#/components/schemas/ConsumerOrderDateTimeRange\"\n        expectPreorderNotificationAt:\n          description: The date and time the restaurant is expected to accept a preorder, if any.\n          format: date-time\n          nullable: true\n          type: string\n        finishedAt:\n          description: The date and time the order was finished, if completed successfully.\n          format: date-time\n          nullable: true\n          type: string\n        history:\n          description: The history of the order's statuses, if available.\n          items:\n            $ref: \"#/components/schemas/ConsumerOrderStatusHistoryItem\"\n          type: array\n        initialDueDate:\n          description: The initial due date of the order, if any.\n          format: date-time\n          nullable: true\n          type: string\n        isActive:\n          description: A value indicating whether the status of the order may change further.\n          type: boolean\n        isDelayed:\n          description: A value indicating whether the order is delayed.\n          type: boolean\n        isDueDateDynamic:\n          description: |-\n            A value indicating whether the current due date was determined\n            dynamically, for example from the current location of a delivery driver.\n          type: boolean\n          x-api-version-from: 2019-04\n        isRecent:\n          description: A value indicating whether the order is a recent order.\n          type: boolean\n        notifications:\n          $ref: \"#/components/schemas/ConsumerOrderStatusNotificationsInfo\"\n        statusReason:\n          description: |-\n            The reason for the status of the order, if known.\n            If your client does not understand this status reason, assume that it has no value.\n          type: string\n          x-api-version-from: 2019-05\n        timeZone:\n          description: IANA time zone Id associated with the order.\n          type: string\n        tracking:\n          $ref: \"#/components/schemas/ConsumerOrderTrackingInfo\"\n        upcoming:\n          description: The expected upcoming order statuses for the order, if known.\n          items:\n            $ref: \"#/components/schemas/ConsumerOrderUpcomingStatusItem\"\n          type: array\n        value:\n          description: The current status of the order.\n          type: string\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderStatusNotificationsInfo:\n      description: Status updates notification information for an order.\n      properties:\n        channelKey:\n          description: The key for the status updates notification channel, if any.\n          type: string\n        channelName:\n          description: The name of the status updates notification channel.\n          type: string\n        providerName:\n          description: The name of the status updates notification provider, such as PubNub.\n          type: string\n      type: object\n      x-api-version-from: 2018-09\n    ConsumerOrderTaxItem:\n      description: A tax item.\n      properties:\n        name:\n          description: The name of the tax.\n          type: string\n        rate:\n          description: The tax rate.\n          format: double\n          type: number\n        value:\n          description: The value of the tax due.\n          format: double\n          type: number\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderTipItem:\n      description: A tip.\n      properties:\n        amount:\n          description: The cash value of the tip.\n          format: double\n          type: number\n        name:\n          description: The name of the type of the tip.\n          type: string\n        value:\n          description: The value of the tip relative to its type, such as the percentage.\n          format: double\n          type: number\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderTotals:\n      description: A class containing payment totals.\n      properties:\n        accountCredits:\n          description: The total amount of account credit(s) applied to the order.\n          format: double\n          type: number\n        complimentary:\n          description: The total amount of promotional credit(s) applied to the order.\n          format: double\n          type: number\n        discounts:\n          description: The total amount of discount(s) applied to the order.\n          format: double\n          type: number\n        fees:\n          description: The total amount of fees applied to the order.\n          format: double\n          type: number\n        subtotal:\n          description: The subtotal for the order.\n          format: double\n          type: number\n        taxes:\n          description: The total amount of taxes applied to the order.\n          format: double\n          type: number\n        tips:\n          description: The total amount of tips applied to the order.\n          format: double\n          type: number\n        totalPaid:\n          description: The total paid for the order, after taking into account credit, vouchers etc.\n          format: double\n          type: number\n        totalToPay:\n          description: The total to pay for the order.\n          format: double\n          type: number\n        vouchers:\n          description: The total amount of any voucher(s) applied to the order.\n          format: double\n          type: number\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderTrackingInfo:\n      description: Tracking information for an order.\n      properties:\n        channelKey:\n          description: The key for the tracking channel, if any.\n          type: string\n        channelName:\n          description: The name of the tracking channel.\n          type: string\n        providerName:\n          description: The name of the tracking provider, such as PubNub.\n          type: string\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrderUpcomingStatusItem:\n      description: Information about an upcoming status an order is expected to reach.\n      properties:\n        sortOrder:\n          description: The sort order of the upcoming status.\n          format: int32\n          type: integer\n        value:\n          description: The upcoming status for the order.\n          type: string\n      type: object\n      x-api-version-from: 2017-10\n    ConsumerOrdersPlacementErrorResponse:\n      additionalProperties: false\n      description: An error response.\n      example:\n        _links: {}\n        errorCode: ErrorCode\n        errorId: c9e62582-4dbe-4eac-a982-b3fa2cb04fa0\n        message: An error occurred.\n        requestId: 8000024c-0002-fe00-b63f-84710c7967bb\n        statusCode: 500\n        timestamp: 2019-04-16T17:52:50.000Z\n        version: 1.0.1012 (377c04c)\n      properties:\n        _links:\n          additionalProperties:\n            $ref: \"#/components/schemas/ConsumerOrdersPlacementLink\"\n          description: The links information, if any.\n          nullable: false\n          type: object\n        detail:\n          additionalProperties: true\n          description: The optional error detail.\n          nullable: true\n          type: object\n        errorCode:\n          description: The API error code.\n          nullable: false\n          type: string\n        errorId:\n          description: The API error Id.\n          nullable: false\n          type: string\n        fingerprint:\n          description: The error fingerprint, if available.\n          nullable: true\n          type: string\n        message:\n          description: The error message.\n          nullable: true\n          type: string\n        requestId:\n          description: The request Id, if available.\n          nullable: true\n          type: string\n        statusCode:\n          description: The HTTP status code.\n          format: int32\n          type: integer\n        timestamp:\n          description: The timestamp of the error.\n          format: date-time\n          type: string\n        version:\n          description: The version of the API that generated the error.\n          nullable: true\n          type: string\n      type: object\n      x-api-version-from: 1\n    ConsumerOrdersPlacementLink:\n      additionalProperties: false\n      description: A link to an API resource.\n      properties:\n        href:\n          description: The URL of the link.\n          nullable: false\n          type: string\n        templated:\n          description: A value indicating whether the URL is templated.\n          type: boolean\n      type: object\n      x-api-version-from: 1\n    ConsumerOrdersPlacementReferralState:\n      description: Order referral source\n      enum:\n        - None\n        - ReferredByWeb\n      type: string\n      x-api-version-from: 1\n    ConsumerOrdersPlacementRequestV1:\n      additionalProperties: false\n      description: An object representing the request to place an order for a given basket Id.\n      example:\n        applicationId: 4\n        applicationVersion: android-test-version\n        basketId: basket_gh23i_PS4_\n        customerNotes:\n          NoteForDriver: Call me when you get here\n          NoteForRestaurant: No mayonnaise\n        deviceId: Swagger-DeviceId\n        deviceName: Swagger-DeviceName\n        referralState: ReferredByWeb\n        removedIngredientsEnabled: false\n      properties:\n        applicationId:\n          description: The Id of application that is placing the order.\n          format: int32\n          type: integer\n        applicationName:\n          description: The name of application that is placing the order.\n          nullable: true\n          type: string\n        applicationVersion:\n          description: The version of application that is placing the order.\n          nullable: false\n          type: string\n        basketId:\n          description: The basket Id.\n          type: string\n        customerNotes:\n          additionalProperties:\n            type: string\n          description: Dictionary of the customer notes to add to the order. The keys of the dictionary are the notes capabilities that the restaurant has.\n          nullable: true\n          type: object\n        deviceId:\n          description: The identifier/ip of the device that is placing the order.\n          type: string\n        deviceName:\n          description: The name of the device that is placing the order.\n          type: string\n        referralState:\n          allOf:\n            - $ref: \"#/components/schemas/ConsumerOrdersPlacementReferralState\"\n          description: Order referral source\n        removedIngredientsEnabled:\n          description: A value indicating whether the basket contains removed ingredients.\n          type: boolean\n      required:\n        - basketId\n        - applicationId\n        - applicationVersion\n        - deviceId\n        - deviceName\n      type: object\n      x-api-version-from: 1\n      x-api-version-to: 1\n    ConsumerOrdersPlacementRequestV2:\n      additionalProperties: false\n      description: An object representing the request to place an order for a given basket Id.\n      example:\n        basketId: basket_gh23i_PS4_\n        customerNotes:\n          NoteForDriver: Call me when you get here\n          NoteForRestaurant: No mayonnaise\n        referralState: ReferredByWeb\n      properties:\n        basketId:\n          description: The basket Id.\n          type: string\n        customerNotes:\n          additionalProperties:\n            type: string\n          description: Dictionary of the customer notes to add to the order. The keys of the dictionary are the notes capabilities that the restaurant has.\n          nullable: true\n          type: object\n        referralState:\n          allOf:\n            - $ref: \"#/components/schemas/ConsumerOrdersPlacementReferralState\"\n          description: Order referral source\n      required:\n        - basketId\n      type: object\n      x-api-version-from: 2\n    ConsumerOrdersPlacementResponse:\n      additionalProperties: false\n      description: An order placement response.\n      properties:\n        friendlyOrderId:\n          description: The friendly order Id.\n          nullable: false\n          type: string\n        orderId:\n          description: The id of the order.\n          nullable: false\n          type: string\n      type: object\n      x-api-version-from: 1\n    ConsumerSegment:\n      enum:\n        - All\n        - NewToRestaurant\n      type: string\n    ConsumerStatus:\n      description: \"\"\n      enum:\n        - 0\n        - 1\n        - 2\n      type: integer\n      x-enumNames:\n        - Undefined\n        - NewConsumer\n        - ReturnConsumer\n    CourierFeedbackRequest:\n      example:\n        additionalComment: Went above and beyond\n        isPositiveFeedback: true\n        reasons:\n          - had thermal bag\n          - friendly\n      properties:\n        additionalComment:\n          description: An additional free form comment accompanying the feedback\n          maxLength: 210\n          nullable: true\n          type: string\n        isPositiveFeedback:\n          description: A flag to determine if the feedback is overall positive\n          type: boolean\n        reasons:\n          description: A list of reasons describing the feedback\n          items:\n            type: string\n          nullable: false\n          type: array\n      required:\n        - isPositiveFeedback\n      type: object\n    CourierStatus:\n      description: The courier application status. A courier could have one of these status associated with their application, here is a brief example of each status. \u003cp\u003e`ON-BOARDING` - Courier is actively trying to be on-boarded and will progress through the courier on-boarding program\u003c/p\u003e\u003cp\u003e`STALLED` - Courier has not proceeded with a step inside the courier on-boarding program for 14 days and will not to proceed further\u003c/p\u003e\u003cp\u003e`SURPLUS` - Zone has been closed for On-boarding; courier cannot proceed until zone on-boarding re-opens\u003c/p\u003e\u003cp\u003e`ACTIVE` - Courier has interacted with the app within the last two weeks and will be automatically scheduled based on their availability, receive notifications and may complete orders\u003c/p\u003e\u003cp\u003e`INACTIVE` - Courier has not interacted with the app for at least two weeks, and will not be scheduled for shifts. May interact with the app to convert their status to active, and be eligible for shifts and deliveries\u003c/p\u003e\u003cp\u003e`RELIABILITY_ISSUES` - No longer in use, historically account was suspended due to frequent flakes or rejected orders\u003c/p\u003e\u003cp\u003e`VEHICLE_ISSUES` - Account suspended due to reported vehicle problems, but may reactivate by contacting courier support\u003c/p\u003e\u003cp\u003e`INCIDENT_ISSUES` - Account suspended indefinitely due to significant concern (used exclusively by Incidents team)\u003c/p\u003e\u003cp\u003e`OTHER_ACCOUNT_ISSUES` - General account suspension, usually in connection with problems not categorised under regular courier status\u003c/p\u003e\u003cp\u003e`EXPIRED_DOCUMENTS` - General account suspension, typically for expired right to work documentation\u003c/p\u003e\u003cp\u003e`REJECTED` - Applicant did not meet minimum requirements for access to the network\u003c/p\u003e\u003cp\u003e`WITHDRAWN` - Applicant decided not to proceed with onboarding\u003c/p\u003e\u003cp\u003e`BANNED` - Courier’s access to the network was revoked following escalation\u003c/p\u003e\u003cp\u003e`LEFT_NETWORK` - Courier voluntarily left the network\u003c/p\u003e\n      enum:\n        - ONBOARDING\n        - STALLED\n        - SURPLUS\n        - ACTIVE\n        - INACTIVE\n        - RELIABILITY_ISSUES\n        - VEHICLE_ISSUES\n        - INCIDENT_ISSUES\n        - OTHER_ACCOUNT_ISSUES\n        - EXPIRED_DOCUMENTS\n        - REJECTED\n        - WITHDRAWN\n        - BANNED\n        - LEFT_NETWORK\n      type: string\n    CourierSync:\n      description: The courier sync payload holds the updated values for deliveries, personal information, location and shifts associated with a particular courier.\n      properties:\n        cancelledOrderSummaries:\n          description: List with a summary of all the cancelled orders associated with the courier.\n          items:\n            $ref: \"#/components/schemas/OrderCancelled\"\n          maxItems: 1\n          minItems: 1\n          type: array\n        checkedInState:\n          $ref: \"#/components/schemas/CheckedInState\"\n          description: The state of a courier on a shift. A courier might be checked in or not.\n        doNotUseStatus:\n          $ref: \"#/components/schemas/DoNotUseStatus\"\n          description: The courier usability status.\n        earlyCheckoutAvailable:\n          description: The possibility of an early checkout of the shift is available when true.\n          type: boolean\n        firstName:\n          description: First name of the courier in which the updated sync payload was requested for.\n          example: John\n          type: string\n        flexStateForAssignedZones:\n          description: List of flex state types for each delivery zone the courier is currently on a delivery process or have already delivered orders.\n          items:\n            $ref: \"#/components/schemas/CourierZoneFlexState\"\n          maxItems: 2\n          minItems: 2\n          type: array\n        isLiveFlexStatesAvailable:\n          description: The live flex states are enabled when true.\n          type: boolean\n        jobs:\n          description: The list of jobs assigned to the courier.\n          items:\n            $ref: \"#/components/schemas/JobDetails\"\n          maxItems: 2\n          minItems: 2\n          type: array\n        lastName:\n          description: Last name of the courier in which the updated sync payload was requested for.\n          example: Doe\n          type: string\n        localSaveSeconds:\n          description: Static value with the amount of seconds the application is supposed to save a fresh courier location. The logic implemented expects the application to save a new location when the elapsed seconds is greater equal than local send seconds.\n          example: 5\n          format: integer\n          type: number\n        name:\n          description: Name of the courier in which the updated sync payload was requested for.\n          example: John Doe\n          type: string\n        orderAcceptanceTimes:\n          $ref: \"#/components/schemas/OrderAcceptanceTimes\"\n          description: The acceptance times used to present the offer to the courier.\n        remainingJobs:\n          description: Amount of remaining jobs assignable to the courier.\n          example: 2\n          format: integer\n          type: number\n        serverGateMeters:\n          description: Static value with the distance in meters the application is supposed to send a fresh location to the server. The logic implemented expects the application to send a new location to the server when the distance to the previous location is greater equal than server gate meters.\n          example: 0\n          format: integer\n          type: number\n        serverSendSeconds:\n          description: Static value with the amount of seconds the application is supposed to send a fresh location to the server. The logic implemented expects the application to send a new location to the server when the elapsed seconds is greater equal than server send seconds.\n          example: 60\n          format: integer\n          type: number\n        shift:\n          $ref: \"#/components/schemas/Shift\"\n          description: The shift details in which the courier is signed up for.\n        status:\n          $ref: \"#/components/schemas/CourierStatus\"\n          description: The courier application status.\n        timestamp:\n          description: Current timestamp for the courier sync updated payload.\n          example: 1593444834\n          format: long\n          type: number\n        timezone:\n          description: Time zone in which the courier shift was started.\n          example: GMT-6\n          type: string\n        topUpPromotion:\n          $ref: \"#/components/schemas/TopUpPromotion\"\n          description: Calculated top up promotion settings for the courier.\n        totalDeliveries:\n          description: Number of deliveries completed by the courier.\n          example: 11\n          format: integer\n          type: number\n      type: object\n    CourierZoneFlexState:\n      description: The courier zone flex state object, contains the flex state type and the flex availability status for a given delivery zone.\n      properties:\n        deliveryZoneId:\n          description: Delivery zone identifier for flex state.\n          example: 53c3afb5-fcs5-4941-be6d-2179f812sc8d\n          type: string\n        deliveryZoneName:\n          description: Delivery zone name for flex state.\n          example: Winnipeg SW\n          type: string\n        flexAvailable:\n          description: Flex states are enabled when true\n          type: boolean\n        flexStateType:\n          $ref: \"#/components/schemas/SyncFlexStateType\"\n          description: \u003cp\u003eThe flex state type changes according to the exponential moving average and is used as a reference to bring more couriers to suffice the demand in a given delivery zone.\u003c/p\u003e \u003cp\u003eIf the flex state type is \"Off\", it means no shifts will be offered for the delivery zone.\u003c/p\u003e \u003cp\u003eIf the state is \"CLOSED\", only scheduled shifts will be allowed for the delivery zone.\u003c/p\u003e \u003cp\u003eIf the state is \"SEEKING\", the shift offers are going to be made across the courier network in order to suffice the current demand.\u003c/p\u003e \u003cp\u003eIf the state is \"OPEN\", it means demand is high and couriers from all over the courier network are allowed to create shifts for themselves to suffice the current demand.\u003c/p\u003e \u003cp\u003eIf the state is \"CODE_RED\", it means not only can everyone create shifts for themselves for the delivery zone but also couriers from other delivery zones might reallocate to help suffice the demand of that particular delivery zone.\u003c/p\u003e\n      type: object\n    CreateAttemptedDeliveryQuery:\n      example:\n        ReasonCode: ProblemWithAddress\n      properties:\n        ReasonCode:\n          description: The reason the attempted delivery event was created\n          enum:\n            - ProblemWithAddress\n            - NoAnswer\n          type: string\n      type: object\n    CreateCancellationQuery:\n      additionalProperties: false\n      properties:\n        comments:\n          description: Additional comments\n          nullable: true\n          type: string\n        reasonCode:\n          description: Reason for order cancellation\n          enum:\n            - rest_cancelled_customer_requested\n            - rest_cancelled_customer_absent\n            - rest_cancelled_out_of_stock\n            - rest_cancelled_drivers_unavailable\n            - rest_cancelled_fake_order\n            - rest_cancelled_too_busy\n            - rest_cancelled_other\n          nullable: true\n          type: string\n      type: object\n    CreateDeal:\n      properties:\n        Date:\n          description: \"`YYYY-MM-DDThh:mm:ssZ (UTC)`\"\n          type: string\n        DealGroups:\n          items:\n            $ref: \"#/components/schemas/CreateDealGroup\"\n          type: array\n        ProductId:\n          type: string\n        Quantity:\n          format: integer\n          type: number\n      type: object\n    CreateDealGroup:\n      properties:\n        DealGroupId:\n          type: string\n        Products:\n          items:\n            $ref: \"#/components/schemas/CreateProduct\"\n          type: array\n      type: object\n    CreateGeoLocation:\n      properties:\n        Latitude:\n          format: decimal\n          type: number\n        Longitude:\n          format: decimal\n          type: number\n      type: object\n    CreateLocation:\n      properties:\n        GeoLocation:\n          allOf:\n            - $ref: \"#/components/schemas/CreateGeoLocation\"\n          description: Not available across platform yet, but applied for future proofing.\n          nullable: true\n        ZipCode:\n          type: string\n      type: object\n    CreateMenuItemRequest:\n      example:\n        Category:\n          Id: \"12\"\n          Name: Pizzas\n        Description: A cheesy pizza, covered in cheese, with extra cheesy bits\n        HasAllergens: false\n        Labels:\n          - Vegetarian\n        Name: Cheese Pizza\n        OptionGroups:\n          - Id: \"1\"\n            Modifiers:\n              - AdditionPrice: 0.51\n                Id: \"123\"\n                Name: Garlic\n                Variations:\n                  - AdditionalPrice: 0.12\n                    ModifierGroupId: \"123\"\n                    Selected: true\n                    VariationId: \"1\"\n                    VariationName: Small\n                  - AdditionalPrice: 0.23\n                    ModifierGroupId: \"123\"\n                    Selected: true\n                    VariationId: \"2\"\n                    VariationName: Large\n            Name: Crusts\n        PreferenceGroups:\n          - Id: \"1\"\n            Modifiers:\n              - AdditionPrice: 0.51\n                Id: \"123\"\n                Name: More cheese\n                Variations:\n                  - AdditionalPrice: 0.12\n                    ModifierGroupId: \"123\"\n                    Selected: true\n                    VariationId: \"1\"\n                    VariationName: Small\n                  - AdditionalPrice: 0.23\n                    ModifierGroupId: \"123\"\n                    Selected: true\n                    VariationId: \"2\"\n                    VariationName: Large\n            Name: Toppings\n        ReceiptNumber: 123a\n        Variations:\n          - Id: \"1\"\n            Name: Small\n            Price: 1\n          - Id: \"2\"\n            Name: Large\n            Price: 2.5\n      properties:\n        Category:\n          $ref: \"#/components/schemas/CategoryRequest\"\n          description: Category of the Menu Item\n        Description:\n          description: Description of the Menu Item\n          type: string\n        HasAllergens:\n          description: Whether the menu item has any allergens\n          type: boolean\n        Labels:\n          description: Labels of the Menu Item\n          items:\n            type: string\n          type: array\n          uniqueItems: false\n        Name:\n          description: Name of the Menu Item\n          type: string\n        OptionGroups:\n          description: A list of options groups of the Menu Item\n          items:\n            $ref: \"#/components/schemas/UpdateModifierGroupRequest\"\n          maxLength: 100\n          type: array\n          uniqueItems: false\n        PreferenceGroups:\n          description: A list of preference groups of the Menu Item\n          items:\n            $ref: \"#/components/schemas/UpdateModifierGroupRequest\"\n          maxLength: 100\n          type: array\n          uniqueItems: false\n        ReceiptNumber:\n          description: The Receipt number or kitchen number of the Menu Item\n          type: string\n        Variations:\n          description: Any variations of the Menu Item\n          items:\n            $ref: \"#/components/schemas/UpdateMenuItemVariationRequest\"\n          maxLength: 75\n          type: array\n          uniqueItems: false\n      required:\n        - Name\n      type: object\n    CreateMessageModel:\n      description: Information needed to create a message for the Scoober ops team\n      properties:\n        city:\n          deprecated: true\n          description: City this order is located in.\n          example: london\n          nullable: true\n          type: string\n        countryCode:\n          description: 2 letter ISO code for the country this ticket is about.\n          example: gb\n          nullable: true\n          type: string\n        description:\n          description: Description, main body, of the message to send.\n          example: Scoober Test\n          type: string\n        reason:\n          description: Scoober contact reason for this ticket.\n          example: front_line_reason_food_quality_cold_crushed_spilled\n          type: string\n        restaurantId:\n          description: Restaurant Id of the order.\n          example: \"1234567\"\n          nullable: true\n          type: string\n        scooberJobId:\n          description: Scoober job ID, if known.\n          example: en\n          nullable: true\n          type: string\n        status:\n          description: Status of the Zendesk ticket.\n          example: new\n          type: string\n        subject:\n          description: Subject of the message to send.\n          example: Scoober Test\n          type: string\n        ticketId:\n          description: Zendesk ticket ID this message is about.\n          example: 1234\n          format: int64\n          type: integer\n      required:\n        - description\n        - reason\n        - status\n        - subject\n        - ticketId\n      type: object\n    CreateModifier:\n      properties:\n        ModifierId:\n          type: string\n        Quantity:\n          format: integer\n          type: number\n      type: object\n    CreateModifierGroup:\n      properties:\n        ModifierGroupId:\n          type: string\n        Modifiers:\n          items:\n            $ref: \"#/components/schemas/CreateModifier\"\n          type: array\n      type: object\n    CreateOffersRequest:\n      description: The request object for creating of new offer group.\n      example:\n        daysOfWeek:\n          - Monday\n          - Friday\n        endDate: 2019-09-03\n        endTime: 13:00:00\n        offerDescription: This is offer description\n        offerTemplateId: 333\n        qualifyingValue:\n          currency: GBP\n          value: 1000\n        startDate: 2019-08-06\n        startTime: 12:00:00\n      properties:\n        daysOfWeek:\n          description: Days of week to run the offer\n          items:\n            enum:\n              - Sunday\n              - Monday\n              - Tuesday\n              - Wednesday\n              - Thursday\n              - Friday\n              - Saturday\n            type: string\n          type: array\n          uniqueItems: true\n        endDate:\n          description: The date when offer ends\n          format: date\n          nullable: true\n          type: string\n        endTime:\n          description: Timestamp when offer ends during the day\n          format: time\n          nullable: true\n          type: string\n        freeProducts:\n          description: The product that gets 100% discount applied\n          items:\n            properties:\n              id:\n                description: The unique identifier of the product.\n                nullable: false\n                type: string\n              modifiers:\n                description: The collection of preselected modifiers for the item.\n                items:\n                  properties:\n                    modifierId:\n                      description: The unique identifier of the modifier.\n                      nullable: false\n                      type: string\n                    quantity:\n                      description: The required quantity of the modifier.\n                      format: int32\n                      nullable: false\n                      type: integer\n                  type: object\n                nullable: true\n                type: array\n            type: object\n          nullable: true\n          type: array\n        offerDescription:\n          description: The description of the offer.\n          nullable: true\n          type: string\n        offerTemplateId:\n          description: Internal id of offer template\n          format: int32\n          nullable: false\n          type: integer\n        qualifyingProductIds:\n          description: One of those products needed to be included in the collection of products to make offer applicable\n          items:\n            type: string\n          nullable: true\n          type: array\n        qualifyingValue:\n          description: Minimum qualifying value for offer to be applied\n          nullable: true\n          properties:\n            currency:\n              description: Currency code in ISO 4217 format\n              nullable: false\n              type: string\n            value:\n              description: Smallest unit of local currency\n              format: int32\n              nullable: false\n              type: integer\n          type: object\n        startDate:\n          description: The date when offer starts\n          format: date\n          nullable: true\n          type: string\n        startTime:\n          description: Timestamp when offer starts during the day\n          format: time\n          nullable: true\n          type: string\n      type: object\n    CreateOrderDetails:\n      properties:\n        Location:\n          $ref: \"#/components/schemas/CreateLocation\"\n      type: object\n    CreateProduct:\n      properties:\n        Date:\n          description: \"`YYYY-MM-DDThh:mm:ssZ (UTC)`\"\n          type: string\n        ModifierGroups:\n          items:\n            $ref: \"#/components/schemas/CreateModifierGroup\"\n          nullable: true\n          type: array\n        ProductId:\n          type: string\n        Quantity:\n          format: integer\n          type: number\n        RemovedIngredients:\n          items:\n            $ref: \"#/components/schemas/CreateRemovedIngredient\"\n          nullable: true\n          type: array\n      type: object\n    CreateRemovedIngredient:\n      properties:\n        Details:\n          type: string\n      type: object\n    CreateRequest:\n      description: The request object for creating a basket.\n      properties:\n        Deals:\n          description: All deals to added to new basket.\n          items:\n            allOf:\n              - $ref: \"#/components/schemas/CreateDeal\"\n            description: Individual deal to added to new basket.\n          nullable: true\n          type: array\n        MenuGroupId:\n          type: string\n        OrderDetails:\n          allOf:\n            - $ref: \"#/components/schemas/CreateOrderDetails\"\n          description: Information needed to allow an order to be placed on a basket.\n        Products:\n          description: All products to added to new basket.\n          items:\n            allOf:\n              - $ref: \"#/components/schemas/CreateProduct\"\n            description: Individual product to added to new basket.\n          nullable: true\n          type: array\n        RestaurantSeoName:\n          description: A unique per tenant identifier for a restaurant used for external operations.\n          nullable: true\n          type: string\n      type: object\n    CreateRestaurantCompensationQuery:\n      example:\n        Comments: Driver had just left the restaurant\n        ReasonCode: OnItsWay\n      properties:\n        Comments:\n          description: Any other comments to add to the request\n          type: string\n        ReasonCode:\n          description: The reason why compensation is due\n          enum:\n            - NotSet\n            - BeingPrepared\n            - OnItsWay\n            - Delivered\n            - Unknown\n          type: string\n      type: object\n    CreateSupportTicketRequest:\n      description: Request containing support ticket information\n      example:\n        message: Change weekly budget\n        subject: Top Placement - Interest\n        type: top_placement__interest\n      properties:\n        message:\n          description: The message with the support details\n          type: string\n        subject:\n          description: Subject of the ticket\n          type: string\n        type:\n          description: Type the ticket belongs to\n          type: string\n      type: object\n    CreateTicketModel:\n      description: Information needed to create a ticket on the Just Eat Zendesk instance for a Scoober delivery support incident\n      properties:\n        city:\n          description: City of the delivery in question of this ticket.\n          example: london\n          nullable: true\n          type: string\n        country:\n          description: 2 letter ISO code of the country this pertains to. Will be inferred from queried API.\n          example: gb\n          nullable: true\n          type: string\n        courier:\n          description: Courier who created this query.\n          example: scoober\n          nullable: true\n          type: string\n        description:\n          description: Description (main body) of the ticket.\n          example: Scoober Test\n          type: string\n        externalId:\n          description: We will note this as incident/ticket/query ID used by the calling party and include it for their future reference.\n          example: slack:1\n          type: string\n        language:\n          description: 2 letter ISO code of the language for the ticket. Will be inferred from queried API.\n          example: en\n          nullable: true\n          type: string\n        reason:\n          description: Scoober reason code for the creation of this ticket.\n          example: delivery__spilled_food\n          type: string\n        requesterEmail:\n          description: Ticket requester e-mail address.\n          example: requester@scoober.com\n          nullable: true\n          type: string\n        requesterName:\n          description: Ticket requester name.\n          example: scoober\n          nullable: true\n          type: string\n        responseUrl:\n          description: Where should we respond to with progress on this request?\n          example: https://zenbox-api.bob.external.tkwy-staging.io/ticket/response\n          type: string\n        scooberJobId:\n          description: Scoober job ID for this order.\n          example: \"1234\"\n          nullable: true\n          type: string\n        senderType:\n          description: Scoober transmits a sender type value.\n          example:\n            - internal\n          items:\n            type: string\n          nullable: true\n          type: array\n        status:\n          description: \"Ticket status to set on creation of this ticket. Possible values: New, pending, solved.\"\n          example: new\n          nullable: true\n          type: string\n        subject:\n          description: Subject of the ticket.\n          example: Scoober Test\n          type: string\n      required:\n        - description\n        - externalId\n        - reason\n        - responseUrl\n        - subject\n      type: object\n    CurrentUserResponse:\n      example:\n        accountType: Registered\n        email: example@just-eat.com\n        firstName: Bob\n        globalUserId: 8It2lEaJjG82nJtxO00Iab0CoF0=\n        lastName: Smith\n      properties:\n        accountType:\n          description: The account type of the consumer.\n          enum:\n            - Registered\n            - Guest\n          type: string\n        email:\n          description: The consumer's email address.\n          format: email\n          nullable: true\n          type: string\n        firstName:\n          description: The consumer's first name.\n          nullable: true\n          type: string\n        globalUserId:\n          description: Global identifier for consumer and tenant.\n          nullable: true\n          type: string\n        lastName:\n          description: The consumer's last name.\n          nullable: true\n          type: string\n      type: object\n    CustomerOrderDetailsErrorResponse:\n      description: The error object returned when an operation fails\n      example:\n        ErrorType: OrderTimeNotFound\n        Exceptions: []\n        Message: Order Time not found for Basket example-basket-id\n      properties:\n        ErrorType:\n          $ref: \"#/components/schemas/CustomerOrderDetailsErrorType\"\n          description: Value of the error thrown\n        Exceptions:\n          description: List of exceptions thrown during the request\n          items:\n            type: string\n          type: array\n        Message:\n          description: Detailed message on the error thrown\n          type: string\n      type: object\n    CustomerOrderDetailsErrorType:\n      enum:\n        - None\n        - Unknown\n        - OrderTimeNotFound\n        - OrderAddressNotFound\n        - BasketNotFound\n        - AvailabilityNotFound\n        - Unauthorized\n        - UpdateOrderAddressError\n        - UpdateOrderTimeError\n        - DependencyError\n        - InvalidZipcode\n        - InvalidMenuId\n      type: string\n    CustomisationResponse:\n      description: Information about initial options to show to user\n      example:\n        config:\n          liveChatEnabled: true\n          personalisedHelpEnabled: true\n        dataLayer:\n          helpData_features: o:cancel_order|o:bad_item|o:call_restaurant|t:open_chatbot|t:email_justeat|t:call_justeat\n          helpData_helpSessionId: helpsessionid\n          helpData_isPilot: 32\n          trData_menuType: collection\n          trData_trId: null\n          transactionData_dateDiff: -1800\n          transactionData_nTotalItems: 0\n          transactionData_newTransactionId: orderid\n          transactionData_orderDelay: null\n          transactionData_orderStatus: Accepted\n        experimentEvents:\n          - id: EX-1742\n            name: bandit_exp_new_carousels_2\n            parentId: \"1234567890\"\n            platform: optimizely_fullstack\n            variantName: variant_d\n            version: \"1\"\n        helpSessionId: helpsessionid\n        personalisation:\n          callRestaurantAction:\n            action: \"01234567890\"\n            buttonEvent:\n              action: click_call_restaurant\n              category: engagement\n              label: call restaurant\n              value: 0\n            buttonType: Primary\n            data: {}\n            department: LiveChat\n            id: CallRestaurant\n            notes: note\n            postText: []\n            preText: []\n            title: Call the restaurant\n            type: Call\n          orderActions:\n            - action: /applications/consumerhelp/flows/cancellation/uk/orderid/start\n              buttonEvent:\n                action: click_cancel_order\n                category: engagement\n                label: helpflow\n                value: 0\n              buttonType: Secondary\n              data: {}\n              department: LiveChat\n              id: Cancel\n              notes: note\n              postText: []\n              preText: []\n              title: I want to cancel my order\n              type: ChapiGet\n            - action: /applications/consumerhelp/flows/baditems/uk/orderid/start\n              buttonEvent:\n                action: click_bad_item\n                category: engagement\n                label: helpflow\n                value: 0\n              buttonType: Secondary\n              data: {}\n              department: LiveChat\n              id: BadItem\n              notes: note\n              postText: []\n              preText: []\n              title: I'm unhappy with my order\n              type: ChapiGet\n        topLevelActions:\n          - action: null\n            buttonEvent:\n              action: click_open_chatbot\n              category: engagement\n              label: open chatbot\n              value: 0\n            buttonType: Primary\n            data: {}\n            department: LiveChat\n            id: StartChatBot\n            notes: note\n            postText: []\n            preText: []\n            title: Chat to us\n            type: Chatbot\n          - action: info@just-eat.co.uk\n            buttonEvent:\n              action: click_email_justeat\n              category: engagement\n              label: email justeat\n              value: 0\n            buttonType: Secondary\n            data: {}\n            department: LiveChat\n            id: EmailJustEat\n            notes: note\n            postText: []\n            preText: []\n            title: Email our happy helpers\n            type: Email\n          - action: 0344 243 7777\n            buttonEvent:\n              action: click_call_justeat\n              category: engagement\n              label: call justeat\n              value: 0\n            buttonType: Secondary\n            data: {}\n            department: LiveChat\n            id: PhoneJustEat\n            notes: note\n            postText: []\n            preText: []\n            title: Phone a human\n            type: Call\n      properties:\n        config:\n          properties:\n            liveChatEnabled:\n              description: Should we enable Live Chat\n              type: boolean\n            personalisedHelpEnabled:\n              description: Should we show Personalised Help\n              type: boolean\n          type: object\n        experimentEvents:\n          description: list of experiments running for this client\n          items:\n            $ref: \"#/components/schemas/ExperimentEvent\"\n          type: array\n        helpSessionId:\n          description: Unique id for this help session\n          type: string\n        personalisation:\n          properties:\n            callRestaurantAction:\n              $ref: \"#/components/schemas/HelpAction\"\n            dataLayer:\n              additionalProperties: true\n              description: Key/values to be passed to analytics\n              type: object\n            orderActions:\n              description: Actions pertaining to the order\n              items:\n                $ref: \"#/components/schemas/HelpAction\"\n              type: array\n            topLevelActions:\n              description: Top-level actions not necessarily pertaining to the order\n              items:\n                $ref: \"#/components/schemas/HelpAction\"\n              type: array\n          type: object\n      type: object\n    CustomisationResponseWeb:\n      description: Information about initial options to show to user\n      example:\n        config:\n          liveChatEnabled: true\n          personalisedHelpEnabled: true\n        dataLayer:\n          helpData_features: o:cancel_order|o:bad_item|o:call_restaurant|t:open_chatbot|t:email_justeat|t:call_justeat\n          helpData_helpSessionId: helpsessionid\n          helpData_isPilot: 32\n          trData_menuType: collection\n          trData_trId: null\n          transactionData_dateDiff: -1800\n          transactionData_nTotalItems: 0\n          transactionData_newTransactionId: orderid\n          transactionData_orderDelay: null\n          transactionData_orderStatus: Accepted\n        helpSessionId: helpsessionid\n        order:\n          friendlyReference: \"1234567890\"\n          id: alphanumericid\n          status:\n            dateText: 11:48\n            isActive: true\n            isFinishedWithNegativeOutcome: false\n            isFinishedWithPositiveOutcome: false\n            isForDelivery: true\n            preAcceptance: false\n            preamble: Delivering around\n            statusText: The restaurant has confirmed the delivery time. The countdown to your first bite has begun...\n            value: Accepted\n        personalisation:\n          callRestaurantAction:\n            action: \"01234567890\"\n            buttonEvent:\n              action: click_call_restaurant\n              category: engagement\n              label: call restaurant\n              value: 0\n            buttonType: Primary\n            data: {}\n            department: LiveChat\n            id: CallRestaurant\n            notes: note\n            postText: []\n            preText: []\n            title: Call the restaurant\n            type: Call\n          orderActions:\n            - action: /applications/consumerhelp/flows/cancellation/uk/orderid/start\n              buttonEvent:\n                action: click_cancel_order\n                category: engagement\n                label: helpflow\n                value: 0\n              buttonType: Secondary\n              data: {}\n              department: LiveChat\n              id: Cancel\n              notes: note\n              postText: []\n              preText: []\n              title: I want to cancel my order\n              type: ChapiGet\n            - action: /applications/consumerhelp/flows/baditems/uk/orderid/start\n              buttonEvent:\n                action: click_bad_item\n                category: engagement\n                label: helpflow\n                value: 0\n              buttonType: Secondary\n              data: {}\n              department: LiveChat\n              id: BadItem\n              notes: note\n              postText: []\n              preText: []\n              title: I'm unhappy with my order\n              type: ChapiGet\n        restaurant:\n          name: Bob's kebabs\n          telephone: +44 1234 123123\n          thumbnail: https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTRnTQ8sfP8yxicqMBoAymdKzrpjhtwSeCIXdpqhZ7Hrj8FLBfB\n        topLevelActions:\n          - action: null\n            buttonEvent:\n              action: click_open_chatbot\n              category: engagement\n              label: null\n              value: null\n            buttonType: Primary\n            data: null\n            department: LiveChat\n            id: StartChatBot\n            notes: note\n            postText: []\n            preText: []\n            title: Chat to us\n            type: Chatbot\n          - action: info@just-eat.co.uk\n            buttonEvent:\n              action: click_email_justeat\n              category: engagement\n              label: null\n              value: null\n            buttonType: Secondary\n            data: null\n            department: LiveChat\n            id: EmailJustEat\n            notes: note\n            postText: []\n            preText: []\n            title: Email our happy helpers\n            type: Email\n          - action: 0344 243 7777\n            buttonEvent:\n              action: click_call_justeat\n              category: engagement\n              label: null\n              value: null\n            buttonType: Secondary\n            data: null\n            department: LiveChat\n            id: PhoneJustEat\n            notes: note\n            postText: []\n            preText: []\n            title: Phone a human\n            type: Call\n        user:\n          isLoggedIn: true\n          name: John\n      properties:\n        config:\n          description: General config / feature toggles\n          properties:\n            liveChatEnabled:\n              description: Should we enable Live Chat\n              type: boolean\n            personalisedHelpEnabled:\n              description: Should we show Personalised Help\n              type: boolean\n          type: object\n        helpSessionId:\n          description: Unique id for this help session\n          type: string\n        order:\n          description: The customer's most recent or specified order\n          properties:\n            friendlyReference:\n              description: Friendly order id.  Usually numeric\n              type: string\n            id:\n              description: Alphanumeric order id\n              type: string\n            status:\n              description: Information related to the status of the order\n              properties:\n                dateText:\n                  description: The date / time to display to the customer\n                  type: string\n                isActive:\n                  description: Is this an active order?\n                  type: boolean\n                isFinishedWithNegativeOutcome:\n                  description: Is this order in a final, unhappy (e.g. Cancelled) state?\n                  type: boolean\n                isFinishedWithPositiveOutcome:\n                  description: Is this order in a final, happy, state?\n                  type: boolean\n                isForDelivery:\n                  description: Is this a delivery order (as opposed to collection)?\n                  type: boolean\n                preAcceptance:\n                  description: Is this order still awaiting acceptance from a restaurant?\n                  type: boolean\n                preamble:\n                  description: Friendly 'preamble' text to display to the customer\n                  type: string\n                statusText:\n                  description: Friendly text to display to the customer\n                  type: string\n                value:\n                  description: The consumer status of the order\n                  type: string\n              type: object\n          type: object\n        personalisation:\n          description: The actions that are relevant to this customer / order\n          properties:\n            callRestaurantAction:\n              $ref: \"#/components/schemas/HelpAction\"\n              description: Action to call the restaurant, if possible at this time\n            dataLayer:\n              additionalProperties: true\n              description: Key/values to be passed to analytics\n              type: object\n            orderActions:\n              description: Actions pertaining to the order\n              items:\n                $ref: \"#/components/schemas/HelpAction\"\n              type: array\n            topLevelActions:\n              description: Top-level actions not necessarily pertaining to the order\n              items:\n                $ref: \"#/components/schemas/HelpAction\"\n              type: array\n          type: object\n        restaurant:\n          description: The restaurant of the most recent or specified order\n          properties:\n            name:\n              description: Name of the restaurant\n              type: string\n            telephone:\n              description: Restaurant's telephone number\n              type: string\n            thumbnail:\n              description: URI for the restaurant's thumbnail image\n              type: string\n          type: object\n        user:\n          description: The current user\n          properties:\n            isLoggedIn:\n              description: Is the user currently logged in?\n              type: boolean\n            name:\n              description: The user's name\n              type: string\n          type: object\n      type: object\n    DayOfWeek:\n      description: \"\"\n      enum:\n        - 0\n        - 1\n        - 2\n        - 3\n        - 4\n        - 5\n        - 6\n      type: integer\n      x-enumNames:\n        - Sunday\n        - Monday\n        - Tuesday\n        - Wednesday\n        - Thursday\n        - Friday\n        - Saturday\n    Deal:\n      properties:\n        BasketProductIds:\n          items:\n            type: string\n          type: array\n        CategoryId:\n          type: string\n        DealGroups:\n          items:\n            $ref: \"#/components/schemas/DealGroup\"\n          type: array\n        Name:\n          type: string\n        ProductId:\n          type: string\n        Quantity:\n          format: integer\n          type: number\n        TotalPrice:\n          format: decimal\n          type: number\n        Variation:\n          nullable: true\n          type: string\n      type: object\n    DealGroup:\n      properties:\n        DealGroupId:\n          type: string\n        Products:\n          items:\n            $ref: \"#/components/schemas/DealProduct\"\n          type: array\n      type: object\n    DealItemVariation:\n      example:\n        additionPrice: 50\n        dealItemVariationId: \"8548153\"\n        maxChoices: 1\n        minChoices: 0\n      properties:\n        additionPrice:\n          description: Selecting this modifier will increase the base price of the variation by this amount in the minor unit of the currency.\n          format: int32\n          type: number\n        dealItemVariationId:\n          description: A referenced variation id that can be a part of a deal group.\n          type: string\n        maxChoices:\n          description: The maximum number of times this deal item variation can be chosen within a given deal group.\n          format: int32\n          type: integer\n        minChoices:\n          description: The minimum number of times this deal item variation can be chosen within a given deal group.\n          format: int32\n          type: integer\n      type: object\n    DealProduct:\n      properties:\n        ModifierGroups:\n          items:\n            $ref: \"#/components/schemas/ModifierGroup\"\n          nullable: true\n          type: array\n        Name:\n          type: string\n        ProductId:\n          type: string\n        Quantity:\n          format: integer\n          type: number\n        RemovedIngredients:\n          items:\n            $ref: \"#/components/schemas/RemovedIngredient\"\n          nullable: true\n          type: array\n        TotalPrice:\n          format: decimal\n          type: number\n        Variation:\n          nullable: true\n          type: string\n      type: object\n    DeliveryDriverInfo:\n      additionalProperties: false\n      properties:\n        arrivalTimeAtRestaurant:\n          description: The ISO-8601 datetime arrival time of the driver\n          format: date-time\n          nullable: true\n          type: string\n        deliveryState:\n          description: Current state of the delivery\n          enum:\n            - Accepted\n            - TransmissionFailed\n          nullable: true\n          type: string\n        driverContactNumber:\n          description: The driver's contact telephone number\n          nullable: true\n          type: string\n        driverName:\n          description: The driver's first name\n          nullable: true\n          type: string\n        dynamicArrivalEstimate:\n          description: The ISO-8601 datetime dynamic estimated arrival of the driver\n          format: date-time\n          nullable: true\n          type: string\n        estimatedArrivalTime:\n          description: The ISO-8601 datetime estimated arrival of the driver\n          format: date-time\n          nullable: true\n          type: string\n      type: object\n    DeliveryFee:\n      properties:\n        deliveryCharge:\n          description: base delivery charge for a given zone\n          properties:\n            currency:\n              description: Currency code in ISO 4217 format\n              type: string\n            value:\n              description: Smallest unit of local currency\n              format: int32\n              type: integer\n          type: object\n        freeDelivery:\n          description: Free delivery over order price\n          properties:\n            currency:\n              description: Currency code in ISO 4217 format\n              type: string\n            value:\n              description: Smallest unit of local currency\n              format: int32\n              type: integer\n          type: object\n        minimumOrder:\n          description: Minimum order value\n          properties:\n            currency:\n              description: Currency code in ISO 4217 format\n              type: string\n            value:\n              description: Smallest unit of local currency\n              format: int32\n              type: integer\n          type: object\n        smallOrderCharge:\n          description: delivery charge for orders that has order value less then `minimumOrder`\n          properties:\n            currency:\n              description: Currency code in ISO 4217 format\n              type: string\n            value:\n              description: Smallest unit of local currency\n              format: int32\n              type: integer\n          type: object\n        zoneId:\n          description: Id of assigned zone\n          type: string\n        zoneName:\n          description: Name of assigned zone\n          type: string\n      type: object\n    DeliveryZone:\n      example:\n        deliveryMinutes: 5\n        unboundedZone:\n          items:\n            - coordinates: null\n              items:\n                - latitude: 57.159200668\n                  longitude: -2.08593559299993\n                - latitude: 57.459200668\n                  longitude: -2.18593559299993\n                - latitude: 57.159200668\n                  longitude: -2.28593559299993\n                - latitude: 57.159200668\n                  longitude: -2.08593559299993\n        zoneId: \"1\"\n      properties:\n        deliveryMinutes:\n          description: geographical zone generated by SKIP, based on delivery minutes.\n          format: int32\n          type: integer\n        unboundedZone:\n          description: json representation of delivery zone\n          properties:\n            coordinates:\n              description: geographical polygon https://tools.ietf.org/html/rfc7946#section-3.1.4. It might consist from multiple linear rings\n              items:\n                properties:\n                  coordinates:\n                    description: geographical coordinates of linear ring\n                    items:\n                      properties:\n                        latitude:\n                          description: geographical point latitude\n                          format: decimal\n                          type: number\n                        longitude:\n                          description: geographical point longitude\n                          format: decimal\n                          type: number\n                      type: object\n                    type: array\n                type: object\n              type: array\n          type: object\n        zoneId:\n          description: id of the zone\n          type: string\n      type: object\n    Discount:\n      additionalProperties: false\n      properties:\n        Amount:\n          description: The amount of discount\n          format: decimal\n          type: number\n        VoucherType:\n          $ref: \"#/components/schemas/VoucherType\"\n          description: The type of discount\n      type: object\n    DiscoveryResponse:\n      example:\n        searchResults:\n          - availabilities:\n              - canPreOrder: false\n                isOpen: true\n                nextAvailability:\n                  AvailableFrom: 2020-01-01T07:20:00Z\n                serviceType: Delivery\n            cuisines:\n              - name: Pizza\n                seoName: pizza\n              - name: fish-and-chips\n                seoName: Fish \u0026 Chips\n              - name: Halal\n                seoName: halal\n            name: Example Restaurant\n            restaurantId: \"12345\"\n      properties:\n        searchResults:\n          description: Restaurants serving the requested area\n          items:\n            $ref: \"#/components/schemas/DiscoveryResponseItem\"\n          type: array\n      type: object\n    DiscoveryResponseAvailabilities:\n      properties:\n        canPreOrder:\n          description: If the restaurant is in a pre order state\n          type: boolean\n        isOpen:\n          description: If the restaurant is in an open state. This also assumes it is accepting orders\n          type: boolean\n        nextAvailability:\n          $ref: \"#/components/schemas/DiscoveryResponseAvailability\"\n          description: When the restaurant is next available\n        serviceType:\n          description: The type of service the restaurant availability is\n          enum:\n            - Unknown\n            - Delivery\n            - Collection\n          type: string\n      type: object\n    DiscoveryResponseAvailability:\n      properties:\n        availableFrom:\n          description: Date and time the restaurant is available from. Format - 'yyyy-dd-MMTHH:mm:ssZ'\n          format: date-time\n          type: string\n      type: object\n    DiscoveryResponseCuisine:\n      properties:\n        name:\n          description: Display name of the cuisine\n          type: string\n        seoName:\n          description: Sanitized name of the cuisine, compatible with URLs\n          type: string\n      type: object\n    DiscoveryResponseItem:\n      example:\n        availabilities:\n          - canPreOrder: false\n            isOpen: true\n            nextAvailability:\n              AvailableFrom: 2020-01-01T07:20:00Z\n            serviceType: Delivery\n        cuisines:\n          - name: Pizza\n            seoName: pizza\n          - name: fish-and-chips\n            seoName: Fish \u0026 Chips\n          - name: Halal\n            seoName: halal\n        name: Example Restaurant\n        restaurantId: \"12345\"\n      properties:\n        availabilities:\n          description: Availabilities of the restaurant\n          items:\n            $ref: \"#/components/schemas/DiscoveryResponseAvailabilities\"\n          type: array\n        cuisines:\n          description: Cuisines of the restaurant\n          items:\n            $ref: \"#/components/schemas/DiscoveryResponseCuisine\"\n          type: array\n        name:\n          description: Display name of the restaurant\n          type: string\n        restaurantId:\n          description: Id of the restaurant\n          type: string\n      type: object\n    DoNotUseStatus:\n      description: The usability status of a courier\n      enum:\n        - IN_USE\n        - NOT_IN_USE\n        - UNRESPONSIVE\n        - PAUSE_ORDERS\n        - CANCELLATION\n      type: string\n    DueTimeChange:\n      additionalProperties: false\n      properties:\n        newTimeDue:\n          description: New DateTime of the order due in ISO 8601 format\n          format: date-time\n          type: string\n      type: object\n    EposState:\n      description: Current state of sending Order to EPOS system\n      enum:\n        - None\n        - Failed\n        - FailedAcknowledged\n        - FailedDismissed\n      type: string\n    ExperimentContext:\n      example:\n        Client: Web\n        ClientVersion: 2.0.0.1390\n        Culture: en-GB\n        IsBetaClient: false\n        UserAgent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0\n        UserBucket: 047850da-ccb3-491f-b5a5-43f186e4344b\n      properties:\n        Client:\n          description: Type of client making the request.\n          enum:\n            - Web\n            - Android\n            - iOS\n            - Mobile\n            - All\n            - Test\n          type: string\n        ClientVersion:\n          description: The version of the experiment client.\n          type: string\n        Culture:\n          description: Culture of the request.\n          type: string\n        IsBetaClient:\n          description: Client is a beta instance.\n          type: boolean\n        UserAgent:\n          description: Browser user agent.\n          type: string\n        UserBucket:\n          description: Representation of how the user has been partitioned into experiments.\n          format: uuid\n          type: string\n      type: object\n    ExperimentErrorResponse:\n      description: The error object returned when an operation fails\n      properties:\n        Message:\n          type: string\n      type: object\n    ExperimentEvent:\n      description: Represents a possible experiment event on personalised help attached to customisation or to a Help Action. This will be sent from the client as an ExperimentV2 Google Analytics event\n      properties:\n        id:\n          description: Unique but meaningful id for the experiment\n          type: string\n        name:\n          description: A name that describes the experiment\n          type: string\n        parentId:\n          description: The parent experiment id of the current experiment\n          type: string\n        platform:\n          description: The platform where the experiment comes from\n          type: string\n        variantName:\n          description: The name of the variant the user is bucketed into\n          type: string\n        version:\n          description: The version of the running experiment\n          type: string\n      type: object\n    ExperimentResultResponse:\n      example:\n        AssociatedTicket: EX-1234\n        Name: webexperiment\n        ParentTicket: EX-123\n        Partition: variant1\n        Version: 2\n      properties:\n        AssociatedTicket:\n          description: Associated jira experiment ticket.\n          type: string\n        Name:\n          description: The experiment name.\n          type: string\n        ParentTicket:\n          description: Parent jira experiment ticket.\n          type: string\n        Partition:\n          description: Experiment partition.\n          type: string\n        Version:\n          description: Version number of the experiment.\n          format: int32\n          type: integer\n      type: object\n    ExperimentResultsResponse:\n      example:\n        iosexperiment:\n          AssociatedTicket: EX-8888\n          Name: iosexperiment\n          ParentTicket: EX-777\n          Partition: variant5\n          Version: 3\n        webexperiment:\n          AssociatedTicket: EX-1234\n          Name: webexperiment\n          ParentTicket: EX-123\n          Partition: variant1\n          Version: 2\n      properties:\n        Active:\n          additionalProperties:\n            $ref: \"#/components/schemas/ExperimentResultResponse\"\n          description: The active (enabled) experiments.\n          readOnly: true\n          type: object\n      type: object\n    ExperimentValue:\n      description: Defines data related to an experiment.\n      properties:\n        name:\n          description: The name of the experiment.\n          type: string\n        variant:\n          description: \"The value that the user has been bucketed into, also known as the variant. For\\r\n\n            example in an A/B test, this would be \\\"A\\\" or \\\"B\\\".\"\n          type: string\n      required:\n        - name\n        - variant\n      type: object\n    ExternalSearchResponse:\n      properties:\n        Restaurants:\n          items:\n            properties:\n              Address:\n                properties:\n                  City:\n                    type: string\n                  FirstLine:\n                    type: string\n                  Latitude:\n                    type: number\n                  Longitude:\n                    type: number\n                  Postcode:\n                    type: string\n                type: object\n              DeliveryEtaMinutes:\n                properties:\n                  Approximate:\n                    type: number\n                  RangeLower:\n                    type: number\n                  RangeUpper:\n                    type: number\n                type: object\n              DriveDistance:\n                type: number\n              DriveInfoCalculated:\n                type: boolean\n              Id:\n                type: number\n              IsOpenNow:\n                type: boolean\n              IsOpenNowForDelivery:\n                type: boolean\n              Name:\n                type: string\n              UniqueName:\n                type: string\n              Url:\n                type: string\n            type: object\n          type: array\n      type: object\n    Fee:\n      description: The object which encapsulates a Fee\n      example:\n        description: A charge for bags in delivery\n        serviceTypes:\n          collection:\n            amount: 5\n          default:\n            amount: 0\n          delivery:\n            amount: 10\n      properties:\n        description:\n          description: A description of what the Fee is\n          type: string\n        serviceTypes:\n          description: Contains Service type specific fee values. If set, default can be used to apply a fee to as yet unspecified service types\n          properties:\n            collection:\n              $ref: \"#/components/schemas/ServiceTypeFeeConfiguration\"\n              description: Configuration of the fee for the collection service type\n            default:\n              $ref: \"#/components/schemas/ServiceTypeFeeConfiguration\"\n              description: Configuration of the fee for any service type which is not explicitly configured\n            delivery:\n              $ref: \"#/components/schemas/ServiceTypeFeeConfiguration\"\n              description: Configuration of the fee for the delivery service type\n          type: object\n      type: object\n    Fees:\n      description: The calculated courier payment components.\n      properties:\n        bonuses:\n          description: List of bonuses that may be granted to the courier under specific situations.\n          items:\n            $ref: \"#/components/schemas/BonusSummary\"\n          maxItems: 1\n          minItems: 1\n          type: array\n        deliveryFee:\n          description: Delivery fee paid by the customer\n          example: 500\n          format: integer\n          type: number\n        driveScoreSubsidy:\n          description: Drive score subsidy paid to courier\n          example: 200\n          format: integer\n          type: number\n        jobPay:\n          description: Job pay is the sum of the pay components subsidy, drive score subsidy and delivery fee.\n          example: 100\n          format: integer\n          type: number\n        reimbursements:\n          description: Reimbursements paid to courier. This might occur in the event of an order cancellation, order other refundable reasons.\n          example: 100\n          format: integer\n          type: number\n        subsidy:\n          description: Skip subsidy paid to courier\n          example: 90\n          format: integer\n          type: number\n        tip:\n          description: Tip the courier might get from customers when an order is placed\n          example: 180\n          format: integer\n          type: number\n      type: object\n    FlexStateType:\n      enum:\n        - CODE_RED\n        - OPEN\n        - SEEKING\n      type: string\n    FlowResponse:\n      example:\n        modals: {}\n        stepResponse:\n          closeButton:\n            action: /uk/flows/close\n            buttonEvent:\n              action: form_cancel_order\n              category: engagement\n              label: close\n              value: 0\n            buttonType: CloseButton\n            data: {}\n            department: LiveChat\n            event:\n              dataLayer:\n                screenName: /cancel-order/self-cancel-charged\n                transactionData_dateDiff: -3600\n                transactionData_delay: -1800\n            id: EndFlow\n            notes: note\n            postText: []\n            preText: []\n            title: Close\n            type: EndFlow\n          data:\n            actions:\n              - action: /uk/flows/cancellation/1234/confirm?reasonCode=cust_cancelled_changed_mind\u0026flowId=XXX\n                buttonEvent:\n                  action: form_cancel_order\n                  category: engagement\n                  label: confirm_charged\n                  value: 550\n                buttonType: Primary\n                data: null\n                department: LiveChat\n                id: ConfirmCancel\n                notes: null\n                postText: []\n                preText: []\n                title: Cancel order - pay £5.50\n                type: ChapiPost\n              - action: null\n                buttonEvent:\n                  action: form_cancel_order\n                  category: engagement\n                  label: close\n                  value: 0\n                buttonType: Secondary\n                data: {}\n                department: LiveChat\n                id: EndFlow\n                notes: null\n                postText: []\n                preText: []\n                title: Keep my order\n                type: EndFlow\n            body:\n              - You will need to pay for 50% of your order. This charge will come to £5.50.\n              - We are unable to offer a full refund because the restaurant has already started preparing your food.\n            header: Are you sure you want to cancel this order?\n            iconType: null\n            title: Cancel order\n          type: TextAndActions\n      properties:\n        modals:\n          additionalProperties:\n            $ref: \"#/components/schemas/FlowStep\"\n          description: Dictionary of strings to `FlowStepResponses`\n          type: object\n        stepResponse:\n          properties:\n            data:\n              $ref: \"#/components/schemas/FlowStep\"\n            type:\n              enum:\n                - TextAndActions\n                - ItemSelection\n                - BadItemIssueSelection\n                - RequestCsat\n                - LateOrderUpdateReceived\n              type: string\n          type: object\n      type: object\n    FlowStep:\n      description: The possible steps that can be returned as part of flows\n      oneOf:\n        - $ref: \"#/components/schemas/TextAndActionsStep\"\n        - $ref: \"#/components/schemas/ItemSelectionStep\"\n        - $ref: \"#/components/schemas/BadItemIssueSelectionStep\"\n        - $ref: \"#/components/schemas/RequestCsatStep\"\n        - $ref: \"#/components/schemas/LateOrderUpdateReceivedStep\"\n    FlowStepBase:\n      description: Abstract base schema for flow steps.\n      properties:\n        closeButton:\n          $ref: \"#/components/schemas/HelpAction\"\n        experimentEvents:\n          description: list of experiments running for this client\n          items:\n            $ref: \"#/components/schemas/ExperimentEvent\"\n          type: array\n        screenEvent:\n          properties:\n            dataLayer:\n              additionalProperties: true\n              properties:\n                screenName:\n                  type: string\n              type: object\n          type: object\n        title:\n          type: string\n      type: object\n    GeneratePresignedFIleUploadUrlRequest:\n      description: Request that contains information about file that will be uploaded to an AWS S3 bucket\n      example:\n        fileName: menu.pdf\n        fileSizeInBytes: 4574745\n      properties:\n        fileName:\n          description: The name of file that will be uploaded to the AWS S3 bucket\n          type: string\n        fileSizeInBytes:\n          description: The size of file that will be uploaded to the AWS S3 bucket, in bytes\n          format: int32\n          type: number\n      type: object\n    GeneratePresignedFIleUploadUrlResponse:\n      description: Response that provides all needed metadata to build signed request to upload file to AWS S3 bucket from a client application\n      example:\n        fields:\n          Content-Type: application/pdf\n          Policy: ...redacted...\n          X-Amz-Algorithm: AWS4-HMAC-SHA256\n          X-Amz-Credential: ...redacted...\n          X-Amz-Date: 20200423T120247Z\n          X-Amz-Security-Token: ...redacted...\n          X-Amz-Signature: ...redacted...\n          bucket: qa28-presigned-post-data\n          key: 3c816agk9cpvahl_menu.pdf\n        url: https://s3.eu-west-1.amazonaws.com/qa28-presigned-post-data\n      properties:\n        fields:\n          description: Request metadata to make upload to S3 bucket\n          properties:\n            Content-Type:\n              description: Content-Type of uploaded file\n              type: string\n            Policy:\n              description: The Base64 encoded security policy that describes what is permitted in the request\n              type: string\n            X-Amz-Algorithm:\n              description: The signing algorithm that you used to calculate the signature.\n              type: string\n            X-Amz-Credential:\n              description: a string of the following form `\u003caws-access-key-id\u003e/\u003cdate\u003e/\u003caws-region\u003e/\u003caws-service\u003e/aws4_request`\n              type: string\n            X-Amz-Date:\n              description: The date value specified in the ISO8601 formatted string.\n              type: string\n            X-Amz-Security-Token:\n              description: AWS account token\n              type: string\n            X-Amz-Signature:\n              description: The HMACSHA256 hash of the security policy\n              type: string\n            bucket:\n              description: Name of the bucket in which file will be uploaded\n              type: string\n            key:\n              description: File name that will be obtained after uploading\n              type: string\n          type: object\n        url:\n          description: The URL of the bucket in which file will be uploaded\n          type: string\n      type: object\n    GeoLocation:\n      additionalProperties: false\n      properties:\n        accuracy:\n          description: How accurate the location is\n          format: double\n          type: number\n        heading:\n          description: The direction of travel\n          format: double\n          type: number\n        latitude:\n          description: The latitude component of the location\n          format: double\n          nullable: true\n          type: number\n        longitude:\n          description: The longitude component of the location\n          format: double\n          nullable: true\n          type: number\n        speed:\n          description: The speed of travel\n          format: double\n          type: number\n      type: object\n    Geometry:\n      description: Geometry information for consumers location\n      example:\n        coordinates:\n          - -0.10358\n          - 51.51469\n        type: Point\n      properties:\n        coordinates:\n          description: first element of the array represents longitude, second latitude\n          items:\n            format: double\n            type: number\n          maxItems: 2\n          minItems: 2\n          type: array\n        type:\n          description: type of primitive\n          type: string\n      type: object\n    GetAvailableFulfilmentTimesResponse:\n      properties:\n        asapAvailable:\n          description: If the option to fulfil an order as soon as possible is available.\n          nullable: false\n          type: boolean\n        times:\n          description: Collection of time bands for when an order can be fulfilled.\n          items:\n            description: A time band for when an order can be fulfilled.\n            nullable: false\n            properties:\n              from:\n                description: Start time represented in ISO 8601 UTC (Zulu Time).\n                format: date-time\n                nullable: false\n                type: string\n              to:\n                description: |\n                  End time represented in ISO 8601 UTC (Zulu Time).\n\n                  This time can be equal to the from time.\n                format: date-time\n                nullable: false\n                type: string\n            required:\n              - from\n              - to\n            type: object\n          maxItems: 576\n          minItems: 0\n          nullable: false\n          type: array\n      required:\n        - times\n        - asapAvailable\n      type: object\n    GetDeliveryFeesResponse:\n      example:\n        deliveryFees:\n          - deliveryCharge:\n              currency: GBP\n              value: 100\n            freeDelivery:\n              currency: GBP\n              value: 1000\n            minimumOrder:\n              currency: GBP\n              value: 500\n            smallOrderCharge:\n              currency: GBP\n              value: 200\n            zoneId: \"1\"\n            zoneName: Zone 1\n          - deliveryCharge:\n              currency: GBP\n              value: 200\n            freeDelivery:\n              currency: GBP\n              value: 2000\n            minimumOrder:\n              currency: GBP\n              value: 500\n            smallOrderCharge:\n              currency: GBP\n              value: 300\n            zoneId: \"2\"\n            zoneName: Zone 2\n      properties:\n        deliveryFees:\n          description: restaurant delivery fees\n          items:\n            $ref: \"#/components/schemas/DeliveryFee\"\n          nullable: false\n          type: array\n      type: object\n    GetDeliveryZonesResponse:\n      example:\n        deliveryZones:\n          - deliveryMinutes: 5\n            unboundedZone:\n              items:\n                - coordinates: null\n                  items:\n                    - latitude: 57.159200668\n                      longitude: -2.08593559299993\n                    - latitude: 57.459200668\n                      longitude: -2.18593559299993\n                    - latitude: 57.159200668\n                      longitude: -2.28593559299993\n                    - latitude: 57.159200668\n                      longitude: -2.08593559299993\n            zoneId: \"1\"\n          - deliveryMinutes: 7\n            unboundedZone:\n              items:\n                - coordinates: null\n                  items:\n                    - latitude: 57.159200668\n                      longitude: -2.08593559299993\n                    - latitude: 57.459200668\n                      longitude: -2.18593559299993\n                    - latitude: 57.159200668\n                      longitude: -2.28593559299993\n                    - latitude: 57.159200668\n                      longitude: -2.08593559299993\n            zoneId: \"2\"\n      properties:\n        deliveryZones:\n          description: restaurant delivery zones. Maximum `deliveryZones` response size should be less than 20KB\n          items:\n            $ref: \"#/components/schemas/DeliveryZone\"\n          maxItems: 5\n          nullable: false\n          type: array\n          uniqueItems: true\n      type: object\n    GetSettingsResponse:\n      example:\n        deliveryAreaFeatureState: Enabled\n        deliveryFeesFeatureState: Unreleased\n        isRestaurantWhiteListed: true\n      properties:\n        deliveryAreaFeatureState:\n          description: Delivery area feature state.\n          enum:\n            - Unreleased\n            - Disabled\n            - Enabled\n          nullable: false\n          type: string\n        deliveryFeesFeatureState:\n          description: Delivery fees feature state.\n          enum:\n            - Unreleased\n            - Disabled\n            - Enabled\n          nullable: false\n          type: string\n        isRestaurantWhiteListed:\n          description: We are going to use smooth 'delivery fees' feature rollout. So, in the first iteration feature will be available for a several restaurants.\n          type: boolean\n      type: object\n    GetSupportRequestTypesResponse:\n      description: Array of types request belongs to\n      example:\n        - name: Top Placement\n          subtype:\n            - name: Interest\n              subtype: []\n              value: top_placement__interest\n            - name: Issue\n              subtype: []\n              value: top_placement__issue\n          value: top_placement\n        - name: Menu update\n          subtypes: []\n          value: menu_update\n      items:\n        $ref: \"#/components/schemas/SupportRequestType\"\n      minLength: 1\n      type: array\n    GetSupportRequestsResponse:\n      description: Response representing support requests from restaurant\n      example:\n        paging:\n          count: 35\n        requests:\n          - id: \"5646645\"\n            status: open\n            subject: Top Placement\n            submittedDate: 2020-01-01T09:30:00.000Z\n          - id: \"235253\"\n            status: closed\n            subject: Change Logo Request\n            submittedDate: 2020-01-01T09:30:00.000Z\n      properties:\n        paging:\n          description: Consists of pagination information\n          properties:\n            count:\n              description: The total number of results\n              format: int64\n              type: integer\n          type: object\n        requests:\n          description: List of restaurant support requests\n          items:\n            $ref: \"#/components/schemas/SupportRequest\"\n          type: array\n      type: object\n    GiftCardsErrorResponse:\n      properties:\n        code:\n          format: int32\n          type: integer\n        codeText:\n          type: string\n      type: object\n    GroupType:\n      description: \"\"\n      enum:\n        - 0\n        - 1\n        - 2\n      type: integer\n      x-enumNames:\n        - Unknown\n        - DynamicSingleUse\n        - StaticMultipleUse\n    HelpAction:\n      description: Represents a possible action (i.e. button) on personalised help home page or as part of a flow\n      properties:\n        action:\n          description: The specific action a button tap invokes.  Content depends on type.\n          type: string\n        buttonEvent:\n          description: The analytics event to send on tap\n          properties:\n            action:\n              description: Google Analytics action\n              type: string\n            category:\n              description: Google Analytics category\n              type: string\n            label:\n              description: Google Analytics label (if any)\n              type: string\n            value:\n              description: Google Analytics value (if any)\n              type: number\n          type: object\n        buttonType:\n          description: Display type of button\n          enum:\n            - Primary\n            - Secondary\n            - TextOnly\n            - CloseButton\n            - Option\n            - OptionExtra\n            - FoodSafety\n          type: string\n        data:\n          additionalProperties: true\n          description: \"Data to post back (for use with type: ChapiPost).\"\n          type: object\n        department:\n          description: \"LiveChat department (for use with type: LiveChat)\"\n          type: string\n        id:\n          description: Unique but meaningful id for the action\n          type: string\n        notes:\n          description: \"Notes to pass to LiveChat (for use with type: LiveChat)\"\n          type: string\n        postText:\n          description: Paragraphs to display after button\n          items:\n            type: string\n          type: array\n        preText:\n          description: Paragraphs to display before button\n          items:\n            type: string\n          type: array\n        title:\n          description: Caption for the button\n          type: string\n        type:\n          description: The type of action a button tap invokes\n          enum:\n            - LogIn\n            - Call\n            - Chatbot\n            - LiveChat\n            - ChapiGet\n            - ChapiPost\n            - Link\n            - HelpArticleLink\n            - EndFlow\n            - Email\n            - Deferred\n            - OpenModal\n            - CloseModal\n            - NoAction\n          type: string\n      type: object\n    IgnoredRestaurantIds:\n      example:\n        ignoredRestaurantIds:\n          - \"123\"\n          - \"456\"\n      properties:\n        ignoredRestaurantIds:\n          description: A list of restaurant ids that were present in a request but were ignored.\n          items:\n            type: string\n          type: array\n      type: object\n    Ingredients:\n      additionalProperties: false\n      description: List of ingredients\n      example:\n        name: wasser\n      properties:\n        name:\n          description: Name of ingredient\n          nullable: false\n          type: string\n      type: object\n    InternalServerErrorMarketingResponse:\n      $ref: \"#/components/schemas/MarketingErrorResponse\"\n      description: 500 Internal Server Error Returned\n      example:\n        errors:\n          - description: Internal Server Error\n            errorCode: \"500\"\n        faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n        message: Something has gone wrong, please try again later.\n    InvalidProduct:\n      properties:\n        Name:\n          type: string\n        ProductId:\n          type: string\n      type: object\n    Item:\n      description: Information about an item in the claim\n      example:\n        additionalContext: Potato skin was damaged\n        decision: Rejected\n        id: NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\n        name: Potato skin\n        quantity: 1\n        totalClaimed: 1900\n        unitPrice: 2000\n      properties:\n        additionalContext:\n          description: Comment giving additional context\n          nullable: true\n          type: string\n        decision:\n          description: Indicates whether decision on the claimed item was made and what was that decision\n          enum:\n            - NotDecided\n            - Accepted\n            - Rejected\n          type: string\n        id:\n          description: Item identifier\n          type: string\n        name:\n          description: Item name\n          type: string\n        quantity:\n          description: Quantity of items\n          type: number\n        totalClaimed:\n          description: Total claimed money in smallest unit of relevant currency\n          type: number\n        unitPrice:\n          description: Price of a single unit in smallest unit of relevant currency\n          type: number\n      type: object\n    ItemDecision:\n      description: Decision on the item\n      example:\n        decision: Accepted\n        id: NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\n      properties:\n        decision:\n          description: Decision made about the item\n          enum:\n            - Accepted\n            - Rejected\n          type: string\n        id:\n          description: Item identifier\n          type: string\n      type: object\n    ItemDiscount:\n      additionalProperties: false\n      example:\n        discountPercentage: 100\n        modifierGroups:\n          - MinimumChoices: 1\n            ModifierGroupId: modifier111\n            Modifiers:\n              - MaximumAdditionalModifiers: 0\n                ModifierId: NoSugar11\n                Quantity: 1\n                TotalPrice: 0\n        productId: Lemonade1234\n      properties:\n        discountPercentage:\n          description: The discount percentage applied.\n          format: integer\n          type: number\n        modifierGroups:\n          description: The collection of preselected modifier groups for the item.\n          items:\n            $ref: \"#/components/schemas/ModifierGroup\"\n          nullable: true\n          type: array\n        productId:\n          description: The unique identifier of the discounted product item.\n          type: string\n      title: ItemDiscount\n      type: object\n    ItemDiscountPrompt:\n      additionalProperties: false\n      example:\n        description: Get free lemonade with Super Burger\n        header: Free item!\n        itemDiscounts:\n          - discountPercentage: 100\n            modifierGroups:\n              - MinimumChoices: 1\n                ModifierGroupId: modifier111\n                Modifiers:\n                  - MaximumAdditionalModifiers: 0\n                    ModifierId: NoSugar11\n                    Quantity: 1\n                    TotalPrice: 0\n            productId: Lemonade1234\n        title: Get free lemonade\n      properties:\n        description:\n          description: The description of offer to show in prompt for customer\n          type: string\n        header:\n          description: The header to show in prompt for customer\n          type: string\n        itemDiscounts:\n          description: The array of items with discounts\n          items:\n            $ref: \"#/components/schemas/ItemDiscount\"\n          type: array\n        title:\n          description: The title to show in prompt for customer\n          type: string\n      title: ItemDiscountPrompt\n      type: object\n    ItemSelectionStep:\n      allOf:\n        - $ref: \"#/components/schemas/FlowStepBase\"\n        - properties:\n            actions:\n              description: Array of actions (i.e. buttons)\n              items:\n                $ref: \"#/components/schemas/HelpAction\"\n              type: array\n            body:\n              description: Array of paragraphs for body text\n              items:\n                type: string\n              type: array\n            header:\n              description: Display header\n              type: string\n            items:\n              description: Array of items in order to choose from\n              items:\n                properties:\n                  id:\n                    description: Unique id of item\n                    type: string\n                  name:\n                    description: Name of item\n                    type: string\n                  price:\n                    description: Formatted price of item\n                    type: string\n                type: object\n              type: array\n          type: object\n      description: Flow step used for selecting problematic items\n      type: object\n    JobDetails:\n      description: The details of a job which may be assigned to a courier for delivery.\n      properties:\n        alcoholDelivery:\n          description: The order contains alcoholic products when true.\n          type: boolean\n        amount:\n          description: The courier's balance regarding the job. When cash orders happen usually the courier pays out of his pocket, that would add credit to him until he's paid in full.\n          example: 0\n          format: integer\n          type: number\n        courierId:\n          description: Courier identifier for the job details\n          example: 61376a78-12e1-4f11-bba2-2097a65s2d75\n          type: string\n        deliveryId:\n          description: Delivery identifier for the job.\n          example: 61376a78-12e1-4f11-bba2-2097a65s2d75\n          type: string\n        destination:\n          $ref: \"#/components/schemas/Address\"\n          description: The job address complete information.\n        distance:\n          description: The distance between the courier location and the job destination.\n          format: integer\n          type: number\n        fees:\n          $ref: \"#/components/schemas/Fees\"\n          description: The calculated components of the courier payment for the job.\n        groceryDelivery:\n          description: The order contains grocery delivery when true.\n          type: boolean\n        jobType:\n          $ref: \"#/components/schemas/JobType\"\n          description: The job type classifies the type of job assigned to the courier. When an order is placed by the customer, two jobs are created for the courier, a collect job and a deliver job, basically the courier have to complete both jobs, first the collect job, which is the one where the order is collected from the restaurant, finally the deliver job as the job of delivering the order to the customer.\n        orderNumber:\n          description: Incrementing number generated for each particular order.\n          example: \"10113045\"\n          type: string\n        paymentType:\n          $ref: \"#/components/schemas/SyncPaymentType\"\n          description: The order payment status associated with the job.\n        restaurantName:\n          description: Restaurant's name.\n          example: MacDonalds\n          type: string\n        status:\n          $ref: \"#/components/schemas/JobStatus\"\n          description: All the possible job status that might occur during a delivery process.\n        time:\n          description: Job creation time stamp.\n          example: 1593444834\n          format: long\n          type: number\n      type: object\n    JobStatus:\n      description: All possible job status during a delivery process.\n      enum:\n        - UNASSIGNED\n        - ASSIGNED_PENDING_ACCEPTED\n        - ASSIGNED\n        - ACCEPTED\n        - PARKING\n        - ARRIVED\n        - ENTERED\n        - COMPLETED\n      type: string\n    JobType:\n      description: The job type classifies the type of job assigned to the courier. When an order is placed by the customer, two jobs are created for the courier, a collect job and a deliver job, basically the courier have to complete both jobs, first the collect job, which is the one where the order is collected from the restaurant and the deliver job as the job of delivering the order to the customer.\n      enum:\n        - COLLECT\n        - DELIVER\n      type: string\n    Justification:\n      description: The reason of the claim rejection and optional comments from the restaurant\n      example:\n        comments: The food was packed properly\n        reason: Other\n      nullable: true\n      properties:\n        comments:\n          description: Comment from the restaurant owner in case they rejected at least one of the items and want to type their own rejection reason\n          nullable: true\n          type: string\n        reason:\n          description: One of the predefined reasons\n          enum:\n            - AlreadyRefunded\n            - ItemReplaced\n            - PartialRefundRequired\n            - WasNotMissing\n            - WillRedeliver\n            - OrderWasHot\n            - OrderWasOnTime\n            - OrderWasPacked\n            - FoodWasIntact\n            - AddExtraItem\n            - Other\n          type: string\n      type: object\n    LateOrderCompensationOption:\n      additionalProperties: false\n      properties:\n        amount:\n          description: Cost of the option in local currency\n          format: decimal\n          type: number\n        isRecommended:\n          description: Whether this option is the recommended option\n          type: boolean\n      type: object\n    LateOrderCompensationQuery:\n      additionalProperties: false\n      properties:\n        compensationOptions:\n          description: List of possible options for compensation\n          items:\n            $ref: \"#/components/schemas/LateOrderCompensationOption\"\n          nullable: true\n          type: array\n        isViewed:\n          description: Has this compensation query been viewed\n          type: boolean\n        queryId:\n          description: The ID of the late order compensation query\n          nullable: true\n          type: string\n        response:\n          $ref: \"#/components/schemas/LateOrderCompensationResponse\"\n          description: The restaurants response to the late order compensation query\n          nullable: true\n      type: object\n    LateOrderCompensationResolutionRequest:\n      additionalProperties: false\n      properties:\n        acceptedAmount:\n          description: Accepted compensation amount\n          format: double\n          nullable: true\n          type: number\n        isAccepted:\n          description: Is compensation accepted\n          type: boolean\n        rejectedReasonCode:\n          description: Reason code for rejection\n          enum:\n            - ExtraItem\n            - StuckInTraffic\n            - BusierThanExpected\n            - BadWeather\n            - UnexpectedProblems\n          nullable: true\n          type: string\n      type: object\n    LateOrderCompensationResponse:\n      additionalProperties: false\n      properties:\n        acceptedAmount:\n          description: The amount of compensation if accepted\n          format: decimal\n          nullable: true\n          type: number\n        isAccepted:\n          description: Has the late order compensation request been accepted\n          type: boolean\n        rejectedReasonCode:\n          description: The rejection reason if not accepted\n          enum:\n            - ExtraItem\n            - StuckInTraffic\n            - BusierThanExpected\n            - BadWeather\n            - UnexpectedProblems\n          nullable: true\n          type: string\n      type: object\n    LateOrderCompensationRestaurantResolution:\n      example:\n        acceptedAmount: 500\n        isAccepted: true\n        orderId: 69rqfxyfze2gjzf5nusdcw\n      properties:\n        acceptedAmount:\n          description: The monetary amount of compensation granted, in cents/pence. Required when `isAccepted = true`.\n          type: integer\n        isAccepted:\n          description: Flag to indicate whether a compensation request has been accepted or rejected.\n          type: boolean\n        orderId:\n          description: The ID of the late order compensation request that this response relates to.\n          type: string\n        rejectedReasonCode:\n          description: |-\n            \n            - `BadTraffic` : The driver was stuck in heavy traffic, sorry.\n            - `BadWeather` : The bad weather was delaying our deliveries, sorry.\n            - `BusierThanExpected` : Our restaurant was busier than we expected.\n            - `CompensatedWithItem` : We gave you something from the menu free of charge to make up for it.\n            - `NoReason` : We're really sorry your order was late. We hope you enjoyed your food.\n          enum:\n            - BadTraffic\n            - BadWeather\n            - BusierThanExpected\n            - CompensatedWithItem\n            - NoReason\n          type: string\n      type: object\n    LateOrderInfo:\n      additionalProperties: false\n      properties:\n        isLateOrder:\n          description: Is there a late order request\n          type: boolean\n        lateOrderProcessed:\n          description: Has the late order request been processed by the restaurant\n          type: boolean\n      type: object\n    LateOrderRequest:\n      additionalProperties: false\n      properties:\n        additionalMinutesToAdd:\n          description: Amount of minutes added\n          format: int32\n          nullable: true\n          type: integer\n        lateOrderStatus:\n          description: Reason to adding minutes\n          enum:\n            - None\n            - Preparing\n            - OnItsWay\n            - Delivered\n          nullable: true\n          type: string\n      type: object\n    LateOrderRestaurantResponse:\n      properties:\n        additionalDeliveryTimeToAddMinutes:\n          description: The amount of time to add to the current delivery estimate in minutes\n          type: integer\n        lateOrderStatus:\n          description: The updated later order query status\n          enum:\n            - Preparing\n            - OnItsWay\n            - Delivered\n          type: string\n      type: object\n    LateOrderUpdateReceivedStep:\n      allOf:\n        - $ref: \"#/components/schemas/FlowStepBase\"\n        - properties:\n            actions:\n              description: Array of actions (i.e. buttons)\n              items:\n                $ref: \"#/components/schemas/HelpAction\"\n              type: array\n            header:\n              description: Display header\n              type: string\n            message:\n              description: Message from restaurant\n              type: string\n            messageHeader:\n              description: Header for the message from restaurant\n              type: string\n            newDueDate:\n              description: New expected due date\n              format: date-time\n              type: string\n          type: object\n      description: Flow step used to display the restaurant's response to a customer's Late Order update request\n      type: object\n    LegacyTempOfflineStatus:\n      default: ClosedDueToEvent\n      description: |-\n        \n        - `Unset` : Legacy value meaning online.\n        - `None` : Legacy value meaning online.\n        - `TempOffline` : The restaurant will go temporarily offline, typically for an undetermined amount of time (no end date).\n        - `ClosedToday` : The restaurant will closed for the day and the event will end the next morning.\n        - `ClosedDueToEvent` : The restaurant will go offline for an event (e.g. a holiday), these events will typically have an end time.\n        - `FailedJctConnection` : The restaurant will go offline due to the POS device losing connection.\n        - `NoTrOverride` : The restaurant will go offline for another reason that the restaurant cannot override.\n        - `IgnoredOrders` : The restaurant will go offline due to ignoring orders.\n      enum:\n        - Unset\n        - None\n        - TempOffline\n        - ClosedToday\n        - ClosedDueToEvent\n        - FailedJctConnection\n        - NoTrOverride\n        - IgnoredOrders\n      type: string\n    ListOfOfflineItemsResponse:\n      example:\n        offlineItems:\n          - id: \"111\"\n            nextAvailableAt: 2021-01-01T05:00:00.0000000Z\n            type: variation\n          - id: \"222\"\n            nextAvailableAt: 2021-01-01T05:00:00.0000000Z\n            type: variation\n          - id: \"888\"\n            nextAvailableAt: 2021-01-01T05:00:00.0000000Z\n            type: modifier\n          - id: \"999\"\n            nextAvailableAt: 2021-01-01T05:00:00.0000000Z\n            type: modifier\n        paging:\n          cursors:\n            after: NDMyNzQyODI3OTQw\n      properties:\n        offlineItems:\n          description: List of offline items for a given restaurant.\n          items:\n            $ref: \"#/components/schemas/OfflineItemsResponse\"\n          type: array\n        paging:\n          description: Consists of pagination information.\n          properties:\n            cursors:\n              description: Consists of cursors markers used in pagination.\n              properties:\n                after:\n                  description: The value should be used in the query parameter named after. It is used as a cursor of the last returned record in the previous request, from which next offset going to be fetched. A missing or empty value indicates that the end of the result set has been reached.\n                  type: string\n              type: object\n          type: object\n      type: object\n    LiveMetrics:\n      description: The live metrics object for a given delivery zone.\n      properties:\n        aajlTimestamp:\n          description: Timestamp for the average assignable job load retrieved for a given delivery zone.\n          example: 1585260360000\n          format: integer\n          type: number\n        currentAajl:\n          description: Average assignable job load retrieved for a given delivery zone.\n          example: 0.7\n          format: double\n          type: number\n        marketplaceRank:\n          description: Current marketplace rank value retrieved for a given delivery zone.\n          example: -2\n          format: integer\n          type: number\n        marketplaceRankStatus:\n          description: Marketplace On/Off status\n          type: boolean\n        throttlingStatus:\n          description: Zone Throttling On/Off status\n          type: boolean\n        zoneThrottling:\n          description: Current zone throttling value retrieved for a given delivery zone.\n          example: 15\n          format: integer\n          type: number\n      type: object\n    Manufacturer:\n      example:\n        brand: Coca-Cola Zero\n        city: Anderlecht\n        manufacturer: Coca-Cola Erfrischungsgetränke AG, Postfach 67 01 56, 10207 Berlin\n        origin: Deutschland\n        postalCode: \"1070\"\n        streetAddress: Bergense Steenweg 1424\n      properties:\n        brand:\n          description: Brand name\n          nullable: true\n          type: string\n        city:\n          description: City\n          nullable: true\n          type: string\n        manufacturer:\n          description: Manufacturer name\n          nullable: true\n          type: string\n        origin:\n          description: Country\n          nullable: true\n          type: string\n        postalCode:\n          description: Postal Code\n          nullable: true\n          type: string\n        streetAddress:\n          description: Street Address\n          nullable: true\n          type: string\n      type: object\n    MarketingContentResponse:\n      additionalProperties: true\n      example:\n        anotherField: another value\n        selected:\n          - subjectLine\n          - anotherField\n        subjectLine: humor\n      properties:\n        selected:\n          description: |-\n            The set of 'select' properties from the request that meet the following criteria: \n              1) The user has data for the property\n              2) The data for the given user is present in the 'accepted values' specified in the request.\n          items:\n            type: string\n          type: array\n      type: object\n    MarketingError:\n      additionalProperties: false\n      properties:\n        description:\n          description: Specific details about the error that may assist the you in resolving the issue\n          type: string\n        errorCode:\n          description: A value that helps identify this response back to logs, so we can easily find this specific fault\n          type: string\n      type: object\n    MarketingErrorResponse:\n      additionalProperties: false\n      properties:\n        errors:\n          description: Underlying errors associated with the error\n          items:\n            $ref: \"#/components/schemas/MarketingError\"\n          nullable: true\n          type: array\n        faultId:\n          description: A value that helps identify this response back to logs, so we can easily find this specific fault\n          type: string\n        message:\n          description: Specific details about the error that may assist the you in resolving the issue\n          type: string\n      type: object\n      x-abstract: true\n    MarketingReportResponse:\n      additionalProperties:\n        properties:\n          dataExtractionDateUTC:\n            description: The UTC datetime that the report data was extracted from BigQuery\n            format: date-time\n            type: string\n          reportData:\n            description: Report data as JSON object\n            nullable: true\n        type: object\n      description: The report data and the extraction date\n      example:\n        orders-per-month:\n          dataExtractionDateUTC: 2019-09-03T13:10:05Z\n          reportData: \"[{'month':3,'year':2019,'order_count':630},{'month':4,'year':2019,'order_count':583}]\"\n        potential-orders-per-month:\n          dataExtractionDateUTC: 2019-09-03T13:10:05Z\n          reportData: \"[{'month':3,'year':2019,'potential_monthly_order_count':630},{'month':4,'year':2019,'potential_monthly_order_count':583}]\"\n        unique-customers:\n          dataExtractionDateUTC: 2019-09-03T13:10:05Z\n          reportData: \"[{'month':3,'year':2019,'unique_customer_count':630},{'month':4,'year':2019,'unique_customer_count':583}]\"\n      type: object\n    MarketplaceRank:\n      description: The marketplace rank object used to build a Ranking for a given delivery zone.\n      properties:\n        aajl:\n          description: Average Assignable Job Load\n          example: 1\n          format: integer\n          type: number\n        enabled:\n          description: Status of the corresponding rank\n          type: boolean\n        rank:\n          description: Rank position of Average Assignable Job Load\n          example: -20\n          format: integer\n          type: number\n      type: object\n    MarketplaceRankingSettings:\n      description: The marketplace ranking settings object for all endpoints.\n      properties:\n        id:\n          description: Delivery Zone Id\n          example: fc71ee27-608f-4223-b2ea-2774eb83c6b4\n          type: string\n        marketplaceRankingStatus:\n          description: Marketplace On/Off Status\n          type: boolean\n        ranks:\n          description: Array of marketplace rank objects used to build a Ranking for a given delivery zone.\n          items:\n            $ref: \"#/components/schemas/MarketplaceRank\"\n          maxItems: 9\n          minItems: 9\n          type: array\n      type: object\n    MarketplaceRankingSettingsList:\n      description: Marketplace Ranking Settings List\n      properties:\n        marketplaceRankSettingsList:\n          description: List of Marketplace Ranking Settings\n          items:\n            $ref: \"#/components/schemas/MarketplaceRankingSettings\"\n          maxItems: 3\n          minItems: 3\n          type: array\n      type: object\n    Menu:\n      allOf:\n        - $ref: \"#/components/schemas/MenuBase\"\n        - properties:\n            availabilities:\n              description: A set of availabilities that can later be referenced by individual menu items.\n              items:\n                $ref: \"#/components/schemas/Availability\"\n              type: array\n            categories:\n              description: A set of categories that appear on the menu.\n              items:\n                $ref: \"#/components/schemas/Category\"\n              type: array\n            items:\n              description: All of the menu items within the menu.\n              items:\n                $ref: \"#/components/schemas/MenuItem\"\n              type: array\n          type: object\n      example:\n        categories:\n          - description: \"\"\n            id: \"3\"\n            itemIds:\n              - \"65143901\"\n            name: Starters\n          - description: \"\"\n            id: \"4\"\n            itemIds:\n              - \"23435309\"\n              - \"33445308\"\n            name: Deals\n          - description: \"\"\n            id: \"5\"\n            itemIds:\n              - \"8547130\"\n              - \"8547140\"\n            name: Pizzas\n          - description: \"\"\n            id: \"6\"\n            itemIds:\n              - \"6537130\"\n              - \"6537140\"\n            name: Drinks\n        currency: GBP\n        description: My excellent menu\n        items:\n          - dealGroups:\n              - dealItemVariations:\n                  - additionPrice: 0\n                    dealItemVariationId: \"1577341\"\n                    maxChoices: 1\n                    minChoices: 0\n                id: 23435309-1\n                name: Choose your base\n                numberOfChoices: 1\n              - dealItemVariations:\n                  - additionPrice: 0\n                    dealItemVariationId: \"8547121\"\n                    maxChoices: 1\n                    minChoices: 0\n                  - additionPrice: 0\n                    dealItemVariationId: \"3547157\"\n                    maxChoices: 1\n                    minChoices: 0\n                  - additionPrice: 50\n                    dealItemVariationId: \"8548153\"\n                    maxChoices: 1\n                    minChoices: 0\n                id: 23435309-2\n                name: Choose your halves\n                numberOfChoices: 2\n            description: Choose each half.\n            id: \"23435309\"\n            labels: []\n            modifierGroups: []\n            name: Half-and-half Pizza\n            type: deal\n            variations:\n              - availabilityIds:\n                  - 1-lunch-delivery\n                  - 2-lunch-collection\n                  - 3-dinner-delivery\n                basePrice: 3099\n                dealGroupsIds:\n                  - 23435309-1\n                  - 23435309-2\n                dealOnly: false\n                id: \"23435309\"\n                modifierGroupsIds: []\n                name: \"\"\n                type: noVariation\n          - dealGroups:\n              - dealItemVariations:\n                  - additionPrice: 0\n                    dealItemVariationId: \"9750011\"\n                    maxChoices: 1\n                    minChoices: 0\n                  - additionPrice: 0\n                    dealItemVariationId: \"9750021\"\n                    maxChoices: 1\n                    minChoices: 0\n                  - additionPrice: 0\n                    dealItemVariationId: \"23435309\"\n                    maxChoices: 1\n                    minChoices: 0\n                id: 33445308-1\n                name: Choose your pizza\n                numberOfChoices: 1\n              - dealItemVariations:\n                  - additionPrice: 13\n                    dealItemVariationId: \"6537130\"\n                    maxChoices: 1\n                    minChoices: 0\n                  - additionPrice: 0\n                    dealItemVariationId: \"6537140\"\n                    maxChoices: 1\n                    minChoices: 0\n                  - additionPrice: 0\n                    dealItemVariationId: \"7739164\"\n                    maxChoices: 1\n                    minChoices: 0\n                id: 33445308-2\n                name: Choose your drink\n                numberOfChoices: 1\n            description: \"Choose a 14 inch Pizza (including half-and-half) and any drink. Note: Alcohol is only available for collection.\"\n            id: \"33445308\"\n            labels: []\n            modifierGroups: []\n            name: 14 inch Pizza \u0026 A Drink For 1\n            type: deal\n            variations:\n              - availabilityIds:\n                  - 1-lunch-delivery\n                  - 2-lunch-collection\n                  - 3-dinner-delivery\n                basePrice: 3099\n                dealGroupsIds:\n                  - 33445308-1\n                  - 33445308-2\n                dealOnly: false\n                id: \"33445308\"\n                modifierGroupsIds: []\n                name: \"\"\n                type: noVariation\n          - dealGroups: []\n            description: \"\"\n            id: \"65143901\"\n            labels: []\n            modifierGroups:\n              - id: 65143901-req-1\n                maxChoices: 1\n                minChoices: 1\n                modifiers:\n                  - additionPrice: 0\n                    id: \"834502\"\n                    maxChoices: 1\n                    minChoices: 0\n                    name: Pitta Bread\n                  - additionPrice: 0\n                    id: \"835700\"\n                    maxChoices: 1\n                    minChoices: 0\n                    name: Sourdough\n                  - additionPrice: 50\n                    id: \"835601\"\n                    maxChoices: 1\n                    minChoices: 0\n                    name: Wholemeal\n                name: Choose your bread\n              - id: 65143901-req-2\n                maxChoices: 2\n                minChoices: 2\n                modifiers:\n                  - additionPrice: 0\n                    id: \"835340\"\n                    maxChoices: 2\n                    minChoices: 0\n                    name: Tzatziki\n                  - additionPrice: 0\n                    id: \"835341\"\n                    maxChoices: 2\n                    minChoices: 0\n                    name: Taramasalata\n                  - additionPrice: 0\n                    id: \"825344\"\n                    maxChoices: 2\n                    minChoices: 0\n                    name: Hummus\n                  - additionPrice: 0\n                    id: \"825346\"\n                    maxChoices: 2\n                    minChoices: 0\n                    name: Onion\n                name: Choose your dips\n            name: Flat Bread and Dips (Pick any 2 Dips)\n            requireOtherProducts: false\n            type: menuItem\n            variations:\n              - availabilityIds:\n                  - 1-lunch-delivery\n                  - 2-lunch-collection\n                  - 3-dinner-delivery\n                  - 4-dinner-collection\n                basePrice: 650\n                dealGroupsIds: []\n                dealOnly: false\n                id: \"65143901\"\n                kitchenNumber: \"90\"\n                modifierGroupsIds:\n                  - 65143901-req-1\n                  - 65143901-req-2\n                name: \"\"\n                type: noVariation\n          - dealGroups: []\n            description: \"\"\n            id: \"1577341\"\n            labels: []\n            modifierGroups:\n              - id: 1577341-req-1\n                maxChoices: 1\n                minChoices: 1\n                modifiers:\n                  - additionPrice: 0\n                    id: \"854500\"\n                    maxChoices: 1\n                    minChoices: 0\n                    name: Classic Crust\n                  - additionPrice: 200\n                    id: \"854600\"\n                    maxChoices: 1\n                    minChoices: 0\n                    name: Stuffed Crust\n                name: Crust\n            name: Base\n            requireOtherProducts: true\n            type: menuItem\n            variations:\n              - availabilityIds:\n                  - 1-lunch-delivery\n                  - 2-lunch-collection\n                  - 3-dinner-delivery\n                  - 4-dinner-collection\n                basePrice: 200\n                dealGroupsIds: []\n                dealOnly: true\n                id: \"1577341\"\n                modifierGroupsIds:\n                  - 1577341-req-1\n                name: \"\"\n                type: noVariation\n          - dealGroups: []\n            description: \"\"\n            id: \"8547130\"\n            labels: []\n            modifierGroups:\n              - id: 8547130-req-1\n                maxChoices: 1\n                minChoices: 1\n                modifiers:\n                  - additionPrice: 0\n                    id: \"854500\"\n                    maxChoices: 1\n                    minChoices: 0\n                    name: Classic Crust\n                  - additionPrice: 200\n                    id: \"854600\"\n                    maxChoices: 1\n                    minChoices: 0\n                    name: Stuffed Crust\n                name: Choose your crust\n              - id: 8547130-opt-1\n                maxChoices: 10\n                minChoices: 0\n                modifiers:\n                  - additionPrice: 50\n                    id: \"1000\"\n                    maxChoices: 2\n                    minChoices: 0\n                    name: Mozzarella Cheese\n                  - additionPrice: 50\n                    id: \"1001\"\n                    maxChoices: 1\n                    minChoices: 0\n                    name: Ham\n                  - additionPrice: 50\n                    id: \"1002\"\n                    maxChoices: 1\n                    minChoices: 0\n                    name: Red Onion\n                  - additionPrice: 50\n                    id: \"1003\"\n                    maxChoices: 1\n                    minChoices: 0\n                    name: Pepperoni\n                  - additionPrice: 50\n                    id: \"1004\"\n                    maxChoices: 1\n                    minChoices: 0\n                    name: Olives\n                name: Any extra toppings?\n            name: Margherita\n            requireOtherProducts: true\n            type: menuItem\n            variations:\n              - availabilityIds:\n                  - 1-lunch-delivery\n                  - 2-lunch-collection\n                  - 3-dinner-delivery\n                  - 4-dinner-collection\n                basePrice: 500\n                dealGroupsIds: []\n                dealOnly: true\n                id: \"8547121\"\n                kitchenNumber: \"100\"\n                modifierGroupsIds:\n                  - 8547130-opt-1\n                name: Half\n                type: variation\n              - availabilityIds:\n                  - 1-lunch-delivery\n                  - 2-lunch-collection\n                  - 3-dinner-delivery\n                  - 4-dinner-collection\n                basePrice: 1000\n                dealGroupsIds: []\n                dealOnly: false\n                id: \"8547130\"\n                kitchenNumber: \"100\"\n                modifierGroupsIds:\n                  - 8547130-req-1\n                  - 8547130-opt-1\n                name: 12 inch\n                type: variation\n              - availabilityIds:\n                  - 1-lunch-delivery-weekday\n                  - 2-lunch-collection-weekday\n                  - 3-dinner-delivery-weekday\n                  - 4-dinner-collection-weekday\n                basePrice: 1200\n                dealGroupsIds: []\n                dealOnly: true\n                id: \"8543123\"\n                kitchenNumber: \"200\"\n                modifierGroupsIds:\n                  - 8547130-req-1\n                  - 8547130-opt-1\n                name: 14 inch\n                type: variation\n          - dealGroups: []\n            description: \"\"\n            id: \"8547140\"\n            labels: []\n            modifierGroups:\n              - id: 8547140-req-1\n                maxChoices: 1\n                minChoices: 1\n                modifiers:\n                  - additionPrice: 0\n                    id: \"854500\"\n                    maxChoices: 1\n                    minChoices: 0\n                    name: Classic Crust\n                  - additionPrice: 200\n                    id: \"854600\"\n                    maxChoices: 1\n                    minChoices: 0\n                    name: Stuffed Crust\n                name: Choose your crust\n              - id: 8547140-opt-1\n                maxChoices: 10\n                minChoices: 0\n                modifiers:\n                  - additionPrice: 50\n                    id: \"1000\"\n                    maxChoices: 2\n                    minChoices: 0\n                    name: Mozzarella Cheese\n                  - additionPrice: 50\n                    id: \"1001\"\n                    maxChoices: 2\n                    minChoices: 0\n                    name: Ham\n                  - additionPrice: 50\n                    id: \"1002\"\n                    maxChoices: 2\n                    minChoices: 0\n                    name: Red Onion\n                  - additionPrice: 50\n                    id: \"1003\"\n                    maxChoices: 4\n                    minChoices: 2\n                    name: Pepperoni\n                  - additionPrice: 50\n                    id: \"1004\"\n                    maxChoices: 2\n                    minChoices: 0\n                    name: Olives\n                name: Any extra toppings?\n              - id: 9755052-req-1\n                maxChoices: 1\n                minChoices: 1\n                modifiers:\n                  - additionPrice: 0\n                    id: \"854500\"\n                    maxChoices: 1\n                    minChoices: 0\n                    name: Classic Crust\n                  - additionPrice: 250\n                    id: \"854600\"\n                    maxChoices: 1\n                    minChoices: 0\n                    name: Stuffed Crust\n                name: Choose your crust\n              - id: 9755052-opt-1\n                maxChoices: 10\n                minChoices: 0\n                modifiers:\n                  - additionPrice: 70\n                    id: \"1000\"\n                    maxChoices: 2\n                    minChoices: 0\n                    name: Mozzarella Cheese\n                  - additionPrice: 70\n                    id: \"1001\"\n                    maxChoices: 2\n                    minChoices: 0\n                    name: Ham\n                  - additionPrice: 70\n                    id: \"1002\"\n                    maxChoices: 2\n                    minChoices: 0\n                    name: Red Onion\n                  - additionPrice: 70\n                    id: \"1003\"\n                    maxChoices: 2\n                    minChoices: 0\n                    name: Pepperoni\n                  - additionPrice: 70\n                    id: \"1004\"\n                    maxChoices: 2\n                    minChoices: 0\n                    name: Olives\n                name: Any extra toppings?\n            name: Double Pepperoni\n            requireOtherProducts: false\n            type: menuItem\n            variations:\n              - availabilityIds:\n                  - 1-lunch-delivery\n                  - 2-lunch-collection\n                  - 3-dinner-delivery\n                  - 4-dinner-collection\n                basePrice: 500\n                dealGroupsIds: []\n                dealOnly: true\n                id: \"8548153\"\n                kitchenNumber: \"100\"\n                modifierGroupsIds:\n                  - 8547140-opt-1\n                name: Half\n                type: variation\n              - availabilityIds:\n                  - 1-lunch-delivery\n                  - 2-lunch-collection\n                  - 3-dinner-delivery\n                  - 4-dinner-collection\n                basePrice: 1000\n                dealGroupsIds: []\n                dealOnly: false\n                id: \"8547140\"\n                kitchenNumber: \"100\"\n                modifierGroupsIds:\n                  - 8547140-req-1\n                  - 8547140-opt-1\n                name: 12 inch\n                type: variation\n              - availabilityIds:\n                  - 1-lunch-delivery\n                  - 2-lunch-collection\n                  - 3-dinner-delivery\n                  - 4-dinner-collection\n                basePrice: 1200\n                dealGroupsIds: []\n                dealOnly: true\n                id: \"9750021\"\n                kitchenNumber: \"200\"\n                modifierGroupsIds:\n                  - 8547140-req-1\n                  - 8547140-opt-1\n                name: 14 inch\n                type: variation\n              - availabilityIds:\n                  - 2-lunch-collection\n                  - 4-dinner-collection\n                basePrice: 1200\n                dealGroupsIds: []\n                dealOnly: false\n                id: \"9755052\"\n                kitchenNumber: \"200\"\n                modifierGroupsIds:\n                  - 9755052-req-1\n                  - 9755052-opt-1\n                name: 18 inch\n                type: variation\n          - dealGroups: []\n            description: \"\"\n            id: \"3547157\"\n            labels:\n              - vegetarian\n            modifierGroups:\n              - id: 8547140-opt-1\n                maxChoices: 10\n                minChoices: 0\n                modifiers:\n                  - additionPrice: 50\n                    id: \"1000\"\n                    maxChoices: 2\n                    minChoices: 0\n                    name: Mozzarella Cheese\n                  - additionPrice: 50\n                    id: \"1001\"\n                    maxChoices: 2\n                    minChoices: 0\n                    name: Ham\n                  - additionPrice: 50\n                    id: \"1002\"\n                    maxChoices: 2\n                    minChoices: 1\n                    name: Red Onion\n                  - additionPrice: 50\n                    id: \"1003\"\n                    maxChoices: 2\n                    minChoices: 0\n                    name: Pepperoni\n                  - additionPrice: 50\n                    id: \"1004\"\n                    maxChoices: 2\n                    minChoices: 1\n                    name: Olives\n                name: Any extra toppings?\n            name: Vegetarian\n            requireOtherProducts: false\n            type: menuItem\n            variations:\n              - availabilityIds:\n                  - 1-lunch-delivery\n                  - 2-lunch-collection\n                  - 3-dinner-delivery\n                  - 4-dinner-collection\n                basePrice: 500\n                dealGroupsIds: []\n                dealOnly: true\n                id: \"3547157\"\n                kitchenNumber: \"121\"\n                modifierGroupsIds:\n                  - 8547140-opt-1\n                name: \"\"\n                type: noVariation\n          - dealGroups: []\n            description: \"\"\n            id: \"6537130\"\n            labels: []\n            modifierGroups: []\n            name: Coca-Cola\n            requireOtherProducts: true\n            type: menuItem\n            variations:\n              - availabilityIds:\n                  - 1-lunch-delivery\n                  - 2-lunch-collection\n                  - 3-dinner-delivery\n                  - 4-dinner-collection\n                basePrice: 100\n                dealGroupsIds: []\n                dealOnly: false\n                id: \"6537130\"\n                kitchenNumber: \"300\"\n                modifierGroupsIds: []\n                name: 0.33L\n                type: variation\n              - availabilityIds:\n                  - 1-lunch-delivery\n                  - 2-lunch-collection\n                  - 3-dinner-delivery\n                  - 4-dinner-collection\n                basePrice: 300\n                dealGroupsIds: []\n                dealOnly: false\n                id: \"9750011\"\n                kitchenNumber: \"400\"\n                modifierGroupsIds: []\n                name: 1.5L\n                type: variation\n          - dealGroups: []\n            description: \"\"\n            id: \"6537140\"\n            labels: []\n            modifierGroups: []\n            name: Diet Coke\n            requireOtherProducts: true\n            type: menuItem\n            variations:\n              - availabilityIds:\n                  - 1-lunch-delivery\n                  - 2-lunch-collection\n                  - 3-dinner-delivery\n                  - 4-dinner-collection\n                basePrice: 100\n                dealGroupsIds: []\n                dealOnly: false\n                id: \"6537140\"\n                kitchenNumber: \"300\"\n                modifierGroupsIds: []\n                name: 0.33L\n                type: variation\n              - availabilityIds:\n                  - 1-lunch-delivery\n                  - 2-lunch-collection\n                  - 3-dinner-delivery\n                  - 4-dinner-collection\n                basePrice: 300\n                dealGroupsIds: []\n                dealOnly: false\n                id: \"9750312\"\n                kitchenNumber: \"400\"\n                modifierGroupsIds: []\n                name: 1.5L\n                type: variation\n          - dealGroups: []\n            description: \"\"\n            id: \"7739164\"\n            labels: []\n            modifierGroups: []\n            name: Bottle of Lager\n            requireOtherProducts: true\n            type: menuItem\n            variations:\n              - availabilityIds:\n                  - 2-lunch-collection\n                  - 4-dinner-collection\n                basePrice: 300\n                dealGroupsIds: []\n                dealOnly: false\n                id: \"7739164\"\n                kitchenNumber: \"700\"\n                modifierGroupsIds: []\n                name: \"\"\n                type: noVariation\n        name: My Restaurant\n        restaurantId: \"100059\"\n    MenuAllEditsResponse:\n      description: All pending changes\n      example:\n        - CategoryId: \"1\"\n          CategoryName: Pizzas\n          Description: It's a pizza\n          EditType: Add\n          Labels:\n            - Vegetarian\n          MenuItemId: \"123\"\n          MenuItemName: Cheese Pizza\n          OptionGroups:\n            - Id: \"1\"\n              MaxChoices: 1\n              MinChoices: 1\n              Modifiers:\n                - Id: \"9\"\n                  Name: Gluten-free\n                  Variations:\n                    - AdditionPrice: 1.5\n                      ModifierGroupId: \"1\"\n                      Selected: true\n                      VariationId: \"4\"\n                      VariationName: Large\n                    - AdditionPrice: 1.3\n                      ModifierGroupId: \"1\"\n                      Selected: true\n                      VariationId: \"5\"\n                      VariationName: Small\n              Name: Bases\n          PreferenceGroups:\n            - Id: \"12\"\n              MaxChoices: 1\n              MinChoices: 0\n              Modifiers:\n                - Id: \"9\"\n                  Name: Ham\n                  Variations:\n                    - AdditionPrice: 0.5\n                      ModifierGroupId: \"12\"\n                      Selected: true\n                      VariationId: \"4\"\n                      VariationName: Large\n              Name: Meats\n          ReceiptNumber: 321a\n          Variations:\n            - Id: \"32\"\n              Name: Large\n              OptionGroupIds:\n                - \"1\"\n              PreferenceGroupIds:\n                - \"12\"\n                - \"32\"\n              Price: 12.32\n              Type: ???\n      items:\n        $ref: \"#/components/schemas/MenuEditResponse\"\n      type: array\n      uniqueItems: false\n    MenuBase:\n      example:\n        currency: GBP\n        description: My excellent menu\n        name: My Restaurant\n        restaurantId: \"100059\"\n      properties:\n        currency:\n          description: The currency of the items on the menu in ISO 4217 format, i.e. GBP, EUR or AUD\n          type: string\n        description:\n          description: A top level description for the menu.\n          type: string\n        name:\n          description: The name of the restaurant.\n          type: string\n        restaurantId:\n          description: A unique identifier at tenant level for a given restaurant.\n          type: string\n      type: object\n    MenuCategory:\n      additionalProperties: false\n      properties:\n        description:\n          description: Description of category\n          nullable: true\n          readOnly: true\n          type: string\n        name:\n          description: Name of category\n          nullable: true\n          readOnly: true\n          type: string\n        productGroups:\n          description: Product group\n          items:\n            $ref: \"#/components/schemas/ProductGroup\"\n          nullable: true\n          readOnly: true\n          type: array\n      type: object\n    MenuDealGroup:\n      allOf:\n        - $ref: \"#/components/schemas/MenuDealGroupBase\"\n        - properties:\n            dealItemVariations:\n              description: The ids of the variations that can be selected in order to satisfy this deal group.\n              items:\n                $ref: \"#/components/schemas/DealItemVariation\"\n              type: array\n            id:\n              description: A unique identifier at menu level for a deal group.\n              type: string\n            name:\n              description: The name of the deal group.\n              type: string\n            numberOfChoices:\n              description: How many deal item variations must be selected to satisfy this deal group.\n              format: int32\n              type: integer\n          type: object\n      example:\n        dealItemVariations:\n          - additionPrice: 0\n            dealItemVariationId: \"8547121\"\n            maxChoices: 1\n            minChoices: 0\n          - additionPrice: 0\n            dealItemVariationId: \"3547157\"\n            maxChoices: 1\n            minChoices: 0\n          - additionPrice: 50\n            dealItemVariationId: \"8548153\"\n            maxChoices: 1\n            minChoices: 0\n        id: 23435309-2\n        name: Choose your pizzas\n        numberOfChoices: 2\n    MenuDealGroupBase:\n      example:\n        id: 23435309-2\n        name: Choose your pizzas\n        numberOfChoices: 2\n      properties:\n        id:\n          description: A unique identifier at menu level for a deal group.\n          type: string\n        name:\n          description: The name of the deal group.\n          type: string\n        numberOfChoices:\n          description: How many deal item variations must be selected to satisfy this deal group.\n          format: int32\n          type: integer\n      type: object\n    MenuEditResponse:\n      example:\n        CategoryId: \"1\"\n        CategoryName: Pizzas\n        Description: Cheesy pizza\n        EditType: Add\n        Labels:\n          - Vegetarian\n        MenuItemId: \"12\"\n        MenuItemName: Cheese pizza\n        OptionGroups:\n          - Id: \"1\"\n            MaxChoices: 1\n            MinChoices: 1\n            Modifiers:\n              - Id: \"9\"\n                Name: Gluten-free\n                Variations:\n                  - AdditionPrice: 1.5\n                    ModifierGroupId: \"1\"\n                    Selected: true\n                    VariationId: \"4\"\n                    VariationName: Large\n                  - AdditionPrice: 1.3\n                    ModifierGroupId: \"1\"\n                    Selected: true\n                    VariationId: \"5\"\n                    VariationName: Small\n            Name: Bases\n        PreferenceGroups:\n          - Id: \"12\"\n            MaxChoices: 1\n            MinChoices: 0\n            Modifiers:\n              - Id: \"9\"\n                Name: Ham\n                Variations:\n                  - AdditionPrice: 0.5\n                    ModifierGroupId: \"12\"\n                    Selected: true\n                    VariationId: \"4\"\n                    VariationName: Large\n            Name: Meats\n          - Id: \"32\"\n            MaxChoices: 1\n            MinChoices: 0\n            Modifiers:\n              - Id: \"7\"\n                Name: Pineapple\n                Variations:\n                  - AdditionPrice: 0.5\n                    ModifierGroupId: \"32\"\n                    Selected: true\n                    VariationId: \"4\"\n                    VariationName: Large\n                  - AdditionPrice: 0.3\n                    ModifierGroupId: \"32\"\n                    Selected: true\n                    VariationId: \"5\"\n                    VariationName: Small\n            Name: Veggies\n        ReceiptNumber: \"123\"\n        Variations:\n          - Id: \"4\"\n            Name: Large\n            OptionGroupIds:\n              - \"1\"\n            PreferenceGroupIds:\n              - \"12\"\n              - \"32\"\n            Price: 12.32\n          - Id: \"5\"\n            Name: Small\n            OptionGroupIds:\n              - \"1\"\n            PreferenceGroupIds:\n              - \"32\"\n            Price: 8.99\n      properties:\n        CategoryId:\n          description: Id of the category of the menu item\n          type: string\n        CategoryName:\n          description: Name of the category of the menu item\n          type: string\n        Description:\n          description: Description of the menu item\n          type: string\n        EditType:\n          description: Action being applied to the menu item\n          enum:\n            - Add\n            - Edit\n            - Delete\n            - None\n          format: string\n          type: string\n        Labels:\n          description: Labels for the menu item\n          items:\n            type: string\n          type: array\n          uniqueItems: false\n        MenuItemId:\n          description: Id of the menu item\n          type: string\n        MenuItemName:\n          description: Name of the menu item\n          type: string\n        OptionGroups:\n          description: Option groups available for the menu item\n          items:\n            $ref: \"#/components/schemas/ModifierGroupResponse\"\n          type: array\n          uniqueItems: false\n        PreferenceGroups:\n          description: Preference groups available for the menu item\n          items:\n            $ref: \"#/components/schemas/ModifierGroupResponse\"\n          type: array\n          uniqueItems: false\n        ReceiptNumber:\n          description: Receipt or kitchen number of the menu item\n          type: string\n        Variations:\n          description: Variations applicable to the menu item\n          items:\n            $ref: \"#/components/schemas/VariationResponse\"\n          type: array\n          uniqueItems: false\n      type: object\n    MenuIngestionResponse:\n      example:\n        correlationId: 64bef5ee-7265-47f8-9aee-28bc74f00b13\n      properties:\n        correlationId:\n          description: An ID for the asynchronous operation to ingest the menu\n          type: string\n      type: object\n    MenuItem:\n      allOf:\n        - $ref: \"#/components/schemas/MenuItemBase\"\n        - properties:\n            dealGroups:\n              description: A set of deal groups for this menu item.\n              items:\n                $ref: \"#/components/schemas/MenuDealGroup\"\n              type: array\n            imageUrl:\n              description: A menu item image URL.\n              type: string\n            modifierGroups:\n              description: A set of modifier groups for this menu item.\n              items:\n                $ref: \"#/components/schemas/MenuModifierGroup\"\n              type: array\n            variations:\n              description: A set of variations of this menu item.\n              items:\n                $ref: \"#/components/schemas/Variation\"\n              type: array\n          type: object\n      example:\n        dealGroups: []\n        description: \"\"\n        id: \"65143901\"\n        imageUrl: http://cdn.images/flat_bread_dips.png\n        labels: []\n        modifierGroups:\n          - id: 65143901-req-1\n            maxChoices: 1\n            minChoices: 1\n            modifiers:\n              - additionPrice: 0\n                id: \"834502\"\n                maxChoices: 1\n                minChoices: 0\n                name: Pitta Bread\n              - additionPrice: 0\n                id: \"835700\"\n                maxChoices: 1\n                minChoices: 0\n                name: Sourdough\n              - additionPrice: 50\n                id: \"835601\"\n                maxChoices: 1\n                minChoices: 0\n                name: Wholemeal\n            name: Bread\n          - id: 65143901-req-2\n            maxChoices: 2\n            minChoices: 2\n            modifiers:\n              - additionPrice: 0\n                id: \"835340\"\n                maxChoices: 2\n                minChoices: 0\n                name: Tzatziki\n              - additionPrice: 0\n                id: \"835341\"\n                maxChoices: 2\n                minChoices: 0\n                name: Taramasalata\n              - additionPrice: 0\n                id: \"825344\"\n                maxChoices: 2\n                minChoices: 0\n                name: Hummus\n              - additionPrice: 0\n                id: \"825346\"\n                maxChoices: 2\n                minChoices: 0\n                name: Onion\n            name: Dips\n        name: Flat Bread and Dips (Pick any 2 Dips)\n        requireOtherProducts: false\n        type: menuItem\n        variations:\n          - availabilityIds:\n              - 1-lunch-delivery\n              - 2-lunch-collection\n              - 3-dinner-delivery\n              - 4-dinner-collection\n            basePrice: 650\n            dealGroupsIds: []\n            dealOnly: false\n            id: \"65143901\"\n            kitchenNumber: \"90\"\n            modifierGroupsIds:\n              - 65143901-req-1\n              - 65143901-req-2\n            name: \"\"\n            type: noVariation\n    MenuItemBase:\n      example:\n        description: \"\"\n        id: \"65143901\"\n        labels: []\n        name: Flat Bread and Dips (Pick any 2 Dips)\n        requireOtherProducts: false\n        type: menuItem\n      properties:\n        description:\n          description: The description of the menu item.\n          type: string\n        id:\n          description: A unique identifier at menu level for a menu item.\n          type: string\n        labels:\n          description: Used to toggle front end icons for the available labels.\n          items:\n            enum:\n              - hot\n              - vegetarian\n              - alcohol\n            type: string\n          maxItems: 3\n          minItems: 0\n          type: array\n        name:\n          description: The name of the menu item.\n          type: string\n        requireOtherProducts:\n          description: Cannot be selected as a stand alone item, it has to be ordered with other items. Typically this will apply to menu items within drinks and dessert categories.\n          type: boolean\n        type:\n          description: Indicates whether this is a regular meal item or a deal item.\n          enum:\n            - menuItem\n            - deal\n          type: string\n      type: object\n    MenuItemDetailsResponse:\n      example:\n        Category:\n          Id: \"21\"\n          Name: Pizzas\n        Description: Boring pizza\n        HasPendingChange: true\n        Id: \"1\"\n        IsDeal: false\n        Labels:\n          - Vegetarian\n        Name: Pizza\n        OptionGroups:\n          - Id: \"1\"\n            MaxChoices: 1\n            MinChoices: 1\n            Modifiers:\n              - Id: \"9\"\n                Name: Gluten-free\n                Variations:\n                  - AdditionPrice: 1.5\n                    ModifierGroupId: \"1\"\n                    Selected: true\n                    VariationId: \"4\"\n                    VariationName: Large\n                  - AdditionPrice: 1.3\n                    ModifierGroupId: \"1\"\n                    Selected: true\n                    VariationId: \"5\"\n                    VariationName: Small\n            Name: Bases\n        PreferenceGroups:\n          - Id: \"12\"\n            MaxChoices: 1\n            MinChoices: 0\n            Modifiers:\n              - Id: \"9\"\n                Name: Ham\n                Variations:\n                  - AdditionPrice: 0.5\n                    ModifierGroupId: \"12\"\n                    Selected: true\n                    VariationId: \"4\"\n                    VariationName: Large\n            Name: Meats\n          - Id: \"32\"\n            MaxChoices: 1\n            MinChoices: 0\n            Modifiers:\n              - Id: \"7\"\n                Name: Pineapple\n                Variations:\n                  - AdditionPrice: 0.5\n                    ModifierGroupId: \"32\"\n                    Selected: true\n                    VariationId: \"4\"\n                    VariationName: Large\n                  - AdditionPrice: 0.3\n                    ModifierGroupId: \"32\"\n                    Selected: true\n                    VariationId: \"5\"\n                    VariationName: Small\n            Name: Veggies\n        ReceiptNumber: \"987\"\n        Variations:\n          - Id: \"4\"\n            Name: Large\n            OptionGroupIds:\n              - \"1\"\n            PreferenceGroupIds:\n              - \"12\"\n              - \"32\"\n            Price: 12.32\n          - Id: \"5\"\n            Name: Small\n            OptionGroupIds:\n              - \"1\"\n            PreferenceGroupIds:\n              - \"32\"\n            Price: 8.99\n      properties:\n        Category:\n          $ref: \"#/components/schemas/CategoryResponse\"\n          description: Category of the menu item\n        Description:\n          description: Description of the menu item\n          type: string\n        HasPendingChange:\n          description: Whether the item has pending changes\n          type: boolean\n        Id:\n          description: Id of the menu item\n          type: string\n        IsDeal:\n          description: Is a deal\n          type: boolean\n        Labels:\n          description: Labels of the menu item\n          items:\n            type: string\n          type: array\n          uniqueItems: false\n        Name:\n          description: Name of the menu item\n          type: string\n        OptionGroups:\n          description: Option groups of the menu item\n          items:\n            $ref: \"#/components/schemas/ModifierGroupResponse\"\n          type: array\n          uniqueItems: false\n        PreferenceGroups:\n          description: Preference groups of the menu item\n          items:\n            $ref: \"#/components/schemas/ModifierGroupResponse\"\n          type: array\n          uniqueItems: false\n        ReceiptNumber:\n          description: The receipt or kitchen number of the menu item\n          type: string\n        Variations:\n          description: Variations applicable to the menu item\n          items:\n            $ref: \"#/components/schemas/VariationResponse\"\n          type: array\n          uniqueItems: false\n      type: object\n    MenuItemResponse:\n      example:\n        Description: It's a pizza\n        HasPendingChange: true\n        Id: \"1\"\n        IsDeal: false\n        Labels:\n          - Vegetarian\n        Name: Pizza\n        ReceiptNumber: \"123\"\n        Variations:\n          - Id: \"4\"\n            Name: Large\n            OptionGroupIds:\n              - \"1\"\n            PreferenceGroupIds:\n              - \"12\"\n              - \"32\"\n            Price: 12.32\n          - Id: \"5\"\n            Name: Small\n            OptionGroupIds:\n              - \"1\"\n            PreferenceGroupIds:\n              - \"32\"\n            Price: 8.99\n      properties:\n        Description:\n          description: Description of the menu item\n          type: string\n        HasPendingChange:\n          description: Whether the item has pending changes\n          type: boolean\n        Id:\n          description: Id of the menu item\n          type: string\n        IsDeal:\n          description: Is a deal\n          type: boolean\n        Labels:\n          description: Labels of the menu item\n          items:\n            type: string\n          type: array\n          uniqueItems: false\n        Name:\n          description: Name of the menu item\n          type: string\n        ReceiptNumber:\n          description: The receipt or kitchen number of the menu item\n          type: string\n        Variations:\n          description: Variations applicable to the menu item\n          items:\n            $ref: \"#/components/schemas/VariationResponse\"\n          type: array\n          uniqueItems: false\n      type: object\n    MenuItemVariationResponse:\n      example:\n        MenuItemId: \"1\"\n        PreferenceGroupsIds:\n          - 4\n          - 5\n        UnitsOfferedInDealGroup: 3\n        VariationId: \"9\"\n      properties:\n        MenuItemId:\n          description: Id of the menu item\n          type: string\n        PreferenceGroupsIds:\n          description: List of Preference Group Ids\n          items:\n            format: int32\n            type: integer\n          type: array\n          uniqueItems: false\n        UnitsOfferedInDealGroup:\n          description: Units offered in deal group\n          format: int32\n          type: integer\n        VariationId:\n          description: Id of the variation\n          type: string\n      type: object\n    MenuModifier:\n      example:\n        additionPrice: 200\n        id: \"854600\"\n        maxChoices: 1\n        minChoices: 0\n        name: Stuffed Crust\n      properties:\n        additionPrice:\n          description: Selecting this modifier will increase the base price of the variation by this amount in the minor unit of the currency.\n          format: int32\n          type: number\n        id:\n          description: A unique identifier relative to the menu for a modifier.\n          type: string\n        maxChoices:\n          description: The maximum number of times this modifier can be chosen within a given modifier group.\n          format: int32\n          type: integer\n        minChoices:\n          description: The minimum number of times this modifier can be chosen within a given modifier group.\n          format: int32\n          type: integer\n        name:\n          description: The name of the modifier.\n          type: string\n      type: object\n    MenuModifierGroup:\n      example:\n        id: 8547130-req-1\n        maxChoices: 1\n        minChoices: 1\n        modifiers:\n          - additionPrice: 0\n            id: \"854500\"\n            maxChoices: 1\n            minChoices: 0\n            name: Classic Crust\n          - additionPrice: 200\n            id: \"854600\"\n            maxChoices: 1\n            minChoices: 0\n            name: Stuffed Crust\n        name: Choose your crust\n      properties:\n        id:\n          description: A unique identifier relative to the menu for a modifier group.\n          type: string\n        maxChoices:\n          description: The maximum number of modifiers that must be selected to satisfy this modifier group.\n          format: int32\n          type: integer\n        minChoices:\n          description: The minimum number of modifiers that must be selected to satisfy this modifier group.\n          format: int32\n          type: integer\n        modifiers:\n          description: The modifiers that can be selected to satisfy this modifier group.\n          items:\n            $ref: \"#/components/schemas/MenuModifier\"\n          type: array\n        name:\n          description: A name for the modifier group, usually phrased as a question, e.g. Would you like any extras?\n          type: string\n      type: object\n    MenuRecommendationsRequest:\n      description: Describes a request for dish recommendations for a particular restaurant menu.\n      properties:\n        orderRequestDetails:\n          description: Defines the time and service type for which the order is requested.\n          properties:\n            dayOfWeek:\n              description: The day of the week that the order is placed for.\n              enum:\n                - sunday\n                - monday\n                - tuesday\n                - wednesday\n                - thursday\n                - friday\n                - saturday\n              type: string\n            orderedForTime:\n              description: |\n                The time, local to restaurant, in ISO 8601 format, that the order is requested for. If the ordered for time is not known at the point of this request then the time should be the current local time.\n              format: time\n              type: string\n            serviceType:\n              description: The service type, \"collection\" or \"delivery\".\n              enum:\n                - collection\n                - delivery\n              type: string\n          type: object\n        restaurantId:\n          description: The id of the restaurant that the recommendations are for.\n          type: string\n      required:\n        - restaurantId\n        - orderRequestDetails\n      type: object\n    MenuRecommendationsResponse:\n      description: Contains menu dish recommendations.\n      properties:\n        themes:\n          description: List of the themes of the recommendations, i.e. personal favourites, most popular, etc.\n          items:\n            properties:\n              id:\n                description: Unique identifier for the theme.\n                type: string\n              recommendations:\n                description: List of dish recommendations for the theme.\n                items:\n                  properties:\n                    confidence:\n                      description: Recommendation confidence score.\n                      format: double\n                      type: number\n                    productId:\n                      description: ID of a product/dish being recommended.\n                      type: string\n                    type:\n                      description: Describes the type of recommendation, i.e. popular, healthy.\n                      type: string\n                  type: object\n                maxItems: 20\n                minItems: 0\n                type: array\n            type: object\n          maxItems: 10\n          minItems: 0\n          type: array\n      required:\n        - themes\n      type: object\n    MergedMenuCard:\n      additionalProperties: false\n      properties:\n        categories:\n          additionalProperties:\n            $ref: \"#/components/schemas/MenuCategory\"\n          description: Menu items of the restaurant with offline/online statuses grouped by category\n          nullable: true\n          type: object\n      type: object\n    MergedMenuResponse:\n      additionalProperties: false\n      properties:\n        menuCard:\n          $ref: \"#/components/schemas/MergedMenuCard\"\n          description: Menu items of the restaurant with offline/online statuses grouped by category\n      type: object\n    MergedProduct:\n      additionalProperties: false\n      properties:\n        id:\n          description: The id of the product\n          nullable: true\n          type: string\n        ids:\n          deprecated: true\n          description: Deprecated, not in use\n          items:\n            format: int32\n            type: integer\n          nullable: true\n          type: array\n        isOffline:\n          description: Is this product offline?\n          type: boolean\n        name:\n          description: Product name\n          nullable: true\n          type: string\n      type: object\n    MissingItem:\n      additionalProperties: false\n      properties:\n        itemReference:\n          description: Product reference of missing item\n          nullable: true\n          type: string\n        name:\n          description: Name of the missing item\n          nullable: true\n          type: string\n        quantity:\n          description: Number of items missing\n          format: int32\n          type: integer\n        refundAmount:\n          description: Total cost of missing item\n          format: decimal\n          type: number\n      type: object\n    MissingItemClaim:\n      additionalProperties: false\n      properties:\n        id:\n          description: Id of the missing item claim\n          nullable: true\n          type: string\n        missingItems:\n          description: Items that are missing\n          items:\n            $ref: \"#/components/schemas/MissingItem\"\n          nullable: true\n          type: array\n        refundRefusedReasonCode:\n          description: Reason for refusing if status is refused\n          nullable: true\n          type: string\n        status:\n          $ref: \"#/components/schemas/MissingItemClaimStatus\"\n          description: Current status of the missing item claim\n        totalAmount:\n          description: Total cost of the claim\n          format: decimal\n          type: number\n        totalNumberItems:\n          description: Total quantity of items in the claim\n          format: int32\n          type: integer\n      type: object\n    MissingItemClaimStatus:\n      description: Status of missing item claim\n      enum:\n        - Unknown\n        - Pending\n        - Viewed\n        - RefundAccepted\n        - RefundRefused\n      type: string\n    Modifier:\n      properties:\n        MaximumAdditionalModifiers:\n          format: integer\n          type: number\n        ModifierId:\n          type: string\n        Name:\n          type: string\n        Quantity:\n          format: integer\n          type: number\n        TotalPrice:\n          format: decimal\n          type: number\n      required:\n        - MaximumAdditionalModifiers\n      type: object\n    ModifierGroup:\n      properties:\n        MinimumChoices:\n          format: integer\n          type: number\n        ModifierGroupId:\n          type: string\n        Modifiers:\n          items:\n            $ref: \"#/components/schemas/Modifier\"\n          type: array\n      required:\n        - MinimumChoices\n      type: object\n    ModifierGroupResponse:\n      example:\n        Id: \"1\"\n        MaxChoices: 3\n        MinChoices: 0\n        Modifiers:\n          - Id: \"9\"\n            Name: Ham\n            Variations:\n              - AdditionPrice: 0.5\n                ModifierGroupId: \"1\"\n                Selected: true\n                VariationId: \"4\"\n                VariationName: Large\n          - Id: \"10\"\n            Name: Sausage\n            Variations:\n              - AdditionPrice: 0.5\n                ModifierGroupId: \"1\"\n                Selected: true\n                VariationId: \"4\"\n                VariationName: Large\n        Name: Toppings\n      properties:\n        Id:\n          description: Id of Modifier Group\n          type: string\n        MaxChoices:\n          description: The maximum number of options allowed to be selected\n          format: int32\n          type: integer\n        MinChoices:\n          description: The minimum number of options allowed to be selected\n          format: int32\n          type: integer\n        Modifiers:\n          description: A list of modifiers within the group\n          items:\n            $ref: \"#/components/schemas/ModifierResponse\"\n          type: array\n          uniqueItems: false\n        Name:\n          description: Name of Modifier Group\n          type: string\n      type: object\n    ModifierResponse:\n      example:\n        Id: \"9\"\n        Name: Ham\n        Variations:\n          - AdditionPrice: 0.5\n            ModifierGroupId: \"1\"\n            Selected: true\n            VariationId: \"4\"\n            VariationName: Large\n      properties:\n        AdditionPrice:\n          description: The additional price\n          format: double\n          type: number\n        DefaultChoices:\n          description: The default number of options allowed to be selected\n          format: int32\n          type: integer\n        Id:\n          description: Id of the modifier\n          type: string\n        MaxChoices:\n          description: The maximum number of options allowed to be selected\n          format: int32\n          type: integer\n        MinChoices:\n          description: The minimum number of options allowed to be selected\n          format: int32\n          type: integer\n        Name:\n          description: Name of the modifier\n          type: string\n        RemovePrice:\n          description: The cost to remove\n          format: double\n          type: number\n        Variations:\n          description: The variations to which this modifiers applies\n          items:\n            $ref: \"#/components/schemas/VariationModifierResponse\"\n          type: array\n          uniqueItems: false\n      type: object\n    NotFoundMarketingResponse:\n      $ref: \"#/components/schemas/MarketingErrorResponse\"\n      description: 404 Not Found Returned\n      example:\n        errors:\n          - description: Campaign Not found\n            errorCode: \"404\"\n        faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n        message: The requested resource could not found.\n    Nutritional:\n      example:\n        alcohol:\n          unit: \"%\"\n          value: 7.5\n        caffeine:\n          unit: mg\n          value: 10\n        calories:\n          unit: kcal\n          value: 42\n        carbohydrate:\n          unit: mg\n          value: 22000\n        energy:\n          unit: kJ\n          value: 175.5\n        fat:\n          unit: mg\n          value: 16000\n        fattyAcidTotal:\n          unit: mg\n          value: 100\n        protein:\n          unit: mg\n          value: 4000.01\n        salt:\n          unit: mg\n          value: 20\n        sodium:\n          unit: mg\n          value: 10\n        sugar:\n          unit: mg\n          value: 9100\n      properties:\n        alcohol:\n          description: Alcohol by volume value for product\n          properties:\n            unit:\n              description: Unit of the item\n              nullable: false\n              type: string\n            value:\n              description: Value of the item\n              nullable: true\n              type: number\n        caffeine:\n          description: Caffeine milligram value for product\n          properties:\n            unit:\n              description: Unit of the item\n              nullable: false\n              type: string\n            value:\n              description: Value of the item\n              nullable: true\n              type: number\n        calories:\n          description: Calories value for product\n          properties:\n            unit:\n              description: Unit of the item\n              nullable: false\n              type: string\n            value:\n              description: Value of the item\n              nullable: true\n              type: number\n        carbohydrate:\n          description: Carbohydrate value for product\n          properties:\n            unit:\n              description: Unit of the item\n              nullable: false\n              type: string\n            value:\n              description: Value of the item\n              nullable: true\n              type: number\n        energy:\n          description: Energy value for product\n          properties:\n            unit:\n              description: Unit of the item\n              nullable: false\n              type: string\n            value:\n              description: Value of the item\n              nullable: true\n              type: number\n        fat:\n          description: Fat value for product\n          properties:\n            unit:\n              description: Unit of the item\n              nullable: false\n              type: string\n            value:\n              description: Value of the item\n              nullable: true\n              type: number\n        fattyAcidTotal:\n          description: Fatty Acid value for product\n          properties:\n            unit:\n              description: Unit of the item\n              nullable: false\n              type: string\n            value:\n              description: Value of the item\n              nullable: true\n              type: number\n        protein:\n          description: Protein value for product\n          properties:\n            unit:\n              description: Unit of the item\n              nullable: false\n              type: string\n            value:\n              description: Value of the item\n              nullable: true\n              type: number\n        salt:\n          description: Salt value for product\n          properties:\n            unit:\n              description: Unit of the item\n              nullable: false\n              type: string\n            value:\n              description: Value of the item\n              nullable: true\n              type: number\n        sodium:\n          description: Sodium value for product\n          properties:\n            unit:\n              description: Unit of the item\n              nullable: false\n              type: string\n            value:\n              description: Value of the item\n              nullable: true\n              type: number\n        sugar:\n          description: Sugar value for product\n          properties:\n            unit:\n              description: Unit of the item\n              nullable: false\n              type: string\n            value:\n              description: Value of the item\n              nullable: true\n              type: number\n      type: object\n    Offer:\n      description: The object representing offer entry\n      example:\n        consumerSegment: All\n        dayOfWeek: Monday\n        discountAmount: 15\n        discountType: Percent\n        endTime: 09:00:00\n        id: \"1\"\n        offerType: Percent\n        qualifyingValue:\n          currency: GBP\n          value: 1000\n        startTime: 06:00:00\n        validFrom: 2019-08-06T09:01:12.970Z\n        validTo: 2019-09-03T00:00:00.000Z\n      properties:\n        campaignId:\n          description: Campaign id\n          nullable: true\n          type: string\n        consumerSegment:\n          $ref: \"#/components/schemas/PartnerConsumerSegment\"\n          description: Consumer Segment to which offer applies\n          nullable: false\n        dayOfWeek:\n          description: Day of week to run the offer\n          enum:\n            - Sunday\n            - Monday\n            - Tuesday\n            - Wednesday\n            - Thursday\n            - Friday\n            - Saturday\n          nullable: false\n          type: string\n        discountAmount:\n          description: Amount of the discount\n          format: double\n          nullable: false\n          type: number\n        endTime:\n          description: Timestamp when offer ends during the day\n          format: time\n          nullable: true\n          type: string\n        freeProducts:\n          description: The product that gets 100% discount applied\n          items:\n            properties:\n              id:\n                description: The unique identifier of the product.\n                nullable: false\n                type: string\n              modifiers:\n                description: The collection of preselected modifiers for the item.\n                items:\n                  properties:\n                    modifierId:\n                      description: The unique identifier of the modifier.\n                      nullable: false\n                      type: string\n                    quantity:\n                      description: The required quantity of the modifier.\n                      format: int32\n                      nullable: false\n                      type: integer\n                  type: object\n                nullable: true\n                type: array\n            type: object\n          nullable: true\n          type: array\n        id:\n          description: Internal id of the offer\n          nullable: false\n          type: string\n        offerDescription:\n          description: The description of the offer.\n          nullable: true\n          type: string\n        offerType:\n          $ref: \"#/components/schemas/PartnerOfferType\"\n          description: Type of the offer\n          nullable: false\n        qualifyingProductIds:\n          description: One of those products needed to be included in the collection of products to make offer applicable\n          items:\n            type: string\n          nullable: true\n          type: array\n        qualifyingValue:\n          description: Minimum qualifying value for offer to be applied\n          nullable: true\n          properties:\n            currency:\n              description: Currency code in ISO 4217 format\n              nullable: false\n              type: string\n            value:\n              description: Smallest unit of local currency\n              format: int32\n              nullable: false\n              type: integer\n          type: object\n        startTime:\n          description: Timestamp when offer starts during the day\n          format: time\n          nullable: true\n          type: string\n        validFrom:\n          description: The date when offer starts\n          format: date-time\n          nullable: false\n          type: string\n        validTo:\n          description: The date when offer ends\n          format: date-time\n          nullable: true\n          type: string\n      type: object\n    OfferCampaign:\n      example:\n        active: true\n        daysOfWeek:\n          - Monday\n          - Friday\n        discountAmount: 15\n        enabled: true\n        end: 2019-09-03T00:00:00.000Z\n        id: \"1\"\n        qualifyingValue:\n          currency: GBP\n          value: 5000\n        start: 2019-08-06T09:01:12.970Z\n        subscribed: true\n        type: CheekyCampaign\n      properties:\n        active:\n          description: Calculated, is the campaign enabled and within start and end date\n          readOnly: true\n          type: boolean\n        daysOfWeek:\n          description: Days of week to run the campaign\n          items:\n            enum:\n              - Sunday\n              - Monday\n              - Tuesday\n              - Wednesday\n              - Thursday\n              - Friday\n              - Saturday\n            type: string\n          nullable: false\n          type: array\n          uniqueItems: true\n        discountAmount:\n          description: Amount of the discount\n          format: double\n          nullable: false\n          type: number\n        enabled:\n          description: Is the offer campaign allowed to be active\n          nullable: false\n          readOnly: false\n          type: boolean\n        end:\n          description: The date when offer campaign ends\n          format: date-time\n          nullable: true\n          readOnly: false\n          type: string\n        id:\n          description: Internal id of the offer campaign\n          type: string\n        qualifyingValue:\n          description: qualifying value for a given offer template\n          nullable: false\n          properties:\n            currency:\n              description: Currency code in ISO 4217 format\n              nullable: false\n              type: string\n            value:\n              description: Smallest unit of local currency\n              format: int32\n              nullable: false\n              type: integer\n          type: object\n        start:\n          description: The date when offer campaign starts\n          format: date-time\n          nullable: true\n          readOnly: false\n          type: string\n        subscribed:\n          description: Is restaurant subscribed to this campaign\n          nullable: false\n          readOnly: true\n          type: boolean\n        type:\n          description: Type of the offer campaign\n          enum:\n            - CheekyCampaign\n            - DonationCampaign\n            - FastMovingGoodsCampaign\n          nullable: false\n          type: string\n      type: object\n    OfferTemplate:\n      example:\n        consumerSegment: All\n        discountValue: 15\n        id: 333\n        maxQualifyingValue:\n          currency: GBP\n          value: 5000\n        offerType: Percent\n      properties:\n        consumerSegment:\n          $ref: \"#/components/schemas/PartnerConsumerSegment\"\n          description: Consumer Segment that offer applies\n          nullable: false\n        discountValue:\n          description: Amount of the discount\n          format: double\n          nullable: false\n          type: number\n        id:\n          description: Internal id of the offer template\n          format: int32\n          nullable: false\n          type: integer\n        maxQualifyingValue:\n          description: Maximum qualifying value for a given offer template\n          nullable: false\n          properties:\n            currency:\n              description: Currency code in ISO 4217 format\n              type: string\n            value:\n              description: Smallest unit of local currency\n              format: int32\n              type: integer\n          type: object\n        offerType:\n          $ref: \"#/components/schemas/PartnerOfferType\"\n          description: Type of the offer\n          nullable: false\n      type: object\n    OfflineItemsRequest:\n      example:\n        modifierIds:\n          - \"777\"\n          - \"888\"\n          - \"999\"\n        nextAvailableAt: 2021-01-01T05:00:00.0000000Z\n        variationIds:\n          - \"111\"\n          - \"222\"\n          - \"333\"\n      properties:\n        modifierIds:\n          description: Modifier identifiers. Maximum sum of 25 Variation and Modifier IDs.\n          items:\n            type: string\n          maxItems: 25\n          minItems: 0\n          type: array\n        nextAvailableAt:\n          description: Time when items will be brought back online (ISO-8601 Date Time UTC).\n          format: date-time\n          type: string\n        variationIds:\n          description: Variation identifiers. Maximum sum of 25 Variation and Modifier IDs.\n          items:\n            type: string\n          maxItems: 25\n          minItems: 0\n          type: array\n      type: object\n    OfflineItemsResponse:\n      example:\n        id: \"111\"\n        nextAvailableAt: 2021-01-01T05:00:00.0000000Z\n        type: variation\n      properties:\n        id:\n          description: Item identifier.\n          items:\n            type: string\n          type: string\n        nextAvailableAt:\n          description: Time when item(s) will be brought back online (ISO-8601 Date Time UTC).\n          format: date-time\n          type: string\n        type:\n          description: Item type identifier.\n          items:\n            type: string\n          type: string\n      type: object\n    OfflineProduct:\n      properties:\n        Name:\n          type: string\n        ProductId:\n          type: string\n      type: object\n    OfflineProductsResponse:\n      additionalProperties: false\n      properties:\n        offlineProducts:\n          description: Array of men items which are offline currently\n          items:\n            $ref: \"#/components/schemas/OrderpadOfflineProduct\"\n          nullable: true\n          type: array\n      type: object\n    OfflineRestaurantsRequestModel:\n      additionalProperties: false\n      example:\n        allowRestaurantOverride: true\n        duration: 1:00:00\n        name: Out of Chicken\n        reason: No more chicken in stock.\n        restaurantIds: \"12345\"\n        startDate: 2020-01-16T09:00:00Z\n      properties:\n        allowRestaurantOverride:\n          description: Whether a restaurant should be allowed to delete this event, regardless of who raised it.\n          type: boolean\n        category:\n          deprecated: true\n          description: A free text category used to group multiple events. This field is not intended to be used by clients.\n          type: string\n        duration:\n          description: Either a timespan in the HH:mm format or `untilTomorrow` (this will be the next day at 4:30 am +/- 10 minutes local time). Note if both duration and `endDate` are specified duration takes precedence.\n          type: string\n        endDate:\n          description: ISO 8601 format of the end datetime of the offline event.\n          format: date-time\n          minLength: 1\n          nullable: true\n          type: string\n        legacyTempOfflineType:\n          $ref: \"#/components/schemas/LegacyTempOfflineStatus\"\n        name:\n          description: Name of the offline event to be created.\n          type: string\n        reason:\n          description: The reason for creating the offline event.\n          type: string\n        restaurantIds:\n          description: A comma separated list of the IDs of the restaurants to include in the offline event. No limit to the number accepted by the endpoint, but unexpected behaviour mat occur at more than 500 IDs.\n          type: string\n        startDate:\n          description: ISO 8601 format of the start datetime of the offline event.\n          format: date-time\n          minLength: 1\n          type: string\n      required:\n        - restaurantIds\n        - name\n        - reason\n        - startDate\n        - allowRestaurantOverride\n      type: object\n    OnlineItemsRequest:\n      example:\n        modifierIds:\n          - \"777\"\n          - \"888\"\n          - \"999\"\n        variationIds:\n          - \"111\"\n          - \"222\"\n          - \"333\"\n      properties:\n        modifierIds:\n          description: Modifier identifiers. Maximum sum of 25 Variation and Modifier IDs.\n          items:\n            type: string\n          maxItems: 25\n          minItems: 0\n          type: array\n        variationIds:\n          description: Variation identifiers. Maximum sum of 25 Variation and Modifier IDs.\n          items:\n            type: string\n          maxItems: 25\n          minItems: 0\n          type: array\n      type: object\n    OptimizelyData:\n      additionalProperties: false\n      properties:\n        cdnUrl:\n          description: Location of the Optimizely data file\n          nullable: true\n          type: string\n        dataFileRevision:\n          description: The index of the Optimizely revision\n          format: int32\n          type: integer\n      type: object\n    OrderAcceptanceTimes:\n      description: The acceptance times used to present the offer to the courier.\n      properties:\n        currentSystemTimestamp:\n          description: The time the delivery offer was made to the courier.\n          example: 1593444834\n          format: integer\n          type: number\n        expirationTimestamp:\n          description: The time when the offer to the courier will expire. Usually the courier has 60 seconds to accept a new offer.\n          example: 1593444834\n          format: integer\n          type: number\n        viewedTimestamp:\n          description: The time the delivery offer was viewed by the courier\n          example: 1593444834\n          format: integer\n          type: number\n      type: object\n    OrderAddressSuccessResponse:\n      description: The response object after successfully updating an order address.\n      example:\n        address:\n          - 123 Wye Avenue, Eaton\n        city: Bristol\n        email: user@email.com\n        geoPosition:\n          latitude: 456.123\n          longitude: 123.456\n        name: J.E.Hungerton\n        orderable: true\n        phoneNumber: \"0123456789\"\n        polygonName: BS1 1AA\n        postCode: BS1 1AA\n        serviceType: delivery\n      properties:\n        address:\n          description: An array of strings containing lines of the customer's order address.\n          items:\n            type: string\n          nullable: false\n          type: array\n        city:\n          description: String value containing the city name of the customer's order address.\n          nullable: false\n          type: string\n        email:\n          description: The customer's email address.\n          nullable: false\n          type: string\n        geoPosition:\n          allOf:\n            - $ref: \"#/components/schemas/OrderGeoPosition\"\n          description: Geoposition object containing latitude and longitude values for the customer's order address\n          nullable: true\n        name:\n          description: The customer's name.\n          nullable: false\n          type: string\n        phoneNumber:\n          description: The customer's phone number.\n          nullable: false\n          type: string\n        polygonName:\n          description: String value containing the polygon name of customer's order address (in tenants with no polygon name, will be the same as postcode).\n          nullable: false\n          type: string\n        postCode:\n          description: String value containing the postcode of the customer's order address.\n          nullable: false\n          type: string\n        serviceType:\n          description: Service Type associated with the order details.\n          enum:\n            - delivery\n            - collection\n          nullable: false\n          type: string\n      type: object\n    OrderCancelled:\n      description: The order cancelled object holds the details of a cancelled order.\n      properties:\n        cancellationTime:\n          description: Current timestamp for the cancelled order.\n          example: 1593444834\n          format: integer\n          type: number\n        collectJobStatus:\n          $ref: \"#/components/schemas/JobStatus\"\n          description: The collect job status for the cancelled order.\n        courierId:\n          description: Courier identifier for the cancelled order.\n          example: 53c3afb5-fcs5-4941-be6d-2179f812sc8d\n          type: string\n        deliveryId:\n          description: Deliver identifier for the cancelled order.\n          example: 53c3afb5-fcs5-4941-be6d-2179f812sc8d\n          type: string\n        isAlcoholDelivery:\n          description: The cancelled order contains alcoholic products when true.\n          type: boolean\n        isCashPayment:\n          description: The cancelled order was cash payment when true.\n          type: boolean\n        orderNumber:\n          description: Order number for the cancelled order.\n          example: \"10113445\"\n          type: string\n        restaurantName:\n          description: Restaurant name for the cancelled order.\n          example: MacDonalds\n          type: string\n      type: object\n    OrderClaim:\n      description: Claim information\n      example:\n        affectedItems:\n          - additionalContext: Potato skin was damaged\n            decision: Rejected\n            id: NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\n            name: Potato skin\n            quantity: 1\n            reference: productid%4t56574596\n            totalClaimed: 1900\n            unitPrice: 2000\n          - additionalContext: Pizza was damaged too\n            decision: Accepted\n            id: 123iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\n            name: Pizza\n            quantity: 1\n            reference: productid%t5y6574596\n            totalClaimed: 1900\n            unitPrice: 2000\n        currency: GBP\n        expirationDate: 2020-05-22T14:22:11.1053368+00:00\n        friendlyOrderReference: \"451226580\"\n        id: 2f749442-a62a-abcd-8623-04202878e034\n        issueType: Damaged\n        orderId: r23tqoxdoeupdx9w8evorw\n        resolution:\n          decision: PartiallyAccepted\n          resolvedChannel: PartnerCentre\n          resolvedDate: 2020-05-28T06:40:48.1053368+00:00\n          totalClaimedAccepted: 1900\n        restaurantResponse:\n          decision: PartiallyAccepted\n          items:\n            - decision: Rejected\n              id: NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\n            - decision: Accepted\n              id: 123iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\n          justification:\n            comments: The food was packed properly\n            reason: Other\n        state: Closed\n        submittedDate: 2020-05-20T14:22:11.1053368+00:00\n        totalClaimed: 3800\n      properties:\n        affectedItems:\n          description: Information about the claimed items\n          items:\n            $ref: \"#/components/schemas/Item\"\n          nullable: true\n          type: array\n        currency:\n          description: Name of currency in ISO 4217 format\n          type: string\n        expirationDate:\n          description: Date when the claim will be accepted automatically in case the owner of the restaurant ignores it\n          format: date-time\n          type: string\n        friendlyOrderReference:\n          description: Just Eat friendly order reference\n          type: string\n        id:\n          description: Claim identifier\n          type: string\n        issueType:\n          description: Type of claim\n          enum:\n            - Missing\n            - Damaged\n            - Cold\n            - LateOrder\n            - FoodNotArrived\n          type: string\n        orderId:\n          description: Just Eat order identifier\n          type: string\n        resolution:\n          $ref: \"#/components/schemas/ClaimResolution\"\n          description: Representation of the claim resolution\n        restaurantResponse:\n          $ref: \"#/components/schemas/OrderClaimRestaurantResponse\"\n          description: Restaurant response on the claim\n          type: object\n        state:\n          description: Indicates whether a decision about the claim was made\n          enum:\n            - Open\n            - Closed\n          type: string\n        submittedDate:\n          description: Date when the claim was submitted\n          format: date-time\n          type: string\n        totalClaimed:\n          description: Total claimed money in smallest unit of relevant currency\n          type: number\n      type: object\n    OrderClaimRestaurantResponse:\n      description: Restaurant response for the claim\n      example:\n        decision: PartiallyAccepted\n        items:\n          - decision: Accepted\n            id: NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc1\n          - decision: Rejected\n            id: NJ7iYXNrZXRJdGVtLTM2NTc0GTk2LTMwNDY2LXMzOWJxb3hkb2V1cGR4OXc4ZXZvcnc3\n        justification:\n          comments: The food was packed properly\n          reason: Other\n      nullable: true\n      properties:\n        decision:\n          description: Decision on the claim\n          enum:\n            - Accepted\n            - Rejected\n            - PartiallyAccepted\n          type: string\n        items:\n          description: Decisions on the items of a claim\n          items:\n            $ref: \"#/components/schemas/ItemDecision\"\n          nullable: true\n          type: array\n        justification:\n          $ref: \"#/components/schemas/Justification\"\n          description: Reasons why of the decision for the claim\n      type: object\n    OrderEligibleForRestaurantCompensation:\n      example:\n        IsEligible: true\n        OrderId: c9639af6-04a3-4376-bb4b-5e95cc8b80eb\n      properties:\n        IsEligible:\n          description: Flag that informs if the cancelled order is eligible for compensation\n          type: boolean\n        OrderId:\n          description: Id for the order\n          type: string\n      type: object\n    OrderGeoPosition:\n      description: Geoposition object containing latitude and longitude values.\n      properties:\n        latitude:\n          description: The latitude value of the customer's Geoposition.\n          format: decimal\n          type: number\n        longitude:\n          description: The longitude value of the customer's Geoposition.\n          format: decimal\n          type: number\n      type: object\n    OrderHistoryItem:\n      additionalProperties: false\n      properties:\n        detail:\n          description: Additional information about status update\n          nullable: true\n          type: string\n        occurredAt:\n          description: ISO 8601 Date/Time of status update\n          format: date-time\n          type: string\n        orderState:\n          $ref: \"#/components/schemas/ClientOrderState\"\n          description: State order was set to\n        updatedBy:\n          description: User who made the status update\n          nullable: true\n          type: string\n      type: object\n    OrderItem:\n      additionalProperties: false\n      properties:\n        basketIds:\n          description: Array of basket id's that make up the item. Can be multiple due to Zeus' grouping of items\n          items:\n            type: string\n          nullable: true\n          type: array\n        comment:\n          description: Additional comments\n          nullable: true\n          type: string\n        id:\n          description: Basket Id of the order item\n          nullable: true\n          type: string\n        itemReference:\n          description: Item reference uniquely identifying a product on the menu but not basket instance of a product\n          nullable: true\n          type: string\n        menuIdentifier:\n          description: Just Eat menu identifier\n          nullable: true\n          type: string\n        menuNumber:\n          description: Just Eat menu number\n          nullable: true\n          type: string\n        name:\n          description: Name of the item\n          nullable: true\n          type: string\n        orderItemAccessories:\n          description: Array of accessories for this item\n          items:\n            $ref: \"#/components/schemas/OrderItemAccessory\"\n          nullable: true\n          type: array\n        orderItems:\n          description: Array of sub items for this item\n          items:\n            $ref: \"#/components/schemas/OrderItem\"\n          nullable: true\n          type: array\n        productCategory:\n          description: Just Eat product category\n          nullable: true\n          type: string\n        productTypeId:\n          description: Just Eat product type id\n          format: int32\n          type: integer\n        quantity:\n          description: Quantity of the item\n          format: int32\n          type: integer\n        totalPrice:\n          description: Total price of this item\n          format: decimal\n          type: number\n      type: object\n    OrderItemAccessory:\n      additionalProperties: false\n      properties:\n        accessoryName:\n          description: Name of the accessory\n          nullable: true\n          type: string\n        groupId:\n          description: Group id of the accessory\n          format: int32\n          type: integer\n        id:\n          description: Id of the accessory\n          nullable: true\n          type: string\n        itemReference:\n          description: Item reference uniquely identifying a product on the menu but not basket instance of a product\n          nullable: true\n          type: string\n        name:\n          description: Name of the accessory\n          nullable: true\n          type: string\n        quantity:\n          description: Quantity of accessories\n          format: int32\n          type: integer\n        totalPrice:\n          description: Total price of the accessory\n          format: decimal\n          type: number\n      type: object\n    OrderNumberValidity:\n      additionalProperties: false\n      properties:\n        ComparisonOperator:\n          description: The comparison operator (e.g. \u003e, \u003c, ==)\n          nullable: true\n          type: string\n        NumberOfOrders:\n          description: The number of orders for the comparison\n          format: int32\n          type: integer\n      type: object\n    OrderPadClientOrder:\n      additionalProperties: false\n      properties:\n        acceptedAt:\n          description: ISO 8601 Date/Time order was accepted by the restaurant\n          format: date-time\n          type: string\n        acceptedFor:\n          description: ISO 8601 Date/Time time due at the point of acceptance\n          format: date-time\n          type: string\n        addressLines:\n          description: Customer address\n          items:\n            type: string\n          nullable: true\n          type: array\n        asSoonAsPossible:\n          description: Will be false if order was a preorder\n          type: boolean\n        attemptedDeliveryQuery:\n          $ref: \"#/components/schemas/AttemptedDeliveryQuery\"\n          description: Details of any attempted delivery query attached to the order\n          nullable: true\n        badItemClaims:\n          description: A list of bad item claims attached to the order\n          items:\n            $ref: \"#/components/schemas/BadItemClaim\"\n          nullable: true\n          type: array\n        cancellationInfo:\n          $ref: \"#/components/schemas/CancellationInfo\"\n          description: Details of any cancellation attached to the order\n          nullable: true\n        cancelledAt:\n          description: ISO 8601 Date/Time order was cancelled\n          format: date-time\n          type: string\n        city:\n          description: Customer city\n          nullable: true\n          type: string\n        customerId:\n          description: Platform customer id\n          nullable: true\n          type: string\n        customerNote:\n          description: Customer added notes\n          nullable: true\n          type: string\n        deliveredAt:\n          description: ISO 8601 Date/Time order was delivered\n          format: date-time\n          nullable: true\n          type: string\n        deliveryDriverInfo:\n          $ref: \"#/components/schemas/DeliveryDriverInfo\"\n          description: Delivery driver information\n          nullable: true\n        deliveryDriverUsername:\n          description: Delivery drivers user name (usually their phone number)\n          nullable: true\n          type: string\n        deliveryNote:\n          description: Delivery specific notes\n          nullable: true\n          type: string\n        eposState:\n          $ref: \"#/components/schemas/EposState\"\n          description: Current state of sending the order to the restaurants EPOS system\n        estimatedDeliveryTimeInSeconds:\n          description: How long until order will be delivered in seconds (RDS only)\n          format: int32\n          type: integer\n        estimatedHandoverTimeInSeconds:\n          description: How long until order needs to be handed over to driver in seconds (RDS only)\n          format: int32\n          type: integer\n        externalCustomerId:\n          description: Customer id restaurants can use to identify customer\n          nullable: true\n          type: string\n        id:\n          description: Id used to identify the order in Zeus\n          nullable: true\n          type: string\n        isPreorder:\n          description: Whether order is a preorder\n          type: boolean\n        isRdsOrder:\n          description: Will be true if delivery is being arranged by Just Eat\n          type: boolean\n        lateOrderCompensationQuery:\n          $ref: \"#/components/schemas/LateOrderCompensationQuery\"\n          description: Details of any late order compensation query attached to the order\n          nullable: true\n        lateOrderInfo:\n          $ref: \"#/components/schemas/LateOrderInfo\"\n          description: Details of any late order query attached to the order\n          nullable: true\n        location:\n          $ref: \"#/components/schemas/GeoLocation\"\n          description: Geo location of the customers address\n          nullable: true\n        missingItemClaims:\n          description: A list of missing item claims attached to the order\n          items:\n            $ref: \"#/components/schemas/MissingItemClaim\"\n          nullable: true\n          type: array\n        modernId:\n          description: Just Eat modern order id\n          nullable: true\n          type: string\n        name:\n          description: Customer name\n          nullable: true\n          type: string\n        notes:\n          description: General order notes\n          nullable: true\n          type: string\n        orderHistory:\n          description: Ordered history of status updates to the order and when they happened\n          items:\n            $ref: \"#/components/schemas/OrderHistoryItem\"\n          nullable: true\n          type: array\n        orderItems:\n          description: A list of order items\n          items:\n            $ref: \"#/components/schemas/OrderItem\"\n          nullable: true\n          type: array\n        orderState:\n          $ref: \"#/components/schemas/ClientOrderState\"\n          description: Current state of the order\n        orderType:\n          $ref: \"#/components/schemas/OrderType\"\n          description: Type of order (collection or delivery)\n        paymentInfo:\n          $ref: \"#/components/schemas/PaymentInfo\"\n          description: Payment details for the order\n          nullable: true\n        phone:\n          description: Customer phone number (will be phone masking number in markets when enabled)\n          nullable: true\n          type: string\n        phoneMaskingCode:\n          description: Code to use when calling customer phone masking number about this order\n          nullable: true\n          type: string\n        postcode:\n          description: Customer postcode\n          nullable: true\n          type: string\n        preferredTimeDue:\n          description: Current agreed delivery time of the order\n          format: date-time\n          type: string\n        prepareOrderFor:\n          description: ISO 8601 Date/Time when order should be prepared for\n          format: date-time\n          nullable: true\n          type: string\n        previousOrders:\n          description: Number of previous Just Eat orders by the customer\n          nullable: true\n          type: string\n        previousOrdersToRestaurant:\n          description: Number of previous orders by the customer to this restaurant\n          nullable: true\n          type: string\n        rdsPickupTime:\n          description: ISO 8601 Date/Time when order will be picked up by RDS partner\n          format: date-time\n          nullable: true\n          type: string\n        receivedAt:\n          description: ISO 8601 Date/Time order was paid\n          format: date-time\n          type: string\n        restaurantId:\n          description: Restaurant Id of the order\n          nullable: true\n          type: string\n        restaurantInformation:\n          $ref: \"#/components/schemas/RestaurantInfo\"\n          description: Restaurant information for the order\n          nullable: true\n        sourcePartner:\n          $ref: \"#/components/schemas/PartnerInfo\"\n          description: Information about the source of the order (Just Eat, Third Party etc.)\n          nullable: true\n        startOrderPreparationAt:\n          description: ISO 8601 Date/Time for restaurant to start preparing the order\n          format: date-time\n          nullable: true\n          type: string\n        timeDue:\n          description: Current agreed delivery time of the order\n          format: date-time\n          type: string\n        withDriverAt:\n          description: ISO 8601 Date/Time order was handed over to driver\n          format: date-time\n          nullable: true\n          type: string\n      type: object\n    OrderStateChange:\n      additionalProperties: false\n      properties:\n        newState:\n          $ref: \"#/components/schemas/ClientOrderState\"\n          description: New order state\n        timeAcceptedFor:\n          description: If accepting order what date time (with offset) are you accepting it for\n          format: date-time\n          type: string\n      required:\n        - newState\n      type: object\n    OrderTimeSuccessResponse:\n      description: The response object for successful updates to order time.\n      example:\n        asap: true\n        dateTime: 2020-02-05T16:26:30+0000\n        orderable: true\n        utcOrderTime: 2020-02-05T16:26:30+0000\n      properties:\n        asap:\n          description: True if the user has selected as soon as possible on the order, else false\n          nullable: false\n          type: boolean\n        dateTime:\n          description: The time the customer has requested their order for.\n          nullable: false\n          type: string\n        orderable:\n          description: Boolean value indicating whether the current basket is orderable.\n          nullable: false\n          type: boolean\n        utcOrderTime:\n          description: The time (in UTC) the customer has requested their order for\n          nullable: false\n          type: string\n      type: object\n    OrderType:\n      description: Type of order\n      enum:\n        - Collection\n        - Delivery\n        - Unknown\n      type: string\n    OrderpadMenuItem:\n      additionalProperties: false\n      properties:\n        id:\n          description: The id of the menu item\n          nullable: true\n          type: string\n        isOutOfStock:\n          description: Is this menu item out of stock\n          type: boolean\n        name:\n          description: Name of the menu item\n          nullable: true\n          type: string\n      type: object\n    OrderpadOfflineProduct:\n      additionalProperties: false\n      properties:\n        createdBy:\n          description: Application which requested operation e.g. Orderpad, RestaurantApp\n          nullable: true\n          type: string\n        createdOn:\n          description: Date and time in ISO 8601 format taken offline\n          format: date-time\n          type: string\n        nextAvailableAt:\n          description: Date and time in ISO 8601 format when item will be brought back online\n          format: date-time\n          nullable: true\n          type: string\n        productId:\n          description: The id of the menu item\n          nullable: true\n          type: string\n        restaurantId:\n          description: The Id of the restaurant\n          format: int32\n          type: integer\n      type: object\n    OrderpadSetupType:\n      description: Type of order pad set up\n      enum:\n        - Unknown\n        - SignUp\n        - Upgrade\n        - Swap\n      type: string\n    OrdersData:\n      additionalProperties: false\n      properties:\n        unreceivedOrders:\n          description: List of all changed orders for a restaurant\n          items:\n            type: string\n          nullable: true\n          type: array\n      type: object\n    PagedAfterOnlyCursorResponse:\n      example:\n        paging:\n          cursors:\n            after: NDMyNzQyODI3OTQw\n      properties:\n        paging:\n          description: Consists of pagination information.\n          properties:\n            cursors:\n              description: Consists of cursors markers used in forward only pagination.\n              properties:\n                after:\n                  description: Cursor parameter to use in the next request to the resource to fetch the next page of data.\n                  type: string\n              type: object\n          type: object\n      type: object\n    PagedAvailabilitiesResponse:\n      allOf:\n        - $ref: \"#/components/schemas/PagedAfterOnlyCursorResponse\"\n        - properties:\n            availabilities:\n              description: List of availabilities for a given restaurant's menu.\n              items:\n                $ref: \"#/components/schemas/Availability\"\n              type: array\n          type: object\n      example:\n        availabilities:\n          - description: Menu items available for delivery during weekdays for lunch.\n            id: 1-lunch-delivery\n            name: Delivery Lunch\n            serviceTypes:\n              - delivery\n            times:\n              - daysOfTheWeek:\n                  - monday\n                  - tuesday\n                  - wednesday\n                  - thursday\n                  - friday\n                  - saturday\n                  - sunday\n                fromDateTime: 11:30:00\n                toDateTime: 14:30:00\n          - description: Menu items available for delivery during weekdays for dinner.\n            id: 1-dinner-delivery\n            name: Delivery Dinner\n            serviceTypes:\n              - delivery\n            times:\n              - daysOfTheWeek:\n                  - monday\n                  - tuesday\n                  - wednesday\n                  - thursday\n                  - friday\n                  - saturday\n                  - sunday\n                fromDateTime: 16:30:00\n                toDateTime: 22:00:00\n        paging:\n          cursors:\n            after: NDMyNzQyODI3OTQw\n    PagedCategoriesResponse:\n      allOf:\n        - $ref: \"#/components/schemas/PagedAfterOnlyCursorResponse\"\n        - properties:\n            categories:\n              description: List of categories for a given restaurant's menu.\n              items:\n                $ref: \"#/components/schemas/CategoryBase\"\n              type: array\n          type: object\n      example:\n        categories:\n          - description: Sumptuous starters\n            id: \"3\"\n            name: Starters\n          - description: Magnificent mains\n            id: \"4\"\n            name: Mains\n        paging:\n          cursors:\n            after: NDMyNzQyODI3OTQw\n    PagedCategoryItemsResponse:\n      allOf:\n        - $ref: \"#/components/schemas/PagedAfterOnlyCursorResponse\"\n        - properties:\n            itemIds:\n              description: List of item IDs which are assigned to the specified category\n              items:\n                type: string\n              type: array\n          type: object\n      example:\n        itemIds:\n          - \"65143901\"\n          - \"65143902\"\n          - \"65143903\"\n          - \"65143904\"\n          - \"65143905\"\n        paging:\n          cursors:\n            after: NDMyNzQyODI3OTQw\n    PagedDealItemVariationResponse:\n      allOf:\n        - $ref: \"#/components/schemas/PagedAfterOnlyCursorResponse\"\n        - properties:\n            dealItemVariations:\n              description: List of deal item variations which form the specified deal group\n              items:\n                $ref: \"#/components/schemas/DealItemVariation\"\n              type: array\n          type: object\n      example:\n        dealItemVariations:\n          - additionPrice: 50\n            dealItemVariationId: \"8548153\"\n            maxChoices: 1\n            minChoices: 0\n          - additionPrice: 100\n            dealItemVariationId: \"8548153\"\n            maxChoices: 2\n            minChoices: 1\n        paging:\n          cursors:\n            after: NDMyNzQyODI3OTQw\n    PagedFoodSafetyResponse:\n      allOf:\n        - $ref: \"#/components/schemas/PagedAfterOnlyCursorResponse\"\n        - properties:\n            data:\n              description: List of Products with food safety data.\n              items:\n                $ref: \"#/components/schemas/ProductFoodSafety\"\n              maxItems: 500\n              minItems: 0\n              type: array\n          type: object\n      example:\n        data:\n          - additives:\n              - code: \"10.2\"\n            allergens:\n              - code: A\n            id: RRR3PRE\n            ingredients:\n              - wasser\n            manufacturer:\n              brand: Coca-Cola Zero\n              city: Anderlecht\n              manufacturer: Coca-Cola Erfrischungsgetränke AG, Postfach 67 01 56, 10207 Berlin\n              origin: Deutschland\n              postalCode: \"1070\"\n              streetAddress: Bergense Steenweg 1424\n            nutritional:\n              alcohol:\n                unit: \"%\"\n                value: 7.5\n              caffeine:\n                unit: mg\n                value: 10\n              calories:\n                unit: kcal\n                value: 42\n              carbohydrate:\n                unit: mg\n                value: 22000\n              energy:\n                unit: kJ\n                value: 175.5\n              fat:\n                unit: mg\n                value: 16000\n              fattyAcidTotal:\n                unit: mg\n                value: 100\n              protein:\n                unit: mg\n                value: 4000.01\n              salt:\n                unit: mg\n                value: 20\n              sodium:\n                unit: mg\n                value: 10\n              sugar:\n                unit: mg\n                value: 9100\n            storage:\n              stgInstruction: Example\n            type: product\n        paging:\n          cursors:\n            after: NDMyNzQyODI3OTQw==\n    PagedMenuDealGroupsResponse:\n      allOf:\n        - $ref: \"#/components/schemas/PagedAfterOnlyCursorResponse\"\n        - properties:\n            dealGroups:\n              description: List of deal groups for the given menu item on the given restaurant's menu\n              items:\n                $ref: \"#/components/schemas/MenuDealGroupBase\"\n              type: array\n          type: object\n      example:\n        dealGroups:\n          - id: 23435309-1\n            name: Choose your base\n            numberOfChoices: 1\n          - id: 23435309-2\n            name: Choose your halves\n            numberOfChoices: 2\n        paging:\n          cursors:\n            after: NDMyNzQyODI3OTQw\n    PagedMenuItemsResponse:\n      allOf:\n        - $ref: \"#/components/schemas/PagedAfterOnlyCursorResponse\"\n        - properties:\n            items:\n              description: List of menu items for a given restaurant's menu.\n              items:\n                $ref: \"#/components/schemas/MenuItemBase\"\n              type: array\n          type: object\n      example:\n        items:\n          - description: \"\"\n            id: \"65143901\"\n            labels: []\n            name: Flat Bread and Dips (Pick any 2 Dips)\n            requireOtherProducts: false\n            type: menuItem\n          - description: \"\"\n            id: \"8547130\"\n            labels: []\n            name: Margherita\n            requireOtherProducts: true\n            type: menuItem\n        paging:\n          cursors:\n            after: NDMyNzQyODI3OTQw\n    PagedMenuModifierGroupsResponse:\n      allOf:\n        - $ref: \"#/components/schemas/PagedAfterOnlyCursorResponse\"\n        - properties:\n            modifierGroups:\n              description: List of modifier groups for the given menu item on the given restaurant's menu\n              items:\n                $ref: \"#/components/schemas/MenuModifierGroup\"\n              type: array\n          type: object\n      example:\n        modifierGroups:\n          - id: 8547130-req-1\n            maxChoices: 1\n            minChoices: 1\n            modifiers:\n              - additionPrice: 0\n                id: \"854500\"\n                maxChoices: 1\n                minChoices: 0\n                name: Classic Crust\n              - additionPrice: 200\n                id: \"854600\"\n                maxChoices: 1\n                minChoices: 0\n                name: Stuffed Crust\n            name: Choose your crust\n          - id: 8547130-opt-1\n            maxChoices: 10\n            minChoices: 0\n            modifiers:\n              - additionPrice: 50\n                id: \"1000\"\n                maxChoices: 2\n                minChoices: 0\n                name: Mozzarella Cheese\n              - additionPrice: 50\n                id: \"1001\"\n                maxChoices: 1\n                minChoices: 0\n                name: Ham\n              - additionPrice: 50\n                id: \"1002\"\n                maxChoices: 1\n                minChoices: 0\n                name: Red Onion\n              - additionPrice: 50\n                id: \"1003\"\n                maxChoices: 1\n                minChoices: 0\n                name: Pepperoni\n              - additionPrice: 50\n                id: \"1004\"\n                maxChoices: 1\n                minChoices: 0\n                name: Olives\n            name: Any extra toppings?\n        paging:\n          cursors:\n            after: NDMyNzQyODI3OTQw\n    PagedVariationsResponse:\n      allOf:\n        - $ref: \"#/components/schemas/PagedAfterOnlyCursorResponse\"\n        - properties:\n            variations:\n              description: List of variations for the given menu item on the given restaurant's menu\n              items:\n                $ref: \"#/components/schemas/Variation\"\n              type: array\n          type: object\n      example:\n        paging:\n          cursors:\n            after: NDMyNzQyODI3OTQw\n        variations:\n          - availabilityIds:\n              - 1-lunch-delivery\n              - 2-lunch-collection\n              - 3-dinner-delivery\n              - 4-dinner-collection\n            basePrice: 500\n            dealGroupsIds: []\n            dealOnly: true\n            id: \"8547121\"\n            kitchenNumber: \"100\"\n            modifierGroupsIds:\n              - 8547130-opt-1\n            name: Half\n            type: variation\n          - availabilityIds:\n              - 1-lunch-delivery\n              - 2-lunch-collection\n              - 3-dinner-delivery\n              - 4-dinner-collection\n            basePrice: 1000\n            dealGroupsIds: []\n            dealOnly: false\n            id: \"8547130\"\n            kitchenNumber: \"100\"\n            modifierGroupsIds:\n              - 8547130-req-1\n              - 8547130-opt-1\n            name: 12 inch\n            type: variation\n          - availabilityIds:\n              - 1-lunch-delivery-weekday\n              - 2-lunch-collection-weekday\n              - 3-dinner-delivery-weekday\n              - 4-dinner-collection-weekday\n            basePrice: 1200\n            dealGroupsIds: []\n            dealOnly: true\n            id: \"8543123\"\n            kitchenNumber: \"200\"\n            modifierGroupsIds:\n              - 8547130-req-1\n              - 8547130-opt-1\n            name: 14 inch\n            type: variation\n    PartnerConsumerSegment:\n      enum:\n        - All\n        - NewToRestaurant\n      type: string\n    PartnerInfo:\n      additionalProperties: false\n      properties:\n        friendlyOrderReference:\n          description: Friendly order reference\n          nullable: true\n          type: string\n        orderReference:\n          description: Reference that partner uses to identify the order\n          nullable: true\n          type: string\n        partnerId:\n          description: Partner id of the source\n          nullable: true\n          type: string\n        partnerName:\n          description: Partner name of the source\n          nullable: true\n          type: string\n        source:\n          description: Where did the order originate (Just Eat, third party etc.)\n          nullable: true\n          type: string\n      type: object\n    PartnerOfferType:\n      enum:\n        - Percent\n        - FreeItem\n        - Bogof\n        - StampCard\n      type: string\n    PasswordResetFlowResponse:\n      example:\n        email: example@just-eat.com\n        globalUserId: 8It2lEaJjG82nJtxO00Iab0CoF0=\n      properties:\n        email:\n          description: The consumer's email address.\n          type: string\n        globalUserId:\n          description: Global identifier for consumer and tenant.\n          type: string\n      type: object\n    PaymentDirectives:\n      description: The directives for payment component\n      properties:\n        DisableCashPayment:\n          description: Indicates if cash payment option should be disabled\n          type: boolean\n      type: object\n    PaymentInfo:\n      additionalProperties: false\n      properties:\n        accountCreditAmount:\n          description: Total amount paid for with account credit\n          format: decimal\n          type: number\n        cardAmount:\n          description: Amount paid by card\n          format: decimal\n          type: number\n        cardFee:\n          description: Card fee for the order\n          format: decimal\n          type: number\n        cardNumberLast4Digits:\n          description: Last 4 digits of the payment card\n          nullable: true\n          type: string\n        currency:\n          description: Name of the currency used for the order\n          nullable: true\n          type: string\n        deliveryCharge:\n          description: Amount of cost that comes from delivery\n          format: decimal\n          type: number\n        discount:\n          description: Total amount of discount\n          format: decimal\n          type: number\n        discountSource:\n          description: Source of discount (i.e. Just Eat or restaurant funded)\n          nullable: true\n          type: string\n        feeText:\n          description: Type of fee (`spanner`, `card`, `servicecharge`)\n          nullable: true\n          type: string\n        isCashPayment:\n          description: Is it a cash order\n          type: boolean\n        leftToPay:\n          description: Amount left for customer to pay in cash after all vouchers and discounts removed from total\n          format: decimal\n          type: number\n        taxes:\n          additionalProperties:\n            format: decimal\n            type: number\n          description: Tax information for the order\n          nullable: true\n          type: object\n        totalPrice:\n          description: Total price of the order\n          format: decimal\n          type: number\n        voucherAmount:\n          description: Total amount paid for with a voucher\n          format: decimal\n          type: number\n      type: object\n    Percent:\n      allOf:\n        - $ref: \"#/components/schemas/ActiveConsumerOffer\"\n        - additionalProperties: false\n          properties:\n            amount:\n              description: The percentage value discount\n              format: decimal\n              type: number\n            maxQualifyingValue:\n              description: The maximum order value required to be eligible for the offer\n              format: decimal\n              type: number\n            qualifyingValue:\n              description: The minimum order value required to be eligible for the Offer\n              format: decimal\n              type: number\n          type: object\n    PolicyEligibility:\n      additionalProperties: false\n      properties:\n        code:\n          description: Policy rule name\n          enum:\n            - BlockBlacklistedRestaurants\n            - BlockCashCancellationBlacklistedRestaurants\n            - BlockCashOrders\n            - CashCancellationsAreWithinAllowedThreshold\n            - CashOrderInTheWindowAfterAcceptance\n            - MaxCancellationsPerCustomer\n            - MaxCancellationsPerRestaurant\n            - EvaluateMaxOrderValue\n            - NotInTheWindowAfterAcceptance\n            - OrderCancelledStatePolicy\n            - IsRestaurantCancellationCapable\n          nullable: true\n          type: string\n        passed:\n          description: Passed or not\n          type: boolean\n      type: object\n    PolicyFee:\n      additionalProperties: false\n      properties:\n        amount:\n          description: Amount to be returned in local currency\n          format: decimal\n          type: number\n        justificationCode:\n          description: Justification code\n          enum:\n            - CancellationOutsideWindow\n            - UnChargeableReason\n            - EmptyAcceptedAt\n            - CancellationInsideWindow\n          nullable: true\n          type: string\n        percentage:\n          description: Percentage to be returned\n          format: decimal\n          type: number\n      type: object\n    PolicyOutcome:\n      additionalProperties: false\n      properties:\n        decision:\n          description: Decision after policy run\n          enum:\n            - Offered\n            - Declined\n          nullable: true\n          type: string\n        fee:\n          $ref: \"#/components/schemas/PolicyFee\"\n          description: Fee details after the policy run\n      type: object\n    PolicyResult:\n      additionalProperties: false\n      properties:\n        eligibility:\n          description: Eligibility details\n          items:\n            $ref: \"#/components/schemas/PolicyEligibility\"\n          nullable: true\n          type: array\n        outcome:\n          $ref: \"#/components/schemas/PolicyOutcome\"\n          description: Result of the policy run\n      type: object\n    PredictiveSearchRequest:\n      example:\n        location: BS1\n        restaurants:\n          - restaurantId: \"1234\"\n          - menuId: \"678\"\n            restaurantId: \"1235\"\n        searchTerm: Pizza\n      properties:\n        location:\n          description: User's location\n          type: string\n        restaurants:\n          description: Restaurants that can be included in the search\n          items:\n            $ref: \"#/components/schemas/RequestRestaurant\"\n          maxItems: 2000\n          type: array\n          uniqueItems: true\n        searchTerm:\n          description: User's search term - at least one character required\n          minLength: 1\n          type: string\n      required:\n        - searchTerm\n        - restaurants\n      type: object\n    PredictiveSearchResponse:\n      example:\n        suggestions:\n          - category: Restaurant\n            suggestedTerm: Pizza Palace\n          - category: Cuisine\n            suggestedTerm: Pizza\n          - category: Dish\n            suggestedTerm: Large Hawaiian\n      properties:\n        suggestions:\n          description: Ordered list of suggested term completions\n          items:\n            $ref: \"#/components/schemas/PredictiveSearchResponseItem\"\n          maxItems: 10\n          type: array\n          uniqueItems: false\n      type: object\n    PredictiveSearchResponseItem:\n      example:\n        category: Restaurant\n        suggestedTerm: Pizza Palace\n      properties:\n        category:\n          description: Grouping to which term belongs\n          enum:\n            - Restaurant\n            - Cuisine\n            - Dish\n          type: string\n        suggestedTerm:\n          description: Suggested search term\n          type: string\n      type: object\n    Product:\n      properties:\n        BasketProductIds:\n          items:\n            type: string\n          type: array\n        CategoryId:\n          type: string\n        ModifierGroups:\n          items:\n            $ref: \"#/components/schemas/ModifierGroup\"\n          nullable: true\n          type: array\n        Name:\n          type: string\n        ProductId:\n          type: string\n        Quantity:\n          format: integer\n          type: number\n        RemovedIngredients:\n          items:\n            $ref: \"#/components/schemas/RemovedIngredient\"\n          nullable: true\n          type: array\n        TotalPrice:\n          format: decimal\n          type: number\n        Variation:\n          nullable: true\n          type: string\n      type: object\n    ProductFoodSafety:\n      additionalProperties: false\n      properties:\n        additives:\n          description: List of additives\n          items:\n            $ref: \"#/components/schemas/Additive\"\n          maxItems: 26\n          minItems: 0\n          nullable: false\n          type: array\n        allergens:\n          description: List of allergens\n          items:\n            $ref: \"#/components/schemas/Allergen\"\n          maxItems: 29\n          minItems: 0\n          nullable: false\n          type: array\n        id:\n          description: Encrypted Product/Addon Id\n          nullable: false\n          type: string\n        ingredients:\n          description: List of ingredients\n          items:\n            $ref: \"#/components/schemas/Ingredients\"\n          maxItems: 80\n          minItems: 0\n          nullable: false\n          type: array\n        manufacturer:\n          allOf:\n            - $ref: \"#/components/schemas/Manufacturer\"\n          description: Object for manufacturer data\n          nullable: false\n          type: object\n        nutritional:\n          allOf:\n            - $ref: \"#/components/schemas/Nutritional\"\n          description: Object for nutritional data\n          nullable: false\n          type: object\n        storage:\n          allOf:\n            - $ref: \"#/components/schemas/Storage\"\n          description: Object for storage data\n          nullable: false\n          type: object\n        type:\n          description: Product or Addon\n          nullable: false\n          type: string\n      type: object\n    ProductGroup:\n      additionalProperties: false\n      properties:\n        products:\n          description: List of products\n          items:\n            $ref: \"#/components/schemas/MergedProduct\"\n          nullable: true\n          type: array\n      type: object\n    ProductRecommendationsResponse:\n      description: Contains all recommendations for a product.\n      properties:\n        recommendations:\n          description: Gets or sets an array of products that are recommended for the source product.\n          items:\n            description: Contains information for a single recommended product.\n            properties:\n              confidence:\n                description: Gets or sets the confidence level of this recommendation (between 0 and 1).\n                format: double\n                type: number\n              imageUrl:\n                description: The URL of the image, if available, to display with the view\n                type: string\n              productId:\n                description: Gets or sets the id of the product that is being recommended.\n                type: string\n            type: object\n          type: array\n        renderWithView:\n          description: \"Gets or sets the name of the UI component that the client should use to display the recommendations,\\r\n\n            which is taken from the experiment data for the user.\"\n          type: string\n        restaurantId:\n          description: Gets or sets the restaurant id\n          type: string\n      type: object\n    ProductWithOfflineStatus:\n      description: Product.\n      example:\n        CategoryIds:\n          - \"1\"\n        Description: \"\"\n        Id: \"111\"\n        IsOffline: false\n        Name: Coca-Cola 0.33L\n        NextAvailableAt: null\n        Price:\n          CurrencyCode: GBP\n          Value: 99\n      properties:\n        CategoryIds:\n          description: List of Category IDs this product belongs to.\n          items:\n            type: string\n          type: array\n        Description:\n          description: Product description.\n          type: string\n        Id:\n          description: Product identifier.\n          type: string\n        IsOffline:\n          description: True if this Product is not available to purchase.\n          type: boolean\n        Name:\n          description: Product name.\n          type: string\n        NextAvailableAt:\n          description: Time when product will be brought back online.\n          format: date-time\n          nullable: true\n          type: string\n        Price:\n          description: The price of this Product.\n          properties:\n            CurrencyCode:\n              description: The currency of this Price in ISO 4217 format.\n              type: string\n            Value:\n              description: The value of this Price in the minor unit of the currency.\n              format: integer\n              type: number\n          type: object\n      type: object\n    ProductsResponse:\n      example:\n        Paging:\n          Cursors:\n            After: NDMyNzQyODI3OTQw\n        Products:\n          - CategoryIds:\n              - \"1\"\n            Description: \"\"\n            Id: \"111\"\n            IsOffline: false\n            Name: Coca-Cola 0.33L\n            NextAvailableAt: null\n            Price:\n              CurrencyCode: GBP\n              Value: 99\n          - CategoryIds:\n              - \"1\"\n            Description: \"\"\n            Id: \"112\"\n            IsOffline: false\n            Name: Coca-Cola 1.5L\n            NextAvailableAt: null\n            Price:\n              CurrencyCode: GBP\n              Value: 199\n          - CategoryIds:\n              - \"2\"\n            Description: \"\"\n            Id: \"222\"\n            IsOffline: true\n            Name: Chicken \u0026 Sweetcorn Soup\n            NextAvailableAt: 2019-11-23T11:00:00+01:00\n            Price:\n              CurrencyCode: GBP\n              Value: 299\n      properties:\n        Paging:\n          description: Consists of pagination information.\n          properties:\n            Cursors:\n              description: Consists of cursors markers used in pagination.\n              properties:\n                After:\n                  description: The value should be used in the query parameter named after. It is used as a cursor of the last returned record in the previous request, from which next offset going to be fetched. A missing or empty value indicates that the end of the result set has been reached.\n                  type: string\n              type: object\n          type: object\n        Products:\n          description: List of products for a given restaurant.\n          items:\n            $ref: \"#/components/schemas/ProductWithOfflineStatus\"\n          type: array\n      type: object\n    PromotedPlacementActivePlacement:\n      additionalProperties: true\n      example:\n        availableActions:\n          - adjustBudget\n          - resume\n          - cancel\n        deliveryArea: NW6\n        placementId: \"100005\"\n        purchaseDate: 2021-01-01T14:45:00Z\n        status:\n          pause:\n            code: paused\n            pauseDate: 2021-01-14T12:02:32Z\n            resumeDate: 2021-02-12T00:00:00Z\n        weeklyBudget:\n          maximumAllowable: 100000\n          minimumAllowable: 500\n          recommended: 13000\n          remaining: 5000\n          total: 13000\n      nullable: false\n      properties:\n        availableActions:\n          description: A list of the currently supported actions for this placement.\n          items:\n            enum:\n              - adjustBudget\n              - cancel\n              - pause\n              - resume\n              - undoCancel\n            type: string\n          type: array\n        deliveryArea:\n          description: The postcode or location that the placement applies to.\n          nullable: false\n          type: string\n        placementId:\n          description: The unique identifier of the placement.\n          nullable: false\n          type: string\n        purchaseDate:\n          description: The UTC date and time at which this placement was purchased.\n          format: date-time\n          nullable: false\n          type: string\n        status:\n          description: Contains status information for different aspects of this placement. 'normal' status is assumed if no additional status information is available.\n          properties:\n            budget:\n              additionalProperties: true\n              description: The budget status of this placement.\n              nullable: false\n              properties:\n                code:\n                  description: The status code that describes this placement's current budget status.\n                  enum:\n                    - budgetLow\n                    - budgetExhausted\n                  nullable: false\n                  type: string\n              required:\n                - code\n            contract:\n              additionalProperties: true\n              description: The status of this placement's contract.\n              nullable: false\n              properties:\n                cancellableAfterDate:\n                  description: The UTC date and time after which this placement may be cancelled. Available if the status code is `inNonCancellablePeriod`.\n                  format: date-time\n                  nullable: false\n                  type: string\n                code:\n                  description: The status code that describes this placement's contract status.\n                  enum:\n                    - inNonCancellablePeriod\n                    - cancelled\n                  nullable: false\n                  type: string\n                endDate:\n                  description: The UTC date and time at which this placement will end. Available if the status code is \"cancelled\".\n                  format: date-time\n                  nullable: false\n                  type: string\n              required:\n                - code\n              type: object\n            pause:\n              additionalProperties: true\n              description: The pause status of this placement.\n              nullable: false\n              properties:\n                code:\n                  description: The status code that describes this placement's pause status.\n                  enum:\n                    - paused\n                  nullable: false\n                  type: string\n                pauseDate:\n                  description: The UTC date and time at which this placement was paused as a result of a manual action. Available if the status code is \"paused\".\n                  format: date-time\n                  nullable: false\n                  type: string\n                resumeDate:\n                  description: The UTC date and time at which this placement is scheduled to be resumed. Available if the status code is \"paused\" and a resume date was specified.\n                  format: date-time\n                  nullable: false\n                  type: string\n              required:\n                - code\n          type: object\n        weeklyBudget:\n          description: Contains information about the weekly budget for this placement.\n          nullable: false\n          properties:\n            maximumAllowable:\n              description: The maximum allowable budget for this week in the smallest unit of local currency (e.g., pence). It will not be possible to set a budget that exceeds this amount.\n              format: int32\n              nullable: false\n              type: integer\n            minimumAllowable:\n              description: The minimum allowable budget for this week in the smallest unit of local currency (e.g., pence). It will not be possible to set a budget lower than this amount.\n              format: int32\n              nullable: false\n              type: integer\n            recommended:\n              description: The recommended budget for this week so that the budget does not run out in the smallest unit of local currency (e.g., pence).\n              format: int32\n              nullable: false\n              type: integer\n            remaining:\n              description: The remaining budget for this week in the smallest unit of local currency (e.g., pence).\n              format: int32\n              nullable: false\n              type: integer\n            total:\n              description: The total budget for this week in the smallest unit of local currency (e.g., pence).\n              format: int32\n              nullable: false\n              type: integer\n          required:\n            - remaining\n            - total\n            - maximumAllowable\n            - minimumAllowable\n            - recommended\n          type: object\n      required:\n        - placementId\n        - deliveryArea\n        - purchaseDate\n        - weeklyBudget\n        - status\n      type: object\n    PromotedPlacementActivePlacementsForRestaurantResponse:\n      additionalProperties: true\n      example:\n        metadata:\n          currency: GBP\n          effectiveDate: 2021-01-14T17:30:00Z\n        placements:\n          - availableActions:\n              - adjustBudget\n              - resume\n              - cancel\n            deliveryArea: NW6\n            placementId: \"100001\"\n            purchaseDate: 2021-01-01T14:45:00Z\n            status:\n              pause:\n                code: paused\n                pauseDate: 2021-01-14T12:02:32Z\n                resumeDate: 2021-02-12T00:00:00Z\n              placement:\n                code: cancelled\n                endDate: 2021-01-17T23:59:59Z\n            weeklyBudget:\n              maximumAllowable: 100000\n              minimumAllowable: 500\n              recommended: 13000\n              remaining: 5000\n              total: 13000\n          - availableActions:\n              - adjustBudget\n              - pause\n              - cancel\n            deliveryArea: NW5\n            placementId: \"100002\"\n            purchaseDate: 2021-01-01T14:47:34Z\n            status:\n              budget:\n                code: budgetLow\n            weeklyBudget:\n              maximumAllowable: 110000\n              minimumAllowable: 500\n              recommended: 14000\n              remaining: 210\n              total: 13000\n          - availableActions:\n              - adjustBudget\n              - undoCancel\n            deliveryArea: NW4\n            placementId: \"100003\"\n            purchaseDate: 2021-01-01T14:51:12Z\n            status:\n              placement:\n                code: cancelled\n                endDate: 2021-01-17T23:59:59Z\n            weeklyBudget:\n              maximumAllowable: 100000\n              minimumAllowable: 500\n              recommended: 14000\n              remaining: 3200\n              total: 13000\n          - availableActions:\n              - adjustBudget\n              - pause\n              - cancel\n            deliveryArea: NW3\n            placementId: \"100004\"\n            purchaseDate: 2021-01-01T14:51:12Z\n            status:\n              budget:\n                code: budgetExhausted\n            weeklyBudget:\n              maximumAllowable: 100000\n              minimumAllowable: 500\n              recommended: 14000\n              remaining: 0\n              total: 13000\n      properties:\n        contract:\n          description: Information about the contract for this restaurant.\n          properties:\n            nonCancellablePeriodEndDate:\n              description: The UTC time after which the non-cancellable period ends for this restaurant. If not specified, this restaurant has week-by-week rolling contracts.\n              format: date-date\n              type: string\n          type: object\n        metadata:\n          additionalProperties: true\n          description: Additional metadata that may assist the rendering of the response.\n          properties:\n            currency:\n              description: The currency used for the budget data in ISO 4217 format, e.g., GBP, EUR or AUD.\n              nullable: false\n              type: string\n            effectiveDate:\n              description: The UTC time at which the request was processed for relative time calculations.\n              format: date-time\n              nullable: false\n              type: string\n          type: object\n        placements:\n          description: List of promoted placements active for a given restaurant.\n          items:\n            $ref: \"#/components/schemas/PromotedPlacementActivePlacement\"\n          type: array\n      required:\n        - placements\n      type: object\n    PromotedPlacementAvailablePlacement:\n      additionalProperties: true\n      example:\n        deliveryArea: NW6\n        inAllowList: true\n        weeklyBudget:\n          maximumAllowable: 100000\n          minimumAllowable: 500\n          recommended: 13000\n      nullable: false\n      properties:\n        deliveryArea:\n          description: The postcode or location that is available for starting a placement.\n          nullable: false\n          type: string\n        inAllowList:\n          description: Indicates whether this placement is in the allow list for self-service purchase by the restaurant partner.\n          nullable: false\n          type: boolean\n        weeklyBudget:\n          additionalProperties: true\n          description: Contains information about the required weekly budget for this placement location.\n          nullable: false\n          properties:\n            maximumAllowable:\n              description: The maximum allowable budget for this week in the smallest unit of local currency (e.g., pence). It will not be possible to set a budget that exceeds this amount.\n              format: int32\n              nullable: false\n              type: integer\n            minimumAllowable:\n              description: The minimum allowable budget for this week in the smallest unit of local currency (e.g., pence). It will not be possible to set a budget lower than this amount.\n              format: int32\n              nullable: false\n              type: integer\n            recommended:\n              description: The recommended budget for this week so that the budget does not run out in the smallest unit of local currency (e.g., pence).\n              format: int32\n              nullable: false\n              type: integer\n          required:\n            - maximumAllowable\n            - minimumAllowable\n            - recommended\n          type: object\n      required:\n        - deliveryArea\n        - weeklyBudget\n      type: object\n    PromotedPlacementAvailablePlacementsForRestaurantResponse:\n      additionalProperties: true\n      example:\n        metadata:\n          currency: GBP\n          effectiveDate: 2021-01-14T17:30:00Z\n        placements:\n          - deliveryArea: NW6\n            weeklyBudget:\n              maximumAllowable: 100000\n              minimumAllowable: 500\n              minimumRecommended: 1000\n              recommended: 13000\n          - deliveryArea: NW5\n            weeklyBudget:\n              maximumAllowable: 100000\n              minimumAllowable: 500\n              minimumRecommended: 1000\n              recommended: 14000\n          - deliveryArea: NW4\n            weeklyBudget:\n              maximumAllowable: 100000\n              minimumAllowable: 500\n              minimumRecommended: 1000\n              recommended: 14000\n          - deliveryArea: NW3\n            weeklyBudget:\n              maximumAllowable: 100000\n              minimumAllowable: 500\n              minimumRecommended: 1000\n              recommended: 14000\n      properties:\n        metadata:\n          additionalProperties: true\n          description: Additional metadata that may assist the rendering of the response.\n          properties:\n            currency:\n              description: The currency used for the budget data in ISO 4217 format, e.g., GBP, EUR or AUD.\n              nullable: false\n              type: string\n            effectiveDate:\n              description: The UTC time at which the request was processed for relative time calculations.\n              format: date-time\n              nullable: false\n              type: string\n            timeZone:\n              description: The restaurant's timezone in IANA format, e.g., Europe/London.\n              type: string\n          type: object\n        placements:\n          description: List of promoted placements available for purchase for a given restaurant.\n          items:\n            $ref: \"#/components/schemas/PromotedPlacementAvailablePlacement\"\n          type: array\n      type: object\n    PromotedPlacementCancelPlacementRequest:\n      example:\n        cancellationEffective: atEndOfWeek\n      oneOf:\n        - additionalProperties: true\n          nullable: false\n          properties:\n            cancellationEffective:\n              description: When the cancellation should take effect.\n              enum:\n                - atEndOfWeek\n              type: string\n          required:\n            - cancellationEffective\n          type: object\n        - additionalProperties: true\n          nullable: false\n          properties:\n            cancellationEffective:\n              description: When the cancellation should take effect.\n              enum:\n                - atSpecifiedTime\n              type: string\n            cancellationTime:\n              description: The UTC time at which the cancellation should take effect.\n              format: date-time\n              type: string\n          required:\n            - cancellationEffective\n            - cancellationTime\n          type: object\n    PromotedPlacementCandidateRestaurant:\n      additionalProperties: true\n      example:\n        metadata:\n          key: value\n        rank: 1\n        restaurantId: \"1234\"\n      properties:\n        rank:\n          description: The relative rank of this candidate restaurant in relation to others in the response. A smaller number indicates that this restaurant should be shown closer to the beginning of the list.\n          type: number\n        restaurantId:\n          description: The unique identifier of the candidate restaurant.\n          type: string\n      type: object\n    PromotedPlacementCandidateRestaurantsResponse:\n      additionalProperties: false\n      example:\n        candidateRestaurants:\n          - rank: 1\n            restaurantId: \"1234\"\n          - rank: 2\n            restaurantId: \"4567\"\n          - rank: 3\n            restaurantId: \"3245\"\n        metadata:\n          availableFilteredPositions: 2\n          availableUnfilteredPositions: 5\n      properties:\n        candidateRestaurants:\n          description: An array of candidate restaurants that are available for Promoted Placement.\n          items:\n            $ref: \"#/components/schemas/PromotedPlacementCandidateRestaurant\"\n          type: array\n        metadata:\n          additionalProperties: true\n          description: Contains additional metadata that may affect the rendering of Promoted Placement candidate restaurants.\n          properties:\n            availableFilteredPositions:\n              description: The number of Promoted Placement positions available in this location when displaying a filtered list of restaurants.\n              type: number\n            availableUnfilteredPositions:\n              description: The number of Promoted Placement positions available in this location when displaying the full list of restaurants.\n              type: number\n          type: object\n      type: object\n    PromotedPlacementPlacementInsights:\n      additionalProperties: true\n      example:\n        metadata:\n          currency: GBP\n        reports:\n          last-28-days:\n            data:\n              overall:\n                menuViews: 1236\n                newCustomers: 198\n                orderValue: 1137241\n                orders: 660\n              promotedPlacement:\n                menuViews: 922\n                newCustomers: 67\n                orderValue: 403212\n                orders: 250\n                placementSpend: 60630\n            period:\n              createdAt: 2021-01-22T08:06:14.278Z\n              endDate: 2021-01-21\n              startDate: 2020-12-25\n          last-7-days:\n            data:\n              overall:\n                menuViews: 309\n                newCustomers: 50\n                orderValue: 315910\n                orders: 165\n              promotedPlacement:\n                menuViews: 225\n                newCustomers: 17\n                orderValue: 96090\n                orders: 48\n                placementSpend: 14190\n            period:\n              createdAt: 2021-01-22T08:06:14.199Z\n              endDate: 2021-01-21\n              startDate: 2021-01-15\n      properties:\n        metadata:\n          additionalProperties: true\n          description: Additional metadata that may assist the rendering of the response.\n          properties:\n            currency:\n              description: The currency used in the reports in ISO 4217 format, e.g., GBP, EUR or AUD.\n              nullable: false\n              type: string\n          type: object\n        reports:\n          additionalProperties:\n            additionalProperties: true\n            description: A report for a given time period.\n            properties:\n              data:\n                additionalProperties: true\n                description: The placement insights data for this report period.\n                properties:\n                  overall:\n                    additionalProperties: true\n                    description: Total values for this period.\n                    properties:\n                      menuViews:\n                        description: The total number of menu views.\n                        format: int32\n                        type: integer\n                      newCustomers:\n                        description: The total number of new customers.\n                        format: int32\n                        type: integer\n                      orderValue:\n                        description: The total order value in the smallest unit of local currency (e.g., pence).\n                        format: int32\n                        type: integer\n                      orders:\n                        description: The total number of orders.\n                        format: int32\n                        type: integer\n                    required:\n                      - newCustomers\n                      - menuViews\n                      - orders\n                      - orderValue\n                    type: object\n                  promotedPlacement:\n                    additionalProperties: true\n                    description: Total values for promoted placement in this period.\n                    properties:\n                      menuViews:\n                        description: The total number of promoted menu views.\n                        format: int32\n                        type: integer\n                      newCustomers:\n                        description: The total number of new customers as a result of promoted placement.\n                        format: int32\n                        type: integer\n                      orderValue:\n                        description: The total order value resulting from promoted placement orders in the smallest unit of local currency (e.g., pence).\n                        format: int32\n                        type: integer\n                      orders:\n                        description: The total number of orders resulting from promoted placement menu views.\n                        format: int32\n                        type: integer\n                      placementSpend:\n                        description: The total amount spent on promoted placement in the smallest unit of local currency (e.g., pence).\n                        format: int32\n                        type: integer\n                    required:\n                      - newCustomers\n                      - menuViews\n                      - orders\n                      - orderValue\n                      - placementSpend\n                    type: object\n                type: object\n              period:\n                description: Describes the time period for this report.\n                properties:\n                  createdAt:\n                    description: The UTC time at which this report was generated.\n                    format: date-time\n                    nullable: false\n                    type: string\n                  endDate:\n                    description: The end date of this report period.\n                    format: date\n                    nullable: false\n                    type: string\n                  startDate:\n                    description: The start date of this report period.\n                    format: date\n                    nullable: false\n                    type: string\n                required:\n                  - createdAt\n                  - startDate\n                  - endDate\n                type: object\n            required:\n              - period\n              - data\n            type: object\n          description: Reports keyed by the name of specific time periods.\n          type: object\n      required:\n        - reports\n      type: object\n    Prompts:\n      properties:\n        DiscountApplied:\n          nullable: true\n          properties:\n            Amount:\n              format: decimal\n              type: number\n          type: object\n        InvalidProducts:\n          items:\n            $ref: \"#/components/schemas/InvalidProduct\"\n          type: array\n        ItemDiscounts:\n          description: Collection of item discount prompts to be shown customer\n          items:\n            $ref: \"#/components/schemas/ItemDiscountPrompt\"\n          type: array\n        Offers:\n          items:\n            properties:\n              DiscountValue:\n                format: decimal\n                type: number\n              OfferType:\n                type: string\n              QualifyingValue:\n                format: decimal\n                type: number\n              ToSpendValue:\n                format: decimal\n                type: number\n            type: object\n          type: array\n        OfflineProducts:\n          items:\n            $ref: \"#/components/schemas/OfflineProduct\"\n          type: array\n        RequiresOther:\n          type: boolean\n        SpendMore:\n          nullable: true\n          properties:\n            MinimumOrderAmount:\n              format: decimal\n              type: number\n            ToSpend:\n              format: decimal\n              type: number\n          type: object\n      type: object\n    Properties:\n      description: Geometry information for consumers location\n      example:\n        accuracyScore: 100\n        geocodingProvider: Google\n        matchScore: 100\n      properties:\n        accuracyScore:\n          default: 80\n          description: Just Eat Takeaway address accuracy score\n          format: integer\n          maximum: 100\n          minimum: 1\n          type: number\n        geocodingProvider:\n          description: the geocoding provider\n          type: string\n        matchScore:\n          default: 100\n          description: Just Eat Takeaway address match score\n          format: integer\n          maximum: 100\n          minimum: 1\n          type: number\n      type: object\n    PushNotificationRegistrationUpdate:\n      additionalProperties: false\n      properties:\n        appType:\n          $ref: \"#/components/schemas/AppType\"\n          description: Application type\n        pushNotificationToken:\n          description: Push notification token\n          nullable: true\n          type: string\n      type: object\n    PutProductBackOnTheMenuCommand:\n      additionalProperties: false\n      properties:\n        deletedBy:\n          description: Application which requested operation e.g. Orderpad, RestaurantApp\n          nullable: true\n          type: string\n        productIds:\n          description: List of product Ids to be brought back online\n          items:\n            type: string\n          nullable: true\n          type: array\n        requestedAt:\n          description: Request date and time in ISO 8601 format\n          format: date-time\n          nullable: true\n          type: string\n      type: object\n    RedeemCommand:\n      properties:\n        pin:\n          type: string\n      type: object\n    RedeemCommandResponse:\n      properties:\n        value:\n          format: int32\n          type: integer\n      type: object\n    RedeemPaycodeCommand:\n      properties:\n        paycode:\n          type: string\n      type: object\n    RedeemPaycodeResponse:\n      properties:\n        value:\n          format: int32\n          type: integer\n      type: object\n    RedeliverOrderResolution:\n      properties:\n        NewDueDate:\n          description: Updated due date for delivery of the order\n          format: date-time\n          type: string\n        Status:\n          description: The current status of the order\n          enum:\n            - DriverAtAddress\n            - Repreparing\n          type: string\n      type: object\n    RegistrationRequest:\n      additionalProperties: false\n      properties:\n        appType:\n          $ref: \"#/components/schemas/AppType\"\n          description: Application type\n        password:\n          description: Password\n          nullable: true\n          type: string\n        pushNotificationId:\n          description: The id used in push notification registration\n          nullable: true\n          type: string\n        username:\n          description: Username\n          nullable: true\n          type: string\n      type: object\n    RegistrationResponse:\n      additionalProperties: false\n      properties:\n        appType:\n          description: Application type\n          nullable: true\n          type: string\n        restaurantId:\n          description: The Id of the restaurant\n          nullable: true\n          type: string\n        token:\n          description: Created authentication token\n          nullable: true\n          type: string\n        userId:\n          description: The Id of the user\n          nullable: true\n          type: string\n      type: object\n    RemovedIngredient:\n      properties:\n        Details:\n          type: string\n      type: object\n    ReplaceRestaurantMenuRequest:\n      description: request containing links in s3 to new menu files\n      example:\n        fileKeys:\n          - 3c81dq0k9bhj1bn_menu_1.pdf\n          - 1rhj7qhr6fhjgbm_menu_2.pdf\n      properties:\n        fileKeys:\n          description: Array of paths to the new menu files that were uploaded to the certain AWS s3 bucket\n          items:\n            description: path to the new menu file that Was uploaded to the certain AWS s3 bucket\n            type: string\n          maxLength: 10\n          type: array\n      type: object\n    RequestCsatStep:\n      allOf:\n        - $ref: \"#/components/schemas/FlowStepBase\"\n        - properties:\n            quitFlowAction:\n              $ref: \"#/components/schemas/HelpAction\"\n              description: Action to close flow without giving CSAT\n          type: object\n      description: Flow step used for asking if customer was satisfied with flow\n      type: object\n    RequestRestaurant:\n      properties:\n        menuId:\n          description: Id of the restaurant's menu\n          type: string\n        restaurantId:\n          description: Id of the restaurant\n          type: string\n      required:\n        - restaurantId\n      type: object\n    RestaurantCapabilitiesPaymentTypeItem:\n      example:\n        cardTypes:\n          - VISA\n          - MASTERCARD\n          - AMEX\n        paymentType: Card\n        selected: false\n      properties:\n        cardTypes:\n          description: List of card types (only applies to `Card` payment type)\n          items:\n            enum:\n              - AMEX\n              - DK\n              - MASTERCARD\n              - VISA\n              - VISADK\n            format: enum\n            type: string\n          type: array\n        maxOrderValueCents:\n          description: Max order value in smallest unit of relevant currency (only applies to `Cash` payment type)\n          format: integer\n          type: number\n        paymentType:\n          description: The payment type\n          enum:\n            - ApplePay\n            - Card\n            - Cash\n            - GooglePay\n            - PayPal\n            - VCO\n          type: string\n        selected:\n          description: Flag to indicate if the payment type has been selected\n          type: boolean\n        token:\n          description: Token to be used with the payment type (only applies to `PayPal` payment type)\n          type: string\n        voucherAvailable:\n          description: Flag to indicate if vouchers are available for the payment type\n          type: boolean\n      type: object\n    RestaurantCapabilitiesResponse:\n      example:\n        availablePaymentTypes:\n          - paymentType: ApplePay\n            selected: true\n            voucherAvailable: true\n          - paymentType: GooglePay\n            selected: false\n          - paymentType: PayPal\n            selected: false\n            token: token123\n          - paymentType: VCO\n            selected: false\n          - maxOrderValueCents: 5000\n            paymentType: Cash\n            selected: false\n          - cardTypes:\n              - VISA\n              - MASTERCARD\n              - AMEX\n            paymentType: Card\n            selected: false\n        feeConfig:\n          amountCents: 1000\n      properties:\n        availablePaymentTypes:\n          description: List of available payment types\n          items:\n            $ref: \"#/components/schemas/RestaurantCapabilitiesPaymentTypeItem\"\n          type: array\n        feeConfig:\n          description: Details of any additional fees\n          properties:\n            amountCents:\n              description: The fee amount in smallest unit of relevant currency\n              format: integer\n              type: number\n          type: object\n      type: object\n    RestaurantCommentsOnReview:\n      example:\n        restaurantComments: Thank you very much for positive feedback\n      properties:\n        restaurantComments:\n          description: Restaurant comments in response on the customer review\n          nullable: false\n          type: string\n      type: object\n    RestaurantConfiguration:\n      additionalProperties: false\n      properties:\n        addressCity:\n          description: Address city\n          nullable: true\n          type: string\n        addressLine1:\n          description: Address line 1\n          nullable: true\n          type: string\n        brandName:\n          description: Name of the brand this restaurant belongs to\n          nullable: true\n          type: string\n        financeDetails:\n          $ref: \"#/components/schemas/RestaurantFinanceDetails\"\n          description: Restaurant finance details\n        geoLocation:\n          $ref: \"#/components/schemas/GeoLocation\"\n          description: Geo location details\n        isDmsEnabled:\n          description: Is DMS enabled\n          type: boolean\n        isFlypayEposEnabled:\n          description: Is Flypay enabled\n          type: boolean\n        isRdsRestaurant:\n          description: Is it RDS restaurant\n          type: boolean\n        logoUrl:\n          description: Logo URL\n          nullable: true\n          type: string\n        name:\n          description: Name of the restaurant\n          nullable: true\n          type: string\n        phoneNumber:\n          description: Phone number\n          nullable: true\n          type: string\n        postalCode:\n          description: Post code of the restaurant\n          nullable: true\n          type: string\n        supportDetails:\n          $ref: \"#/components/schemas/RestaurantSupportDetails\"\n          description: Restaurant support details\n        tempOffline:\n          $ref: \"#/components/schemas/RestaurantTempOffline\"\n          description: Details of temp offline\n        website:\n          description: Web site address of the restaurant\n          nullable: true\n          type: string\n      type: object\n    RestaurantDeliveryFees:\n      example:\n        bands:\n          - fee: 250\n            minimumAmount: 1000\n          - fee: 0\n            minimumAmount: 2000\n        minimumOrderValue: 1000\n        restaurantId: \"5678\"\n      nullable: false\n      properties:\n        bands:\n          description: Collection of delivery fee bands\n          items:\n            properties:\n              fee:\n                description: The delivery fee, in the smallest unit of local currency (e.g. pence).\n                format: integer\n                type: number\n              minimumAmount:\n                description: The minimum order value (excluding fees) when this fee band applies. The fee with the highest `minimumAmount` that is less than or equal to order value applies. This is in the smallest unit of local currency (e.g. pence).\n                format: integer\n                type: number\n            type: object\n          type: array\n        minimumOrderValue:\n          description: The minimum order value (excluding fees) required, in the smallest unit of local currency (e.g. pence).\n          format: integer\n          type: number\n        restaurantId:\n          description: The identifier of the restaurant\n          type: string\n      type: object\n    RestaurantDetailsLocation:\n      description: Location of the restaurant\n      properties:\n        city:\n          description: City of the restaurant\n          type: string\n        country:\n          description: Country of the restaurant\n          type: string\n        geoPosition:\n          $ref: \"#/components/schemas/RestaurantDetailsLocationPosition\"\n          description: Geoposition of the restaurant\n        postalCode:\n          description: Post code of the restaurant\n          type: string\n        region:\n          description: Region of the restaurant\n          type: string\n        streetAddress:\n          description: Street address of the restaurant\n          type: string\n      type: object\n    RestaurantDetailsLocationPosition:\n      description: Geoposition of the restaurant in GeoJSON format\n      properties:\n        coordinates:\n          description: longitude and latitude\n          items:\n            format: double\n            type: number\n          maxItems: 2\n          minItems: 2\n          type: array\n        type:\n          description: type of primitive\n          enum:\n            - Point\n          type: string\n      type: object\n    RestaurantDetailsResponse:\n      description: response containing details of the restaurant\n      example:\n        allergenInformation:\n          phoneNumber: +44 7911 123456\n          url: http://test.com\n        contactOptions:\n          emails:\n            - email: test@mcdonalds.com\n            - usedFor:\n                - Invoice\n                - Default\n          phoneNumbers:\n            - phoneNumber: +44 7911 123456\n            - usedFor:\n                - Default\n                - Owner\n                - Alternative\n        cuisines:\n          - Italian\n          - American\n        id: \"108308\"\n        legalInformation:\n          companyNumber: \"12345\"\n          registeredName: Mc Donald's\n        location:\n          city: London\n          country: United Kingdom\n          geoPosition:\n            coordinates:\n              - 51.509865\n              - -0.118092\n            type: Point\n          postalCode: EC4M 7RF\n          region: Farringdon\n          streetAddress: Fleet Place House, Fleet Place\n        name: McDonald's Test\n      properties:\n        allergenInformation:\n          description: Allergen details of the restaurant\n          properties:\n            phoneNumber:\n              description: Phone number to contact restaurant about allergens\n              type: string\n            url:\n              description: Page with information about allergens\n              type: string\n          type: object\n        contactOptions:\n          description: Contact details of the restaurant\n          properties:\n            emails:\n              description: Array containing an email with label items\n              items:\n                description: An item in emails array containing an email with label\n                maxItems: 3\n                properties:\n                  email:\n                    description: Email contact\n                    type: string\n                  usedFor:\n                    description: Type of email contacts\n                    items:\n                      description: Array containing labels specifying email\n                      enum:\n                        - Default\n                        - Invoice\n                      format: enum\n                      type: string\n                    maxItems: 3\n                    type: array\n                type: object\n              type: array\n            phoneNumbers:\n              description: Array containing a phone number with label items\n              items:\n                description: An item in emails array containing an email with label\n                maxItems: 3\n                properties:\n                  phoneNumber:\n                    description: Phone number\n                    type: string\n                  usedFor:\n                    description: Type of phone number contacts\n                    items:\n                      description: Array containing labels specifying phone number\n                      enum:\n                        - Default\n                        - Owner\n                        - Alternative\n                      format: enum\n                      type: string\n                    maxItems: 3\n                    type: array\n                type: object\n              maxItems: 3\n              type: array\n          type: object\n        cuisines:\n          description: Array of cuisines of restaurant\n          items:\n            description: Cuisine name\n            type: string\n          type: array\n        id:\n          description: A unique identifier at tenant level for a given restaurant\n          type: string\n        legalInformation:\n          description: Legal information of the restaurant\n          properties:\n            companyNumber:\n              description: Company number of the restaurant\n              type: string\n            registeredName:\n              description: Legal company name of the restaurant\n              type: string\n          type: object\n        location:\n          $ref: \"#/components/schemas/RestaurantDetailsLocation\"\n          description: Location of the restaurant\n        name:\n          description: The name of the restaurant.\n          type: string\n      type: object\n    RestaurantETAs:\n      items:\n        example:\n          etaAtRestaurant: 1\n          restaurantId: \"1\"\n        properties:\n          etaAtRestaurant:\n            description: Your best estimation in minutes\n            format: int32\n            type: number\n          restaurantId:\n            description: The unique identifier of the restaurant.\n            type: string\n        type: object\n      type: array\n    RestaurantErrorResponse:\n      example:\n        errorCode: InvalidCountryCode\n        errorId: 6947c692-ca24-434d-8166-d4d54ef8d74e\n        message: The country code 'zzz' is not supported.\n        requestId: 8000324e-0000-f400-b63f-84710c7967bb\n        statusCode: \"400\"\n        timestamp: 2019-10-02T12:34:53.1214447+00:00\n      properties:\n        errorCode:\n          description: A code that identifies the problem type. It will be supported by human-readable documentation that identifies how to resolve the error\n          type: string\n        errorId:\n          description: A value that helps identify this response back to logs, so we can easily find this specific fault\n          type: string\n        message:\n          description: Specific details about the error that may assist the you in resolving the issue\n          type: string\n        requestId:\n          description: A value that helps identify the trace back to logs, so that we can easily find what was happening on our system when the fault was generated\n          type: string\n        statusCode:\n          description: Http response status code\n          type: string\n        timestamp:\n          description: Date-time when this request was processed\n          format: date-time\n          type: string\n      type: object\n    RestaurantFees:\n      description: An object encapsulating all possible fees which a restaurant can apply to itself\n      example:\n        bagFee:\n          description: A charge for bags in delivery\n          serviceTypes:\n            collection:\n              amount: 5\n            default:\n              amount: 0\n            delivery:\n              amount: 10\n      properties:\n        bagFee:\n          $ref: \"#/components/schemas/Fee\"\n          description: A fee applied for bags used for delivery and collection orders\n      type: object\n    RestaurantFinanceDetails:\n      additionalProperties: false\n      properties:\n        paymentMode:\n          description: Current payment mode\n          enum:\n            - CardOnly\n            - CardAndCash\n          nullable: true\n          type: string\n      type: object\n    RestaurantInfo:\n      additionalProperties: false\n      properties:\n        addressCity:\n          description: Restaurant address city\n          nullable: true\n          type: string\n        addressLine1:\n          description: Restaurant address line 1\n          nullable: true\n          type: string\n        geoLocation:\n          description: Restaurant geolocation\n          nullable: true\n          oneOf:\n            - $ref: \"#/components/schemas/GeoLocation\"\n        name:\n          description: Restaurant name\n          nullable: true\n          type: string\n        phoneNumber:\n          description: Restaurant phone number\n          nullable: true\n          type: string\n        postalCode:\n          description: Restaurant name\n          nullable: true\n          type: string\n        vatRegistrationNumber:\n          description: Restaurant VAT registration number\n          nullable: true\n          type: string\n        website:\n          description: Restaurant website\n          nullable: true\n          type: string\n      type: object\n    RestaurantInvoiceDownloadInformation:\n      description: An information to download invoice content\n      example:\n        downloadUrl: https://invoicesbucket.s3.eu-west-1.amazonaws.com/123456.html?X-Amz-Expires=60\u0026x-amz-security-token=qw12qw12\u0026X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Credential=ABABABABAB/20201007/eu-west-1/s3/aws4_request\u0026X-Amz-Date=20201007T162255Z\u0026X-Amz-SignedHeaders=host;x-amz-security-token\u0026X-Amz-Signature=34rt34rt\n        expires: 2020-10-07T16:23:55.000Z\n      properties:\n        downloadUrl:\n          description: The URL to download invoice content\n          type: string\n        expires:\n          description: The time when the download URL expires and becomes invalid to download invoice content\n          format: date-time\n          type: string\n      type: object\n    RestaurantInvoiceSummary:\n      description: An invoice summary for the invoice period\n      properties:\n        accountBalance:\n          description: Restaurant account balance at the end of the invoice period in smallest unit of relevant currency\n          format: integer\n          type: number\n        createdDate:\n          description: The invoice created date\n          format: date-time\n          type: string\n        currencyCode:\n          description: The ISO-4217 currency code associated with the invoice\n          type: string\n        endDate:\n          description: The end date of the invoice period\n          format: date\n          type: string\n        id:\n          description: The Id of the invoice\n          type: string\n        invoiceAmount:\n          description: Invoice amount for the invoice period in smallest unit of relevant currency\n          format: integer\n          type: number\n        startDate:\n          description: The start date of the invoice period\n          format: date\n          type: string\n      type: object\n    RestaurantInvoices:\n      example:\n        invoices:\n          - accountBalance: 123540\n            createdDate: 2020-09-29T09:26:09.930Z\n            currencyCode: GBP\n            endDate: 2020-09-27\n            id: i9999999\n            invoiceAmount: 5421\n            startDate: 2020-09-21\n          - accountBalance: 167980\n            createdDate: 2020-09-22T11:00:32.800Z\n            currencyCode: GBP\n            endDate: 2020-09-20\n            id: i8888888\n            invoiceAmount: 6798\n            startDate: 2020-09-14\n        paging:\n          cursors:\n            after: fewyNzQyOGI3OHYt\n      properties:\n        invoices:\n          description: List of restaurant invoice summaries\n          items:\n            $ref: \"#/components/schemas/RestaurantInvoiceSummary\"\n          type: array\n        paging:\n          description: Consists of pagination information\n          properties:\n            cursors:\n              description: Consists of cursor markers used in pagination\n              properties:\n                after:\n                  description: The value should be used in the query parameter named after. It is used as a cursor of the last returned record in the previous request, from which next offset going to be fetched. A missing or empty value indicates that the end of the result set has been reached\n                  type: string\n              type: object\n          type: object\n      type: object\n    RestaurantOffer:\n      properties:\n        ConsumerSegment:\n          description: Consumer Segment to which offer applies\n          example: NewToRestaurant\n          nullable: false\n          type: string\n        DiscountApplied:\n          description: The money value discount\n          format: decimal\n          nullable: false\n          type: number\n        DiscountCode:\n          description: The unique code of the discount, acts as a lock object at payment stage\n          nullable: true\n          type: string\n        DiscountValue:\n          description: The percentage value discount. Returned 0 when offer is not of Percent type\n          format: decimal\n          nullable: false\n          type: number\n        OfferId:\n          description: The unique identifier of the offer\n          nullable: false\n          type: string\n        OfferType:\n          description: The type of the offer\n          nullable: false\n          type: string\n      required:\n        - OfferId\n        - OfferType\n        - ConsumerSegment\n        - DiscountApplied\n      type: object\n    RestaurantOfflineStatus:\n      example:\n        AllowRestaurantOverride: false\n        IsOffline: true\n        RestaurantId: \"123456\"\n        Tenant: uk\n      properties:\n        AllowRestaurantOverride:\n          description: Whether a restaurant should be allowed to reverse this offline status change through calls to the Restaurant Events endpoints.\n          nullable: true\n          type: boolean\n        IsOffline:\n          description: Represents the current offline status of the restaurant.\n          type: boolean\n        RestaurantId:\n          description: The unique identifier of the restaurant that has their offline status changed.\n          type: string\n        Tenant:\n          description: The two letter country code for the market in which the restaurant operates.\n          enum:\n            - au\n            - dk\n            - es\n            - ie\n            - it\n            - no\n            - uk\n            - nz\n          format: enum\n          type: string\n      type: object\n    RestaurantOrderAppliedDiscount:\n      description: A discount item in an order\n      properties:\n        discountAmount:\n          description: The discount value in smallest unit of relevant currency\n          format: integer\n          type: number\n        type:\n          description: The type of discount\n          enum:\n            - Percent\n            - FirstTimeCustomer\n            - StampCard\n      type: object\n    RestaurantOrderCustomerInfo:\n      description: Information about a customer\n      properties:\n        deliveryAddress:\n          description: The delivery address of the order\n          items:\n            description: The address line\n            type: string\n          nullable: true\n          type: array\n        name:\n          description: The customer name\n          nullable: true\n          type: string\n      type: object\n    RestaurantOrderDetails:\n      description: An order details\n      example:\n        appliedDiscounts:\n          - discountAmount: 2550\n            type: StampCard\n        currencyCode: GBP\n        customerInfo:\n          deliveryAddress:\n            - 13 Moon road\n            - Mars\n            - BS5 1KG\n            - Bristol\n          name: Simon Moon\n        deliveryPrice: 200\n        dueDate: 2020-01-01T10:15:00.000Z\n        friendlyId: 821367535\n        id: rtvtgo0wwugmiiikdpzvsg\n        orderItems:\n          - description: one pizza and one drink from choices\n            itemId: p1\n            itemType: Product\n            name: Pizza and drink\n            quantity: 1\n            subItems:\n              - description: classic pizza Margherita\n                itemId: mp1\n                itemType: MealPart\n                name: Margherita\n                quantity: 1\n                subItems: []\n                synonym: Medium\n                unitPrice: 0\n              - description: \"\"\n                itemId: mp2\n                itemType: MealPart\n                name: Coca-Cola\n                quantity: 1\n                subItems: []\n                synonym: 1L\n                unitPrice: 0\n              - itemId: a1\n                itemType: Accessory\n                name: Double Cheese\n                quantity: 1\n                subItems: []\n                synonym: \"\"\n                unitPrice: 100\n            synonym: Medium\n            unitPrice: 999\n          - description: Romaine lettuce, croutons, Parmesan cheese, lemon juice, olive oil, egg, Worcestershire sauce, anchovies, Dijon mustard, black pepper\n            itemId: p2\n            itemType: Product\n            name: Cesar Salad\n            quantity: 2\n            subItems: []\n            synonym: \"\"\n            unitPrice: 533\n        orderNote: Contact-free delivery\n        orderPrice: 2099\n        orderPriceBreakdown:\n          accountCredits: 500\n          discounts: 207\n          fees: 250\n          items: 2066\n          vouchers: 0\n        orderStatus: Cancelled\n        paymentInfo:\n          fees:\n            - type: Card\n              value: 50\n            - type: Delivery\n              value: 200\n          paidDate: 2020-01-01T09:31:00.000Z\n          paymentLines:\n            - fee: 0\n              paymentMethod: AccountCredit\n              value: 500\n            - fee: 50\n              paymentMethod: Card\n              value: 1549\n        paymentType: Card\n        placedDate: 2020-01-01T09:30:00.000Z\n        previousJustEatOrderCount: 3\n        previousRestaurantOrderCount: 1\n        promptAsap: false\n        serviceType: Delivery\n        statusReason: RejectedByRestaurant\n        transactionReference: 123334567667989\n      properties:\n        appliedDiscounts:\n          description: List of restaurant applied discounts\n          items:\n            $ref: \"#/components/schemas/RestaurantOrderAppliedDiscount\"\n          type: array\n        currencyCode:\n          description: The ISO-4217 currency code associated with the all prices and money amounts in order details\n          type: string\n        customerInfo:\n          $ref: \"#/components/schemas/RestaurantOrderCustomerInfo\"\n          description: Information about a customer\n        deliveryPrice:\n          description: The order delivery price in smallest unit of relevant currency\n          format: integer\n          type: number\n        dueDate:\n          description: The due date of the order\n          format: date-time\n          type: string\n        friendlyId:\n          description: The friendly order Id\n          type: string\n        id:\n          description: The Id of the order\n          type: string\n        orderItems:\n          description: List of restaurant order items\n          items:\n            $ref: \"#/components/schemas/RestaurantOrderItem\"\n          type: array\n        orderNote:\n          description: The customer note to the order\n          nullable: true\n          type: string\n        orderPrice:\n          description: The order price in smallest unit of relevant currency\n          format: integer\n          type: number\n        orderPriceBreakdown:\n          $ref: \"#/components/schemas/RestaurantOrderPriceBreakdown\"\n          description: The order price breakdown (all amounts in smallest unit of relevant currency)\n        orderStatus:\n          description: Status of completed order\n          enum:\n            - Completed\n            - Cancelled\n        paymentInfo:\n          $ref: \"#/components/schemas/RestaurantOrderPaymentInfo\"\n          description: Information about a payment\n        paymentType:\n          description: The payment type (cash or card)\n          enum:\n            - Card\n            - Cash\n        placedDate:\n          description: The order placed date\n          format: date-time\n          type: string\n        previousRestaurantOrderCount:\n          description: The customer's previous total number of orders made to this restaurant\n          type: number\n        previousTotalOrderCount:\n          description: The customer's previous total number of orders made to all restaurants\n          type: number\n        promptAsap:\n          description: The flag that shows whether the customer awaits an order as soon as possible\n          type: boolean\n        serviceType:\n          description: Type of service (collection, delivery or dine-in)\n          enum:\n            - Delivery\n            - Collection\n            - DineIn\n        statusReason:\n          description: The reason for the order's status, if known\n          enum:\n            - TooFar\n            - FakeDelivered\n            - FakeNotDelivered\n            - FaxNotReceived\n            - IncorrectOrder\n            - NoAnswerFromRestaurant\n            - MissedByRestaurant\n            - FakeNotCollected\n            - RestaurantCannotDeliver\n            - RejectedByRestaurant\n            - NewTimeRejected\n            - SystemError\n            - RestaurantIsBusy\n            - TestOrder\n        transactionReference:\n          description: The payment transaction reference, if known\n          type: string\n      type: object\n    RestaurantOrderHistory:\n      example:\n        orders:\n          - currencyCode: GBP\n            deliveryPrice: 200\n            friendlyId: \"821367535\"\n            id: rtvtgo0wwugmiiikdpzvsg\n            orderPrice: 2099\n            orderStatus: Completed\n            paymentType: Card\n            placedDate: 2020-01-01T09:30:00.000Z\n            serviceType: Delivery\n          - currencyCode: GBP\n            deliveryPrice: 0\n            friendlyId: \"829022736\"\n            id: uerbbymdfkxdecduuerbby\n            orderPrice: 99900\n            orderStatus: Cancelled\n            paymentType: Cash\n            placedDate: 2020-01-02T19:20:00.000Z\n            serviceType: Collection\n          - currencyCode: GBP\n            deliveryPrice: 0\n            friendlyId: \"829022737\"\n            id: dfssd3efsferr4rgfdgf\n            orderPrice: 54400\n            orderStatus: Completed\n            paymentType: Cash\n            placedDate: 2020-01-02T20:45:00.000Z\n            serviceType: DineIn\n        paging:\n          cursors:\n            after: NDMyNzQyODI3OTQw\n      properties:\n        orders:\n          description: List of restaurant order summaries\n          items:\n            $ref: \"#/components/schemas/RestaurantOrderSummary\"\n          type: array\n        paging:\n          description: Consists of pagination information\n          properties:\n            cursors:\n              description: Consists of cursors markers used in pagination\n              properties:\n                after:\n                  description: The value should be used in the query parameter named after. It is used as a cursor of the last returned record in the previous request, from which next offset going to be fetched. A missing or empty value indicates that the end of the result set has been reached\n                  type: string\n              type: object\n          type: object\n      type: object\n    RestaurantOrderItem:\n      description: An item in an order\n      properties:\n        description:\n          description: The description for the item\n          type: string\n        itemId:\n          description: The Id of the item\n          type: string\n        itemType:\n          description: The type of item\n          enum:\n            - Product\n            - MealPart\n            - Accessory\n        name:\n          description: The name of the item\n          type: string\n        quantity:\n          description: The quantity of the item\n          format: int32\n          type: integer\n        subItems:\n          description: The sub items of item, such as meal parts of the meal or accessories\n          items:\n            $ref: \"#/components/schemas/RestaurantOrderItem\"\n          type: array\n        synonym:\n          description: The synonym of the item\n          type: string\n        unitPrice:\n          description: The unit price for the item\n          format: integer\n          type: number\n      type: object\n    RestaurantOrderPaymentInfo:\n      description: Information about a payment\n      properties:\n        fees:\n          description: The fees applied to the order\n          items:\n            properties:\n              type:\n                description: The type of fee, such as delivery or card\n                type: string\n              value:\n                description: The fee value in smallest unit of relevant currency\n                format: integer\n                type: number\n            type: object\n          type: array\n        paidDate:\n          description: The date and time the order was paid for, if known\n          format: date-time\n          nullable: true\n          type: string\n        paymentLines:\n          description: The payment lines\n          items:\n            description: An individual payment line\n            properties:\n              fee:\n                description: The payment fee in smallest unit of relevant currency\n                format: integer\n                type: number\n              paymentMethod:\n                description: The payment method, such as cash or card\n                type: string\n              value:\n                description: The payment value in smallest unit of relevant currency\n                format: integer\n                type: number\n            type: object\n          type: array\n      type: object\n    RestaurantOrderPriceBreakdown:\n      description: The order price breakdown (all amounts in smallest unit of relevant currency)\n      properties:\n        accountCredits:\n          description: The total amount of account credit(s) applied to the order\n          format: integer\n          type: number\n        discounts:\n          description: The total amount of discount(s) applied to the order\n          format: integer\n          type: number\n        fees:\n          description: The total amount of fees applied to the order\n          format: integer\n          type: number\n        items:\n          description: The total amount of order items\n          format: integer\n          type: number\n        vouchers:\n          description: The total amount of voucher(s) applied to the order\n          format: integer\n          type: number\n      type: object\n    RestaurantOrderSummaries:\n      description: An orders summary for date range (all total values in smallest unit of relevant currency)\n      example:\n        count: 27\n        currencyCode: GBP\n        totalCardOrderValue: 92059\n        totalCashOrderValue: 7934\n        totalCollectionOrderValue: 22241\n        totalDeliveryOrderValue: 66621\n        totalDeliveryPriceValue: 70\n        totalDineInOrderValue: 11131\n        totalOrderValue: 99993\n      properties:\n        count:\n          description: Total number of all orders for date range\n          format: int32\n          type: integer\n        currencyCode:\n          description: The ISO-4217 currency code associated with the total values\n          type: string\n        totalCardOrderValue:\n          description: Total value of card orders for date range\n          format: int32\n          type: number\n        totalCashOrderValue:\n          description: Total value of cash orders for date range\n          format: int32\n          type: number\n        totalCollectionOrderValue:\n          description: Total value of collection orders for date range\n          format: int32\n          type: number\n        totalDeliveryOrderValue:\n          description: Total value of delivery orders for date range\n          format: int32\n          type: number\n        totalDeliveryPriceValue:\n          description: Total delivery price value for date range\n          format: int32\n          type: number\n        totalDineInOrderValue:\n          description: Total value of dine-in orders for date range\n          format: int32\n          type: number\n        totalOrderValue:\n          description: Total value of all orders for date range\n          format: int32\n          type: number\n      type: object\n    RestaurantOrderSummary:\n      description: An order summary\n      properties:\n        currencyCode:\n          description: The ISO-4217 currency code associated with the order price\n          type: string\n        deliveryPrice:\n          description: The order delivery price in smallest unit of relevant currency\n          format: integer\n          type: number\n        friendlyId:\n          description: The friendly order Id\n          type: string\n        id:\n          description: The Id of the order\n          type: string\n        orderPrice:\n          description: The order price in smallest unit of relevant currency\n          format: integer\n          type: number\n        orderStatus:\n          description: Status of completed order\n          enum:\n            - Completed\n            - Cancelled\n        paymentType:\n          description: The payment type (cash or card)\n          enum:\n            - Card\n            - Cash\n        placedDate:\n          description: The order placed date\n          format: date-time\n          type: string\n        serviceType:\n          description: Type of service (collection, delivery or dine-in)\n          enum:\n            - Collection\n            - Delivery\n            - DineIn\n      type: object\n    RestaurantPromotedPlacementInfo:\n      example:\n        defaultPromoted: true\n        restaurantId: \"84335\"\n      nullable: false\n      properties:\n        defaultPromoted:\n          description: Should be promoted by default\n          type: boolean\n        restaurantId:\n          description: Id of the restaurant\n          type: string\n      type: object\n    RestaurantReviews:\n      example:\n        reviews:\n          - approvedRestaurantComments: Thank you very much for positive feedback\n            customerComments: Extremely good food and service\n            customerName: Steve\n            friendlyOrderId: \"123456789\"\n            id: uimpewidbrjyxcweiqtoe\n            rateDate: 2020-10-18T17:42:38.000Z\n            ratingAverage: 5.66\n            restaurantComments: Thank u very much for positive feedback\n          - approvedRestaurantComments: We are sorry\n            customerComments: Coffee poured all over my food\n            customerName: Lucy\n            friendlyOrderId: \"123456790\"\n            id: tytyhjdbrhgjfxcweigfht\n            rateDate: 2020-10-19T18:00:45.000Z\n            ratingAverage: 2.33\n            restaurantComments: We are sorry, but it is your fault\n      properties:\n        reviews:\n          description: List of restaurant reviews\n          items:\n            properties:\n              approvedRestaurantComments:\n                description: Any comments left by the restaurant in response to the review approved by a moderator\n                nullable: true\n                type: string\n              customerComments:\n                description: Any comments left by the customer in their review\n                nullable: true\n                type: string\n              customerName:\n                description: The (first) name of the customer who left the review\n                nullable: false\n                type: string\n              friendlyOrderId:\n                description: The friendly order Id the review is associated with\n                nullable: false\n                type: string\n              id:\n                description: The Id of the review\n                format: int32\n                nullable: false\n                type: string\n              rateDate:\n                description: The date and time on which the order was made\n                format: date-time\n                nullable: false\n                type: string\n              ratingAverage:\n                description: The average score left by the customer\n                format: double\n                nullable: false\n                type: number\n              restaurantComments:\n                description: Any comments left by the restaurant in response to the review\n                nullable: true\n                type: string\n            type: object\n          type: array\n      type: object\n    RestaurantReviewsRatingBreakdown:\n      properties:\n        badRatingsCount:\n          description: The count of bad (1,2 stars) ratings across all reviews\n          format: int32\n          nullable: false\n          type: integer\n        goodRatingsCount:\n          description: The count of good (5,6 stars) ratings across all reviews\n          format: int32\n          nullable: false\n          type: integer\n        neutralRatingsCount:\n          description: The count of neutral (3,4 stars) ratings across all reviews\n          format: int32\n          nullable: false\n          type: integer\n      type: object\n    RestaurantReviewsSummary:\n      example:\n        ratingAverage: 4.7\n        ratingsBreakdown:\n          delivery:\n            badRatingsCount: 10\n            goodRatingsCount: 46\n            neutralRatingsCount: 10\n          overall:\n            badRatingsCount: 8\n            goodRatingsCount: 44\n            neutralRatingsCount: 14\n          quality:\n            badRatingsCount: 10\n            goodRatingsCount: 44\n            neutralRatingsCount: 12\n          service:\n            badRatingsCount: 15\n            goodRatingsCount: 45\n            neutralRatingsCount: 6\n        reviewsCount: 66\n      properties:\n        ratingAverage:\n          description: The average score of all reviews\n          format: double\n          nullable: false\n          type: number\n        ratingsBreakdown:\n          description: The breakdown of good/neutral/bad reviews for different types of ratings\n          nullable: false\n          properties:\n            delivery:\n              $ref: \"#/components/schemas/RestaurantReviewsRatingBreakdown\"\n              description: The breakdown of good/neutral/bad delivery experience ratings across all reviews\n            overall:\n              $ref: \"#/components/schemas/RestaurantReviewsRatingBreakdown\"\n              description: The breakdown of good/neutral/bad overall experience ratings across all reviews\n            quality:\n              $ref: \"#/components/schemas/RestaurantReviewsRatingBreakdown\"\n              description: The breakdown of good/neutral/bad quality experience ratings across all reviews\n            service:\n              $ref: \"#/components/schemas/RestaurantReviewsRatingBreakdown\"\n              description: The breakdown of good/neutral/bad service experience ratings across all reviews\n          type: object\n        reviewsCount:\n          description: The count of all reviews\n          format: int32\n          nullable: false\n          type: integer\n      type: object\n    RestaurantSearchProduct:\n      example:\n        fullName: Chicken Korma\n        price: 799\n        productId: \"289347\"\n      properties:\n        fullName:\n          description: The full name of the product\n          type: string\n        price:\n          description: The price of the product\n          type: number\n        productId:\n          description: The id of the product\n          type: string\n      type: object\n    RestaurantSearchResponse:\n      example:\n        restaurants:\n          - isSponsored: true\n            products:\n              - fullName: Chicken Korma\n                price: 799\n                productId: \"289347\"\n              - fullName: Chicken Madras\n                price: 699\n                productId: \"563454\"\n            restaurantId: \"110230\"\n          - isSponsored: false\n            products:\n              - fullName: BBQ Chicken Pizza\n                price: 1099\n                productId: \"67832\"\n              - fullName: Chicken Burger\n                price: 899\n                productId: \"23567\"\n            restaurantId: \"229390\"\n      properties:\n        restaurants:\n          description: Ordered list of restaurants\n          items:\n            $ref: \"#/components/schemas/RestaurantSearchResponseItem\"\n          type: array\n          uniqueItems: false\n      type: object\n    RestaurantSearchResponseItem:\n      example:\n        isSponsored: false\n        products:\n          - fullName: Chicken Korma\n            price: 799\n            productId: \"289347\"\n          - fullName: Chicken Madras\n            price: 699\n            productId: \"563454\"\n        restaurantId: \"110230\"\n      properties:\n        isSponsored:\n          description: Flag to indicate if the restaurant is sponsored, so has been promoted to the top of the results\n          type: boolean\n        products:\n          description: Ordered list of products available from the restaurant which matched the search term\n          items:\n            $ref: \"#/components/schemas/RestaurantSearchProduct\"\n          type: array\n          uniqueItems: false\n        restaurantId:\n          description: The id of the restaurant\n          type: string\n      type: object\n    RestaurantSettingsResponse:\n      description: response containing settings of the restaurant in partner centre\n      example:\n        isMenuManagementTeaserVisible: false\n      properties:\n        isMenuManagementTeaserVisible:\n          description: A value indicated whether menu management teaser should be shown on restaurant edit menu page\n          type: boolean\n      type: object\n    RestaurantSmileyRatingsInspection:\n      properties:\n        inspectionDate:\n          description: Date of the inspection (dd-mm-yyyy). It can be nullable if no inspection was done in the restaurant.\n          nullable: true\n          type: string\n        rate:\n          description: Smiley Rating of this inspection (4 - lower, 1 - higher). It can be nullable if no inspection was done in the restaurant.\n          maximum: 4\n          minimum: 1\n          nullable: true\n          type: integer\n    RestaurantSmileyRatingsResponse:\n      additionalProperties: false\n      example:\n        inspections:\n          first:\n            inspectionDate: 02-01-2021\n            rate: 1\n          fourth:\n            inspectionDate: null\n            rate: null\n          second:\n            inspectionDate: 02-01-2021\n            rate: 1\n          third:\n            inspectionDate: 02-01-2021\n            rate: 2\n        isElite: false\n        restaurantSmileyId: \"111111\"\n        url: https://www.findsmiley.dk/111111\n      properties:\n        inspections:\n          description: Object with the last four inspections from most recent to older\n          properties:\n            first:\n              allOf:\n                - $ref: \"#/components/schemas/RestaurantSmileyRatingsInspection\"\n              description: First most recent inspection\n              nullable: false\n              type: object\n            fourth:\n              allOf:\n                - $ref: \"#/components/schemas/RestaurantSmileyRatingsInspection\"\n              description: Fourth most recent inspection\n              nullable: false\n              type: object\n            second:\n              allOf:\n                - $ref: \"#/components/schemas/RestaurantSmileyRatingsInspection\"\n              description: Second most recent inspection\n              nullable: false\n              type: object\n            third:\n              allOf:\n                - $ref: \"#/components/schemas/RestaurantSmileyRatingsInspection\"\n              description: Third most recent inspection\n              nullable: false\n              type: object\n          type: object\n        isElite:\n          description: Flag that ensures a restaurant is rated as Elite\n          nullable: false\n          type: boolean\n        restaurantSmileyId:\n          description: Restaurant Smiley Id\n          nullable: false\n          type: string\n        url:\n          description: URL for complete info of this restaurant at https://www.findsmiley.dk\n          nullable: false\n          type: string\n      type: object\n    RestaurantSupportDetails:\n      additionalProperties: false\n      properties:\n        phoneNumber:\n          description: Phone number of the restaurant\n          nullable: true\n          type: string\n      type: object\n    RestaurantTempOffline:\n      additionalProperties: false\n      properties:\n        categories:\n          description: List of current temp offline categories\n          items:\n            type: string\n          nullable: true\n          type: array\n        type:\n          description: Temp offline type\n          enum:\n            - CancellationOutsideWindow\n            - Unset\n            - TempOffline\n            - ClosedToday\n            - ClosedDueTo\n            - OnVacationOpens\n            - OnVacationClosed\n            - None\n            - ClosedDueToEvent\n            - ClosedDueToEmergency\n            - FailedJctConnection\n            - NoTrOverride\n            - IgnoredOrders\n            - ClosedByTempOfflineTool\n          nullable: true\n          type: string\n      type: object\n    RestaurantUpdateResponse:\n      additionalProperties: false\n      properties:\n        optimizelyData:\n          description: Details of current Optimizely data file and location\n          nullable: true\n          oneOf:\n            - $ref: \"#/components/schemas/OptimizelyData\"\n        ordersData:\n          description: Data containing all changed orders for a restaurant since last call\n          nullable: true\n          oneOf:\n            - $ref: \"#/components/schemas/OrdersData\"\n      type: object\n    ReverseGeocodingResponse:\n      description: Best guess address for passed lat-long\n      example:\n        geometry:\n          coordinates:\n            - -0.01938\n            - 51.10234\n          type: Point\n        properties:\n          address:\n            - Flat 3\n            - Greystoke House\n            - 127 High Street\n            - Chelmsford\n            - Essex\n            - CM1 4QQ\n        type: Feature\n      properties:\n        geometry:\n          description: Geometry information for consumers location\n          properties:\n            coordinates:\n              description: longitude and latitude\n              items:\n                format: double\n                type: number\n              maxItems: 2\n              minItems: 2\n              type: array\n            type:\n              description: type of primitive\n              type: string\n          type: object\n        properties:\n          description: feature metadata\n          properties:\n            address:\n              description: list of address chunks\n              items:\n                type: string\n              type: array\n          type: object\n        type:\n          description: type of primitive\n          type: string\n      type: object\n    ReviewComment:\n      additionalProperties: false\n      description: Details for a review comment\n      example:\n        comment: Yum!\n        processed: true\n        showText: false\n      properties:\n        comment:\n          description: Comment left by customer/restaurant\n          nullable: true\n          type: string\n        processed:\n          description: Will be false until processed by an agent/automation\n          type: boolean\n        showText:\n          description: Text for the review comment will be hidden until it has been passed as OK. E.g. ensuring it doesn't contains swear words\n          type: boolean\n      type: object\n    ReviewManagementData:\n      additionalProperties: false\n      description: A customer review for an order\n      example:\n        customerCity: London\n        customerComment:\n          comment: Very tasty!\n          processed: true\n          showText: true\n        customerDisplayName: John\n        customerEmail: example@example.com\n        hideFromSite: false\n        orderDate: 2021-05-14T12:00:00.000Z\n        orderNumber: \"1234\"\n        processed: true\n        ratings:\n          delivery: 6\n          quality: 6\n          service: 6\n        restaurantComment:\n          comment: Thank you :-)\n          processed: true\n          showText: true\n        restaurantId: \"1234\"\n        restaurantName: Tasty Snacks\n        reviewDate: 2021-05-14T17:00:00.000Z\n        reviewId: abc1234\n        tenant: uk\n      properties:\n        customerCity:\n          description: The customers city\n          nullable: true\n          type: string\n        customerComment:\n          $ref: \"#/components/schemas/ReviewComment\"\n        customerDisplayName:\n          description: Customer name shown on the public site. Forename only to avoid disclosing PII\n          nullable: true\n          type: string\n        customerEmail:\n          description: The customers email\n          format: email\n          nullable: true\n          type: string\n        hideFromSite:\n          description: This review is suspect (e.g. a restaurant self-reviewing) so don't display it on the public site\n          type: boolean\n        orderDate:\n          description: When order was placed\n          format: date-time\n          type: string\n        orderNumber:\n          description: The user friendly order number\n          type: string\n        processed:\n          description: Flag used to indicate that this review has passed through the validation process.\n          type: boolean\n        ratings:\n          $ref: \"#/components/schemas/ReviewScores\"\n        restaurantComment:\n          $ref: \"#/components/schemas/ReviewComment\"\n        restaurantId:\n          description: The restaurant partner Id\n          type: string\n        restaurantName:\n          description: The display name for the restaurant\n          nullable: true\n          type: string\n        reviewDate:\n          description: When the review was submitted\n          format: date-time\n          type: string\n        reviewId:\n          description: Identifier for ratings - will be equivalent to `RatingCode`\n          nullable: true\n          type: string\n        tenant:\n          description: A valid country code, e.g. \"uk\"\n          nullable: true\n          type: string\n      type: object\n    ReviewManagementPagedList:\n      additionalProperties: false\n      description: Represents a page of reviews plus data about the overall result set. E.g. total number of results for the search.\n      example:\n        paging:\n          total: 555\n        reviews:\n          - customerCity: London\n            customerComment:\n              comment: Very tasty!\n              processed: true\n              showText: true\n            customerDisplayName: John\n            customerEmail: example@example.com\n            hideFromSite: false\n            orderDate: 2021-05-14T12:00:00.000Z\n            orderNumber: \"1234\"\n            processed: true\n            ratings:\n              delivery: 6\n              quality: 6\n              service: 6\n            restaurantComment:\n              comment: Thank you :-)\n              processed: true\n              showText: true\n            restaurantId: \"1234\"\n            restaurantName: Tasty Snacks\n            reviewDate: 2021-05-14T17:00:00.000Z\n            reviewId: abc1234\n            tenant: uk\n      properties:\n        paging:\n          $ref: \"#/components/schemas/ReviewManagementPaging\"\n        reviews:\n          description: The current page of reviews\n          items:\n            $ref: \"#/components/schemas/ReviewManagementData\"\n          nullable: true\n          type: array\n      type: object\n    ReviewManagementPaging:\n      additionalProperties: false\n      description: Meta data for a set of reviews\n      example:\n        total: 77\n      properties:\n        total:\n          description: The total number of reviews for the current search\n          format: int32\n          type: integer\n      type: object\n    ReviewScores:\n      additionalProperties: false\n      description: The star ratings given by a customer\n      example:\n        delivery: 4\n        quality: 2\n        service: 3\n      properties:\n        delivery:\n          description: The delivery rating\n          format: int32\n          type: integer\n        quality:\n          description: The food quality rating\n          format: int32\n          type: integer\n        service:\n          description: The restaurant service rating\n          format: int32\n          type: integer\n      type: object\n    RichMediaImageBatchResponse:\n      example:\n        batchStatus: PartiallySucceeded\n        images:\n          - imageContext:\n              dishKey: pizza\n              restaurantKey: burgers\u0026pizza\n              tenant: uk\n            imageStatus: Succeeded\n            sourceImageUrl: https://test.test/image01.jpg\n            urlTemplate: https://cloudinary.test/image/upload/c_fill,q_auto,{transformations}/v1/uk/dishes/burgers_pizza/image01\n          - failureReason: Source image exeeds maximum size of 10 MB.\n            imageContext:\n              dishKey: burger\n              restaurantKey: burgers\u0026pizza\n              tenant: uk\n            imageStatus: Failed\n            sourceImageUrl: https://test.test/image02.jpg\n      nullable: false\n      properties:\n        batchStatus:\n          description: The status of batch request\n          enum:\n            - Queued\n            - Running\n            - Succeeded\n            - PartiallySucceeded\n            - Failed\n            - Cancelled\n          format: enum\n          type: string\n        images:\n          description: The array of images in the batch\n          items:\n            properties:\n              failureReason:\n                description: Can contain additional information about image publishing failure\n                type: string\n              imageContext:\n                additionalProperties:\n                  type: string\n                description: Image context in dictionary format. Can contain additional data that will be published alongside the image.\n                type: object\n              imageStatus:\n                description: The status of individual image\n                enum:\n                  - Succeeded\n                  - Failed\n                format: enum\n                type: string\n              sourceImageUrl:\n                description: Source image URL. The remote HTTP or HTTPS URL address of an existing image or a private S3 object URL in a whitelisted bucket.\n                type: string\n              urlTemplate:\n                description: Image URL template that can be used to access the image. Mandatory transformations are already baked in the URL template. The {transformations} placeholder can be replaced with additional Cloudinary transformations that suit your need (e.g. height, width etc). For more details see https://cloudinary.com/documentation/image_transformations\n                type: string\n            required:\n              - sourceImageUrl\n              - imageContext\n              - imageStatus\n            type: object\n          maxItems: 500\n          type: array\n      required:\n        - batchStatus\n      type: object\n    RichMediaImagePublishRequest:\n      example:\n        imageType: DishImage\n        images:\n          - imageContext:\n              dishKey: pizza\n              restaurantKey: burgers\u0026pizza\n              tenant: uk\n            sourceImageUrl: https://test.test/image01.jpg\n          - imageContext:\n              dishKey: burger\n              restaurantKey: burgers\u0026pizza\n              tenant: uk\n            sourceImageUrl: https://test.test/image02.jpg\n      nullable: false\n      properties:\n        imageType:\n          description: Image type of published images. Must match an image type defined in the metadata for your client.\n          type: string\n        images:\n          description: The array of images to publish.\n          items:\n            properties:\n              imageContext:\n                additionalProperties:\n                  type: string\n                description: Image context in dictionary format. Can contain additional data that will be published alongside the image.\n                type: object\n              sourceImageUrl:\n                description: Source image URL. The remote HTTP or HTTPS URL address of an existing image or a private S3 object URL in a whitelisted bucket.\n                type: string\n            type: object\n          maxItems: 500\n          minItems: 1\n          type: array\n      required:\n        - imageType\n        - images\n      type: object\n    SearchByConsumerResponse:\n      properties:\n        cards:\n          items:\n            properties:\n              amount:\n                format: int32\n                type: integer\n              pan:\n                type: string\n            type: object\n          type: array\n      type: object\n    SearchByPanResponse:\n      properties:\n        amount:\n          format: int32\n          type: integer\n        pan:\n          type: string\n        redemptionHistory:\n          items:\n            properties:\n              consumerId:\n                type: string\n              redeemedOn:\n                format: date-time\n                type: string\n              status:\n                enum:\n                  - Redeemed\n                  - Failed\n                type: string\n              statusDetails:\n                type: string\n              transactionId:\n                type: string\n            type: object\n          type: array\n      type: object\n    SearchResponse:\n      example:\n        Area: Fleet Street\n        CuisineSets:\n          - Cuisines:\n              - Name: Pizza\n                SeoName: pizza\n            Id: user_and_local_cuisines\n            Name: \"\"\n            Type: area_cuisines\n        Dishes: []\n        MetaData:\n          Area: Fleet Street\n          CanonicalName: ec4-fleetstreet\n          CuisineDetails:\n            - Name: Danish\n              SeoName: danish\n              Total: 171\n          District: EC4\n          Latitude: 0\n          Longitude: 0\n          Postcode: EC4\n          ResultCount: 1\n          SearchedTerms: null\n          TagDetails:\n            - BackgroundColour: \"#E6F6C5\"\n              Colour: \"#04822C\"\n              DisplayName: Tried and Tasted\n              Key: tried-and-tasted\n              Priority: 300\n        RestaurantSets: []\n        Restaurants:\n          - Address:\n              City: London\n              FirstLine: London\n              Latitude: 51.516454\n              Longitude: -0.103137\n              Postcode: EC4M 7RF\n            Badges: []\n            BrandName: \"\"\n            City: London\n            CollectionMenuId: null\n            CuisineTypes:\n              - Id: 2\n                IsTopCuisine: false\n                Name: English\n                SeoName: english\n            Cuisines:\n              - Name: English\n                SeoName: english\n            Deals:\n              - Description: 20% off when you spend £20\n                DiscountPercent: 20\n                OfferType: Percent\n                QualifyingPrice: 20\n            DefaultDisplayRank: 0\n            DeliveryChargeBands: []\n            DeliveryCost: 0.12\n            DeliveryEtaMinutes:\n              Approximate: null\n              RangeLower: 10\n              RangeUpper: 25\n            DeliveryMenuId: 224651\n            DeliveryOpeningTime: 2019-11-18T01:00:00Z\n            DeliveryOpeningTimeLocal: 2019-11-18T01:00:00\n            DeliveryOpeningTimeUtc: null\n            DeliveryStartTime: 2019-11-18T01:00:00Z\n            DeliveryTime: null\n            DeliveryTimeMinutes: null\n            DeliveryWorkingTimeMinutes: 10\n            DeliveryZipcode: null\n            Description: \"\"\n            DriveDistance: 0\n            DriveInfoCalculated: true\n            HygieneRating: null\n            Id: 102215\n            IsBrand: false\n            IsCloseBy: true\n            IsCollection: false\n            IsDelivery: true\n            IsFreeDelivery: false\n            IsHalal: false\n            IsNew: false\n            IsOpenNow: true\n            IsOpenNowForCollection: false\n            IsOpenNowForDelivery: true\n            IsOpenNowForPreorder: false\n            IsPremier: false\n            IsSponsored: false\n            IsTemporarilyOffline: false\n            IsTemporaryBoost: false\n            IsTestRestaurant: false\n            LastUpdated: 2019-09-10T10:55:58.199397\n            Latitude: 0\n            Logo:\n              - StandardResolutionURL: http://d30v2pzvrfyzpo.cloudfront.net/uk/images/restaurants/102215.gif\n            LogoUrl: http://d30v2pzvrfyzpo.cloudfront.net/uk/images/restaurants/102215.gif\n            Longitude: 0\n            MinimumDeliveryValue: 0\n            Name: TEST_DP_1\n            NewnessDate: 2017-05-02T14:30:21\n            NumberOfRatings: 0\n            OfferPercent: 0\n            Offers:\n              - Amount: 20\n                MaxQualifyingValue: 50\n                OfferId: \"136149\"\n                QualifyingValue: 20\n                Type: Percent\n            OpeningTime: 2019-11-19T01:00:00Z\n            OpeningTimeIso: 2019-11-19T01:00:00\n            OpeningTimeLocal: 2019-11-19T01:00:00\n            OpeningTimeUtc: null\n            OpeningTimes: []\n            Postcode: EC4M 7RF\n            Rating:\n              Average: 0\n              Count: 0\n              StarRating: 0\n            RatingAverage: 0\n            RatingStars: 0\n            ReasonWhyTemporarilyOffline: \"\"\n            Score: 502\n            ScoreMetaData:\n              - Key: Distance\n                Value: \"0\"\n              - Key: SetName\n                Value: Default\n            SecondDateRank: 0\n            SecondDateRanking: 0\n            SendsOnItsWayNotifications: false\n            ServiceableAreas: []\n            ShowSmiley: false\n            SmileyDate: null\n            SmileyElite: false\n            SmileyResult: null\n            SmileyUrl: null\n            SponsoredPosition: 0\n            Tags: []\n            UniqueName: test_dp-london-london\n            Url: https://www.just-eat.co.uk/restaurants-test_dp-london-london\n        ShortResultText: EC4\n        Views: []\n        deliveryFees:\n          restaurants:\n            \"102215\":\n              bands:\n                - fee: 100\n                  minimumAmount: 0\n              minimumOrderValue: 0\n              restaurantId: \"102215\"\n        promotedPlacement:\n          filteredSearchPromotedLimit: 5\n          rankedIds:\n            - 84335\n          restaurants:\n            \"84335\":\n              defaultPromoted: true\n              restaurantId: \"84335\"\n      properties:\n        CuisineSets:\n          items:\n            properties:\n              Cuisines:\n                items:\n                  properties:\n                    Name:\n                      type: string\n                    SeoName:\n                      type: string\n                  type: object\n                type: array\n              Id:\n                type: string\n              Name:\n                type: string\n              Type:\n                type: string\n            type: object\n          type: array\n        Dishes:\n          items:\n            properties:\n              Best:\n                items:\n                  properties:\n                    FullName:\n                      description: The full name of the product\n                      type: string\n                    Price:\n                      description: The price of the product\n                      type: number\n                    ProductId:\n                      description: Deprecated field no longer populated, but retained for backwards compatibility with clients\n                      type: number\n                    StrProductId:\n                      description: The id of the product\n                      type: string\n                  type: object\n                type: array\n              RestaurantId:\n                type: number\n              Similar:\n                items:\n                  properties:\n                    FullName:\n                      type: string\n                    Price:\n                      type: number\n                    ProductId:\n                      type: number\n                  type: object\n                type: array\n            type: object\n          type: array\n        MetaData:\n          properties:\n            Area:\n              type: string\n            CanonicalName:\n              type: string\n            CuisineDetails:\n              items:\n                properties:\n                  Name:\n                    type: string\n                  SeoName:\n                    type: string\n                  Total:\n                    type: number\n                type: object\n              type: array\n            District:\n              type: string\n            Latitude:\n              description: The latitude of the search location\n              type: number\n            Longitude:\n              description: The longitude of the search location\n              type: number\n            Postcode:\n              type: string\n            ResultCount:\n              type: number\n            SearchedTerms:\n              nullable: true\n              type: object\n            TagDetails:\n              items:\n                properties:\n                  BackgroundColour:\n                    type: string\n                  Colour:\n                    type: string\n                  DisplayName:\n                    type: string\n                  Key:\n                    type: string\n                  Priority:\n                    type: number\n                type: object\n              type: array\n          type: object\n        RestaurantSets:\n          items:\n            properties:\n              Id:\n                type: string\n              Name:\n                type: string\n              Restaurants:\n                items:\n                  properties:\n                    Id:\n                      type: number\n                    Metadata:\n                      items:\n                        properties:\n                          Key:\n                            type: string\n                          Value:\n                            type: string\n                        type: object\n                      type: array\n                  type: object\n                type: array\n              Type:\n                type: string\n            type: object\n          type: array\n        Restaurants:\n          items:\n            $ref: \"#/components/schemas/SearchRestaurant\"\n          type: array\n        ShortResultText:\n          type: string\n        Views:\n          items:\n            properties:\n              Components:\n                properties:\n                  Id:\n                    type: string\n                  TemplateName:\n                    type: string\n                  TrackingId:\n                    type: string\n                  Type:\n                    type: string\n                  ViewData:\n                    type: object\n                type: object\n              Target:\n                type: string\n            type: object\n          type: array\n        area:\n          type: string\n        deliveryFees:\n          description: Information related to delivery fees.\n          properties:\n            restaurants:\n              additionalProperties:\n                $ref: \"#/components/schemas/RestaurantDeliveryFees\"\n              description: Dictionary of `restaurantIds` to delivery fees.\n              type: object\n          type: object\n        promotedPlacement:\n          description: Information related to promoted placement restaurants.\n          properties:\n            filteredSearchPromotedLimit:\n              description: How many restaurants to promote when search is filtered\n              type: number\n            rankedIds:\n              description: Restaurants that can be promoted, in preferred order\n              items:\n                type: number\n              type: array\n            restaurants:\n              additionalProperties:\n                $ref: \"#/components/schemas/RestaurantPromotedPlacementInfo\"\n              description: Dictionary of `restaurantIds` to promoted placement info.\n              type: object\n          type: object\n      type: object\n    SearchRestaurant:\n      properties:\n        Address:\n          properties:\n            City:\n              type: string\n            FirstLine:\n              type: string\n            Latitude:\n              type: number\n            Longitude:\n              type: number\n            Postcode:\n              type: string\n          type: object\n        Badges:\n          items:\n            type: object\n          type: array\n        BrandName:\n          type: string\n        City:\n          type: string\n        CollectionMenuId:\n          nullable: true\n          type: number\n        CuisineTypes:\n          items:\n            properties:\n              Id:\n                type: number\n              IsTopCuisine:\n                type: boolean\n            type: object\n          type: array\n        Cuisines:\n          items:\n            properties:\n              Name:\n                type: string\n              SeoName:\n                type: string\n            type: object\n          type: array\n        Deals:\n          items:\n            properties:\n              Description:\n                type: string\n              DiscountPercent:\n                type: number\n              OfferType:\n                type: string\n              QualifyingPrice:\n                type: number\n            type: object\n          type: array\n        DefaultDisplayRank:\n          type: number\n        DeliveryChargeBands:\n          items:\n            properties:\n              BasketThresholdPrice:\n                type: number\n              DeliveryChargeBelowThreshold:\n                type: number\n            type: object\n          type: array\n        DeliveryCost:\n          type: number\n        DeliveryEtaMinutes:\n          properties:\n            Approximate:\n              nullable: true\n              type: number\n            RangeLower:\n              type: number\n            RangeUpper:\n              type: number\n          type: object\n        DeliveryMenuId:\n          type: number\n        DeliveryOpeningTime:\n          format: date-time\n          type: string\n        DeliveryOpeningTimeLocal:\n          $ref: \"#/components/schemas/local-date-time\"\n        DeliveryOpeningTimeUtc:\n          format: date-time\n          nullable: true\n          type: string\n        DeliveryStartTime:\n          format: date-time\n          type: string\n        DeliveryTime:\n          nullable: true\n          type: number\n        DeliveryTimeMinutes:\n          nullable: true\n          type: number\n        DeliveryWorkingTimeMinutes:\n          type: number\n        DeliveryZipcode:\n          nullable: true\n          type: string\n        Description:\n          type: string\n        DriveDistance:\n          type: number\n        DriveInfoCalculated:\n          type: boolean\n        HygieneRating:\n          nullable: true\n          type: number\n        Id:\n          type: number\n        IsBrand:\n          type: boolean\n        IsCloseBy:\n          type: boolean\n        IsCollection:\n          type: boolean\n        IsDelivery:\n          type: boolean\n        IsFreeDelivery:\n          type: boolean\n        IsHalal:\n          type: boolean\n        IsNew:\n          type: boolean\n        IsOpenNow:\n          type: boolean\n        IsOpenNowForCollection:\n          type: boolean\n        IsOpenNowForDelivery:\n          type: boolean\n        IsOpenNowForPreorder:\n          type: boolean\n        IsPremier:\n          type: boolean\n        IsSponsored:\n          type: boolean\n        IsTemporarilyOffline:\n          type: boolean\n        IsTemporaryBoost:\n          type: boolean\n        IsTestRestaurant:\n          type: boolean\n        LastUpdated:\n          $ref: \"#/components/schemas/local-date-time\"\n        Latitude:\n          type: number\n        Logo:\n          items:\n            properties:\n              StandardResolutionURL:\n                type: string\n            type: object\n          type: array\n        LogoUrl:\n          type: string\n        Longitude:\n          type: number\n        MinimumDeliveryValue:\n          type: number\n        Name:\n          type: string\n        NewnessDate:\n          $ref: \"#/components/schemas/local-date-time\"\n        NumberOfRatings:\n          type: number\n        OfferPercent:\n          type: number\n        Offers:\n          items:\n            additionalProperties: true\n            type: object\n          type: array\n        OpeningTime:\n          format: date-time\n          type: string\n        OpeningTimeIso:\n          $ref: \"#/components/schemas/local-date-time\"\n        OpeningTimeLocal:\n          $ref: \"#/components/schemas/local-date-time\"\n        OpeningTimeUtc:\n          format: date-time\n          nullable: true\n          type: string\n        OpeningTimes:\n          items:\n            type: object\n          type: array\n        Postcode:\n          type: string\n        Rating:\n          properties:\n            Average:\n              type: number\n            Count:\n              type: number\n            StarRating:\n              type: number\n          type: object\n        RatingAverage:\n          type: number\n        RatingStars:\n          type: number\n        ReasonWhyTemporarilyOffline:\n          type: string\n        Score:\n          type: number\n        ScoreMetaData:\n          items:\n            properties:\n              Key:\n                type: string\n              Value:\n                type: string\n            type: object\n          type: array\n        SecondDateRank:\n          type: number\n        SecondDateRanking:\n          type: number\n        SendsOnItsWayNotifications:\n          type: boolean\n        ServiceableAreas:\n          items:\n            type: object\n          type: array\n        ShowSmiley:\n          type: boolean\n        SmileyDate:\n          nullable: true\n          type: object\n        SmileyElite:\n          type: boolean\n        SmileyResult:\n          nullable: true\n          type: object\n        SmileyUrl:\n          nullable: true\n          type: object\n        SponsoredPosition:\n          type: number\n        Tags:\n          items:\n            type: string\n          type: array\n        UniqueName:\n          type: string\n        Url:\n          type: string\n      type: object\n    SearchWebResponse:\n      properties:\n        Closed:\n          items:\n            $ref: \"#/components/schemas/SearchRestaurant\"\n          type: array\n        Offline:\n          items:\n            $ref: \"#/components/schemas/SearchRestaurant\"\n          type: array\n        Open:\n          items:\n            $ref: \"#/components/schemas/SearchRestaurant\"\n          type: array\n      type: object\n    SecretsResponse:\n      additionalProperties: false\n      properties:\n        secrets:\n          additionalProperties:\n            additionalProperties:\n              description: Secret value\n              type: string\n            description: Key of a single secret\n            type: object\n          description: Dictionary of secrets providers available\n          nullable: true\n          type: object\n      type: object\n    SendSmsRequest:\n      additionalProperties: false\n      properties:\n        message:\n          description: Message to send\n          nullable: true\n          type: string\n      type: object\n    SendSmsResponse:\n      additionalProperties: false\n      properties:\n        mobileNumberUsed:\n          description: Mobile number to which message were sent\n          nullable: true\n          type: string\n      type: object\n    ServiceTimes:\n      example:\n        desiredServiceTimes:\n          friday:\n            collection:\n              - end: 14:00:00\n                start: 12:00:00\n              - end: 23:00:00\n                start: 17:00:00\n            delivery:\n              - end: 13:30:00\n                start: 12:00:00\n              - end: 00:00:00\n                start: 18:00:00\n          monday:\n            collection:\n              - end: 14:00:00\n                start: 12:00:00\n              - end: 23:00:00\n                start: 17:00:00\n            delivery:\n              - end: 13:30:00\n                start: 12:00:00\n              - end: 00:00:00\n                start: 18:00:00\n          saturday:\n            collection:\n              - end: 23:00:00\n                start: 12:00:00\n            delivery:\n              - end: 00:00:00\n                start: 12:00:00\n          sunday:\n            collection:\n              - end: 23:00:00\n                start: 12:00:00\n            delivery:\n              - end: 00:00:00\n                start: 12:00:00\n          thursday:\n            collection:\n              - end: 14:00:00\n                start: 12:00:00\n              - end: 23:00:00\n                start: 17:00:00\n            delivery:\n              - end: 13:30:00\n                start: 12:00:00\n              - end: 00:00:00\n                start: 18:00:00\n          tuesday:\n            collection:\n              - end: 14:00:00\n                start: 12:00:00\n              - end: 23:00:00\n                start: 17:00:00\n            delivery:\n              - end: 13:30:00\n                start: 12:00:00\n              - end: 00:00:00\n                start: 18:00:00\n          wednesday:\n            collection:\n              - end: 14:00:00\n                start: 12:00:00\n              - end: 23:00:00\n                start: 17:00:00\n            delivery:\n              - end: 13:30:00\n                start: 12:00:00\n              - end: 00:00:00\n                start: 18:00:00\n      properties:\n        serviceTimes:\n          allOf:\n            - $ref: \"#/components/schemas/ServiceTimesDays\"\n          description: The desired times at which a restaurant is in service\n          type: object\n      type: object\n    ServiceTimesCollection:\n      items:\n        properties:\n          end:\n            description: Local end time of the slot in hh:mm:ss format. The end time occurs on the next day if less than or equal to the start time. Times are in the restaurant's time zone which can be obtained by converting `location.geoPosition` value from [the restaurant's details](#operation/GetRestaurantDetails) using a lookup API such as `timezonedb.com`.\n            pattern: ^([0-1]\\d|2[0-3]):[0-5]\\d$:[0-5]\\d$\n            type: string\n          start:\n            description: Start time of the slot in hh:mm:ss format. Times are in the restaurant's time zone which can be obtained by converting `location.geoPosition` value from [the restaurant's details](#operation/GetRestaurantDetails) using a lookup API such as `timezonedb.com`.\n            pattern: ^([0-1]\\d|2[0-3]):[0-5]\\d$:[0-5]\\d$\n            type: string\n        type: object\n      type: array\n    ServiceTimesDays:\n      description: The desired times at which a restaurant is in service\n      properties:\n        friday:\n          allOf:\n            - $ref: \"#/components/schemas/ServiceTimesServices\"\n          description: Service times for Fridays\n        monday:\n          allOf:\n            - $ref: \"#/components/schemas/ServiceTimesServices\"\n          description: Service times for Mondays\n        saturday:\n          allOf:\n            - $ref: \"#/components/schemas/ServiceTimesServices\"\n          description: Service times for Saturdays\n        sunday:\n          allOf:\n            - $ref: \"#/components/schemas/ServiceTimesServices\"\n          description: Service times for Sundays\n        thursday:\n          allOf:\n            - $ref: \"#/components/schemas/ServiceTimesServices\"\n          description: Service times for Thursdays\n        tuesday:\n          allOf:\n            - $ref: \"#/components/schemas/ServiceTimesServices\"\n          description: Service times for Tuesdays\n        wednesday:\n          allOf:\n            - $ref: \"#/components/schemas/ServiceTimesServices\"\n          description: Service times for Wednesdays\n      type: object\n    ServiceTimesServices:\n      properties:\n        collection:\n          $ref: \"#/components/schemas/ServiceTimesCollection\"\n          description: The times at which customers can collect from the restaurant\n          type: object\n        delivery:\n          $ref: \"#/components/schemas/ServiceTimesCollection\"\n          description: The times at which the restaurant can provide delivery\n          type: object\n      type: object\n    ServiceType:\n      description: \"\"\n      enum:\n        - 1\n        - 2\n      type: integer\n      x-enumNames:\n        - Collection\n        - Delivery\n    ServiceTypeFeeConfiguration:\n      description: Distinct values which are configured for a particular service type\n      example:\n        amount: 5\n      properties:\n        amount:\n          description: The value to apply to the basket for this Fee in the smallest unit of currency\n          format: integer\n          type: number\n      type: object\n    SetPaymentModeRequest:\n      additionalProperties: false\n      properties:\n        paymentMode:\n          description: New payment mode\n          enum:\n            - CardOnly\n            - CardAndCash\n          nullable: true\n          type: string\n      type: object\n    SetProductsOfflineRequest:\n      properties:\n        NextAvailableAt:\n          description: The time when products should be brought back online. This may be delayed by up to 5 minutes. There is no upper time limit.\n          format: date-time\n          type: string\n        ProductIds:\n          description: Product ids to set offline.\n          items:\n            type: string\n          type: array\n        RequestedBy:\n          description: Consists of information about who requested changes.\n          type: string\n      required:\n        - ProductIds\n        - RequestedBy\n        - NextAvailableAt\n      type: object\n    SetProductsOnlineRequest:\n      properties:\n        ProductIds:\n          description: Product IDs to set online.\n          items:\n            type: string\n          type: array\n        RequestedBy:\n          description: Consists of information about who requested changes.\n          type: string\n      required:\n        - ProductIds\n        - RequestedBy\n      type: object\n    SettingsFlexStates:\n      properties:\n        averageAssignableJobLoad:\n          description: Average assignable Job load for given state type\n          format: double\n          nullable: true\n          type: number\n        flexStateType:\n          $ref: \"#/components/schemas/FlexStateType\"\n          description: Flex State Type Options\n        triggerUsage:\n          description: Usage percentage for given state type\n          format: double\n          type: number\n      type: object\n    SetupOrderpadRequest:\n      additionalProperties: false\n      properties:\n        phoneNumber:\n          description: Callback phone number\n          nullable: true\n          type: string\n        postCode:\n          description: Set up postcode\n          nullable: true\n          type: string\n        setupType:\n          $ref: \"#/components/schemas/OrderpadSetupType\"\n          description: Orderpad set up type\n      type: object\n    Shift:\n      description: The shift object associated with a courier on a courier sync payload update.\n      properties:\n        deliveryZoneId:\n          description: Delivery zone id the shift was created for.\n          example: 53c3afb5-fcs5-4941-be6d-2179f812sc8d\n          type: string\n        endDate:\n          description: Timestamp for when the shift was ended.\n          format: integer\n          type: number\n        id:\n          description: Shift identifier.\n          example: 53c3afb5-fcs5-4941-be6d-2179f812sc8d\n          type: string\n        shiftType:\n          $ref: \"#/components/schemas/ShiftType\"\n          description: Type of shift the courier is on\n        startDate:\n          description: Timestamp for when the shift was started.\n          format: integer\n          type: number\n        vehicle:\n          $ref: \"#/components/schemas/Vehicle\"\n          description: Type of vehicle on shift\n      type: object\n    ShiftType:\n      description: The types of shifts available for the couriers.\n      enum:\n        - REGULAR\n        - ON_CALL\n        - OVERFLOW\n        - ALCOHOL_ELIGIBLE\n        - UNKNOWN\n      type: string\n    SkipMenuEditorGatewayRequest:\n      description: GraphQL request\n      properties:\n        query:\n          description: GraphQL statement\n          type: string\n        variables:\n          description: variables used in query\n          type: object\n      type: object\n    SkipMenuEditorGatewayResponse:\n      description: GraphQL response\n      properties:\n        data:\n          description: GraphQL data response\n          type: object\n        errors:\n          description: GraphQL errors response\n          items:\n            type: object\n          type: array\n      type: object\n    Storage:\n      example:\n        stgInstruction: Example\n      properties:\n        stgInstruction:\n          description: Storage/Usage instructions\n          nullable: true\n          type: string\n      type: object\n    SupportRequest:\n      description: Object that represents support request\n      properties:\n        id:\n          description: The Id of the request\n          type: string\n        status:\n          description: Request status\n          enum:\n            - new\n            - open\n            - closed\n            - pending\n            - solved\n            - hold\n            - deleted\n        subject:\n          description: Request subject\n          type: string\n        submittedDate:\n          description: Request placed date\n          format: date-time\n          type: string\n      type: object\n    SupportRequestType:\n      description: Object that represents type/sub-type of request\n      properties:\n        name:\n          description: Human readable name\n          type: string\n        subTypes:\n          description: Possible sub-types of request\n          items:\n            $ref: \"#/components/schemas/SupportRequestType\"\n          type: array\n        value:\n          description: Type value which will be used for Zendesk ticket as a tag\n          type: string\n      type: object\n    SyncFlexStateType:\n      description: \u003cp\u003eThe flex state type changes according to the exponential moving average and is used as a reference to bring more couriers to suffice the demand in a given delivery zone.\u003c/p\u003e \u003cp\u003eIf the flex state type is \"Off\", it means no shifts will be offered for the delivery zone.\u003c/p\u003e \u003cp\u003eIf the state is \"CLOSED\", only scheduled shifts will be allowed for the delivery zone.\u003c/p\u003e \u003cp\u003eIf the state is \"SEEKING\", the shift offers are going to be made across the courier network in order to suffice the current demand.\u003c/p\u003e \u003cp\u003eIf the state is \"OPEN\", it means demand is high and couriers from all over the courier network are allowed to create shifts for themselves to suffice the current demand.\u003c/p\u003e \u003cp\u003eIf the state is \"CODE_RED\", it means not only can everyone create shifts for themselves for the delivery zone but also couriers from other delivery zones might reallocate to help suffice the demand of that particular delivery zone.\u003c/p\u003e\n      enum:\n        - CODE_RED\n        - OPEN\n        - SEEKING\n        - CLOSED\n      type: string\n    SyncPaymentType:\n      description: The order payment status.\n      enum:\n        - PAID\n        - UNPAID\n      type: string\n    TakeOfflineRequest:\n      additionalProperties: false\n      properties:\n        comment:\n          description: Any additional information\n          nullable: true\n          type: string\n        tempOfflineType:\n          description: Identifier of the reason for taking the restaurant offline\n          enum:\n            - TempOffline\n            - ClosedToday\n          nullable: true\n          type: string\n      type: object\n    TakeProductOffTheMenuCommand:\n      additionalProperties: false\n      properties:\n        createdBy:\n          description: Application which requested operation e.g. Orderpad, RestaurantApp\n          nullable: true\n          type: string\n        productIds:\n          description: List of product Ids to be taken offline\n          items:\n            type: string\n          nullable: true\n          type: array\n        requestedAt:\n          description: Request date and time in ISO 8601 format\n          format: date-time\n          nullable: true\n          type: string\n      type: object\n    Takeaway400ErrorResponse:\n      description: A HTTP 400 error response\n      properties:\n        description:\n          description: A description of the error.\n          type: string\n        errorCode:\n          description: A value that helps identify this response back to logs, so we can easily find this specific fault.\n          type: string\n        validationErrors:\n          additionalProperties:\n            description: Field name that contains error.\n            properties:\n              errors:\n                description: Error explanation.\n                items:\n                  type: string\n                type: array\n            type: object\n          description: Validation error messages for each field.\n          type: object\n      type: object\n    Takeaway4XXErrorResponse:\n      description: A HTTP 4xx error response\n      properties:\n        description:\n          description: A description of the error.\n          type: string\n        errorCode:\n          description: A value that helps identify this response back to logs, so we can easily find this specific fault.\n          type: string\n      type: object\n    Takeaway500ErrorResponse:\n      description: A HTTP 500 error response\n      properties:\n        description:\n          description: A description of the error.\n          type: string\n        errorCode:\n          description: A value that helps identify this response back to logs, so we can easily find this specific fault.\n          type: string\n      type: object\n    TextAndActionsStep:\n      allOf:\n        - $ref: \"#/components/schemas/FlowStepBase\"\n        - properties:\n            actions:\n              description: Array of actions (i.e. buttons)\n              items:\n                $ref: \"#/components/schemas/HelpAction\"\n              type: array\n            body:\n              description: Array of paragraphs for body text\n              items:\n                type: string\n              type: array\n            header:\n              description: Display header\n              type: string\n          type: object\n      description: \"'Default' flow step, consisting of text and next-step actions\"\n      type: object\n    Time:\n      example:\n        daysOfTheWeek:\n          - monday\n          - tuesday\n          - wednesday\n          - thursday\n          - friday\n          - saturday\n          - sunday\n        fromDateTime: 11:30:00\n        toDateTime: 14:30:00\n      properties:\n        daysOfTheWeek:\n          description: The days of the week.\n          items:\n            enum:\n              - monday\n              - tuesday\n              - wednesday\n              - thursday\n              - friday\n              - saturday\n              - sunday\n            type: string\n          type: array\n        fromDateTime:\n          description: Time of day the availability begins, in local time, format is ISO 8601 hh:mm:ss\n          type: string\n        toDateTime:\n          description: Time of day the availability begins, in local time, format is ISO 8601 hh:mm:ss\n          type: string\n      type: object\n    TokenRequest:\n      description: The request object for retrieving an access token.\n      example:\n        client_id: example_clientid\n        code: D4DE0039-8193-48A1-BA2D-49E6F0C8ADFF\n        code_verifier: kPjhpIVnKGBq3YvnjLDBo65pi91YI4ReJoRV1WMryJa\n        grant_type: authorization_code\n        redirect_uri: example.com\n      properties:\n        client_id:\n          description: Only required if the client is not authenticating with the same authorisation server.\n          nullable: true\n          type: string\n        code:\n          description: The authorisation code received from the authorisation server.\n          nullable: false\n          type: string\n        code_verifier:\n          description: High-entropy cryptographic random string with a minimum length of 43 characters and a maximum length of 128 characters.\n          nullable: true\n          type: string\n        grant_type:\n          description: OAuth grant type. Value MUST be set to `authorization_code`.\n          nullable: false\n          type: string\n        redirect_uri:\n          description: URI to form the path for a redirect response.\n          nullable: false\n          type: string\n      type: object\n    TokenRequestErrorResponse:\n      description: The error response object for token request endpoint.\n      example:\n        error: invalid_request\n      properties:\n        error:\n          description: \"Error code. Can be one of: `invalid_request`, `invalid_client`, `invalid_grant`, `unauthorized_client`, `unsupported_grant_type`, `invalid_scope`.\"\n          type: string\n      type: object\n    TokenRequestSuccessResponse:\n      description: The success response object for token request endpoint.\n      example:\n        access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\n      properties:\n        access_token:\n          description: The JWT access token.\n          type: string\n      type: object\n    TopUpPromotion:\n      description: The zone profile object for a given delivery zone.\n      properties:\n        currentAcceptanceRate:\n          description: The current order acceptance rate calculated for the courier.\n          example: 9500\n          format: integer\n          type: number\n        requiredAcceptanceRate:\n          description: The required acceptance rate the courier should have to be eligible for top up bonus subsidy.\n          example: 8000\n          format: integer\n          type: number\n        showAcceptanceRate:\n          description: Enables showing the courier acceptance rate when true\n          type: boolean\n      type: object\n    TwiMLResult:\n      properties:\n        data:\n          description: set of special TwiML instructions defined by Twilio that will be executed\n          readOnly: true\n          type: string\n      type: object\n    TwilioDebuggingEventRequest:\n      description: Information about errors and warnings which could occur on Twilio account\n      properties:\n        accountSid:\n          description: Unique identifier of the account that generated the Debugger event\n          example: ACxxxxxxxxxxxxxxxxxxxxxxxx\n          type: string\n        level:\n          description: Severity of the Debugger event. Possible values are Error and Warning\n          example: Error\n          type: string\n        parentAccountSid:\n          description: Unique identifier of the Parent Account. This parameter only exists if the above account is a sub account\n          example: ACxxxxxxxxxxxxxxxxxxxxxxxx\n          type: string\n        payload:\n          description: JSON data specific to the Debugging Event. More details - https://www.twilio.com/docs/usage/troubleshooting/debugging-event-webhooks#payload\n          example: \"{resource_sid: CAxxxx, service_sid: SSxxxx, error_code: 13227 ,webhook: null, more_info: {  Msg : No International Permission. , ErrorCode : 13227 , LogLevel : WARN }}\"\n          type: string\n        payloadType:\n          description: Type of the payload\n          example: application/json\n          type: string\n        sid:\n          description: Unique identifier of the Debugger event\n          example: NOxxxxx\n          type: string\n        timestamp:\n          description: Time of occurrence of the Debugger event\n          example: 2020-01-01T23:28:54.000Z\n          type: string\n      type: object\n    TwilioIncomingMessageCallbackRequest:\n      properties:\n        body:\n          description: The body of the text message being sent\n          type: string\n        from:\n          description: The number of the sender in E.164 format\n          type: string\n      type: object\n    TwilioIncomingVoiceCallbackRequest:\n      properties:\n        digits:\n          description: Any digits the caller has entered on their phone\n          type: string\n        from:\n          description: The number of the caller in E.164 format\n          type: string\n      type: object\n    TwilioInteractionCallbackRequest:\n      properties:\n        inboundParticipantSid:\n          description: The SID of the inbound Participant resource\n          type: string\n        inboundResourceSid:\n          description: The SID of the inbound resource\n          type: string\n        inboundResourceStatus:\n          description: The inbound resource status of the Interaction\n          type: string\n        inboundResourceType:\n          description: The inbound resource type\n          type: string\n        inboundResourceUrl:\n          description: The URL of the Twilio inbound resource\n          type: string\n        interactionAccountSid:\n          description: The SID of the Account that created the Interaction resource\n          type: string\n        interactionData:\n          description: A JSON string that includes the message body of message interactions\n          type: string\n        interactionDateCreated:\n          description: The date and time when the resource was created\n          type: string\n        interactionDateUpdated:\n          description: The date and time when the resource was last updated\n          type: string\n        interactionServiceSid:\n          description: The SID of the parent Service resource\n          type: string\n        interactionSessionSid:\n          description: The SID of the parent Session resource\n          type: string\n        interactionSid:\n          description: The unique string to identify the Interaction resource\n          type: string\n        interactionType:\n          description: The Type of the Interaction\n          type: string\n        outboundParticipantSid:\n          description: The SID of the outbound Participant\n          type: string\n        outboundResourceSid:\n          description: The SID of the outbound resource\n          type: string\n        outboundResourceStatus:\n          description: The outbound resource status of the Interaction\n          type: string\n        outboundResourceType:\n          description: The outbound resource type\n          type: string\n        outboundResourceUrl:\n          description: The URL of the Twilio outbound resource\n          type: string\n      type: object\n    TwilioProxyOutOfSessionCallbackRequest:\n      properties:\n        callSid:\n          description: A unique identifier for the call, generated by Twilio\n          type: string\n        from:\n          description: The number the call or text message is from in E.164 format\n          type: string\n        sessionDateEnded:\n          description: The date and time in which the proxy session ended\n          nullable: true\n          type: string\n        sessionSid:\n          description: A unique identifier for the proxy session, generated by Twilio\n          type: string\n        smsSid:\n          description: A unique identifier for the sms, generated by Twilio\n          type: string\n      type: object\n    UnauthorisedMarketingResponse:\n      allOf:\n        - $ref: \"#/components/schemas/MarketingErrorResponse\"\n        - additionalProperties: false\n          description: 401 Unauthorised Returned\n          type: object\n      example:\n        errors:\n          - description: Unauthorised\n            errorCode: \"401\"\n        faultId: 72d7036d-990a-4f84-9efa-ef5f40f6044b\n        message: Unauthorised\n    UpdateAddedDeal:\n      properties:\n        Date:\n          description: \"`YYYY-MM-DDThh:mm:ssZ (UTC)`\"\n          type: string\n        DealGroups:\n          items:\n            $ref: \"#/components/schemas/UpdateDealGroup\"\n          type: array\n        ProductId:\n          type: string\n        Quantity:\n          format: integer\n          type: number\n      type: object\n    UpdateAddedProduct:\n      properties:\n        Date:\n          description: \"`YYYY-MM-DDThh:mm:ssZ (UTC)`\"\n          type: string\n        ModifierGroups:\n          items:\n            $ref: \"#/components/schemas/UpdateModifierGroup\"\n          nullable: true\n          type: array\n        ProductId:\n          type: string\n        Quantity:\n          format: integer\n          type: number\n        RemovedIngredients:\n          items:\n            $ref: \"#/components/schemas/UpdateRemovedIngredient\"\n          nullable: true\n          type: array\n      type: object\n    UpdateDeal:\n      properties:\n        Added:\n          items:\n            $ref: \"#/components/schemas/UpdateAddedDeal\"\n          nullable: true\n          type: array\n        Removed:\n          items:\n            $ref: \"#/components/schemas/UpdateRemoved\"\n          nullable: true\n          type: array\n        Updated:\n          items:\n            $ref: \"#/components/schemas/UpdateUpdatedDeal\"\n          nullable: true\n          type: array\n      type: object\n    UpdateDealGroup:\n      properties:\n        DealGroupId:\n          type: string\n        Products:\n          items:\n            $ref: \"#/components/schemas/UpdateAddedProduct\"\n          type: array\n      type: object\n    UpdateLocation:\n      properties:\n        GeoLocation:\n          nullable: true\n          properties:\n            Date:\n              type: string\n            Value:\n              allOf:\n                - properties:\n                    Latitude:\n                      format: decimal\n                      type: number\n                    Longitude:\n                      format: decimal\n                      type: number\n                  type: object\n              description: Not available across platform yet, but applied for future proofing.\n          type: object\n        ZipCode:\n          nullable: true\n          properties:\n            Date:\n              type: string\n            Value:\n              type: string\n          type: object\n      type: object\n    UpdateMenuItemRequest:\n      example:\n        Category:\n          Id: \"10\"\n          Name: Lunches\n        Description: Tasty burrito\n        HasAllergens: false\n        Id: \"1\"\n        Labels:\n          - Vegetarian\n        Name: Burrito\n        OptionGroups:\n          - Id: \"14\"\n            Modifiers:\n              - Id: \"5\"\n                Name: Plain\n                Variations:\n                  - AdditionPrice: 0\n                    ModifierGroupId: \"2\"\n                    Selected: true\n                    VariationId: \"3\"\n                    VariationName: Standard\n              - Id: \"6\"\n                Name: Pilau\n                Variations:\n                  - AdditionPrice: 0\n                    ModifierGroupId: \"2\"\n                    Selected: true\n                    VariationId: \"3\"\n                    VariationName: Standard\n            Name: Rice\n        PreferenceGroups:\n          - Id: \"13\"\n            Modifiers:\n              - Id: \"1\"\n                Name: Green\n                Variations:\n                  - AdditionPrice: 0.3\n                    ModifierGroupId: \"2\"\n                    Selected: true\n                    VariationId: \"3\"\n                    VariationName: Standard\n              - Id: \"2\"\n                Name: Medium\n                Variations:\n                  - AdditionPrice: 0.3\n                    ModifierGroupId: \"2\"\n                    Selected: true\n                    VariationId: \"3\"\n                    VariationName: Standard\n              - Id: \"3\"\n                Name: Spicy\n                Variations:\n                  - AdditionPrice: 0.3\n                    ModifierGroupId: \"2\"\n                    Selected: true\n                    VariationId: \"3\"\n                    VariationName: Standard\n            Name: Salsas\n        ReceiptNumber: \"123\"\n        Variations:\n          - Id: \"3\"\n            Name: Standard\n            Price: 6.99\n      properties:\n        Category:\n          $ref: \"#/components/schemas/CategoryRequest\"\n          description: Category\n        Description:\n          description: Description\n          type: string\n        HasAllergens:\n          description: Whether this item has allergens\n          type: boolean\n        Id:\n          description: Id\n          type: string\n        Labels:\n          description: Labels\n          items:\n            type: string\n          type: array\n          uniqueItems: false\n        Name:\n          description: Name\n          type: string\n        OptionGroups:\n          description: Option Groups\n          items:\n            $ref: \"#/components/schemas/UpdateModifierGroupRequest\"\n          maxLength: 100\n          type: array\n          uniqueItems: false\n        PreferenceGroups:\n          description: Preference Groups\n          items:\n            $ref: \"#/components/schemas/UpdateModifierGroupRequest\"\n          maxLength: 100\n          type: array\n          uniqueItems: false\n        ReceiptNumber:\n          description: The receipt or kitchen number\n          type: string\n        Variations:\n          description: Variations\n          items:\n            $ref: \"#/components/schemas/UpdateMenuItemVariationRequest\"\n          maxLength: 75\n          type: array\n          uniqueItems: false\n      type: object\n    UpdateMenuItemVariationRequest:\n      example:\n        Id: \"12\"\n        Name: Extra-mega-large\n        Price: 50\n      properties:\n        Id:\n          description: Id\n          type: string\n        Name:\n          description: Name\n          type: string\n        Price:\n          description: Price\n          format: double\n          type: number\n      type: object\n    UpdateModifier:\n      properties:\n        ModifierId:\n          type: string\n        Quantity:\n          format: integer\n          type: number\n      type: object\n    UpdateModifierGroup:\n      properties:\n        ModifierGroupId:\n          type: string\n        Modifiers:\n          items:\n            $ref: \"#/components/schemas/UpdateModifier\"\n          type: array\n      type: object\n    UpdateModifierGroupRequest:\n      example:\n        Id: \"13\"\n        Modifiers:\n          - Id: \"1\"\n            Name: Green\n            Variations:\n              - AdditionPrice: 0.3\n                ModifierGroupId: \"2\"\n                Selected: true\n                VariationId: \"3\"\n                VariationName: Standard\n          - Id: \"2\"\n            Name: Medium\n            Variations:\n              - AdditionPrice: 0.3\n                ModifierGroupId: \"2\"\n                Selected: true\n                VariationId: \"3\"\n                VariationName: Standard\n          - Id: \"3\"\n            Name: Spicy\n            Variations:\n              - AdditionPrice: 0.3\n                ModifierGroupId: \"2\"\n                Selected: true\n                VariationId: \"3\"\n                VariationName: Standard\n        Name: Salsas\n      properties:\n        Id:\n          description: Id\n          type: string\n        Modifiers:\n          description: Modifiers within this group\n          items:\n            $ref: \"#/components/schemas/UpdateModifierRequest\"\n          type: array\n          uniqueItems: false\n        Name:\n          description: Name\n          type: string\n      type: object\n    UpdateModifierRequest:\n      example:\n        Id: \"1\"\n        Name: Green\n        Variations:\n          - AdditionPrice: 0.3\n            ModifierGroupId: \"2\"\n            Selected: true\n            VariationId: \"3\"\n            VariationName: Standard\n      properties:\n        AdditionPrice:\n          description: Additional price\n          format: double\n          type: number\n        Id:\n          description: Id\n          type: string\n        Name:\n          description: Name\n          type: string\n        Variations:\n          description: Variations permitted\n          items:\n            $ref: \"#/components/schemas/VariationModifierResponse\"\n          type: array\n          uniqueItems: false\n      type: object\n    UpdateOrderAddressRequest:\n      description: The request object for setting the order address of a basket.\n      example:\n        address:\n          - 123 Wye Avenue, Eaton\n        city: Bristol\n        email: user@email.com\n        geoPosition:\n          latitude: 456.123\n          longitude: 123.456\n        name: J.E.Hungerton\n        orderable: true\n        phoneNumber: \"0123456789\"\n        polygonName: BS1 1AA\n        postCode: BS1 1AA\n        serviceType: delivery\n      properties:\n        address:\n          description: An array of strings containing lines of the customer's order address.\n          items:\n            type: string\n          nullable: false\n          type: array\n        city:\n          description: String value containing the city name of the customer's order address.\n          nullable: false\n          type: string\n        email:\n          description: The customer's email address.\n          nullable: false\n          type: string\n        geoPosition:\n          allOf:\n            - $ref: \"#/components/schemas/OrderGeoPosition\"\n          description: Geoposition object containing latitude and longitude values for the customer's order address\n          nullable: true\n        name:\n          description: The customer's name.\n          nullable: false\n          type: string\n        phoneNumber:\n          description: The customer's phone number.\n          nullable: false\n          type: string\n        polygonName:\n          description: String value containing the polygon name of customer's order address (in tenants with no polygon name, will be the same as postcode).\n          nullable: false\n          type: string\n        postCode:\n          description: String value containing the postcode of the customer's order address.\n          nullable: false\n          type: string\n        serviceType:\n          description: Service Type associated with the order details.\n          enum:\n            - delivery\n            - collection\n          nullable: false\n          type: string\n      required:\n        - address\n        - city\n        - postCode\n        - orderable\n        - email\n        - phoneNumber\n        - geoPosition\n        - polygonName\n      type: object\n    UpdateOrderDetails:\n      properties:\n        Location:\n          allOf:\n            - $ref: \"#/components/schemas/UpdateLocation\"\n          nullable: true\n      type: object\n    UpdateOrderTimeRequest:\n      description: The request object for setting the order time for a basket.\n      example:\n        asap: true\n        dateTime: 2020-02-05T16:26:30+0000\n        menuId: \"12345\"\n      properties:\n        asap:\n          description: True if the user has selected as soon as possible on the order, else false\n          nullable: false\n          type: boolean\n        dateTime:\n          description: The order time to set for the basket.\n          nullable: false\n          type: string\n        menuId:\n          description: The menu id that orderability of a basket is calculated against\n          nullable: false\n          type: string\n      required:\n        - dateTime\n        - asap\n        - menuId\n      type: object\n    UpdatePasswordResetFlowResponse:\n      example:\n        accessCode: 8It2lEaJjG82nJtxO00Iab0CoF0=\n        expiry: 2021-01-20T19:35:13.643Z\n      properties:\n        accessCode:\n          description: The One Time Access Code (OTAC).\n          type: string\n        expiry:\n          description: The expiry of the OTAC.\n          example: 2021-01-20T19:35:13.643Z\n          format: date-time\n          type: string\n      type: object\n    UpdateProduct:\n      properties:\n        Added:\n          items:\n            $ref: \"#/components/schemas/UpdateAddedProduct\"\n          nullable: true\n          type: array\n        Removed:\n          items:\n            $ref: \"#/components/schemas/UpdateRemoved\"\n          nullable: true\n          type: array\n        Updated:\n          items:\n            $ref: \"#/components/schemas/UpdateUpdatedProduct\"\n          nullable: true\n          type: array\n      type: object\n    UpdateQuantity:\n      properties:\n        Change:\n          description: Value to apply to existing quantity.\n          format: integer\n          type: number\n        Total:\n          description: Value that replaces the current quantity.\n          format: integer\n          type: number\n      type: object\n    UpdateRemoved:\n      properties:\n        BasketProductId:\n          description: A unique identifier for a product in the basket. This is needed to support complex products to make sure remove/update is applied to the correct product.\n          type: string\n        Date:\n          description: \"`YYYY-MM-DDThh:mm:ssZ (UTC)`\"\n          type: string\n      type: object\n    UpdateRemovedIngredient:\n      properties:\n        Details:\n          type: string\n      type: object\n    UpdateRequest:\n      description: The request object for updating a basket.\n      properties:\n        BasketId:\n          type: string\n        Deal:\n          allOf:\n            - $ref: \"#/components/schemas/UpdateDeal\"\n          nullable: true\n        OrderDetails:\n          allOf:\n            - $ref: \"#/components/schemas/UpdateOrderDetails\"\n          description: Information needed to allow an order to be placed on a basket.\n          nullable: true\n        Product:\n          allOf:\n            - $ref: \"#/components/schemas/UpdateProduct\"\n          nullable: true\n        SelectedServiceType:\n          nullable: true\n          properties:\n            Date:\n              type: string\n            Value:\n              type: string\n          type: object\n      type: object\n    UpdateUpdatedDeal:\n      properties:\n        BasketProductId:\n          type: string\n        Date:\n          description: \"`YYYY-MM-DDThh:mm:ssZ (UTC)`\"\n          type: string\n        DealGroups:\n          items:\n            $ref: \"#/components/schemas/UpdateDealGroup\"\n          type: array\n        Quantity:\n          items:\n            $ref: \"#/components/schemas/UpdateQuantity\"\n          type: object\n      type: object\n    UpdateUpdatedProduct:\n      properties:\n        BasketProductId:\n          type: string\n        Date:\n          description: \"`YYYY-MM-DDThh:mm:ssZ (UTC)`\"\n          type: string\n        ModifierGroups:\n          items:\n            $ref: \"#/components/schemas/UpdateModifierGroup\"\n          nullable: true\n          type: array\n        Quantity:\n          items:\n            $ref: \"#/components/schemas/UpdateQuantity\"\n          type: object\n        RemovedIngredients:\n          items:\n            $ref: \"#/components/schemas/UpdateRemovedIngredient\"\n          nullable: true\n          type: array\n      type: object\n    UserRole:\n      description: |-\n        \n        - `System` : Role for an automated process action.\n        - `Operations` : Role for an operations user action.\n        - `Restaurant` : Role for a restaurant owner/employee user action.\n      enum:\n        - System\n        - Operations\n        - Restaurant\n      type: string\n    ValidationError:\n      additionalProperties: false\n      example:\n        attemptedValue: null\n        customState: null\n        errorCode: NotEmptyValidator\n        errorMessage: TestProperty is empty\n        formattedMessageArguments: []\n        formattedMessagePlaceHolderValues:\n          PropertyName: User Role\n          PropertyValue: null\n        propertyName: TestProperty\n        resourceName: null\n        severity: 0\n      properties:\n        attemptedValue:\n          description: The property value that caused the failure\n          nullable: true\n          type: string\n        customState:\n          description: Custom state associated with the failure\n          nullable: true\n          type: string\n        errorCode:\n          description: The error code\n          type: string\n        errorMessage:\n          description: The error message\n          type: string\n        formattedMessageArguments:\n          description: Custom formatted validator messages with placeholders\n          items:\n            type: string\n          type: array\n        formattedMessagePlaceHolderValues:\n          additionalProperties: true\n          description: The values for placeholders in the formatted messages\n          type: object\n        propertyName:\n          description: The name of the property causing the failure\n          type: string\n        resourceName:\n          description: The resource name used for building the message\n          nullable: true\n          type: string\n        severity:\n          description: Severity of a validation rule. Will always be 0 (Error).\n          type: number\n      type: object\n    Validity:\n      additionalProperties: false\n      properties:\n        CuisineIds:\n          description: The cuisine ids the voucher is valid for\n          items:\n            type: string\n          nullable: true\n          type: array\n        EndDate:\n          description: The end date of the voucher\n          format: date-time\n          nullable: true\n          type: string\n        MinimumSpend:\n          description: The minimum spend to use the voucher\n          format: decimal\n          nullable: true\n          type: number\n        OrderNumberValidity:\n          description: The number of orders a customer has placed to satisfy the requirements of the voucher\n          nullable: true\n          oneOf:\n            - $ref: \"#/components/schemas/OrderNumberValidity\"\n        PaymentOptionTypes:\n          description: The payment options the voucher is restricted to\n          items:\n            type: string\n          nullable: true\n          type: array\n        Platform:\n          description: The order platform using the voucher\n          nullable: true\n          type: string\n        PostCode:\n          description: The post code applicable to the order\n          nullable: true\n          type: string\n        RestaurantIds:\n          description: A comma separate list of restaurant ids\n          nullable: true\n          type: string\n        RestrictedToConsumerStatus:\n          description: Whether the voucher is restricted to new customers, returning customers etc\n          nullable: true\n          oneOf:\n            - $ref: \"#/components/schemas/ConsumerStatus\"\n        ServiceType:\n          description: The service type for the voucher (e.g. Delivery, collection)\n          nullable: true\n          oneOf:\n            - $ref: \"#/components/schemas/ServiceType\"\n        StartDate:\n          description: The start date of the voucher\n          format: date-time\n          nullable: true\n          type: string\n        ValidFromHour:\n          description: Whether time the voucher is valid from\n          format: time-span\n          nullable: true\n          type: string\n        ValidOnDays:\n          description: The days of the week the voucher is valid on\n          items:\n            $ref: \"#/components/schemas/DayOfWeek\"\n          nullable: true\n          type: array\n        ValidToHour:\n          description: Whether time the voucher is valid to\n          format: time-span\n          nullable: true\n          type: string\n      type: object\n    Variation:\n      example:\n        availabilityIds:\n          - 1-lunch-delivery\n          - 2-lunch-collection\n          - 3-dinner-delivery\n          - 4-dinner-collection\n        basePrice: 1000\n        dealGroupsIds: []\n        dealOnly: false\n        id: \"8547130\"\n        kitchenNumber: \"100\"\n        modifierGroupsIds:\n          - 8547130-req-1\n          - 8547130-opt-1\n        name: 12 inch\n        type: variation\n      properties:\n        availabilityIds:\n          description: Maps to an availability item, availabilities determines which days and times the item can be sold.\n          items:\n            type: string\n          type: array\n        basePrice:\n          description: The base price of this variation in the minor unit of the currency.\n          format: int32\n          type: number\n        dealGroupsIds:\n          description: Maps to the deal groups that are applicable to this variation.\n          items:\n            type: string\n          type: array\n        dealOnly:\n          description: This flag indicates the variation is only available as part of a deal, the item will not be displayed as a stand alone menu item.\n          type: boolean\n        id:\n          description: A unique identifier at menu level for a variation, can be shared with parent menu item id.\n          type: string\n        kitchenNumber:\n          description: Identifies the item with a number on the physical menu that the kitchen understand e.g. on a Chinese menu number 16 could correspond to \"BBQ ribs\"\n          type: string\n        modifierGroupsIds:\n          description: Maps to the modifier groups that are applicable to this variation.\n          items:\n            type: string\n          type: array\n        name:\n          description: The name of the variation.\n          type: string\n        type:\n          description: Denotes the type of variation, `Variation` if there's multiple variations of the parent `menuitem`, `NoVariation` if there's only one\n          enum:\n            - noVariation\n            - variation\n          type: string\n      type: object\n    VariationModifierResponse:\n      example:\n        AdditionPrice: 12.34\n        ModifierGroupId: \"2\"\n        Selected: true\n        VariationId: \"3\"\n        VariationName: Large\n      properties:\n        AdditionalPrice:\n          description: The additional price\n          format: double\n          type: number\n        ModifierGroupId:\n          description: Id of the modifier group\n          type: string\n        Selected:\n          description: Whether this modifier is permitted on this variation\n          type: boolean\n        VariationId:\n          description: Id of the variation\n          type: string\n        VariationName:\n          description: Name of the variation\n          type: string\n      type: object\n    VariationReorderDeal:\n      additionalProperties: false\n      properties:\n        Attributes:\n          additionalProperties: false\n          description: An object containing all the attributes of a Deal\n          properties:\n            DealGroups:\n              description: A list of all the deal groups attached to a deal. 20 items maximum.\n              items:\n                $ref: \"#/components/schemas/VariationReorderDealGroup\"\n              type: array\n            Quantity:\n              description: How many of the deal were previously ordered. When re-adding to basket this is the number that should be added.\n              type: integer\n            Rank:\n              description: The position in the deal in the list. The data list is ordered by this ascending.\n              type: integer\n          type: object\n        Id:\n          description: The unique identifier for the deal.\n          type: string\n        Type:\n          description: The type of the object. This will always be 'deal'.\n          type: string\n      title: VariationReorderDeal\n      type: object\n    VariationReorderDealGroup:\n      additionalProperties: false\n      properties:\n        Id:\n          description: The unique identifier for a deal group.\n          type: string\n        Variations:\n          description: A list of variations in the deal group. 20 items maximum.\n          items:\n            $ref: \"#/components/schemas/VariationReorderVariation\"\n          type: array\n      title: VariationReorderDealGroup\n      type: object\n    VariationReorderModifier:\n      additionalProperties: false\n      properties:\n        Id:\n          description: A unique identifier for the variation modifier.\n          type: string\n        Quantity:\n          description: How many of the modifier were previously added to the variation.\n          type: integer\n      title: VariationReorderModifier\n      type: object\n    VariationReorderModifierGroup:\n      additionalProperties: false\n      properties:\n        Id:\n          description: The unique identifier for a modifier group.\n          type: string\n        Modifiers:\n          description: A list of modifiers applied in this modifier group. 20 items maximum.\n          items:\n            $ref: \"#/components/schemas/VariationReorderModifier\"\n          type: array\n      title: VariationReorderModifierGroup\n      type: object\n    VariationReorderRankedVariation:\n      additionalProperties: false\n      properties:\n        Attributes:\n          additionalProperties: false\n          description: An object containing all the attributes of a Deal\n          properties:\n            ModifierGroups:\n              description: A list of all the modifiers previously applied to the variation. 20 items maximum.\n              items:\n                $ref: \"#/components/schemas/VariationReorderModifierGroup\"\n              type: array\n            Quantity:\n              description: How many of the variation were previously ordered. When re-adding to basket, this is the number that should be added.\n              type: integer\n            Rank:\n              description: The position in the variation in the array. The data array is ordered by this ascending.\n              type: integer\n          type: object\n        Id:\n          description: The unique identifier for the variation.\n          type: string\n        Type:\n          description: The type of the object. This will always be 'variation'.\n          type: string\n      title: VariationReorderRankedVariation\n      type: object\n    VariationReorderVariation:\n      additionalProperties: false\n      properties:\n        Id:\n          description: The unique identifier for the variation.\n          type: string\n        ModifierGroups:\n          description: A list of all the modifiers previously applied to the variation. 20 items maximum.\n          items:\n            $ref: \"#/components/schemas/VariationReorderModifierGroup\"\n          type: array\n        Quantity:\n          description: How many of the variation were previously ordered.\n          type: integer\n      title: VariationReorderVariation\n      type: object\n    VariationResponse:\n      example:\n        Id: \"32\"\n        Name: Large\n        OptionGroupIds:\n          - \"1\"\n        PreferenceGroupIds:\n          - \"12\"\n          - \"32\"\n        Price: 12.32\n      properties:\n        Id:\n          description: Id\n          type: string\n        Name:\n          description: Name\n          type: string\n        OptionGroupIds:\n          description: List of option group ids applicable to this variation\n          items:\n            type: string\n          type: array\n          uniqueItems: false\n        PreferenceGroupIds:\n          description: List of preference group ids applicable to this variation\n          items:\n            type: string\n          type: array\n          uniqueItems: false\n        Price:\n          description: Price\n          format: double\n          type: number\n        Type:\n          description: Type\n          type: string\n      type: object\n    Vehicle:\n      description: All The types of vehicle available.\n      enum:\n        - CAR\n        - BICYCLE\n        - TRICYCLE\n        - VAN\n        - TRUCK\n      type: string\n    Voucher:\n      additionalProperties: false\n      properties:\n        Code:\n          description: The voucher code\n          nullable: true\n          type: string\n        CodeType:\n          $ref: \"#/components/schemas/CodeType\"\n          description: The type of voucher code\n        Created:\n          description: The created time (UTC) of the voucher\n          format: date-time\n          type: string\n        CreatedBy:\n          description: The creator of the voucher\n          nullable: true\n          type: string\n        Id:\n          description: The voucher id\n          format: int32\n          type: integer\n        Lock:\n          description: If the voucher is locked and what it is locked to\n          nullable: true\n          oneOf:\n            - $ref: \"#/components/schemas/VoucherLock\"\n        PaymentOptionTypes:\n          description: The payment options the voucher is restricted to\n          items:\n            type: string\n          nullable: true\n          type: array\n      type: object\n    VoucherGroup:\n      additionalProperties: false\n      properties:\n        Archived:\n          description: Whether the voucher group is flagged as archived\n          type: boolean\n        Created:\n          description: The created time (UTC) of the voucher group\n          format: date-time\n          type: string\n        CreatedBy:\n          description: The creator of the voucher group\n          nullable: true\n          type: string\n        Discount:\n          description: The details of the discount (amount / type etc)\n          nullable: true\n          oneOf:\n            - $ref: \"#/components/schemas/Discount\"\n        GroupType:\n          $ref: \"#/components/schemas/GroupType\"\n          description: The type of the voucher group (e.g. Dynamically Created Single Use)\n        Hidden:\n          description: Whether the voucher group is flagged as hidden\n          type: boolean\n        Id:\n          description: The Id of the voucher group\n          format: int32\n          type: integer\n        Name:\n          description: The name of the voucher group\n          nullable: true\n          type: string\n        Source:\n          description: The source system creating the voucher group\n          nullable: true\n          type: string\n        StaticCode:\n          description: The static code of the voucher group (will be normalised as part of the creation)\n          nullable: true\n          type: string\n        Updated:\n          description: The updated time (UTC) of the voucher group\n          format: date-time\n          type: string\n        Validity:\n          description: The parameters that determine the validity of the voucher group\n          nullable: true\n          oneOf:\n            - $ref: \"#/components/schemas/Validity\"\n      type: object\n    VoucherLock:\n      additionalProperties: false\n      properties:\n        Consumed:\n          description: The UTC date it was consumed\n          format: date-time\n          nullable: true\n          type: string\n        ConsumerStatus:\n          description: The Customer Status (i.e. new customers, returning customers etc)\n          nullable: true\n          oneOf:\n            - $ref: \"#/components/schemas/ConsumerStatus\"\n        CuisinesIds:\n          description: The number of orders\n          items:\n            type: string\n          nullable: true\n          type: array\n        CustomerId:\n          description: The Customer Id the voucher is locked to\n          nullable: true\n          type: string\n        DeliveryFee:\n          description: The delivery fee\n          format: decimal\n          type: number\n        DiscountApplied:\n          description: The Discount Applied\n          format: decimal\n          type: number\n        Locked:\n          description: The UTC date it was locked\n          format: date-time\n          nullable: true\n          type: string\n        NumberOfOrders:\n          description: The number of orders\n          format: int32\n          nullable: true\n          type: integer\n        OrderAmount:\n          description: The order amount\n          format: decimal\n          type: number\n        OrderId:\n          description: The Order Id the voucher is locked to\n          nullable: true\n          type: string\n        OrderPlacedDateWithUtcOffset:\n          description: The order placed date\n          format: date-time\n          nullable: true\n          type: string\n        PaymentOptionType:\n          description: The payment option\n          nullable: true\n          type: string\n        Platform:\n          description: The order platform\n          nullable: true\n          type: string\n        PostCode:\n          description: The post code\n          nullable: true\n          type: string\n        RestaurantId:\n          description: The restaurant id\n          format: int32\n          type: integer\n        ServiceType:\n          description: The service type (i.e. Delivery, Collection)\n          nullable: true\n          oneOf:\n            - $ref: \"#/components/schemas/ServiceType\"\n        State:\n          $ref: \"#/components/schemas/VoucherStates\"\n          description: The current state\n        VoucherId:\n          description: The voucher id\n          format: int32\n          type: integer\n      type: object\n    VoucherStates:\n      description: \"\"\n      enum:\n        - 0\n        - 1\n        - 2\n      type: integer\n      x-enumNames:\n        - Available\n        - Locked\n        - Consumed\n    VoucherType:\n      description: Type of voucher\n      enum:\n        - 0\n        - 1\n        - 2\n      type: integer\n      x-enumNames:\n        - Absolute\n        - Percentage\n        - DeliveryFee\n    WellKnownConfigurationResponse:\n      description: The success response object for the well-known endpoint.\n      example:\n        authorization_endpoint: http://uk-tokenweb.cwa.je-labs.com/applications/tokenweb/authorize\n        issuer: http://uk-tokenweb.cwa.je-labs.com\n        jwks_uri: http://uk-tokenweb.cwa.je-labs.com/.well-known/jwks.json\n        response_types_supported:\n          - code\n        scopes_supported:\n          - \"\"\n        token_endpoint: http://uk-tokenweb.cwa.je-labs.com/applications/tokenweb/token\n        token_endpoint_auth_methods_supported:\n          - client_secret_basic\n        userinfo_endpoint: http://uk-tokenweb.cwa.je-labs.com/userinfo\n      properties:\n        authorization_endpoint:\n          description: URL of the authorisation endpoint.\n          nullable: false\n          type: string\n        issuer:\n          description: URL used to identify the issuer.\n          nullable: false\n          type: string\n        jwks_uri:\n          description: URL of the JSON Web Key Set. This contains the signing keys used to validate signatures.\n          nullable: false\n          type: string\n        response_types_supported:\n          description: List containing the OAuth 2.0 `response_type` values which are supported.\n          items:\n            type: string\n          nullable: true\n          type: array\n        scopes_supported:\n          description: List containing the scope values that the server supports.\n          items:\n            type: string\n          nullable: true\n          type: array\n        token_endpoint:\n          description: URL of the token endpoint.\n          nullable: false\n          type: string\n        token_endpoint_auth_methods_supported:\n          description: List containing the Client Authentication methods supported by this Token Endpoint.\n          items:\n            type: string\n          nullable: true\n          type: array\n        userinfo_endpoint:\n          description: URL of the user info endpoint.\n          nullable: false\n          type: string\n      type: object\n    ZoneProfile:\n      description: The zone profile object for a given delivery zone.\n      properties:\n        averageAssignableJobLoad:\n          description: The burden over the couriers in a delivery zone. The average assignable job load is calculated by the sum of all jobs assigned to the couriers divided by the delivery zone's total assignable courier count.\n          example: 0.7\n          format: double\n          type: number\n        bender:\n          description: Bender On/Off object\n          properties:\n            enabled:\n              description: Bender Enabled/Disabled status\n              type: boolean\n          type: object\n        ema:\n          description: The simple moving average is the usage for a given delivery zone, which is calculated by using the sum of all on-shift utilisation ( percentage of time a courier spends working on orders during their shift ) at the time, divided by the number of time periods gathered from all data points. Differently from simple moving average, exponential moving average also represents the usage however its equation places a greater weight on the most recent data points.\n          example: 70\n          format: integer\n          type: number\n        flexStateType:\n          $ref: \"#/components/schemas/BenderFlexStateType\"\n          description: The flex state type changes according to the exponential moving average and is used as a reference to bring more couriers to suffice the demand in a given delivery zone.\n        zoneId:\n          description: Zone profile delivery zone id.\n          example: 53c3afb5-fcs5-4941-be6d-2179f812sc8d\n          type: string\n      type: object\n    acceptance-requested:\n      example:\n        Currency: GBP\n        Customer:\n          Id: 12345\n          Name: Bruce Wayne\n          PreviousRestaurantOrderCount: 5\n          PreviousTotalOrderCount: 83\n        CustomerNotes:\n          noteForDelivery: delivery note\n          noteForRestaurant: restaurant note\n        FriendlyOrderReference: REF0001\n        Fulfilment:\n          Address:\n            City: London\n            Geolocation:\n              Latitude: 51.51641\n              Longitude: -0.103198\n            Lines:\n              - Fleet Place House\n              - Fleet Pl\n            PostalCode: EC4M 7RD\n          CustomerDueAsap: false\n          CustomerDueDate: 2018-03-10T14:45:28Z\n          Method: Delivery\n          PhoneMaskingCode: \"9999999\"\n          PhoneNumber: \"+441234567890\"\n          PreparationTime: 0:23:32\n        IsTest: true\n        Items:\n          - Items:\n              - Items: []\n                Name: Fries\n                Quantity: 1\n                Reference: \"9876\"\n                Synonym: Regular\n                UnitPrice: 0\n              - Items: []\n                Name: Pepsi\n                Quantity: 2\n                Reference: \"6789\"\n                Synonym: 330ml\n                UnitPrice: 0\n            Name: Chicken Box Meal\n            Quantity: 2\n            Reference: \"1234\"\n            Synonym: \"\"\n            TotalPrice: 10\n            UnitPrice: 5\n          - Items: []\n            Name: Milkshake\n            Quantity: 1\n            Reference: \"4321\"\n            Synonym: \"\"\n            TotalPrice: 7.25\n            UnitPrice: 7.25\n        OrderId: ABCD654321\n        Payment:\n          Lines:\n            - Paid: false\n              Type: AccountCredit\n              Value: 19.25\n            - Paid: true\n              Type: CreditCard\n              Value: 19.25\n        PlacedDate: 2018-03-10T14:45:28Z\n        PriceBreakdown:\n          Discount: 0\n          Fees:\n            Delivery: 1\n            Other: 0\n            ServiceCharge: 0.5\n          Items: 17.25\n          Taxes: 3.85\n          Tips: 0.5\n        Restaurant:\n          Address:\n            City: London\n            Geolocation:\n              Latitude: 51.4484\n              Longitude: -0.1504\n            Lines:\n              - Oldridge Road\n            PostalCode: SW12 8PW\n          Id: I12345\n          Name: Just Eat Test Restaurant\n          PhoneNumber: \"+441200000000\"\n          Refererence: R99999\n          TimeZone: Australia/Sydney (IANA format)\n        Restrictions:\n          - Type: Alcohol\n        TotalPrice: 19.25\n      properties:\n        Currency:\n          type: string\n        Customer:\n          properties:\n            Id:\n              nullable: true\n              type: number\n            Name:\n              type: string\n            PreviousRestaurantOrderCount:\n              description: The customer's previous total number of orders made to this restaurant\n              type: number\n            PreviousTotalOrderCount:\n              description: The customer's previous total number of orders made to all restaurants\n              type: number\n          type: object\n        CustomerNotes:\n          additionalProperties:\n            type: string\n          type: object\n        FriendlyOrderReference:\n          type: string\n        Fulfilment:\n          properties:\n            Address:\n              $ref: \"#/components/schemas/order-address\"\n            CustomerDueAsap:\n              type: boolean\n            CustomerDueDate:\n              format: date-time\n              type: string\n            Method:\n              enum:\n                - Delivery\n                - Collection\n              type: string\n            PhoneMaskingCode:\n              description: Code to use when calling customer phone masking number about this order. null if phone masking not enabled\n              type: string\n            PhoneNumber:\n              description: Customer phone number (will be phone masking number if enabled)\n              type: string\n            PreparationTime:\n              format: timespan\n              type: string\n          type: object\n        IsTest:\n          type: boolean\n        Items:\n          $ref: \"#/components/schemas/order-item\"\n        OrderId:\n          type: string\n        Payment:\n          properties:\n            Lines:\n              items:\n                properties:\n                  Paid:\n                    type: boolean\n                  Type:\n                    type: string\n                  Value:\n                    format: money\n                    type: number\n                type: object\n              type: array\n          type: object\n        PlacedDate:\n          format: date-time\n          type: string\n        PriceBreakdown:\n          properties:\n            Discount:\n              format: money\n              nullable: true\n              type: number\n            Fees:\n              properties:\n                Delivery:\n                  format: money\n                  nullable: true\n                  type: number\n                Other:\n                  format: money\n                  nullable: true\n                  type: number\n                ServiceCharge:\n                  format: money\n                  nullable: true\n                  type: number\n              type: object\n            Items:\n              format: money\n              nullable: true\n              type: number\n            Taxes:\n              format: money\n              nullable: true\n              type: number\n            Tips:\n              format: money\n              nullable: true\n              type: number\n          type: object\n        Restaurant:\n          properties:\n            Address:\n              $ref: \"#/components/schemas/order-address\"\n            Id:\n              description: Restaurant Id\n              type: string\n            Name:\n              type: string\n            PhoneNumber:\n              type: string\n            Reference:\n              type: string\n            TimeZone:\n              type: string\n          type: object\n        Restrictions:\n          description: This is a list of types of restricted items contained in the order.\n          items:\n            $ref: \"#/components/schemas/order-item-restriction\"\n          type: array\n        TotalPrice:\n          format: money\n          type: number\n      type: object\n    address:\n      properties:\n        AddressLines:\n          items:\n            type: string\n          type: array\n        City:\n          type: string\n        Postcode:\n          type: string\n      type: object\n    address-v2:\n      properties:\n        City:\n          type: string\n        GeoLocation:\n          $ref: \"#/components/schemas/location-v2\"\n        Lines:\n          items:\n            type: string\n          type: array\n        PostalCode:\n          type: string\n      required:\n        - Lines\n        - City\n        - PostalCode\n        - Geolocation\n      type: object\n    applicationState:\n      description: The application state i.e. Open, Approved etc.\n      enum:\n        - OpenApplication\n        - ManualInterventionRequired\n        - ReadyForInitialReview\n        - InitialReviewRejected\n        - ReadyForFinalReview\n        - FinalReviewRejected\n        - Approved\n      type: string\n    applicationSubmitResponse:\n      properties:\n        applicationState:\n          $ref: \"#/components/schemas/applicationState\"\n          description: The current application state i.e. Open, Approved etc.\n      type: object\n    assessmentStatusTypes:\n      description: Denotes the type of segmentation status that restaurant can have\n      enum:\n        - 0\n        - 1\n        - 2\n        - 3\n        - 4\n      example: 1\n      format: enum\n      type: integer\n      x-enumNames:\n        - Unknown\n        - LocalLegend\n        - Gold\n        - Silver\n        - New\n    attempted-delivery-created:\n      example:\n        OrderId: wiej234idf09i29jijgf4\n        Reason: Customer did not answer the door\n        RestaurantId: 110230\n        Tenant: uk\n      properties:\n        OrderId:\n          description: The id of the order\n          type: string\n        Reason:\n          description: The reason for creating the attempted delivery\n          type: string\n        RestaurantId:\n          description: The id of the restaurant\n          type: number\n        Tenant:\n          description: The tenant associated with the order\n          type: string\n      type: object\n    attempted-delivery-resolved:\n      example:\n        OrderId: wiej234idf09i29jijgf4\n        Resolution:\n          Redelivery:\n            CustomerTimeZone: Europe/London\n            NewDueDate: 2018-03-10T14:45:28Z\n            Status: repreparing\n          Type: redeliver_order\n        Tenant: uk\n      properties:\n        OrderId:\n          description: The ID of the order for which an attempted delivery query has been resolved\n          type: string\n        Resolution:\n          description: Details of the resolution to the query\n          properties:\n            Cancellation:\n              description: The cancellation properties. Only required if the order has been cancelled, otherwise null\n              properties:\n                Reason:\n                  description: The reason for cancelling the order\n                  enum:\n                    - new_address_not_within_area\n                    - unable_to_reprepare\n                    - driver_not_available\n                    - area_unsafe\n                    - customer_doesnt_want_anymore\n                  type: string\n              type: object\n            Redelivery:\n              description: The redelivery properties. Only required if the order is being redelivered, otherwise null\n              properties:\n                CustomerTimeZone:\n                  description: The IANA TZ database name of the time zone the customer that placed the order is in\n                  type: string\n                NewDueDate:\n                  description: Updated due date for delivery of the order in ISO 8601 format\n                  format: date-time\n                  type: string\n                Status:\n                  description: The current status of the order\n                  enum:\n                    - driver_at_address\n                    - repreparing\n                  type: string\n              type: object\n            Type:\n              description: The type of resolution to the query, either cancellation or redelivery\n              enum:\n                - order_cancelled\n                - redeliver_order\n              type: string\n          type: object\n        Tenant:\n          description: The tenant of the restaurant the order was placed at\n          enum:\n            - uk\n            - dk\n            - es\n            - ie\n            - it\n            - no\n            - au\n            - nz\n          type: string\n      type: object\n    attempted-delivery-response-received:\n      example:\n        Notes: Please press 123 on the door\n        OrderId: wiej234idf09i29jijgf4\n        Tenant: uk\n        Update: Please redeliver\n      properties:\n        Notes:\n          type: string\n        OrderId:\n          type: string\n        Tenant:\n          type: string\n        Update:\n          type: string\n      type: object\n    availability-result:\n      properties:\n        message:\n          description: Error description when something went wrong or `unprocessedPartnerProductIds` any\n          type: string\n        processedPartnerProductIds:\n          description: Array of partner product identifiers that have been successfully processed\n          items:\n            type: string\n          type: array\n        unprocessedPartnerProductIds:\n          description: Array of partner product identifiers that have not been processed\n          items:\n            type: string\n          type: array\n      type: object\n    availability-result-error:\n      properties:\n        message:\n          description: Short error description\n          type: string\n      type: object\n    binary-object:\n      format: binary\n      type: string\n    bulk-delivery-details:\n      properties:\n        EtaAtDeliveryAddress:\n          description: This should represent the delivery partner's best guess at when the driver will arrive at the delivery address.\n          example: 2020-12-25T16:45:28.7537228+00:00\n          format: date-time\n          type: string\n        EtaAtRestaurant:\n          description: This should represent the delivery partner's best guess at when the driver will arrive at the restaurant.\n          example: 2020-12-25T16:30:28.7537228+00:00\n          format: date-time\n          type: string\n        Location:\n          $ref: \"#/components/schemas/location\"\n        OrderId:\n          description: Just Eat order identifier\n          type: string\n        TimeStampWithUtcOffset:\n          description: This should represent the bulk delivery updated timestamp.\n          format: date-time\n          type: string\n      type: object\n    bulk-delivery-details-list:\n      items:\n        $ref: \"#/components/schemas/bulk-delivery-details\"\n      type: array\n    campaignId:\n      properties:\n        campaignId:\n          description: Id of the campaign\n          type: string\n      type: object\n    connectorder:\n      properties:\n        BasketInfo:\n          description: Basket data\n          properties:\n            BasketId:\n              description: Unique Basket Id for the Order.\n              example: ABCb8DzdnUy7G481b0JN5g\n              type: string\n            DeliveryCharge:\n              description: Amount of cost that comes from delivery.\n              example: 5\n              format: double\n              type: number\n            Discount:\n              description: The discount amount, used in conjunction with `DiscountType`.\n              example: 4.78\n              format: double\n              type: number\n            Discounts:\n              description: Any Discounts applied to the Order.\n              items:\n                description: Discount data\n                properties:\n                  Discount:\n                    description: The discount amount, used in conjunction with `DiscountType`.\n                    example: 10\n                    format: int32\n                    type: number\n                  DiscountType:\n                    description: The type of discount, e.g. a percentage or the order or fixed amount.\n                    example: Percent\n                    type: string\n                  Id:\n                    description: Basket item id.\n                    example: 21950\n                    format: int32\n                    type: number\n                  QualifyingValue:\n                    description: The minimum order amount in order for this discount to be applicable.\n                    example: 4.78\n                    format: double\n                    type: number\n                type: object\n              type: array\n            GroupedBasketItems:\n              description: Grouped basket items\n              items:\n                description: An item in the Basket.\n                properties:\n                  BasketItem:\n                    description: An item in the Basket.\n                    properties:\n                      CombinedPrice:\n                        description: Unit Price plus individual Meal Part item cost.\n                        example: 3.58\n                        format: double\n                        type: number\n                      Discounts:\n                        description: Any discounts applied to this specific item.\n                        items:\n                          description: Discount data\n                          properties:\n                            Amount:\n                              description: Amount of the discount applied\n                              example: 4.5\n                              format: double\n                              type: number\n                            DiscountType:\n                              description: Type of the discount applied\n                              example: Percent\n                              type: string\n                          type: object\n                        type: array\n                      MealParts:\n                        description: Represents sub-parts of a meal.\n                        items:\n                          description: Meal part data\n                          properties:\n                            GroupId:\n                              description: The group Id.\n                              example: 1\n                              format: int32\n                              type: number\n                            MealPartId:\n                              description: The meal part Id.\n                              example: 45822750\n                              format: int32\n                              type: number\n                            Name:\n                              description: The name of the meal part.\n                              example: Any Sides?\n                              type: string\n                            OptionalAccessories:\n                              description: Optional accessories\n                              items:\n                                description: Optional accessory\n                                properties:\n                                  Name:\n                                    description: The name of the accessory.\n                                    example: Add Bacon\n                                    type: string\n                                  OptionalAccessoryId:\n                                    description: The accessory Id.\n                                    example: 56168\n                                    format: int32\n                                    type: number\n                                  Quantity:\n                                    description: The quantity of the accessory.\n                                    example: 1\n                                    format: int32\n                                    type: number\n                                  UnitPrice:\n                                    description: The unit price of the accessory.\n                                    example: 0.5\n                                    format: double\n                                    type: number\n                                type: object\n                              type: array\n                            RequiredAccessories:\n                              description: Required accessories\n                              items:\n                                description: Required accessory\n                                properties:\n                                  GroupId:\n                                    description: The group Id of the accessory.\n                                    example: 3\n                                    format: int32\n                                    type: number\n                                  Name:\n                                    description: The name of the accessory.\n                                    example: Coca-Cola Original Taste\n                                    type: string\n                                  RequiredAccessoryId:\n                                    description: The accessory Id.\n                                    example: 225025\n                                    format: int32\n                                    type: number\n                                  UnitPrice:\n                                    description: The unit price of the accessory.\n                                    example: 0.16\n                                    format: double\n                                    type: number\n                                type: object\n                              type: array\n                            Synonym:\n                              description: The synonym of the meal part.\n                              type: string\n                          type: object\n                        type: array\n                      MenuCardNumber:\n                        description: Menu card number.\n                        example: \"1\"\n                        type: string\n                      MultiBuyDiscounts:\n                        description: Any multi-purchase discounts applied to this item.\n                        items:\n                          description: Multi-purchase discount data\n                          properties:\n                            Amount:\n                              description: Amount of the discount applied\n                              example: 4.5\n                              format: double\n                              type: number\n                            DiscountType:\n                              description: Type of the discount applied\n                              example: Percent\n                              type: string\n                            OrderItemId:\n                              description: Id of the Order item.\n                              type: string\n                            ProductTypeId:\n                              description: The Id of the product type the discount applies to.\n                              format: int32\n                              type: number\n                          type: object\n                        type: array\n                      Name:\n                        description: The Item name, e.g. Chicken Tikka Masala or Family Meal Deal 3.\n                        example: Mini Fillet Burger\n                        type: string\n                      OptionalAccessories:\n                        description: An option item added to the Basket Item, this may be options such as Garlic Bread or a bottle of Coke.\n                        items:\n                          description: Optional accessory\n                          properties:\n                            Name:\n                              description: The name of the accessory.\n                              example: Add Bacon\n                              type: string\n                            OptionalAccessoryId:\n                              description: The accessory Id.\n                              example: 56168\n                              format: int32\n                              type: number\n                            Quantity:\n                              description: The quantity of the accessory.\n                              example: 1\n                              format: int32\n                              type: number\n                            UnitPrice:\n                              description: The unit price of the accessory.\n                              example: 0.5\n                              format: double\n                              type: number\n                          type: object\n                        type: array\n                      ProductId:\n                        description: Id of the Product.\n                        example: 45858074\n                        format: int32\n                        type: number\n                      ProductTypeId:\n                        description: Id of the Product.\n                        example: 428\n                        format: int32\n                        type: number\n                      RequiredAccessories:\n                        description: Items required as part of the Item, for example, Pizza base sauce.\n                        items:\n                          description: Required accessory\n                          properties:\n                            GroupId:\n                              description: The group Id of the accessory.\n                              example: 3\n                              format: int32\n                              type: number\n                            Name:\n                              description: The name of the accessory.\n                              example: Large Meal\n                              type: string\n                            RequiredAccessoryId:\n                              description: The accessory Id.\n                              example: 225025\n                              format: int32\n                              type: number\n                            UnitPrice:\n                              description: The unit price of the accessory.\n                              example: 0.1\n                              format: double\n                              type: number\n                          type: object\n                        type: array\n                      Synonym:\n                        description: Legacy - ignore.\n                        type: string\n                      UnitPrice:\n                        description: The price of the item.\n                        example: 1.79\n                        format: double\n                        type: number\n                    type: object\n                  CombinedPrice:\n                    description: The total price of the Basket Item (including discounts).\n                    example: 3.58\n                    format: double\n                    type: number\n                  MenuCardNumber:\n                    description: Menu card number.\n                    example: \"1\"\n                    type: string\n                  OrderSubId:\n                    description: Order `SubId`\n                    example: 0\n                    format: int32\n                    type: number\n                  Quantity:\n                    description: The quantity of Basket Items requested.\n                    example: 2\n                    format: int32\n                    type: number\n                type: object\n              type: array\n            MenuId:\n              description: Id of the Restaurant's menu.\n              example: 777890\n              format: int32\n              type: number\n            MultiBuyDiscount:\n              description: MultiBuy discount.\n              example: 0\n              format: double\n              type: number\n            SubTotal:\n              description: The Basket total cost, excluding any discounts.\n              example: 47.75\n              format: double\n              type: number\n            ToSpend:\n              description: Amount to spend.\n              example: 0\n              format: double\n              type: number\n            Total:\n              description: Total price of the Order.\n              example: 47.97\n              format: double\n              type: number\n          type: object\n        CustomerInfo:\n          description: Customer data\n          properties:\n            Address:\n              description: Customer Address. Note that Address is comma delimited.\n              example: Fleet Place House, 2 Fleet Place, London\n              type: string\n            City:\n              description: The name of the city where the Customer is located.\n              example: London\n              type: string\n            DisplayPhoneNumber:\n              description: The customer's masked phone number.\n              example: (01) 872 7863\n              type: string\n            Email:\n              description: Email address for the Customer.\n              example: contact@just-eat.com\n              type: string\n            Id:\n              description: The JUST EAT Customer Id.\n              example: \"123456\"\n              type: string\n            Latitude:\n              description: Customer address latitude. Will be 0 if not provided.\n              example: 51.50015\n              format: double\n              type: number\n            LocationAccuracyDescription:\n              description: Location accuracy description\n              example: ROOFTOP\n              type: string\n            LocationAccuracyInMeters:\n              description: Accuracy of the location data in meters.\n              example: 0\n              format: double\n              type: number\n            LocationSource:\n              description: Provider of the location data.\n              example: GeodataGeocoder\n              type: string\n            Longitude:\n              description: Customer address longitude. Will be 0 if not provided.\n              example: -0.12624\n              format: double\n              type: number\n            Name:\n              description: The name of the Customer.\n              example: Just Eat\n              type: string\n            PhoneMaskingCode:\n              description: Code to use when calling customer phone masked number (`DisplayPhoneNumber`) about this order. Null if phone masking not enabled\n              example: \"444333222\"\n              type: string\n            PhoneNumber:\n              description: The customer's unmasked phone number. Please don't expose this to drivers, instead use this number to provide your own phone masking number or use the JustEat masked number `DisplayPhoneNumber` below\n              example: \"018727863\"\n              type: string\n            Postcode:\n              description: The post code where Customer is located.\n              example: EC4M 7RF\n              type: string\n            PreviousRestuarantOrderCount:\n              description: The number of Orders the Customer has placed at this Restaurant via JUST EAT\n              format: int32\n              type: number\n            TimeZone:\n              description: Customer timezone, e.g. 'Central European Standard Time'.\n              example: GMT Standard Time\n              type: string\n          type: object\n        CustomerOrderId:\n          deprecated: true\n          description: This is a deprecated customer-facing ID that we maintain to support existing implementations.\n          example: 348322088\n          format: int32\n          type: number\n        FriendlyOrderReference:\n          description: The customer facing identifier for the order, which should be used in any UI or receipts to identify the order to the customer, driver or restaurant. This identifier is not guaranteed to be globally unique.\n          example: \"348322088\"\n          type: string\n        Id:\n          deprecated: true\n          description: The unique identifier for an order within the country. You can provide this ID whenever sending requests related to the order. Note that further messages from Just Eat relating to this order may not use this same identifier, use `OrderId` for a more consistent identifier.\n          example: \"348322088\"\n          type: string\n        IsAMiniFistPumpOrder:\n          deprecated: true\n          description: Legacy Promotion - Ignore.\n          type: boolean\n        Order:\n          description: Order data\n          properties:\n            DueDate:\n              deprecated: true\n              description: Ignore - use `DueDateWithUtcOffset`.\n              format: date-time\n              type: string\n            DueDateWithUtcOffset:\n              description: The DateTime when the Customer has been told they will receive the Order.\n              format: date-time\n              type: string\n            InitialDueDate:\n              deprecated: true\n              description: Ignore - use `IntialDueDateWithUtcOffset`.\n              format: date-time\n              type: string\n            InitialDueDateWithUtcOffset:\n              description: When the Customer was originally told the order would be delivered (prior to Restaurant adjustment)\n              format: date-time\n              type: string\n            NoteToRestaurant:\n              description: Notes from the customer about their order. In addition to notes for the restaurant, this field can also delivery instructions - and should be displayed to the delivery driver.\n              example: Contact-free delivery\n              type: string\n            PickupNoticePeriod:\n              description: Desired minimum amount of notice needed before the driver arrives to pickup the order at the restaurant. This is to allow restaurant enough time to prepare the order. If less notice is given the driver may have to wait for the order to be prepared. Field is in the format \"hh:mm:ss\"\n              example: 00:10:00\n              format: timespan\n              type: string\n            PlacedDate:\n              description: Date Customer placed the order. Note that JUST EAT accepts pre-orders therefore there may be a significant difference between Placed Date and Due Date This Date/Time is set as UTC without an offset, regardless of Country.\n              format: date-time\n              type: string\n            PromptAsap:\n              description: Did the Customer request the Order to ready ASAP\n              type: boolean\n            RdsPickupTimeWithUtcOffset:\n              description: When the Delivery Partner needs to be at the Restaurant to pickup the Order.\n              format: date-time\n              type: string\n            ServiceType:\n              description: Type of the Order.\n              enum:\n                - Collection\n                - Delivery\n              type: string\n          type: object\n        OrderId:\n          description: Globally unique Identifier for the order. Please use this whenever sending requests related to this order. Just Eat will provide this same identifier on any further messages relating to this order.\n          example: ijdhpy7bdusgtc28bapspa\n          type: string\n        OrderReference:\n          deprecated: true\n          description: This field is used to store external references to the order. This is defined by either Just Eat or the partner that created the order.\n          example: 39cce3f0-0278-dd25-ae32-e8effe1ce4eb\n          type: string\n        PaymentInfo:\n          description: Payment data\n          properties:\n            CashOnDelivery:\n              description: Is the Customer paying on Delivery.\n              type: boolean\n            DriverTipValue:\n              description: The value of the tip given to the Driver.\n              example: 0\n              format: double\n              type: number\n            PaidDate:\n              description: DateTime when the Order was Paid (excludes UTC offset).\n              format: date-time\n              type: string\n            PaymentLines:\n              description: How the Customer has paid for the Order.\n              items:\n                description: Payment line data\n                properties:\n                  CardFee:\n                    description: Was there a fee for the payment mechanism.\n                    example: 0.5\n                    format: double\n                    type: number\n                  Type:\n                    description: How was the order Paid.\n                    enum:\n                      - Card\n                    type: string\n                  Value:\n                    description: The value of the payment.\n                    example: 22.05\n                    format: double\n                    type: number\n                type: object\n              type: array\n            Total:\n              description: The total order value.\n              example: 22.55\n              format: double\n              type: number\n            TotalComplementary:\n              description: Order amount covered by JUST EAT.\n              example: 0\n              format: double\n              type: number\n          type: object\n        RestaurantInfo:\n          description: Restaurant data\n          properties:\n            AddressLines:\n              description: Restaurant address.\n              items:\n                description: Address line\n                example: Fleet Place House 2, Fleet Place, London\n                type: string\n              type: array\n            City:\n              description: The name of the city where the Restaurant is located\n              example: London\n              type: string\n            DispatchMethod:\n              description: \"`DispatchMethod` to use.\"\n              example: Phone\n              type: string\n            EmailAddress:\n              description: Email address for the Restaurant.\n              example: contact@testrestaurant.com\n              type: string\n            Id:\n              description: Unique ID of the Restaurant.\n              example: \"123456\"\n              type: string\n            Latitude:\n              description: Restaurant address latitude. Will be 0 if not provided.\n              example: 51.50015\n              format: double\n              type: number\n            Longitude:\n              description: Restaurant address longitude. Will be 0 if not provided.\n              example: -0.12624\n              format: double\n              type: number\n            Name:\n              description: The name of the Restaurant.\n              example: Test Restaurant\n              type: string\n            PhoneNumber:\n              description: The Restaurant phone number.\n              example: \"07123456789\"\n              type: string\n            PickupNotes:\n              description: Order pickup instructions for the Delivery Partner.\n              example: Use the back entrance\n              type: string\n            Postcode:\n              description: The post code where Restaurant is located\n              example: EC4M 7RF\n              type: string\n          type: object\n        Restrictions:\n          description: This is a list of types of restricted items contained in the order.\n          items:\n            $ref: \"#/components/schemas/order-item-restriction\"\n          type: array\n      type: object\n    connectorder-list:\n      items:\n        $ref: \"#/components/schemas/connectorder\"\n      type: array\n    consumerMarketingPreference:\n      items:\n        properties:\n          channelName:\n            description: The channel name.\n            enum:\n              - Email\n              - Push\n              - Sms\n            type: string\n          dateUpdated:\n            description: The date of the marketing preference change\n            format: date-time\n            type: string\n          isSubscribed:\n            description: Should the channel be subscribed to?\n            type: boolean\n        type: object\n      type: array\n    consumerMarketingPreferencev2:\n      example:\n        emailAddress: consumer@just-eat.com\n        updates:\n          - channelName: Email\n            dateUpdated: 2020-07-20T15:07:23.000Z\n            isSubscribed: true\n      properties:\n        emailAddress:\n          description: The email address of the consumer\n          type: string\n        updates:\n          $ref: \"#/components/schemas/consumerMarketingPreference\"\n          description: Collection of marketing channel subscription updates\n      type: object\n    create-attempted-delivery:\n      example:\n        ReasonCode: problem_with_address\n      properties:\n        ReasonCode:\n          description: The reason the attempted delivery event was created\n          enum:\n            - problem_with_address\n            - no_answer\n          type: string\n      type: object\n    create-delivery-pool:\n      example:\n        name: Toronto - West\n        restaurants:\n          - 123\n          - 456\n      properties:\n        name:\n          description: The name of the pool, used by operations teams, in reports, etc.\n          type: string\n        restaurants:\n          description: A list of Just Eat restaurant ids served by the delivery pool.\n          items:\n            format: int32\n            type: number\n          type: array\n      required:\n        - name\n      type: object\n    customer:\n      properties:\n        Address:\n          $ref: \"#/components/schemas/address\"\n        CustomerReference:\n          type: string\n        Email:\n          type: string\n        Location:\n          $ref: \"#/components/schemas/location\"\n        Name:\n          type: string\n        PhoneNumber:\n          type: string\n      type: object\n    customer-v2:\n      properties:\n        Address:\n          $ref: \"#/components/schemas/address-v2\"\n        DisplayPhoneNumber:\n          description: If you implement phone masking provide a masked number here\n          type: string\n        Email:\n          type: string\n        Name:\n          type: string\n        PhoneNumber:\n          description: The customer's real phone number\n          type: string\n      required:\n        - Name\n        - PhoneNumber\n        - Address\n      type: object\n    customerExperienceScoreDetail:\n      description: Details of how customer experience score has contributed to get the segmentation status\n      example:\n        hasPassed: false\n        maximumScore: 50\n        requiredScore: 40\n        score: 12\n        scoreType: 0\n      properties:\n        hasPassed:\n          description: Represent if the restaurant has passed the customer experience score criteria\n          type: boolean\n        maximumScore:\n          description: Represent the maximum customer experience score that can be achieved by the restaurant\n          type: number\n        requiredScore:\n          description: Represent the customer experience score required to pass the customer experience score criteria\n          type: number\n        score:\n          description: Represent the customer experience score achieved by the restaurant\n          type: number\n        scoreType:\n          $ref: \"#/components/schemas/scoreTypes\"\n          description: Represent the type of score data. It would always be number (0) customer experience score.\n      type: object\n    delivery-abort-with-reason:\n      example:\n        deliveryPartnerReasonCode: courier_issue\n        reason: driver_problem\n      properties:\n        deliveryPartnerReasonCode:\n          description: The original reason code from the delivery partner\n          example: package_damaged\n          format: string\n          type: string\n        reason:\n          description: The detailed Just Eat delivery partner cancellation reason code\n          enum:\n            - cancelled_by_requester\n            - package_not_available\n            - restaurant_closed\n            - package_damaged\n            - address_error\n            - driver_problem\n            - could_not_reach_customer\n            - technical_problem\n            - incorrect_package\n            - other\n          example: incorrect_package\n          type: string\n      type: object\n    delivery-details:\n      example:\n        TimeStampWithUtcOffset: 2018-03-10T14:45:28.7537228+00:00\n      properties:\n        Location:\n          $ref: \"#/components/schemas/location\"\n        TimeStampWithUtcOffset:\n          description: This should represent the delivery detailed updated timestamp.\n          format: date-time\n          type: string\n      type: object\n    delivery-driver-assigned-details:\n      properties:\n        DriverContactNumber:\n          description: This should represent the driver's contact number.\n          example: \"07123456789\"\n          type: string\n        DriverName:\n          description: This should represent the driver's name.\n          example: David\n          type: string\n        EtaAtDeliveryAddress:\n          description: This should represent the delivery partner's best guess at when the driver will arrive at the delivery address.\n          example: 2020-12-25T16:45:28.7537228+00:00\n          format: date-time\n          type: string\n        EtaAtRestaurant:\n          description: This should represent the delivery partner's best guess at when the driver will arrive at the restaurant. In other words, it should not just contain the pick-up time initially requested by Just Eat.\n          example: 2020-12-25T15:30:28.7537228+00:00\n          format: date-time\n          type: string\n        Location:\n          $ref: \"#/components/schemas/location\"\n        TimeStampWithUtcOffset:\n          description: This should represent the driver assigned timestamp.\n          example: 2020-12-25T15:45:28.7537228+00:00\n          format: date-time\n          type: string\n        VehicleDetails:\n          $ref: \"#/components/schemas/vehicle-details\"\n      type: object\n    delivery-driver-details-with-eta:\n      example:\n        EtaAtDeliveryAddress: 2018-03-10T15:45:28.7537228+00:00\n        Location:\n          Accuracy: 12.814\n          Heading: 357.10382\n          Latitude: 51.51641\n          Longitude: -0.103198\n          Speed: 8.68\n        TimeStampWithUtcOffset: 2018-03-10T14:45:28.7537228+00:00\n      properties:\n        EtaAtDeliveryAddress:\n          description: This should represent the delivery partner's best guess at when the driver will arrive at the delivery address.\n          format: date-time\n          type: string\n        Location:\n          $ref: \"#/components/schemas/location\"\n        TimeStampWithUtcOffset:\n          description: This should represent the Eta calculated timestamp.\n          format: date-time\n          type: string\n      type: object\n    delivery-driver-location:\n      properties:\n        EtaAtDeliveryAddress:\n          description: This should represent the delivery partner's best guess at when the driver will arrive at the delivery address.\n          example: 2020-12-25T16:45:28.7537228+00:00\n          format: date-time\n          type: string\n        EtaAtRestaurant:\n          description: This should represent the delivery partner's best guess at when the driver will arrive at the restaurant.\n          example: 2020-12-25T16:30:28.7537228+00:00\n          format: date-time\n          type: string\n        Location:\n          $ref: \"#/components/schemas/location\"\n          example:\n            Accuracy: 12.814\n            Heading: 357.10382\n            Latitude: 51.51641\n            Longitude: -0.103198\n            Speed: 8.68\n        TimeStampWithUtcOffset:\n          description: This should represent the location updated timestamp.\n          example: 2020-12-25T15:45:28.7537228+00:00\n          format: date-time\n          type: string\n      type: object\n    delivery-driver-unassigned-details:\n      properties:\n        Comment:\n          description: This should represent the comment on the unassignment.\n          example: Order was not ready\n          type: string\n        DriverContactNumber:\n          description: This should represent the driver's contact number.\n          example: \"07123456789\"\n          type: string\n        DriverName:\n          description: This should represent the driver's name.\n          example: David McDriverson\n          type: string\n        EtaAtDeliveryAddress:\n          description: This should represent the delivery partner's best guess at when the driver will arrive at the delivery address.\n          example: 2020-12-25T16:45:28.7537228+00:00\n          format: date-time\n          type: string\n        EtaAtRestaurant:\n          description: This should represent the delivery partner's best guess at when the driver will arrive at the restaurant. In other words, it should not just contain the pick-up time initially requested by Just Eat.\n          example: 2020-12-25T16:30:28.7537228+00:00\n          format: date-time\n          type: string\n        \"Location:\":\n          $ref: \"#/components/schemas/location\"\n          description: This should represent the driver's geographic location (longitude and latitude)\n        Reason:\n          description: This should represent the delivery partner's reason for unassigning themselves from the order.\n          example: package_not_ready\n          type: string\n        TimeStampWithUtcOffset:\n          description: This should represent the driver unassigned timestamp.\n          example: 2020-12-25T15:30:28.7537228+00:00\n          format: date-time\n          type: string\n        UnassignedBy:\n          description: This should represent the actor who triggered unassignment.\n          example: operation\n          type: string\n      type: object\n    delivery-eta-minutes:\n      example:\n        Approximate: null\n        RangeLower: 35\n        RangeUpper: 50\n      nullable: true\n      properties:\n        Approximate:\n          description: Approximate delivery eta in minutes\n          format: int32\n          nullable: true\n          type: integer\n        RangeLower:\n          description: Lower bound of delivery eta in minutes\n          format: int32\n          nullable: true\n          type: integer\n        RangeUpper:\n          description: Upper bound of delivery eta in minutes\n          format: int32\n          nullable: true\n          type: integer\n      type: object\n    delivery-pool:\n      example:\n        name: Toronto - West\n        restaurants:\n          - 123\n          - 456\n      properties:\n        name:\n          description: The name of the pool, used by operations teams, in reports, etc.\n          type: string\n        restaurants:\n          description: A list of Just Eat restaurant ids served by the delivery pool.\n          items:\n            format: int32\n            type: number\n          type: array\n      type: object\n    delivery-pool-hours:\n      example:\n        friday:\n          closed: false\n          poolTimes:\n            - endTime: 01:00\n              startTime: 12:00\n        monday:\n          closed: false\n          poolTimes:\n            - endTime: 21:00\n              startTime: 09:00\n        saturday:\n          closed: false\n          poolTimes:\n            - endTime: 23:00\n              startTime: 11:00\n        sunday:\n          closed: false\n          poolTimes:\n            - endTime: 19:00\n              startTime: 13:00\n        thursday:\n          closed: false\n          poolTimes:\n            - endTime: 03:00\n              startTime: 12:00\n        tuesday:\n          closed: true\n          poolTimes:\n            - endTime: 19:00\n              startTime: 10:00\n        wednesday:\n          closed: false\n          poolTimes:\n            - endTime: 18:00\n              startTime: 08:00\n      properties:\n        friday:\n          properties:\n            closed:\n              description: true if the pool is closed for the day\n              type: boolean\n            poolTimes:\n              description: pool start and end times for the day\n              items:\n                properties:\n                  endTime:\n                    description: pool end time for Friday (HH:mm)\n                    type: string\n                  startTime:\n                    description: pool start time for Friday (HH:mm)\n                    type: string\n                required:\n                  - startTime\n                  - endTime\n                type: object\n              type: array\n          required:\n            - poolTimes\n          type: object\n        monday:\n          properties:\n            closed:\n              description: true if the pool is closed for the day\n              type: boolean\n            poolTimes:\n              description: pool start and end times for the day\n              items:\n                properties:\n                  endTime:\n                    description: pool end time for Monday (HH:mm)\n                    type: string\n                  startTime:\n                    description: pool start time for Monday (HH:mm)\n                    type: string\n                required:\n                  - startTime\n                  - endTime\n                type: object\n              type: array\n          required:\n            - poolTimes\n          type: object\n        saturday:\n          properties:\n            closed:\n              description: true if the pool is closed for the day\n              type: boolean\n            poolTimes:\n              description: pool start and end times for the day\n              items:\n                properties:\n                  endTime:\n                    description: pool end time for Saturday (HH:mm)\n                    type: string\n                  startTime:\n                    description: pool start time for Saturday (HH:mm)\n                    type: string\n                required:\n                  - startTime\n                  - endTime\n                type: object\n              type: array\n          required:\n            - poolTimes\n          type: object\n        sunday:\n          properties:\n            closed:\n              description: true if the pool is closed for the day\n              type: boolean\n            poolTimes:\n              description: pool start and end times for the day\n              items:\n                properties:\n                  endTime:\n                    description: pool end time for Sunday (HH:mm)\n                    type: string\n                  startTime:\n                    description: pool start time for Sunday (HH:mm)\n                    type: string\n                required:\n                  - startTime\n                  - endTime\n                type: object\n              type: array\n          required:\n            - poolTimes\n          type: object\n        thursday:\n          properties:\n            closed:\n              description: true if the pool is closed for the day\n              type: boolean\n            poolTimes:\n              description: pool start and end times for the day\n              items:\n                properties:\n                  endTime:\n                    description: pool end time for Thursday (HH:mm)\n                    type: string\n                  startTime:\n                    description: pool start time for Thursday (HH:mm)\n                    type: string\n                required:\n                  - startTime\n                  - endTime\n                type: object\n              type: array\n          required:\n            - poolTimes\n          type: object\n        tuesday:\n          properties:\n            closed:\n              description: true if the pool is closed for the day\n              type: boolean\n            poolTimes:\n              description: pool start and end times for the day\n              items:\n                properties:\n                  endTime:\n                    description: pool end time for Tuesday (HH:mm)\n                    type: string\n                  startTime:\n                    description: pool start time for Tuesday (HH:mm)\n                    type: string\n                required:\n                  - startTime\n                  - endTime\n                type: object\n              type: array\n          required:\n            - poolTimes\n          type: object\n        wednesday:\n          properties:\n            closed:\n              description: true if the pool is closed for the day\n              type: boolean\n            poolTimes:\n              description: pool start and end times for the day\n              items:\n                properties:\n                  endTime:\n                    description: pool end time for Wednesday (HH:mm)\n                    type: string\n                  startTime:\n                    description: pool start time for Wednesday (HH:mm)\n                    type: string\n                required:\n                  - startTime\n                  - endTime\n                type: object\n              type: array\n          required:\n            - poolTimes\n          type: object\n      required:\n        - monday\n        - tuesday\n        - wednesday\n        - thursday\n        - friday\n        - saturday\n        - sunday\n      type: object\n    delivery-restaurantslist:\n      properties:\n        restaurants:\n          description: A list of Just Eat restaurant ids served by the pool.\n          example:\n            - 10202\n            - 10203\n          items:\n            format: int32\n            type: number\n          type: array\n      type: object\n    document:\n      properties:\n        documentMetadata:\n          $ref: \"#/components/schemas/documentMetadata\"\n          description: Metadata of document being added\n        documentType:\n          $ref: \"#/components/schemas/documentType\"\n          description: Type of document being added\n      type: object\n    documentContentType:\n      description: The content type of this document. Can be used by the client to display the file correctly\n      enum:\n        - image/jpeg\n        - image/png\n        - application/pdf\n        - application/msword\n      type: string\n    documentLinkResponse:\n      example:\n        headers:\n          x-amz-meta-documenttype: Menu\n          x-amz-server-side-encryption: AES256\n        href: https://s3.eu-west-1.amazonaws.com/uk/restaurants/restaurantId/fileName?X-Amz-Expires=180\n      properties:\n        documentKey:\n          description: The name of the document\n          type: string\n        headers:\n          additionalProperties:\n            type: string\n          description: Headers that will be passed when calling S3\n          type: object\n        href:\n          description: The signed URL for S3. It includes the random generated file name which is usually a GUID.\n          type: string\n        method:\n          description: The method the client should use when calling S3\n          enum:\n            - GET\n            - PUT\n            - DELETE\n          type: string\n      type: object\n    documentMetadata:\n      properties:\n        contentType:\n          $ref: \"#/components/schemas/documentContentType\"\n          description: Content type of the document\n        dateAdded:\n          description: When the document is added [YYYY-MM-DDThh:mm:ssZ (UTC)]\n          format: date-time\n          type: string\n        documentKey:\n          description: Key of document being added. This is the s3 object key that you have already added\n          example: images/signup/menu-1.jpg\n          type: string\n      type: object\n    documentRejectionType:\n      description: The rejection reason of a document\n      enum:\n        - Other\n        - IncorrectDocument\n        - NotClearEnough\n        - Outdated\n        - NoOwnersName\n        - NoOwnersPhoto\n        - NoBusinessAddress\n        - NoBusinessName\n        - MissingPages\n        - Handwritten\n        - MissingInformation\n        - NoAllergenKey\n        - LogoNameDoesNotMatch\n        - CopyrightInfringement\n        - PhotoFromInternet\n      type: string\n    documentReviews:\n      properties:\n        rejectionReasons:\n          description: An array of rejection reasons\n          items:\n            properties:\n              comment:\n                description: Any other review comments\n                type: string\n              type:\n                $ref: \"#/components/schemas/documentRejectionType\"\n            type: object\n          maxItems: 10\n          minItems: 0\n          type: array\n      type: object\n    documentState:\n      description: The state of a document\n      enum:\n        - NotAvailable\n        - Received\n        - ReadyForInitialReview\n        - InitialToBeRejected\n        - InitialNoIssuesFound\n        - InitialReviewRejected\n        - ReadyForFinalReview\n        - FinalReviewNoIssuesFound\n        - FinalReviewToBeRejected\n        - FinalReviewRejected\n        - Approved\n      type: string\n    documentStateUpdate:\n      properties:\n        documentState:\n          $ref: \"#/components/schemas/documentState\"\n          description: The new state of the document\n          type: string\n      type: object\n    documentType:\n      description: The type of the document\n      enum:\n        - Menu\n        - PhotoId\n        - AddressProof\n        - FsaCertificate\n        - Logo\n        - OwnershipInfo\n        - Shopfront\n      type: string\n    driver-location:\n      properties:\n        Location:\n          $ref: \"#/components/schemas/location-v2\"\n        OrderId:\n          type: string\n        TimeStamp:\n          format: date-time\n          type: string\n      type: object\n    driver-status:\n      properties:\n        DriverContactNumber:\n          type: string\n        DriverName:\n          type: string\n        EstimatedDeliveryTime:\n          format: date-time\n          type: string\n        EstimatedPickupTime:\n          format: date-time\n          type: string\n        Event:\n          enum:\n            - DriverAssigned\n            - DriverAtRestaurant\n            - OnItsWay\n            - AtDeliveryAddress\n            - Delivered\n          type: string\n        OrderId:\n          type: string\n        TimeStamp:\n          format: date-time\n          type: string\n      type: object\n    emailaddress:\n      properties:\n        EmailAddress:\n          description: An email address for an account.\n          type: string\n      type: object\n    estimated-delivery-time:\n      properties:\n        DurationInMinutes:\n          type: string\n        RestaurantReference:\n          type: string\n      type: object\n    estimated-time:\n      example:\n        bestGuess: 00:35:00\n      properties:\n        bestGuess:\n          description: Your best estimation (hh:mm:ss)\n          type: string\n      type: object\n    eta-estimate:\n      properties:\n        bestGuess:\n          description: This should represent the delivery partner's best guess at when the driver will arrive at the restaurant.\n          format: date-time\n          type: string\n        estimatedAt:\n          description: This is the time at which you are doing the estimation\n          format: date-time\n          type: string\n      type: object\n    extensibleObject:\n      additionalProperties: true\n      type: object\n    fee:\n      properties:\n        Type:\n          type: string\n        Value:\n          format: money\n          type: number\n      type: object\n    fulfillment:\n      properties:\n        Method:\n          type: string\n        PickupTime:\n          format: date-time\n          type: string\n        Table:\n          type: string\n      type: object\n    fulfilment-v2:\n      example:\n        DueAsap: false\n        DueDate: 2020-01-01T09:00:00.000Z\n        Method: Delivery\n      properties:\n        DueAsap:\n          description: If food should be delivered ASAP\n          type: boolean\n        DueDate:\n          description: The time the customer expects the food. Time must be in the future\n          format: date-time\n          type: string\n        Method:\n          enum:\n            - Delivery\n            - Collection\n          type: string\n      required:\n        - Method\n        - DueDate\n      type: object\n    hygieneScheme:\n      description: Denotes the type of hygiene scheme supported\n      enum:\n        - 0\n        - 1\n        - 2\n      example: 1\n      type: integer\n      x-enumNames:\n        - Unknown\n        - FHRS\n        - FHIS\n    hygieneScoreDetail:\n      description: Details of hygiene rating experience score has contributed to get the segmentation status\n      example:\n        hasPassed: true\n        maximumScore: 5\n        requiredScore: 3\n        scheme: 1\n        score: 5\n        scoreType: 0\n      properties:\n        hasPassed:\n          description: Represent if the restaurant has passed the hygiene score criteria\n          type: boolean\n        maximumScore:\n          anyOf:\n            - type: number\n            - type: string\n            - type: object\n          description: Represent the maximum hygiene score that can be achieved. Based in the score type value, type of this field can be string or number of in future anything else\n          nullable: true\n        requiredScore:\n          anyOf:\n            - type: number\n            - type: string\n            - type: object\n          description: Represent the hygiene score required to pass hygiene criteria. Based in the score type value, type of this field can be string or number of in future anything else\n        scheme:\n          $ref: \"#/components/schemas/hygieneScheme\"\n          description: Represent the hygiene scheme used by the restaurant\n        score:\n          anyOf:\n            - type: number\n            - type: string\n            - type: object\n          description: Represent the hygiene score achieved by restaurant. Based in the score type value, type of this field can be string or number of in future anything else\n        scoreType:\n          $ref: \"#/components/schemas/scoreTypes\"\n          description: Represent the type of score data. Value of this field will depend which hygiene method is supported by restaurant.\n      type: object\n    initialRestaurantRequest:\n      example:\n        address:\n          city: London\n          lines:\n            - Fleet Place House\n            - Fleet Place\n          postalCode: EC4M 7RF\n        name: Test Restaurant\n        owner:\n          emailAddress: restaurant@example.com\n          phoneNumber: \"0791231234\"\n      properties:\n        address:\n          description: The address of the restaurant\n          properties:\n            city:\n              description: The name of the city the restaurant is located\n              type: string\n            lines:\n              description: The address lines the restaurant is located\n              items:\n                type: string\n              maxItems: 3\n              minItems: 1\n              type: array\n            postalCode:\n              description: The post code the restaurant is located\n              type: string\n          type: object\n        name:\n          description: The name of the restaurant\n          type: string\n        owner:\n          description: The owner of the restaurant\n          properties:\n            emailAddress:\n              description: The email address of the restaurant owner\n              type: string\n            familyName:\n              description: The last name of the restaurant owner\n              type: string\n            givenName:\n              description: The first name of the restaurant owner\n              type: string\n            phoneNumber:\n              description: The phone number of the restaurant owner\n              type: string\n          type: object\n      required:\n        - name\n        - address\n        - owner\n      type: object\n    item:\n      properties:\n        Description:\n          type: string\n        Items:\n          items:\n            $ref: \"#/components/schemas/item\"\n          type: array\n        OptionReference:\n          type: string\n        Quantity:\n          format: int32\n          type: number\n        Reference:\n          type: string\n      type: object\n    item-v2:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/item-v2\"\n          type: array\n        Name:\n          type: string\n        Quantity:\n          type: integer\n        Reference:\n          type: string\n        UnitPrice:\n          format: money\n          type: integer\n      type: object\n    items-v2:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/item-v2\"\n          type: array\n        Name:\n          type: string\n        Quantity:\n          minimum: 1\n          type: integer\n        Reference:\n          description: The item's ID that you hold\n          type: string\n        TotalPrice:\n          description: Price of this item x quantity and all sub items\n          format: money\n          type: number\n        UnitPrice:\n          format: money\n          type: integer\n      required:\n        - TotalPrice\n        - Reference\n        - Name\n        - Quantity\n      type: object\n    late-order-compensation-options:\n      items:\n        $ref: \"#/components/schemas/LateOrderCompensationOption\"\n        type: object\n      type: array\n    late-order-compensation-query:\n      example:\n        CompensationOptions:\n          - Amount: 200\n            IsRecommended: false\n          - Amount: 300\n            IsRecommended: true\n          - Amount: 400\n            IsRecommended: false\n        OrderId: wiej234idf09i29jijgf4\n        RestaurantId: \"110230\"\n        Tenant: uk\n      properties:\n        compensationOptions:\n          $ref: \"#/components/schemas/late-order-compensation-options\"\n          description: List of possible options for compensation\n        orderId:\n          description: Just Eat order identifier\n          type: string\n        restaurantId:\n          description: Just Eat restaurant identifier\n          type: string\n        tenant:\n          description: Tenant (Country) of order restaurant.\n          type: string\n      type: object\n    late-order-query:\n      example:\n        OrderId: wiej234idf09i29jijgf4\n        RestaurantId: \"110230\"\n        Tenant: uk\n      properties:\n        orderId:\n          description: Just Eat order identifier\n          type: string\n        restaurantId:\n          description: Just Eat restaurant identifier\n          type: string\n        tenant:\n          description: Tenant (Country) of order restaurant.\n          type: string\n      type: object\n    lines-v2:\n      properties:\n        LastCardDigits:\n          type: string\n        Paid:\n          type: boolean\n        ServiceFee:\n          format: double\n          type: number\n        Type:\n          enum:\n            - Cash\n            - Card\n            - AccountCredit\n            - Voucher\n          type: string\n        Value:\n          format: money\n          type: number\n      required:\n        - Type\n      type: object\n    local-date-time:\n      description: A local date time object, conforming to `ISO-8601`, but with only a partial time representation and no time offset.\n      pattern: ^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?$\n      type: string\n    location:\n      description: GeoLocation object containing latitude and longitude values.\n      example:\n        Accuracy: 12.814\n        Heading: 357.10382\n        Latitude: 51.51641\n        Longitude: -0.103198\n        Speed: 8.68\n      properties:\n        Accuracy:\n          description: This should represent the accuracy of driver's location.\n          format: double\n          type: number\n        Heading:\n          description: This should represent the degree of heading direction, for example, 0 is north, 90 is east.\n          format: double\n          type: number\n        Latitude:\n          description: This should represent the latitude of the driver's location.\n          format: double\n          type: number\n        Longitude:\n          description: This should represent the longitude of the driver's location.\n          format: double\n          type: number\n        Speed:\n          description: This should represent the travel speed of the driver.\n          format: double\n          type: number\n      required:\n        - Latitude\n        - Longitude\n      type: object\n    location-v2:\n      example:\n        Latitude: 51.51641\n        Longitude: -0.103198\n      properties:\n        Latitude:\n          format: double\n          type: number\n        Longitude:\n          format: double\n          type: number\n      required:\n        - Latitude\n        - Longitude\n      type: object\n    menu-ingestion-complete:\n      example:\n        correlationId: 64bef5ee-7265-47f8-9aee-28bc74f00b13\n        fault:\n          errors:\n            - code: \"123\"\n              description: \"Invalid variation: 15237d6c-c866-55da-9e61-b4f59dcab9ae - variations must be associated with at least one availability\"\n            - code: \"145\"\n              description: \"Invalid availability ID: menu-105369-availabilities - availability IDs must be integers\"\n          id: 70e307df-0156-4d3c-ab92-dd57a103350b\n        restaurantId: \"123456\"\n        result: fail\n        tenant: uk\n        timestamp: 2020-01-01T00:00:00Z\n      properties:\n        correlationId:\n          description: The ID of the execution which has been completed\n          type: string\n        fault:\n          description: Details of the fault which caused the menu ingestion to fail. This is only present if menu ingestion did not complete successfully\n          properties:\n            errors:\n              description: Details of errors which caused the fault\n              items:\n                properties:\n                  code:\n                    description: An alphanumeric code for the error\n                    type: string\n                  description:\n                    description: A description of the error to help you resolve the issue\n                    type: string\n                type: object\n              type: array\n            id:\n              description: A unique ID for the fault\n              type: string\n          type: object\n        restaurantId:\n          description: The Just Eat restaurant ID\n          type: string\n        result:\n          description: The result of the menu ingestion process\n          enum:\n            - success\n            - fail\n          format: enum\n          type: string\n        tenant:\n          description: Country code for the market the restaurant is in\n          enum:\n            - au\n            - dk\n            - es\n            - ie\n            - it\n            - no\n            - uk\n            - nz\n          format: enum\n          type: string\n        timestamp:\n          description: The ISO-8601 datetime at which the menu ingestion completed\n          format: date-time\n          type: string\n      type: object\n    object:\n      type: object\n    on-its-way-details:\n      properties:\n        EstimatedArrivalTime:\n          description: This should represent the delivery partner's best guess at when the driver will arrive at the customer's address. In other words, it should not just contain the delivery time initially requested by Just Eat.\n          example: 2020-12-25T16:45:28.7537228+00:00\n          format: date-time\n          type: string\n        Location:\n          $ref: \"#/components/schemas/location\"\n        TimeStampWithUtcOffset:\n          description: This should represent the driver on its ways timestamp.\n          example: 2020-12-25T15:30:28.7537228+00:00\n          format: date-time\n          type: string\n      type: object\n    onItsWayPercentage:\n      description: Details of how on its way experience score has contributed to get the segmentation status\n      example:\n        hasPassed: true\n        requiredScore: 70\n        score: 84\n        scoreType: 1\n      properties:\n        hasPassed:\n          description: Represent if the restaurant has passed the on-its-way threshold\n          type: boolean\n        requiredScore:\n          description: Represent the on its way percentage required to pass the on-its-way threshold\n          type: number\n        score:\n          description: Represent the on-its-way percentage of restaurant\n          type: number\n        scoreType:\n          $ref: \"#/components/schemas/scoreTypes\"\n          description: Represent the type of score data. It would always be percentage (1) for on-its-way.\n      type: object\n    order-accept-request:\n      example:\n        TimeAcceptedFor: 2018-03-10T14:45:28Z\n      properties:\n        TimeAcceptedFor:\n          format: date-time\n          type: string\n      type: object\n    order-accepted:\n      example:\n        AcceptedFor: 2018-03-10T14:45:28Z\n        Event: OrderAccepted\n        OrderId: \"123456\"\n      properties:\n        AcceptedFor:\n          format: date-time\n          type: string\n        Event:\n          type: string\n        OrderId:\n          type: string\n      type: object\n    order-address:\n      properties:\n        City:\n          type: string\n        Geolocation:\n          properties:\n            Latitude:\n              format: double\n              type: number\n            Longitude:\n              format: double\n              type: number\n          type: object\n        Lines:\n          items:\n            type: string\n          type: array\n        PostalCode:\n          type: string\n      type: object\n    order-cancel-request:\n      example:\n        Message: Customer requested the order to be cancelled\n      properties:\n        Message:\n          description: Reason why this order is being cancelled.\n          type: string\n      type: object\n    order-cancelled:\n      example:\n        Event: OrderCancelled\n        OrderId: ijdhpy7bdusgtc28bapspa\n        Reason: system_cancelled_other\n      properties:\n        Event:\n          type: string\n        OrderId:\n          type: string\n        Reason:\n          description: The reason the order was cancelled.\n          enum:\n            - cust_cancelled_changed_mind\n            - cust_cancelled_delivery_too_long\n            - cust_cancelled_made_mistake\n            - cust_cancelled_other\n            - delivery_partner_cancelled\n            - rest_cancelled_customer_absent\n            - rest_cancelled_customer_requested\n            - rest_cancelled_declined\n            - rest_cancelled_drivers_unavailable\n            - rest_cancelled_fake_order\n            - rest_cancelled_other\n            - rest_cancelled_out_of_stock\n            - rest_cancelled_too_busy\n            - system_cancelled_other\n            - system_cancelled_test_order\n          type: string\n      type: object\n    order-due-date-request:\n      example:\n        DueDate: 2019-12-25T14:45:28Z\n      properties:\n        DueDate:\n          description: The updated ETA for the order\n          format: date-time\n          type: string\n      type: object\n    order-item:\n      items:\n        properties:\n          Items:\n            $ref: \"#/components/schemas/order-item\"\n          Name:\n            type: string\n          Quantity:\n            type: number\n          Reference:\n            type: string\n          TotalPrice:\n            format: money\n            type: number\n          UnitPrice:\n            format: money\n            type: number\n        type: object\n      type: array\n    order-item-restriction:\n      properties:\n        Type:\n          description: The type of restricted item contained in the order. The only supported value is 'Alcohol'.\n          enum:\n            - Alcohol\n          type: string\n      type: object\n    order-ready-for-preparation:\n      example:\n        Currency: GBP\n        Customer:\n          Id: Batman\n          Name: Bruce Wayne\n        CustomerNotes:\n          - Key: Floor\n            Value: 5th floor\n          - Key: Code\n            Value: Code 1234\n        Fulfilment:\n          Address:\n            City: London\n            Geolocation:\n              Latitude: 51.51641\n              Longitude: -0.103198\n            Lines:\n              - Fleet Place House\n              - Fleet Pl\n            PostalCode: EC4M 7RD\n          CustomerDueAsap: false\n          CustomerDueDate: 2018-03-10T14:45:28Z\n          Method: Delivery\n          PhoneNumber: \"+441234567890\"\n        IsTest: true\n        Items:\n          - Items:\n              - Items: []\n                Name: Fries\n                Quantity: 1\n                Reference: \"9876\"\n                Synonym: Regular\n                UnitPrice: 0\n              - Items: []\n                Name: Pepsi\n                Quantity: 2\n                Reference: \"6789\"\n                Synonym: 330ml\n                UnitPrice: 0\n            Name: Chicken Box Meal\n            Quantity: 2\n            Reference: \"1234\"\n            Synonym: \"\"\n            TotalPrice: 10\n            UnitPrice: 5\n          - Items: []\n            Name: Milkshake\n            Quantity: 1\n            Reference: \"4321\"\n            Synonym: \"\"\n            TotalPrice: 7.25\n            UnitPrice: 7.25\n        OrderId: XYZ123456\n        Payment:\n          Lines:\n            - Paid: false\n              Type: card\n              Value: 19.25\n        PlacedDate: 2018-03-10T14:45:28Z\n        PriceBreakdown:\n          Discount: 0\n          Fees:\n            Delivery: 1\n            Other: 0\n            ServiceCharge: 0.5\n          Items: 17.25\n          Taxes: 3.85\n          Tips: 0.5\n        Restaurant:\n          Address:\n            City: London\n            Geolocation:\n              Latitude: 51.4484\n              Longitude: -0.1504\n            Lines:\n              - Oldridge Road\n            PostalCode: SW12 8PW\n          Id: \"99999\"\n          Name: Just Eat Test Restaurant\n          PhoneNumber: \"+441200000000\"\n          Refererence: R99999\n        TotalPrice: 19.25\n      properties:\n        Currency:\n          type: string\n        Customer:\n          properties:\n            Id:\n              type: string\n            Name:\n              type: string\n          type: object\n        CustomerNotes:\n          additionalProperties:\n            type: string\n          type: object\n        Fulfilment:\n          properties:\n            Address:\n              properties:\n                City:\n                  type: string\n                Geolocation:\n                  $ref: \"#/components/schemas/location\"\n                Lines:\n                  items:\n                    type: string\n                  type: array\n                PostalCode:\n                  type: string\n              type: object\n            CustomerDueAsap:\n              type: boolean\n            CustomerDueDate:\n              format: date-time\n              type: string\n            Method:\n              enum:\n                - Delivery\n                - Collection\n              type: string\n            PhoneNumber:\n              type: string\n            PreparationTime:\n              format: timespan\n              type: string\n            PrepareFor:\n              format: date-time\n              type: string\n          type: object\n        IsTest:\n          type: boolean\n        Items:\n          items:\n            $ref: \"#/components/schemas/item-v2\"\n          type: array\n        OrderId:\n          type: string\n        Payment:\n          properties:\n            Lines:\n              items:\n                properties:\n                  Paid:\n                    type: boolean\n                  Type:\n                    enum:\n                      - card\n                      - cash\n                      - credit\n                      - other\n                    type: string\n                  Value:\n                    format: money\n                    type: number\n                type: object\n              type: array\n          type: object\n        PlacedDate:\n          format: date-time\n          type: string\n        PriceBreakdown:\n          properties:\n            Discount:\n              format: money\n              type: number\n            Fees:\n              properties:\n                Delivery:\n                  format: money\n                  type: number\n                Other:\n                  format: money\n                  type: number\n                ServiceCharge:\n                  format: money\n                  type: number\n              type: object\n            Items:\n              format: money\n              type: number\n            Taxes:\n              format: money\n              type: number\n            Tips:\n              format: money\n              type: number\n          type: object\n        Restaurant:\n          properties:\n            Address:\n              properties:\n                City:\n                  type: string\n                Geolocation:\n                  $ref: \"#/components/schemas/location\"\n                Lines:\n                  items:\n                    type: string\n                  type: array\n                PostalCode:\n                  type: string\n              type: object\n            Id:\n              type: string\n            Name:\n              type: string\n            PhoneNumber:\n              type: string\n            Reference:\n              type: string\n          type: object\n        TotalPrice:\n          format: money\n          type: number\n      type: object\n    order-reject-request:\n      example:\n        Message: Kitchen overloaded\n      properties:\n        Message:\n          description: Reason why this order is being rejected.\n          type: string\n      type: object\n    order-rejected:\n      example:\n        Event: OrderRejected\n        RejectedAt: 2018-03-10T14:45:28Z\n        RejectedBy: \"123456\"\n        RejectedReason: Kitchen overloaded\n      properties:\n        Event:\n          type: string\n        RejectedAt:\n          format: date-time\n          type: string\n        RejectedBy:\n          type: string\n        RejectedReason:\n          type: string\n      type: object\n    order-request:\n      properties:\n        Basket:\n          type: string\n        Customer:\n          $ref: \"#/components/schemas/customer\"\n        CustomerNote:\n          type: string\n        DueDate:\n          format: date-time\n          type: string\n        EventUpdateUri:\n          type: string\n        FriendlyOrderReference:\n          type: string\n        Fulfillment:\n          $ref: \"#/components/schemas/fulfillment\"\n        IsRds:\n          type: boolean\n        OrderReference:\n          type: string\n        PartnerName:\n          type: string\n        PartnerSubscriptionId:\n          type: integer\n        Payment:\n          $ref: \"#/components/schemas/payment\"\n        PlacedDate:\n          format: date-time\n          type: string\n        RestaurantDetails:\n          $ref: \"#/components/schemas/restaurant-details\"\n        RestaurantReference:\n          type: string\n        TimeStampAccepted:\n          format: date-time\n          type: string\n      required:\n        - PlacedDate\n        - DueDate\n        - OrderReference\n        - Payment\n        - Customer\n        - Basket\n        - RestaurantDetails\n        - PartnerSubscriptionId\n      type: object\n    order-request-v2:\n      properties:\n        Customer:\n          $ref: \"#/components/schemas/customer-v2\"\n        CustomerNotes:\n          example:\n            NoteForDelivery: Red door\n            NoteForRestaurant: Make it spicy\n          properties:\n            NoteForDelivery:\n              type: string\n            NoteForRestaurant:\n              type: string\n          type: object\n        FriendlyOrderReference:\n          type: string\n        Fulfilment:\n          $ref: \"#/components/schemas/fulfilment-v2\"\n        IsTest:\n          type: boolean\n        Items:\n          items:\n            $ref: \"#/components/schemas/items-v2\"\n          type: array\n        OrderReference:\n          type: string\n        Payment:\n          $ref: \"#/components/schemas/payment-v2\"\n        Restaurant:\n          $ref: \"#/components/schemas/restaurant-v2\"\n        TotalPrice:\n          format: double\n          type: number\n      required:\n        - OrderReference\n        - TotalPrice\n        - Restaurant\n        - Customer\n        - Fulfilment\n        - Payment\n        - Items\n      type: object\n    order-status-request:\n      example:\n        Status: Accepted\n        TimeStamp: 2018-03-10T14:45:28Z\n      properties:\n        Data:\n          additionalProperties:\n            type: string\n          type: object\n        Message:\n          type: string\n        Status:\n          description: The requested new state of the order\n          enum:\n            - InKitchen\n            - FailedToSendToKitchen\n            - Accepted\n            - Rejected\n          type: string\n        TimeAcceptedFor:\n          format: date-time\n          type: string\n        TimeStamp:\n          format: date-time\n          type: string\n      required:\n        - Status\n        - TimeStamp\n      type: object\n    order-time-updated:\n      example:\n        dayOfWeek: Monday\n        lowerBoundMinutes: 35\n        restaurantId: \"123456\"\n        serviceType: Delivery\n        upperBoundMinutes: 50\n      properties:\n        dayOfWeek:\n          description: The day of the week that has been updated.\n          enum:\n            - Sunday\n            - Monday\n            - Tuesday\n            - Wednesday\n            - Thursday\n            - Friday\n            - Saturday\n          format: enum\n          type: string\n        lowerBoundMinutes:\n          description: Order time lower bound value, in minutes.\n          format: int32\n          type: integer\n        restaurantId:\n          description: The Just Eat restaurant ID\n          type: string\n        serviceType:\n          description: Service type of the order time.\n          enum:\n            - Delivery\n            - Collection\n          format: enum\n          type: string\n        upperBoundMinutes:\n          description: Order time upper bound value, in minutes.\n          format: int32\n          type: integer\n      type: object\n    orderScoreDetail:\n      description: Details of how order score has contributed to get the segmentation status\n      example:\n        hasPassed: true\n        maximumScore: 50\n        requiredScore: 20\n        score: 48\n        scoreType: 0\n      properties:\n        hasPassed:\n          description: Represent if the restaurant has passed the order score criteria\n          type: boolean\n        maximumScore:\n          description: Represent the maximum order score that can be achieved by the restaurant\n          type: number\n        requiredScore:\n          description: Represent the order score required to pass the order score criteria\n          type: number\n        score:\n          description: Represent the order score achieved by the restaurant\n          type: number\n        scoreType:\n          $ref: \"#/components/schemas/scoreTypes\"\n          description: Represent the type of score data. It would always be number (0) customer experience score.\n      type: object\n    orderTime:\n      description: The object representing order time entry\n      example:\n        dayOfWeek: Monday\n        lowerBoundMinutes: 35\n        serviceType: Delivery\n        upperBoundMinutes: 50\n      properties:\n        dayOfWeek:\n          description: Day of week for order time\n          enum:\n            - Sunday\n            - Monday\n            - Tuesday\n            - Wednesday\n            - Thursday\n            - Friday\n            - Saturday\n          type: string\n        lowerBoundMinutes:\n          description: Order time lower bound value, in minutes.\n          format: int32\n          type: integer\n        serviceType:\n          description: Service type of the order time\n          enum:\n            - Delivery\n            - Collection\n          type: string\n        upperBoundMinutes:\n          description: Order time upper bound value, in minutes.\n          format: int32\n          type: integer\n      type: object\n    partner-restaurant-temporary-offline-status:\n      example:\n        Message: Too busy\n        Status: TempOffline\n      properties:\n        Message:\n          type: string\n        Status:\n          enum:\n            - TempOffline\n            - ClosedToday\n            - None\n          type: string\n      type: object\n    password:\n      properties:\n        Password:\n          description: A password for a consumers account.\n          type: string\n      type: object\n    patch-delivery-pool:\n      example:\n        name: Toronto - North\n      properties:\n        name:\n          description: The name of the pool, used by operations teams, in reports, etc.\n          type: string\n        restaurants:\n          description: A list of Just Eat restaurant ids served by the delivery pool.\n          items:\n            format: int32\n            type: number\n          type: array\n      type: object\n    payment:\n      properties:\n        CardCharges:\n          format: money\n          type: number\n        CashOnDelivery:\n          type: boolean\n        DeliveryCharge:\n          format: money\n          type: number\n        DriverTipValue:\n          format: money\n          type: number\n        Fees:\n          items:\n            $ref: \"#/components/schemas/fee\"\n          type: array\n        RestaurantTipValue:\n          format: money\n          type: number\n        Total:\n          format: money\n          type: number\n      type: object\n    payment-v2:\n      example:\n        Fees:\n          - Type: card\n            Value: 0.25\n          - Type: delivery\n            Value: 3.5\n        Lines:\n          - LastCardDigits: \"1234\"\n            Paid: true\n            ServiceFee: 0\n            Type: Card\n            Value: 19.95\n        Tips:\n          - Type: driver\n            Value: 2.5\n      properties:\n        Fees:\n          items:\n            $ref: \"#/components/schemas/fee\"\n          type: array\n        Lines:\n          items:\n            $ref: \"#/components/schemas/lines-v2\"\n          type: array\n        PaidDate:\n          format: date-time\n          type: string\n        Taxes:\n          items:\n            $ref: \"#/components/schemas/tax-v2\"\n          type: array\n        Tips:\n          items:\n            $ref: \"#/components/schemas/fee\"\n          type: array\n      required:\n        - Lines\n      type: object\n    product-id-list:\n      items:\n        description: Array of partner product identifiers\n        type: string\n      type: array\n    ready-for-pickup:\n      properties:\n        Event:\n          enum:\n            - Ready for pickup\n          type: string\n        Timestamp:\n          format: date-time\n          type: string\n      type: object\n    resolve-attempted-delivery-cancel:\n      example:\n        ReasonCode: new_address_not_within_area\n      properties:\n        ReasonCode:\n          description: The reason the order has been cancelled\n          enum:\n            - new_address_not_within_area\n            - unable_to_reprepare\n            - driver_not_available\n            - area_unsafe\n            - customer_doesnt_want_anymore\n          type: string\n      type: object\n    resolve-attempted-delivery-redeliver:\n      example:\n        NewDueDate: 2018-03-10T14:45:28Z\n        Status: driver_at_address\n      properties:\n        NewDueDate:\n          description: Updated due date for delivery of the order\n          format: date-time\n          type: string\n        Status:\n          description: The current status of the order\n          enum:\n            - driver_at_address\n            - repreparing\n          type: string\n      type: object\n    restaurant:\n      example:\n        address:\n          city: London\n          lines:\n            - Fleet Place House\n            - Fleet Place\n          postalCode: EC4M 7RF\n        applicationMetadata:\n          applicationType: NonStandard\n          occupancyType: MultipleBusinessMultipleOwnership\n          premiseType: Van\n        applicationState: OpenApplication\n        bankDetails:\n          accountHolderName: John Doe\n          bankAccountNumber: \"12345678\"\n          bankName: Best Bank\n          bankSortCode: 12-34-56\n        createdDate: 2019-10-16T12:18:34.000Z\n        fulfilment:\n          description: The fulfillment options for the restaurant\n          type: DeliveryAndCollection\n        hygiene:\n          rating: \"4\"\n        lastUpdatedDate: 2019-10-16T12:18:34.000Z\n        menu:\n          requestedCuisines:\n            - Greek\n            - European\n        name: Test Restaurant\n        owner:\n          emailAddress: restaurant@example.com\n          familyName: Doe\n          givenName: John\n          phoneNumber: \"0791231234\"\n      properties:\n        address:\n          description: The address of the restaurant\n          properties:\n            city:\n              description: The name of the city the restaurant is located\n              type: string\n            lines:\n              description: The address lines the restaurant is located\n              items:\n                type: string\n              maxItems: 3\n              minItems: 1\n              type: array\n            postalCode:\n              description: The post code the restaurant is located\n              type: string\n          type: object\n        applicationMetadata:\n          description: Extra information about the restaurant, like the premises and ownership status\n          nullable: true\n          properties:\n            applicationType:\n              description: The type of sign up application i.e. Standard, Non-Standard.\n              enum:\n                - Unknown\n                - Standard\n                - NonStandard\n              nullable: true\n              type: string\n            occupancyType:\n              description: The nature of occupancy that restaurant is using e.g Single, Multiple businesses under one ownership, Multiple businesses under multiple ownership etc...\n              enum:\n                - Unknown\n                - Single\n                - MultipleBusinessSingleOwnership\n                - MultipleBusinessMultipleOwnership\n                - Other\n              nullable: true\n              type: string\n            premiseType:\n              description: The type of premises that restaurant is using e.g Pub, Hotel, Stall etc...\n              enum:\n                - Unknown\n                - HighStreet\n                - GhostKitchen\n                - Residential\n                - PubOrHotelSameName\n                - PubOrHotelDifferentName\n                - PubOrHotelLeased\n                - PubOrHotelUnknown\n                - Unit\n                - Stall\n                - ShoppingCentre\n                - Van\n                - Other\n              nullable: true\n              type: string\n          type: object\n        applicationState:\n          $ref: \"#/components/schemas/applicationState\"\n          description: The current application state of the restaurant\n        bankDetails:\n          description: Account holder information for the restaurant\n          properties:\n            accountHolderName:\n              description: The name on the bank account\n              type: string\n            bankAccountNumber:\n              description: The bank account number\n              type: string\n            bankName:\n              description: The name of the bank\n              type: string\n            bankSortCode:\n              description: The sort code\n              type: string\n          type: object\n        createdDate:\n          description: When the restaurant was created [YYYY-MM-DDThh:mm:ssZ (UTC)]\n          format: date-time\n          type: string\n        fulfilment:\n          description: The delivery type of the restaurant\n          properties:\n            type:\n              description: The delivery type of the restaurant\n              enum:\n                - DeliveryAndCollection\n                - CollectionOnly\n                - JustEatDelivery\n              type: string\n          type: object\n        hygiene:\n          description: The food hygiene rating for the restaurant\n          properties:\n            rating:\n              description: The rating score\n              type: string\n          type: object\n        lastUpdatedDate:\n          description: When the restaurant was last updated [YYYY-MM-DDThh:mm:ssZ (UTC)]\n          format: date-time\n          type: string\n        menu:\n          description: The restaurant menu\n          properties:\n            requestedCuisines:\n              description: The restaurant cuisines\n              items:\n                type: string\n              maxItems: 2\n              minItems: 1\n              type: array\n          type: object\n        name:\n          description: The name of the restaurant\n          type: string\n        owner:\n          description: The restaurant owner\n          properties:\n            emailAddress:\n              description: The email address of the restaurant owner\n              type: string\n            familyName:\n              description: The last name of the restaurant owner\n              type: string\n            givenName:\n              description: The first name of the restaurant owner\n              type: string\n            phoneNumber:\n              description: The phone number of the restaurant owner\n              type: string\n          type: object\n      type: object\n    restaurant-details:\n      properties:\n        Address:\n          type: string\n        City:\n          type: string\n        Email:\n          type: string\n        Id:\n          type: integer\n        Location:\n          $ref: \"#/components/schemas/location\"\n        Name:\n          type: string\n        PhoneNumber:\n          type: string\n        Postcode:\n          type: string\n      required:\n        - Id\n        - Email\n        - Name\n        - Address\n        - Location\n      type: object\n    restaurant-details-updated:\n      properties:\n        event:\n          enum:\n            - RestaurantUpdated\n          format: enum\n          type: string\n        restaurants:\n          items:\n            properties:\n              city:\n                type: string\n              firstLine:\n                type: string\n              id:\n                description: The JUST EAT restaurant id\n                format: integer\n                type: number\n              latitude:\n                format: float\n                type: number\n              longitude:\n                format: float\n                type: number\n              name:\n                type: string\n              postcode:\n                type: string\n            type: object\n          type: array\n        tenant:\n          description: The country the restaurant(s) exists in\n          type: string\n      type: object\n    restaurant-hours-changed:\n      properties:\n        Event:\n          enum:\n            - OpenHoursForRestaurantChanged\n          format: enum\n          type: string\n        OpenHours:\n          items:\n            properties:\n              CloseTime:\n                description: The close time (HH:mm) (Wide clock, i.e. if before start it is following day)\n                type: string\n              Closed:\n                description: The restaurant is closed for the day\n                type: boolean\n              DayOfWeek:\n                description: The day of the week the times are for.\n                enum:\n                  - Sunday\n                  - Monday\n                  - Tuesday\n                  - Wednesday\n                  - Thursday\n                  - Friday\n                  - Saturday\n                format: enum\n                type: string\n              OpenTime:\n                description: The open time (HH:mm)\n                type: string\n            type: object\n          type: array\n        RestaurantReference:\n          description: The JUST EAT Restaurant Id\n          type: string\n        Tenant:\n          description: The country the restaurant exists in\n          type: string\n      type: object\n    restaurant-information-updated:\n      properties:\n        RestaurantInformationUpdated:\n          properties:\n            RestaurantId:\n              description: The JUST EAT Restaurant Id\n              type: string\n            RestaurantInfo:\n              properties:\n                address:\n                  properties:\n                    city:\n                      type: string\n                    firstLine:\n                      type: string\n                    location:\n                      properties:\n                        lat:\n                          format: double\n                          type: number\n                        lng:\n                          format: double\n                          type: number\n                      type: object\n                    postcode:\n                      type: string\n                  type: object\n                allergenPhoneNumber:\n                  type: string\n                allergenUrl:\n                  type: string\n                alternativeOwnerName:\n                  type: string\n                alternativeOwnerNumber:\n                  type: string\n                brandName:\n                  type: string\n                companyNo:\n                  type: string\n                email:\n                  type: string\n                id:\n                  type: integer\n                legalName:\n                  type: string\n                logoUrl:\n                  type: string\n                mobileNumber:\n                  type: string\n                name:\n                  type: string\n                openingClosingTimes:\n                  properties:\n                    fridayClosed:\n                      type: boolean\n                    fridayClosingTimeOfDay:\n                      type: string\n                    fridayOpeningTimeOfDay:\n                      type: string\n                    mondayClosed:\n                      type: boolean\n                    mondayClosingTimeOfDay:\n                      type: string\n                    mondayOpeningTimeOfDay:\n                      type: string\n                    saturdayClosed:\n                      type: boolean\n                    saturdayClosingTimeOfDay:\n                      type: string\n                    saturdayOpeningTimeOfDay:\n                      type: string\n                    sundayClosed:\n                      type: boolean\n                    sundayClosingTimeOfDay:\n                      type: string\n                    sundayOpeningTimeOfDay:\n                      type: string\n                    thursdayClosed:\n                      type: boolean\n                    thursdayClosingTimeOfDay:\n                      type: string\n                    thursdayOpeningTimeOfDay:\n                      type: string\n                    tuesdayClosed:\n                      type: boolean\n                    tuesdayClosingTimeOfDay:\n                      type: string\n                    tuesdayOpeningTimeOfDay:\n                      type: string\n                    wednesdayClosed:\n                      type: boolean\n                    wednesdayClosingTimeOfDay:\n                      type: string\n                    wednesdayOpeningTimeOfDay:\n                      type: string\n                  type: object\n                ownerName:\n                  type: string\n                phoneNumber:\n                  type: string\n                seoName:\n                  type: string\n                signupReference:\n                  type: string\n              type: object\n            Tenant:\n              description: The country the restaurant exists in\n              type: string\n          type: object\n        event:\n          enum:\n            - RestaurantInformationUpdated\n          format: enum\n          type: string\n      type: object\n    restaurant-offline-status:\n      properties:\n        Event:\n          enum:\n            - RestaurantOfflineStatus\n          format: enum\n          type: string\n        RestaurantOfflineStatus:\n          $ref: \"#/components/schemas/RestaurantOfflineStatus\"\n        RestaurantReference:\n          description: The JUST EAT Restaurant Id\n          type: string\n      type: object\n    restaurant-status:\n      properties:\n        Event:\n          enum:\n            - RestaurantStatusChange\n          format: enum\n          type: string\n        Message:\n          deprecated: true\n          description: This field should not be used but has been left in the callback for backwards compatibility purposes\n          type: string\n        RestaurantReference:\n          description: The JUST EAT Restaurant Id\n          type: string\n        Status:\n          enum:\n            - online\n            - offline\n          format: enum\n          type: string\n      type: object\n    restaurant-v2:\n      oneOf:\n        - properties:\n            Id:\n              description: Our restaurant ID\n              type: integer\n          type: object\n        - properties:\n            Reference:\n              description: If we hold a mapping for your restaurant IDs to ours - use your ID here\n              type: string\n          type: object\n    restaurantEmailAddress:\n      properties:\n        emailAddress:\n          description: The email address of the restaurant that the login link will be sent to\n          type: string\n      type: object\n    scoreTypes:\n      description: Represent the type of score data. Value of this field will depend on the category.\n      enum:\n        - 0\n        - 1\n        - 2\n      example: 2\n      type: integer\n      x-enumNames:\n        - Number\n        - Percentage\n        - Custom\n    search-address:\n      description: The address of the restaurant\n      properties:\n        City:\n          description: City the restaurant is in\n          type: string\n        FirstLine:\n          description: First line of the restaurant's address\n          type: string\n        Latitude:\n          description: Latitude of the restaurant\n          format: double\n          type: number\n        Longitude:\n          description: Longitude of the restaurant\n          format: double\n          type: number\n        Postcode:\n          description: Postcode of the restaurant\n          type: string\n      type: object\n    search-restaurant:\n      properties:\n        Address:\n          $ref: \"#/components/schemas/search-address\"\n          description: The restaurant's address\n        DeliveryEtaMinutes:\n          $ref: \"#/components/schemas/delivery-eta-minutes\"\n          description: Information about the approximate delivery time\n        DriveDistance:\n          description: The distance to drive from restaurant to delivery location in miles\n          format: double\n          type: number\n        DriveInfoCalculated:\n          description: Flag indicating that the driving information has been calculated\n          type: boolean\n        Id:\n          description: The id of the restaurant\n          format: double\n          type: number\n        IsOpenNowForDelivery:\n          description: Indicates the restaurant is now open for delivery\n          type: boolean\n        Name:\n          description: The name of the restaurant\n          type: string\n        UniqueName:\n          description: The unique name of the restaurant on Just Eat\n          type: string\n        Url:\n          description: The URL of the restaurant's menu page\n          type: string\n      type: object\n    search-restaurants:\n      properties:\n        Restaurants:\n          description: A list of restaurants matching the search criteria\n          items:\n            $ref: \"#/components/schemas/search-restaurant\"\n          type: array\n      type: object\n    segmentationHistory:\n      description: Represents list of last four segmentation statuses, sorted reverse chronologically by assessment date.\n      example:\n        dateAssessed: 2019-12-31T00:00:00Z\n        hasLocalLegendCriteriaBeenMet: true\n        status: 1\n      properties:\n        dateAssessed:\n          description: Date and time when the segmentation assessment was made\n          format: date-time\n          type: string\n        hasLocalLegendCriteriaBeenMet:\n          description: Represents if the restaurant achieved local legend status at that point or not\n          type: boolean\n        status:\n          $ref: \"#/components/schemas/assessmentStatusTypes\"\n          description: The segmentation status for restaurant\n      type: object\n    segmentationHistoryList:\n      description: Represents list of last four segmentation statuses, sorted reverse chronologically by assessment date.\n      items:\n        $ref: \"#/components/schemas/segmentationHistory\"\n      type: array\n    segmentationStatus:\n      properties:\n        details:\n          $ref: \"#/components/schemas/segmentationStatusDetail\"\n          description: Represent the details of segmentation status\n        id:\n          description: The JUST EAT restaurant id\n          format: integer\n          type: number\n        lastUpdated:\n          description: Timestamp of last status change\n          format: date-time\n          type: string\n        status:\n          $ref: \"#/components/schemas/assessmentStatusTypes\"\n          description: The segmentation status for restaurant\n      type: object\n    segmentationStatusDetail:\n      description: Represent the details of segmentation status sub-scores\n      properties:\n        customerExperienceScore:\n          $ref: \"#/components/schemas/customerExperienceScoreDetail\"\n          description: Details of how customer experience score has contributed to get the segmentation status\n        hygiene:\n          $ref: \"#/components/schemas/hygieneScoreDetail\"\n          description: Details of hygiene rating experience score has contributed to get the segmentation status\n        onItsWayPercentage:\n          $ref: \"#/components/schemas/onItsWayPercentage\"\n          description: Details of how on its way experience score has contributed to get the segmentation status\n        orderScore:\n          $ref: \"#/components/schemas/orderScoreDetail\"\n          description: Details of how order score has contributed to get the segmentation status\n      type: object\n    send-to-pos-failed:\n      properties:\n        OrderId:\n          type: string\n      type: object\n    supportRequest:\n      properties:\n        body:\n          description: Detail of the request\n          type: string\n        orderid:\n          description: The id of the order this request relates to\n          type: string\n        subject:\n          description: What is this request about?\n          type: string\n      type: object\n    tax-v2:\n      properties:\n        Percentage:\n          format: double\n          type: number\n        Type:\n          type: string\n        Value:\n          format: money\n          type: number\n      required:\n        - Value\n        - Type\n        - Percentage\n      type: object\n    tenants:\n      enum:\n        - au\n        - ca\n        - dk\n        - es\n        - ie\n        - it\n        - nz\n        - uk\n      type: string\n    updateOrderTimeRequest:\n      description: Request object for order time update\n      example:\n        lowerBoundMinutes: 35\n        upperBoundMinutes: 50\n      properties:\n        lowerBoundMinutes:\n          description: Order time lower bound value, in minutes.\n          format: int32\n          type: integer\n        upperBoundMinutes:\n          description: Order time upper bound value, in minutes.\n          format: int32\n          type: integer\n      type: object\n    vehicle-details:\n      properties:\n        Vehicle:\n          example: Motorbike\n          type: string\n        VehicleRegistration:\n          example: JU51 SAY\n          type: string\n      type: object\n  securitySchemes:\n    Bearer:\n      bearerFormat: JWT\n      description: Bearer token authentication using a JSON Web Token (JWT).\n      scheme: bearer\n      type: http\n    api_key:\n      description: APIs for delivery partners require an API key that will have been issued to you.\n      in: header\n      name: Authorization\n      type: apiKey\n    basic_auth:\n      description: A few services allow the use of basic authentication when a partner doesn't support OAuth based authentication.\n      scheme: basic\n      type: http\n    justeat_adfs:\n      description: ADFS authentication provider for internal Just Eat tools.\n      openIdConnectUrl: https://adfs.just-eat.com/adfs/.well-known/openid-configuration\n      type: openIdConnect\n    restaurantsignup_jwt:\n      bearerFormat: JWT token with payload `RestaurantId` and Role `[RestaurantRead | VerifyEmail | RestaurantWrite | FullAccess | DocumentRead]`\n      description: Bearer token authentication using a JSON Web Token (JWT), used by the restaurant sign up system\n      scheme: bearer\n      type: http\nx-tagGroups:\n  - name: Consumer Experience\n    tags:\n      - Authorization\n      - Consumers\n      - ConsumerOffers\n      - ConsumerQueries\n      - Consumer Queries Webhooks\n      - ConsumerOrders\n      - Search\n      - Basket\n      - Payments\n      - Giftcards\n      - Experiments\n      - Vouchers\n      - Promoted Placement\n      - Menu\n      - Recommendations\n      - Location Services\n  - name: Manage Order Journey\n    tags:\n      - Order Acceptance API\n      - Order Acceptance Webhooks\n      - Order Delivery API\n      - Order Delivery Webhooks\n      - Order API\n      - Order Webhooks\n      - Customer Order Details\n      - DeliveryFee\n      - Delivery Pools API\n      - Attempted Delivery API\n      - Attempted Delivery Webhooks\n      - Checkout\n      - Courier Feedback\n  - name: Restaurant Management\n    tags:\n      - Restaurant Product\n      - Restaurants\n      - RestaurantOffers\n      - Restaurant OrderTimes\n      - Restaurants Webhooks\n      - RestaurantSignup\n      - RestaurantQueries\n      - RestaurantQueries Webhooks\n      - Restaurant Claims\n      - Restaurant Events\n      - Restaurant Events Webhooks\n      - Restaurant API\n      - Restaurant Webhooks\n      - Products\n      - Logistics POS Restaurants\n      - Restaurant Smiley Rating\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"UpdateUpdatedProduct\": parse schema: property \"Quantity\": parse schema: object cannot contain 'items' field"
}