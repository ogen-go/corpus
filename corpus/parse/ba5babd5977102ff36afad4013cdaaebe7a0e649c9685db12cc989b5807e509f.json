{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mathislucka/dualtext"
		},
		"file": {
			"name": "openapi-schema.yml",
			"size": 0,
			"path": "dualtext_server/dualtext/openapi-schema.yml",
			"byteSize": 29019,
			"content": "openapi: 3.0.2\ninfo:\n  title: ''\n  version: ''\npaths:\n  /api/v1/annotation/{annotation_id}:\n    get:\n      operationId: retrieveAnnotation\n      description: ''\n      parameters:\n      - name: annotation_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Annotation'\n          description: ''\n      tags:\n      - api\n    put:\n      operationId: updateAnnotation\n      description: ''\n      parameters:\n      - name: annotation_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Annotation'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Annotation'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Annotation'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Annotation'\n          description: ''\n      tags:\n      - api\n    patch:\n      operationId: partialUpdateAnnotation\n      description: ''\n      parameters:\n      - name: annotation_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Annotation'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Annotation'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Annotation'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Annotation'\n          description: ''\n      tags:\n      - api\n  /api/v1/corpus/{corpus_id}:\n    get:\n      operationId: retrieveCorpus\n      description: ''\n      parameters:\n      - name: corpus_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Corpus'\n          description: ''\n      tags:\n      - api\n    delete:\n      operationId: destroyCorpus\n      description: ''\n      parameters:\n      - name: corpus_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      responses:\n        '204':\n          description: ''\n      tags:\n      - api\n  /api/v1/document/{document_id}:\n    get:\n      operationId: retrieveDocument\n      description: Retrieving a single document.\n      parameters:\n      - name: document_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Document'\n          description: ''\n      tags:\n      - api\n  /api/v1/corpus/{corpus_id}/document/:\n    get:\n      operationId: listDocuments\n      description: Retrieving a list of documents in a corpus or creating new documents.\n      parameters:\n      - name: corpus_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Document'\n          description: ''\n      tags:\n      - api\n    post:\n      operationId: createDocument\n      description: Retrieving a list of documents in a corpus or creating new documents.\n      parameters:\n      - name: corpus_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Document'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Document'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Document'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Document'\n          description: ''\n      tags:\n      - api\n  /api/v1/feature/:\n    get:\n      operationId: listFeatures\n      description: Retrieving a list of features or creating new features.\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Feature'\n          description: ''\n      tags:\n      - api\n    post:\n      operationId: createFeature\n      description: Retrieving a list of features or creating new features.\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Feature'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Feature'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Feature'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Feature'\n          description: ''\n      tags:\n      - api\n  /api/v1/feature/{feature_id}:\n    get:\n      operationId: retrieveFeature\n      description: Retrieving or updating a single feature.\n      parameters:\n      - name: feature_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Feature'\n          description: ''\n      tags:\n      - api\n    put:\n      operationId: updateFeature\n      description: Retrieving or updating a single feature.\n      parameters:\n      - name: feature_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Feature'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Feature'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Feature'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Feature'\n          description: ''\n      tags:\n      - api\n    patch:\n      operationId: partialUpdateFeature\n      description: Retrieving or updating a single feature.\n      parameters:\n      - name: feature_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Feature'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Feature'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Feature'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Feature'\n          description: ''\n      tags:\n      - api\n  /api/v1/corpus/:\n    get:\n      operationId: listCorpus\n      description: ''\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Corpus'\n          description: ''\n      tags:\n      - api\n    post:\n      operationId: createCorpus\n      description: ''\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Corpus'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Corpus'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Corpus'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Corpus'\n          description: ''\n      tags:\n      - api\n  /api/v1/project/{project_id}:\n    get:\n      operationId: retrieveProject\n      description: ''\n      parameters:\n      - name: project_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n          description: ''\n      tags:\n      - api\n    put:\n      operationId: updateProject\n      description: ''\n      parameters:\n      - name: project_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Project'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Project'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Project'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n          description: ''\n      tags:\n      - api\n    patch:\n      operationId: partialUpdateProject\n      description: ''\n      parameters:\n      - name: project_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Project'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Project'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Project'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n          description: ''\n      tags:\n      - api\n    delete:\n      operationId: destroyProject\n      description: ''\n      parameters:\n      - name: project_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      responses:\n        '204':\n          description: ''\n      tags:\n      - api\n  /api/v1/project/{project_id}/statistics:\n    get:\n      operationId: listProjectStatistics\n      description: ''\n      parameters:\n      - name: project_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items: {}\n          description: ''\n      tags:\n      - api\n  /api/v1/project/:\n    get:\n      operationId: listProjects\n      description: ''\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Project'\n          description: ''\n      tags:\n      - api\n    post:\n      operationId: createProject\n      description: ''\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Project'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Project'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Project'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n          description: ''\n      tags:\n      - api\n  /api/v1/project/{project_id}/label:\n    get:\n      operationId: listLabels\n      description: Retrieving a list of labels in a project or creating new labels.\n      parameters:\n      - name: project_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Label'\n          description: ''\n      tags:\n      - api\n    post:\n      operationId: createLabel\n      description: Retrieving a list of labels in a project or creating new labels.\n      parameters:\n      - name: project_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Label'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Label'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Label'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Label'\n          description: ''\n      tags:\n      - api\n  /api/v1/project/{project_id}/task/claim/{claim_type}/:\n    get:\n      operationId: retrieveClaimTask\n      description: Claiming an unclaimed task.\n      parameters:\n      - name: project_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      - name: claim_type\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - api\n    patch:\n      operationId: partialUpdateClaimTask\n      description: Claiming an unclaimed task.\n      parameters:\n      - name: project_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      - name: claim_type\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema: {}\n          application/x-www-form-urlencoded:\n            schema: {}\n          multipart/form-data:\n            schema: {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - api\n  /api/v1/project/{project_id}/task/claim/:\n    get:\n      operationId: listClaimTasks\n      description: Claiming an unclaimed task.\n      parameters:\n      - name: project_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items: {}\n          description: ''\n      tags:\n      - api\n    patch:\n      operationId: partialUpdateClaimTask\n      description: Claiming an unclaimed task.\n      parameters:\n      - name: project_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema: {}\n          application/x-www-form-urlencoded:\n            schema: {}\n          multipart/form-data:\n            schema: {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - api\n  /api/v1/project/{project_id}/task/:\n    get:\n      operationId: listTasks\n      description: Retrieving a list of tasks in a project or creating new tasks.\n      parameters:\n      - name: project_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Task'\n          description: ''\n      tags:\n      - api\n    post:\n      operationId: createTask\n      description: Retrieving a list of tasks in a project or creating new tasks.\n      parameters:\n      - name: project_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Task'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Task'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Task'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n          description: ''\n      tags:\n      - api\n  /api/v1/task/{task_id}:\n    get:\n      operationId: retrieveTask\n      description: Retrieving a single task updating an existing task.\n      parameters:\n      - name: task_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n          description: ''\n      tags:\n      - api\n    put:\n      operationId: updateTask\n      description: Retrieving a single task updating an existing task.\n      parameters:\n      - name: task_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Task'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Task'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Task'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n          description: ''\n      tags:\n      - api\n    patch:\n      operationId: partialUpdateTask\n      description: Retrieving a single task updating an existing task.\n      parameters:\n      - name: task_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Task'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Task'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Task'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Task'\n          description: ''\n      tags:\n      - api\n    delete:\n      operationId: destroyTask\n      description: Retrieving a single task updating an existing task.\n      parameters:\n      - name: task_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      responses:\n        '204':\n          description: ''\n      tags:\n      - api\n  /api/v1/task/{task_id}/annotation/:\n    get:\n      operationId: listAnnotations\n      description: ''\n      parameters:\n      - name: task_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items: {}\n          description: ''\n      tags:\n      - api\n    post:\n      operationId: createAnnotationList\n      description: ''\n      parameters:\n      - name: task_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema: {}\n          application/x-www-form-urlencoded:\n            schema: {}\n          multipart/form-data:\n            schema: {}\n      responses:\n        '201':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - api\n  /api/v1/user/current:\n    get:\n      operationId: listCurrentUsers\n      description: ''\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items: {}\n          description: ''\n      tags:\n      - api\n  /api/v1/user/current/statistics:\n    get:\n      operationId: listCurrentUserStatistics\n      description: ''\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items: {}\n          description: ''\n      tags:\n      - api\n  /api/v1/search/methods:\n    get:\n      operationId: listSearchMethods\n      description: ''\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items: {}\n          description: ''\n      tags:\n      - api\n  /api/v1/search/:\n    get:\n      operationId: listSearchs\n      description: ''\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items: {}\n          description: ''\n      tags:\n      - api\n  /openapi/:\n    get:\n      operationId: listOpenApis\n      description: Documentation.\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items: {}\n          description: ''\n      tags:\n      - openapi\n  /api/v1/corpus/{corpus_id}/document/batch/:\n    post:\n      operationId: createDocumentBatch\n      description: Creating up to 200 documents in a single batch.\n      parameters:\n      - name: corpus_id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema: {}\n          application/x-www-form-urlencoded:\n            schema: {}\n          multipart/form-data:\n            schema: {}\n      responses:\n        '201':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - api\n  /api/v1/login/:\n    post:\n      operationId: createAuthToken\n      description: ''\n      parameters: []\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/AuthToken'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/AuthToken'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuthToken'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthToken'\n          description: ''\n      tags:\n      - api\ncomponents:\n  schemas:\n    Annotation:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        documents:\n          type: array\n          items:\n            type: integer\n        labels:\n          type: array\n          items:\n            type: integer\n        task:\n          type: string\n          readOnly: true\n        action:\n          enum:\n          - annotate\n          - review\n          - duplicate\n          type: string\n          readOnly: true\n        copied_from:\n          type: string\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        modified_at:\n          type: string\n          format: date-time\n          readOnly: true\n    Corpus:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        name:\n          type: string\n          maxLength: 255\n        corpus_meta:\n          type: object\n        document_count:\n          type: string\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        modified_at:\n          type: string\n          format: date-time\n          readOnly: true\n      required:\n      - name\n      - corpus_meta\n    Document:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        content:\n          type: string\n        corpus:\n          type: string\n          readOnly: true\n        method:\n          type: string\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        modified_at:\n          type: string\n          format: date-time\n          readOnly: true\n    Feature:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        name:\n          type: string\n          maxLength: 255\n        corpora:\n          type: array\n          items:\n            type: integer\n        description:\n          type: string\n          nullable: true\n        key:\n          type: string\n          maxLength: 255\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        modified_at:\n          type: string\n          format: date-time\n          readOnly: true\n      required:\n      - name\n      - key\n    Project:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        name:\n          type: string\n          maxLength: 255\n        allowed_groups:\n          type: array\n          items:\n            type: integer\n        creator:\n          type: string\n          readOnly: true\n        corpora:\n          type: array\n          items:\n            type: integer\n        annotation_mode:\n          enum:\n          - dualtext\n          - classification\n          type: string\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        modified_at:\n          type: string\n          format: date-time\n          readOnly: true\n      required:\n      - name\n    Label:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        name:\n          type: string\n          maxLength: 255\n        project:\n          type: integer\n        color:\n          type: object\n        key_code:\n          type: string\n          nullable: true\n          maxLength: 1\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        modified_at:\n          type: string\n          format: date-time\n          readOnly: true\n      required:\n      - name\n      - project\n    Task:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        name:\n          type: string\n          maxLength: 255\n        annotator:\n          type: integer\n          nullable: true\n        is_finished:\n          type: boolean\n        action:\n          enum:\n          - annotate\n          - review\n          - duplicate\n          type: string\n        project:\n          type: integer\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        modified_at:\n          type: string\n          format: date-time\n          readOnly: true\n      required:\n      - name\n      - project\n    AuthToken:\n      type: object\n      properties:\n        username:\n          type: string\n          writeOnly: true\n        password:\n          type: string\n          writeOnly: true\n        token:\n          type: string\n          readOnly: true\n      required:\n      - username\n      - password\n",
			"canonicalURL": "/github.com/mathislucka/dualtext@eaaa1c6894a7c9796f2fe8dcde5241ff400ad30e/-/blob/dualtext_server/dualtext/openapi-schema.yml",
			"externalURLs": [
				{
					"url": "https://github.com/mathislucka/dualtext/blob/eaaa1c6894a7c9796f2fe8dcde5241ff400ad30e/dualtext_server/dualtext/openapi-schema.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/api/v1/project/{project_id}/task/claim/{claim_type}/\": at 1:16615: patch: duplicate operationId: \"partialUpdateClaimTask\""
}