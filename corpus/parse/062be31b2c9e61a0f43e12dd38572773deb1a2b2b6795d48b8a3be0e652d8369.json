{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/geoserver/geoserver"
		},
		"file": {
			"name": "datastores.yaml",
			"size": 0,
			"path": "src/community/rest-openapi/openapi/src/main/resources/org/geoserver/rest/openapi/1.0.0/datastores.yaml",
			"byteSize": 39476,
			"content": "openapi: 3.0.0\ninfo:\n  version: \"1.0.0\"\n  title: GeoServer Data Stores\n  description: \u003e-\n    A data store contains vector format spatial data. It can be a file (such as\n    a shapefile), a database (such as PostGIS), or a server (such as a remote\n    Web Feature Service).\n\nsecurity:\n  - basicAuth: []\n\ntags:\n  - name: datastores\n    description: DataStores API\n\n\npaths:\n  '/workspaces/{workspaceName}/datastores':\n    parameters:\n      - name: workspaceName\n        in: path\n        required: true\n        description: The name of the worskpace containing the data stores.\n        schema:\n          type: string\n    get:\n      operationId: getDatastores\n      tags:\n        - datastores\n      summary: Get a list of data stores\n      description: \u003e-\n        List all data stores in workspace ws.\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataStoresListResponse'\n              examples:\n                response:\n                  value: \u003e\n                    {\"dataStores\":{\"dataStore\":[{\"name\":\"sf\",\"href\":\"http://localhost:8080/geoserver/rest/workspaces/sf/datastores/sf.json\"}]}}\n    post:\n      operationId: createDatastore\n      tags:\n        - datastores\n      summary: Create a new data store\n      description: Adds a new data store to the workspace.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DataStoreInfoWrapper'\n        description: \u003e\n          The data store body information to upload.\n          The contents of the connection parameters will differ depending on the\n          type of data store being added.\n\n          - GeoPackage\n\n            Examples:\n            - application/json:\n\n              ```\n              {\n                \"dataStore\": {\n                  \"name\": \"nyc\",\n                  \"connectionParameters\": {\n                    \"entry\": [\n                      {\"@key\":\"database\",\"$\":\"file:///path/to/nyc.gpkg\"},\n                      {\"@key\":\"dbtype\",\"$\":\"geopkg\"}\n                    ]\n                  }\n                }\n              }\n              ```\n\n            Connection Parameters:\n\n            | key | description | level | type | required | default |\n            | --- | ----------- | ----- | ---- | -------- | ------- |\n            | Primary key metadata table | The optional table containing primary key structure and sequence associations. Can be expressed as 'schema.name' or just 'name' | user | String | False | ` ` |\n            | Callback factory | Name of JDBCReaderCallbackFactory to enable on the data store | user | String | False | ` ` |\n            | Evictor tests per run | number of connections checked by the idle connection evictor for each of its runs (defaults to 3) | user | Integer | False | `3` |\n            | database | Database | user | File | True | ` ` |\n            | Batch insert size | Number of records inserted in the same batch (default, 1). For optimal performance, set to 100. | user | Integer | False | `1` |\n            | fetch size | number of records read with each iteraction with the dbms | user | Integer | False | `1000` |\n            | Connection timeout | number of seconds the connection pool will wait before timing out attempting to get a new connection (default, 20 seconds) | user | Integer | False | `20` |\n            | namespace | Namespace prefix | user | String | False | ` ` |\n            | max connections | maximum number of open connections | user | Integer | False | `10` |\n            | Test while idle | Periodically test the connections are still valid also while idle in the pool | user | Boolean | False | `True` |\n            | Max connection idle time | number of seconds a connection needs to stay idle for the evictor to consider closing it | user | Integer | False | `300` |\n            | Session startup SQL | SQL statement executed when the connection is grabbed from the pool | user | String | False | ` ` |\n            | validate connections | check connection is alive before using it | user | Boolean | False | `True` |\n            | dbtype | Type | program | String | True | `geopkg` |\n            | passwd | password used to login | user | String | False | ` ` |\n            | Expose primary keys | Expose primary key columns as attributes of the feature type | user | Boolean | False | `False` |\n            | min connections | minimum number of pooled connection | user | Integer | False | `1` |\n            | Evictor run periodicity | number of seconds between idle object evitor runs (default, 300 seconds) | user | Integer | False | `300` |\n            | Session close-up SQL | SQL statement executed when the connection is released to the pool | user | String | False | ` ` |\n            | user | user name to login as | user | String | False | ` ` |\n\n          - PostGIS\n\n            Examples:\n            - application/json:\n\n              ```\n              {\n                \"dataStore\": {\n                  \"name\": \"nyc\",\n                  \"connectionParameters\": {\n                    \"entry\": [\n                      {\"@key\":\"host\",\"$\":\"localhost\"},\n                      {\"@key\":\"port\",\"$\":\"5432\"},\n                      {\"@key\":\"database\",\"$\":\"nyc\"},\n                      {\"@key\":\"user\",\"$\":\"bob\"},\n                      {\"@key\":\"passwd\",\"$\":\"postgres\"},\n                      {\"@key\":\"dbtype\",\"$\":\"postgis\"}\n                    ]\n                  }\n                }\n              }\n              ```\n\n            Connection Parameters:\n\n            | key | description | level | type | required | default |\n            | --- | ----------- | ----- | ---- | -------- | ------- |\n            | Connection timeout | number of seconds the connection pool will wait before timing out attempting to get a new connection (default, 20 seconds) | user | Integer | False | `20` |\n            | validate connections | check connection is alive before using it | user | Boolean | False | `True` |\n            | port | Port | user | Integer | True | `5432` |\n            | Primary key metadata table | The optional table containing primary key structure and sequence associations. Can be expressed as 'schema.name' or just 'name' | user | String | False | ` ` |\n            | Support on the fly geometry simplification | When enabled, operations such as map rendering will pass a hint that will enable the usage of ST_Simplify | user | Boolean | False | `True` |\n            | create database | Creates the database if it does not exist yet | advanced | Boolean | False | `False` |\n            | create database params | Extra specifications appeneded to the CREATE DATABASE command | advanced | String | False | `` |\n            | dbtype | Type | program | String | True | `postgis` |\n            | Batch insert size | Number of records inserted in the same batch (default, 1). For optimal performance, set to 100. | user | Integer | False | `1` |\n            | namespace | Namespace prefix | user | String | False | ` ` |\n            | Max connection idle time | number of seconds a connection needs to stay idle for the evictor to consider closing it | user | Integer | False | `300` |\n            | Session startup SQL | SQL statement executed when the connection is grabbed from the pool | user | String | False | ` ` |\n            | Expose primary keys | Expose primary key columns as attributes of the feature type | user | Boolean | False | `False` |\n            | min connections | minimum number of pooled connection | user | Integer | False | `1` |\n            | Max open prepared statements | Maximum number of prepared statements kept open and cached for each connection in the pool. Set to 0 to have unbounded caching, to -1 to disable caching | user | Integer | False | `50` |\n            | Callback factory | Name of JDBCReaderCallbackFactory to enable on the data store | user | String | False | ` ` |\n            | passwd | password used to login | user | String | False | ` ` |\n            | encode functions | set to true to have a set of filter functions be translated directly in SQL. Due to differences in the type systems the result might not be the same as evaluating them in memory, including the SQL failing with errors while the in memory version works fine. However this allows to push more of the filter into the database, increasing performance.the postgis table. | advanced | Boolean | False | `False` |\n            | host | Host | user | String | True | `localhost` |\n            | Evictor tests per run | number of connections checked by the idle connection evictor for each of its runs (defaults to 3) | user | Integer | False | `3` |\n            | Loose bbox | Perform only primary filter on bbox | user | Boolean | False | `True` |\n            | Evictor run periodicity | number of seconds between idle object evitor runs (default, 300 seconds) | user | Integer | False | `300` |\n            | Estimated extends | Use the spatial index information to quickly get an estimate of the data bounds | user | Boolean | False | `True` |\n            | database | Database | user | String | False | ` ` |\n            | fetch size | number of records read with each iteraction with the dbms | user | Integer | False | `1000` |\n            | Test while idle | Periodically test the connections are still valid also while idle in the pool | user | Boolean | False | `True` |\n            | max connections | maximum number of open connections | user | Integer | False | `10` |\n            | preparedStatements | Use prepared statements | user | Boolean | False | `False` |\n            | Session close-up SQL | SQL statement executed when the connection is released to the pool | user | String | False | ` ` |\n            | schema | Schema | user | String | False | `public` |\n            | user | user name to login as | user | String | True | ` ` |\n\n          - Shapefile\n\n            Examples:\n            - application/json:\n\n              ```\n              {\n                \"dataStore\": {\n                  \"name\": \"nyc\",\n                  \"connectionParameters\": {\n                    \"entry\": [\n                      {\"@key\":\"url\",\"$\":\"file:/path/to/nyc.shp\"}\n                    ]\n                  }\n                }\n              }\n              ```\n\n            Connection Parameters:\n\n            | key | description | level | type | required | default |\n            | --- | ----------- | ----- | ---- | -------- | ------- |\n            | cache and reuse memory maps | only memory map a file one, then cache and reuse the map | advanced | Boolean | False | `True` |\n            | namespace | uri to a the namespace | advanced | URI | False | ` ` |\n            | filetype | Discriminator for directory stores | program | String | False | `shapefile` |\n            | charset | character used to decode strings from the DBF file | advanced | Charset | False | `ISO-8859-1` |\n            | create spatial index | enable/disable the automatic creation of spatial index | advanced | Boolean | False | `True` |\n            | fstype | Enable using a setting of 'shape'. | advanced | String | False | `shape` |\n            | url | url to a .shp file | user | URL | True | ` ` |\n            | enable spatial index | enable/disable the use of spatial index for local shapefiles | advanced | Boolean | False | `True` |\n            | memory mapped buffer | enable/disable the use of memory-mapped io | advanced | Boolean | False | `False` |\n            | timezone | time zone used to read dates from the DBF file | advanced | TimeZone | False | `Pacific Standard Time` |\n\n          - Directory of spatial files (shapefiles)\n\n            Examples:\n            - application/json:\n\n              ```\n              {\n                \"dataStore\": {\n                  \"name\": \"nyc\",\n                  \"connectionParameters\": {\n                    \"entry\": [\n                      {\"@key\":\"url\",\"$\":\"file:/path/to/directory\"}\n                    ]\n                  }\n                }\n              }\n              ```\n\n            Connection Parameters:\n\n            | key | description | level | type | required | default |\n            | --- | ----------- | ----- | ---- | -------- | ------- |\n            | cache and reuse memory maps | only memory map a file one, then cache and reuse the map | advanced | Boolean | False | `True` |\n            | namespace | uri to a the namespace | advanced | URI | False | ` ` |\n            | filetype | Discriminator for directory stores | program | String | False | `shapefile` |\n            | charset | character used to decode strings from the DBF file | advanced | Charset | False | `ISO-8859-1` |\n            | create spatial index | enable/disable the automatic creation of spatial index | advanced | Boolean | False | `True` |\n            | fstype | Enable using a setting of 'shape'. | advanced | String | False | `shape` |\n            | url | url to a .shp file | user | URL | True | ` ` |\n            | enable spatial index | enable/disable the use of spatial index for local shapefiles | advanced | Boolean | False | `True` |\n            | memory mapped buffer | enable/disable the use of memory-mapped io | advanced | Boolean | False | `False` |\n            | timezone | time zone used to read dates from the DBF file | advanced | TimeZone | False | `Pacific Standard Time` |\n\n\n          - Web Feature Service\n\n            Examples:\n            - application/json:\n\n              ```\n              {\n                \"dataStore\": {\n                  \"name\": \"nyc\",\n                  \"connectionParameters\": {\n                    \"entry\": [\n                      {\"@key\":\"GET_CAPABILITIES_URL\",\"$\":\"http://localhost:8080/geoserver/wfs?request=GetCapabilities\"}\n                    ]\n                  }\n                }\n              }\n              ```\n\n            Connection Parameters:\n\n            | key | description | level | type | required | default |\n            | --- | ----------- | ----- | ---- | -------- | ------- |\n            | Protocol | Sets a preference for the HTTP protocol to use when requesting WFS functionality. Set this value to Boolean.TRUE for POST, Boolean.FALSE for GET or NULL for AUTO | user | Boolean | False | ` ` |\n            | WFS GetCapabilities URL | Represents a URL to the getCapabilities document or a server instance. | user | URL | False | ` ` |\n            | Buffer Size | This allows the user to specify a buffer size in features. This param has a default value of 10 features. | user | Integer | False | `10` |\n            | Filter compliance | Level of compliance to WFS specification (0-low,1-medium,2-high) | user | Integer | False | ` ` |\n            | EntityResolver | Sets the entity resolver used to expand XML entities | program | EntityResolver | False | `org.geotools.xml.PreventLocalEntityResolver@75e98519` |\n            | Time-out | This allows the user to specify a timeout in milliseconds. This param has a default value of 3000ms. | user | Integer | False | `3000` |\n            | GmlComplianceLevel | Optional OGC GML compliance level required. | user | Integer | False | `0` |\n            | Lenient | Indicates that datastore should do its best to create features from the provided data even if it does not accurately match the schema.  Errors will be logged but the parsing will continue if this is true.  Default is false | user | Boolean | False | `False` |\n            | Password | This allows the user to specify a username. This param should not be used without the USERNAME param. | user | String | False | ` ` |\n            | Use Default SRS | Use always the declared DefaultSRS for requests and reproject locally if necessary | advanced | Boolean | False | `False` |\n            | Namespace | Override the original WFS type name namespaces | advanced | String | False | ` ` |\n            | Username | This allows the user to specify a username. This param should not be used without the PASSWORD param. | user | String | False | ` ` |\n            | Axis Order Filter | Indicates axis order used by the remote WFS server for filters. It applies only to WFS 1.x.0 servers. Default is the same as AXIS_ORDER | advanced | String | False | ` ` |\n            | GmlCompatibleTypeNames | Use Gml Compatible TypeNames (replace : by _). | user | Boolean | False | `False` |\n            | Maximum features | Positive integer used as a hard limit for the amount of Features to retrieve for each FeatureType. A value of zero or not providing this parameter means no limit. | user | Integer | False | `0` |\n            | Axis Order | Indicates axis order used by the remote WFS server in result coordinates. It applies only to WFS 1.x.0 servers. Default is Compliant | advanced | String | False | `Compliant` |\n            | WFS Strategy | Override wfs stragegy with either cubwerx, ionic, mapserver, geoserver, strict, nonstrict or arcgis strategy. | user | String | False | `auto` |\n            | Try GZIP | Indicates that datastore should use gzip to transfer data if the server supports it. Default is true | user | Boolean | False | `True` |\n            | Encoding | This allows the user to specify the character encoding of the XML-Requests sent to the Server. Defaults to UTF-8 | user | String | False | `UTF-8` |\n            | Outputformat | This allows the user to specify an outputFormat, different from the default one. | advanced | String | False | ` ` |\n        required: true\n      responses:\n        '201':\n          description: Created\n          headers:\n            Location:\n              description: URL where the newly created data store can be found\n              schema:\n                type: string\n         #Note: ignoring the response here because geoserver returns a single unquoted string both for JSON and XML\n         #responses and it can't be parsed either way. It should return only text/plain or a properly encoded response for the output content type\n         # content:\n         #   application/json:\n         #     schema:\n         #       type: string\n  '/workspaces/{workspaceName}/datastores/{storeName}':\n    parameters:\n      - name: workspaceName\n        in: path\n        required: true\n        description: The name of the worskpace containing the data store.\n        schema:\n          type: string\n      - name: storeName\n        in: path\n        required: true\n        description: The name of the data store to retrieve.\n        schema:\n          type: string\n    get:\n      operationId: getDataStore\n      tags:\n        - datastores\n      summary: Retrieve a particular data store from a workspace\n      description:  Controls a particular data store in a given workspace.\n      parameters:\n        - in: query\n          name: quietOnNotFound\n          required: false\n          schema:\n             type: boolean\n             default: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataStoreWrapper'\n              examples:\n                response:\n                  value: \u003e\n                    {\"dataStore\":{\"name\":\"sf\",\"enabled\":true,\"workspace\":{\"name\":\"sf\",\"href\":\"http://localhost:8080/geoserver/rest/workspaces/sf.json\"},\"connectionParameters\":{\"entry\":[{\"@key\":\"url\",\"$\":\"file:data/sf\"},{\"@key\":\"namespace\",\"$\":\"http://www.openplans.org/spearfish\"}]},\"_default\":false,\"featureTypes\":\"http://localhost:8080/geoserver/rest/workspaces/sf/datastores/sf/featuretypes.json\"}}\n    put:\n      operationId: modifyDataStore\n      tags:\n        - datastores\n      summary: Modify a data store.\n      description: \u003e-\n        Modify data store ds.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DataStoreInfoWrapper'\n        description: \u003e\n          The updated data store definition.\n\n          For a PUT, only values which should be changed need to be included.\n          The connectionParameters map counts as a single value, \n\n          so if you change it all preexisting connection parameters will be\n          overwritten.\n\n\n          The contents of the connection parameters will differ depending on the\n          type of data store being added.\n\n\n          - GeoPackage\n\n            Examples:\n            - application/json:\n\n              ```\n              {\n                \"dataStore\": {\n                  \"description\": \"A data store\",\n                  \"enabled\": \"true\",\n                  \"_default\": \"true\",\n                  \"connectionParameters\": {\n                    \"entry\": [\n                      {\"@key\":\"database\",\"$\":\"file:///path/to/nyc.gpkg\"},\n                    ]\n                  }\n                }\n              }\n              ```\n\n            Connection Parameters:\n\n            | key | description | level | type | required | default |\n            | --- | ----------- | ----- | ---- | -------- | ------- |\n            | Primary key metadata table | The optional table containing primary key structure and sequence associations. Can be expressed as 'schema.name' or just 'name' | user | String | False | ` ` |\n            | Callback factory | Name of JDBCReaderCallbackFactory to enable on the data store | user | String | False | ` ` |\n            | Evictor tests per run | number of connections checked by the idle connection evictor for each of its runs (defaults to 3) | user | Integer | False | `3` |\n            | database | Database | user | File | True | ` ` |\n            | Batch insert size | Number of records inserted in the same batch (default, 1). For optimal performance, set to 100. | user | Integer | False | `1` |\n            | fetch size | number of records read with each iteraction with the dbms | user | Integer | False | `1000` |\n            | Connection timeout | number of seconds the connection pool will wait before timing out attempting to get a new connection (default, 20 seconds) | user | Integer | False | `20` |\n            | namespace | Namespace prefix | user | String | False | ` ` |\n            | max connections | maximum number of open connections | user | Integer | False | `10` |\n            | Test while idle | Periodically test the connections are still valid also while idle in the pool | user | Boolean | False | `True` |\n            | Max connection idle time | number of seconds a connection needs to stay idle for the evictor to consider closing it | user | Integer | False | `300` |\n            | Session startup SQL | SQL statement executed when the connection is grabbed from the pool | user | String | False | ` ` |\n            | validate connections | check connection is alive before using it | user | Boolean | False | `True` |\n            | dbtype | Type | program | String | True | `geopkg` |\n            | passwd | password used to login | user | String | False | ` ` |\n            | Expose primary keys | Expose primary key columns as attributes of the feature type | user | Boolean | False | `False` |\n            | min connections | minimum number of pooled connection | user | Integer | False | `1` |\n            | Evictor run periodicity | number of seconds between idle object evitor runs (default, 300 seconds) | user | Integer | False | `300` |\n            | Session close-up SQL | SQL statement executed when the connection is released to the pool | user | String | False | ` ` |\n            | user | user name to login as | user | String | False | ` ` |\n\n          - PostGIS\n\n            Examples:\n            - application/json:\n\n              ```\n              {\n                \"dataStore\": {\n                  \"description\": \"A data store\",\n                  \"enabled\": \"true\",\n                  \"_default\": \"true\",\n                  \"connectionParameters\": {\n                    \"entry\": [\n                      {\"@key\":\"host\",\"$\":\"localhost\"},\n                      {\"@key\":\"port\",\"$\":\"5432\"},\n                      {\"@key\":\"database\",\"$\":\"nyc\"},\n                      {\"@key\":\"user\",\"$\":\"bob\"},\n                      {\"@key\":\"passwd\",\"$\":\"postgres\"},\n                    ]\n                  }\n                }\n              }\n              ```\n\n            Connection Parameters:\n\n            | key | description | level | type | required | default |\n            | --- | ----------- | ----- | ---- | -------- | ------- |\n            | Connection timeout | number of seconds the connection pool will wait before timing out attempting to get a new connection (default, 20 seconds) | user | Integer | False | `20` |\n            | validate connections | check connection is alive before using it | user | Boolean | False | `True` |\n            | port | Port | user | Integer | True | `5432` |\n            | Primary key metadata table | The optional table containing primary key structure and sequence associations. Can be expressed as 'schema.name' or just 'name' | user | String | False | ` ` |\n            | Support on the fly geometry simplification | When enabled, operations such as map rendering will pass a hint that will enable the usage of ST_Simplify | user | Boolean | False | `True` |\n            | create database | Creates the database if it does not exist yet | advanced | Boolean | False | `False` |\n            | create database params | Extra specifications appeneded to the CREATE DATABASE command | advanced | String | False | `` |\n            | dbtype | Type | program | String | True | `postgis` |\n            | Batch insert size | Number of records inserted in the same batch (default, 1). For optimal performance, set to 100. | user | Integer | False | `1` |\n            | namespace | Namespace prefix | user | String | False | ` ` |\n            | Max connection idle time | number of seconds a connection needs to stay idle for the evictor to consider closing it | user | Integer | False | `300` |\n            | Session startup SQL | SQL statement executed when the connection is grabbed from the pool | user | String | False | ` ` |\n            | Expose primary keys | Expose primary key columns as attributes of the feature type | user | Boolean | False | `False` |\n            | min connections | minimum number of pooled connection | user | Integer | False | `1` |\n            | Max open prepared statements | Maximum number of prepared statements kept open and cached for each connection in the pool. Set to 0 to have unbounded caching, to -1 to disable caching | user | Integer | False | `50` |\n            | Callback factory | Name of JDBCReaderCallbackFactory to enable on the data store | user | String | False | ` ` |\n            | passwd | password used to login | user | String | False | ` ` |\n            | encode functions | set to true to have a set of filter functions be translated directly in SQL. Due to differences in the type systems the result might not be the same as evaluating them in memory, including the SQL failing with errors while the in memory version works fine. However this allows to push more of the filter into the database, increasing performance.the postgis table. | advanced | Boolean | False | `False` |\n            | host | Host | user | String | True | `localhost` |\n            | Evictor tests per run | number of connections checked by the idle connection evictor for each of its runs (defaults to 3) | user | Integer | False | `3` |\n            | Loose bbox | Perform only primary filter on bbox | user | Boolean | False | `True` |\n            | Evictor run periodicity | number of seconds between idle object evitor runs (default, 300 seconds) | user | Integer | False | `300` |\n            | Estimated extends | Use the spatial index information to quickly get an estimate of the data bounds | user | Boolean | False | `True` |\n            | database | Database | user | String | False | ` ` |\n            | fetch size | number of records read with each iteraction with the dbms | user | Integer | False | `1000` |\n            | Test while idle | Periodically test the connections are still valid also while idle in the pool | user | Boolean | False | `True` |\n            | max connections | maximum number of open connections | user | Integer | False | `10` |\n            | preparedStatements | Use prepared statements | user | Boolean | False | `False` |\n            | Session close-up SQL | SQL statement executed when the connection is released to the pool | user | String | False | ` ` |\n            | schema | Schema | user | String | False | `public` |\n            | user | user name to login as | user | String | True | ` ` |\n\n          - Shapefile\n\n            Examples:\n            - application/json:\n\n              ```\n              {\n                \"dataStore\": {\n                  \"description\": \"A data store\",\n                  \"enabled\": \"true\",\n                  \"_default\": \"true\",\n                  \"connectionParameters\": {\n                    \"entry\": [\n                      {\"@key\":\"url\",\"$\":\"file:/path/to/nyc.shp\"}\n                    ]\n                  }\n                }\n              }\n              ```\n\n            Connection Parameters:\n\n            | key | description | level | type | required | default |\n            | --- | ----------- | ----- | ---- | -------- | ------- |\n            | cache and reuse memory maps | only memory map a file one, then cache and reuse the map | advanced | Boolean | False | `True` |\n            | namespace | uri to a the namespace | advanced | URI | False | ` ` |\n            | filetype | Discriminator for directory stores | program | String | False | `shapefile` |\n            | charset | character used to decode strings from the DBF file | advanced | Charset | False | `ISO-8859-1` |\n            | create spatial index | enable/disable the automatic creation of spatial index | advanced | Boolean | False | `True` |\n            | fstype | Enable using a setting of 'shape'. | advanced | String | False | `shape` |\n            | url | url to a .shp file | user | URL | True | ` ` |\n            | enable spatial index | enable/disable the use of spatial index for local shapefiles | advanced | Boolean | False | `True` |\n            | memory mapped buffer | enable/disable the use of memory-mapped io | advanced | Boolean | False | `False` |\n            | timezone | time zone used to read dates from the DBF file | advanced | TimeZone | False | `Pacific Standard Time` |\n\n          - Directory of spatial files (shapefiles)\n\n            Examples:\n            - application/json:\n\n              ```\n              {\n                \"dataStore\": {\n                  \"description\": \"A data store\",\n                  \"enabled\": \"true\",\n                  \"_default\": \"true\",\n                  \"connectionParameters\": {\n                    \"entry\": [\n                      {\"@key\":\"url\",\"$\":\"file:/path/to/directory\"}\n                    ]\n                  }\n                }\n              }\n              ```\n\n            Connection Parameters:\n\n            | key | description | level | type | required | default |\n            | --- | ----------- | ----- | ---- | -------- | ------- |\n            | cache and reuse memory maps | only memory map a file one, then cache and reuse the map | advanced | Boolean | False | `True` |\n            | namespace | uri to a the namespace | advanced | URI | False | ` ` |\n            | filetype | Discriminator for directory stores | program | String | False | `shapefile` |\n            | charset | character used to decode strings from the DBF file | advanced | Charset | False | `ISO-8859-1` |\n            | create spatial index | enable/disable the automatic creation of spatial index | advanced | Boolean | False | `True` |\n            | fstype | Enable using a setting of 'shape'. | advanced | String | False | `shape` |\n            | url | url to a .shp file | user | URL | True | ` ` |\n            | enable spatial index | enable/disable the use of spatial index for local shapefiles | advanced | Boolean | False | `True` |\n            | memory mapped buffer | enable/disable the use of memory-mapped io | advanced | Boolean | False | `False` |\n            | timezone | time zone used to read dates from the DBF file | advanced | TimeZone | False | `Pacific Standard Time` |\n\n\n          - Web Feature Service\n\n            Examples:\n            - application/json:\n\n              ```\n              {\n                \"dataStore\": {\n                  \"description\": \"A data store\",\n                  \"enabled\": \"true\",\n                  \"_default\": \"true\",\n                  \"connectionParameters\": {\n                    \"entry\": [\n                      {\"@key\":\"GET_CAPABILITIES_URL\",\"$\":\"http://localhost:8080/geoserver/wfs?request=GetCapabilities\"}\n                    ]\n                  }\n                }\n              }\n              ```\n\n            Connection Parameters:\n\n            | key | description | level | type | required | default |\n            | --- | ----------- | ----- | ---- | -------- | ------- |\n            | Protocol | Sets a preference for the HTTP protocol to use when requesting WFS functionality. Set this value to Boolean.TRUE for POST, Boolean.FALSE for GET or NULL for AUTO | user | Boolean | False | ` ` |\n            | WFS GetCapabilities URL | Represents a URL to the getCapabilities document or a server instance. | user | URL | False | ` ` |\n            | Buffer Size | This allows the user to specify a buffer size in features. This param has a default value of 10 features. | user | Integer | False | `10` |\n            | Filter compliance | Level of compliance to WFS specification (0-low,1-medium,2-high) | user | Integer | False | ` ` |\n            | EntityResolver | Sets the entity resolver used to expand XML entities | program | EntityResolver | False | `org.geotools.xml.PreventLocalEntityResolver@75e98519` |\n            | Time-out | This allows the user to specify a timeout in milliseconds. This param has a default value of 3000ms. | user | Integer | False | `3000` |\n            | GmlComplianceLevel | Optional OGC GML compliance level required. | user | Integer | False | `0` |\n            | Lenient | Indicates that datastore should do its best to create features from the provided data even if it does not accurately match the schema.  Errors will be logged but the parsing will continue if this is true.  Default is false | user | Boolean | False | `False` |\n            | Password | This allows the user to specify a username. This param should not be used without the USERNAME param. | user | String | False | ` ` |\n            | Use Default SRS | Use always the declared DefaultSRS for requests and reproject locally if necessary | advanced | Boolean | False | `False` |\n            | Namespace | Override the original WFS type name namespaces | advanced | String | False | ` ` |\n            | Username | This allows the user to specify a username. This param should not be used without the PASSWORD param. | user | String | False | ` ` |\n            | Axis Order Filter | Indicates axis order used by the remote WFS server for filters. It applies only to WFS 1.x.0 servers. Default is the same as AXIS_ORDER | advanced | String | False | ` ` |\n            | GmlCompatibleTypeNames | Use Gml Compatible TypeNames (replace : by _). | user | Boolean | False | `False` |\n            | Maximum features | Positive integer used as a hard limit for the amount of Features to retrieve for each FeatureType. A value of zero or not providing this parameter means no limit. | user | Integer | False | `0` |\n            | Axis Order | Indicates axis order used by the remote WFS server in result coordinates. It applies only to WFS 1.x.0 servers. Default is Compliant | advanced | String | False | `Compliant` |\n            | WFS Strategy | Override wfs stragegy with either cubwerx, ionic, mapserver, geoserver, strict, nonstrict or arcgis strategy. | user | String | False | `auto` |\n            | Try GZIP | Indicates that datastore should use gzip to transfer data if the server supports it. Default is true | user | Boolean | False | `True` |\n            | Encoding | This allows the user to specify the character encoding of the XML-Requests sent to the Server. Defaults to UTF-8 | user | String | False | `UTF-8` |\n            | Outputformat | This allows the user to specify an outputFormat, different from the default one. | advanced | String | False | ` ` |\n        required: true\n      responses:\n        '200':\n          description: The data store was successfully updated.\n    delete:\n      operationId: deleteDatastore\n      tags:\n        - datastores\n      summary: Delete data store\n      description: Deletes a data store from the server.\n      parameters:\n        - name: recurse\n          in: query\n          required: false\n          description: \u003e-\n            The recurse controls recursive deletion. When set to true all\n            resources contained in the store are also removed. The default value\n            is \"false\".\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: OK\ncomponents:\n  securitySchemes:\n    basicAuth:     # \u003c-- arbitrary name for the security scheme\n      type: http\n      scheme: basic\n\n  schemas:\n    DataStoresListResponse:\n      title: datastores\n      type: object\n      required:\n        - dataStores\n      properties:\n        dataStores:\n          $ref: \"#/components/schemas/DataStoreListWrapper\"\n\n    DataStoreListWrapper:\n      title: wrapper object in order to comply with current API encoding\n      type: object\n      required:\n        - dataStore\n      properties:\n        dataStore:\n          $ref: \"catalogresponses.yaml#/components/schemas/NamedLinks\"\n    \n    DataStoreWrapper:\n      title: wrapper object for DataStoreResponse, in order to comply with current API encoding\n      type: object\n      required:\n        - dataStore\n      properties:\n        dataStore:\n          $ref: \"#/components/schemas/DataStoreResponse\"\n\n    DataStoreInfoWrapper:\n      title: wrapper object for DataStoreInfo, in order to comply with current API encoding\n      type: object\n      required:\n        - dataStore\n      properties:\n        dataStore:\n          $ref: \"catalog.yaml#/components/schemas/DataStoreInfo\"\n\n    DataStoreResponse:\n      title: datastore\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of data store\n        description:\n          type: string\n          description: Description of data store\n        enabled:\n          type: boolean\n          description: Whether or not the data store is enabled\n        workspace:\n          $ref: \"catalogresponses.yaml#/components/schemas/NamedLink\"\n        connectionParameters:\n          $ref: \"#/components/schemas/ConnectionParameters\"\n        __default:\n          type: boolean\n          description: Whether or not the data store is the default data store\n          default: false\n        featureTypes:\n          type: string\n          format: uri\n          description: link to the datastore feature types collection\n\n    ConnectionParameters:\n      type: object\n      properties:\n        entry:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ConnectionParameterEntry\"\n                  \n    ConnectionParameterEntry:\n      type: object\n      properties:\n        \"@key\":\n          type: string\n          description: Connection parameter key\n        \"$\":\n          type: string\n          description: Connection parameter value          ",
			"canonicalURL": "/github.com/geoserver/geoserver@5f0eb0088c1d8a5924e64363b91af054f5d3ba94/-/blob/src/community/rest-openapi/openapi/src/main/resources/org/geoserver/rest/openapi/1.0.0/datastores.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/geoserver/geoserver/blob/5f0eb0088c1d8a5924e64363b91af054f5d3ba94/src/community/rest-openapi/openapi/src/main/resources/org/geoserver/rest/openapi/1.0.0/datastores.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"DataStoreInfoWrapper\": parse schema: property \"dataStore\": parse schema: at 1:422: external \"catalog.yaml\": get: file: local file reference is not allowed"
}