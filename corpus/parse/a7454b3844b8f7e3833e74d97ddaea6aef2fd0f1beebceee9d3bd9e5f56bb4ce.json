{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/snok/drf-openapi-tester"
		},
		"file": {
			"name": "manual_reference_schema.yaml",
			"size": 0,
			"path": "tests/schemas/manual_reference_schema.yaml",
			"byteSize": 6856,
			"content": "openapi: 3.0.2\ninfo:\n  title: 'api-specs'\n  version: '1.0.0'\npaths:\n  /api/v1/{pk}/names:\n    get:\n      operationId: api_v1_names_retrieve\n      description: ''\n      parameters:\n        - in: path\n          name: pk\n          schema:\n            type: integer\n          description: A unique value identifying this names.\n          required: true\n      tags:\n        - api\n      security:\n        - cookieAuth: [ ]\n        - { }\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  pk:\n                    type: integer\n                required:\n                  - pk\n          description: ''\n  /api/v1/cars/correct:\n    get:\n      operationId: listGoodCars\n      description: ''\n      parameters: [ ]\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                title: 'Success'\n                type: array\n                items: {\n                  title: 'Success',\n                  type: 'object',\n                  properties: {\n                    name: {\n                      description: 'A swedish car?',\n                      type: 'string',\n                      example: 'Saab',\n                    },\n                    color: {\n                      description: 'The color of the car.',\n                      type: 'string',\n                      example: 'Yellow',\n                    },\n                    height: {\n                      description: 'How tall the car is.',\n                      type: 'string',\n                      example: 'Medium height',\n                    },\n                    width: {\n                      description: 'How wide the car is.',\n                      type: 'string',\n                      example: 'Very wide',\n                    },\n                    length: {\n                      description: 'How long the car is.',\n                      type: 'string',\n                      example: '2 meters',\n                    },\n                  }\n                }\n          description: ''\n    post:\n      operationId: CreateGoodCars\n      description: ''\n      parameters: [ ]\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: { }\n          description: ''\n    put:\n      operationId: UpdateGoodCars\n      description: ''\n      parameters: [ ]\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: { }\n          description: ''\n    delete:\n      operationId: DestroyGoodCars\n      description: ''\n      parameters: [ ]\n      responses:\n        '204':\n          description: ''\n  /api/v1/cars/incorrect:\n    get:\n      operationId: listBadCars\n      description: ''\n      parameters: [ ]\n      responses:\n        '200':\n          description: ''\n    post:\n      operationId: CreateBadCars\n      description: ''\n      parameters: [ ]\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: { }\n          description: ''\n    put:\n      operationId: UpdateBadCars\n      description: ''\n      parameters: [ ]\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: { }\n          description: ''\n    delete:\n      operationId: DestroyBadCars\n      description: ''\n      parameters: [ ]\n      responses:\n        '204':\n          description: ''\n  /api/v1/trucks/correct:\n    get:\n      operationId: listGoodTrucks\n      description: ''\n      parameters: [ ]\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                title: 'Success'\n                type: array\n                items: {\n                  title: 'Success',\n                  type: 'object',\n                  properties: {\n                    name: {\n                      description: 'A swedish truck?',\n                      type: 'string',\n                      example: 'Saab',\n                    },\n                    color: {\n                      description: 'The color of the truck.',\n                      type: 'string',\n                      example: 'Yellow',\n                    },\n                    height: {\n                      description: 'How tall the truck is.',\n                      type: 'string',\n                      example: 'Medium height',\n                    },\n                    width: {\n                      description: 'How wide the truck is.',\n                      type: 'string',\n                      example: 'Very wide',\n                    },\n                    length: {\n                      description: 'How long the truck is.',\n                      type: 'string',\n                      example: '2 meters',\n                    },\n                  }\n                }\n          description: ''\n    post:\n      operationId: CreateGoodTrucks\n      description: ''\n      parameters: [ ]\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: { }\n          description: ''\n    put:\n      operationId: UpdateGoodTrucks\n      description: ''\n      parameters: [ ]\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: { }\n          description: ''\n    delete:\n      operationId: DestroyGoodTrucks\n      description: ''\n      parameters: [ ]\n      responses:\n        '204':\n          description: ''\n  /api/v1/trucks/incorrect:\n    get:\n      operationId: listBadTrucks\n      description: ''\n      parameters: [ ]\n      responses:\n        '200':\n          description: ''\n    post:\n      operationId: CreateBadTrucks\n      description: ''\n      parameters: [ ]\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: { }\n          description: ''\n    put:\n      operationId: UpdateBadTrucks\n      description: ''\n      parameters: [ ]\n      responses:\n        '200':\n          content:\n            application/json:\n              schema: { }\n          description: ''\n    delete:\n      operationId: DestroyBadTrucks\n      description: ''\n      parameters: [ ]\n      responses:\n        '204':\n          description: ''\n  /api/v1/categories/{category_pk}/subcategories/{subcategory_pk}/:\n    get:\n      operationId: getProducts\n      description: ''\n      parameters:\n        - in: path\n          name: category_pk\n          schema:\n            type: integer\n          description: A unique value identifying this category.\n          required: true\n        - in: path\n          name: subcategory_pk\n          schema:\n            type: integer\n          description: A unique value identifying this subcategory.\n          required: true\n      responses:\n        '200':\n          description: ''\n",
			"canonicalURL": "/github.com/snok/drf-openapi-tester@5029a33cdc2fbdf37277b23e32c7edf060897c7d/-/blob/tests/schemas/manual_reference_schema.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/snok/drf-openapi-tester/blob/5029a33cdc2fbdf37277b23e32c7edf060897c7d/tests/schemas/manual_reference_schema.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/api/v1/{pk}/names\": get: operation \"api_v1_names_retrieve\": security: at 1:4303: unknown security schema \"cookieAuth\""
}