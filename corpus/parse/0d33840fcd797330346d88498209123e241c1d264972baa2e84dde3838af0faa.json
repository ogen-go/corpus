{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/dracoon.public/openapi.yml",
			"byteSize": 357185,
			"content": "openapi: 3.0.1\nservers:\n  - url: https://stats.bis.org/api/v1\ninfo:\n  x-ballerina-display:\n    label: Dracoon Public\n    iconPath: \"icon.png\"\n  contact:\n    x-twitter: dracoongmbh\n  description: \"This is a generated connector from [Dracoon API v4.28.3](https://www.dracoon.com/en/home) OpenAPI specification.\n\n  REST Web Services for DRACOON. \u003ca title='Developer Information' href='https://developer.dracoon.com'\u003eDeveloper Information\u003c/a\u003e\u0026emsp;\u0026emsp;\u003ca title='Get SDKs on GitHub' href='https://github.com/dracoon'\u003eGet SDKs on GitHub\u003c/a\u003e\u003cbr\u003e\u003cbr\u003e\u003ca title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'\u003eTerms of service\u003c/a\u003e\"\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials.\n  \n    Create a [Dracoon account](https://www.dracoon.com/en/home) and obtain OAuth tokens following [this guide](https://cloud.support.dracoon.com/hc/en-us/articles/360001329825-OAuth-2-0-example).\n  title: DRACOON API\n  version: 4.28.3\n  x-apisguru-categories:\n    - cloud\n  x-logo:\n    url: https://twitter.com/dracoongmbh/profile_image?size=original\n  x-origin:\n    - format: openapi\n      url: https://dracoon.team/api/spec_v4/\n      version: \"3.0\"\n  x-providerName: dracoon.team\nsecurity:\n  - oauth2: []\ntags:\n  - name: public\n    description: Authentication\npaths: \n  \"/v4/public/shares/downloads/{access_key}\":\n    get:\n      description: |-\n        ### Description:  \n        Retrieve the public information of a Download Share.\n\n        ### Precondition:\n        None.\n\n        ### Postcondition:\n        Download Share information is returned.\n\n        ### Further Information:\n        None.\n      operationId: requestPublicDownloadShareInfo\n      parameters:\n        - description: Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) \u0026 [leettime.de](http://leettime.de/))\n          in: header\n          name: X-Sds-Date-Format\n          schema:\n            enum:\n              - UTC\n              - LOCAL\n              - OFFSET\n              - EPOCH\n              - LEET\n        - description: Access key\n          in: path\n          name: access_key\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PublicDownloadShare\"\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              examples:\n                \"-80000\":\n                  description: |-\n                    \n                    * [-80000] Mandatory fields cannot be empty\n                  summary: Mandatory fields cannot be empty\n                  value:\n                    code: 400\n                    debugInfo: Mandatory fields cannot be empty\n                    errorCode: -80000\n                    message: Bad Request\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Bad Request\n        \"404\":\n          content:\n            application/json:\n              examples:\n                \"-40751\":\n                  description: |-\n                    \n                    * [-40751] File not found\n                  summary: File not found\n                  value:\n                    code: 404\n                    debugInfo: File not found\n                    errorCode: -40751\n                    message: Not Found\n                \"-50000\":\n                  description: |-\n                    \n                    * [-50000] Download access key not found\n                  summary: Download access key not found\n                  value:\n                    code: 404\n                    debugInfo: Download access key not found\n                    errorCode: -50000\n                    message: Not Found\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Not Found\n        \"406\":\n          content:\n            application/json:\n              examples:\n                \"null\":\n                  description: \"Acceptable Content-Types are: `[application/json]`\"\n                  summary: Content type not acceptable\n                  value:\n                    code: 406\n                    debugInfo: \"Content type '...' not acceptable. Acceptable Content-Types are: [...]\"\n                    errorCode: null\n                    message: Not Acceptable\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Not Acceptable\n      security: []\n      summary: Request public Download Share information\n      tags:\n        - public\n    post:\n      description: |-\n        ### Description:\n        Generate a download URL to retrieve a shared file.\n\n        ### Precondition:\n        None.\n\n        ### Postcondition:\n        Download URL and token are generated and returned.\n\n        ### Further Information:\n        Use `downloadUrl` the download `token` is deprecated.\n      operationId: generateDownloadUrlPublic\n      parameters:\n        - description: Access key\n          in: path\n          name: access_key\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PublicDownloadTokenGenerateRequest\"\n              description: Request model for generating download URL\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PublicDownloadTokenGenerateResponse\"\n          description: Created\n        \"400\":\n          content:\n            application/json:\n              examples:\n                \"-50000\":\n                  description: |-\n                    \n                    * [-50000] Download access key not found\n                  summary: Download access key not found\n                  value:\n                    code: 404\n                    debugInfo: Download access key not found\n                    errorCode: -50000\n                    message: Not Found\n                \"-50008\":\n                  description: |-\n                    \n                    * [-50008] Client-side encryption passwords should not be sent to the server\n                  summary: Client-side encryption passwords should not be sent to the server\n                  value:\n                    code: 400\n                    debugInfo: Client-side encryption passwords should not be sent to the server\n                    errorCode: -50008\n                    message: Bad Request\n                \"-80000\":\n                  description: |-\n                    \n                    * [-80000] Mandatory fields cannot be empty\n                  summary: Mandatory fields cannot be empty\n                  value:\n                    code: 400\n                    debugInfo: Mandatory fields cannot be empty\n                    errorCode: -80000\n                    message: Bad Request\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              examples:\n                \"-50009\":\n                  description: |-\n                    \n                    * [-50009] Wrong password for Download Share link\n                  summary: Wrong password for Download Share link\n                  value:\n                    code: 401\n                    debugInfo: Wrong password for Download Share link\n                    errorCode: -50009\n                    message: Unauthorized\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json:\n              examples:\n                \"-51000\":\n                  description: |-\n                    \n                    * [-51000] (Up-) Download Share is temporarily locked\n                  summary: (Up-) Download Share is temporarily locked\n                  value:\n                    code: 403\n                    debugInfo: (Up-) Download Share is temporarily locked\n                    errorCode: -51000\n                    message: Forbidden\n                \"null\":\n                  description: Insufficient rights to perform the operation\n                  summary: Forbidden\n                  value:\n                    code: 403\n                    debugInfo: \"\"\n                    errorCode: null\n                    message: Forbidden\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              examples:\n                \"-50000\":\n                  description: |-\n                    \n                    * [-50000] Download access key not found\n                  summary: Download access key not found\n                  value:\n                    code: 404\n                    debugInfo: Download access key not found\n                    errorCode: -50000\n                    message: Not Found\n                \"-50002\":\n                  description: |-\n                    \n                    * [-50002] Downloads limit reached\n                  summary: Downloads limit reached\n                  value:\n                    code: 404\n                    debugInfo: Downloads limit reached\n                    errorCode: -50002\n                    message: Not Found\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Not Found\n        \"406\":\n          content:\n            application/json:\n              examples:\n                \"null\":\n                  description: \"Acceptable Content-Types are: `[application/json]`\"\n                  summary: Content type not acceptable\n                  value:\n                    code: 406\n                    debugInfo: \"Content type '...' not acceptable. Acceptable Content-Types are: [...]\"\n                    errorCode: null\n                    message: Not Acceptable\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Not Acceptable\n      security: []\n      summary: Generate download URL\n      tags:\n        - public\n  \"/v4/public/shares/downloads/{access_key}/{token}\":\n    get:\n      description: |-\n        ### Description:  \n        Download a file (or zip archive if target is a folder or room).\n\n        ### Precondition:\n        Valid download token.\n\n        ### Postcondition:\n        Stream is returned.\n\n        ### Further Information:\n        Range requests are supported.  \n        Range requests are illegal for zip archive download.\n      externalDocs:\n        description: Range Requests\n        url: https://tools.ietf.org/html/rfc7233\n      operationId: downloadFileViaTokenPublic\n      parameters:\n        - description: Access key\n          in: path\n          name: access_key\n          required: true\n          schema:\n            type: string\n        - description: Download token\n          in: path\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: |-\n            Range \n\n            e.g. `bytes=0-999`\n          in: header\n          name: Range\n          required: false\n          schema:\n            type: string\n        - description: Always return `application/octet-stream` instead of specific mimetype\n          in: query\n          name: generic_mimetype\n          required: false\n          schema:\n            type: boolean\n        - description: \"Use Content-Disposition: `inline` instead of `attachment`\"\n          in: query\n          name: inline\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: OK\n        \"206\":\n          description: Partial Content\n        \"400\":\n          content:\n            application/octet-stream:\n              examples:\n                \"-80000\":\n                  description: |-\n                    \n                    * [-80000] Mandatory fields cannot be empty\n                  summary: Mandatory fields cannot be empty\n                  value:\n                    code: 400\n                    debugInfo: Mandatory fields cannot be empty\n                    errorCode: -80000\n                    message: Bad Request\n                \"-80022\":\n                  description: |-\n                    \n                    * [-80022] Range cannot be set at ZIP download\n                  summary: Range cannot be set at ZIP download\n                  value:\n                    code: 400\n                    debugInfo: Range cannot be set at ZIP download\n                    errorCode: -80022\n                    message: Bad Request\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Bad Request\n        \"404\":\n          content:\n            application/octet-stream:\n              examples:\n                \"-40000\":\n                  description: |-\n                    \n                    * [-40000] Container not found\n                  summary: Container not found\n                  value:\n                    code: 404\n                    debugInfo: Container not found\n                    errorCode: -40000\n                    message: Not Found\n                \"-40751\":\n                  description: |-\n                    \n                    * [-40751] File not found\n                  summary: File not found\n                  value:\n                    code: 404\n                    debugInfo: File not found\n                    errorCode: -40751\n                    message: Not Found\n                \"-41000\":\n                  description: |-\n                    \n                    * [-40000] Node not found\n                  summary: Node not found\n                  value:\n                    code: 404\n                    debugInfo: Node not found\n                    errorCode: -41000\n                    message: Not Found\n                \"-50000\":\n                  description: |-\n                    \n                    * [-50000] Download access key not found\n                  summary: Download access key not found\n                  value:\n                    code: 404\n                    debugInfo: Download access key not found\n                    errorCode: -50000\n                    message: Not Found\n                \"-50001\":\n                  description: |-\n                    \n                    * [-50001] Download token not found\n                  summary: Download token not found\n                  value:\n                    code: 404\n                    debugInfo: Download token not found\n                    errorCode: -50001\n                    message: Not Found\n                \"-50002\":\n                  description: |-\n                    \n                    * [-50002] Downloads limit reached\n                  summary: Downloads limit reached\n                  value:\n                    code: 404\n                    debugInfo: Downloads limit reached\n                    errorCode: -50002\n                    message: Not Found\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Not Found\n        \"406\":\n          content:\n            application/octet-stream:\n              examples:\n                \"null\":\n                  description: \"Acceptable Content-Types are: `[application/octet-stream]`\"\n                  summary: Content type not acceptable\n                  value:\n                    code: 406\n                    debugInfo: \"Content type '...' not acceptable. Acceptable Content-Types are: [...]\"\n                    errorCode: null\n                    message: Not Acceptable\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Not Acceptable\n        \"416\":\n          content:\n            application/octet-stream:\n              examples:\n                \"null\":\n                  description: Download range doesn't match pattern\n                  summary: Range Not Satisfiable\n                  value:\n                    code: 416\n                    debugInfo: Download range '...' doesn't match pattern '...'\n                    errorCode: null\n                    message: Range Not Satisfiable\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Range Not Satisfiable\n      security: []\n      summary: Download file with token\n      tags:\n        - public\n    head:\n      description: |-\n        ### Description:  \n        Download a file (or zip archive if target is a folder or room).\n\n        ### Precondition:\n        Valid download token.\n\n        ### Postcondition:\n        Stream is returned.\n\n        ### Further Information:\n        Range requests are supported.  \n        Range requests are illegal for zip archive download.\n      externalDocs:\n        description: Range Requests\n        url: https://tools.ietf.org/html/rfc7233\n      operationId: downloadFileViaTokenPublic_1\n      parameters:\n        - description: Access key\n          in: path\n          name: access_key\n          required: true\n          schema:\n            type: string\n        - description: Download token\n          in: path\n          name: token\n          required: true\n          schema:\n            type: string\n        - description: |-\n            Range \n\n            e.g. `bytes=0-999`\n          in: header\n          name: Range\n          required: false\n          schema:\n            type: string\n        - description: Always return `application/octet-stream` instead of specific mimetype\n          in: query\n          name: generic_mimetype\n          required: false\n          schema:\n            type: boolean\n        - description: \"Use Content-Disposition: `inline` instead of `attachment`\"\n          in: query\n          name: inline\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: OK\n        \"206\":\n          description: Partial Content\n        \"400\":\n          content:\n            application/octet-stream:\n              examples:\n                \"-80000\":\n                  description: |-\n                    \n                    * [-80000] Mandatory fields cannot be empty\n                  summary: Mandatory fields cannot be empty\n                  value:\n                    code: 400\n                    debugInfo: Mandatory fields cannot be empty\n                    errorCode: -80000\n                    message: Bad Request\n                \"-80022\":\n                  description: |-\n                    \n                    * [-80022] Range cannot be set at ZIP download\n                  summary: Range cannot be set at ZIP download\n                  value:\n                    code: 400\n                    debugInfo: Range cannot be set at ZIP download\n                    errorCode: -80022\n                    message: Bad Request\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Bad Request\n        \"404\":\n          content:\n            application/octet-stream:\n              examples:\n                \"-40000\":\n                  description: |-\n                    \n                    * [-40000] Container not found\n                  summary: Container not found\n                  value:\n                    code: 404\n                    debugInfo: Container not found\n                    errorCode: -40000\n                    message: Not Found\n                \"-40751\":\n                  description: |-\n                    \n                    * [-40751] File not found\n                  summary: File not found\n                  value:\n                    code: 404\n                    debugInfo: File not found\n                    errorCode: -40751\n                    message: Not Found\n                \"-41000\":\n                  description: |-\n                    \n                    * [-40000] Node not found\n                  summary: Node not found\n                  value:\n                    code: 404\n                    debugInfo: Node not found\n                    errorCode: -41000\n                    message: Not Found\n                \"-50000\":\n                  description: |-\n                    \n                    * [-50000] Download access key not found\n                  summary: Download access key not found\n                  value:\n                    code: 404\n                    debugInfo: Download access key not found\n                    errorCode: -50000\n                    message: Not Found\n                \"-50001\":\n                  description: |-\n                    \n                    * [-50001] Download token not found\n                  summary: Download token not found\n                  value:\n                    code: 404\n                    debugInfo: Download token not found\n                    errorCode: -50001\n                    message: Not Found\n                \"-50002\":\n                  description: |-\n                    \n                    * [-50002] Downloads limit reached\n                  summary: Downloads limit reached\n                  value:\n                    code: 404\n                    debugInfo: Downloads limit reached\n                    errorCode: -50002\n                    message: Not Found\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Not Found\n        \"406\":\n          content:\n            application/octet-stream:\n              examples:\n                \"null\":\n                  description: \"Acceptable Content-Types are: `[application/octet-stream]`\"\n                  summary: Content type not acceptable\n                  value:\n                    code: 406\n                    debugInfo: \"Content type '...' not acceptable. Acceptable Content-Types are: [...]\"\n                    errorCode: null\n                    message: Not Acceptable\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Not Acceptable\n        \"416\":\n          content:\n            application/octet-stream:\n              examples:\n                \"null\":\n                  description: Download range doesn't match pattern\n                  summary: Range Not Satisfiable\n                  value:\n                    code: 416\n                    debugInfo: Download range '...' doesn't match pattern '...'\n                    errorCode: null\n                    message: Range Not Satisfiable\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Range Not Satisfiable\n      security: []\n      summary: Download file with token\n      tags:\n        - public\n  \"/v4/public/shares/uploads/{access_key}\":\n    get:\n      description: |\n        ### Description:  \n        Provides information about the desired Upload Share.\n\n        ### Precondition:\n        Only `userUserPublicKeyList` is returned to the users who owns one of the following permissions: \u003cspan style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px; display: inline;'\u003e\u0026#128275; manage\u003c/span\u003e, \u003cspan style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px; display: inline;'\u003e\u0026#128275; read\u003c/span\u003e, \u003cspan style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px; display: inline;'\u003e\u0026#128275; manage download share\u003c/span\u003e, \u003cspan style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px; display: inline;'\u003e\u0026#128275; manage upload share\u003c/span\u003e\n\n        ### Postcondition:\n        None.\n\n        ### Further Information:\n        If no password is set, the returned information is reduced to the following attributes (if available):\n\n        * `name`\n        * `maxSlots`\n        * `createdAt`\n        * `isProtected`\n        * `isEncrypted`\n        * `showUploadedFiles`\n        * `userUserPublicKeyList` (if parent is end-to-end encrypted)\n\n        Only if the password is transmitted as `X-Sds-Share-Password` header, all values are returned.\n      operationId: requestPublicUploadShareInfo\n      parameters:\n        - description: |-\n            Upload share password. Should be base64-encoded.\n\n            Plain X-Sds-Share-Passwords are *deprecated* and will be removed in the future\n          in: header\n          name: X-Sds-Share-Password\n          schema:\n            type: string\n        - description: Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) \u0026 [leettime.de](http://leettime.de/))\n          in: header\n          name: X-Sds-Date-Format\n          schema:\n            enum:\n              - UTC\n              - LOCAL\n              - OFFSET\n              - EPOCH\n              - LEET\n        - description: Access key\n          in: path\n          name: access_key\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PublicUploadShare\"\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              examples:\n                \"-50505\":\n                  description: |-\n                    \n                    * [-50505] No room user has a keypair\n                  summary: No room user has a keypair\n                  value:\n                    code: 400\n                    debugInfo: No room user has a keypair\n                    errorCode: -50505\n                    message: Bad Request\n                \"-80000\":\n                  description: |-\n                    \n                    * [-80000] Mandatory fields cannot be empty\n                  summary: Mandatory fields cannot be empty\n                  value:\n                    code: 400\n                    debugInfo: Mandatory fields cannot be empty\n                    errorCode: -80000\n                    message: Bad Request\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              examples:\n                \"-50502\":\n                  description: |-\n                    \n                    * [-50502] Wrong password for Upload Share link\n                  summary: Wrong password for Upload Share link\n                  value:\n                    code: 401\n                    debugInfo: Wrong password for Upload Share link\n                    errorCode: -50502\n                    message: Unauthorized\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Unauthorized\n        \"404\":\n          content:\n            application/json:\n              examples:\n                \"-50501\":\n                  description: |-\n                    \n                    * [-50501] Upload access key not found\n                  summary: Upload access key not found\n                  value:\n                    code: 404\n                    debugInfo: Upload access key not found\n                    errorCode: -50501\n                    message: Not Found\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Not Found\n        \"406\":\n          content:\n            application/json:\n              examples:\n                \"null\":\n                  description: \"Acceptable Content-Types are: `[application/json]`\"\n                  summary: Content type not acceptable\n                  value:\n                    code: 406\n                    debugInfo: \"Content type '...' not acceptable. Acceptable Content-Types are: [...]\"\n                    errorCode: null\n                    message: Not Acceptable\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Not Acceptable\n      security: []\n      summary: Request public Upload Share information\n      tags:\n        - public\n    post:\n      description: |\n        ### Description:  \n        Create a new upload channel.\n\n        ### Precondition:\n        None.\n\n        ### Postcondition:\n        Upload channel is created and corresponding upload URL, token \u0026 upload ID are returned.\n\n        ### Further Information:\n        Use `uploadUrl` the upload `token` is deprecated.  \n\n        Please provide the size of the intended upload so that the quota can be checked in advanced and no data is transferred unnecessarily.\n\n        ### Node naming convention:\n        * Node (room, folder, file) names are limited to **150** characters.\n        * Illegal names:  \n        `'CON', 'PRN', 'AUX', 'NUL', 'COM1', 'COM2', 'COM3', 'COM4', 'COM5', 'COM6', 'COM7', 'COM8', 'COM9', 'LPT1', 'LPT2', 'LPT3', 'LPT4', 'LPT5', 'LPT6', 'LPT7', 'LPT8', 'LPT9', (and any of those with an extension)`\n        * Illegal characters in names:  \n        `'\\\\', '\u003c','\u003e', ':', '\\\"', '|', '?', '*', '/', leading '-', trailing '.' `\n      operationId: createShareUploadChannel\n      parameters:\n        - description: Access key\n          in: path\n          name: access_key\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateShareUploadChannelRequest\"\n              description: Request model for creating an upload channel\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateShareUploadChannelResponse\"\n          description: Created\n        \"400\":\n          content:\n            application/json:\n              examples:\n                \"-40755\":\n                  description: |-\n                    \n                    * [-40755] Bad node name\n                  summary: Bad node name\n                  value:\n                    code: 400\n                    debugInfo: Bad node name\n                    errorCode: -40755\n                    message: Bad Request\n                \"-50505\":\n                  description: |-\n                    \n                    * [-50505] No room user has a keypair\n                  summary: No room user has a keypair\n                  value:\n                    code: 400\n                    debugInfo: No room user has a keypair\n                    errorCode: -50505\n                    message: Bad Request\n                \"-50506\":\n                  description: |-\n                    \n                    * [-50506] Exceeds the number of files for this Upload Share\n                  summary: Exceeds the number of files for this Upload Share\n                  value:\n                    code: 400\n                    debugInfo: Exceeds the number of files for this Upload Share\n                    errorCode: -50506\n                    message: Bad Request\n                \"-80000\":\n                  description: |-\n                    \n                    * [-80000] Mandatory fields cannot be empty\n                  summary: Mandatory fields cannot be empty\n                  value:\n                    code: 400\n                    debugInfo: Mandatory fields cannot be empty\n                    errorCode: -80000\n                    message: Bad Request\n                \"-80001\":\n                  description: |-\n                    \n                    * [-80001] Invalid positive number\n                  summary: Invalid positive number\n                  value:\n                    code: 400\n                    debugInfo: Invalid positive number\n                    errorCode: -80001\n                    message: Bad Request\n                \"-80002\":\n                  description: |-\n                    \n                    * [-80002] Invalid number\n                  summary: Invalid number\n                  value:\n                    code: 400\n                    debugInfo: Invalid number\n                    errorCode: -80002\n                    message: Bad Request\n                \"-80007\":\n                  description: |-\n                    \n                    * [-80007] Maximum allowed length is exceeded\n                  summary: Maximum allowed length is exceeded\n                  value:\n                    code: 400\n                    debugInfo: Maximum allowed length is exceeded\n                    errorCode: -80007\n                    message: Bad Request\n                \"-80037\":\n                  description: |-\n                    \n                    * [-80037] Exceeds maximum data length for AES GCM encryption\n                  summary: Exceeds maximum data length for AES GCM encryption\n                  value:\n                    code: 400\n                    debugInfo: Exceeds maximum data length for AES GCM encryption\n                    errorCode: -80037\n                    message: Bad Request\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              examples:\n                \"-50502\":\n                  description: |-\n                    \n                    * [-50502] Wrong password for Upload Share link\n                  summary: Wrong password for Upload Share link\n                  value:\n                    code: 401\n                    debugInfo: Wrong password for Upload Share link\n                    errorCode: -50502\n                    message: Unauthorized\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Unauthorized\n        \"403\":\n          content:\n            application/json:\n              examples:\n                \"-51000\":\n                  description: |-\n                    \n                    * [-51000] (Up-) Download Share is temporarily locked\n                  summary: (Up-) Download Share is temporarily locked\n                  value:\n                    code: 403\n                    debugInfo: (Up-) Download Share is temporarily locked\n                    errorCode: -51000\n                    message: Forbidden\n                \"null\":\n                  description: Insufficient rights to perform the operation\n                  summary: Forbidden\n                  value:\n                    code: 403\n                    debugInfo: \"\"\n                    errorCode: null\n                    message: Forbidden\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              examples:\n                \"-50501\":\n                  description: |-\n                    \n                    * [-50501] Upload access key not found\n                  summary: Upload access key not found\n                  value:\n                    code: 404\n                    debugInfo: Upload access key not found\n                    errorCode: -50501\n                    message: Not Found\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Not Found\n        \"406\":\n          content:\n            application/json:\n              examples:\n                \"null\":\n                  description: \"Acceptable Content-Types are: `[application/json]`\"\n                  summary: Content type not acceptable\n                  value:\n                    code: 406\n                    debugInfo: \"Content type '...' not acceptable. Acceptable Content-Types are: [...]\"\n                    errorCode: null\n                    message: Not Acceptable\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Not Acceptable\n        \"412\":\n          content:\n            application/json:\n              examples:\n                \"-90030\":\n                  description: |-\n                    \n                    * [-90030] S3 storage disabled\n                  summary: S3 storage disabled\n                  value:\n                    code: 412\n                    debugInfo: S3 storage disabled\n                    errorCode: -90030\n                    message: Precondition Failed\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Precondition Failed\n        \"504\":\n          content:\n            application/json:\n              examples:\n                \"-90027\":\n                  description: |-\n                    \n                    * [-90027] S3 connection failed\n                  summary: S3 connection failed\n                  value:\n                    code: 504\n                    debugInfo: S3 connection failed\n                    errorCode: -90027\n                    message: Gateway Timeout\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Gateway Timeout\n        \"507\":\n          content:\n            application/json:\n              examples:\n                \"-40200\":\n                  description: |-\n                    \n                    * [-40200] Exceeds the free node quota in room\n                  summary: Exceeds the free node quota in room\n                  value:\n                    code: 507\n                    debugInfo: Exceeds the free node quota in room\n                    errorCode: -40200\n                    message: Insufficient Storage\n                \"-50504\":\n                  description: |-\n                    \n                    * [-50504] Exceeds the quota for this Upload Share\n                  summary: Exceeds the quota for this Upload Share\n                  value:\n                    code: 507\n                    debugInfo: Exceeds the quota for this Upload Share\n                    errorCode: -50504\n                    message: Insufficient Storage\n                \"-90200\":\n                  description: |-\n                    \n                    * [-90200] Exceeds the free customer quota\n                  summary: Exceeds the free customer quota\n                  value:\n                    code: 507\n                    debugInfo: Exceeds the free customer quota\n                    errorCode: -90200\n                    message: Insufficient Storage\n                \"-90201\":\n                  description: |-\n                    \n                    * [-90201] Exceeds the free customer physical disk space\n                  summary: Exceeds the free customer physical disk space\n                  value:\n                    code: 507\n                    debugInfo: Exceeds the free customer physical disk space\n                    errorCode: -90201\n                    message: Insufficient Storage\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Insufficient Storage\n      security: []\n      summary: Create new file upload channel\n      tags:\n        - public\n  \"/v4/public/shares/uploads/{access_key}/{upload_id}\":\n    delete:\n      description: |-\n        ### Description:\n        Abort (chunked) upload via Upload Share.\n\n        ### Precondition:\n        Valid Upload ID.\n\n        ### Postcondition:\n        Aborts upload and invalidates upload ID / token.\n\n        ### Further Information:\n        None.\n      operationId: cancelFileUploadViaShare\n      parameters:\n        - description: Access key\n          in: path\n          name: access_key\n          required: true\n          schema:\n            type: string\n        - description: Upload channel ID\n          in: path\n          name: upload_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: No Content\n        \"400\":\n          content:\n            application/json:\n              examples:\n                \"-50506\":\n                  description: |-\n                    \n                    * [-50506] Exceeds the number of files for this Upload Share\n                  summary: Exceeds the number of files for this Upload Share\n                  value:\n                    code: 400\n                    debugInfo: Exceeds the number of files for this Upload Share\n                    errorCode: -50506\n                    message: Bad Request\n                \"-80000\":\n                  description: |-\n                    \n                    * [-80000] Mandatory fields cannot be empty\n                  summary: Mandatory fields cannot be empty\n                  value:\n                    code: 400\n                    debugInfo: Mandatory fields cannot be empty\n                    errorCode: -80000\n                    message: Bad Request\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Bad Request\n        \"404\":\n          content:\n            application/json:\n              examples:\n                \"-20501\":\n                  description: |-\n                    \n                    * [-20501] Upload not found\n                  summary: Upload not found\n                  value:\n                    code: 404\n                    debugInfo: Upload not found\n                    errorCode: -20501\n                    message: Not Found\n                \"-50501\":\n                  description: |-\n                    \n                    * [-50501] Upload access key not found\n                  summary: Upload access key not found\n                  value:\n                    code: 404\n                    debugInfo: Upload access key not found\n                    errorCode: -50501\n                    message: Not Found\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Not Found\n        \"406\":\n          content:\n            application/json:\n              examples:\n                \"null\":\n                  description: \"Acceptable Content-Types are: `[application/json]`\"\n                  summary: Content type not acceptable\n                  value:\n                    code: 406\n                    debugInfo: \"Content type '...' not acceptable. Acceptable Content-Types are: [...]\"\n                    errorCode: null\n                    message: Not Acceptable\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Not Acceptable\n        \"504\":\n          content:\n            application/json:\n              examples:\n                \"-90027\":\n                  description: |-\n                    \n                    * [-90027] S3 connection failed\n                  summary: S3 connection failed\n                  value:\n                    code: 504\n                    debugInfo: S3 connection failed\n                    errorCode: -90027\n                    message: Gateway Timeout\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Gateway Timeout\n        \"507\":\n          content:\n            application/json:\n              examples:\n                \"-50504\":\n                  description: |-\n                    \n                    * [-50504] Exceeds the quota for this Upload Share\n                  summary: Exceeds the quota for this Upload Share\n                  value:\n                    code: 507\n                    debugInfo: Exceeds the quota for this Upload Share\n                    errorCode: -50504\n                    message: Insufficient Storage\n                \"-90200\":\n                  description: |-\n                    \n                    * [-90200] Exceeds the free customer quota\n                  summary: Exceeds the free customer quota\n                  value:\n                    code: 507\n                    debugInfo: Exceeds the free customer quota\n                    errorCode: -90200\n                    message: Insufficient Storage\n                \"-90201\":\n                  description: |-\n                    \n                    * [-90201] Exceeds the free customer physical disk space\n                  summary: Exceeds the free customer physical disk space\n                  value:\n                    code: 507\n                    debugInfo: Exceeds the free customer physical disk space\n                    errorCode: -90201\n                    message: Insufficient Storage\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Insufficient Storage\n      security: []\n      summary: Cancel file upload\n      tags:\n        - public\n    get:\n      description: |-\n        \u003ch3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid #AAA; border-radius: 5px; display: table-cell;'\u003e\u0026#128640; Since v4.15.0\u003c/h3\u003e\n\n        ### Description:\n        Request status of a S3 file upload.\n\n        ### Precondition:\n        An upload channel has been created and the user has \u003cspan style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px; display: inline;'\u003e\u0026#128275; create\u003c/span\u003e permissions in the parent container (room or folder).\n\n        ### Postcondition:\n        Status of S3 multipart upload request is returned.\n\n        ### Further Information:\n        None.\n\n        ### Possible errors:\n        \u003cdetails style=\"padding: 10px; background-color: #F6F7F8; border: 1px solid #AAA; border-radius: 5px;\"\u003e\n        \u003csummary style=\"cursor: pointer; outline: none\"\u003e\u003cstrong\u003eExpand\u003c/strong\u003e\u003c/summary\u003e\n\n        | Http Status | Error Code | Description |\n        | :--- | :--- | :--- |\n        | `400 Bad Request` | `-80000` | Mandatory fields cannot be empty |\n        | `400 Bad Request` | `-80001` | Invalid positive number |\n        | `400 Bad Request` | `-80002` | Invalid number |\n        | `400 Bad Request` | `-40001` | (Target) room is not encrypted |\n        | `400 Bad Request` | `-40755` | Bad file name |\n        | `400 Bad Request` | `-40763` | File key must be set for an upload into encrypted room |\n        | `400 Bad Request` | `-50506` | Exceeds the number of files for this Upload Share |\n        | `403 Forbidden` |  | Access denied |\n        | `404 Not Found` | `-20501` | Upload not found |\n        | `404 Not Found` | `-40000` | Container not found |\n        | `404 Not Found` | `-41000` | Node not found |\n        | `404 Not Found` | `-70501` | User not found |\n        | `409 Conflict` | `-40010` | Container cannot be overwritten |\n        | `409 Conflict` |  | File cannot be overwritten |\n        | `500 Internal Server Error` |  | System Error |\n        | `502 Bad Gateway` |  | S3 Error |\n        | `502 Insufficient Storage` | `-50504` | Exceeds the quota for this Upload Share |\n        | `502 Insufficient Storage` | `-40200` | Exceeds the free node quota in room |\n        | `502 Insufficient Storage` | `-90200` | Exceeds the free customer quota |\n        | `502 Insufficient Storage` | `-90201` | Exceeds the free customer physical disk space |\n\n        \u003c/details\u003e\n      operationId: requestUploadStatusPublic\n      parameters:\n        - description: Access key\n          in: path\n          name: access_key\n          required: true\n          schema:\n            type: string\n        - description: Upload channel ID\n          in: path\n          name: upload_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/S3ShareUploadStatus\"\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              examples:\n                \"-80000\":\n                  description: |-\n                    \n                    * [-80000] Mandatory fields cannot be empty\n                  summary: Mandatory fields cannot be empty\n                  value:\n                    code: 400\n                    debugInfo: Mandatory fields cannot be empty\n                    errorCode: -80000\n                    message: Bad Request\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Bad Request\n        \"404\":\n          content:\n            application/json:\n              examples:\n                \"-20501\":\n                  description: |-\n                    \n                    * [-20501] Upload not found\n                  summary: Upload not found\n                  value:\n                    code: 404\n                    debugInfo: Upload not found\n                    errorCode: -20501\n                    message: Not Found\n                \"-40000\":\n                  description: |-\n                    \n                    * [-40000] Container not found\n                  summary: Container not found\n                  value:\n                    code: 404\n                    debugInfo: Container not found\n                    errorCode: -40000\n                    message: Not Found\n                \"-41000\":\n                  description: |-\n                    \n                    * [-40000] Node not found\n                  summary: Node not found\n                  value:\n                    code: 404\n                    debugInfo: Node not found\n                    errorCode: -41000\n                    message: Not Found\n                \"-90034\":\n                  description: |-\n                    \n                    * [-90034] Corresponding S3 upload ID not found\n                  summary: Corresponding S3 upload ID not found\n                  value:\n                    code: 404\n                    debugInfo: Corresponding S3 upload ID not found\n                    errorCode: -90034\n                    message: Not Found\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Not Found\n        \"406\":\n          content:\n            application/json:\n              examples:\n                \"null\":\n                  description: \"Acceptable Content-Types are: `[application/json]`\"\n                  summary: Content type not acceptable\n                  value:\n                    code: 406\n                    debugInfo: \"Content type '...' not acceptable. Acceptable Content-Types are: [...]\"\n                    errorCode: null\n                    message: Not Acceptable\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Not Acceptable\n        \"412\":\n          content:\n            application/json:\n              examples:\n                \"-90030\":\n                  description: |-\n                    \n                    * [-90030] S3 storage disabled\n                  summary: S3 storage disabled\n                  value:\n                    code: 412\n                    debugInfo: S3 storage disabled\n                    errorCode: -90030\n                    message: Precondition Failed\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Precondition Failed\n      security: []\n      summary: Request status of S3 file upload\n      tags:\n        - public\n    post:\n      description: |-\n        ### Description:  \n        Chunked upload of files via Upload Share.\n\n        ### Precondition:\n        Valid upload ID.\n\n        ### Postcondition:\n        Chunk of file is uploaded.\n\n        ### Further Information:\n        Chunked uploads (range requests) are supported.\n\n        Following `Content-Types` are supported by this API:\n        * `multipart/form-data`\n        * provided `Content-Type`  \n\n        For both file upload types set the correct `Content-Type` header and body.  \n\n        ### Examples:  \n\n        * `multipart/form-data`\n        ```\n        POST /api/v4/public/shares/uploads/{access_key}{upload_id} HTTP/1.1\n\n        Header:\n        ...\n        Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW\n        ...\n\n        Body:\n        ------WebKitFormBoundary7MA4YWxkTrZu0gW\n        Content-Disposition: form-data; name=\"file\"; filename=\"file.txt\"\n        Content-Type: text/plain\n\n        Content of file.txt\n        ------WebKitFormBoundary7MA4YWxkTrZu0gW--\n        ```\n\n        * any other `Content-Type`  \n        ```\n        POST /api/v4/public/shares/uploads/{access_key}{upload_id} HTTP/1.1\n\n        Header:\n        ...\n        Content-Type: { ... }\n        ...\n\n        Body:\n        raw content\n        ```\n      externalDocs:\n        description: Range Requests\n        url: https://tools.ietf.org/html/rfc7233\n      operationId: uploadFileAsBinaryPublic_1\n      parameters:\n        - description: Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) \u0026 [leettime.de](http://leettime.de/))\n          in: header\n          name: X-Sds-Date-Format\n          schema:\n            enum:\n              - UTC\n              - LOCAL\n              - OFFSET\n              - EPOCH\n              - LEET\n        - description: Access key\n          in: path\n          name: access_key\n          required: true\n          schema:\n            type: string\n        - description: Upload channel ID\n          in: path\n          name: upload_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            Content-Range \n\n            e.g. `bytes 0-999/3980`\n          in: header\n          name: Content-Range\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  format: binary\n                  type: string\n              type: object\n        description: File\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ChunkUploadResponse\"\n          description: Created\n        \"400\":\n          content:\n            application/json:\n              examples:\n                \"-50505\":\n                  description: |-\n                    \n                    * [-50505] No room user has a keypair\n                  summary: No room user has a keypair\n                  value:\n                    code: 400\n                    debugInfo: No room user has a keypair\n                    errorCode: -50505\n                    message: Bad Request\n                \"-50506\":\n                  description: |-\n                    \n                    * [-50506] Exceeds the number of files for this Upload Share\n                  summary: Exceeds the number of files for this Upload Share\n                  value:\n                    code: 400\n                    debugInfo: Exceeds the number of files for this Upload Share\n                    errorCode: -50506\n                    message: Bad Request\n                \"-80000\":\n                  description: |-\n                    \n                    * [-80000] Mandatory fields cannot be empty\n                  summary: Mandatory fields cannot be empty\n                  value:\n                    code: 400\n                    debugInfo: Mandatory fields cannot be empty\n                    errorCode: -80000\n                    message: Bad Request\n                \"-80021\":\n                  description: |-\n                    \n                    * [-80021] Incorrect upload Content-Range\n                  summary: Incorrect upload Content-Range\n                  value:\n                    code: 400\n                    debugInfo: Incorrect upload Content-Range\n                    errorCode: -80021\n                    message: Bad Request\n                \"-80037\":\n                  description: |-\n                    \n                    * [-80037] Exceeds maximum data length for AES GCM encryption\n                  summary: Exceeds maximum data length for AES GCM encryption\n                  value:\n                    code: 400\n                    debugInfo: Exceeds maximum data length for AES GCM encryption\n                    errorCode: -80037\n                    message: Bad Request\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/ChunkUploadResponse\"\n                  - $ref: \"#/components/schemas/ErrorResponse\"\n          description: Bad Request\n        \"404\":\n          content:\n            application/json:\n              examples:\n                \"-20501\":\n                  description: |-\n                    \n                    * [-20501] Upload not found\n                  summary: Upload not found\n                  value:\n                    code: 404\n                    debugInfo: Upload not found\n                    errorCode: -20501\n                    message: Not Found\n                \"-50501\":\n                  description: |-\n                    \n                    * [-50501] Upload access key not found\n                  summary: Upload access key not found\n                  value:\n                    code: 404\n                    debugInfo: Upload access key not found\n                    errorCode: -50501\n                    message: Not Found\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/ChunkUploadResponse\"\n                  - $ref: \"#/components/schemas/ErrorResponse\"\n          description: Not Found\n        \"406\":\n          content:\n            application/json:\n              examples:\n                \"null\":\n                  description: \"Acceptable Content-Types are: `[application/json]`\"\n                  summary: Content type not acceptable\n                  value:\n                    code: 406\n                    debugInfo: \"Content type '...' not acceptable. Acceptable Content-Types are: [...]\"\n                    errorCode: null\n                    message: Not Acceptable\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/ChunkUploadResponse\"\n                  - $ref: \"#/components/schemas/ErrorResponse\"\n          description: Not Acceptable\n        \"412\":\n          content:\n            application/json:\n              examples:\n                \"-90030\":\n                  description: |-\n                    \n                    * [-90030] S3 storage disabled\n                  summary: S3 storage disabled\n                  value:\n                    code: 412\n                    debugInfo: S3 storage disabled\n                    errorCode: -90030\n                    message: Precondition Failed\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/ChunkUploadResponse\"\n                  - $ref: \"#/components/schemas/ErrorResponse\"\n          description: Precondition Failed\n        \"507\":\n          content:\n            application/json:\n              examples:\n                \"-40200\":\n                  description: |-\n                    \n                    * [-40200] Exceeds the free node quota in room\n                  summary: Exceeds the free node quota in room\n                  value:\n                    code: 507\n                    debugInfo: Exceeds the free node quota in room\n                    errorCode: -40200\n                    message: Insufficient Storage\n                \"-50504\":\n                  description: |-\n                    \n                    * [-50504] Exceeds the quota for this Upload Share\n                  summary: Exceeds the quota for this Upload Share\n                  value:\n                    code: 507\n                    debugInfo: Exceeds the quota for this Upload Share\n                    errorCode: -50504\n                    message: Insufficient Storage\n                \"-90200\":\n                  description: |-\n                    \n                    * [-90200] Exceeds the free customer quota\n                  summary: Exceeds the free customer quota\n                  value:\n                    code: 507\n                    debugInfo: Exceeds the free customer quota\n                    errorCode: -90200\n                    message: Insufficient Storage\n                \"-90201\":\n                  description: |-\n                    \n                    * [-90201] Exceeds the free customer physical disk space\n                  summary: Exceeds the free customer physical disk space\n                  value:\n                    code: 507\n                    debugInfo: Exceeds the free customer physical disk space\n                    errorCode: -90201\n                    message: Insufficient Storage\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/ChunkUploadResponse\"\n                  - $ref: \"#/components/schemas/ErrorResponse\"\n          description: Insufficient Storage\n      security: []\n      summary: Upload file\n      tags:\n        - public\n    put:\n      description: |\n        ### Description:\n        Finalize (chunked) upload via Upload Share.\n\n        ### Precondition:\n        Valid upload ID.  \n        Only returns users that owns one of the following permissions: \u003cspan style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px; display: inline;'\u003e\u0026#128275; manage\u003c/span\u003e, \u003cspan style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px; display: inline;'\u003e\u0026#128275; read\u003c/span\u003e, \u003cspan style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px; display: inline;'\u003e\u0026#128275; manage download share\u003c/span\u003e, \u003cspan style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px; display: inline;'\u003e\u0026#128275; manage upload share\u003c/span\u003e\n\n        ### Postcondition:\n        Finalizes upload.\n\n        ### Further Information:\n        Chunked uploads (range requests) are supported.  \n\n        Please ensure that all chunks have been transferred correctly before finishing the upload.  \n        If file hash has been created in time a `201 Created` will be responded and hash will be part of response, otherwise it will be a `202 Accepted` without it.\n      externalDocs:\n        description: Range Requests\n        url: https://tools.ietf.org/html/rfc7233\n      operationId: completeFileUploadViaShare\n      parameters:\n        - description: Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) \u0026 [leettime.de](http://leettime.de/))\n          in: header\n          name: X-Sds-Date-Format\n          schema:\n            enum:\n              - UTC\n              - LOCAL\n              - OFFSET\n              - EPOCH\n              - LEET\n        - description: Access key\n          in: path\n          name: access_key\n          required: true\n          schema:\n            type: string\n        - description: Upload channel ID\n          in: path\n          name: upload_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UserFileKeyList\"\n        description: Mandatory for encrypted shares\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PublicUploadedFileData\"\n          description: Created\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PublicUploadedFileData\"\n          description: Accepted\n        \"400\":\n          content:\n            application/json:\n              examples:\n                \"-40001\":\n                  description: |-\n                    \n                    * [-40001] (Target) room is not encrypted\n                  summary: (Target) room is not encrypted\n                  value:\n                    code: 400\n                    debugInfo: (Target) room is not encrypted\n                    errorCode: -40001\n                    message: Bad Request\n                \"-40763\":\n                  description: |-\n                    \n                    * [-40763] File key must be set for an upload into encrypted room\n                  summary: File key must be set for an upload into encrypted room\n                  value:\n                    code: 400\n                    debugInfo: File key must be set for an upload into encrypted room\n                    errorCode: -40763\n                    message: Bad Request\n                \"-50505\":\n                  description: |-\n                    \n                    * [-50505] No room user has a keypair\n                  summary: No room user has a keypair\n                  value:\n                    code: 400\n                    debugInfo: No room user has a keypair\n                    errorCode: -50505\n                    message: Bad Request\n                \"-50506\":\n                  description: |-\n                    \n                    * [-50506] Exceeds the number of files for this Upload Share\n                  summary: Exceeds the number of files for this Upload Share\n                  value:\n                    code: 400\n                    debugInfo: Exceeds the number of files for this Upload Share\n                    errorCode: -50506\n                    message: Bad Request\n                \"-80000\":\n                  description: |-\n                    \n                    * [-80000] Mandatory fields cannot be empty\n                  summary: Mandatory fields cannot be empty\n                  value:\n                    code: 400\n                    debugInfo: Mandatory fields cannot be empty\n                    errorCode: -80000\n                    message: Bad Request\n                \"-80001\":\n                  description: |-\n                    \n                    * [-80001] Invalid positive number\n                  summary: Invalid positive number\n                  value:\n                    code: 400\n                    debugInfo: Invalid positive number\n                    errorCode: -80001\n                    message: Bad Request\n                \"-80002\":\n                  description: |-\n                    \n                    * [-80002] Invalid number\n                  summary: Invalid number\n                  value:\n                    code: 400\n                    debugInfo: Invalid number\n                    errorCode: -80002\n                    message: Bad Request\n                \"-80007\":\n                  description: |-\n                    \n                    * [-80007] Maximum allowed length is exceeded\n                  summary: Maximum allowed length is exceeded\n                  value:\n                    code: 400\n                    debugInfo: Maximum allowed length is exceeded\n                    errorCode: -80007\n                    message: Bad Request\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Bad Request\n        \"403\":\n          content:\n            application/json:\n              examples:\n                \"-70020\":\n                  description: |-\n                    \n                    * [-70020] User does not have a keypair\n                  summary: User does not have a keypair\n                  value:\n                    code: 403\n                    debugInfo: User does not have a keypair\n                    errorCode: -70020\n                    message: Forbidden\n                \"null\":\n                  description: Insufficient rights to perform the operation\n                  summary: Forbidden\n                  value:\n                    code: 403\n                    debugInfo: \"\"\n                    errorCode: null\n                    message: Forbidden\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              examples:\n                \"-20501\":\n                  description: |-\n                    \n                    * [-20501] Upload not found\n                  summary: Upload not found\n                  value:\n                    code: 404\n                    debugInfo: Upload not found\n                    errorCode: -20501\n                    message: Not Found\n                \"-40751\":\n                  description: |-\n                    \n                    * [-40751] File not found\n                  summary: File not found\n                  value:\n                    code: 404\n                    debugInfo: File not found\n                    errorCode: -40751\n                    message: Not Found\n                \"-41000\":\n                  description: |-\n                    \n                    * [-40000] Node not found\n                  summary: Node not found\n                  value:\n                    code: 404\n                    debugInfo: Node not found\n                    errorCode: -41000\n                    message: Not Found\n                \"-50501\":\n                  description: |-\n                    \n                    * [-50501] Upload access key not found\n                  summary: Upload access key not found\n                  value:\n                    code: 404\n                    debugInfo: Upload access key not found\n                    errorCode: -50501\n                    message: Not Found\n                \"-70501\":\n                  description: |-\n                    \n                    * [-70501] User not found\n                  summary: User not found\n                  value:\n                    code: 404\n                    debugInfo: User not found\n                    errorCode: -70501\n                    message: Not Found\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Not Found\n        \"406\":\n          content:\n            application/json:\n              examples:\n                \"null\":\n                  description: \"Acceptable Content-Types are: `[application/json]`\"\n                  summary: Content type not acceptable\n                  value:\n                    code: 406\n                    debugInfo: \"Content type '...' not acceptable. Acceptable Content-Types are: [...]\"\n                    errorCode: null\n                    message: Not Acceptable\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Not Acceptable\n        \"412\":\n          content:\n            application/json:\n              examples:\n                \"-90030\":\n                  description: |-\n                    \n                    * [-90030] S3 storage disabled\n                  summary: S3 storage disabled\n                  value:\n                    code: 412\n                    debugInfo: S3 storage disabled\n                    errorCode: -90030\n                    message: Precondition Failed\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Precondition Failed\n        \"504\":\n          content:\n            application/json:\n              examples:\n                \"-90027\":\n                  description: |-\n                    \n                    * [-90027] S3 connection failed\n                  summary: S3 connection failed\n                  value:\n                    code: 504\n                    debugInfo: S3 connection failed\n                    errorCode: -90027\n                    message: Gateway Timeout\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Gateway Timeout\n        \"507\":\n          content:\n            application/json:\n              examples:\n                \"-40200\":\n                  description: |-\n                    \n                    * [-40200] Exceeds the free node quota in room\n                  summary: Exceeds the free node quota in room\n                  value:\n                    code: 507\n                    debugInfo: Exceeds the free node quota in room\n                    errorCode: -40200\n                    message: Insufficient Storage\n                \"-50504\":\n                  description: |-\n                    \n                    * [-50504] Exceeds the quota for this Upload Share\n                  summary: Exceeds the quota for this Upload Share\n                  value:\n                    code: 507\n                    debugInfo: Exceeds the quota for this Upload Share\n                    errorCode: -50504\n                    message: Insufficient Storage\n                \"-90200\":\n                  description: |-\n                    \n                    * [-90200] Exceeds the free customer quota\n                  summary: Exceeds the free customer quota\n                  value:\n                    code: 507\n                    debugInfo: Exceeds the free customer quota\n                    errorCode: -90200\n                    message: Insufficient Storage\n                \"-90201\":\n                  description: |-\n                    \n                    * [-90201] Exceeds the free customer physical disk space\n                  summary: Exceeds the free customer physical disk space\n                  value:\n                    code: 507\n                    debugInfo: Exceeds the free customer physical disk space\n                    errorCode: -90201\n                    message: Insufficient Storage\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Insufficient Storage\n      security: []\n      summary: Complete file upload\n      tags:\n        - public\n  \"/v4/public/shares/uploads/{access_key}/{upload_id}/s3\":\n    put:\n      description: |\n        \u003ch3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid #AAA; border-radius: 5px; display: table-cell;'\u003e\u0026#128640; Since v4.15.0\u003c/h3\u003e\n\n        ### Description:\n        Finishes a S3 file upload and closes the corresponding upload channel.\n\n        ### Precondition:\n        Valid upload ID.  \n        Only returns users that owns one of the following permissions: \u003cspan style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px; display: inline;'\u003e\u0026#128275; manage\u003c/span\u003e, \u003cspan style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px; display: inline;'\u003e\u0026#128275; read\u003c/span\u003e, \u003cspan style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px; display: inline;'\u003e\u0026#128275; manage download share\u003c/span\u003e, \u003cspan style='padding: 3px; background-color: #F6F7F8; border: 1px solid #000; border-radius: 5px; display: inline;'\u003e\u0026#128275; manage upload share\u003c/span\u003e\n\n        ### Postcondition:\n        Upload channel is closed. S3 multipart upload request is completed.\n\n        ### Further Information:\n        None.\n      operationId: completeS3FileUploadViaShare\n      parameters:\n        - description: Access key\n          in: path\n          name: access_key\n          required: true\n          schema:\n            type: string\n        - description: Upload channel ID\n          in: path\n          name: upload_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CompleteS3ShareUploadRequest\"\n              description: Request model for completing a S3 file upload\n        required: true\n      responses:\n        \"202\":\n          description: Accepted\n        \"400\":\n          content:\n            application/json:\n              examples:\n                \"-20503\":\n                  description: |-\n                    \n                    * [-20503] Upload channel is closed\n                  summary: Upload channel is closed\n                  value:\n                    code: 400\n                    debugInfo: Upload channel is closed\n                    errorCode: -20503\n                    message: Bad Request\n                \"-40001\":\n                  description: |-\n                    \n                    * [-40001] (Target) room is not encrypted\n                  summary: (Target) room is not encrypted\n                  value:\n                    code: 400\n                    debugInfo: (Target) room is not encrypted\n                    errorCode: -40001\n                    message: Bad Request\n                \"-40763\":\n                  description: |-\n                    \n                    * [-40763] File key must be set for an upload into encrypted room\n                  summary: File key must be set for an upload into encrypted room\n                  value:\n                    code: 400\n                    debugInfo: File key must be set for an upload into encrypted room\n                    errorCode: -40763\n                    message: Bad Request\n                \"-50505\":\n                  description: |-\n                    \n                    * [-50505] No room user has a keypair\n                  summary: No room user has a keypair\n                  value:\n                    code: 400\n                    debugInfo: No room user has a keypair\n                    errorCode: -50505\n                    message: Bad Request\n                \"-50506\":\n                  description: |-\n                    \n                    * [-50506] Exceeds the number of files for this Upload Share\n                  summary: Exceeds the number of files for this Upload Share\n                  value:\n                    code: 400\n                    debugInfo: Exceeds the number of files for this Upload Share\n                    errorCode: -50506\n                    message: Bad Request\n                \"-80000\":\n                  description: |-\n                    \n                    * [-80000] Mandatory fields cannot be empty\n                  summary: Mandatory fields cannot be empty\n                  value:\n                    code: 400\n                    debugInfo: Mandatory fields cannot be empty\n                    errorCode: -80000\n                    message: Bad Request\n                \"-80001\":\n                  description: |-\n                    \n                    * [-80001] Invalid positive number\n                  summary: Invalid positive number\n                  value:\n                    code: 400\n                    debugInfo: Invalid positive number\n                    errorCode: -80001\n                    message: Bad Request\n                \"-80002\":\n                  description: |-\n                    \n                    * [-80002] Invalid number\n                  summary: Invalid number\n                  value:\n                    code: 400\n                    debugInfo: Invalid number\n                    errorCode: -80002\n                    message: Bad Request\n                \"-80007\":\n                  description: |-\n                    \n                    * [-80007] Maximum allowed length is exceeded\n                  summary: Maximum allowed length is exceeded\n                  value:\n                    code: 400\n                    debugInfo: Maximum allowed length is exceeded\n                    errorCode: -80007\n                    message: Bad Request\n                \"-80045\":\n                  description: |-\n                    \n                    * [-80045] Invalid Etag(s)\n                  summary: Invalid Etag(s)\n                  value:\n                    code: 400\n                    debugInfo: Invalid Etag(s)\n                    errorCode: -80045\n                    message: Bad Request\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Bad Request\n        \"404\":\n          content:\n            application/json:\n              examples:\n                \"-20501\":\n                  description: |-\n                    \n                    * [-20501] Upload not found\n                  summary: Upload not found\n                  value:\n                    code: 404\n                    debugInfo: Upload not found\n                    errorCode: -20501\n                    message: Not Found\n                \"-40751\":\n                  description: |-\n                    \n                    * [-40751] File not found\n                  summary: File not found\n                  value:\n                    code: 404\n                    debugInfo: File not found\n                    errorCode: -40751\n                    message: Not Found\n                \"-41000\":\n                  description: |-\n                    \n                    * [-40000] Node not found\n                  summary: Node not found\n                  value:\n                    code: 404\n                    debugInfo: Node not found\n                    errorCode: -41000\n                    message: Not Found\n                \"-50501\":\n                  description: |-\n                    \n                    * [-50501] Upload access key not found\n                  summary: Upload access key not found\n                  value:\n                    code: 404\n                    debugInfo: Upload access key not found\n                    errorCode: -50501\n                    message: Not Found\n                \"-70501\":\n                  description: |-\n                    \n                    * [-70501] User not found\n                  summary: User not found\n                  value:\n                    code: 404\n                    debugInfo: User not found\n                    errorCode: -70501\n                    message: Not Found\n                \"-90034\":\n                  description: |-\n                    \n                    * [-90034] Corresponding S3 upload ID not found\n                  summary: Corresponding S3 upload ID not found\n                  value:\n                    code: 404\n                    debugInfo: Corresponding S3 upload ID not found\n                    errorCode: -90034\n                    message: Not Found\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Not Found\n        \"406\":\n          content:\n            application/json:\n              examples:\n                \"null\":\n                  description: \"Acceptable Content-Types are: `[application/json]`\"\n                  summary: Content type not acceptable\n                  value:\n                    code: 406\n                    debugInfo: \"Content type '...' not acceptable. Acceptable Content-Types are: [...]\"\n                    errorCode: null\n                    message: Not Acceptable\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Not Acceptable\n        \"412\":\n          content:\n            application/json:\n              examples:\n                \"-90030\":\n                  description: |-\n                    \n                    * [-90030] S3 storage disabled\n                  summary: S3 storage disabled\n                  value:\n                    code: 412\n                    debugInfo: S3 storage disabled\n                    errorCode: -90030\n                    message: Precondition Failed\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Precondition Failed\n      security: []\n      summary: Complete S3 file upload\n      tags:\n        - public\n  \"/v4/public/shares/uploads/{access_key}/{upload_id}/s3_urls\":\n    post:\n      description: |-\n        \u003ch3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid #AAA; border-radius: 5px; display: table-cell;'\u003e\u0026#128640; Since v4.15.0\u003c/h3\u003e\n\n        ### Description:\n        Generate presigned URLs for S3 file upload.\n\n        ### Precondition:\n        Valid upload ID\n\n        ### Postcondition:\n        List of presigned URLs is returned.\n\n        ### Further Information:\n        The size for each part must be \u003e= 5 MB, except for the last part.  \n        The part number of the first part in S3 is 1 (not 0).  \n        Use HTTP method `PUT` for uploading bytes via presigned URL.\n      operationId: generatePresignedUrlsPublic\n      parameters:\n        - description: Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) \u0026 [leettime.de](http://leettime.de/))\n          in: header\n          name: X-Sds-Date-Format\n          schema:\n            enum:\n              - UTC\n              - LOCAL\n              - OFFSET\n              - EPOCH\n              - LEET\n        - description: Access key\n          in: path\n          name: access_key\n          required: true\n          schema:\n            type: string\n        - description: Upload channel ID\n          in: path\n          name: upload_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/GeneratePresignedUrlsRequest\"\n              description: Request model for generating presigned URLs\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PresignedUrlList\"\n          description: Created\n        \"400\":\n          content:\n            application/json:\n              examples:\n                \"-20503\":\n                  description: |-\n                    \n                    * [-20503] Upload channel is closed\n                  summary: Upload channel is closed\n                  value:\n                    code: 400\n                    debugInfo: Upload channel is closed\n                    errorCode: -20503\n                    message: Bad Request\n                \"-80000\":\n                  description: |-\n                    \n                    * [-80000] Mandatory fields cannot be empty\n                  summary: Mandatory fields cannot be empty\n                  value:\n                    code: 400\n                    debugInfo: Mandatory fields cannot be empty\n                    errorCode: -80000\n                    message: Bad Request\n                \"-80001\":\n                  description: |-\n                    \n                    * [-80001] Invalid positive number\n                  summary: Invalid positive number\n                  value:\n                    code: 400\n                    debugInfo: Invalid positive number\n                    errorCode: -80001\n                    message: Bad Request\n                \"-80002\":\n                  description: |-\n                    \n                    * [-80002] Invalid number\n                  summary: Invalid number\n                  value:\n                    code: 400\n                    debugInfo: Invalid number\n                    errorCode: -80002\n                    message: Bad Request\n                \"-80046\":\n                  description: |-\n                    \n                    * [-80046] Invalid size\n                  summary: Invalid size\n                  value:\n                    code: 400\n                    debugInfo: Invalid size\n                    errorCode: -80046\n                    message: Bad Request\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Bad Request\n        \"403\":\n          content:\n            application/json:\n              examples:\n                \"null\":\n                  description: Insufficient rights to perform the operation\n                  summary: Forbidden\n                  value:\n                    code: 403\n                    debugInfo: \"\"\n                    errorCode: null\n                    message: Forbidden\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Forbidden\n        \"404\":\n          content:\n            application/json:\n              examples:\n                \"-20501\":\n                  description: |-\n                    \n                    * [-20501] Upload not found\n                  summary: Upload not found\n                  value:\n                    code: 404\n                    debugInfo: Upload not found\n                    errorCode: -20501\n                    message: Not Found\n                \"-40000\":\n                  description: |-\n                    \n                    * [-40000] Container not found\n                  summary: Container not found\n                  value:\n                    code: 404\n                    debugInfo: Container not found\n                    errorCode: -40000\n                    message: Not Found\n                \"-41000\":\n                  description: |-\n                    \n                    * [-40000] Node not found\n                  summary: Node not found\n                  value:\n                    code: 404\n                    debugInfo: Node not found\n                    errorCode: -41000\n                    message: Not Found\n                \"-90034\":\n                  description: |-\n                    \n                    * [-90034] Corresponding S3 upload ID not found\n                  summary: Corresponding S3 upload ID not found\n                  value:\n                    code: 404\n                    debugInfo: Corresponding S3 upload ID not found\n                    errorCode: -90034\n                    message: Not Found\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Not Found\n        \"406\":\n          content:\n            application/json:\n              examples:\n                \"null\":\n                  description: \"Acceptable Content-Types are: `[application/json]`\"\n                  summary: Content type not acceptable\n                  value:\n                    code: 406\n                    debugInfo: \"Content type '...' not acceptable. Acceptable Content-Types are: [...]\"\n                    errorCode: null\n                    message: Not Acceptable\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Not Acceptable\n        \"412\":\n          content:\n            application/json:\n              examples:\n                \"-90030\":\n                  description: |-\n                    \n                    * [-90030] S3 storage disabled\n                  summary: S3 storage disabled\n                  value:\n                    code: 412\n                    debugInfo: S3 storage disabled\n                    errorCode: -90030\n                    message: Precondition Failed\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Precondition Failed\n        \"504\":\n          content:\n            application/json:\n              examples:\n                \"-90027\":\n                  description: |-\n                    \n                    * [-90027] S3 connection failed\n                  summary: S3 connection failed\n                  value:\n                    code: 504\n                    debugInfo: S3 connection failed\n                    errorCode: -90027\n                    message: Gateway Timeout\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Gateway Timeout\n        \"507\":\n          content:\n            application/json:\n              examples:\n                \"-50504\":\n                  description: |-\n                    \n                    * [-50504] Exceeds the quota for this Upload Share\n                  summary: Exceeds the quota for this Upload Share\n                  value:\n                    code: 507\n                    debugInfo: Exceeds the quota for this Upload Share\n                    errorCode: -50504\n                    message: Insufficient Storage\n                \"-90200\":\n                  description: |-\n                    \n                    * [-90200] Exceeds the free customer quota\n                  summary: Exceeds the free customer quota\n                  value:\n                    code: 507\n                    debugInfo: Exceeds the free customer quota\n                    errorCode: -90200\n                    message: Insufficient Storage\n                \"-90201\":\n                  description: |-\n                    \n                    * [-90201] Exceeds the free customer physical disk space\n                  summary: Exceeds the free customer physical disk space\n                  value:\n                    code: 507\n                    debugInfo: Exceeds the free customer physical disk space\n                    errorCode: -90201\n                    message: Insufficient Storage\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Insufficient Storage\n      security: []\n      summary: Generate presigned URLs for S3 file upload\n      tags:\n        - public\n  /v4/public/software/third_party_dependencies:\n    get:\n      description: |+\n        \u003ch3 style='padding: 5px; background-color: #F6F7F8; border: 1px solid #AAA; border-radius: 5px; display: table-cell;'\u003e\u0026#128640; Since v4.9.0\u003c/h3\u003e\n\n        ### Description:  \n        Provides information about used third-party software dependencies.\n\n        ### Precondition:\n        None.\n\n        ### Postcondition:\n        List of the third-party software dependencies used by **DRACOON Core** (referred to as _\"Server\"_) is returned.\n\n        ### Further Information:\n        None.\n\n      operationId: requestThirdPartyDependencies\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ThirdPartyDependenciesData\"\n                type: array\n          description: OK\n        \"406\":\n          content:\n            application/json:\n              examples:\n                \"null\":\n                  description: \"Acceptable Content-Types are: `[application/json]`\"\n                  summary: Content type not acceptable\n                  value:\n                    code: 406\n                    debugInfo: \"Content type '...' not acceptable. Acceptable Content-Types are: [...]\"\n                    errorCode: null\n                    message: Not Acceptable\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Not Acceptable\n      security: []\n      summary: Request third-party software dependencies\n      tags:\n        - public\n  /v4/public/software/version:\n    get:\n      description: |-\n        ### Description:  \n        Public software version information.\n\n        ### Precondition:\n        None.\n\n        ### Postcondition:\n        Sofware version information is returned.\n\n        ### Further Information:\n        The version of DRACOON Server consists of two components:\n        * **API**\n        * **Core** (referred to as _\"Server\"_)\n\n        which are versioned individually.\n      operationId: requestSoftwareVersion\n      parameters:\n        - description: Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) \u0026 [leettime.de](http://leettime.de/))\n          in: header\n          name: X-Sds-Date-Format\n          schema:\n            enum:\n              - UTC\n              - LOCAL\n              - OFFSET\n              - EPOCH\n              - LEET\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SoftwareVersionData\"\n          description: OK\n        \"406\":\n          content:\n            application/json:\n              examples:\n                \"null\":\n                  description: \"Acceptable Content-Types are: `[application/json]`\"\n                  summary: Content type not acceptable\n                  value:\n                    code: 406\n                    debugInfo: \"Content type '...' not acceptable. Acceptable Content-Types are: [...]\"\n                    errorCode: null\n                    message: Not Acceptable\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Not Acceptable\n      security: []\n      summary: Request software version information\n      tags:\n        - public\n  /v4/public/system/info:\n    get:\n      description: |-\n        ### Description:  \n        Provides information about system.\n\n        ### Precondition:\n        None.\n\n        ### Postcondition:\n        System information is returned.\n\n        ### Further Information:\n        Authentication methods are sorted by **priority** attribute.  \n        Smaller values have higher priority.  \n        Authentication method with highest priority is considered as default.\n\n        ### System information:\n        \u003cdetails style=\"padding: 10px; background-color: #F6F7F8; border: 1px solid #AAA; border-radius: 5px;\"\u003e\n        \u003csummary style=\"cursor: pointer; outline: none\"\u003e\u003cstrong\u003eExpand\u003c/strong\u003e\u003c/summary\u003e\n\n        | Setting | Description | Value |\n        | :--- | :--- | :--- |\n        | `languageDefault` | Defines which language should be default. | `ISO 639-1 code` |\n        | `hideLoginInputFields` | Defines if login fields should be hidden. | `true or false` |\n        | `s3Hosts` | List of available S3 hosts. | `String array` |\n        | `s3EnforceDirectUpload` | Determines whether S3 direct upload is enforced or not. | `true or false` |\n        | `useS3Storage` | Determines whether S3 Storage enabled and used. | `true or false` |\n\n        \u003c/details\u003e\n\n        ### Authentication methods:\n        \u003cdetails style=\"padding: 10px; background-color: #F6F7F8; border: 1px solid #AAA; border-radius: 5px;\"\u003e\n        \u003csummary style=\"cursor: pointer; outline: none\"\u003e\u003cstrong\u003eExpand\u003c/strong\u003e\u003c/summary\u003e\n\n        | Authentication Method | Description |\n        | :--- | :--- |\n        | `basic` | **Basic** authentication globally allowed.\u003cbr\u003eThis option **MUST** be activated to allow users to log in with their credentials stored in the database.\u003cbr\u003eFormerly known as `sql`. |\n        | `active_directory` | **Active Directory** authentication globally allowed.\u003cbr\u003eThis option **MUST** be activated to allow users to log in with their Active Directory credentials. |\n        | `radius` | **RADIUS** authentication globally allowed.\u003cbr\u003eThis option **MUST** be activated to allow users to log in with their RADIUS username, their PIN and a token password. |\n        | `openid` | **OpenID Connect** authentication globally allowed.This option **MUST** be activated to allow users to log in with their OpenID Connect identity. |\n        | `hideLoginInputFields` | Determines whether input fields for login should be enabled | `true or false` |\n\n        \u003c/details\u003e\n      externalDocs:\n        description: Tags for Identifying Languages\n        url: https://tools.ietf.org/html/rfc5646\n      operationId: requestSystemInfo\n      parameters:\n        - description: Show only enabled authentication methods\n          in: query\n          name: is_enabled\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SystemInfo\"\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              examples:\n                \"-80005\":\n                  description: |-\n                    \n                    * [-80005] Invalid boolean value\n                  summary: Invalid boolean value\n                  value:\n                    code: 400\n                    debugInfo: Invalid boolean value\n                    errorCode: -80005\n                    message: Bad Request\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Bad Request\n        \"406\":\n          content:\n            application/json:\n              examples:\n                \"null\":\n                  description: \"Acceptable Content-Types are: `[application/json]`\"\n                  summary: Content type not acceptable\n                  value:\n                    code: 406\n                    debugInfo: \"Content type '...' not acceptable. Acceptable Content-Types are: [...]\"\n                    errorCode: null\n                    message: Not Acceptable\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Not Acceptable\n      security: []\n      summary: Request system information\n      tags:\n        - public\n  /v4/public/system/info/auth/ad:\n    get:\n      description: |-\n        ### Description:  \n        Provides information about Active Directory authentication options.\n\n        ### Precondition:\n        None.\n\n        ### Postcondition:\n        Active Directory authentication options information is returned.\n\n        ### Further Information:\n        None.\n      operationId: requestActiveDirectoryAuthInfo\n      parameters:\n        - description: Show only global available items\n          in: query\n          name: is_global_available\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ActiveDirectoryAuthInfo\"\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              examples:\n                \"-80005\":\n                  description: |-\n                    \n                    * [-80005] Invalid boolean value\n                  summary: Invalid boolean value\n                  value:\n                    code: 400\n                    debugInfo: Invalid boolean value\n                    errorCode: -80005\n                    message: Bad Request\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Bad Request\n        \"406\":\n          content:\n            application/json:\n              examples:\n                \"null\":\n                  description: \"Acceptable Content-Types are: `[application/json]`\"\n                  summary: Content type not acceptable\n                  value:\n                    code: 406\n                    debugInfo: \"Content type '...' not acceptable. Acceptable Content-Types are: [...]\"\n                    errorCode: null\n                    message: Not Acceptable\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Not Acceptable\n      security: []\n      summary: Request Active Directory authentication information\n      tags:\n        - public\n  /v4/public/system/info/auth/openid:\n    get:\n      description: |-\n        ### Description:  \n        Provides information about OpenID Connect authentication options.\n\n        ### Precondition:\n        None.\n\n        ### Postcondition:\n        OpenID Connect authentication options information is returned.\n\n        ### Further Information:\n        None.\n      operationId: requestOpenIdAuthInfo\n      parameters:\n        - description: Show only global available items\n          in: query\n          name: is_global_available\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OpenIdAuthInfo\"\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              examples:\n                \"-80005\":\n                  description: |-\n                    \n                    * [-80005] Invalid boolean value\n                  summary: Invalid boolean value\n                  value:\n                    code: 400\n                    debugInfo: Invalid boolean value\n                    errorCode: -80005\n                    message: Bad Request\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Bad Request\n        \"406\":\n          content:\n            application/json:\n              examples:\n                \"null\":\n                  description: \"Acceptable Content-Types are: `[application/json]`\"\n                  summary: Content type not acceptable\n                  value:\n                    code: 406\n                    debugInfo: \"Content type '...' not acceptable. Acceptable Content-Types are: [...]\"\n                    errorCode: null\n                    message: Not Acceptable\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Not Acceptable\n      security: []\n      summary: Request OpenID Connect provider authentication information\n      tags:\n        - public\n  /v4/public/time:\n    get:\n      description: |-\n        ### Description:  \n        Retrieve the actual server time.\n\n        ### Precondition:\n        None.\n\n        ### Postcondition:\n        Server time is returned.\n\n        ### Further Information:\n        None.\n      operationId: requestSystemTime\n      parameters:\n        - description: Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) \u0026 [leettime.de](http://leettime.de/))\n          in: header\n          name: X-Sds-Date-Format\n          schema:\n            enum:\n              - UTC\n              - LOCAL\n              - OFFSET\n              - EPOCH\n              - LEET\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SdsServerTime\"\n          description: OK\n        \"406\":\n          content:\n            application/json:\n              examples:\n                \"null\":\n                  description: \"Acceptable Content-Types are: `[application/json]`\"\n                  summary: Content type not acceptable\n                  value:\n                    code: 406\n                    debugInfo: \"Content type '...' not acceptable. Acceptable Content-Types are: [...]\"\n                    errorCode: null\n                    message: Not Acceptable\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n          description: Not Acceptable\n      security: []\n      summary: Request system time\n      tags:\n        - public\ncomponents:\n  schemas:\n    ActiveDirectory:\n      description: Active Directory information\n      properties:\n        alias:\n          description: Unique name for an Active Directory configuration\n          type: string\n        id:\n          description: ID\n          format: int32\n          type: integer\n        isGlobalAvailable:\n          description: Is available for all customers\n          type: boolean\n      required:\n        - alias\n        - id\n        - isGlobalAvailable\n      type: object\n    ActiveDirectoryAuthInfo:\n      description: List of Active Directories\n      properties:\n        items:\n          description: List of available Active Directories\n          items:\n            $ref: \"#/components/schemas/ActiveDirectory\"\n          type: array\n      required:\n        - items\n      type: object\n    ActiveDirectoryConfig:\n      description: Active Directory configuration\n      properties:\n        adExportGroup:\n          description: |-\n            If `userImport` is set to `true`,\n\n            the user must be member of this Active Directory group to receive a newly created DRACOON account.\n          type: string\n        alias:\n          description: Unique name for an Active Directory configuration\n          type: string\n        createHomeFolder:\n          default: false\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.10.0\n\n            DEPRECATED, will be ignored\n\n            Determines whether a room is created for each user that is created by automatic import (like a home folder).\n\n            Room's name will equal the user's login name.\n          type: boolean\n        homeFolderParent:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.10.0\n\n            DEPRECATED, will be ignored\n\n            ID of the room in which the individual rooms for users will be created.\n          format: int64\n          type: integer\n        id:\n          description: ID\n          format: int32\n          type: integer\n        ldapUsersDomain:\n          description: Search scope of Active Directory; only users below this node can log on.\n          type: string\n        sdsImportGroup:\n          description: |-\n            User group that is assigned to users who are created by automatic import.\n\n            Reset with `0`\n          format: int64\n          type: integer\n        serverAdminName:\n          description: Distinguished Name (DN) of Active Directory administrative account\n          type: string\n        serverIp:\n          description: IPv4 or IPv6 address or host name\n          type: string\n        serverPort:\n          description: Port\n          format: int32\n          maximum: 65535\n          minimum: 0\n          type: integer\n        sslFingerPrint:\n          description: |-\n            SSL finger print of Active Directory server.\n\n            Mandatory for LDAPS connections.\n\n            Format: `Algorithm/Fingerprint`\n          type: string\n        useLdaps:\n          description: Determines whether LDAPS should be used instead of plain LDAP.\n          type: boolean\n        userFilter:\n          description: Name of Active Directory attribute that is used as login name.\n          type: string\n        userImport:\n          description: |-\n            Determines if a DRACOON account is automatically created for a new user\n\n            who successfully logs on with his / her AD / IDP account.\n          type: boolean\n      required:\n        - adExportGroup\n        - alias\n        - id\n        - ldapUsersDomain\n        - serverAdminName\n        - serverIp\n        - serverPort\n        - useLdaps\n        - userFilter\n        - userImport\n      type: object\n    ActiveDirectoryConfigList:\n      description: List of Active Directory configurations\n      properties:\n        items:\n          description: List of Active Directory configurations\n          items:\n            $ref: \"#/components/schemas/ActiveDirectoryConfig\"\n          type: array\n      required:\n        - items\n      type: object\n    AlgorithmVersionInfo:\n      description: Algorithm information\n      properties:\n        description:\n          description: Algorithm description\n          type: string\n        status:\n          description: |-\n            Algorithm status\n\n            Derived from preference value and threshold\n          enum:\n            - REQUIRED\n            - DISCOURAGED\n          type: string\n        version:\n          description: Algorithm version\n          type: string\n      required:\n        - description\n        - status\n        - version\n      type: object\n    AlgorithmVersionInfoList:\n      description: Information of all available algorithms\n      properties:\n        fileKeyAlgorithms:\n          description: List of file key algorithms\n          items:\n            $ref: \"#/components/schemas/AlgorithmVersionInfo\"\n          type: array\n        keyPairAlgorithms:\n          description: List of key pair algorithms\n          items:\n            $ref: \"#/components/schemas/AlgorithmVersionInfo\"\n          type: array\n      required:\n        - fileKeyAlgorithms\n        - keyPairAlgorithms\n      type: object\n    AttributesResponse:\n      description: Ranged list of attributes\n      properties:\n        items:\n          description: List of key-value pairs\n          items:\n            $ref: \"#/components/schemas/KeyValueEntry\"\n          type: array\n        range:\n          $ref: \"#/components/schemas/Range\"\n      required:\n        - items\n        - range\n      type: object\n    AuditNodeResponse:\n      description: Audit node report\n      properties:\n        auditUserPermissionList:\n          description: List of assigned users with permissions\n          items:\n            $ref: \"#/components/schemas/AuditUserPermission\"\n          type: array\n        nodeCntChildren:\n          description: |-\n            Number of direct children\n\n            (no recursion; for rooms only)\n          format: int32\n          type: integer\n        nodeCreatedAt:\n          description: Creation date\n          format: date-time\n          type: string\n        nodeCreatedBy:\n          $ref: \"#/components/schemas/UserInfo\"\n        nodeHasActivitiesLog:\n          default: true\n          description: Is activities log active (for rooms only)\n          type: boolean\n        nodeHasRecycleBin:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.10.0\n\n            Is recycle bin active (for rooms only)\n\n            Recycle bin is always on (disabling is not possible).\n          type: boolean\n        nodeId:\n          description: Node ID\n          format: int64\n          type: integer\n        nodeIsEncrypted:\n          description: Encryption state\n          type: boolean\n        nodeName:\n          description: Node name\n          type: string\n        nodeParentId:\n          description: Parent node ID (room or folder)\n          format: int64\n          type: integer\n        nodeParentPath:\n          description: |-\n            Parent node path\n\n            `/` if node is a root node (room)\n          type: string\n        nodeQuota:\n          description: Quota in byte\n          format: int64\n          type: integer\n        nodeRecycleBinRetentionPeriod:\n          description: Retention period for deleted nodes in days\n          format: int32\n          maximum: 9999\n          minimum: 0\n          type: integer\n        nodeSize:\n          description: Node size in byte\n          format: int64\n          type: integer\n        nodeUpdatedAt:\n          description: Modification date\n          format: date-time\n          type: string\n        nodeUpdatedBy:\n          $ref: \"#/components/schemas/UserInfo\"\n      required:\n        - auditUserPermissionList\n        - nodeCntChildren\n        - nodeId\n        - nodeName\n        - nodeParentPath\n      type: object\n    AuditUserPermission:\n      description: Audit user permissions report\n      properties:\n        permissions:\n          $ref: \"#/components/schemas/NodePermissions\"\n        userFirstName:\n          description: User first name\n          type: string\n        userId:\n          description: Unique identifier for the user\n          format: int64\n          type: integer\n        userLastName:\n          description: User last name\n          type: string\n        userLogin:\n          description: User login name\n          type: string\n      required:\n        - permissions\n        - userFirstName\n        - userId\n        - userLastName\n        - userLogin\n      type: object\n    AuthConfig:\n      description: Authentication settings\n      properties:\n        authMethods:\n          description: List of authentication methods\n          items:\n            $ref: \"#/components/schemas/AuthMethod\"\n          type: array\n      required:\n        - authMethods\n      type: object\n    AuthMethod:\n      description: Authentication method\n      properties:\n        isEnabled:\n          description: Is enabled\n          type: boolean\n        name:\n          description: |-\n            Authentication methods:\n\n            * `basic`\n\n            * `active_directory`\n\n            * `radius`\n\n            * `openid`\n          type: string\n        priority:\n          description: Priority (smaller values have higher priority)\n          format: int32\n          type: integer\n      required:\n        - isEnabled\n        - name\n        - priority\n      type: object\n    AuthTokenRestrictions:\n      description: Auth token restrictions\n      properties:\n        accessTokenValidity:\n          description: |-\n            \u0026#128640; Since v4.13.0\n\n            Restricted OAuth access token validity (in seconds)\n          format: int32\n          type: integer\n        refreshTokenValidity:\n          description: |-\n            \u0026#128640; Since v4.13.0\n\n            Restricted OAuth refresh token validity (in seconds)\n          format: int32\n          type: integer\n        restrictionEnabled:\n          description: |-\n            \u0026#128640; Since v4.13.0\n\n            Defines if OAuth token restrictions are enabled\n          type: boolean\n      type: object\n    Avatar:\n      description: User avatar information\n      properties:\n        avatarUri:\n          description: Avatar URI\n          type: string\n        avatarUuid:\n          description: Avatar UUID\n          type: string\n        isCustomAvatar:\n          description: Determines whether user updated his / her avatar with own image\n          type: boolean\n      required:\n        - avatarUri\n        - avatarUuid\n        - isCustomAvatar\n      type: object\n    ChangeGroupMembersRequest:\n      description: List of user IDs\n      properties:\n        ids:\n          description: List of user IDs\n          items:\n            description: List of user IDs\n            format: int64\n            type: integer\n          type: array\n      required:\n        - ids\n      type: object\n    ChangeNodeCommentRequest:\n      description: Request model for updating a node comment\n      properties:\n        text:\n          description: Comment text\n          type: string\n      required:\n        - text\n      type: object\n    ChangeUserPasswordRequest:\n      description: Request model for updating user's password\n      properties:\n        newPassword:\n          description: New password\n          type: string\n        oldPassword:\n          description: Old password\n          type: string\n      required:\n        - newPassword\n        - oldPassword\n      type: object\n    CharacterRules:\n      description: Password character rules\n      properties:\n        mustContainCharacters:\n          description: |-\n            Characters which a password must contain:\n\n            * `alpha` - at least one alphabetical character (`uppercase` OR `lowercase`)\n\n            * `uppercase` - at least one uppercase character\n\n            * `lowercase` - at least one lowercase character\n\n            * `numeric` - at least one numeric character\n\n            * `special` - at least one special character (letters and digits excluded)\n\n            * `all` - combination of `uppercase`, `lowercase`, `numeric` and `special` (available only in request models)\n\n            * `none` - none of the above\n          enum:\n            - alpha\n            - uppercase\n            - lowercase\n            - numeric\n            - special\n            - all\n            - none\n          items:\n            description: |-\n              Characters which a password must contain:\n\n              * `alpha` - at least one alphabetical character (`uppercase` OR `lowercase`)\n\n              * `uppercase` - at least one uppercase character\n\n              * `lowercase` - at least one lowercase character\n\n              * `numeric` - at least one numeric character\n\n              * `special` - at least one special character (letters and digits excluded)\n\n              * `all` - combination of `uppercase`, `lowercase`, `numeric` and `special` (available only in request models)\n\n              * `none` - none of the above\n            enum:\n              - alpha\n              - uppercase\n              - lowercase\n              - numeric\n              - special\n              - all\n              - none\n            type: string\n          type: array\n        numberOfCharacteristicsToEnforce:\n          description: |-\n            Number of characteristics to enforce\n\n            e.g. from `[\"uppercase\", \"lowercase\", \"numeric\", \"special\"]`\n\n            all 4 character sets can be enforced; but also only 2 of them\n          format: int32\n          maximum: 4\n          minimum: 0\n          type: integer\n      required:\n        - mustContainCharacters\n        - numberOfCharacteristicsToEnforce\n      type: object\n    ChunkUploadResponse:\n      description: Chunk upload response\n      properties:\n        hash:\n          description: Hash value of transferred chunk\n          type: string\n        size:\n          description: Chunk size\n          format: int64\n          type: integer\n      required:\n        - hash\n        - size\n      type: object\n    Comment:\n      description: Node comment information\n      properties:\n        createdAt:\n          description: Creation date\n          format: date-time\n          type: string\n        createdBy:\n          $ref: \"#/components/schemas/UserInfo\"\n        id:\n          description: Comment ID\n          format: int64\n          type: integer\n        isChanged:\n          description: Determines whether comment was edited or not\n          type: boolean\n        isDeleted:\n          description: Determines whether comment was deleted or not\n          type: boolean\n        text:\n          description: Comment text\n          type: string\n        updatedAt:\n          description: Modification date\n          format: date-time\n          type: string\n        updatedBy:\n          $ref: \"#/components/schemas/UserInfo\"\n      required:\n        - createdAt\n        - createdBy\n        - id\n        - isChanged\n        - isDeleted\n        - text\n        - updatedAt\n        - updatedBy\n      type: object\n    CommentList:\n      description: List of node comments\n      properties:\n        items:\n          description: List of node comments\n          items:\n            $ref: \"#/components/schemas/Comment\"\n          type: array\n        range:\n          $ref: \"#/components/schemas/Range\"\n      required:\n        - items\n        - range\n      type: object\n    CompleteS3FileUploadRequest:\n      description: Request model for completing a S3 file upload\n      properties:\n        fileKey:\n          $ref: \"#/components/schemas/FileKey\"\n        fileName:\n          description: New file name to store with\n          type: string\n        keepShareLinks:\n          default: false\n          description: Preserve Download Share Links and point them to the new node.\n          type: boolean\n        parts:\n          description: List of S3 file upload parts\n          items:\n            $ref: \"#/components/schemas/S3FileUploadPart\"\n          type: array\n        resolutionStrategy:\n          default: autorename\n          description: |-\n            Node conflict resolution strategy:\n\n            * `autorename`\n\n            * `overwrite`\n\n            * `fail`\n          enum:\n            - autorename\n            - overwrite\n            - fail\n          type: string\n      required:\n        - parts\n      type: object\n    CompleteS3ShareUploadRequest:\n      description: Request model for completing a S3 file upload\n      properties:\n        parts:\n          description: List of S3 file upload parts\n          items:\n            $ref: \"#/components/schemas/S3FileUploadPart\"\n          type: array\n        userFileKeyList:\n          description: List of user file keys\n          items:\n            $ref: \"#/components/schemas/UserFileKey\"\n          type: array\n      required:\n        - parts\n      type: object\n    CompleteUploadRequest:\n      description: Request model for completing an upload\n      properties:\n        fileKey:\n          $ref: \"#/components/schemas/FileKey\"\n        fileName:\n          description: New file name to store with\n          type: string\n        keepShareLinks:\n          default: false\n          description: Preserve Download Share Links and point them to the new node.\n          type: boolean\n        resolutionStrategy:\n          default: autorename\n          description: |-\n            Node conflict resolution strategy:\n\n            * `autorename`\n\n            * `overwrite`\n\n            * `fail`\n          enum:\n            - autorename\n            - overwrite\n            - fail\n          type: string\n        userFileKeyList:\n          $ref: \"#/components/schemas/UserFileKeyList\"\n      type: object\n    ConfigOptionList:\n      description: List of key-value pairs\n      properties:\n        items:\n          description: List of key-value pairs\n          items:\n            $ref: \"#/components/schemas/KeyValueEntry\"\n          type: array\n      required:\n        - items\n      type: object\n    ConfigRoomRequest:\n      description: Request model for configuring a room\n      properties:\n        adminGroupIds:\n          description: |-\n            List of group ids\n\n            A room requires at least one admin (user or group)\n          items:\n            description: |-\n              List of group ids\n\n              A room requires at least one admin (user or group)\n            format: int64\n            type: integer\n          type: array\n        adminIds:\n          description: |-\n            List of user ids\n\n            A room requires at least one admin (user or group)\n          items:\n            description: |-\n              List of user ids\n\n              A room requires at least one admin (user or group)\n            format: int64\n            type: integer\n          type: array\n        classification:\n          default: 2\n          description: |-\n            Classification ID:\n\n            * `1` - public\n\n            * `2` - internal\n\n            * `3` - confidential\n\n            * `4` - strictly confidential\n\n\n\n            Provided (or default) classification is taken from room\n\n            when file gets uploaded without any classification.\n          enum:\n            - 1\n            - 2\n            - 3\n            - 4\n          format: int32\n          type: integer\n        hasActivitiesLog:\n          default: true\n          description: Is activities log active (for rooms only)\n          type: boolean\n        hasRecycleBin:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.10.0\n\n            Is recycle bin active (for rooms only)\n\n            Recycle bin is always on (disabling is not possible).\n          type: boolean\n        inheritPermissions:\n          description: |-\n            Inherit permissions from parent room\n\n            (default: `false` if `parentId` is `0`; otherwise: `true`)\n          type: boolean\n        newGroupMemberAcceptance:\n          default: autoallow\n          description: |-\n            Behaviour when new users are added to the group:\n\n            * `autoallow`\n\n            * `pending`\n\n\n\n            Only relevant if `adminGroupIds` has items.\n          enum:\n            - autoallow\n            - pending\n          type: string\n        recycleBinRetentionPeriod:\n          description: Retention period for deleted nodes in days\n          format: int32\n          maximum: 9999\n          minimum: 0\n          type: integer\n        takeOverPermissions:\n          description: Take over existing permissions\n          type: boolean\n      type: object\n    CopyNode:\n      description: Copied node information\n      properties:\n        id:\n          description: Source node ID\n          format: int64\n          type: integer\n        name:\n          description: New node name\n          type: string\n        timestampCreation:\n          description: |-\n            \u0026#128640; Since v4.22.0\n\n            Time the node was created on external file system\n\n            (default: current server datetime in UTC format)\n          format: date-time\n          type: string\n        timestampModification:\n          description: |-\n            \u0026#128640; Since v4.22.0\n\n            Time the content of a node was last modified on external file system\n\n            (default: current server datetime in UTC format)\n          format: date-time\n          type: string\n      required:\n        - id\n      type: object\n    CopyNodesRequest:\n      description: Request model for copying nodes\n      properties:\n        items:\n          description: List of nodes to be copied\n          items:\n            $ref: \"#/components/schemas/CopyNode\"\n          type: array\n        keepShareLinks:\n          default: false\n          description: Preserve Download Share Links and point them to the new node.\n          type: boolean\n        nodeIds:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.5.0\n\n            Node IDs\n\n            Please use `items` instead.\n          items:\n            deprecated: true\n            description: |-\n              Node IDs\n\n              Please use `items` instead.\n            format: int64\n            type: integer\n          type: array\n        resolutionStrategy:\n          default: autorename\n          description: |-\n            Node conflict resolution strategy:\n\n            * `autorename`\n\n            * `overwrite`\n\n            * `fail`\n          enum:\n            - autorename\n            - overwrite\n            - fail\n          type: string\n      type: object\n    CreateActiveDirectoryConfigRequest:\n      description: Request model for creating an Active Directory configuration\n      properties:\n        adExportGroup:\n          description: |-\n            If `userImport` is set to `true`,\n\n            the user must be member of this Active Directory group to receive a newly created DRACOON account.\n          type: string\n        alias:\n          description: Unique name for an Active Directory configuration\n          type: string\n        createHomeFolder:\n          default: false\n          description: |-\n            DEPRECATED, will be ignored\n\n            Determines whether a room is created for each user that is created by automatic import (like a home folder).\n\n            Room's name will equal the user's login name.\n          type: boolean\n        homeFolderParent:\n          description: |-\n            DEPRECATED, will be ignored\n\n            ID of the room in which the individual rooms for users will be created.\n          format: int64\n          type: integer\n        ldapUsersDomain:\n          description: Search scope of Active Directory; only users below this node can log on.\n          type: string\n        sdsImportGroup:\n          description: |-\n            User group that is assigned to users who are created by automatic import.\n\n            Reset with `0`\n          format: int64\n          type: integer\n        serverAdminName:\n          description: Distinguished Name (DN) of Active Directory administrative account\n          type: string\n        serverAdminPassword:\n          description: Password of Active Directory administrative account\n          type: string\n        serverIp:\n          description: IPv4 or IPv6 address or host name\n          type: string\n        serverPort:\n          description: Port\n          format: int32\n          type: integer\n        sslFingerPrint:\n          description: |-\n            SSL finger print of Active Directory server.\n\n            Mandatory for LDAPS connections.\n\n            Format: `Algorithm/Fingerprint`\n          type: string\n        useLdaps:\n          default: false\n          description: Determines whether LDAPS should be used instead of plain LDAP.\n          type: boolean\n        userFilter:\n          description: Name of Active Directory attribute that is used as login name.\n          type: string\n        userImport:\n          default: false\n          description: |-\n            Determines if a DRACOON account is automatically created for a new user\n\n            who successfully logs on with his / her AD / IDP account.\n          type: boolean\n      required:\n        - alias\n        - ldapUsersDomain\n        - serverAdminName\n        - serverAdminPassword\n        - serverIp\n        - serverPort\n        - userFilter\n      type: object\n    CreateDownloadShareRequest:\n      description: Request model for creating a Download Share\n      properties:\n        creatorLanguage:\n          description: |-\n            \u0026#128679; Deprecated since v4.20.0\n\n            Language tag for messages to creator\n          type: string\n        expiration:\n          $ref: \"#/components/schemas/ObjectExpiration\"\n        fileKey:\n          $ref: \"#/components/schemas/FileKey\"\n        internalNotes:\n          description: |-\n            \u0026#128640; Since v4.11.0\n\n            Internal notes\n          maximum: 255\n          type: string\n        keyPair:\n          $ref: \"#/components/schemas/UserKeyPairContainer\"\n        mailBody:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.11.0\n\n            Notification email content\n          type: string\n        mailRecipients:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.11.0\n\n            CSV string of recipient email addresses\n          type: string\n        mailSubject:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.11.0\n\n            Notification email subject\n          type: string\n        maxDownloads:\n          description: Max allowed downloads\n          format: int32\n          type: integer\n        name:\n          description: |-\n            Alias name\n\n            (default: name of the shared node)\n          type: string\n        nodeId:\n          description: Source node ID\n          format: int64\n          type: integer\n        notes:\n          description: User notes\n          maximum: 255\n          type: string\n        notifyCreator:\n          default: false\n          description: |-\n            \u0026#128679; Deprecated since v4.20.0\n\n            Notify creator on every download.\n          type: boolean\n        password:\n          description: Access password, not allowed for encrypted shares\n          type: string\n        receiverLanguage:\n          description: Language tag for messages to receiver\n          type: string\n        sendMail:\n          default: false\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.11.0\n\n            Notify recipients via email\n\n            Please use `POST /shares/downloads/{share_id}/email` API instead.\n          type: boolean\n        sendSms:\n          default: false\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.11.0\n\n            Send share password via SMS\n\n            Please use `textMessageRecipients` attribute instead.\n          type: boolean\n        showCreatorName:\n          default: false\n          description: Show creator first and last name.\n          type: boolean\n        showCreatorUsername:\n          default: false\n          description: Show creator email address.\n          type: boolean\n        smsRecipients:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.11.0\n\n            CSV string of recipient MSISDNs\n          type: string\n        textMessageRecipients:\n          description: |-\n            \u0026#128640; Since v4.11.0\n\n            List of recipient FQTNs\n\n            E.123 / E.164 Format\n          items:\n            description: |-\n              List of recipient FQTNs\n\n              E.123 / E.164 Format\n            type: string\n          type: array\n      required:\n        - nodeId\n      type: object\n    CreateFileUploadRequest:\n      description: Request model for creating an upload channel\n      properties:\n        classification:\n          description: |-\n            Classification ID:\n\n            * `1` - public\n\n            * `2` - internal\n\n            * `3` - confidential\n\n            * `4` - strictly confidential\n\n\n\n            (default: classification from parent room)\n          enum:\n            - 1\n            - 2\n            - 3\n            - 4\n          format: int32\n          type: integer\n        directS3Upload:\n          default: false\n          description: |-\n            \u0026#128640; Since v4.15.0\n\n            Upload direct to S3\n          type: boolean\n        expiration:\n          $ref: \"#/components/schemas/ObjectExpiration\"\n        name:\n          description: File name\n          type: string\n        notes:\n          description: |-\n            User notes\n\n            Use empty string to remove.\n          type: string\n        parentId:\n          description: Parent node ID (room or folder)\n          format: int64\n          type: integer\n        size:\n          description: File size in byte\n          format: int64\n          type: integer\n        timestampCreation:\n          description: |-\n            \u0026#128640; Since v4.22.0\n\n            Time the node was created on external file system\n\n            (default: current server datetime in UTC format)\n          format: date-time\n          type: string\n        timestampModification:\n          description: |-\n            \u0026#128640; Since v4.22.0\n\n            Time the content of a node was last modified on external file system\n\n            (default: current server datetime in UTC format)\n          format: date-time\n          type: string\n      required:\n        - name\n        - parentId\n      type: object\n    CreateFileUploadResponse:\n      description: Upload channel information\n      properties:\n        token:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.3.0\n\n            Upload token\n          type: string\n        uploadId:\n          description: Upload (channel) ID\n          type: string\n        uploadUrl:\n          description: (public) Upload URL\n          type: string\n      required:\n        - token\n        - uploadId\n        - uploadUrl\n      type: object\n    CreateFolderRequest:\n      description: Request model for creating a folder\n      properties:\n        name:\n          description: Name\n          type: string\n        notes:\n          description: |-\n            User notes\n\n            Use empty string to remove.\n          type: string\n        parentId:\n          description: Parent node ID (room or folder)\n          format: int64\n          type: integer\n        timestampCreation:\n          description: |-\n            \u0026#128640; Since v4.22.0\n\n            Time the node was created on external file system\n\n            (default: current server datetime in UTC format)\n          format: date-time\n          type: string\n        timestampModification:\n          description: |-\n            \u0026#128640; Since v4.22.0\n\n            Time the content of a node was last modified on external file system\n\n            (default: current server datetime in UTC format)\n          format: date-time\n          type: string\n      required:\n        - name\n        - parentId\n      type: object\n    CreateGroupRequest:\n      description: Request model for creating a group\n      properties:\n        expiration:\n          $ref: \"#/components/schemas/ObjectExpiration\"\n        name:\n          description: Group name\n          type: string\n      required:\n        - name\n      type: object\n    CreateKeyPairRequest:\n      description: Request model for creating a key pair\n      properties:\n        previousPrivateKey:\n          $ref: \"#/components/schemas/PrivateKeyContainer\"\n        privateKeyContainer:\n          $ref: \"#/components/schemas/PrivateKeyContainer\"\n        publicKeyContainer:\n          $ref: \"#/components/schemas/PublicKeyContainer\"\n      required:\n        - previousPrivateKey\n        - privateKeyContainer\n        - publicKeyContainer\n      type: object\n    CreateNodeCommentRequest:\n      description: Request model for creating a node comment\n      properties:\n        text:\n          description: Comment text\n          type: string\n      required:\n        - text\n      type: object\n    CreateOAuthClientRequest:\n      description: Request model for creating an OAuth client\n      properties:\n        accessTokenValidity:\n          description: Validity of the access token in seconds.\n          format: int32\n          type: integer\n        approvalValidity:\n          description: |-\n            \u0026#128640; Since v4.22.0\n\n            Validity of the approval interval in seconds.\n          format: int32\n          type: integer\n        clientId:\n          description: ID of the OAuth client\n          type: string\n        clientName:\n          description: Name, which is shown at the client configuration and authorization.\n          type: string\n        clientSecret:\n          description: Secret, which client uses at authentication.\n          type: string\n        clientType:\n          description: Determines whether client is a confidential or public client.\n          enum:\n            - confidential\n            - public\n          type: string\n        grantTypes:\n          description: |-\n            Authorized grant types\n\n            * `authorization_code`\n\n            * `implicit`\n\n            * `password`\n\n            * `client_credentials`\n\n            * `refresh_token`\n\n\n\n            cf. [RFC 6749](https://tools.ietf.org/html/rfc6749)\n          enum:\n            - authorization_code\n            - client_credentials\n            - implicit\n            - password\n            - refresh_token\n          items:\n            description: |-\n              Authorized grant types\n\n              * `authorization_code`\n\n              * `implicit`\n\n              * `password`\n\n              * `client_credentials`\n\n              * `refresh_token`\n\n\n\n              cf. [RFC 6749](https://tools.ietf.org/html/rfc6749)\n            enum:\n              - authorization_code\n              - client_credentials\n              - implicit\n              - password\n              - refresh_token\n            type: string\n          type: array\n        redirectUris:\n          description: URIs, to which a user is redirected after authorization.\n          items:\n            description: URIs, to which a user is redirected after authorization.\n            type: string\n          type: array\n        refreshTokenValidity:\n          description: Validity of the refresh token in seconds.\n          format: int32\n          type: integer\n      required:\n        - clientName\n        - grantTypes\n      type: object\n    CreateOpenIdIdpConfigRequest:\n      description: Request model for creating an OpenID Connect IDP configuration\n      properties:\n        authorizationEndPointUrl:\n          description: URL of the authorization endpoint\n          type: string\n        clientId:\n          description: ID of the OpenID client\n          type: string\n        clientSecret:\n          description: Secret, which client uses at authentication.\n          type: string\n        fallbackMappingClaim:\n          description: Name of the claim which is used for the user mapping fallback.\n          type: string\n        flow:\n          description: |-\n            \u0026#128640; Since v4.11.0\n\n            Flow, which is used at authentication\n          enum:\n            - authorization_code\n            - hybrid\n          type: string\n        issuer:\n          description: |-\n            Issuer identifier of the IDP\n\n            The value is a case sensitive URL.\n          type: string\n        jwksEndPointUrl:\n          description: URL of the JWKS endpoint\n          type: string\n        mappingClaim:\n          description: Name of the claim which is used for the user mapping.\n          type: string\n        name:\n          description: Name of the IDP\n          type: string\n        pkceChallengeMethod:\n          default: plain\n          description: |-\n            PKCE code challenge method.\n\n            cf. [RFC 7636](https://tools.ietf.org/html/rfc7636)\n          type: string\n        pkceEnabled:\n          default: false\n          description: |-\n            Determines whether PKCE is enabled.\n\n            cf. [RFC 7636](https://tools.ietf.org/html/rfc7636)\n          type: boolean\n        redirectUris:\n          description: URIs, to which a user is redirected after authorization.\n          items:\n            description: URIs, to which a user is redirected after authorization.\n            type: string\n          type: array\n        scopes:\n          description: List of requested scopes\n          items:\n            description: List of requested scopes\n            type: string\n          type: array\n        tokenEndPointUrl:\n          description: URL of the token endpoint\n          type: string\n        userImportEnabled:\n          default: false\n          description: |-\n            Determines if a DRACOON account is automatically created for a new user\n\n            who successfully logs on with his / her AD / IDP account.\n          type: boolean\n        userImportGroup:\n          description: |-\n            User group that is assigned to users who are created by automatic import.\n\n            Reset with `0`\n          format: int64\n          type: integer\n        userInfoEndPointUrl:\n          description: URL of the user info endpoint\n          type: string\n        userInfoSource:\n          description: |-\n            \u0026#128640; Since v4.23.0\n\n            Source, which is used to get user information at the import or update of a user.\n          enum:\n            - user_info_endpoint\n            - id_token\n          type: string\n        userManagementUrl:\n          description: |-\n            URL of the user management UI.\n\n            Use empty string to remove.\n          type: string\n        userUpdateEnabled:\n          default: false\n          description: |-\n            Determines if the DRACOON account is updated with data from AD / IDP.\n\n            For OpenID Connect, the scopes `email` and `profile` are needed.\n          type: boolean\n      required:\n        - authorizationEndPointUrl\n        - clientId\n        - clientSecret\n        - issuer\n        - jwksEndPointUrl\n        - mappingClaim\n        - name\n        - redirectUris\n        - scopes\n        - tokenEndPointUrl\n        - userInfoEndPointUrl\n      type: object\n    CreateRoomRequest:\n      description: Request model for creating a room\n      properties:\n        adminGroupIds:\n          description: |-\n            List of group ids\n\n            A room requires at least one admin (user or group)\n          items:\n            description: |-\n              List of group ids\n\n              A room requires at least one admin (user or group)\n            format: int64\n            type: integer\n          type: array\n        adminIds:\n          description: |-\n            List of user ids\n\n            A room requires at least one admin (user or group)\n          items:\n            description: |-\n              List of user ids\n\n              A room requires at least one admin (user or group)\n            format: int64\n            type: integer\n          type: array\n        classification:\n          default: 2\n          description: |-\n            Classification ID:\n\n            * `1` - public\n\n            * `2` - internal\n\n            * `3` - confidential\n\n            * `4` - strictly confidential\n\n\n\n            Provided (or default) classification is taken from room\n\n            when file gets uploaded without any classification.\n          enum:\n            - 1\n            - 2\n            - 3\n            - 4\n          format: int32\n          type: integer\n        hasActivitiesLog:\n          default: true\n          description: Is activities log active (for rooms only)\n          type: boolean\n        hasRecycleBin:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.10.0\n\n            Is recycle bin active (for rooms only)\n\n            Recycle bin is always on (disabling is not possible).\n          type: boolean\n        inheritPermissions:\n          description: |-\n            Inherit permissions from parent room\n\n            (default: `false` if `parentId` is `0`; otherwise: `true`)\n          type: boolean\n        name:\n          description: Name\n          type: string\n        newGroupMemberAcceptance:\n          default: autoallow\n          description: |-\n            Behaviour when new users are added to the group:\n\n            * `autoallow`\n\n            * `pending`\n\n\n\n            Only relevant if `adminGroupIds` has items.\n          enum:\n            - autoallow\n            - pending\n          type: string\n        notes:\n          description: |-\n            User notes\n\n            Use empty string to remove.\n          type: string\n        parentId:\n          description: Parent room ID or `null` (not 0) to create a top level room\n          format: int64\n          type: integer\n        quota:\n          description: Quota in byte\n          format: int64\n          type: integer\n        recycleBinRetentionPeriod:\n          description: Retention period for deleted nodes in days\n          format: int32\n          maximum: 9999\n          minimum: 0\n          type: integer\n        timestampCreation:\n          description: |-\n            \u0026#128640; Since v4.22.0\n\n            Time the node was created on external file system\n\n            (default: current server datetime in UTC format)\n          format: date-time\n          type: string\n        timestampModification:\n          description: |-\n            \u0026#128640; Since v4.22.0\n\n            Time the content of a node was last modified on external file system\n\n            (default: current server datetime in UTC format)\n          format: date-time\n          type: string\n      required:\n        - name\n      type: object\n    CreateShareUploadChannelRequest:\n      description: Request model for creating an upload channel\n      properties:\n        directS3Upload:\n          default: false\n          description: |-\n            \u0026#128640; Since v4.15.0\n\n            Upload direct to S3\n          type: boolean\n        name:\n          description: File name\n          type: string\n        password:\n          description: Password\n          type: string\n        size:\n          description: File size in byte\n          format: int64\n          type: integer\n        timestampCreation:\n          description: |-\n            \u0026#128640; Since v4.22.0\n\n            Time the node was created on external file system\n\n            (default: current server datetime in UTC format)\n          format: date-time\n          type: string\n        timestampModification:\n          description: |-\n            \u0026#128640; Since v4.22.0\n\n            Time the content of a node was last modified on external file system\n\n            (default: current server datetime in UTC format)\n          format: date-time\n          type: string\n      required:\n        - name\n      type: object\n    CreateShareUploadChannelResponse:\n      description: Upload channel information\n      properties:\n        token:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.3.0\n\n            Upload token\n          type: string\n        uploadId:\n          description: Upload (channel) ID\n          type: string\n        uploadUrl:\n          description: (public) Upload URL\n          type: string\n      required:\n        - uploadId\n        - uploadUrl\n      type: object\n    CreateUploadShareRequest:\n      description: Request model for creating an Upload Share\n      properties:\n        creatorLanguage:\n          description: |-\n            \u0026#128679; Deprecated since v4.20.0\n\n            Language tag for messages to creator\n          type: string\n        expiration:\n          $ref: \"#/components/schemas/ObjectExpiration\"\n        filesExpiryPeriod:\n          description: Number of days after which uploaded files expire\n          format: int32\n          type: integer\n        internalNotes:\n          description: |-\n            \u0026#128640; Since v4.11.0\n\n            Internal notes\n          maximum: 255\n          type: string\n        mailBody:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.11.0\n\n            Notification email content\n          type: string\n        mailRecipients:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.11.0\n\n            CSV string of recipient email addresses\n          type: string\n        mailSubject:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.11.0\n\n            Notification email subject\n          type: string\n        maxSize:\n          description: Maximal total size of uploaded files (in bytes)\n          format: int64\n          type: integer\n        maxSlots:\n          description: Maximal amount of files to upload\n          format: int32\n          type: integer\n        name:\n          description: |-\n            Alias name\n\n            (default: name of the shared node)\n          type: string\n        notes:\n          description: User notes\n          maximum: 255\n          type: string\n        notifyCreator:\n          default: false\n          description: |-\n            \u0026#128679; Deprecated since v4.20.0\n\n            Notify creator on every upload.\n          type: boolean\n        password:\n          description: Password\n          type: string\n        receiverLanguage:\n          description: Language tag for messages to receiver\n          type: string\n        sendMail:\n          default: false\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.11.0\n\n            Notify recipients via email\n\n            Please use `POST /shares/uploads/{share_id}/email` API instead.\n          type: boolean\n        sendSms:\n          default: false\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.11.0\n\n            Send share password via SMS\n\n            Please use `textMessageRecipients` attribute instead.\n          type: boolean\n        showCreatorName:\n          default: false\n          description: |-\n            \u0026#128640; Since v4.11.0\n\n            Show creator first and last name.\n          type: boolean\n        showCreatorUsername:\n          default: false\n          description: |-\n            \u0026#128640; Since v4.11.0\n\n            Show creator email address.\n          type: boolean\n        showUploadedFiles:\n          default: false\n          description: Allow display of already uploaded files\n          type: boolean\n        smsRecipients:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.11.0\n\n            CSV string of recipient MSISDNs\n          type: string\n        targetId:\n          description: Target room or folder ID\n          format: int64\n          type: integer\n        textMessageRecipients:\n          description: |-\n            \u0026#128640; Since v4.11.0\n\n            List of recipient FQTNs\n\n            E.123 / E.164 Format\n          items:\n            description: |-\n              List of recipient FQTNs\n\n              E.123 / E.164 Format\n            type: string\n          type: array\n      required:\n        - targetId\n      type: object\n    CreateUserRequest:\n      description: Request model for creating an user\n      properties:\n        authData:\n          $ref: \"#/components/schemas/UserAuthData\"\n        authMethods:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.13.0\n\n            Authentication methods:\n\n            * `sql`\n\n            * `active_directory`\n\n            * `radius`\n\n            * `openid`\n\n            use `authData` instead\n          items:\n            $ref: \"#/components/schemas/UserAuthMethod\"\n          type: array\n        email:\n          description: \"Email \"\n          type: string\n        expiration:\n          $ref: \"#/components/schemas/ObjectExpiration\"\n        firstName:\n          description: User first name\n          type: string\n        gender:\n          default: n\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.12.0\n\n            Gender\n\n            Do NOT use `gender`! It will be ignored.\n          type: string\n        isNonmemberViewer:\n          description: |-\n            \u0026#128640; Since v4.12.0\n\n            Determines whether user has the role NONMEMBER_VIEWER\n          type: boolean\n        lastName:\n          description: User last name\n          type: string\n        login:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.13.0\n\n            User login name\n          type: string\n        needsToChangePassword:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.13.0\n\n            Determines whether user has to change his / her initial password.\n\n            use `authDate.mustChangePassword` instead\n          type: boolean\n        notifyUser:\n          description: |-\n            \u0026#128640; Since v4.9.0\n\n            Notify user about his new account\n\n            * default: `true` for `basic` auth type\n\n            * default: `false` for `active_directory`, `openid` and `radius` auth types\n          type: boolean\n        password:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.13.0\n\n            An initial password may be preset\n\n            use `authData` instead\n          type: string\n        phone:\n          description: Phone number\n          type: string\n        receiverLanguage:\n          description: IETF language tag\n          type: string\n        title:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.18.0\n\n            Job title\n          type: string\n        userName:\n          description: |-\n            \u0026#128640; Since v4.13.0\n\n            Username\n          type: string\n      required:\n        - firstName\n        - lastName\n      type: object\n    CreateWebhookRequest:\n      description: Request model for creating a webhook\n      properties:\n        eventTypeNames:\n          description: List of names of event types\n          items:\n            description: List of names of event types\n            type: string\n          type: array\n        isEnabled:\n          description: Is enabled\n          type: boolean\n        name:\n          description: Name\n          type: string\n        secret:\n          description: Secret; used for event message signatures\n          type: string\n        triggerExampleEvent:\n          description: If set to true, an example event is being created\n          type: boolean\n        url:\n          description: URL (must begin with the `HTTPS` scheme)\n          type: string\n      required:\n        - eventTypeNames\n        - name\n        - url\n      type: object\n    Customer:\n      description: Customer information\n      properties:\n        activationCode:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.8.0\n\n            Customer activation code string:\n\n            * valid only for types `free` and `demo`\n\n            * for `pay` customers it is empty\n          type: string\n        companyName:\n          description: Company name\n          type: string\n        createdAt:\n          description: Creation date\n          format: date-time\n          type: string\n        customerAttributes:\n          $ref: \"#/components/schemas/CustomerAttributes\"\n        customerContractType:\n          description: Customer type\n          enum:\n            - demo\n            - free\n            - pay\n          type: string\n        customerUuid:\n          description: |-\n            \u0026#128640; Since v4.21.0\n\n            Customer UUID\n          type: string\n        id:\n          description: Unique identifier for the customer\n          format: int64\n          type: integer\n        isLocked:\n          default: false\n          description: |-\n            Customer is locked:\n\n            * `false` - unlocked\n\n            * `true` - locked\n\n\n\n            All users of this customer will be blocked and can not login anymore.\n          type: boolean\n        lastLoginAt:\n          description: Date of last seen login for the customer\n          format: date-time\n          type: string\n        lockStatus:\n          default: false\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.7.0\n\n            Customer lock status:\n\n            * `false` - unlocked\n\n            * `true` - locked\n\n\n\n            Please use `isLocked` instead.\n\n            All users of this customer will be blocked and can not login anymore.\n          type: boolean\n        providerCustomerId:\n          description: Provider customer ID\n          type: string\n        quotaMax:\n          description: Maximal disc space which can be allocated by customer in bytes. -1 for unlimited\n          format: int64\n          type: integer\n        quotaUsed:\n          description: Used amount of disc space in bytes\n          format: int64\n          type: integer\n        trialDaysLeft:\n          description: |-\n            Number of days left for trial period (relevant only for type `demo`)\n\n            (not used)\n          format: int32\n          type: integer\n        updatedAt:\n          description: Modification date\n          format: date-time\n          type: string\n        userMax:\n          description: Maximal number of users\n          format: int32\n          type: integer\n        userUsed:\n          description: Number of users which are already allocated.\n          format: int32\n          type: integer\n        webhooksMax:\n          description: |-\n            \u0026#128640; Since v4.19.0\n\n            Maximal number of webhooks\n          format: int64\n          type: integer\n      required:\n        - companyName\n        - createdAt\n        - customerContractType\n        - customerUuid\n        - id\n        - lockStatus\n        - quotaMax\n        - quotaUsed\n        - userMax\n        - userUsed\n      type: object\n    CustomerAttributes:\n      description: List of customer attributes\n      properties:\n        items:\n          description: List of customer attributes\n          items:\n            $ref: \"#/components/schemas/KeyValueEntry\"\n          type: array\n      required:\n        - items\n      type: object\n    CustomerData:\n      description: Customer information\n      properties:\n        accountsLimit:\n          description: User accounts limit\n          format: int32\n          type: integer\n        accountsUsed:\n          description: User accounts used\n          format: int32\n          type: integer\n        cntFiles:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.11.0\n\n            Total number of files\n\n            Visible only with at least one global role.\n          format: int64\n          type: integer\n        cntFolders:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.11.0\n\n            Total number of folders\n\n            Visible only with at least one global role.\n          format: int64\n          type: integer\n        cntRooms:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.11.0\n\n            Total number of rooms\n\n            Visible only with at least one global role.\n          format: int64\n          type: integer\n        customerEncryptionEnabled:\n          description: Clientside encryption for customer enabled\n          type: boolean\n        id:\n          description: Unique identifier for the customer\n          format: int64\n          type: integer\n        isProviderCustomer:\n          description: Customer is Provider Customer\n          type: boolean\n        name:\n          description: Customer name\n          type: string\n        spaceLimit:\n          description: Space limit (in bytes). -1 for unlimited\n          format: int64\n          type: integer\n        spaceUsed:\n          description: Space used (in bytes)\n          format: int64\n          type: integer\n      required:\n        - accountsLimit\n        - accountsUsed\n        - customerEncryptionEnabled\n        - id\n        - isProviderCustomer\n        - name\n        - spaceLimit\n        - spaceUsed\n      type: object\n    CustomerList:\n      description: List of customers\n      properties:\n        items:\n          description: List of customers\n          items:\n            $ref: \"#/components/schemas/Customer\"\n          type: array\n        range:\n          $ref: \"#/components/schemas/Range\"\n      required:\n        - items\n        - range\n      type: object\n    CustomerSettingsRequest:\n      description: Request model for setting the customer settings\n      properties:\n        homeRoomParentName:\n          description: Homeroom Parent Name\n          type: string\n        homeRoomQuota:\n          description: Homeroom Quota in bytes\n          format: int64\n          type: integer\n        homeRoomsActive:\n          description: Homerooms active\n          type: boolean\n      type: object\n    CustomerSettingsResponse:\n      description: Customer settings\n      properties:\n        homeRoomParentId:\n          description: Homeroom Parent ID\n          format: int64\n          type: integer\n        homeRoomParentName:\n          description: Homeroom Parent Name\n          type: string\n        homeRoomQuota:\n          description: Homeroom Quota in bytes\n          format: int64\n          type: integer\n        homeRoomsActive:\n          description: Homerooms active\n          type: boolean\n      required:\n        - homeRoomsActive\n      type: object\n    DeleteDeletedNodesRequest:\n      description: Request model for deleting nodes from recycle bin\n      properties:\n        deletedNodeIds:\n          description: List of deleted node IDs\n          items:\n            description: List of deleted node IDs\n            format: int64\n            type: integer\n          type: array\n      required:\n        - deletedNodeIds\n      type: object\n    DeleteDownloadSharesRequest:\n      description: Request model for deleting Download Shares\n      properties:\n        shareIds:\n          description: List of share IDs\n          items:\n            description: List of share IDs\n            format: int64\n            type: integer\n          type: array\n      required:\n        - shareIds\n      type: object\n    DeleteNodesRequest:\n      description: Request model for deleting nodes\n      properties:\n        nodeIds:\n          description: List of node IDs\n          items:\n            description: List of node IDs\n            format: int64\n            type: integer\n          type: array\n      required:\n        - nodeIds\n      type: object\n    DeleteUploadSharesRequest:\n      description: Request model for deleting Upload Shares\n      properties:\n        shareIds:\n          description: List of share IDs\n          items:\n            description: List of share IDs\n            format: int64\n            type: integer\n          type: array\n      required:\n        - shareIds\n      type: object\n    DeletedNode:\n      description: Deleted node information (Deleted node can be a folder or file)\n      properties:\n        accessedAt:\n          description: Last access date\n          format: date-time\n          type: string\n        classification:\n          description: |-\n            Classification ID:\n\n            * `1` - public\n\n            * `2` - internal\n\n            * `3` - confidential\n\n            * `4` - strictly confidential\n\n\n\n            (default: classification from parent room)\n          enum:\n            - 1\n            - 2\n            - 3\n            - 4\n          format: int32\n          type: integer\n        createdAt:\n          description: Creation date\n          format: date-time\n          type: string\n        createdBy:\n          $ref: \"#/components/schemas/UserInfo\"\n        deletedAt:\n          description: Deletion date\n          format: date-time\n          type: string\n        deletedBy:\n          $ref: \"#/components/schemas/UserInfo\"\n        expireAt:\n          description: Expiration date\n          format: date-time\n          type: string\n        id:\n          description: Node ID\n          format: int64\n          type: integer\n        isEncrypted:\n          description: Encryption state\n          type: boolean\n        name:\n          description: Node name\n          type: string\n        notes:\n          description: User notes\n          maximum: 255\n          type: string\n        parentId:\n          description: Parent node ID (room or folder)\n          format: int64\n          type: integer\n        parentPath:\n          description: |-\n            Parent node path\n\n            `/` if node is a root node (room)\n          type: string\n        size:\n          description: Node size in byte\n          format: int64\n          type: integer\n        type:\n          description: Node type\n          enum:\n            - folder\n            - file\n          type: string\n        updatedAt:\n          description: Modification date\n          format: date-time\n          type: string\n        updatedBy:\n          $ref: \"#/components/schemas/UserInfo\"\n      required:\n        - name\n        - parentId\n        - parentPath\n        - type\n      type: object\n    DeletedNodeSummary:\n      description: Deleted node information (Deleted node can be a folder or file)\n      properties:\n        cntVersions:\n          description: Number of deleted versions of this file\n          format: int32\n          type: integer\n        firstDeletedAt:\n          description: First deleted version\n          format: date-time\n          type: string\n        lastDeletedAt:\n          description: Last deleted version\n          format: date-time\n          type: string\n        lastDeletedNodeId:\n          description: Node ID of last deleted version\n          format: int64\n          type: integer\n        name:\n          description: Node name\n          type: string\n        parentId:\n          description: Parent node ID (room or folder)\n          format: int64\n          type: integer\n        parentPath:\n          description: |-\n            Parent node path\n\n            `/` if node is a root node (room)\n          type: string\n        timestampCreation:\n          description: |-\n            \u0026#128640; Since v4.22.0\n\n            Time the node was created on external file system\n          format: date-time\n          type: string\n        timestampModification:\n          description: |-\n            \u0026#128640; Since v4.22.0\n\n            Time the content of a node was last modified on external file system\n          format: date-time\n          type: string\n        type:\n          description: Node type\n          enum:\n            - folder\n            - file\n          type: string\n      required:\n        - cntVersions\n        - firstDeletedAt\n        - lastDeletedAt\n        - lastDeletedNodeId\n        - name\n        - parentId\n        - parentPath\n        - type\n      type: object\n    DeletedNodeSummaryList:\n      description: List of deleted nodes\n      properties:\n        items:\n          description: List of deleted nodes (summary)\n          items:\n            $ref: \"#/components/schemas/DeletedNodeSummary\"\n          type: array\n        range:\n          $ref: \"#/components/schemas/Range\"\n      required:\n        - items\n        - range\n      type: object\n    DeletedNodeVersionsList:\n      description: List of deleted versions of nodes\n      properties:\n        items:\n          description: List of deleted nodes\n          items:\n            $ref: \"#/components/schemas/DeletedNode\"\n          type: array\n        range:\n          $ref: \"#/components/schemas/Range\"\n      required:\n        - items\n        - range\n      type: object\n    DownloadShare:\n      description: Download Share information\n      properties:\n        accessKey:\n          description: Share access key to generate secure link\n          type: string\n        classification:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.11.0\n\n            Classification ID:\n\n            * `1` - public\n\n            * `2` - internal\n\n            * `3` - confidential\n\n            * `4` - strictly confidential\n\n\n\n            (default: classification from parent room)\n          enum:\n            - 1\n            - 2\n            - 3\n            - 4\n          format: int32\n          type: integer\n        cntDownloads:\n          description: Downloads counter (incremented on each download)\n          format: int32\n          type: integer\n        createdAt:\n          description: Creation date\n          format: date-time\n          type: string\n        createdBy:\n          $ref: \"#/components/schemas/UserInfo\"\n        dataUrl:\n          description: Path to shared download node\n          type: string\n        expireAt:\n          description: Expiration date\n          format: date-time\n          type: string\n        id:\n          description: Share ID\n          format: int64\n          type: integer\n        internalNotes:\n          description: |-\n            \u0026#128640; Since v4.11.0\n\n            Internal notes\n          maximum: 255\n          type: string\n        isEncrypted:\n          description: |-\n            Encrypted share\n\n            (this only applies to shared files, not folders)\n          type: boolean\n        isProtected:\n          description: Is share protected by password\n          type: boolean\n        maxDownloads:\n          description: Max allowed downloads\n          format: int32\n          type: integer\n        name:\n          description: Alias name\n          type: string\n        nodeId:\n          description: Source node ID\n          format: int64\n          type: integer\n        nodePath:\n          description: Path to shared download node\n          type: string\n        nodeType:\n          description: Node type\n          type: string\n        notes:\n          description: User notes\n          maximum: 255\n          type: string\n        notifyCreator:\n          description: |-\n            \u0026#128679; Deprecated since v4.20.0\n\n            Notify creator on every download.\n          type: boolean\n        recipients:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.11.0\n\n            CSV string of recipient email addresses\n          type: string\n        showCreatorName:\n          description: Show creator first and last name.\n          type: boolean\n        showCreatorUsername:\n          description: Show creator email address.\n          type: boolean\n        smsRecipients:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.11.0\n\n            CSV string of recipient MSISDNs\n          type: string\n        updatedAt:\n          description: Modification date\n          format: date-time\n          type: string\n        updatedBy:\n          $ref: \"#/components/schemas/UserInfo\"\n      required:\n        - accessKey\n        - cntDownloads\n        - createdAt\n        - createdBy\n        - id\n        - name\n        - nodeId\n        - notifyCreator\n      type: object\n    DownloadShareLinkEmail:\n      description: Request model for sending an email of a Download Share link\n      properties:\n        body:\n          description: Notification email content\n          type: string\n        receiverLanguage:\n          description: Language tag for messages to receiver\n          type: string\n        recipients:\n          description: List of recipient email addresses\n          items:\n            description: List of recipient email addresses\n            type: string\n          type: array\n      required:\n        - body\n        - recipients\n      type: object\n    DownloadShareList:\n      description: List of Download Shares\n      properties:\n        items:\n          description: List of Download Shares\n          items:\n            $ref: \"#/components/schemas/DownloadShare\"\n          type: array\n        range:\n          $ref: \"#/components/schemas/Range\"\n      required:\n        - items\n        - range\n      type: object\n    DownloadTokenGenerateResponse:\n      description: Download URL\n      properties:\n        downloadUrl:\n          description: Download URL\n          type: string\n        token:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.3.0\n\n            Download token\n          type: string\n      required:\n        - downloadUrl\n        - token\n      type: object\n    EnableCustomerEncryptionRequest:\n      description: Request model for enabling customer encryption\n      properties:\n        dataSpaceRescueKey:\n          $ref: \"#/components/schemas/UserKeyPairContainer\"\n        enableCustomerEncryption:\n          description: Set `true` to enable encryption for this customer\n          type: boolean\n      required:\n        - dataSpaceRescueKey\n        - enableCustomerEncryption\n      type: object\n    EncryptRoomRequest:\n      description: Request model for handling encryption settings for a room\n      properties:\n        dataRoomRescueKey:\n          $ref: \"#/components/schemas/UserKeyPairContainer\"\n        isEncrypted:\n          description: Encryption state\n          type: boolean\n        useDataSpaceRescueKey:\n          description: Use system emergency password (rescue key) for files in this room\n          type: boolean\n      required:\n        - isEncrypted\n      type: object\n    EncryptionInfo:\n      description: Encryption states\n      properties:\n        dataSpaceKeyState:\n          description: DRACOON key state\n          enum:\n            - none\n            - available\n            - pending\n          type: string\n        roomKeyState:\n          description: Room key state\n          enum:\n            - none\n            - available\n            - pending\n          type: string\n        userKeyState:\n          description: User key state\n          enum:\n            - none\n            - available\n            - pending\n          type: string\n      required:\n        - dataSpaceKeyState\n        - roomKeyState\n        - userKeyState\n      type: object\n    EncryptionPasswordPolicies:\n      description: Encryption password policies\n      properties:\n        characterRules:\n          $ref: \"#/components/schemas/CharacterRules\"\n        minLength:\n          description: Minimum number of characters a password must contain\n          format: int32\n          maximum: 1024\n          minimum: 1\n          type: integer\n        rejectKeyboardPatterns:\n          description: |-\n            Determines whether a password must NOT contain keyboard patterns (e.g. `qwertz`, `asdf`)\n\n            (min. 4 character pattern)\n          type: boolean\n        rejectUserInfo:\n          description: Determines whether a password must NOT contain user info (first name, last name, email, user name)\n          type: boolean\n        updatedAt:\n          description: Modification date\n          format: date-time\n          type: string\n        updatedBy:\n          $ref: \"#/components/schemas/UserInfo\"\n      type: object\n    ErrorResponse:\n      description: Error information\n      properties:\n        code:\n          description: HTTP status code\n          format: int32\n          type: integer\n        debugInfo:\n          description: Debug information\n          type: string\n        errorCode:\n          description: Internal error code\n          format: int32\n          type: integer\n        message:\n          description: HTTP status code description\n          type: string\n      required:\n        - code\n        - message\n      type: object\n    EventType:\n      description: Event type information\n      properties:\n        id:\n          description: ID\n          format: int32\n          type: integer\n        name:\n          description: Name\n          type: string\n        usableCustomerAdminWebhook:\n          description: Usable as customer admin webhook\n          type: boolean\n        usableNodeWebhook:\n          description: Usable as node webhook\n          type: boolean\n        usablePushNotification:\n          description: Usable as push notification\n          type: boolean\n        usableTenantWebhook:\n          description: Usable as tenant webhook\n          type: boolean\n      required:\n        - id\n        - name\n        - usableCustomerAdminWebhook\n        - usableNodeWebhook\n        - usablePushNotification\n        - usableTenantWebhook\n      type: object\n    EventTypeList:\n      description: List of event types\n      properties:\n        items:\n          description: List of event types\n          items:\n            $ref: \"#/components/schemas/EventType\"\n          type: array\n      required:\n        - items\n      type: object\n    EventlogConfig:\n      description: Eventlog settings\n      properties:\n        enabled:\n          description: Is eventlog enabled?\n          type: boolean\n        logIpEnabled:\n          description: Determines whether user’s IP address is logged.\n          type: boolean\n        retentionPeriod:\n          description: |-\n            Retention period (in days) of event log entries.\n\n            After that period, all entries are deleted.\n\n            Recommended value: 7\n          format: int32\n          type: integer\n      type: object\n    FailoverServer:\n      description: Failover server information\n      properties:\n        failoverEnabled:\n          description: RADIUS Failover Server is active\n          type: boolean\n        failoverIpAddress:\n          description: |-\n            RADIUS Failover Server IP Address\n\n            Required if failover server is enabled.\n          type: string\n        failoverPort:\n          description: |-\n            RADIUS Failover Server Port\n\n            Required if failover server is enabled.\n          format: int32\n          type: integer\n      required:\n        - failoverEnabled\n        - failoverIpAddress\n        - failoverPort\n      type: object\n    FileFileKeys:\n      description: File key information\n      properties:\n        fileKeyContainer:\n          $ref: \"#/components/schemas/FileKeyContainer\"\n        id:\n          description: File ID\n          format: int64\n          type: integer\n      type: object\n    FileKey:\n      description: File key information\n      properties:\n        iv:\n          description: Initial vector\n          type: string\n        key:\n          description: Encryption key\n          type: string\n        tag:\n          description: |-\n            Authentication tag\n\n            (needed with authenticated encryption)\n          type: string\n        version:\n          description: Version\n          type: string\n      required:\n        - iv\n        - key\n        - tag\n        - version\n      type: object\n    FileKeyContainer:\n      description: File key container\n      properties:\n        iv:\n          description: Initial vector\n          type: string\n        key:\n          description: Encryption key\n          type: string\n        tag:\n          description: |-\n            Authentication tag\n\n            (needed with authenticated encryption)\n          type: string\n        version:\n          description: Version\n          type: string\n      required:\n        - iv\n        - key\n        - version\n      type: object\n    FirstAdminUser:\n      description: First administrator user\n      properties:\n        authData:\n          $ref: \"#/components/schemas/UserAuthData\"\n        authMethods:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.13.0\n\n            Authentication methods:\n\n            * `sql`\n\n            * `active_directory`\n\n            * `radius`\n\n            * `openid`\n\n            use `authData` instead\n          items:\n            $ref: \"#/components/schemas/UserAuthMethod\"\n          type: array\n        email:\n          description: \"Email \"\n          type: string\n        firstName:\n          description: User first name\n          type: string\n        gender:\n          default: n\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.12.0\n\n            Gender\n          type: string\n        language:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.7.0\n\n            Language ID or ISO 639-1 code\n          type: string\n        lastName:\n          description: User last name\n          type: string\n        login:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.13.0\n\n            User login name\n          type: string\n        needsToChangePassword:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.13.0\n\n            Determines whether user has to change his / her initial password.\n\n            use `authDate.mustChangePassword` instead\n          type: boolean\n        needsToChangeUserName:\n          default: false\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.13.0\n\n            If `true`, the user must change the `userName` at the first login.\n          type: boolean\n        notifyUser:\n          description: |-\n            Notify user about his new account\n\n            * default: `true` for `basic` auth type\n\n            * default: `false` for `active_directory`, `openid` and `radius` auth types\n          type: boolean\n        password:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.13.0\n\n            An initial password may be preset\n\n            use `authData` instead\n          type: string\n        phone:\n          description: Phone number\n          type: string\n        receiverLanguage:\n          description: IETF language tag\n          type: string\n        title:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.18.0\n\n            Job title\n          type: string\n        userName:\n          description: |-\n            \u0026#128640; Since v4.13.0\n\n            Username\n          type: string\n      required:\n        - firstName\n        - lastName\n      type: object\n    GeneralSettings:\n      description: General settings\n      properties:\n        authTokenRestrictions:\n          $ref: \"#/components/schemas/AuthTokenRestrictions\"\n        cryptoEnabled:\n          description: |-\n            Activation status of client-side encryption.\n\n            Can only be enabled once; disabling is not possible.\n          type: boolean\n        emailNotificationButtonEnabled:\n          description: Enable email notification button\n          type: boolean\n        eulaEnabled:\n          description: Each user has to confirm the EULA at first login.\n          type: boolean\n        hideLoginInputFields:\n          description: |-\n            \u0026#128640; Since v4.13.0\n\n            Defines if login fields should be hidden\n          type: boolean\n        mediaServerEnabled:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.12.0\n\n            Determines if the media server is enabled\n          type: boolean\n        s3TagsEnabled:\n          description: |-\n            \u0026#128640; Since v4.9.0\n\n            Defines if S3 tags are enabled\n          type: boolean\n        sharePasswordSmsEnabled:\n          description: Allow sending of share passwords via SMS\n          type: boolean\n        useS3Storage:\n          description: Defines if S3 is used as storage backend\n          type: boolean\n        weakPasswordEnabled:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.14.0\n\n            Allow weak password\n\n            * A weak password has to fulfill the following criteria:\n\n               * is at least 8 characters long\n\n               * contains letters and numbers\n\n            * A strong password has to fulfill the following criteria in addition:\n\n               * contains at least one special character\n\n               * contains upper and lower case characters\n\n            Please use `GET /system/config/policies/passwords` API to get configured password policies.\n          type: boolean\n      type: object\n    GeneralSettingsInfo:\n      description: General settings\n      properties:\n        cryptoEnabled:\n          description: |-\n            Activation status of client-side encryption.\n\n            Can only be enabled once; disabling is not possible.\n          type: boolean\n        emailNotificationButtonEnabled:\n          description: Enable email notification button\n          type: boolean\n        eulaEnabled:\n          description: Each user has to confirm the EULA at first login.\n          type: boolean\n        homeRoomParentId:\n          description: |-\n            \u0026#128640; Since v4.10.0\n\n            Homeroom Parent ID\n          format: int64\n          type: integer\n        homeRoomsActive:\n          description: |-\n            \u0026#128640; Since v4.10.0\n\n            Homerooms active\n          type: boolean\n        mediaServerEnabled:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.12.0\n\n            Determines if the media server is enabled\n          type: boolean\n        s3TagsEnabled:\n          description: |-\n            \u0026#128640; Since v4.9.0\n\n            Defines if S3 tags are enabled\n          type: boolean\n        sharePasswordSmsEnabled:\n          description: Allow sending of share passwords via SMS\n          type: boolean\n        useS3Storage:\n          description: Defines if S3 is used as storage backend\n          type: boolean\n        weakPasswordEnabled:\n          description: |-\n            Allow weak password\n\n            * A weak password has to fulfill the following criteria:\n\n               * is at least 8 characters long\n\n               * contains letters and numbers\n\n            * A strong password has to fulfill the following criteria in addition:\n\n               * contains at least one special character\n\n               * contains upper and lower case characters\n          type: boolean\n      type: object\n    GeneratePresignedUrlsRequest:\n      description: Request model for generating presigned URLs\n      properties:\n        firstPartNumber:\n          description: \"First part number of a range of requested presigned URLs (for S3 it is: `1`)\"\n          format: int32\n          type: integer\n        lastPartNumber:\n          description: Last part number of a range of requested presigned URLs\n          format: int32\n          type: integer\n        size:\n          description: |-\n            `Content-Length` header size for each presigned URL (in bytes)\n\n            *MUST* be \u003e= 5 MB except the last part.\n          format: int64\n          type: integer\n      required:\n        - firstPartNumber\n        - lastPartNumber\n        - size\n      type: object\n    Group:\n      description: Group information\n      properties:\n        cntUsers:\n          description: Amount of users\n          format: int32\n          type: integer\n        createdAt:\n          description: Creation date\n          format: date-time\n          type: string\n        createdBy:\n          $ref: \"#/components/schemas/UserInfo\"\n        expireAt:\n          description: Expiration date\n          format: date-time\n          type: string\n        groupRoles:\n          $ref: \"#/components/schemas/RoleList\"\n        id:\n          description: Unique identifier for the group\n          format: int64\n          type: integer\n        name:\n          description: Group name\n          type: string\n        updatedAt:\n          description: Modification date\n          format: date-time\n          type: string\n        updatedBy:\n          $ref: \"#/components/schemas/UserInfo\"\n      required:\n        - cntUsers\n        - createdAt\n        - createdBy\n        - id\n        - name\n      type: object\n    GroupIds:\n      description: List of group IDs\n      properties:\n        ids:\n          description: List of group IDs\n          items:\n            description: List of group IDs\n            format: int64\n            type: integer\n          type: array\n      required:\n        - ids\n      type: object\n    GroupInfo:\n      description: Group information\n      properties:\n        id:\n          description: Unique identifier for the group\n          format: int64\n          type: integer\n        name:\n          description: Group name\n          type: string\n      required:\n        - id\n        - name\n      type: object\n    GroupList:\n      description: List of groups\n      properties:\n        items:\n          description: List of groups\n          items:\n            $ref: \"#/components/schemas/Group\"\n          type: array\n        range:\n          $ref: \"#/components/schemas/Range\"\n      required:\n        - items\n        - range\n      type: object\n    GroupUser:\n      description: User information\n      properties:\n        displayName:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.11.0\n\n            Display name\n\n            use information from `UserInfo` instead to combine a display name\n          type: string\n        email:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.11.0\n\n            Email \n\n            use `email` from `UserInfo` instead\n          type: string\n        id:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.11.0\n\n            Unique identifier for the user\n\n            use `id` from `UserInfo` instead\n          format: int64\n          type: integer\n        isMember:\n          description: Determines whether user is a member of the group or not\n          type: boolean\n        login:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.11.0\n\n            User login name\n          type: string\n        userInfo:\n          $ref: \"#/components/schemas/UserInfo\"\n      required:\n        - displayName\n        - email\n        - id\n        - isMember\n        - login\n        - userInfo\n      type: object\n    GroupUserList:\n      description: List of users\n      properties:\n        items:\n          description: List of group-user mappings\n          items:\n            $ref: \"#/components/schemas/GroupUser\"\n          type: array\n        range:\n          $ref: \"#/components/schemas/Range\"\n      required:\n        - items\n        - range\n      type: object\n    InfrastructureProperties:\n      description: Infrastructure properties\n      properties:\n        isDracoonCloud:\n          description: |-\n            \u0026#128640; Since v4.21.0\n\n            Determines if the DRACOON Core is deployed in the cloud environment\n          type: boolean\n        mediaServerConfigEnabled:\n          description: Determines if the media server is enabled\n          type: boolean\n        s3DefaultRegion:\n          description: Suggested S3 Region\n          type: string\n        s3EnforceDirectUpload:\n          description: |-\n            \u0026#128640; Since v4.15.0\n\n            Enforce direct upload to S3\n          type: boolean\n        smsConfigEnabled:\n          description: Allow sending of share passwords via SMS\n          type: boolean\n        tenantUuid:\n          description: |-\n            \u0026#128640; Since v4.21.0\n\n            Current tenant UUID\n          type: string\n      type: object\n    KeyValueEntry:\n      description: Key-value pair\n      properties:\n        key:\n          description: Entry key\n          type: string\n        value:\n          description: Entry value\n          type: string\n      required:\n        - key\n        - value\n      type: object\n    LastAdminGroupRoom:\n      description: Room information\n      properties:\n        id:\n          description: Room ID\n          format: int64\n          type: integer\n        name:\n          description: Room name\n          type: string\n        parentId:\n          description: Parent room ID\n          format: int64\n          type: integer\n        parentPath:\n          description: |-\n            Parent node path\n\n            `/` if node is a root node (room)\n          type: string\n      required:\n        - id\n        - name\n        - parentPath\n      type: object\n    LastAdminGroupRoomList:\n      description: List of (last admin group) rooms\n      properties:\n        items:\n          description: List of last admin rooms\n          items:\n            $ref: \"#/components/schemas/LastAdminGroupRoom\"\n          type: array\n      required:\n        - items\n      type: object\n    LastAdminUserRoom:\n      description: Room information\n      properties:\n        id:\n          description: Room ID\n          format: int64\n          type: integer\n        lastAdminInGroup:\n          description: Determines whether user is last admin of a room due to being the last member of last admin group\n          type: boolean\n        lastAdminInGroupId:\n          description: |-\n            ID of the last admin group where the user is the only remaining member\n\n            (returned only if `lastAdminInGroup` is `true`)\n          format: int64\n          type: integer\n        name:\n          description: Room name\n          type: string\n        parentId:\n          description: Parent room ID\n          format: int64\n          type: integer\n        parentPath:\n          description: |-\n            Parent node path\n\n            `/` if node is a root node (room)\n          type: string\n      required:\n        - id\n        - lastAdminInGroup\n        - name\n        - parentPath\n      type: object\n    LastAdminUserRoomList:\n      description: List of (last admin user) rooms\n      properties:\n        items:\n          description: List of last admin rooms\n          items:\n            $ref: \"#/components/schemas/LastAdminUserRoom\"\n          type: array\n      required:\n        - items\n      type: object\n    LogEvent:\n      description: Log event information\n      properties:\n        attribute1:\n          description: Attribute 1\n          type: string\n        attribute2:\n          description: Attribute 2\n          type: string\n        attribute3:\n          description: Attribute 3\n          type: string\n        authParentSource:\n          description: Auth parent source ID\n          type: string\n        authParentTarget:\n          description: Auth parent target ID\n          type: string\n        customerId:\n          description: Unique identifier for the customer\n          format: int64\n          type: integer\n        id:\n          description: Event ID\n          format: int64\n          type: integer\n        message:\n          description: Event description\n          type: string\n        objectId1:\n          description: Object ID 1\n          format: int64\n          type: integer\n        objectId2:\n          description: Object ID 2\n          format: int64\n          type: integer\n        objectName1:\n          description: Object name 1\n          type: string\n        objectName2:\n          description: Object name 2\n          type: string\n        objectType1:\n          description: Object type 1\n          format: int32\n          type: integer\n        objectType2:\n          description: Object type 2\n          format: int32\n          type: integer\n        operationId:\n          description: Operation type ID\n          format: int32\n          type: integer\n        operationName:\n          description: Operation name\n          type: string\n        status:\n          description: |-\n            Operation status:\n\n            * `0` - Success\n\n            * `2` - Error\n          enum:\n            - 0\n            - 2\n          format: int32\n          type: integer\n        time:\n          description: Event timestamp\n          format: date-time\n          type: string\n        userClient:\n          description: Client\n          type: string\n        userId:\n          description: Unique identifier for the user\n          format: int64\n          type: integer\n        userIp:\n          description: User IP\n          type: string\n        userName:\n          description: Username\n          type: string\n      required:\n        - id\n        - message\n        - time\n        - userId\n      type: object\n    LogEventList:\n      description: List of log events\n      properties:\n        items:\n          description: List of log events\n          items:\n            $ref: \"#/components/schemas/LogEvent\"\n          type: array\n        range:\n          $ref: \"#/components/schemas/Range\"\n      required:\n        - items\n        - range\n      type: object\n    LogOperation:\n      description: Log operation\n      properties:\n        id:\n          description: Operation type ID\n          format: int32\n          type: integer\n        isDeprecated:\n          description: Determines whether log operation is deprecated or not\n          type: boolean\n        name:\n          description: Operation name\n          type: string\n      required:\n        - id\n        - isDeprecated\n        - name\n      type: object\n    LogOperationList:\n      description: List of log operations\n      properties:\n        operationList:\n          description: List of all log operations\n          items:\n            $ref: \"#/components/schemas/LogOperation\"\n          type: array\n      required:\n        - operationList\n      type: object\n    LoginPasswordPolicies:\n      description: Login password policies\n      properties:\n        characterRules:\n          $ref: \"#/components/schemas/CharacterRules\"\n        minLength:\n          description: Minimum number of characters a password must contain\n          format: int32\n          maximum: 1024\n          minimum: 1\n          type: integer\n        numberOfArchivedPasswords:\n          description: |-\n            Number of passwords to archive\n\n            (must be between `0` and `10`; `0` means that password history is disabled)\n          format: int32\n          maximum: 10\n          minimum: 1\n          type: integer\n        passwordExpiration:\n          $ref: \"#/components/schemas/PasswordExpiration\"\n        rejectDictionaryWords:\n          description: Determines whether a password must NOT contain word(s) from a dictionary\n          type: boolean\n        rejectKeyboardPatterns:\n          description: |-\n            Determines whether a password must NOT contain keyboard patterns (e.g. `qwertz`, `asdf`)\n\n            (min. 4 character pattern)\n          type: boolean\n        rejectUserInfo:\n          description: Determines whether a password must NOT contain user info (first name, last name, email, user name)\n          type: boolean\n        updatedAt:\n          description: Modification date\n          format: date-time\n          type: string\n        updatedBy:\n          $ref: \"#/components/schemas/UserInfo\"\n        userLockout:\n          $ref: \"#/components/schemas/UserLockout\"\n      required:\n        - characterRules\n        - minLength\n        - numberOfArchivedPasswords\n        - passwordExpiration\n        - rejectDictionaryWords\n        - rejectKeyboardPatterns\n        - rejectUserInfo\n        - updatedAt\n        - updatedBy\n        - userLockout\n      type: object\n    LoginRequest:\n      description: Request model for performing an authentication\n      properties:\n        authType:\n          description: Authentication methods\n          enum:\n            - basic\n            - active_directory\n            - radius\n          type: string\n        language:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.7.0\n\n            Language ID or ISO 639-1 code\n          type: string\n        login:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.7.0\n\n            User login name\n          type: string\n        password:\n          description: Password\n          type: string\n        state:\n          description: |-\n            For RADIUS Access-Challenge\n\n            If a `replyState` is returned, it must be included as `state` in the following request.\n          type: string\n        token:\n          description: RADIUS Token\n          type: string\n        userName:\n          description: |-\n            \u0026#128640; Since v4.13.0\n\n            Username\n          type: string\n      required:\n        - password\n      type: object\n    LoginResponse:\n      description: Authentication token\n      properties:\n        token:\n          description: Authentication token\n          type: string\n      required:\n        - token\n      type: object\n    MissingKeysResponse:\n      description: Missing keys information\n      properties:\n        files:\n          description: List of file keys\n          items:\n            $ref: \"#/components/schemas/FileFileKeys\"\n          type: array\n        items:\n          description: List of user ID and file ID mappings\n          items:\n            $ref: \"#/components/schemas/UserIdFileIdItem\"\n          type: array\n        range:\n          $ref: \"#/components/schemas/Range\"\n        users:\n          description: List of user public keys\n          items:\n            $ref: \"#/components/schemas/UserUserPublicKey\"\n          type: array\n      type: object\n    MoveNode:\n      description: Moved node information\n      properties:\n        id:\n          description: Source node ID\n          format: int64\n          type: integer\n        name:\n          description: New node name\n          type: string\n        timestampCreation:\n          description: |-\n            \u0026#128640; Since v4.22.0\n\n            Time the node was created on external file system\n\n            (default: current server datetime in UTC format)\n          format: date-time\n          type: string\n        timestampModification:\n          description: |-\n            \u0026#128640; Since v4.22.0\n\n            Time the content of a node was last modified on external file system\n\n            (default: current server datetime in UTC format)\n          format: date-time\n          type: string\n      required:\n        - id\n      type: object\n    MoveNodesRequest:\n      description: Request model for moving nodes\n      properties:\n        items:\n          description: List of nodes to be moved\n          items:\n            $ref: \"#/components/schemas/MoveNode\"\n          type: array\n        keepShareLinks:\n          default: false\n          description: Preserve Download Share Links and point them to the new node.\n          type: boolean\n        nodeIds:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.5.0\n\n            Node IDs\n\n            Please use `items` instead.\n          items:\n            deprecated: true\n            description: |-\n              Node IDs\n\n              Please use `items` instead.\n            format: int64\n            type: integer\n          type: array\n        resolutionStrategy:\n          default: autorename\n          description: |-\n            Node conflict resolution strategy:\n\n            * `autorename`\n\n            * `overwrite`\n\n            * `fail`\n          enum:\n            - autorename\n            - overwrite\n            - fail\n          type: string\n      type: object\n    NewCustomerRequest:\n      description: Request model for creating a customer\n      properties:\n        activationCode:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.8.0\n\n            Customer activation code string:\n\n            * valid only for types `free` and `demo`\n\n            * for `pay` customers it is empty\n          type: string\n        companyName:\n          description: Company name\n          type: string\n        customerAttributes:\n          $ref: \"#/components/schemas/CustomerAttributes\"\n        customerContractType:\n          description: Customer type\n          enum:\n            - demo\n            - free\n            - pay\n          type: string\n        firstAdminUser:\n          $ref: \"#/components/schemas/FirstAdminUser\"\n        isLocked:\n          default: false\n          description: |-\n            Customer is locked:\n\n            * `false` - unlocked\n\n            * `true` - locked\n\n\n\n            All users of this customer will be blocked and can not login anymore.\n          type: boolean\n        lockStatus:\n          default: false\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.7.0\n\n            Customer lock status:\n\n            * `false` - unlocked\n\n            * `true` - locked\n\n\n\n            Please use `isLocked` instead.\n\n            All users of this customer will be blocked and can not login anymore.\n          type: boolean\n        providerCustomerId:\n          description: Provider customer ID\n          type: string\n        quotaMax:\n          description: Maximal disc space which can be allocated by customer in bytes. -1 for unlimited\n          format: int64\n          type: integer\n        trialDays:\n          description: |-\n            Number of days left for trial period (relevant only for type `demo`)\n\n            (not used)\n          format: int32\n          type: integer\n        userMax:\n          description: Maximal number of users\n          format: int32\n          type: integer\n        webhooksMax:\n          description: |-\n            \u0026#128640; Since v4.19.0\n\n            Maximal number of webhooks\n          format: int64\n          type: integer\n      required:\n        - customerContractType\n        - firstAdminUser\n        - quotaMax\n        - userMax\n      type: object\n    NewCustomerResponse:\n      description: Customer information\n      properties:\n        activationCode:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.8.0\n\n            Customer activation code string:\n\n            * valid only for types `free` and `demo`\n\n            * for `pay` customers it is empty\n          type: string\n        companyName:\n          description: Company name\n          type: string\n        createdAt:\n          description: Creation date\n          format: date-time\n          type: string\n        customerAttributes:\n          $ref: \"#/components/schemas/CustomerAttributes\"\n        customerContractType:\n          description: Customer type\n          enum:\n            - demo\n            - free\n            - pay\n          type: string\n        customerUuid:\n          description: |-\n            \u0026#128640; Since v4.21.0\n\n            Customer UUID\n          type: string\n        firstAdminUser:\n          $ref: \"#/components/schemas/FirstAdminUser\"\n        id:\n          description: Unique identifier for the customer\n          format: int64\n          type: integer\n        isLocked:\n          default: false\n          description: |-\n            Customer is locked:\n\n            * `false` - unlocked\n\n            * `true` - locked\n\n\n\n            All users of this customer will be blocked and can not login anymore.\n          type: boolean\n        lockStatus:\n          default: false\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.7.0\n\n            Customer lock status:\n\n            * `false` - unlocked\n\n            * `true` - locked\n\n\n\n            Please use `isLocked` instead.\n\n            All users of this customer will be blocked and can not login anymore.\n          type: boolean\n        providerCustomerId:\n          description: Provider customer ID\n          type: string\n        quotaMax:\n          description: Maximal disc space which can be allocated by customer in bytes. -1 for unlimited\n          format: int64\n          type: integer\n        trialDays:\n          description: |-\n            Number of days left for trial period (relevant only for type `demo`)\n\n            (not used)\n          format: int32\n          type: integer\n        userMax:\n          description: Maximal number of users\n          format: int32\n          type: integer\n        webhooksMax:\n          description: |-\n            \u0026#128640; Since v4.19.0\n\n            Maximal number of webhooks\n          format: int64\n          type: integer\n      required:\n        - companyName\n        - customerContractType\n        - customerUuid\n        - firstAdminUser\n        - lockStatus\n        - quotaMax\n        - userMax\n      type: object\n    Node:\n      description: Node information (Node can be a room, folder or file)\n      properties:\n        authParentId:\n          description: |-\n            \u0026#128640; Since v4.15.0\n\n            Auth parent room ID\n          format: int64\n          type: integer\n        branchVersion:\n          description: Version of last change in this node or a node further down the tree.\n          format: int64\n          type: integer\n        children:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.10.0\n\n            Child nodes list (if requested)\n\n            (for rooms / folders only)\n          items:\n            $ref: \"#/components/schemas/Node\"\n          type: array\n        classification:\n          description: |-\n            Classification ID:\n\n            * `1` - public\n\n            * `2` - internal\n\n            * `3` - confidential\n\n            * `4` - strictly confidential\n          enum:\n            - 1\n            - 2\n            - 3\n            - 4\n          format: int32\n          type: integer\n        cntAdmins:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.2.0\n\n            Number of admins (for rooms only)\n          format: int32\n          type: integer\n        cntChildren:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.11.0\n\n            Number of direct children\n\n            (no recursion; for rooms / folders only)\n          format: int32\n          type: integer\n        cntComments:\n          description: Returns the number of comments of this node.\n          format: int32\n          type: integer\n        cntDeletedVersions:\n          description: |-\n            Number of deleted versions of this file / folder\n\n            (for rooms / folders only)\n          format: int32\n          type: integer\n        cntDownloadShares:\n          description: Returns the number of Download Shares of this node.\n          format: int32\n          type: integer\n        cntFiles:\n          description: |-\n            \u0026#128640; Since v4.11.0\n\n            Amount of direct child files where this node is the parent node\n\n            (no recursion; for rooms / folders only)\n          format: int32\n          type: integer\n        cntFolders:\n          description: |-\n            \u0026#128640; Since v4.11.0\n\n            Amount of direct child folders where this node is the parent node\n\n            (no recursion; for rooms / folders only)\n          format: int32\n          type: integer\n        cntRooms:\n          description: |-\n            \u0026#128640; Since v4.11.0\n\n            Amount of direct child rooms where this node is the parent node\n\n            (no recursion; for rooms only)\n          format: int32\n          type: integer\n        cntUploadShares:\n          description: Returns the number of Upload Shares of this node.\n          format: int32\n          type: integer\n        cntUsers:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.2.0\n\n            Number of users (for rooms only)\n          format: int32\n          type: integer\n        createdAt:\n          description: Creation date\n          format: date-time\n          type: string\n        createdBy:\n          $ref: \"#/components/schemas/UserInfo\"\n        encryptionInfo:\n          $ref: \"#/components/schemas/EncryptionInfo\"\n        expireAt:\n          description: Expiration date\n          format: date-time\n          type: string\n        fileType:\n          description: File type / extension (for files only)\n          type: string\n        hasActivitiesLog:\n          default: true\n          description: Is activities log active (for rooms only)\n          type: boolean\n        hasRecycleBin:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.10.0\n\n            Is recycle bin active (for rooms only)\n\n            Recycle bin is always on (disabling is not possible).\n          type: boolean\n        hash:\n          description: MD5 hash of file\n          type: string\n        id:\n          description: Node ID\n          format: int64\n          type: integer\n        inheritPermissions:\n          description: |-\n            Inherit permissions from parent room\n\n            (default: `false` if `parentId` is `0`; otherwise: `true`)\n          type: boolean\n        isBrowsable:\n          description: |-\n            \u0026#128640; Since v4.11.0\n\n            Determines whether node is browsable by client (for rooms only)\n          type: boolean\n        isEncrypted:\n          description: Encryption state\n          type: boolean\n        isFavorite:\n          description: Node is marked as favorite (for rooms / folders only)\n          type: boolean\n        mediaToken:\n          description: Media server media token\n          type: string\n        mediaType:\n          description: File media type (for files only)\n          type: string\n        name:\n          description: Name\n          type: string\n        notes:\n          description: User notes\n          maximum: 255\n          type: string\n        parentId:\n          description: Parent node ID (room or folder)\n          format: int64\n          type: integer\n        parentPath:\n          description: |-\n            Parent node path\n\n            `/` if node is a root node (room)\n          type: string\n        permissions:\n          $ref: \"#/components/schemas/NodePermissions\"\n        quota:\n          description: Quota in byte\n          format: int64\n          type: integer\n        recycleBinRetentionPeriod:\n          description: Retention period for deleted nodes in days\n          format: int32\n          maximum: 9999\n          minimum: 0\n          type: integer\n        size:\n          description: Node size in byte\n          format: int64\n          type: integer\n        timestampCreation:\n          description: |-\n            \u0026#128640; Since v4.22.0\n\n            Time the node was created on external file system\n          format: date-time\n          type: string\n        timestampModification:\n          description: |-\n            \u0026#128640; Since v4.22.0\n\n            Time the content of a node was last modified on external file system\n          format: date-time\n          type: string\n        type:\n          description: Node type\n          enum:\n            - room\n            - folder\n            - file\n          type: string\n        updatedAt:\n          description: Modification date\n          format: date-time\n          type: string\n        updatedBy:\n          $ref: \"#/components/schemas/UserInfo\"\n      required:\n        - id\n        - name\n        - type\n      type: object\n    NodeList:\n      description: List of nodes\n      properties:\n        items:\n          description: List of nodes\n          items:\n            $ref: \"#/components/schemas/Node\"\n          type: array\n        range:\n          $ref: \"#/components/schemas/Range\"\n      required:\n        - items\n        - range\n      type: object\n    NodeParent:\n      description: Parent node\n      properties:\n        id:\n          description: Node ID\n          format: int64\n          type: integer\n        name:\n          description: Node name\n          type: string\n        parentId:\n          description: Parent node ID (room or folder)\n          format: int64\n          type: integer\n        type:\n          description: Node type\n          type: string\n      required:\n        - id\n        - name\n        - type\n      type: object\n    NodeParentList:\n      description: List of parent nodes\n      properties:\n        items:\n          description: List of node parents\n          items:\n            $ref: \"#/components/schemas/NodeParent\"\n          type: array\n      type: object\n    NodePermissions:\n      description: Node permissions\n      properties:\n        change:\n          description: \"User / Group may update metadata of nodes: rename files and folders, change classification, etc.\"\n          type: boolean\n        create:\n          description: User / Group may upload files, create folders and copy / move files to this room, overwriting is not possible.\n          type: boolean\n        delete:\n          description: User / Group may overwrite and remove files / folders, move files from this room.\n          type: boolean\n        deleteRecycleBin:\n          description: User / Group may permanently remove files / folders from the recycle bin.\n          type: boolean\n        manage:\n          description: |-\n            User / Group may grant all of the above permissions to other users and groups independently,\n\n            may update room metadata and create / update / delete subordinary rooms, has all permissions.\n          type: boolean\n        manageDownloadShare:\n          description: User / Group may create Download Shares for files and containers view all previously created Download Shares in this room.\n          type: boolean\n        manageUploadShare:\n          description: User / Group may create Upload Shares for containers, view all previously created Upload Shares in this room.\n          type: boolean\n        read:\n          description: User / Group may see all rooms, files and folders in the room and download everything, copy files from this room.\n          type: boolean\n        readRecycleBin:\n          description: User / Group may look up files / folders in the recycle bin.\n          type: boolean\n        restoreRecycleBin:\n          description: User / Group may restore files / folders from recycle bin - room permissions required.\n          type: boolean\n      required:\n        - change\n        - create\n        - delete\n        - deleteRecycleBin\n        - manage\n        - manageDownloadShare\n        - manageUploadShare\n        - read\n        - readRecycleBin\n        - restoreRecycleBin\n      type: object\n    NotificationChannel:\n      description: Notification channel information\n      properties:\n        frequency:\n          description: Channel frequency (aggregation window size in minutes)\n          format: int64\n          type: integer\n        id:\n          description: Channel ID\n          format: int32\n          type: integer\n        isEnabled:\n          description: Determines whether channel is enabled\n          type: boolean\n        name:\n          description: Name\n          type: string\n        type:\n          description: Channel type (only `EMAIL` available at the moment)\n          type: string\n      required:\n        - frequency\n        - id\n        - isEnabled\n        - name\n        - type\n      type: object\n    NotificationChannelActivationRequest:\n      description: Request model for switching notification channel status\n      properties:\n        channelId:\n          description: Channel ID\n          format: int32\n          type: integer\n        isEnabled:\n          description: Determines whether channel is enabled\n          type: boolean\n      required:\n        - channelId\n        - isEnabled\n      type: object\n    NotificationChannelList:\n      description: List of notification channels\n      properties:\n        items:\n          description: List of notification channels\n          items:\n            $ref: \"#/components/schemas/NotificationChannel\"\n          type: array\n      required:\n        - items\n      type: object\n    NotificationConfig:\n      description: Notification configuration information\n      properties:\n        channelIds:\n          description: List of notification channel IDs\n          items:\n            description: List of notification channel IDs\n            format: int32\n            type: integer\n          type: array\n        eventTypeName:\n          description: Event type name\n          type: string\n        id:\n          description: Notification configuration ID\n          format: int64\n          type: integer\n        scopeId:\n          description: Scope ID\n          format: int32\n          type: integer\n      required:\n        - channelIds\n        - eventTypeName\n        - id\n        - scopeId\n      type: object\n    NotificationConfigChangeRequest:\n      description: Request model for updating notification configuration\n      properties:\n        channelIds:\n          description: |-\n            List of notification channel IDs.\n\n            Leave empty to disable notifications.\n          items:\n            description: |-\n              List of notification channel IDs.\n\n              Leave empty to disable notifications.\n            format: int32\n            type: integer\n          type: array\n      required:\n        - channelIds\n      type: object\n    NotificationConfigList:\n      description: List of notification configurations\n      properties:\n        items:\n          description: List of notification configurations\n          items:\n            $ref: \"#/components/schemas/NotificationConfig\"\n          type: array\n      required:\n        - items\n      type: object\n    NotificationScope:\n      description: Notification scope information\n      properties:\n        id:\n          description: Scope ID\n          format: int32\n          type: integer\n        name:\n          description: Name\n          type: string\n      required:\n        - id\n        - name\n      type: object\n    NotificationScopeList:\n      description: List of notification scopes\n      properties:\n        items:\n          description: List of notification scopes\n          items:\n            $ref: \"#/components/schemas/NotificationScope\"\n          type: array\n      required:\n        - items\n      type: object\n    OAuthApproval:\n      description: OAuth client approval information\n      properties:\n        clientId:\n          description: ID of the OAuth client\n          type: string\n        clientName:\n          description: Name, which is shown at the client configuration and authorization.\n          type: string\n        expiresAt:\n          description: Expiration date of the approval\n          format: date-time\n          type: string\n      required:\n        - clientId\n        - clientName\n      type: object\n    OAuthAuthorization:\n      description: OAuth authorization\n      properties:\n        clientId:\n          description: ID of the OAuth client\n          type: string\n        clientName:\n          description: Name, which is shown at the client configuration and authorization.\n          type: string\n        createdAt:\n          description: |-\n            \u0026#128640; Since v4.13.0\n\n            Creation date of the authorization\n          format: date-time\n          type: string\n        expiresAt:\n          description: Expiration date of the authorization\n          format: date-time\n          type: string\n        id:\n          description: |-\n            \u0026#128640; Since v4.12.0\n\n            ID of the OAuth authorization\n          format: int64\n          type: integer\n        isCurrentAuthorization:\n          description: |-\n            \u0026#128640; Since v4.25.0\n\n            Determines whether authorization matches the one from Authorization Header\n          type: boolean\n        isStandard:\n          description: |-\n            \u0026#128640; Since v4.12.0\n\n            Determines whether client is a standard client.\n          type: boolean\n        usedAt:\n          description: |-\n            \u0026#128640; Since v4.13.0\n\n            Usage date of the authorization\n\n            (Time of last usage.)\n          format: date-time\n          type: string\n        userAgentCategory:\n          description: |-\n            \u0026#128640; Since v4.12.0\n\n            User agent category.\n          enum:\n            - browser\n            - native\n            - unknown\n          type: string\n        userAgentInfo:\n          description: |-\n            \u0026#128640; Since v4.12.0\n\n            User agent info.\n          type: string\n        userAgentOs:\n          description: |-\n            \u0026#128640; Since v4.12.0\n\n            User agent OS.\n          type: string\n        userAgentType:\n          description: |-\n            \u0026#128640; Since v4.12.0\n\n            User agent type.\n          type: string\n      required:\n        - clientId\n        - clientName\n        - userAgentCategory\n      type: object\n    OAuthClient:\n      description: OAuth client information\n      properties:\n        accessTokenValidity:\n          description: Validity of the access token in seconds.\n          format: int32\n          type: integer\n        approvalValidity:\n          description: |-\n            \u0026#128640; Since v4.22.0\n\n            Validity of the approval interval in seconds.\n          format: int32\n          type: integer\n        clientId:\n          description: ID of the OAuth client\n          type: string\n        clientName:\n          description: Name, which is shown at the client configuration and authorization.\n          type: string\n        clientSecret:\n          description: Secret, which client uses at authentication.\n          type: string\n        clientType:\n          description: Determines whether client is a confidential or public client.\n          enum:\n            - confidential\n            - public\n          type: string\n        grantTypes:\n          description: |-\n            Authorized grant types\n\n            * `authorization_code`\n\n            * `implicit`\n\n            * `password`\n\n            * `client_credentials`\n\n            * `refresh_token`\n\n\n\n            cf. [RFC 6749](https://tools.ietf.org/html/rfc6749)\n          enum:\n            - authorization_code\n            - client_credentials\n            - implicit\n            - password\n            - refresh_token\n          items:\n            description: |-\n              Authorized grant types\n\n              * `authorization_code`\n\n              * `implicit`\n\n              * `password`\n\n              * `client_credentials`\n\n              * `refresh_token`\n\n\n\n              cf. [RFC 6749](https://tools.ietf.org/html/rfc6749)\n            enum:\n              - authorization_code\n              - client_credentials\n              - implicit\n              - password\n              - refresh_token\n            type: string\n          type: array\n        isEnabled:\n          description: Determines whether client is enabled.\n          type: boolean\n        isExternal:\n          description: Determines whether client is an external client.\n          type: boolean\n        isStandard:\n          description: Determines whether client is a standard client.\n          type: boolean\n        redirectUris:\n          description: URIs, to which a user is redirected after authorization.\n          items:\n            description: URIs, to which a user is redirected after authorization.\n            type: string\n          type: array\n        refreshTokenValidity:\n          description: Validity of the refresh token in seconds.\n          format: int32\n          type: integer\n      required:\n        - clientId\n        - grantTypes\n      type: object\n    ObjectExpiration:\n      description: Expiration information\n      properties:\n        enableExpiration:\n          description: enabled / disabled\n          type: boolean\n        expireAt:\n          description: Expiration date\n          format: date-time\n          type: string\n      required:\n        - enableExpiration\n      type: object\n    OpenIdAuthInfo:\n      description: List of OpenID Connect providers\n      properties:\n        items:\n          description: List of available OpenID Connect identity providers\n          items:\n            $ref: \"#/components/schemas/OpenIdProvider\"\n          type: array\n      required:\n        - items\n      type: object\n    OpenIdAuthResources:\n      description: List of OpenID Connect providers\n      properties:\n        openIdProviders:\n          description: List of available OpenID Connect identity providers\n          items:\n            $ref: \"#/components/schemas/OpenIdProvider\"\n          type: array\n      required:\n        - openIdProviders\n      type: object\n    OpenIdIdpConfig:\n      description: OpenID Connect IDP configuration\n      properties:\n        authorizationEndPointUrl:\n          description: URL of the authorization endpoint\n          type: string\n        clientId:\n          description: ID of the OpenID client\n          type: string\n        clientSecret:\n          description: Secret, which client uses at authentication.\n          type: string\n        fallbackMappingClaim:\n          description: Name of the claim which is used for the user mapping fallback.\n          type: string\n        flow:\n          description: |-\n            \u0026#128640; Since v4.11.0\n\n            Flow, which is used at authentication\n          enum:\n            - authorization_code\n            - hybrid\n          type: string\n        id:\n          description: ID\n          format: int32\n          type: integer\n        issuer:\n          description: |-\n            Issuer identifier of the IDP\n\n            The value is a case sensitive URL.\n          type: string\n        jwksEndPointUrl:\n          description: URL of the JWKS endpoint\n          type: string\n        mappingClaim:\n          description: Name of the claim which is used for the user mapping.\n          type: string\n        name:\n          description: Name of the IDP\n          type: string\n        pkceChallengeMethod:\n          description: |-\n            PKCE code challenge method.\n\n            cf. [RFC 7636](https://tools.ietf.org/html/rfc7636)\n          type: string\n        pkceEnabled:\n          default: false\n          description: |-\n            Determines whether PKCE is enabled.\n\n            cf. [RFC 7636](https://tools.ietf.org/html/rfc7636)\n          type: boolean\n        redirectUris:\n          description: URIs, to which a user is redirected after authorization.\n          items:\n            description: URIs, to which a user is redirected after authorization.\n            type: string\n          type: array\n        scopes:\n          description: |-\n            List of requested scopes\n\n            Usually `openid` and the names of the requested claims.\n          items:\n            description: |-\n              List of requested scopes\n\n              Usually `openid` and the names of the requested claims.\n            type: string\n          type: array\n        tokenEndPointUrl:\n          description: URL of the token endpoint\n          type: string\n        userImportEnabled:\n          default: false\n          description: |-\n            Determines if a DRACOON account is automatically created for a new user\n\n            who successfully logs on with his / her AD / IDP account.\n          type: boolean\n        userImportGroup:\n          description: |-\n            User group that is assigned to users who are created by automatic import.\n\n            Reset with `0`\n          format: int64\n          type: integer\n        userInfoEndPointUrl:\n          description: URL of the user info endpoint\n          type: string\n        userInfoSource:\n          description: |-\n            \u0026#128640; Since v4.23.0\n\n            Source, which is used to get user information at the import or update of a user.\n          enum:\n            - user_info_endpoint\n            - id_token\n          type: string\n        userManagementUrl:\n          description: |-\n            URL of the user management UI.\n\n            Use empty string to remove.\n          type: string\n        userUpdateEnabled:\n          default: false\n          description: |-\n            Determines if the DRACOON account is updated with data from AD / IDP.\n\n            For OpenID Connect, the scopes `email` and `profile` are needed.\n          type: boolean\n      required:\n        - id\n      type: object\n    OpenIdProvider:\n      description: OpenID Connect provider information\n      properties:\n        id:\n          description: ID\n          format: int32\n          type: integer\n        isGlobalAvailable:\n          description: Is available for all customers\n          type: boolean\n        issuer:\n          description: |-\n            Issuer identifier of the IDP\n\n            The value is a case sensitive URL.\n          type: string\n        mappingClaim:\n          description: Name of the claim which is used for the user mapping.\n          type: string\n        name:\n          description: Name of the IDP\n          type: string\n        userManagementUrl:\n          description: |-\n            URL of the user management UI.\n\n            Use empty string to remove.\n          type: string\n      required:\n        - id\n        - isGlobalAvailable\n        - issuer\n        - mappingClaim\n        - name\n      type: object\n    PasswordExpiration:\n      description: Password expiration information\n      properties:\n        enabled:\n          description: Determines whether password expiration is enabled\n          type: boolean\n        maxPasswordAge:\n          description: Maximum allowed password age (in days)\n          format: int32\n          type: integer\n      required:\n        - enabled\n      type: object\n    PasswordPoliciesConfig:\n      description: Set of password policies\n      properties:\n        encryptionPasswordPolicies:\n          $ref: \"#/components/schemas/EncryptionPasswordPolicies\"\n        loginPasswordPolicies:\n          $ref: \"#/components/schemas/LoginPasswordPolicies\"\n        sharesPasswordPolicies:\n          $ref: \"#/components/schemas/SharesPasswordPolicies\"\n      type: object\n    PasswordPolicyViolationResponse:\n      description: List of violated password policies\n      properties:\n        code:\n          description: HTTP status code\n          format: int32\n          type: integer\n        debugInfo:\n          description: Debug information\n          type: string\n        errorCode:\n          description: Internal error code\n          format: int32\n          type: integer\n        message:\n          description: HTTP status code description\n          type: string\n        violatedPasswordPolicies:\n          description: List of violated password policies\n          items:\n            $ref: \"#/components/schemas/ViolatedPasswordPolicy\"\n          type: array\n      required:\n        - code\n        - message\n      type: object\n    PendingAssignment:\n      description: Pending assignment information\n      properties:\n        groupId:\n          description: Unique identifier for the group\n          format: int64\n          type: integer\n        roomId:\n          description: Room ID\n          format: int64\n          type: integer\n        roomName:\n          description: Room name\n          type: string\n        state:\n          description: |-\n            Acceptance state:\n\n            * `ACCEPTED`\n\n            * `WAITING`\n\n            * `DENIED`\n          enum:\n            - ACCEPTED\n            - DENIED\n            - WAITING\n          type: string\n        userId:\n          description: Unique identifier for the user\n          format: int64\n          type: integer\n      required:\n        - groupId\n        - roomId\n        - roomName\n        - state\n        - userId\n      type: object\n    PendingAssignmentData:\n      description: Pending assignment information\n      properties:\n        groupId:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.2.0\n\n            Unique identifier for the group\n          format: int64\n          type: integer\n        groupInfo:\n          $ref: \"#/components/schemas/GroupInfo\"\n        pendingGroupData:\n          $ref: \"#/components/schemas/PendingGroupData\"\n        pendingUserData:\n          $ref: \"#/components/schemas/PendingUserData\"\n        roomId:\n          description: Room ID\n          format: int64\n          type: integer\n        roomName:\n          description: Room name\n          type: string\n        state:\n          description: |-\n            Acceptance state:\n\n            * `ACCEPTED`\n\n            * `WAITING`\n\n            * `DENIED`\n          enum:\n            - ACCEPTED\n            - DENIED\n            - WAITING\n          type: string\n        userId:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.2.0\n\n            Unique identifier for the user\n          format: int64\n          type: integer\n        userInfo:\n          $ref: \"#/components/schemas/UserInfo\"\n      required:\n        - groupInfo\n        - pendingGroupData\n        - pendingUserData\n        - roomId\n        - roomName\n        - state\n        - userInfo\n      type: object\n    PendingAssignmentList:\n      description: List of pending assignments\n      properties:\n        items:\n          description: List of pending assignment information\n          items:\n            $ref: \"#/components/schemas/PendingAssignmentData\"\n          type: array\n        range:\n          $ref: \"#/components/schemas/Range\"\n      required:\n        - items\n      type: object\n    PendingAssignmentsRequest:\n      description: Request model for handling pending assignments\n      properties:\n        items:\n          description: List of pending assignments\n          items:\n            $ref: \"#/components/schemas/PendingAssignment\"\n          type: array\n      required:\n        - items\n      type: object\n    PendingGroupData:\n      deprecated: true\n      description: Pending group information\n      properties:\n        id:\n          description: |-\n            Unique identifier for the group\n\n            use `id` from `GroupInfo` instead\n          format: int64\n          type: integer\n        name:\n          description: |-\n            Group name\n\n            use `name` from `GroupInfo` instead\n          type: string\n      required:\n        - id\n        - name\n      type: object\n    PendingUserData:\n      deprecated: true\n      description: Pending user information\n      properties:\n        displayName:\n          description: |-\n            Display name\n\n            use information from `UserInfo` instead to combine a display name\n          type: string\n        email:\n          description: |-\n            Email \n\n            use `email` from `UserInfo` instead\n          type: string\n        id:\n          description: Unique identifier for the user\n          format: int64\n          type: integer\n        login:\n          description: User login name\n          type: string\n      required:\n        - displayName\n        - email\n        - id\n        - login\n      type: object\n    PresignedUrl:\n      description: Presigned URL information\n      properties:\n        partNumber:\n          description: Corresponding part number\n          format: int32\n          type: integer\n        url:\n          description: S3 presigned URL\n          type: string\n      required:\n        - partNumber\n        - url\n      type: object\n    PresignedUrlList:\n      description: List of generated presigned URLs\n      properties:\n        urls:\n          description: List of S3 presigned URLs\n          items:\n            $ref: \"#/components/schemas/PresignedUrl\"\n          type: array\n      required:\n        - urls\n      type: object\n    PrivateKeyContainer:\n      description: Private key container\n      properties:\n        createdAt:\n          description: |-\n            \u0026#128640; Since v4.24.0\n\n            Creation date\n          format: date-time\n          type: string\n        createdBy:\n          description: |-\n            \u0026#128640; Since v4.24.0\n\n            Created by user\n          format: int64\n          type: integer\n        expireAt:\n          description: Expiration date\n          format: date-time\n          type: string\n          writeOnly: true\n        privateKey:\n          description: Private key\n          type: string\n        version:\n          description: Version\n          type: string\n      required:\n        - privateKey\n        - version\n      type: object\n    ProfileAttributes:\n      description: User profile attributes\n      properties:\n        items:\n          description: List of key-value pairs\n          items:\n            $ref: \"#/components/schemas/KeyValueEntry\"\n          type: array\n        range:\n          $ref: \"#/components/schemas/Range\"\n      required:\n        - items\n        - range\n      type: object\n    ProfileAttributesRequest:\n      description: Request model for setting user profile attributes\n      properties:\n        items:\n          description: List of key-value pairs\n          items:\n            $ref: \"#/components/schemas/KeyValueEntry\"\n          type: array\n      required:\n        - items\n      type: object\n    PublicDownloadShare:\n      description: Download Share information\n      properties:\n        createdAt:\n          description: Creation date\n          format: date-time\n          type: string\n        creatorName:\n          description: Creator name\n          type: string\n        creatorUsername:\n          description: Creator username\n          type: string\n        expireAt:\n          description: Expiration date\n          format: date-time\n          type: string\n        fileKey:\n          $ref: \"#/components/schemas/FileKey\"\n        fileName:\n          description: File name\n          type: string\n        hasDownloadLimit:\n          description: |-\n            \u0026#128640; Since v4.11.0\n\n            Determines whether Download Share has a limit for amount of downloads\n          type: boolean\n        isEncrypted:\n          description: Encryption state\n          type: boolean\n        isProtected:\n          description: Is share protected by password\n          type: boolean\n        limitReached:\n          description: Downloads limit reached\n          type: boolean\n        mediaType:\n          description: |-\n            \u0026#128640; Since v4.11.0\n\n            * `application/zip` (for folders and rooms)\n\n            * actual file media type (for files only)\n          type: string\n        name:\n          description: Share display name (alias name)\n          type: string\n        notes:\n          description: User notes\n          maximum: 255\n          type: string\n        privateKeyContainer:\n          $ref: \"#/components/schemas/PrivateKeyContainer\"\n        size:\n          description: File size or container size not compressed (in bytes)\n          format: int64\n          type: integer\n      required:\n        - createdAt\n        - creatorName\n        - fileName\n        - hasDownloadLimit\n        - isProtected\n        - limitReached\n        - mediaType\n        - size\n      type: object\n    PublicDownloadTokenGenerateRequest:\n      description: Request model for generating download URL\n      properties:\n        password:\n          description: Password (only for password-protected shares)\n          type: string\n      type: object\n    PublicDownloadTokenGenerateResponse:\n      description: Download URL\n      properties:\n        downloadUrl:\n          description: Download URL\n          type: string\n        token:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.3.0\n\n            Download token\n          type: string\n      required:\n        - token\n      type: object\n    PublicKeyContainer:\n      description: Public key container\n      properties:\n        createdAt:\n          description: |-\n            \u0026#128640; Since v4.24.0\n\n            Creation date\n          format: date-time\n          type: string\n        createdBy:\n          description: |-\n            \u0026#128640; Since v4.24.0\n\n            Created by user\n          format: int64\n          type: integer\n        expireAt:\n          description: Expiration date\n          format: date-time\n          type: string\n          writeOnly: true\n        publicKey:\n          description: Public key\n          type: string\n        version:\n          description: Version\n          type: string\n      required:\n        - publicKey\n        - version\n      type: object\n    PublicUploadShare:\n      description: Upload Share information\n      properties:\n        createdAt:\n          description: Creation date\n          format: date-time\n          type: string\n        creatorName:\n          description: |-\n            \u0026#128640; Since v4.11.0\n\n            Creator name\n          type: string\n        creatorUsername:\n          description: |-\n            \u0026#128640; Since v4.11.0\n\n            Creator username\n          type: string\n        expireAt:\n          description: Expiration date\n          format: date-time\n          type: string\n        isEncrypted:\n          description: Encryption state\n          type: boolean\n        isProtected:\n          description: Is share protected by password\n          type: boolean\n        maxSize:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.2.0\n\n            Maximal total size of uploaded files (in bytes)\n          format: double\n          type: number\n        maxSlots:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.2.0\n\n            Maximal amount of files to upload\n          format: int32\n          type: integer\n        name:\n          description: Share display name (alias name)\n          type: string\n        notes:\n          description: User notes\n          maximum: 255\n          type: string\n        remainingSize:\n          description: Remaining size\n          format: int64\n          type: integer\n        remainingSlots:\n          description: Remaining slots\n          format: int32\n          type: integer\n        showUploadedFiles:\n          description: Allow display of already uploaded files\n          type: boolean\n        uploadedFiles:\n          description: List of (public) uploaded files\n          items:\n            $ref: \"#/components/schemas/PublicUploadedFileData\"\n          type: array\n        userUserPublicKeyList:\n          $ref: \"#/components/schemas/UserUserPublicKeyList\"\n      required:\n        - createdAt\n        - creatorName\n        - isProtected\n        - maxSlots\n      type: object\n    PublicUploadedFileData:\n      description: File information\n      properties:\n        createdAt:\n          description: Creation date\n          format: date-time\n          type: string\n        hash:\n          description: Hash value of transferred file\n          type: string\n        name:\n          description: Name\n          type: string\n        size:\n          description: File size in byte\n          format: int64\n          type: integer\n      required:\n        - createdAt\n        - name\n        - size\n      type: object\n    RadiusChallengeResponse:\n      description: RADIUS challenge reply\n      properties:\n        code:\n          description: HTTP status code\n          format: int32\n          type: integer\n        debugInfo:\n          description: Debug information\n          type: string\n        errorCode:\n          description: Internal error code\n          format: int32\n          type: integer\n        message:\n          description: HTTP status code description\n          type: string\n        replyMessage:\n          description: |-\n            RADIUS Reply-Message\n\n            Instruction how to handle the situation.\n          type: string\n        replyState:\n          description: |-\n            For RADIUS Access-Challenge\n\n            If a `replyState` is returned, it must be included as `state` in the following request.\n          type: string\n      required:\n        - code\n        - message\n        - replyMessage\n        - replyState\n      type: object\n    RadiusConfig:\n      description: RADIUS configuration\n      properties:\n        failoverServer:\n          $ref: \"#/components/schemas/FailoverServer\"\n        ipAddress:\n          description: RADIUS Server IP Address\n          type: string\n        otpPinFirst:\n          default: true\n          description: Sequence order of concatenated PIN and one-time token\n          type: boolean\n        port:\n          description: RADIUS Server Port\n          format: int32\n          type: integer\n        sharedSecret:\n          description: Shared Secret to access the RADIUS server\n          type: string\n      required:\n        - ipAddress\n        - otpPinFirst\n        - port\n        - sharedSecret\n      type: object\n    RadiusConfigCreateRequest:\n      description: Request model for creating a RADIUS configuration\n      properties:\n        failoverServer:\n          $ref: \"#/components/schemas/FailoverServer\"\n        ipAddress:\n          description: RADIUS Server IP Address\n          type: string\n        otpPinFirst:\n          default: true\n          description: Sequence order of concatenated PIN and one-time token\n          type: boolean\n        port:\n          description: RADIUS Server Port\n          format: int32\n          type: integer\n        sharedSecret:\n          description: Shared Secret to access the RADIUS server\n          type: string\n      required:\n        - ipAddress\n        - port\n        - sharedSecret\n      type: object\n    RadiusConfigUpdateRequest:\n      description: Request model for updating a RADIUS configuration\n      properties:\n        failoverServer:\n          $ref: \"#/components/schemas/FailoverServer\"\n        ipAddress:\n          description: RADIUS Server IP Address\n          type: string\n        otpPinFirst:\n          default: true\n          description: Sequence order of concatenated PIN and one-time token\n          type: boolean\n        port:\n          description: RADIUS Server Port\n          format: int32\n          type: integer\n        sharedSecret:\n          description: Shared Secret to access the RADIUS server\n          type: string\n      type: object\n    Range:\n      description: Range information\n      properties:\n        limit:\n          description: Range limit. Maximum 500.\n          format: int64\n          type: integer\n        offset:\n          description: Range offset\n          format: int64\n          type: integer\n        total:\n          description: Total items available\n          format: int64\n          type: integer\n      required:\n        - limit\n        - offset\n        - total\n      type: object\n    RecoverUserNameRequest:\n      description: Recover usernames for email\n      properties:\n        creatorLanguage:\n          description: IETF language tag\n          type: string\n        email:\n          description: \"Email \"\n          type: string\n      required:\n        - email\n      type: object\n    ResetPasswordRequest:\n      description: Request model for reseting user's login password\n      properties:\n        creatorLanguage:\n          description: IETF language tag\n          type: string\n        language:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.7.0\n\n            Language ID or ISO 639-1 code\n          type: string\n        login:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.13.0\n\n            User login name\n          type: string\n        userName:\n          description: |-\n            \u0026#128640; Since v4.13.0\n\n            Username\n          type: string\n      type: object\n    ResetPasswordTokenValidateResponse:\n      description: Password reset information\n      properties:\n        allowSystemGlobalWeakPassword:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.14.0\n\n            Allow weak password\n\n            Please use `loginPasswordPolicies` instead\n          type: boolean\n        firstName:\n          description: User first name\n          type: string\n        gender:\n          default: n\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.12.0\n\n            Gender\n          type: string\n        lastName:\n          description: User last name\n          type: string\n        loginPasswordPolicies:\n          $ref: \"#/components/schemas/LoginPasswordPolicies\"\n        title:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.18.0\n\n            Job title\n          type: string\n      required:\n        - firstName\n        - lastName\n      type: object\n    ResetPasswordWithTokenRequest:\n      description: New password\n      properties:\n        password:\n          description: New password\n          type: string\n      required:\n        - password\n      type: object\n    RestoreDeletedNodesRequest:\n      description: Request model for restoring deleted nodes\n      properties:\n        deletedNodeIds:\n          description: List of deleted node IDs\n          items:\n            description: List of deleted node IDs\n            format: int64\n            type: integer\n          type: array\n        keepShareLinks:\n          default: false\n          description: Preserve Download Share Links and point them to the new node.\n          type: boolean\n        parentId:\n          description: |-\n            Node parent ID\n\n            (default: previous parent ID)\n          format: int64\n          type: integer\n        resolutionStrategy:\n          default: autorename\n          description: |-\n            Node conflict resolution strategy:\n\n            * `autorename`\n\n            * `overwrite`\n\n            * `fail`\n          enum:\n            - autorename\n            - overwrite\n            - fail\n          type: string\n      required:\n        - deletedNodeIds\n      type: object\n    Right:\n      description: Right information\n      properties:\n        description:\n          description: Right description\n          type: string\n        id:\n          description: Unique identifier for the right\n          format: int32\n          type: integer\n        name:\n          description: Right (unique) name\n          type: string\n      required:\n        - description\n        - id\n        - name\n      type: object\n    Role:\n      description: Role information\n      properties:\n        description:\n          description: Role description\n          type: string\n        id:\n          description: Unique identifier for the role\n          format: int32\n          type: integer\n        items:\n          description: List of reachable right over role\n          items:\n            $ref: \"#/components/schemas/Right\"\n          type: array\n        name:\n          description: Role (unique) name\n          type: string\n      required:\n        - description\n        - id\n        - name\n      type: object\n    RoleGroup:\n      description: Group information\n      properties:\n        id:\n          description: Unique identifier for the group\n          format: int64\n          type: integer\n        isMember:\n          description: Is group member of the role\n          type: boolean\n        name:\n          description: Group name\n          type: string\n      required:\n        - id\n        - isMember\n        - name\n      type: object\n    RoleGroupList:\n      description: List of groups with assigned role\n      properties:\n        items:\n          description: List of role-group mappings\n          items:\n            $ref: \"#/components/schemas/RoleGroup\"\n          type: array\n        range:\n          $ref: \"#/components/schemas/Range\"\n      required:\n        - items\n        - range\n      type: object\n    RoleList:\n      description: List of roles\n      properties:\n        items:\n          description: List of roles\n          items:\n            $ref: \"#/components/schemas/Role\"\n          type: array\n      required:\n        - items\n      type: object\n    RoleUser:\n      description: User information\n      properties:\n        displayName:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.11.0\n\n            Display name\n\n            use information from `UserInfo` instead to combine a display name\n          type: string\n        id:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.11.0\n\n            Unique identifier for the user\n\n            use `id` from `UserInfo` instead\n          format: int64\n          type: integer\n        isMember:\n          description: Is user member of the role\n          type: boolean\n        userInfo:\n          $ref: \"#/components/schemas/UserInfo\"\n      required:\n        - displayName\n        - id\n        - isMember\n        - userInfo\n      type: object\n    RoleUserList:\n      description: List of users with assigned role\n      properties:\n        items:\n          description: List of role-user mappings\n          items:\n            $ref: \"#/components/schemas/RoleUser\"\n          type: array\n        range:\n          $ref: \"#/components/schemas/Range\"\n      required:\n        - items\n        - range\n      type: object\n    RoomData:\n      description: Room information\n      properties:\n        children:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.10.0\n\n            List of rooms, where this room is a parent (if exist)\n          items:\n            $ref: \"#/components/schemas/RoomData\"\n          type: array\n        cntAdmins:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.2.0\n\n            Number of admins (for rooms only)\n          format: int32\n          type: integer\n        cntDownloadShares:\n          description: Returns the number of Download Shares of this node.\n          format: int32\n          type: integer\n        cntUploadShares:\n          description: Returns the number of Upload Shares of this node.\n          format: int32\n          type: integer\n        cntUsers:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.2.0\n\n            Number of users (for rooms only)\n          format: int32\n          type: integer\n        createdAt:\n          description: Expiration date\n          format: date-time\n          type: string\n        createdBy:\n          $ref: \"#/components/schemas/UserInfo\"\n        hasRecycleBin:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.10.0\n\n            Is recycle bin active (for rooms only)\n\n            Recycle bin is always on (disabling is not possible).\n          type: boolean\n        id:\n          description: Room ID\n          format: int64\n          type: integer\n        isEncrypted:\n          description: Encryption state\n          type: boolean\n        isFavorite:\n          description: Node is marked as favorite (for rooms / folders only)\n          type: boolean\n        isGranted:\n          description: Is user granted room permissions\n          type: boolean\n        name:\n          description: Name\n          type: string\n        parentId:\n          description: Parent node ID (room or folder)\n          format: int64\n          type: integer\n        permissions:\n          $ref: \"#/components/schemas/NodePermissions\"\n        quota:\n          description: Quota in byte\n          format: int64\n          type: integer\n        recycleBinRetentionPeriod:\n          description: Retention period for deleted nodes in days\n          format: int32\n          maximum: 9999\n          minimum: 0\n          type: integer\n        size:\n          description: Room size\n          format: int64\n          type: integer\n        type:\n          description: Node type\n          enum:\n            - room\n          type: string\n        updatedAt:\n          description: Modification date\n          format: date-time\n          type: string\n        updatedBy:\n          $ref: \"#/components/schemas/UserInfo\"\n      required:\n        - hasRecycleBin\n        - id\n        - isEncrypted\n        - isGranted\n        - name\n        - recycleBinRetentionPeriod\n      type: object\n    RoomGroup:\n      description: Group information\n      properties:\n        id:\n          description: Unique identifier for the group\n          format: int64\n          type: integer\n        isGranted:\n          description: Is user granted room permissions\n          type: boolean\n        name:\n          description: Group name\n          type: string\n        newGroupMemberAcceptance:\n          default: autoallow\n          description: |-\n            Behaviour when new users are added to the group:\n\n            * `autoallow`\n\n            * `pending`\n\n\n\n            Only relevant if `adminGroupIds` has items.\n          enum:\n            - autoallow\n            - pending\n          type: string\n        permissions:\n          $ref: \"#/components/schemas/NodePermissions\"\n      required:\n        - id\n        - isGranted\n        - name\n      type: object\n    RoomGroupList:\n      description: List of groups\n      properties:\n        items:\n          description: List of room-group mappings\n          items:\n            $ref: \"#/components/schemas/RoomGroup\"\n          type: array\n        range:\n          $ref: \"#/components/schemas/Range\"\n      required:\n        - items\n        - range\n      type: object\n    RoomGroupsAddBatchRequest:\n      description: Request model for granting group(s) to the room\n      properties:\n        items:\n          description: List of room-group mappings\n          items:\n            $ref: \"#/components/schemas/RoomGroupsAddBatchRequestItem\"\n          type: array\n      required:\n        - items\n      type: object\n    RoomGroupsAddBatchRequestItem:\n      description: Request item model for granting group to the room\n      properties:\n        id:\n          description: Unique identifier for the group\n          format: int64\n          type: integer\n        newGroupMemberAcceptance:\n          default: autoallow\n          description: |-\n            Behaviour when new users are added to the group:\n\n            * `autoallow`\n\n            * `pending`\n\n\n\n            Only relevant if `adminGroupIds` has items.\n          enum:\n            - autoallow\n            - pending\n          type: string\n        permissions:\n          $ref: \"#/components/schemas/NodePermissions\"\n      required:\n        - id\n        - permissions\n      type: object\n    RoomGroupsDeleteBatchRequest:\n      description: Request model for revoking group(s) from the room\n      properties:\n        ids:\n          description: List of group IDs\n          items:\n            description: List of group IDs\n            format: int64\n            type: integer\n          type: array\n      required:\n        - ids\n      type: object\n    RoomTreeDataList:\n      description: List of rooms\n      properties:\n        items:\n          description: List of room data information\n          items:\n            $ref: \"#/components/schemas/RoomData\"\n          type: array\n        range:\n          $ref: \"#/components/schemas/Range\"\n      required:\n        - items\n        - range\n      type: object\n    RoomUser:\n      description: User information\n      properties:\n        displayName:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.11.0\n\n            Display name\n\n            use information from `UserInfo` instead to combine a display name\n          type: string\n        email:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.11.0\n\n            Email \n\n            use `email` from `UserInfo` instead\n          type: string\n        id:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.11.0\n\n            Unique identifier for the user\n\n            use `id` from `UserInfo` instead\n          format: int64\n          type: integer\n        isGranted:\n          description: Is user granted room permissions\n          type: boolean\n        login:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.11.0\n\n            User login name\n          type: string\n        permissions:\n          $ref: \"#/components/schemas/NodePermissions\"\n        publicKeyContainer:\n          $ref: \"#/components/schemas/PublicKeyContainer\"\n        userInfo:\n          $ref: \"#/components/schemas/UserInfo\"\n      required:\n        - displayName\n        - email\n        - id\n        - isGranted\n        - login\n        - userInfo\n      type: object\n    RoomUserList:\n      description: List of users\n      properties:\n        items:\n          description: List of room-user mappings\n          items:\n            $ref: \"#/components/schemas/RoomUser\"\n          type: array\n        range:\n          $ref: \"#/components/schemas/Range\"\n      required:\n        - items\n        - range\n      type: object\n    RoomUsersAddBatchRequest:\n      description: Request model for granting user(s) to the room\n      properties:\n        items:\n          description: List of room-user mappings\n          items:\n            $ref: \"#/components/schemas/RoomUsersAddBatchRequestItem\"\n          type: array\n      required:\n        - items\n      type: object\n    RoomUsersAddBatchRequestItem:\n      description: Request item model for granting user to the room\n      properties:\n        id:\n          description: Unique identifier for the user\n          format: int64\n          type: integer\n        permissions:\n          $ref: \"#/components/schemas/NodePermissions\"\n      required:\n        - id\n        - permissions\n      type: object\n    RoomUsersDeleteBatchRequest:\n      description: Request model for revoking user(s) from the room\n      properties:\n        ids:\n          description: List of user IDs\n          items:\n            description: List of user IDs\n            format: int64\n            type: integer\n          type: array\n      required:\n        - ids\n      type: object\n    RoomWebhook:\n      description: Webhook information\n      properties:\n        isAssigned:\n          description: Determines whether webhook is assigned to the room.\n          type: boolean\n        webhook:\n          $ref: \"#/components/schemas/Webhook\"\n      required:\n        - isAssigned\n        - webhook\n      type: object\n    RoomWebhookAssignment:\n      description: Request model for handling webhook assignments\n      properties:\n        isAssigned:\n          description: Determines whether webhook is assigned to the room.\n          type: boolean\n        webhookId:\n          description: Webhook ID\n          format: int64\n          type: integer\n      required:\n        - isAssigned\n        - webhookId\n      type: object\n    RoomWebhookList:\n      description: List of webhooks\n      properties:\n        items:\n          description: List of webhooks\n          items:\n            $ref: \"#/components/schemas/RoomWebhook\"\n          type: array\n        range:\n          $ref: \"#/components/schemas/Range\"\n      required:\n        - items\n        - range\n      type: object\n    S3Config:\n      description: S3 configuration\n      properties:\n        accessKeyDefined:\n          description: Determines whether Access Key ID is defined\n          type: boolean\n        bucketName:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.24.0\n\n            S3 bucket name\n\n            use `bucketUrl` instead\n          type: string\n        bucketUrl:\n          description: S3 object storage bucket URL\n          type: string\n        endpointUrl:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.24.0\n\n            S3 object storage endpoint URL\n\n            use `bucketUrl` instead\n          type: string\n        region:\n          description: S3 region\n          type: string\n        secretKeyDefined:\n          description: Determines whether Access Secret Key is defined\n          type: boolean\n      required:\n        - accessKeyDefined\n        - bucketUrl\n        - secretKeyDefined\n      type: object\n    S3ConfigCreateRequest:\n      description: Request model for creating a S3 configuration\n      properties:\n        accessKey:\n          description: Access Key ID\n          type: string\n        bucketName:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.24.0\n\n            S3 bucket name\n\n            use `bucketUrl` instead\n          type: string\n        bucketUrl:\n          description: S3 object storage bucket URL\n          type: string\n        endpointUrl:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.24.0\n\n            S3 object storage endpoint URL\n\n            use `bucketUrl` instead\n          type: string\n        region:\n          description: S3 region\n          type: string\n        secretKey:\n          description: Secret Access Key\n          type: string\n      required:\n        - accessKey\n        - secretKey\n      type: object\n    S3ConfigUpdateRequest:\n      description: Request model for updating a S3 configuration\n      properties:\n        accessKey:\n          description: Access Key ID\n          type: string\n        bucketName:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.24.0\n\n            S3 bucket name\n\n            use `bucketUrl` instead\n          type: string\n        bucketUrl:\n          description: S3 object storage bucket URL\n          type: string\n        endpointUrl:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.24.0\n\n            S3 object storage endpoint URL\n\n            use `bucketUrl` instead\n          type: string\n        region:\n          description: S3 region\n          type: string\n        secretKey:\n          description: Secret Access Key\n          type: string\n      type: object\n    S3FileUploadPart:\n      description: S3 file upload part information\n      properties:\n        partEtag:\n          description: Corresponding part ETag\n          type: string\n        partNumber:\n          description: Corresponding part number\n          format: int32\n          type: integer\n      required:\n        - partEtag\n        - partNumber\n      type: object\n    S3FileUploadStatus:\n      description: S3 file upload status information\n      properties:\n        errorDetails:\n          $ref: \"#/components/schemas/ErrorResponse\"\n        node:\n          $ref: \"#/components/schemas/Node\"\n        status:\n          description: |-\n            S3 file upload status:\n\n            * `transfer` - upload in progress\n\n            * `finishing` - completing file upload\n\n            * `done` - file upload successully done\n\n            * `error` - an error occurred while file upload\n          type: string\n      required:\n        - status\n      type: object\n    S3ShareUploadStatus:\n      description: S3 file upload status information\n      properties:\n        errorDetails:\n          $ref: \"#/components/schemas/ErrorResponse\"\n        fileName:\n          description: File name\n          type: string\n        size:\n          description: File size in byte\n          format: int64\n          type: integer\n        status:\n          description: |-\n            S3 file upload status:\n\n            * `transfer` - upload in progress\n\n            * `finishing` - completing file upload\n\n            * `done` - file upload successully done\n\n            * `error` - an error occurred while file upload\n          type: string\n      required:\n        - fileName\n        - status\n      type: object\n    S3Tag:\n      description: S3 tag information\n      properties:\n        id:\n          description: S3 tag ID\n          format: int64\n          type: integer\n        isMandatory:\n          default: false\n          description: Determines whether S3 is mandatory or not\n          type: boolean\n        key:\n          description: S3 tag key\n          type: string\n        value:\n          description: S3 tag value\n          type: string\n      type: object\n    S3TagCreateRequest:\n      description: Request model for creating a S3 tag\n      properties:\n        isMandatory:\n          default: false\n          description: Determines whether S3 is mandatory or not\n          type: boolean\n        key:\n          description: S3 tag key\n          type: string\n        value:\n          description: S3 tag value\n          type: string\n      required:\n        - key\n        - value\n      type: object\n    S3TagIds:\n      description: List of S3 tag IDs\n      properties:\n        ids:\n          description: List of S3 tag IDs\n          items:\n            description: List of S3 tag IDs\n            format: int64\n            type: integer\n          type: array\n      required:\n        - ids\n      type: object\n    S3TagList:\n      description: List of S3 tags\n      properties:\n        items:\n          description: List of configured S3 tags\n          items:\n            $ref: \"#/components/schemas/S3Tag\"\n          type: array\n      type: object\n    SdsServerTime:\n      description: DRACOON server time\n      properties:\n        time:\n          description: DRACOON server time\n          format: date-time\n          type: string\n      type: object\n    SharesPasswordPolicies:\n      description: Shares password policies\n      properties:\n        characterRules:\n          $ref: \"#/components/schemas/CharacterRules\"\n        minLength:\n          description: Minimum number of characters a password must contain\n          format: int32\n          maximum: 1024\n          minimum: 1\n          type: integer\n        rejectDictionaryWords:\n          description: Determines whether a password must NOT contain word(s) from a dictionary\n          type: boolean\n        rejectKeyboardPatterns:\n          description: |-\n            Determines whether a password must NOT contain keyboard patterns (e.g. `qwertz`, `asdf`)\n\n            (min. 4 character pattern)\n          type: boolean\n        rejectUserInfo:\n          description: Determines whether a password must NOT contain user info (first name, last name, email, user name)\n          type: boolean\n        updatedAt:\n          description: Modification date\n          format: date-time\n          type: string\n        updatedBy:\n          $ref: \"#/components/schemas/UserInfo\"\n      type: object\n    SoftwareVersionData:\n      description: Software version information\n      properties:\n        buildDate:\n          description: Build date\n          format: date-time\n          type: string\n        isDracoonCloud:\n          description: |-\n            \u0026#128640; Since v4.24.0\n\n            Determines if the DRACOON Core is deployed in the cloud environment\n          type: boolean\n        restApiVersion:\n          description: REST API version\n          type: string\n        scmRevisionNumber:\n          description: Revision number\n          type: string\n        sdsServerVersion:\n          description: DRACOON server version\n          type: string\n      required:\n        - buildDate\n        - restApiVersion\n        - scmRevisionNumber\n        - sdsServerVersion\n      type: object\n    SubscribedDownloadShare:\n      description: Subscribed download share information\n      properties:\n        authParentId:\n          description: Auth parent room ID\n          format: int64\n          type: integer\n        id:\n          description: Share ID\n          format: int64\n          type: integer\n      required:\n        - id\n      type: object\n    SubscribedDownloadShareList:\n      description: List of subscribed download shares\n      properties:\n        items:\n          description: List of subscribed download shares\n          items:\n            $ref: \"#/components/schemas/SubscribedDownloadShare\"\n          type: array\n        range:\n          $ref: \"#/components/schemas/Range\"\n      required:\n        - items\n        - range\n      type: object\n    SubscribedNode:\n      description: Subscribed node information\n      properties:\n        authParentId:\n          description: Auth parent room ID\n          format: int64\n          type: integer\n        id:\n          description: Node ID\n          format: int64\n          type: integer\n        type:\n          description: Node type\n          enum:\n            - room\n            - folder\n            - file\n          type: string\n      required:\n        - id\n      type: object\n    SubscribedNodeList:\n      description: List of subscribed nodes\n      properties:\n        items:\n          description: List of subscribed nodes\n          items:\n            $ref: \"#/components/schemas/SubscribedNode\"\n          type: array\n        range:\n          $ref: \"#/components/schemas/Range\"\n      required:\n        - items\n        - range\n      type: object\n    SubscribedUploadShare:\n      description: Subscribed upload share information\n      properties:\n        id:\n          description: Share ID\n          format: int64\n          type: integer\n        targetNodeId:\n          description: Target room or folder ID\n          format: int64\n          type: integer\n      required:\n        - id\n      type: object\n    SubscribedUploadShareList:\n      description: List of subscribed upload shares\n      properties:\n        items:\n          description: List of subscribed upload shares\n          items:\n            $ref: \"#/components/schemas/SubscribedUploadShare\"\n          type: array\n        range:\n          $ref: \"#/components/schemas/Range\"\n      required:\n        - items\n        - range\n      type: object\n    SyslogConfig:\n      description: Syslog settings\n      properties:\n        enabled:\n          description: Is syslog enabled?\n          type: boolean\n        host:\n          description: Syslog server (IP or FQDN)\n          type: string\n        logIpEnabled:\n          description: Determines whether user’s IP address is logged.\n          type: boolean\n        port:\n          description: Syslog server port\n          format: int32\n          type: integer\n        protocol:\n          description: Protocol to connect to syslog server\n          enum:\n            - TCP\n            - UDP\n          type: string\n      type: object\n    SyslogEvent:\n      deprecated: true\n      description: Syslog event information\n      properties:\n        attribute1:\n          description: Attribute 1\n          type: string\n        attribute2:\n          description: Attribute 2\n          type: string\n        attribute3:\n          description: Attribute 3\n          type: string\n        authParentSource:\n          description: Auth parent source ID\n          type: string\n        authParentTarget:\n          description: Auth parent target ID\n          type: string\n        customerId:\n          description: Unique identifier for the customer\n          format: int64\n          type: integer\n        id:\n          description: Event ID\n          format: int64\n          type: integer\n        message:\n          description: Event description\n          type: string\n        objectId1:\n          description: Object ID 1\n          format: int64\n          type: integer\n        objectId2:\n          description: Object ID 2\n          format: int64\n          type: integer\n        objectName1:\n          description: Object name 1\n          type: string\n        objectName2:\n          description: Object type 2\n          type: string\n        objectType1:\n          description: Object type 1\n          format: int32\n          type: integer\n        objectType2:\n          description: Object type 2\n          format: int32\n          type: integer\n        operationId:\n          description: Operation type ID\n          format: int32\n          type: integer\n        operationName:\n          description: Operation name\n          type: string\n        status:\n          description: |-\n            Operation status:\n\n            * `0` - Success\n\n            * `2` - Error\n          enum:\n            - 0\n            - 2\n          format: int32\n          type: integer\n        time:\n          description: Event timestamp\n          format: date-time\n          type: string\n        userClient:\n          description: Client\n          type: string\n        userId:\n          description: Unique identifier for the user\n          format: int64\n          type: integer\n        userIp:\n          description: User IP\n          type: string\n        userName:\n          description: Username\n          type: string\n      required:\n        - id\n        - message\n        - time\n        - userId\n      type: object\n    SyslogEventList:\n      deprecated: true\n      description: List of syslog events\n      properties:\n        items:\n          description: List of log events\n          items:\n            $ref: \"#/components/schemas/SyslogEvent\"\n          type: array\n        range:\n          $ref: \"#/components/schemas/Range\"\n      required:\n        - items\n        - range\n      type: object\n    SystemDefaults:\n      description: System defaults\n      properties:\n        downloadShareDefaultExpirationPeriod:\n          description: Default expiration period for Download Shares in days.\n          format: int32\n          type: integer\n        fileDefaultExpirationPeriod:\n          description: Default expiration period for all uploaded files in days.\n          format: int32\n          type: integer\n        hideLoginInputFields:\n          description: |-\n            \u0026#128640; Since v4.13.0\n\n            Defines if login fields should be hidden\n          type: boolean\n        languageDefault:\n          description: Define which language should be default.\n          type: string\n        nonmemberViewerDefault:\n          description: |-\n            \u0026#128640; Since v4.12.0\n\n            Defines if new users get the role Non Member Viewer by default\n          type: boolean\n        uploadShareDefaultExpirationPeriod:\n          description: Default expiration period for Upload Shares in days.\n          format: int32\n          type: integer\n      type: object\n    SystemInfo:\n      description: System information (default language and authentication methods)\n      properties:\n        authMethods:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.13.0\n\n            Authentication methods:\n\n            * `sql`\n\n            * `active_directory`\n\n            * `radius`\n\n            * `openid`\n\n            use `authData` instead\n          items:\n            $ref: \"#/components/schemas/AuthMethod\"\n          type: array\n        hideLoginInputFields:\n          description: |-\n            \u0026#128640; Since v4.13.0\n\n            Defines if login fields should be hidden\n          type: boolean\n        languageDefault:\n          description: |-\n            System default language\n\n            cf. [RFC 5646](https://tools.ietf.org/html/rfc5646)\n          type: string\n        s3EnforceDirectUpload:\n          description: |-\n            \u0026#128640; Since v4.15.0\n\n            Determines whether S3 direct upload is enforced or not\n          type: boolean\n        s3Hosts:\n          description: |-\n            \u0026#128640; Since v4.14.0\n\n            List of S3 Hosts for CSP header\n          items:\n            description: List of S3 Hosts for CSP header\n            type: string\n          type: array\n        useS3Storage:\n          description: |-\n            \u0026#128640; Since v4.21.0\n\n            Defines if S3 is used as storage backend\n          type: boolean\n      required:\n        - authMethods\n        - hideLoginInputFields\n        - languageDefault\n        - s3EnforceDirectUpload\n        - s3Hosts\n        - useS3Storage\n      type: object\n    TestActiveDirectoryConfigRequest:\n      description: Request model for testing connection for Active Directory configuration\n      properties:\n        ldapUsersDomain:\n          description: Search scope of Active Directory; only users below this node can log on.\n          type: string\n        serverAdminName:\n          description: Distinguished Name (DN) of Active Directory administrative account\n          type: string\n        serverAdminPassword:\n          description: Password of Active Directory administrative account\n          type: string\n        serverIp:\n          description: IPv4 or IPv6 address or host name\n          type: string\n        serverPort:\n          description: Port\n          format: int32\n          type: integer\n        sslFingerPrint:\n          description: |-\n            SSL finger print of Active Directory server.\n\n            Mandatory for LDAPS connections.\n\n            Format: `Algorithm/Fingerprint`\n          type: string\n        useLdaps:\n          default: false\n          description: Determines whether LDAPS should be used instead of plain LDAP.\n          type: boolean\n      required:\n        - ldapUsersDomain\n        - serverAdminName\n        - serverAdminPassword\n        - serverIp\n        - serverPort\n      type: object\n    TestActiveDirectoryConfigResponse:\n      description: Response model for testing connection for Active Directory configuration\n      properties:\n        ldapUsersDomain:\n          description: Search scope of Active Directory; only users below this node can log on.\n          type: string\n        serverAdminName:\n          description: Distinguished Name (DN) of Active Directory administrative account\n          type: string\n        serverAdminPassword:\n          description: Password of Active Directory administrative account\n          type: string\n        serverIp:\n          description: IPv4 or IPv6 address or host name\n          type: string\n        serverPort:\n          description: Port\n          format: int32\n          type: integer\n        sslFingerPrint:\n          description: |-\n            SSL finger print of Active Directory server.\n\n            Mandatory for LDAPS connections.\n\n            Format: `Algorithm/Fingerprint`\n          type: string\n        useLdaps:\n          description: Determines whether LDAPS should be used instead of plain LDAP.\n          type: boolean\n      required:\n        - ldapUsersDomain\n        - serverAdminName\n        - serverAdminPassword\n        - serverIp\n        - serverPort\n        - useLdaps\n      type: object\n    ThirdPartyDependenciesData:\n      description: Third-party dependency information\n      properties:\n        artifactId:\n          description: Third party dependencies artifactId\n          type: string\n        description:\n          description: Third party dependencies description\n          type: string\n        groupId:\n          description: Third party dependencies groupId\n          type: string\n        id:\n          description: Third party dependencies id\n          type: string\n        licenses:\n          description: Third party dependencies licenses type\n          items:\n            description: Third party dependencies licenses type\n            type: string\n          type: array\n        name:\n          description: Third party dependencies name\n          type: string\n        type:\n          description: Third party dependencies type\n          type: string\n        url:\n          description: Third party dependencies url\n          type: string\n        version:\n          description: Third party dependencies version\n          type: string\n      required:\n        - artifactId\n        - description\n        - groupId\n        - id\n        - licenses\n        - name\n        - type\n        - url\n        - version\n      type: object\n    UpdateActiveDirectoryConfigRequest:\n      description: Request model for updating an Active Directory configuration\n      properties:\n        adExportGroup:\n          description: |-\n            If `userImport` is set to `true`,\n\n            the user must be member of this Active Directory group to receive a newly created DRACOON account.\n          type: string\n        alias:\n          description: Unique name for an Active Directory configuration\n          type: string\n        createHomeFolder:\n          default: false\n          description: |-\n            DEPRECATED, will be ignored\n\n            Determines whether a room is created for each user that is created by automatic import (like a home folder).\n\n            Room's name will equal the user's login name.\n          type: boolean\n        homeFolderParent:\n          description: |-\n            DEPRECATED, will be ignored\n\n            ID of the room in which the individual rooms for users will be created.\n          format: int64\n          type: integer\n        ldapUsersDomain:\n          description: Search scope of Active Directory; only users below this node can log on.\n          type: string\n        sdsImportGroup:\n          description: |-\n            User group that is assigned to users who are created by automatic import.\n\n            Reset with `0`\n          format: int64\n          type: integer\n        serverAdminName:\n          description: Distinguished Name (DN) of Active Directory administrative account\n          type: string\n        serverAdminPassword:\n          description: Password of Active Directory administrative account\n          type: string\n        serverIp:\n          description: IPv4 or IPv6 address or host name\n          type: string\n        serverPort:\n          description: Port\n          format: int32\n          type: integer\n        sslFingerPrint:\n          description: |-\n            SSL finger print of Active Directory server.\n\n            Mandatory for LDAPS connections.\n\n            Format: `Algorithm/Fingerprint`\n          type: string\n        useLdaps:\n          description: Determines whether LDAPS should be used instead of plain LDAP.\n          type: boolean\n        userFilter:\n          description: Name of Active Directory attribute that is used as login name.\n          type: string\n        userImport:\n          description: |-\n            Determines if a DRACOON account is automatically created for a new user\n\n            who successfully logs on with his / her AD / IDP account.\n          type: boolean\n      type: object\n    UpdateAuthTokenRestrictions:\n      description: Request model for updating auth token settings\n      properties:\n        accessTokenValidity:\n          description: |-\n            \u0026#128640; Since v4.13.0\n\n            Restricted OAuth access token validity (in seconds)\n          format: int32\n          type: integer\n        overwriteEnabled:\n          description: |-\n            \u0026#128640; Since v4.13.0\n\n            Defines if OAuth token restrictions are enabled\n          type: boolean\n        refreshTokenValidity:\n          description: |-\n            \u0026#128640; Since v4.13.0\n\n            Restricted OAuth refresh token validity (in seconds)\n          format: int32\n          type: integer\n      required:\n        - overwriteEnabled\n      type: object\n    UpdateCustomerRequest:\n      description: Request model for updating a customer\n      properties:\n        companyName:\n          description: Company name\n          type: string\n        customerContractType:\n          description: Customer type\n          enum:\n            - demo\n            - free\n            - pay\n          type: string\n        isLocked:\n          default: false\n          description: |-\n            Customer is locked:\n\n            * `false` - unlocked\n\n            * `true` - locked\n\n\n\n            All users of this customer will be blocked and can not login anymore.\n          type: boolean\n        lockStatus:\n          default: false\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.7.0\n\n            Customer lock status:\n\n            * `false` - unlocked\n\n            * `true` - locked\n\n\n\n            Please use `isLocked` instead.\n\n            All users of this customer will be blocked and can not login anymore.\n          type: boolean\n        providerCustomerId:\n          description: Provider customer ID\n          type: string\n        quotaMax:\n          description: Maximal disc space which can be allocated by customer in bytes. -1 for unlimited\n          format: int64\n          type: integer\n        userMax:\n          description: Maximal number of users\n          format: int32\n          type: integer\n        webhooksMax:\n          description: |-\n            \u0026#128640; Since v4.19.0\n\n            Maximal number of webhooks\n          format: int64\n          type: integer\n      required:\n        - customerContractType\n      type: object\n    UpdateCustomerResponse:\n      description: Customer information\n      properties:\n        activationCode:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.8.0\n\n            Customer activation code string:\n\n            * valid only for types `free` and `demo`\n\n            * for `pay` customers it is empty\n          type: string\n        companyName:\n          description: Company name\n          type: string\n        createdAt:\n          description: Creation date\n          format: date-time\n          type: string\n        customerAttributes:\n          $ref: \"#/components/schemas/CustomerAttributes\"\n        customerContractType:\n          description: Customer type\n          enum:\n            - demo\n            - free\n            - pay\n          type: string\n        customerUuid:\n          description: |-\n            \u0026#128640; Since v4.21.0\n\n            Customer UUID\n          type: string\n        id:\n          description: Unique identifier for the customer\n          format: int64\n          type: integer\n        isLocked:\n          default: false\n          description: |-\n            Customer is locked:\n\n            * `false` - unlocked\n\n            * `true` - locked\n\n\n\n            All users of this customer will be blocked and can not login anymore.\n          type: boolean\n        lockStatus:\n          default: false\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.7.0\n\n            Customer lock status:\n\n            * `false` - unlocked\n\n            * `true` - locked\n\n\n\n            Please use `isLocked` instead.\n\n            All users of this customer will be blocked and can not login anymore.\n          type: boolean\n        providerCustomerId:\n          description: Provider customer ID\n          type: string\n        quotaMax:\n          description: Maximal disc space which can be allocated by customer in bytes. -1 for unlimited\n          format: int64\n          type: integer\n        trialDays:\n          description: |-\n            Number of days left for trial period (relevant only for type `demo`)\n\n            (not used)\n          format: int32\n          type: integer\n        updatedAt:\n          description: Modification date\n          format: date-time\n          type: string\n        userMax:\n          description: Maximal number of users\n          format: int32\n          type: integer\n        webhooksMax:\n          description: |-\n            \u0026#128640; Since v4.19.0\n\n            Maximal number of webhooks\n          format: int64\n          type: integer\n      required:\n        - companyName\n        - customerContractType\n        - customerUuid\n        - id\n        - lockStatus\n        - quotaMax\n        - userMax\n      type: object\n    UpdateDownloadShareRequest:\n      description: Request model for updating a Download Share\n      properties:\n        defaultCountry:\n          description: Country shorthand symbol (cf. ISO 3166-2)\n          type: string\n        expiration:\n          $ref: \"#/components/schemas/ObjectExpiration\"\n        internalNotes:\n          description: |-\n            \u0026#128640; Since v4.11.0\n\n            Internal notes\n          maximum: 255\n          type: string\n        maxDownloads:\n          description: Max allowed downloads\n          format: int32\n          type: integer\n        name:\n          description: Alias name\n          type: string\n        notes:\n          description: User notes\n          maximum: 255\n          type: string\n        notifyCreator:\n          description: |-\n            \u0026#128679; Deprecated since v4.20.0\n\n            Notify creator on every download.\n          type: boolean\n        password:\n          description: Access password, not allowed for encrypted shares\n          type: string\n        receiverLanguage:\n          description: Language tag for messages to receiver\n          type: string\n        resetMaxDownloads:\n          description: Set 'true' to reset 'maxDownloads' for Download Share.\n          type: boolean\n        resetPassword:\n          description: Set 'true' to reset 'password' for Download Share.\n          type: boolean\n        showCreatorName:\n          description: Show creator first and last name.\n          type: boolean\n        showCreatorUsername:\n          description: Show creator email address.\n          type: boolean\n        textMessageRecipients:\n          description: |-\n            List of recipient FQTNs\n\n            E.123 / E.164 Format\n          items:\n            description: |-\n              List of recipient FQTNs\n\n              E.123 / E.164 Format\n            type: string\n          type: array\n      type: object\n    UpdateDownloadSharesBulkRequest:\n      description: Request model for updating a list of Download Shares\n      properties:\n        expiration:\n          $ref: \"#/components/schemas/ObjectExpiration\"\n        maxDownloads:\n          description: Max allowed downloads\n          format: int32\n          type: integer\n        objectIds:\n          description: List of ids\n          items:\n            description: List of ids\n            format: int64\n            type: integer\n          type: array\n        resetMaxDownloads:\n          description: Set 'true' to reset 'maxDownloads' for Download Share.\n          type: boolean\n        showCreatorName:\n          description: Show creator first and last name.\n          type: boolean\n        showCreatorUsername:\n          description: Show creator email address.\n          type: boolean\n      required:\n        - objectIds\n      type: object\n    UpdateEncryptionPasswordPolicies:\n      description: Request model for updating encryption password policies\n      properties:\n        characterRules:\n          $ref: \"#/components/schemas/CharacterRules\"\n        minLength:\n          description: Minimum number of characters a password must contain\n          format: int32\n          maximum: 1024\n          minimum: 1\n          type: integer\n        rejectKeyboardPatterns:\n          description: |-\n            Determines whether a password must NOT contain keyboard patterns (e.g. `qwertz`, `asdf`)\n\n            (min. 4 character pattern)\n          type: boolean\n        rejectUserInfo:\n          description: Determines whether a password must NOT contain user info (first name, last name, email, user name)\n          type: boolean\n      type: object\n    UpdateEventlogConfig:\n      description: Request model for updating eventlog settings\n      properties:\n        enabled:\n          description: Is eventlog enabled?\n          type: boolean\n        logIpEnabled:\n          description: Determines whether user’s IP address is logged.\n          type: boolean\n        retentionPeriod:\n          description: |-\n            Retention period (in days) of event log entries.\n\n            After that period, all entries are deleted.\n\n            Recommended value: 7\n          format: int32\n          type: integer\n      type: object\n    UpdateFavoritesBulkRequest:\n      description: Request model for updating favorites\n      properties:\n        isFavorite:\n          description: Sets the favorite attribute to true or false on each file in an array of nodes.\n          type: boolean\n        objectIds:\n          description: List of ids\n          items:\n            description: List of ids\n            format: int64\n            type: integer\n          type: array\n      required:\n        - isFavorite\n        - objectIds\n      type: object\n    UpdateFileRequest:\n      description: Request model for updating file's metadata\n      properties:\n        classification:\n          description: |-\n            Classification ID:\n\n            * `1` - public\n\n            * `2` - internal\n\n            * `3` - confidential\n\n            * `4` - strictly confidential\n          format: int32\n          type: integer\n        expiration:\n          $ref: \"#/components/schemas/ObjectExpiration\"\n        name:\n          description: File name\n          type: string\n        notes:\n          description: |-\n            User notes\n\n            Use empty string to remove.\n          type: string\n        timestampCreation:\n          description: |-\n            \u0026#128640; Since v4.22.0\n\n            Time the node was created on external file system\n\n            (default: current server datetime in UTC format)\n          format: date-time\n          type: string\n        timestampModification:\n          description: |-\n            \u0026#128640; Since v4.22.0\n\n            Time the content of a node was last modified on external file system\n\n            (default: current server datetime in UTC format)\n          format: date-time\n          type: string\n      type: object\n    UpdateFilesBulkRequest:\n      description: Request model for updating files\n      properties:\n        classification:\n          description: |-\n            Classification ID:\n\n            * `1` - public\n\n            * `2` - internal\n\n            * `3` - confidential\n\n            * `4` - strictly confidential\n          format: int32\n          type: integer\n        expiration:\n          $ref: \"#/components/schemas/ObjectExpiration\"\n        objectIds:\n          description: List of ids\n          items:\n            description: List of ids\n            format: int64\n            type: integer\n          type: array\n      required:\n        - objectIds\n      type: object\n    UpdateFolderRequest:\n      description: Request model for updating folder's metadata\n      properties:\n        name:\n          description: Folder name\n          type: string\n        notes:\n          description: |-\n            User notes\n\n            Use empty string to remove.\n          type: string\n        timestampCreation:\n          description: |-\n            \u0026#128640; Since v4.22.0\n\n            Time the node was created on external file system\n\n            (default: current server datetime in UTC format)\n          format: date-time\n          type: string\n        timestampModification:\n          description: |-\n            \u0026#128640; Since v4.22.0\n\n            Time the content of a node was last modified on external file system\n\n            (default: current server datetime in UTC format)\n          format: date-time\n          type: string\n      type: object\n    UpdateGeneralSettings:\n      description: Request model for updating general settings\n      properties:\n        authTokenRestrictions:\n          $ref: \"#/components/schemas/UpdateAuthTokenRestrictions\"\n        cryptoEnabled:\n          description: |-\n            Activation status of client-side encryption.\n\n            Can only be enabled once; disabling is not possible.\n          type: boolean\n        emailNotificationButtonEnabled:\n          description: Enable email notification button\n          type: boolean\n        eulaEnabled:\n          description: Each user has to confirm the EULA at first login.\n          type: boolean\n        hideLoginInputFields:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.13.0\n\n            Defines if login fields should be hidden\n          type: boolean\n        mediaServerEnabled:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.12.0\n\n            Determines if the media server is enabled\n          type: boolean\n        s3TagsEnabled:\n          description: |-\n            \u0026#128640; Since v4.9.0\n\n            Defines if S3 tags are enabled\n          type: boolean\n        sharePasswordSmsEnabled:\n          description: Allow sending of share passwords via SMS\n          type: boolean\n        weakPasswordEnabled:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.14.0\n\n            Allow weak password\n\n            * A weak password has to fulfill the following criteria:\n\n               * is at least 8 characters long\n\n               * contains letters and numbers\n\n            * A strong password has to fulfill the following criteria in addition:\n\n               * contains at least one special character\n\n               * contains upper and lower case characters\n\n            Please use `PUT /system/config/policies/passwords` API to change configured password policies.\n          type: boolean\n      type: object\n    UpdateGroupRequest:\n      description: Request model for updating group's metadata\n      properties:\n        expiration:\n          $ref: \"#/components/schemas/ObjectExpiration\"\n        name:\n          description: Group name\n          type: string\n      type: object\n    UpdateLoginPasswordPolicies:\n      description: Request model for updating login password policies\n      properties:\n        characterRules:\n          $ref: \"#/components/schemas/CharacterRules\"\n        enforceLoginPasswordChange:\n          default: false\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.24.0\n\n            Determines whether a login password change should be enforced for all users\n\n            Only takes effect, if login password policies get stricter\n          type: boolean\n        minLength:\n          description: Minimum number of characters a password must contain\n          format: int32\n          maximum: 1024\n          minimum: 1\n          type: integer\n        numberOfArchivedPasswords:\n          description: |-\n            Number of passwords to archive\n\n            (must be between `0` and `10`; `0` means that password history is disabled)\n          format: int32\n          maximum: 10\n          minimum: 1\n          type: integer\n        passwordExpiration:\n          $ref: \"#/components/schemas/PasswordExpiration\"\n        rejectDictionaryWords:\n          description: Determines whether a password must NOT contain word(s) from a dictionary\n          type: boolean\n        rejectKeyboardPatterns:\n          description: |-\n            Determines whether a password must NOT contain keyboard patterns (e.g. `qwertz`, `asdf`)\n\n            (min. 4 character pattern)\n          type: boolean\n        rejectUserInfo:\n          description: Determines whether a password must NOT contain user info (first name, last name, email, user name)\n          type: boolean\n        userLockout:\n          $ref: \"#/components/schemas/UserLockout\"\n      type: object\n    UpdateOAuthClientRequest:\n      description: Request model for updating an OAuth client\n      properties:\n        accessTokenValidity:\n          description: Validity of the access token in seconds.\n          format: int32\n          type: integer\n        approvalValidity:\n          description: |-\n            \u0026#128640; Since v4.22.0\n\n            Validity of the approval interval in seconds.\n          format: int32\n          type: integer\n        clientName:\n          description: Name, which is shown at the client configuration and authorization.\n          type: string\n        clientSecret:\n          description: Secret, which client uses at authentication.\n          type: string\n        clientType:\n          description: Determines whether client is a confidential or public client.\n          enum:\n            - confidential\n            - public\n          type: string\n        grantTypes:\n          description: |-\n            Authorized grant types\n\n            * `authorization_code`\n\n            * `implicit`\n\n            * `password`\n\n            * `client_credentials`\n\n            * `refresh_token`\n\n\n\n            cf. [RFC 6749](https://tools.ietf.org/html/rfc6749)\n          enum:\n            - authorization_code\n            - client_credentials\n            - implicit\n            - password\n            - refresh_token\n          items:\n            description: |-\n              Authorized grant types\n\n              * `authorization_code`\n\n              * `implicit`\n\n              * `password`\n\n              * `client_credentials`\n\n              * `refresh_token`\n\n\n\n              cf. [RFC 6749](https://tools.ietf.org/html/rfc6749)\n            enum:\n              - authorization_code\n              - client_credentials\n              - implicit\n              - password\n              - refresh_token\n            type: string\n          type: array\n        isEnabled:\n          description: Determines whether client is enabled.\n          type: boolean\n        redirectUris:\n          description: URIs, to which a user is redirected after authorization.\n          items:\n            description: URIs, to which a user is redirected after authorization.\n            type: string\n          type: array\n        refreshTokenValidity:\n          description: Validity of the refresh token in seconds.\n          format: int32\n          type: integer\n      required:\n        - grantTypes\n      type: object\n    UpdateOpenIdIdpConfigRequest:\n      description: Request model for updating an OpenID Connect IDP configuration\n      properties:\n        authorizationEndPointUrl:\n          description: URL of the authorization endpoint\n          type: string\n        clientId:\n          description: ID of the OpenID client\n          type: string\n        clientSecret:\n          description: Secret, which client uses at authentication.\n          type: string\n        fallbackMappingClaim:\n          description: Name of the claim which is used for the user mapping fallback.\n          type: string\n        flow:\n          description: |-\n            \u0026#128640; Since v4.11.0\n\n            Flow, which is used at authentication\n          enum:\n            - authorization_code\n            - hybrid\n          type: string\n        issuer:\n          description: |-\n            Issuer identifier of the IDP\n\n            The value is a case sensitive URL.\n          type: string\n        jwksEndPointUrl:\n          description: URL of the JWKS endpoint\n          type: string\n        mappingClaim:\n          description: Name of the claim which is used for the user mapping.\n          type: string\n        name:\n          description: Name of the IDP\n          type: string\n        pkceChallengeMethod:\n          description: |-\n            PKCE code challenge method.\n\n            cf. [RFC 7636](https://tools.ietf.org/html/rfc7636)\n          type: string\n        pkceEnabled:\n          default: false\n          description: |-\n            Determines whether PKCE is enabled.\n\n            cf. [RFC 7636](https://tools.ietf.org/html/rfc7636)\n          type: boolean\n        redirectUris:\n          description: URIs, to which a user is redirected after authorization.\n          items:\n            description: URIs, to which a user is redirected after authorization.\n            type: string\n          type: array\n        resetFallbackMappingClaim:\n          description: Set `true` to reset `fallbackMappingClaim`.\n          type: boolean\n        scopes:\n          description: |-\n            List of requested scopes\n\n            Usually `openid` and the names of the requested claims.\n          items:\n            description: |-\n              List of requested scopes\n\n              Usually `openid` and the names of the requested claims.\n            type: string\n          type: array\n        tokenEndPointUrl:\n          description: URL of the token endpoint\n          type: string\n        userImportEnabled:\n          default: false\n          description: |-\n            Determines if a DRACOON account is automatically created for a new user\n\n            who successfully logs on with his / her AD / IDP account.\n          type: boolean\n        userImportGroup:\n          description: |-\n            User group that is assigned to users who are created by automatic import.\n\n            Reset with `0`\n          format: int64\n          type: integer\n        userInfoEndPointUrl:\n          description: URL of the user info endpoint\n          type: string\n        userInfoSource:\n          description: |-\n            \u0026#128640; Since v4.23.0\n\n            Source, which is used to get user information at the import or update of a user.\n          enum:\n            - user_info_endpoint\n            - id_token\n          type: string\n        userManagementUrl:\n          description: |-\n            URL of the user management UI.\n\n            Use empty string to remove.\n          type: string\n        userUpdateEnabled:\n          default: false\n          description: |-\n            Determines if the DRACOON account is updated with data from AD / IDP.\n\n            For OpenID Connect, the scopes `email` and `profile` are needed.\n          type: boolean\n      type: object\n    UpdatePasswordPoliciesConfig:\n      description: Request model for updating a set of password policies\n      properties:\n        encryptionPasswordPolicies:\n          $ref: \"#/components/schemas/UpdateEncryptionPasswordPolicies\"\n        loginPasswordPolicies:\n          $ref: \"#/components/schemas/UpdateLoginPasswordPolicies\"\n        sharesPasswordPolicies:\n          $ref: \"#/components/schemas/UpdateSharesPasswordPolicies\"\n      type: object\n    UpdateRoomRequest:\n      description: Request model for updating room's metadata\n      properties:\n        name:\n          description: Name\n          type: string\n        notes:\n          description: |-\n            User notes\n\n            Use empty string to remove.\n          type: string\n        quota:\n          description: Quota in byte\n          format: int64\n          type: integer\n        timestampCreation:\n          description: |-\n            \u0026#128640; Since v4.22.0\n\n            Time the node was created on external file system\n          format: date-time\n          type: string\n        timestampModification:\n          description: |-\n            \u0026#128640; Since v4.22.0\n\n            Time the content of a node was last modified on external file system\n          format: date-time\n          type: string\n      type: object\n    UpdateRoomWebhookRequest:\n      description: Request model for handling webhook assignments\n      properties:\n        items:\n          description: \"Assign a webhook to a room to use it for node actions within the room \"\n          items:\n            $ref: \"#/components/schemas/RoomWebhookAssignment\"\n          type: array\n      required:\n        - items\n      type: object\n    UpdateSharesPasswordPolicies:\n      description: Request model for updating shares password policies\n      properties:\n        characterRules:\n          $ref: \"#/components/schemas/CharacterRules\"\n        minLength:\n          description: Minimum number of characters a password must contain\n          format: int32\n          maximum: 1024\n          minimum: 1\n          type: integer\n        rejectDictionaryWords:\n          description: Determines whether a password must NOT contain word(s) from a dictionary\n          type: boolean\n        rejectKeyboardPatterns:\n          description: |-\n            Determines whether a password must NOT contain keyboard patterns (e.g. `qwertz`, `asdf`)\n\n            (min. 4 character pattern)\n          type: boolean\n        rejectUserInfo:\n          description: Determines whether a password must NOT contain user info (first name, last name, email, user name)\n          type: boolean\n      type: object\n    UpdateSubscriptionsBulkRequest:\n      description: Request model for updating subscriptions\n      properties:\n        isSubscribed:\n          description: Creates or deletes a subscription on each item in an array of objects.\n          type: boolean\n        objectIds:\n          description: List of ids\n          items:\n            description: List of ids\n            format: int64\n            type: integer\n          type: array\n      required:\n        - isSubscribed\n        - objectIds\n      type: object\n    UpdateSyslogConfig:\n      description: Request model for updating syslog settings\n      properties:\n        enabled:\n          description: Is syslog enabled?\n          type: boolean\n        host:\n          description: Syslog server (IP or FQDN)\n          type: string\n        logIpEnabled:\n          description: Determines whether user’s IP address is logged.\n          type: boolean\n        port:\n          description: Syslog server port\n          format: int32\n          type: integer\n        protocol:\n          description: Protocol to connect to syslog server\n          enum:\n            - TCP\n            - UDP\n          type: string\n      type: object\n    UpdateSystemDefaults:\n      description: Request model for updating system defaults\n      properties:\n        downloadShareDefaultExpirationPeriod:\n          description: Default expiration period for Download Shares in days.\n          format: int32\n          type: integer\n        fileDefaultExpirationPeriod:\n          description: Default expiration period for all uploaded files in days.\n          format: int32\n          type: integer\n        languageDefault:\n          description: Define which language should be default.\n          type: string\n        nonmemberViewerDefault:\n          description: |-\n            \u0026#128640; Since v4.12.0\n\n            Defines if new users get the role Non Member Viewer by default\n          type: boolean\n        uploadShareDefaultExpirationPeriod:\n          description: Default expiration period for Upload Shares in days.\n          format: int32\n          type: integer\n      type: object\n    UpdateUploadShareRequest:\n      description: Request model for updating an Upload Share\n      properties:\n        defaultCountry:\n          description: Country shorthand symbol (cf. ISO 3166-2)\n          type: string\n        expiration:\n          $ref: \"#/components/schemas/ObjectExpiration\"\n        filesExpiryPeriod:\n          description: Number of days after which uploaded files expire\n          format: int32\n          type: integer\n        internalNotes:\n          description: |-\n            \u0026#128640; Since v4.11.0\n\n            Internal notes\n          maximum: 255\n          type: string\n        maxSize:\n          description: Maximal total size of uploaded files (in bytes)\n          format: int64\n          type: integer\n        maxSlots:\n          description: Maximal amount of files to upload\n          format: int32\n          type: integer\n        name:\n          description: Alias name\n          type: string\n        notes:\n          description: User notes\n          maximum: 255\n          type: string\n        notifyCreator:\n          description: |-\n            \u0026#128679; Deprecated since v4.20.0\n\n            Notify creator on every upload.\n          type: boolean\n        password:\n          description: Password\n          type: string\n        receiverLanguage:\n          description: Language tag for messages to receiver\n          type: string\n        resetFilesExpiryPeriod:\n          description: Set 'true' to reset 'filesExpiryPeriod' for Upload Share\n          type: boolean\n        resetMaxSize:\n          description: Set 'true' to reset 'maxSize' for Upload Share\n          type: boolean\n        resetMaxSlots:\n          description: Set 'true' to reset 'maxSlots' for Upload Share\n          type: boolean\n        resetPassword:\n          description: Set 'true' to reset 'password' for Upload Share.\n          type: boolean\n        showCreatorName:\n          description: Show creator first and last name.\n          type: boolean\n        showCreatorUsername:\n          description: Show creator email address.\n          type: boolean\n        showUploadedFiles:\n          description: Allow display of already uploaded files\n          type: boolean\n        textMessageRecipients:\n          description: |-\n            List of recipient FQTNs\n\n            E.123 / E.164 Format\n          items:\n            description: |-\n              List of recipient FQTNs\n\n              E.123 / E.164 Format\n            type: string\n          type: array\n      type: object\n    UpdateUploadSharesBulkRequest:\n      description: Request model for updating a list of Download Shares\n      properties:\n        expiration:\n          $ref: \"#/components/schemas/ObjectExpiration\"\n        filesExpiryPeriod:\n          description: Number of days after which uploaded files expire\n          format: int32\n          type: integer\n        maxSize:\n          description: Maximal total size of uploaded files (in bytes)\n          format: int64\n          type: integer\n        maxSlots:\n          description: Maximal amount of files to upload\n          format: int32\n          type: integer\n        objectIds:\n          description: List of ids\n          items:\n            description: List of ids\n            format: int64\n            type: integer\n          type: array\n        resetFilesExpiryPeriod:\n          description: Set 'true' to reset 'filesExpiryPeriod' for Upload Share\n          type: boolean\n        resetMaxSize:\n          description: Set 'true' to reset 'maxSize' for Upload Share\n          type: boolean\n        resetMaxSlots:\n          description: Set 'true' to reset 'maxSlots' for Upload Share\n          type: boolean\n        showCreatorName:\n          description: Show creator first and last name.\n          type: boolean\n        showCreatorUsername:\n          description: Show creator email address.\n          type: boolean\n        showUploadedFiles:\n          description: Allow display of already uploaded files\n          type: boolean\n      required:\n        - objectIds\n      type: object\n    UpdateUserAccountRequest:\n      description: Request model for updating user account information\n      properties:\n        acceptEULA:\n          description: |-\n            Accept EULA\n\n            Present, if EULA is system global active.\n\n            cf. `GET system/config/settings/general` - `eulaEnabled`\n\n            If accepted can not be undone.\n          type: boolean\n        email:\n          description: \"Email \"\n          type: string\n        firstName:\n          description: User first name\n          type: string\n        gender:\n          default: n\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.12.0\n\n            Gender\n\n            Do NOT use `gender`! It will be ignored.\n          type: string\n        language:\n          description: |-\n            \u0026#128640; Since v4.20.0\n\n            IETF language tag\n          type: string\n        lastName:\n          description: User last name\n          type: string\n        login:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.13.0\n\n            User login name\n          type: string\n        phone:\n          description: Phone number\n          type: string\n        title:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.18.0\n\n            Job title\n          type: string\n        userName:\n          description: |-\n            \u0026#128640; Since v4.13.0\n\n            Username\n          type: string\n      type: object\n    UpdateUserRequest:\n      description: Request model for updating user's metadata\n      properties:\n        authData:\n          $ref: \"#/components/schemas/UserAuthDataUpdateRequest\"\n        authMethods:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.13.0\n\n            Authentication methods:\n\n            * `sql`\n\n            * `active_directory`\n\n            * `radius`\n\n            * `openid`\n\n            use `authData` instead\n          items:\n            $ref: \"#/components/schemas/UserAuthMethod\"\n          type: array\n        email:\n          description: \"Email \"\n          type: string\n        expiration:\n          $ref: \"#/components/schemas/ObjectExpiration\"\n        firstName:\n          description: User first name\n          type: string\n        gender:\n          default: n\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.12.0\n\n            Gender\n\n            Do NOT use `gender`! It will be ignored.\n          type: string\n        isLocked:\n          default: false\n          description: |-\n            User is locked:\n\n            * `false` - unlocked\n\n            * `true` - locked\n\n\n\n            User is locked and can not login anymore.\n          type: boolean\n        lastName:\n          description: User last name\n          type: string\n        lockStatus:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.7.0\n\n            User lock status:\n\n            * `0` - locked\n\n            * `1` - Web access allowed\n\n            * `2` - Web and mobile access allowed\n\n\n\n            Please use `isLocked` instead.\n          format: int32\n          type: integer\n        phone:\n          description: Phone number\n          type: string\n        receiverLanguage:\n          description: IETF language tag\n          type: string\n        title:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.18.0\n\n            Job title\n          type: string\n        userName:\n          description: |-\n            \u0026#128640; Since v4.13.0\n\n            Username\n          type: string\n      type: object\n    UpdateWebhookRequest:\n      description: Request model for updating a webhook\n      properties:\n        eventTypeNames:\n          description: List of names of event types\n          items:\n            description: List of names of event types\n            type: string\n          type: array\n        isEnabled:\n          description: Is enabled\n          type: boolean\n        name:\n          description: Name\n          type: string\n        secret:\n          description: Secret; used for event message signatures\n          type: string\n        triggerExampleEvent:\n          description: If set to true, an example event is being created\n          type: boolean\n        url:\n          description: URL (must begin with the `HTTPS` scheme)\n          type: string\n      type: object\n    UploadShare:\n      description: Upload Share information\n      properties:\n        accessKey:\n          description: Share access key to generate secure link\n          type: string\n        cntFiles:\n          description: Total amount of existing files uploaded with this share.\n          format: int32\n          type: integer\n        cntUploads:\n          description: Total amount of uploads conducted with this share.\n          format: int32\n          type: integer\n        createdAt:\n          description: Creation date\n          format: date-time\n          type: string\n        createdBy:\n          $ref: \"#/components/schemas/UserInfo\"\n        dataUrl:\n          description: Upload Share URL\n          type: string\n        expireAt:\n          description: Expiration date\n          format: date-time\n          type: string\n        filesExpiryPeriod:\n          description: Number of days after which uploaded files expire\n          format: int32\n          type: integer\n        id:\n          description: Share ID\n          format: int64\n          type: integer\n        internalNotes:\n          description: |-\n            \u0026#128640; Since v4.11.0\n\n            Internal notes\n          maximum: 255\n          type: string\n        isEncrypted:\n          description: Encryption state\n          type: boolean\n        isProtected:\n          description: Is share protected by password\n          type: boolean\n        maxSize:\n          description: Maximal total size of uploaded files (in bytes)\n          format: int64\n          type: integer\n        maxSlots:\n          description: Maximal amount of files to upload\n          format: int32\n          type: integer\n        name:\n          description: Alias name\n          type: string\n        notes:\n          description: User notes\n          maximum: 255\n          type: string\n        notifyCreator:\n          description: |-\n            \u0026#128679; Deprecated since v4.20.0\n\n            Notify creator on every upload.\n          type: boolean\n        recipients:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.11.0\n\n            CSV string of recipient email addresses\n          type: string\n        showCreatorName:\n          description: |-\n            \u0026#128640; Since v4.11.0\n\n            Show creator first and last name.\n          type: boolean\n        showCreatorUsername:\n          description: |-\n            \u0026#128640; Since v4.11.0\n\n            Show creator email address.\n          type: boolean\n        showUploadedFiles:\n          description: Allow display of already uploaded files\n          type: boolean\n        smsRecipients:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.11.0\n\n            CSV string of recipient MSISDNs\n          type: string\n        targetId:\n          description: Target room or folder ID\n          format: int64\n          type: integer\n        targetPath:\n          description: Path to shared upload node\n          type: string\n        targetType:\n          description: Node type\n          type: string\n        updatedAt:\n          description: Modification date\n          format: date-time\n          type: string\n        updatedBy:\n          $ref: \"#/components/schemas/UserInfo\"\n      required:\n        - accessKey\n        - createdAt\n        - createdBy\n        - id\n        - isProtected\n        - name\n        - notifyCreator\n        - targetId\n      type: object\n    UploadShareLinkEmail:\n      description: Request model for sending an email of an Upload Share link\n      properties:\n        body:\n          description: Notification email content\n          type: string\n        receiverLanguage:\n          description: Language tag for messages to receiver\n          type: string\n        recipients:\n          description: List of recipient email addresses\n          items:\n            description: List of recipient email addresses\n            type: string\n          type: array\n      required:\n        - body\n        - recipients\n      type: object\n    UploadShareList:\n      description: List of Upload Shares\n      properties:\n        items:\n          description: List of Upload Shares\n          items:\n            $ref: \"#/components/schemas/UploadShare\"\n          type: array\n        range:\n          $ref: \"#/components/schemas/Range\"\n      required:\n        - items\n        - range\n      type: object\n    UserAccount:\n      description: User information\n      properties:\n        authData:\n          $ref: \"#/components/schemas/UserAuthData\"\n        authMethods:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.13.0\n\n            Authentication methods:\n\n            * `sql`\n\n            * `active_directory`\n\n            * `radius`\n\n            * `openid`\n\n            use `authData` instead\n          items:\n            $ref: \"#/components/schemas/UserAuthMethod\"\n          type: array\n        customer:\n          $ref: \"#/components/schemas/CustomerData\"\n        email:\n          description: \"Email \"\n          type: string\n        expireAt:\n          description: Expiration date\n          format: date-time\n          type: string\n        firstName:\n          description: User first name\n          type: string\n        gender:\n          default: n\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.12.0\n\n            Gender\n          type: string\n        hasManageableRooms:\n          description: User has manageable rooms\n          type: boolean\n        homeRoomId:\n          description: Homeroom ID\n          format: int64\n          type: integer\n        id:\n          description: Unique identifier for the user\n          format: int64\n          type: integer\n        isEncryptionEnabled:\n          description: |-\n            User has generated private key.\n\n            Possible if client-side encryption is active for this customer\n          type: boolean\n        isLocked:\n          default: false\n          description: |-\n            User is locked:\n\n            * `false` - unlocked\n\n            * `true` - locked\n\n\n\n            User is locked and can not login anymore.\n          type: boolean\n        language:\n          description: |-\n            \u0026#128640; Since v4.20.0\n\n            IETF language tag\n          type: string\n        lastLoginFailAt:\n          description: Last failed logon date\n          format: date-time\n          type: string\n        lastLoginFailIp:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.6.0\n\n            Last failed logon IP address\n          type: string\n        lastLoginSuccessAt:\n          description: Last successful logon date\n          format: date-time\n          type: string\n        lastLoginSuccessIp:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.6.0\n\n            Last successful logon IP address\n          type: string\n        lastName:\n          description: User last name\n          type: string\n        lockStatus:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.7.0\n\n            User lock status:\n\n            * `0` - locked\n\n            * `1` - Web access allowed\n\n            * `2` - Web and mobile access allowed\n\n\n\n            Please use `isLocked` instead.\n          format: int32\n          type: integer\n        login:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.13.0\n\n            User login name\n          type: string\n        mustSetEmail:\n          default: false\n          description: |-\n            \u0026#128640; Since v4.13.0\n\n            If `true`, the user must set the `email` at the first login.\n          type: boolean\n        needsToAcceptEULA:\n          description: |-\n            User has accepted EULA.\n\n            Present, if EULA is system global active.\n\n            cf. `GET system/config/settings/general` - `eulaEnabled`\n          type: boolean\n        needsToChangePassword:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.13.0\n\n            Determines whether user has to change his / her password\n          type: boolean\n        needsToChangeUserName:\n          default: false\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.13.0\n\n            If `true`, the user must change the `userName` at the first login.\n          type: boolean\n        phone:\n          description: Phone number\n          type: string\n        title:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.18.0\n\n            Job title\n          type: string\n        userAttributes:\n          $ref: \"#/components/schemas/UserAttributes\"\n        userGroups:\n          description: All groups the user is member of\n          items:\n            $ref: \"#/components/schemas/UserGroup\"\n          type: array\n        userName:\n          description: |-\n            \u0026#128640; Since v4.13.0\n\n            Username\n          type: string\n        userRoles:\n          $ref: \"#/components/schemas/RoleList\"\n      required:\n        - authData\n        - customer\n        - firstName\n        - hasManageableRooms\n        - id\n        - isLocked\n        - language\n        - lastName\n        - lockStatus\n        - needsToChangePassword\n        - userName\n        - userRoles\n      type: object\n    UserAttributes:\n      deprecated: true\n      description: User custom attributes (list of key-value pairs)\n      properties:\n        items:\n          description: List of key-value pairs\n          items:\n            $ref: \"#/components/schemas/KeyValueEntry\"\n          type: array\n      required:\n        - items\n      type: object\n    UserAuthData:\n      description: User Authentication Data\n      properties:\n        adConfigId:\n          description: ID of the user's Active Directory.\n          format: int32\n          type: integer\n        login:\n          description: User login name\n          type: string\n        method:\n          description: |-\n            Authentication method\n\n\n\n            Authentication methods:\n\n            * `basic`\n\n            * `active_directory`\n\n            * `radius`\n\n            * `openid`\n          type: string\n        mustChangePassword:\n          description: |-\n            Determines whether user has to change his / her password\n\n            * default: `true` for `basic` auth type\n\n            * default: `false` for `active_directory`, `openid` and `radius` auth types\n          type: boolean\n        oidConfigId:\n          description: ID of the user's OIDC provider.\n          format: int32\n          type: integer\n        password:\n          description: |-\n            Password (only relevant for `basic` authentication type)\n\n            *NOT* your Active Directory, OpenID or RADIUS password!\n          type: string\n      required:\n        - method\n      type: object\n    UserAuthDataUpdateRequest:\n      description: User Authentication Data Update Request\n      properties:\n        adConfigId:\n          description: ID of the user's Active Directory.\n          format: int32\n          type: integer\n        login:\n          description: User login name\n          type: string\n        method:\n          description: |-\n            Authentication method\n\n\n\n            Authentication methods:\n\n            * `basic`\n\n            * `active_directory`\n\n            * `radius`\n\n            * `openid`\n          type: string\n        oidConfigId:\n          description: ID of the user's OIDC provider.\n          format: int32\n          type: integer\n      type: object\n    UserAuthMethod:\n      deprecated: true\n      description: Authentication method\n      properties:\n        authId:\n          description: |-\n            Authentication method\n\n\n\n            Authentication methods:\n\n            * `basic`\n\n            * `active_directory`\n\n            * `radius`\n\n            * `openid`\n          type: string\n        isEnabled:\n          description: Is enabled\n          type: boolean\n        options:\n          description: Authentication method options\n          items:\n            $ref: \"#/components/schemas/KeyValueEntry\"\n          type: array\n      required:\n        - authId\n        - isEnabled\n      type: object\n    UserData:\n      description: User information\n      properties:\n        authData:\n          $ref: \"#/components/schemas/UserAuthData\"\n        authMethods:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.13.0\n\n            Authentication methods:\n\n            * `sql`\n\n            * `active_directory`\n\n            * `radius`\n\n            * `openid`\n\n            use `authData` instead\n          items:\n            $ref: \"#/components/schemas/UserAuthMethod\"\n          type: array\n        avatarUuid:\n          description: |-\n            \u0026#128640; Since v4.11.0\n\n            Avatar UUID\n          type: string\n        email:\n          description: \"Email \"\n          type: string\n        expireAt:\n          description: Expiration date\n          format: date-time\n          type: string\n        firstName:\n          description: User first name\n          type: string\n        gender:\n          default: n\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.12.0\n\n            Gender\n          type: string\n        hasManageableRooms:\n          description: User has manageable rooms\n          type: boolean\n        homeRoomId:\n          description: Homeroom ID\n          format: int64\n          type: integer\n        id:\n          description: Unique identifier for the user\n          format: int64\n          type: integer\n        isEncryptionEnabled:\n          description: |-\n            User has generated private key.\n\n            Possible if client-side encryption is active for this customer\n          type: boolean\n        isLocked:\n          default: false\n          description: |-\n            User is locked:\n\n            * `false` - unlocked\n\n            * `true` - locked\n\n\n\n            User is locked and can not login anymore.\n          type: boolean\n        lastLoginSuccessAt:\n          description: Last successful logon date\n          format: date-time\n          type: string\n        lastName:\n          description: User last name\n          type: string\n        lockStatus:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.7.0\n\n            User lock status:\n\n            * `0` - locked\n\n            * `1` - Web access allowed\n\n            * `2` - Web and mobile access allowed\n\n\n\n            Please use `isLocked` instead.\n          format: int32\n          type: integer\n        login:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.13.0\n\n            User login name\n          type: string\n        phone:\n          description: Phone number\n          type: string\n        publicKeyContainer:\n          $ref: \"#/components/schemas/PublicKeyContainer\"\n        title:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.18.0\n\n            Job title\n          type: string\n        userAttributes:\n          $ref: \"#/components/schemas/UserAttributes\"\n        userName:\n          description: |-\n            \u0026#128640; Since v4.13.0\n\n            Username\n          type: string\n        userRoles:\n          $ref: \"#/components/schemas/RoleList\"\n      required:\n        - authData\n        - avatarUuid\n        - firstName\n        - id\n        - isLocked\n        - lastName\n        - lockStatus\n        - userName\n      type: object\n    UserFileKey:\n      description: User file key\n      properties:\n        fileKey:\n          $ref: \"#/components/schemas/FileKey\"\n        userId:\n          description: Unique identifier for the user\n          format: int64\n          type: integer\n      required:\n        - fileKey\n        - userId\n      type: object\n    UserFileKeyList:\n      deprecated: true\n      description: List of user file keys\n      properties:\n        items:\n          description: List of user file keys\n          items:\n            $ref: \"#/components/schemas/UserFileKey\"\n          type: array\n      type: object\n    UserFileKeySetBatchRequest:\n      description: List of request models for setting a user file key(s)\n      properties:\n        items:\n          description: List of user file keys\n          items:\n            $ref: \"#/components/schemas/UserFileKeySetRequest\"\n          type: array\n      required:\n        - items\n      type: object\n    UserFileKeySetRequest:\n      description: Request model for setting a user file key\n      properties:\n        fileId:\n          description: File ID\n          format: int64\n          type: integer\n        fileKey:\n          $ref: \"#/components/schemas/FileKey\"\n        userId:\n          description: Unique identifier for the user\n          format: int64\n          type: integer\n      required:\n        - fileId\n        - fileKey\n        - userId\n      type: object\n    UserGroup:\n      description: Group information\n      properties:\n        id:\n          description: Unique identifier for the group\n          format: int64\n          type: integer\n        isMember:\n          description: Determines whether user is a member of the group or not\n          type: boolean\n        name:\n          description: Group name\n          type: string\n      required:\n        - id\n        - isMember\n        - name\n      type: object\n    UserGroupList:\n      description: List of groups\n      properties:\n        items:\n          description: List of user-group mappings\n          items:\n            $ref: \"#/components/schemas/UserGroup\"\n          type: array\n        range:\n          $ref: \"#/components/schemas/Range\"\n      required:\n        - items\n        - range\n      type: object\n    UserIdFileIdItem:\n      description: User ID and file ID mapping\n      properties:\n        fileId:\n          description: File ID\n          format: int64\n          type: integer\n        userId:\n          description: Unique identifier for the user\n          format: int64\n          type: integer\n      type: object\n    UserIds:\n      description: List of user IDs\n      properties:\n        ids:\n          description: List of user IDs\n          items:\n            description: List of user IDs\n            format: int64\n            type: integer\n          type: array\n      required:\n        - ids\n      type: object\n    UserInfo:\n      description: User information\n      properties:\n        avatarUuid:\n          description: |-\n            \u0026#128640; Since v4.11.0\n\n            Avatar UUID\n          type: string\n        displayName:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.11.0\n\n            Display name\n\n            use other fields from `UserInfo` instead to combine a display name\n          type: string\n        email:\n          description: |-\n            \u0026#128640; Since v4.11.0\n\n            Email \n          type: string\n        firstName:\n          description: |-\n            \u0026#128640; Since v4.11.0\n\n            User first name (mandatory if `userType` is `internal`)\n          type: string\n        id:\n          description: Unique identifier for the user\n          format: int64\n          type: integer\n        lastName:\n          description: |-\n            \u0026#128640; Since v4.11.0\n\n            User last name (mandatory if `userType` is `internal`)\n          type: string\n        title:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.18.0\n\n            Job title\n          type: string\n        userName:\n          description: |-\n            \u0026#128640; Since v4.13.0\n\n            Username (only returned for `internal` users)\n          type: string\n        userType:\n          description: |-\n            \u0026#128640; Since v4.11.0\n\n            User type:\n\n            * `internal` - ordinary DRACOON user\n\n            * `external` - external user without DRACOON account\n\n            * `system` - system user (non human \u0026#128125;)\n\n            * `deleted` - deleted DRACOON user\n          enum:\n            - system\n            - internal\n            - external\n            - deleted\n          type: string\n      required:\n        - avatarUuid\n        - firstName\n        - id\n        - lastName\n        - userName\n        - userType\n      type: object\n    UserItem:\n      description: User information\n      properties:\n        avatarUuid:\n          description: |-\n            \u0026#128640; Since v4.11.0\n\n            Avatar UUID\n          type: string\n        createdAt:\n          description: Creation date\n          format: date-time\n          type: string\n        email:\n          description: \"Email \"\n          type: string\n        expireAt:\n          description: Expiration date\n          format: date-time\n          type: string\n        firstName:\n          description: User first name\n          type: string\n        gender:\n          default: n\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.12.0\n\n            Gender\n          type: string\n        hasManageableRooms:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.27.0\n\n            User has manageable rooms\n          type: boolean\n        homeRoomId:\n          description: Homeroom ID\n          format: int64\n          type: integer\n        id:\n          description: Unique identifier for the user\n          format: int64\n          type: integer\n        isEncryptionEnabled:\n          description: |-\n            User has generated private key.\n\n            Possible if client-side encryption is active for this customer\n          type: boolean\n        isLocked:\n          default: false\n          description: |-\n            User is locked:\n\n            * `false` - unlocked\n\n            * `true` - locked\n\n\n\n            User is locked and can not login anymore.\n          type: boolean\n        lastLoginSuccessAt:\n          description: Last successful logon date\n          format: date-time\n          type: string\n        lastName:\n          description: User last name\n          type: string\n        lockStatus:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.7.0\n\n            User lock status:\n\n            * `0` - locked\n\n            * `1` - Web access allowed\n\n            * `2` - Web and mobile access allowed\n\n\n\n            Please use `isLocked` instead.\n          format: int32\n          type: integer\n        login:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.13.0\n\n            User login name\n          type: string\n        phone:\n          description: Phone number\n          type: string\n        title:\n          deprecated: true\n          description: |-\n            \u0026#128679; Deprecated since v4.18.0\n\n            Job title\n          type: string\n        userAttributes:\n          $ref: \"#/components/schemas/UserAttributes\"\n        userName:\n          description: |-\n            \u0026#128640; Since v4.13.0\n\n            Username\n          type: string\n        userRoles:\n          $ref: \"#/components/schemas/RoleList\"\n      required:\n        - avatarUuid\n        - firstName\n        - id\n        - isLocked\n        - lastName\n        - lockStatus\n        - login\n        - userName\n      type: object\n    UserKeyPairContainer:\n      description: Key pair container\n      properties:\n        privateKeyContainer:\n          $ref: \"#/components/schemas/PrivateKeyContainer\"\n        publicKeyContainer:\n          $ref: \"#/components/schemas/PublicKeyContainer\"\n      required:\n        - privateKeyContainer\n        - publicKeyContainer\n      type: object\n    UserList:\n      description: List of users\n      properties:\n        items:\n          description: List of users\n          items:\n            $ref: \"#/components/schemas/UserItem\"\n          type: array\n        range:\n          $ref: \"#/components/schemas/Range\"\n      required:\n        - items\n        - range\n      type: object\n    UserLockout:\n      description: User lockout information\n      properties:\n        enabled:\n          description: Determines whether user lockout is enabled\n          type: boolean\n        lockoutPeriod:\n          description: Amount of minutes a user has to wait to make another login attempt after `maxNumberOfLoginFailures` has been exceeded\n          format: int32\n          type: integer\n        maxNumberOfLoginFailures:\n          description: Maximum allowed number of failed login attempts\n          format: int32\n          type: integer\n      required:\n        - enabled\n      type: object\n    UserUserPublicKey:\n      description: Public key information\n      properties:\n        id:\n          description: Unique identifier for the user\n          format: int64\n          type: integer\n        publicKeyContainer:\n          $ref: \"#/components/schemas/PublicKeyContainer\"\n      type: object\n    UserUserPublicKeyList:\n      description: List of user public keys\n      properties:\n        items:\n          description: List of user public keys\n          items:\n            $ref: \"#/components/schemas/UserUserPublicKey\"\n          type: array\n      required:\n        - items\n      type: object\n    ViolatedPasswordPolicy:\n      description: Violated password policy information\n      properties:\n        message:\n          description: Message from password validator\n          type: string\n        name:\n          description: Name of the violated password policy\n          type: string\n      type: object\n    Webhook:\n      description: Webhook information\n      properties:\n        createdAt:\n          description: Creation date\n          format: date-time\n          type: string\n        createdBy:\n          $ref: \"#/components/schemas/UserInfo\"\n        eventTypeNames:\n          description: List of names of event types\n          items:\n            description: List of names of event types\n            type: string\n          type: array\n        expireAt:\n          description: Expiration date / time\n          format: date-time\n          type: string\n        failStatus:\n          description: Last HTTP status code when a webhook is disabled due to delivery failures\n          format: int32\n          type: integer\n        id:\n          description: ID\n          format: int64\n          type: integer\n        isEnabled:\n          description: Is enabled\n          type: boolean\n        name:\n          description: Name\n          type: string\n        secret:\n          description: Secret; used for event message signatures\n          type: string\n        updatedAt:\n          description: Modification date\n          format: date-time\n          type: string\n        updatedBy:\n          $ref: \"#/components/schemas/UserInfo\"\n        url:\n          description: URL\n          type: string\n      required:\n        - createdAt\n        - eventTypeNames\n        - expireAt\n        - id\n        - isEnabled\n        - name\n        - updatedAt\n        - url\n      type: object\n    WebhookList:\n      description: List of webhooks\n      properties:\n        items:\n          description: List of webhooks\n          items:\n            $ref: \"#/components/schemas/Webhook\"\n          type: array\n        range:\n          $ref: \"#/components/schemas/Range\"\n      required:\n        - items\n        - range\n      type: object\n    ZipDownloadRequest:\n      description: Request model for ZIP download\n      properties:\n        nodeIds:\n          description: List of node IDs\n          items:\n            description: List of node IDs\n            format: int64\n            type: integer\n          type: array\n      required:\n        - nodeIds\n      type: object\n  securitySchemes:\n    oauth2:\n      flows:\n        authorizationCode:\n          authorizationUrl: /oauth/authorize\n          scopes:\n            all: every operation is allowed\n          tokenUrl: /oauth/token\n      type: oauth2\n",
			"canonicalURL": "/github.com/ballerina-platform/openapi-connectors@331a656907cc680fb04372bd0b24a65c54b07c80/-/blob/openapi/dracoon.public/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ballerina-platform/openapi-connectors/blob/331a656907cc680fb04372bd0b24a65c54b07c80/openapi/dracoon.public/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"NewCustomerRequest\": resolve \"#/components/schemas/NewCustomerRequest\": property \"firstAdminUser\": $ref: resolve \"#/components/schemas/FirstAdminUser\": property \"gender\": at openapi/dracoon.public/openapi.yml:5742:20: parse default: expected type \"string\", got \"bool\""
}