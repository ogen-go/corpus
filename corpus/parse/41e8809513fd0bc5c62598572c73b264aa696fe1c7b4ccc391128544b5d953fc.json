{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/tablelandnetwork/go-tableland"
		},
		"file": {
			"name": "tableland-openapi-spec.yaml",
			"size": 0,
			"path": "tableland-openapi-spec.yaml",
			"byteSize": 15862,
			"content": "openapi: 3.0.0\ninfo:\n  title: Tableland Remote API\n  version: 0.0.1\nservers:\n  - url: https://testnet.tableland.network\npaths:\n  /rpc:\n    post:\n      security:\n        - bearerAuth: []\n      summary: Lets you interact with Tableland's JSON-RPC calls\n      description: \u003e\n        The following JSON-RPC methods are available:\n\n        * The `validateCreateTable` method allows you validate a CREATE TABLE query as a pre-mint check, and also calculate its corresponding structure hash.\n\n        * The `runReadQuery` method allows you execute a read-query in the validator and get the result.\n        \n        * The `relayWriteQuery` method allows you to rely on the validator to send a runSQL SC call on your behalf for write-queries.\n\n        * The `getReceipt` method allows you to get the receipt of a chain transaction to know if it was executed, and the execution details.\n\n        * The `setController` method allows you to rely on the validator to send a setController SC call on your behalf for a table.\n\n        All the above RPC calls expect an Authorization header with a signed SIWE except:\n        - runReadQuery\n\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: \"#/components/schemas/runReadQuery\"\n                - $ref: \"#/components/schemas/relayWriteQuery\"\n                - $ref: \"#/components/schemas/validateCreateTable\"\n                - $ref: \"#/components/schemas/getReceipt\"\n                - $ref: \"#/components/schemas/setController\"\n            examples:\n              validateCreateTable:\n                value:\n                  jsonrpc: \"2.0\"\n                  method: tableland_validateCreateTable\n                  id: 1\n                  params:\n                    - id: \"0\"\n                      create_statement: \"CREATE TABLE myname_31337 (column_a int, column_b text);\"\n              validateWriteQuery:\n                value:\n                  jsonrpc: \"2.0\"\n                  method: tableland_validateWriteQuery\n                  id: 1\n                  params:\n                    - id: \"0\"\n                      statement: \"INSERT INTO healthbot_31337_1 VALUES (1);\"\n              runReadQuery:\n                value:\n                  jsonrpc: \"2.0\"\n                  method: tableland_runReadQuery\n                  id: 1\n                  params:\n                    - statement: SELECT * FROM healthbot_31337_1;\n              relayWriteQuery:\n                value:\n                  jsonrpc: \"2.0\"\n                  method: tableland_relayWriteQuery\n                  id: 1\n                  params:\n                    - statement: INSERT INTO healthbot_31337_1 values (2);\n              getReceipt:\n                value:\n                  jsonrpc: \"2.0\"\n                  method: tableland_getReceipt\n                  id: 1\n                  params:\n                    - txn_hash: \"0x400508d7cc035b14cc53f64393a8dafcc55f66ad8f9b44d626744157337e2098\"\n              setController:\n                value:\n                  jsonrpc: \"2.0\"\n                  method: tableland_setController\n                  id: 1\n                  params:\n                    - controller: \"0x0\"\n                      token_id: \"1\"\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Access-Control-Allow-Headers:\n              schema:\n                type: string\n                example: \"Accept, Accept-Language, Content-Type, Authorization\"\n            Access-Control-Allow-Origin:\n              schema:\n                type: string\n                example: \"*\"\n            Access-Control-Allow-Methods:\n              schema:\n                type: string\n                example: \"GET, POST, OPTIONS\"\n            Trace-Id:\n              schema:\n                type: string\n                example: \"579bf7aa-9bcf-4405-9d9e-7fd6c1672d1b\"\n            Content-Type:\n              schema:\n                type: string\n                example: application/json\n          content:\n            application/json:\n              schema:\n                type: object\n              examples:\n                validateCreateTable:\n                  value:\n                    jsonrpc: \"2.0\"\n                    id: 1\n                    result:\n                      structure_hash: \"ef7be01282ea97380e4d3bbcba6774cbc7242c46ee51b7e611f1efdfa3623e53\"\n                validateWriteQuery:\n                  value:\n                    jsonrpc: \"2.0\"\n                    id: 1\n                    result:\n                      table_id: \"1\"\n                relayWriteQuery:\n                  value:\n                    jsonrpc: \"2.0\"\n                    id: 1\n                    result:\n                      tx:\n                        hash: \"0xc3e7d1e81b59556f414a5f5c23760eb61b4bfaa18150d924d7d3b334941dbecd\"\n                runReadQuery:\n                  value:\n                    jsonrpc: \"2.0\"\n                    id: 1\n                    result:\n                      data:\n                        columns:\n                          - name: column_a\n                        rows:\n                          - [1]\n                getReceipt:\n                  value:\n                    jsonrpc: \"2.0\"\n                    id: 1\n                    result:\n                      ok: true\n                      receipt:\n                        chain_id: 5\n                        txn_hash: \"0xc3e7d1e81b59556f414a5f5c23760eb61b4bfaa18150d924d7d3b334941dbecd\"\n                        block_number: 1000\n                        table_id: '2'\n                setController:\n                  value:\n                    jsonrpc: \"2.0\"\n                    id: 1\n                    result:\n                      tx:\n                        hash: '0xa69590589a9ae04bfde4ca07351c611f9ddb2ddc3bab6cd0165684dc959be5c7'\n  /chain/{chainID}/tables/controller/{address}:\n    get:\n      summary: Get all tables controlled by an ETH address\n      parameters:\n        - in: path\n          name: chainID\n          schema:\n            type: int\n          required: true\n          description: The ChainID of the targeted chain.\n        - in: path\n          name: address\n          schema:\n            type: string\n          required: true\n          description: An ETH address\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: \"object\"\n                  required:\n                    - \"uuid\"\n                    - \"controller\"\n                    - \"type\"\n                    - \"created_at\"\n                  properties:\n                    name:\n                      type: \"string\"\n                    controller:\n                      type: \"string\"\n                    description:\n                      type: \"string\"\n                    created_at:\n                      type: \"string\"\n                    structure:\n                      type: \"string\"\n                  example:\n                    - controller: \"0xbAb12215Ed94713A290e0c618fa8177fAb5eFd2D\"\n                      name: \"healthbot_31337_1\"\n                      structure: \"be1eb905f03347a439ecf9b612632fd53839b7f082dc2f9be6ef7da5dfddd660\"\n                      created_at: \"2022-02-07T22:57:41.606803Z\"\n  /chain/{chainID}/tables/{id}:\n    get:\n      summary: Get the metadata associated with a table\n      parameters:\n        - in: path\n          name: chainID\n          schema:\n            type: int\n          required: true\n          description: The ChainID of the targeted chain.\n        - in: path\n          name: id\n          schema:\n            type: string\n          required: true\n          description: The id of the table\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                required:\n                  - name\n                  - description\n                  - external_url\n                  - image\n                  - attributes\n                properties:\n                  name:\n                    type: \"string\"\n                  description:\n                    type: \"string\"\n                  external_url:\n                    type: \"string\"\n                  image:\n                    type: \"string\"\n                  attributes:\n                    type: array\n                    items:\n                      type: object\n                      required:\n                        - display_type\n                        - trait_type\n                        - value\n                      properties:\n                        display_type:\n                          type: \"string\"\n                        trait_type:\n                          type: \"string\"\n                        value:\n                          type: \"integer\"\n                example:\n                  name: \"myname\"\n                  external_url: \"https://testnet.tableland.network/tables/0\"\n                  image: \"https://bafkreifhuhrjhzbj4onqgbrmhpysk2mop2jimvdvfut6taiyzt2yqzt43a.ipfs.dweb.link\"\n                  attributes:\n                    - display_type: \"date\"\n                      trait_type: \"created\"\n                      value: 1644274661\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                required:\n                  - message\n                example:\n                  message: \"Failed to fetch metadata\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                required:\n                  - message\n                example:\n                  message: \"Invalid id format\"\n  /query?s={readStatement}:\n    get:\n      summary: Get a read query with the statement in the `s` querystring parameter\n      parameters:\n        - in: query\n          name: readStatement\n          description: The SQL statement describing the read query\n          required: true\n      responses:\n        \"200\":\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: \"object\"\n                  required:\n                    - \"data\"\n                  properties:\n                    data:\n                      type: \"object\"\n                  example:\n                    columns:\n                      - name: column_a\n                    rows:\n                      - [1]\n          headers:\n            Access-Control-Allow-Headers:\n              schema:\n                type: string\n                example: \"Accept, Accept-Language, Content-Type, Authorization\"\n            Access-Control-Allow-Origin:\n              schema:\n                type: string\n                example: \"*\"\n            Access-Control-Allow-Methods:\n              schema:\n                type: string\n                example: \"GET, POST, OPTIONS\"\n            Trace-Id:\n              schema:\n                type: string\n                example: \"579bf7aa-9bcf-4405-9d9e-7fd6c1672d1b\"\n            Content-Type:\n              schema:\n                type: string\n                example: application/json\n\ncomponents:\n  securitySchemes:\n    bearerAuth: # arbitrary name for the security scheme\n      type: http\n      scheme: bearer\n      bearerFormat: SIWE\n  schemas:\n    runReadQuery:\n      type: \"object\"\n      required:\n        - \"method\"\n        - \"id\"\n        - \"jsonrpc\"\n        - \"params\"\n      properties:\n        method:\n          type: \"string\"\n          description: \"Method name\"\n        id:\n          type: \"integer\"\n          default: 1\n          format: int32\n          description: \"Request ID\"\n        jsonrpc:\n          type: \"string\"\n          default: \"2.0\"\n          description: \"JSON-RPC Version (2.0)\"\n        params:\n          type: \"array\"\n          items:\n            type: \"object\"\n            required:\n              - \"statement\"\n            properties:\n              statement:\n                type: \"string\"\n    relayWriteQuery:\n      type: \"object\"\n      required:\n        - \"method\"\n        - \"id\"\n        - \"jsonrpc\"\n        - \"params\"\n      properties:\n        method:\n          type: \"string\"\n          description: \"Method name\"\n        id:\n          type: \"integer\"\n          default: 1\n          format: int32\n          description: \"Request ID\"\n        jsonrpc:\n          type: \"string\"\n          default: \"2.0\"\n          description: \"JSON-RPC Version (2.0)\"\n        params:\n          type: \"array\"\n          items:\n            type: \"object\"\n            required:\n              - \"statement\"\n            properties:\n              statement:\n                type: \"string\"\n    validateCreateTable:\n      type: \"object\"\n      required:\n        - \"method\"\n        - \"id\"\n        - \"jsonrpc\"\n        - \"params\"\n      properties:\n        method:\n          type: \"string\"\n          description: \"Method name\"\n        id:\n          type: \"integer\"\n          default: 1\n          format: int32\n          description: \"Request ID\"\n        jsonrpc:\n          type: \"string\"\n          default: \"2.0\"\n          description: \"JSON-RPC Version (2.0)\"\n        params:\n          type: \"array\"\n          items:\n            type: \"object\"\n            required:\n              - \"create_statement\"\n            properties:\n              create_statement:\n                type: \"string\"\n    validateWriteQuery:\n      type: \"object\"\n      required:\n        - \"method\"\n        - \"id\"\n        - \"jsonrpc\"\n        - \"params\"\n      properties:\n        method:\n          type: \"string\"\n          description: \"Method name\"\n        id:\n          type: \"integer\"\n          default: 1\n          format: int32\n          description: \"Request ID\"\n        jsonrpc:\n          type: \"string\"\n          default: \"2.0\"\n          description: \"JSON-RPC Version (2.0)\"\n        params:\n          type: \"array\"\n          items:\n            type: \"object\"\n            required:\n              - \"statement\"\n            properties:\n              statement:\n                type: \"string\"\n    getReceipt:\n      type: \"object\"\n      required:\n        - \"method\"\n        - \"id\"\n        - \"jsonrpc\"\n        - \"params\"\n      properties:\n        method:\n          type: \"string\"\n          description: \"Method name\"\n        id:\n          type: \"integer\"\n          default: 1\n          format: int32\n          description: \"Request ID\"\n        jsonrpc:\n          type: \"string\"\n          default: \"2.0\"\n          description: \"JSON-RPC Version (2.0)\"\n        params:\n          type: \"array\"\n          items:\n            type: \"object\"\n            required:\n              - \"txn_hash\"\n            properties:\n              txn_hash:\n                type: \"string\"\n    setController:\n      type: \"object\"\n      required:\n        - \"method\"\n        - \"id\"\n        - \"jsonrpc\"\n        - \"params\"\n      properties:\n        method:\n          type: \"string\"\n          description: \"Method name\"\n        id:\n          type: \"integer\"\n          default: 1\n          format: int32\n          description: \"Request ID\"\n        jsonrpc:\n          type: \"string\"\n          default: \"2.0\"\n          description: \"JSON-RPC Version (2.0)\"\n        params:\n          type: \"array\"\n          items:\n            type: \"object\"\n            required:\n              - \"caller\"\n              - \"controller\"\n              - \"token_id\"\n            properties:\n              txn_hash:\n                type: \"string\"\n              controller:\n                type: \"string\"\n              token_id:\n                type: \"string\"",
			"canonicalURL": "/github.com/tablelandnetwork/go-tableland@8176909c73ac401d92596973845fc00ed390672b/-/blob/tableland-openapi-spec.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/tablelandnetwork/go-tableland/blob/8176909c73ac401d92596973845fc00ed390672b/tableland-openapi-spec.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/chain/{chainID}/tables/controller/{address}\": get: parameters: parse parameter \"chainID\": schema: parse schema: at 1:3097: unexpected schema type: \"int\""
}