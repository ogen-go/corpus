{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/asyrafduyshart/node-sequelize-ddd"
		},
		"file": {
			"name": "swagger.json",
			"size": 0,
			"path": "src/interfaces/http/swagger/swagger.json",
			"byteSize": 5961,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Node API boilerplate\",\n    \"version\": \"v1\"\n  },\n  \"servers\": [\n    {\n      \"description\": \"Local server\",\n      \"url\": \"/api\"\n    }\n  ],\n  \"paths\": {\n    \"/users\": {\n      \"get\": {\n        \"operationId\": \"listUsers\",\n        \"tags\": [ \"Users\" ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"List of all users\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/User\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"operationId\": \"createUser\",\n        \"tags\": [ \"Users\" ],\n        \"requestBody\": {\n          \"description\": \"User data\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/NewUser\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"User created successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"User not created because of validation error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ValidationError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/users/{id}\": {\n      \"get\": {\n        \"operationId\": \"showUser\",\n        \"tags\": [ \"Users\" ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"Id of user to show\",\n            \"required\": true,\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Return user with given id\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"User not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NotFoundError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"operationId\": \"updateUser\",\n        \"tags\": [ \"Users\" ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"Id of user to update\",\n            \"required\": true,\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"User new data\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/NewUser\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"202\": {\n            \"description\": \"User updated successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"User not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NotFoundError\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"operationId\": \"deleteUser\",\n        \"tags\": [ \"Users\" ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"Id of user to delete\",\n            \"required\": true,\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        ],\n        \"responses\": {\n          \"202\": {\n            \"description\": \"User deleted successfully\"\n          },\n          \"404\": {\n            \"description\": \"User not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NotFoundError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"User\": {\n        \"allOf\": [\n          { \"$ref\": \"#/components/schemas/NewUser\" },\n          {\n            \"required\": [ \"id\" ],\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\",\n                \"format\": \"int64\"\n              }\n            }\n          }\n        ]\n      },\n      \"NewUser\": {\n        \"required\": [ \"name\" ],\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ValidationError\": {\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [ \"ValidationError\" ]\n          },\n          \"details\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ValidationErrorDetail\"\n            }\n          }\n        }\n      },\n      \"ValidationErrorDetail\": {\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"path\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"NotFoundError\": {\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [ \"NotFoundError\" ]\n          },\n          \"details\": {\n            \"type\": \"string\",\n            \"enum\": [ \"User with id {id} not found\" ]\n          }\n        }\n      }\n    }\n  }\n}\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /users/{id}: get: operation \"showUser\": parameters: parse parameter \"id\": parameter MUST contain either a schema property, or a content property"
}