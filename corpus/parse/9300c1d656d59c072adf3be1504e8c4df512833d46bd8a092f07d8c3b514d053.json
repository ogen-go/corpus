{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "atlassian.com-jira-v3-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/atlassian.com-jira-v3-swagger.yaml",
			"byteSize": 777936,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    x-twitter: Atlassian\n  description: The Jira Cloud Platform REST API\n  title: Jira\n  version: v3\n  x-apisguru-categories:\n    - developer_tools\n  x-logo:\n    url: https://twitter.com/Atlassian/profile_image?size=original\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/bobby-brennan/scrape-to-swagger/master/output/jira.swagger.json\n      version: \"2.0\"\n  x-providerName: atlassian.com\n  x-serviceName: jira\n  x-unofficialSpec: true\npaths:\n  /application-properties:\n    get:\n      description: Returns all application properties or a single application property.\n      parameters:\n        - description: The key of the application property.\n          in: query\n          name: key\n          schema:\n            type: string\n        - description: When a key isn't provided, this filters the list of results by the\n            application property key using a regular expression. For example,\n            using jira.lf.* will return all application properties with keys\n            that start with jira.lf..\n          in: query\n          name: keyFilter\n          schema:\n            type: string\n        - description: The permission level of all items being returned in the list.\n          in: query\n          name: permissionLevel\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    defaultValue:\n                      type: string\n                    desc:\n                      minLength: 1\n                      type: string\n                    id:\n                      minLength: 1\n                      type: string\n                    key:\n                      minLength: 1\n                      type: string\n                    name:\n                      minLength: 1\n                      type: string\n                    type:\n                      minLength: 1\n                      type: string\n                    value:\n                      minLength: 1\n                      type: string\n                  required:\n                    - id\n                    - key\n                    - value\n                    - name\n                    - desc\n                    - type\n                    - defaultValue\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n  /application-properties/advanced-settings:\n    get:\n      description: Returns the application properties that are accessible on the Advanced\n        Settings page. To navigate to the Advanced Settings page in Jira, choose\n        the Jira icon \u003e Jira settings \u003e System, General Configuration and then\n        click Advanced Settings (in the upper right).\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    defaultValue:\n                      type: string\n                    desc:\n                      minLength: 1\n                      type: string\n                    id:\n                      minLength: 1\n                      type: string\n                    key:\n                      minLength: 1\n                      type: string\n                    name:\n                      minLength: 1\n                      type: string\n                    type:\n                      minLength: 1\n                      type: string\n                    value:\n                      minLength: 1\n                      type: string\n                  required:\n                    - id\n                    - key\n                    - value\n                    - name\n                    - desc\n                    - type\n                    - defaultValue\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n  \"/application-properties/{id}\":\n    put:\n      description: Changes the value of an application property. For example, you can\n        change the value of the jira.clone.prefix from its default value of\n        CLONE - to Clone - if you prefer sentence case capitalization. Editable\n        properties are described below along with their default values.\n      parameters:\n        - description: The key of the application property to update.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                id:\n                  description: The ID of the application property, for example\n                    jira.newsletter.tip.delay.days.\n                  type: string\n                value:\n                  description: The new value, for example -1.\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n  /applicationrole:\n    get:\n      description: Returns all application roles. In Jira, application roles are managed\n        using the Application access configuration page.\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    defaultGroups:\n                      items:\n                        properties: {}\n                      type: array\n                    defined:\n                      type: boolean\n                    groups:\n                      items:\n                        properties: {}\n                      type: array\n                    hasUnlimitedSeats:\n                      type: boolean\n                    key:\n                      minLength: 1\n                      type: string\n                    name:\n                      minLength: 1\n                      type: string\n                    numberOfSeats:\n                      type: number\n                    platform:\n                      type: boolean\n                    remainingSeats:\n                      type: number\n                    selectedByDefault:\n                      type: boolean\n                    userCount:\n                      type: number\n                    userCountDescription:\n                      minLength: 1\n                      type: string\n                  required:\n                    - key\n                    - groups\n                    - name\n                    - defaultGroups\n                    - selectedByDefault\n                    - defined\n                    - numberOfSeats\n                    - remainingSeats\n                    - userCount\n                    - userCountDescription\n                    - hasUnlimitedSeats\n                    - platform\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n  \"/applicationrole/{key}\":\n    get:\n      description: Returns an application role.\n      parameters:\n        - description: The key of the application role. Use the Get all application roles\n            method to get the key for each application role.\n          in: path\n          name: key\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returns the ApplicationRole if it exists.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  defaultGroups:\n                    items:\n                      properties: {}\n                    type: array\n                  defined:\n                    type: boolean\n                  groups:\n                    items:\n                      properties: {}\n                    type: array\n                  hasUnlimitedSeats:\n                    type: boolean\n                  key:\n                    minLength: 1\n                    type: string\n                  name:\n                    minLength: 1\n                    type: string\n                  numberOfSeats:\n                    type: number\n                  platform:\n                    type: boolean\n                  remainingSeats:\n                    type: number\n                  selectedByDefault:\n                    type: boolean\n                  userCount:\n                    type: number\n                  userCountDescription:\n                    minLength: 1\n                    type: string\n                required:\n                  - key\n                  - groups\n                  - name\n                  - defaultGroups\n                  - selectedByDefault\n                  - defined\n                  - numberOfSeats\n                  - remainingSeats\n                  - userCount\n                  - userCountDescription\n                  - hasUnlimitedSeats\n                  - platform\n                type: object\n  /attachment/meta:\n    get:\n      description: Returns the global attachment settings, that is, whether attachments are\n        enabled and the maximum attachment size allowed.\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  enabled:\n                    type: boolean\n                  uploadLimit:\n                    type: number\n                required:\n                  - enabled\n                  - uploadLimit\n                type: object\n  \"/attachment/{id}\":\n    delete:\n      description: Deletes an attachment from an issue.\n      parameters:\n        - description: The ID of the attachment.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n    get:\n      description: Returns the metadata for an attachment. Note that the attachment itself\n        is not returned.\n      parameters:\n        - description: The ID of the attachment.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  author:\n                    properties:\n                      accountId:\n                        minLength: 1\n                        type: string\n                      active:\n                        type: boolean\n                      avatarUrls:\n                        properties:\n                          16x16:\n                            minLength: 1\n                            type: string\n                          24x24:\n                            minLength: 1\n                            type: string\n                          32x32:\n                            minLength: 1\n                            type: string\n                          48x48:\n                            minLength: 1\n                            type: string\n                        required:\n                          - 48x48\n                          - 24x24\n                          - 16x16\n                          - 32x32\n                        type: object\n                      displayName:\n                        minLength: 1\n                        type: string\n                      key:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - key\n                      - accountId\n                      - name\n                      - avatarUrls\n                      - displayName\n                      - active\n                    type: object\n                  content:\n                    minLength: 1\n                    type: string\n                  created:\n                    minLength: 1\n                    type: string\n                  filename:\n                    minLength: 1\n                    type: string\n                  id:\n                    type: number\n                  mimeType:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                  size:\n                    type: number\n                  thumbnail:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - self\n                  - filename\n                  - author\n                  - created\n                  - size\n                  - mimeType\n                  - content\n                  - thumbnail\n                type: object\n  \"/attachment/{id}/expand/human\":\n    get:\n      description: Returns the metadata for the contents of an attachment, if it is an\n        archive, and metadata for the attachment itself. For example, if the\n        attachment is a ZIP archive, then information about the files in the\n        archive is returned and metadata for the ZIP archive. Currently, only\n        the ZIP archive format is supported.\n      parameters:\n        - description: The ID of the attachment.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful. If an empty list is returned\n            in the response, the attachment is empty, corrupt, or not an\n            archive.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  entries:\n                    items:\n                      properties:\n                        index:\n                          type: number\n                        label:\n                          minLength: 1\n                          type: string\n                        mediaType:\n                          minLength: 1\n                          type: string\n                        path:\n                          minLength: 1\n                          type: string\n                        size:\n                          minLength: 1\n                          type: string\n                      required:\n                        - path\n                        - index\n                        - size\n                        - mediaType\n                        - label\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  id:\n                    type: number\n                  mediaType:\n                    minLength: 1\n                    type: string\n                  name:\n                    minLength: 1\n                    type: string\n                  totalEntryCount:\n                    type: number\n                required:\n                  - id\n                  - name\n                  - entries\n                  - totalEntryCount\n                  - mediaType\n                type: object\n  \"/attachment/{id}/expand/raw\":\n    get:\n      description: Returns the metadata for the contents of an attachment, if it is an\n        archive. For example, if the attachment is a ZIP archive, then\n        information about the files in the archive is returned. Currently, only\n        the ZIP archive format is supported.\n      parameters:\n        - description: The ID of the attachment.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful. If an empty list is returned\n            in the response, the attachment is empty, corrupt, or not an\n            archive.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  entries:\n                    items:\n                      properties:\n                        entryIndex:\n                          type: number\n                        mediaType:\n                          minLength: 1\n                          type: string\n                        name:\n                          minLength: 1\n                          type: string\n                        size:\n                          type: number\n                      required:\n                        - entryIndex\n                        - name\n                        - size\n                        - mediaType\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  totalEntryCount:\n                    type: number\n                required:\n                  - entries\n                  - totalEntryCount\n                type: object\n  /auditing/record:\n    get:\n      description: \"Returns a list of audit records. The list can be filtered to include\n        items:\"\n      parameters:\n        - description: The query string.\n          in: query\n          name: filter\n          schema:\n            type: string\n        - description: The date and time on or after which returned audit records must have\n            been created. If to is provided from must be before to or the result\n            set will be empty.\n          in: query\n          name: from\n          schema:\n            type: string\n        - description: The maximum number of results to return. The maximum is 1000.\n          in: query\n          name: limit\n          schema:\n            type: integer\n        - description: The number of records to skip before returning the first result.\n          in: query\n          name: offset\n          schema:\n            type: integer\n        - description: The date and time on or before which returned audit results must\n            have been created. If from is provided to must be after from or the\n            result set will be empty.\n          in: query\n          name: to\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  limit:\n                    type: number\n                  offset:\n                    type: number\n                  records:\n                    items:\n                      properties:\n                        associatedItems:\n                          items:\n                            properties:\n                              id:\n                                minLength: 1\n                                type: string\n                              name:\n                                minLength: 1\n                                type: string\n                              parentId:\n                                minLength: 1\n                                type: string\n                              parentName:\n                                minLength: 1\n                                type: string\n                              typeName:\n                                minLength: 1\n                                type: string\n                            required:\n                              - id\n                              - name\n                              - typeName\n                              - parentId\n                              - parentName\n                          minItems: 1\n                          type: array\n                          uniqueItems: true\n                        authorKey:\n                          minLength: 1\n                          type: string\n                        category:\n                          minLength: 1\n                          type: string\n                        changedValues:\n                          items:\n                            properties:\n                              changedFrom:\n                                minLength: 1\n                                type: string\n                              changedTo:\n                                minLength: 1\n                                type: string\n                              fieldName:\n                                minLength: 1\n                                type: string\n                            required:\n                              - fieldName\n                              - changedFrom\n                              - changedTo\n                          minItems: 1\n                          type: array\n                          uniqueItems: true\n                        created:\n                          minLength: 1\n                          type: string\n                        description:\n                          minLength: 1\n                          type: string\n                        eventSource:\n                          minLength: 1\n                          type: string\n                        id:\n                          type: number\n                        objectItem:\n                          properties:\n                            id:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                            parentId:\n                              minLength: 1\n                              type: string\n                            parentName:\n                              minLength: 1\n                              type: string\n                            typeName:\n                              minLength: 1\n                              type: string\n                          required:\n                            - id\n                            - name\n                            - typeName\n                            - parentId\n                            - parentName\n                          type: object\n                        remoteAddress:\n                          minLength: 1\n                          type: string\n                        summary:\n                          minLength: 1\n                          type: string\n                      required:\n                        - id\n                        - summary\n                        - remoteAddress\n                        - authorKey\n                        - created\n                        - category\n                        - eventSource\n                        - description\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  total:\n                    type: number\n                required:\n                  - offset\n                  - limit\n                  - total\n                  - records\n                type: object\n  \"/avatar/{type}/system\":\n    get:\n      description: Returns a list of system avatar details by owner type, where the owner\n        types are issue type, project, or user.\n      parameters:\n        - description: The avatar type.\n          in: path\n          name: type\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  system:\n                    items:\n                      properties:\n                        id:\n                          minLength: 1\n                          type: string\n                        isDeletable:\n                          type: boolean\n                        isSelected:\n                          type: boolean\n                        isSystemAvatar:\n                          type: boolean\n                        urls:\n                          properties:\n                            16x16:\n                              minLength: 1\n                              type: string\n                            24x24:\n                              minLength: 1\n                              type: string\n                            32x32:\n                              minLength: 1\n                              type: string\n                            48x48:\n                              minLength: 1\n                              type: string\n                          required:\n                            - 16x16\n                            - 24x24\n                            - 32x32\n                            - 48x48\n                          type: object\n                      required:\n                        - id\n                        - isSystemAvatar\n                        - isSelected\n                        - isDeletable\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - system\n                type: object\n  /comment/list:\n    post:\n      description: Returns the comments for a list of comment IDs.\n      parameters:\n        - description: \"Use expand to include additional information about comments in the\n            response. This parameter accepts multiple values separated by a\n            comma:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - renderedBody\n              - properties\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                ids:\n                  description: The list of comment IDs. Maximum of 1000 IDs can be\n                    specified. Required\n                  items:\n                    type: integer\n                  type: array\n              type: object\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  isLast:\n                    type: boolean\n                  maxResults:\n                    type: number\n                  startAt:\n                    type: number\n                  total:\n                    type: number\n                  values:\n                    items:\n                      properties:\n                        author:\n                          properties:\n                            active:\n                              type: boolean\n                            displayName:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                            self:\n                              minLength: 1\n                              type: string\n                          required:\n                            - self\n                            - name\n                            - displayName\n                            - active\n                          type: object\n                        body:\n                          properties:\n                            content:\n                              items:\n                                properties:\n                                  content:\n                                    items:\n                                      properties:\n                                        text:\n                                          minLength: 1\n                                          type: string\n                                        type:\n                                          minLength: 1\n                                          type: string\n                                      required:\n                                        - type\n                                        - text\n                                    minItems: 1\n                                    type: array\n                                    uniqueItems: true\n                                  type:\n                                    minLength: 1\n                                    type: string\n                                required:\n                                  - type\n                              minItems: 1\n                              type: array\n                              uniqueItems: true\n                            type:\n                              minLength: 1\n                              type: string\n                            version:\n                              type: number\n                          required:\n                            - type\n                            - version\n                            - content\n                          type: object\n                        created:\n                          minLength: 1\n                          type: string\n                        id:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                        updateAuthor:\n                          properties:\n                            active:\n                              type: boolean\n                            displayName:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                            self:\n                              minLength: 1\n                              type: string\n                          required:\n                            - self\n                            - name\n                            - displayName\n                            - active\n                          type: object\n                        updated:\n                          minLength: 1\n                          type: string\n                        visibility:\n                          properties:\n                            type:\n                              minLength: 1\n                              type: string\n                            value:\n                              minLength: 1\n                              type: string\n                          required:\n                            - type\n                            - value\n                          type: object\n                      required:\n                        - self\n                        - id\n                        - created\n                        - updated\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - maxResults\n                  - startAt\n                  - total\n                  - isLast\n                  - values\n                type: object\n  \"/comment/{commentId}/properties\":\n    get:\n      description: Returns the keys of all the properties of a comment.\n      parameters:\n        - description: The ID of the comment.\n          in: path\n          name: commentId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  keys:\n                    items:\n                      properties:\n                        key:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - key\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - keys\n                type: object\n  \"/comment/{commentId}/properties/{propertyKey}\":\n    delete:\n      description: Deletes a comment property.\n      parameters:\n        - description: The ID of the comment.\n          in: path\n          name: commentId\n          required: true\n          schema:\n            type: string\n        - description: The key of the property.\n          in: path\n          name: propertyKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n    get:\n      description: Returns the value of a comment property.\n      parameters:\n        - description: The ID of the comment.\n          in: path\n          name: commentId\n          required: true\n          schema:\n            type: string\n        - description: The key of the property.\n          in: path\n          name: propertyKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  key:\n                    minLength: 1\n                    type: string\n                  value:\n                    properties:\n                      stride.conversation.id:\n                        minLength: 1\n                        type: string\n                      support.time:\n                        minLength: 1\n                        type: string\n                    required:\n                      - stride.conversation.id\n                      - support.time\n                    type: object\n                required:\n                  - key\n                  - value\n                type: object\n    put:\n      description: Creates or updates the value of a property for a comment. Use this\n        resource to store custom data against a comment.\n      parameters:\n        - description: The ID of the comment.\n          in: path\n          name: commentId\n          required: true\n          schema:\n            type: string\n        - description: The key of the property. The maximum length is 255 characters.\n          in: path\n          name: propertyKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the comment property is updated.\n  /component:\n    post:\n      description: \"Creates a component. Use components to provide containers for issues\n        within a project. Permissions required: Any of the following:\"\n      requestBody:\n        $ref: \"#/components/requestBodies/Body6\"\n      responses:\n        \"201\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  assignee:\n                    properties:\n                      accountId:\n                        minLength: 1\n                        type: string\n                      active:\n                        type: boolean\n                      avatarUrls:\n                        properties:\n                          16x16:\n                            minLength: 1\n                            type: string\n                          24x24:\n                            minLength: 1\n                            type: string\n                          32x32:\n                            minLength: 1\n                            type: string\n                          48x48:\n                            minLength: 1\n                            type: string\n                        required:\n                          - 48x48\n                          - 24x24\n                          - 16x16\n                          - 32x32\n                        type: object\n                      displayName:\n                        minLength: 1\n                        type: string\n                      key:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - key\n                      - accountId\n                      - name\n                      - avatarUrls\n                      - displayName\n                      - active\n                    type: object\n                  assigneeType:\n                    minLength: 1\n                    type: string\n                  description:\n                    minLength: 1\n                    type: string\n                  id:\n                    minLength: 1\n                    type: string\n                  isAssigneeTypeValid:\n                    type: boolean\n                  lead:\n                    properties:\n                      accountId:\n                        minLength: 1\n                        type: string\n                      active:\n                        type: boolean\n                      avatarUrls:\n                        properties:\n                          16x16:\n                            minLength: 1\n                            type: string\n                          24x24:\n                            minLength: 1\n                            type: string\n                          32x32:\n                            minLength: 1\n                            type: string\n                          48x48:\n                            minLength: 1\n                            type: string\n                        required:\n                          - 48x48\n                          - 24x24\n                          - 16x16\n                          - 32x32\n                        type: object\n                      displayName:\n                        minLength: 1\n                        type: string\n                      key:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - key\n                      - accountId\n                      - name\n                      - avatarUrls\n                      - displayName\n                      - active\n                    type: object\n                  name:\n                    minLength: 1\n                    type: string\n                  project:\n                    minLength: 1\n                    type: string\n                  projectId:\n                    type: number\n                  realAssignee:\n                    properties:\n                      accountId:\n                        minLength: 1\n                        type: string\n                      active:\n                        type: boolean\n                      avatarUrls:\n                        properties:\n                          16x16:\n                            minLength: 1\n                            type: string\n                          24x24:\n                            minLength: 1\n                            type: string\n                          32x32:\n                            minLength: 1\n                            type: string\n                          48x48:\n                            minLength: 1\n                            type: string\n                        required:\n                          - 48x48\n                          - 24x24\n                          - 16x16\n                          - 32x32\n                        type: object\n                      displayName:\n                        minLength: 1\n                        type: string\n                      key:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - key\n                      - accountId\n                      - name\n                      - avatarUrls\n                      - displayName\n                      - active\n                    type: object\n                  realAssigneeType:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - id\n                  - name\n                  - description\n                  - lead\n                  - assigneeType\n                  - assignee\n                  - realAssigneeType\n                  - realAssignee\n                  - isAssigneeTypeValid\n                  - project\n                  - projectId\n                type: object\n  \"/component/{id}\":\n    delete:\n      description: \"Deletes a component. Permissions required: Any of the following:\"\n      parameters:\n        - description: The ID of the component.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: The ID of the component to replace the deleted component. If this\n            value is null no replacement is made.\n          in: query\n          name: moveIssuesTo\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Returned if the request is successfully.\n    get:\n      description: \"Returns a component. Permissions required: Browse projects project\n        permission.\"\n      parameters:\n        - description: The ID of the component.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  assignee:\n                    properties:\n                      accountId:\n                        minLength: 1\n                        type: string\n                      active:\n                        type: boolean\n                      avatarUrls:\n                        properties:\n                          16x16:\n                            minLength: 1\n                            type: string\n                          24x24:\n                            minLength: 1\n                            type: string\n                          32x32:\n                            minLength: 1\n                            type: string\n                          48x48:\n                            minLength: 1\n                            type: string\n                        required:\n                          - 48x48\n                          - 24x24\n                          - 16x16\n                          - 32x32\n                        type: object\n                      displayName:\n                        minLength: 1\n                        type: string\n                      key:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - key\n                      - accountId\n                      - name\n                      - avatarUrls\n                      - displayName\n                      - active\n                    type: object\n                  assigneeType:\n                    minLength: 1\n                    type: string\n                  description:\n                    minLength: 1\n                    type: string\n                  id:\n                    minLength: 1\n                    type: string\n                  isAssigneeTypeValid:\n                    type: boolean\n                  lead:\n                    properties:\n                      accountId:\n                        minLength: 1\n                        type: string\n                      active:\n                        type: boolean\n                      avatarUrls:\n                        properties:\n                          16x16:\n                            minLength: 1\n                            type: string\n                          24x24:\n                            minLength: 1\n                            type: string\n                          32x32:\n                            minLength: 1\n                            type: string\n                          48x48:\n                            minLength: 1\n                            type: string\n                        required:\n                          - 48x48\n                          - 24x24\n                          - 16x16\n                          - 32x32\n                        type: object\n                      displayName:\n                        minLength: 1\n                        type: string\n                      key:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - key\n                      - accountId\n                      - name\n                      - avatarUrls\n                      - displayName\n                      - active\n                    type: object\n                  name:\n                    minLength: 1\n                    type: string\n                  project:\n                    minLength: 1\n                    type: string\n                  projectId:\n                    type: number\n                  realAssignee:\n                    properties:\n                      accountId:\n                        minLength: 1\n                        type: string\n                      active:\n                        type: boolean\n                      avatarUrls:\n                        properties:\n                          16x16:\n                            minLength: 1\n                            type: string\n                          24x24:\n                            minLength: 1\n                            type: string\n                          32x32:\n                            minLength: 1\n                            type: string\n                          48x48:\n                            minLength: 1\n                            type: string\n                        required:\n                          - 48x48\n                          - 24x24\n                          - 16x16\n                          - 32x32\n                        type: object\n                      displayName:\n                        minLength: 1\n                        type: string\n                      key:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - key\n                      - accountId\n                      - name\n                      - avatarUrls\n                      - displayName\n                      - active\n                    type: object\n                  realAssigneeType:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - id\n                  - name\n                  - description\n                  - lead\n                  - assigneeType\n                  - assignee\n                  - realAssigneeType\n                  - realAssignee\n                  - isAssigneeTypeValid\n                  - project\n                  - projectId\n                type: object\n    put:\n      description: 'Modifies a component. Any fields included in the request are\n        overwritten. If leadUserName is an empty string (\"\") the component lead\n        is removed. Permissions required: Any of the following:'\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Body6\"\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n  \"/component/{id}/relatedIssueCounts\":\n    get:\n      description: \"Returns the counts of issues assigned to the component. Permissions\n        required: Permission to access Jira.\"\n      parameters:\n        - description: The ID of the component.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  issueCount:\n                    type: number\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - issueCount\n                type: object\n  /configuration:\n    get:\n      description: Returns the global settings in Jira. These settings determine whether\n        optional features (for example, sub-tasks, time tracking, and others)\n        are enabled. If time tracking is enabled, this method also returns the\n        time tracking configuration.\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  attachmentsEnabled:\n                    type: boolean\n                  issueLinkingEnabled:\n                    type: boolean\n                  subTasksEnabled:\n                    type: boolean\n                  timeTrackingConfiguration:\n                    properties:\n                      defaultUnit:\n                        minLength: 1\n                        type: string\n                      timeFormat:\n                        minLength: 1\n                        type: string\n                      workingDaysPerWeek:\n                        type: number\n                      workingHoursPerDay:\n                        type: number\n                    required:\n                      - workingHoursPerDay\n                      - workingDaysPerWeek\n                      - timeFormat\n                      - defaultUnit\n                    type: object\n                  timeTrackingEnabled:\n                    type: boolean\n                  unassignedIssuesAllowed:\n                    type: boolean\n                  votingEnabled:\n                    type: boolean\n                  watchingEnabled:\n                    type: boolean\n                required:\n                  - votingEnabled\n                  - watchingEnabled\n                  - unassignedIssuesAllowed\n                  - subTasksEnabled\n                  - issueLinkingEnabled\n                  - timeTrackingEnabled\n                  - attachmentsEnabled\n                  - timeTrackingConfiguration\n                type: object\n  /configuration/timetracking:\n    delete:\n      description: Disables time tracking.\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n    get:\n      description: Returns the time tracking provider that is currently selected. Note that\n        if time tracking is disabled, then a successful but empty response is\n        returned.\n      responses:\n        \"200\":\n          description: Returned if the request is successful and time tracking is enabled.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  key:\n                    minLength: 1\n                    type: string\n                  name:\n                    minLength: 1\n                    type: string\n                  url:\n                    minLength: 1\n                    type: string\n                required:\n                  - key\n                  - name\n                  - url\n                type: object\n    put:\n      description: Selects a time tracking provider.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                key:\n                  description: The key for the time tracking provider (for example, JIRA).\n                  type: string\n                name:\n                  description: The name of the time tracking provider (for example, JIRA\n                    provided time tracking).\n                  type: string\n              type: object\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n  /configuration/timetracking/list:\n    get:\n      description: \"Returns all time tracking providers. By default, Jira only has one time\n        tracking provider: JIRA provided time tracking. However, you can install\n        other time tracking providers via apps from the Atlassian Marketplace.\n        For more information on time tracking providers, see the documentation\n        for the Time Tracking Provider module.\"\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    key:\n                      minLength: 1\n                      type: string\n                    name:\n                      minLength: 1\n                      type: string\n                    url:\n                      minLength: 1\n                      type: string\n                  required:\n                    - key\n                    - name\n                    - url\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n  /configuration/timetracking/options:\n    get:\n      description: Returns the time tracking settings. This includes settings such as the\n        time format, default time unit, and others. For more information, see\n        Configuring time tracking.\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  defaultUnit:\n                    minLength: 1\n                    type: string\n                  timeFormat:\n                    minLength: 1\n                    type: string\n                  workingDaysPerWeek:\n                    type: number\n                  workingHoursPerDay:\n                    type: number\n                required:\n                  - workingHoursPerDay\n                  - workingDaysPerWeek\n                  - timeFormat\n                  - defaultUnit\n                type: object\n    put:\n      description: Sets the time tracking settings.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                defaultUnit:\n                  description: The unit of time that will be applied to logged time by\n                    default.\n                  enum:\n                    - minute\n                    - hour\n                    - day\n                    - week\n                  type: string\n                timeFormat:\n                  description: The format that will appear on an issue's Time Spent field.\n                  enum:\n                    - pretty\n                    - days\n                    - hours\n                  type: string\n                workingDaysPerWeek:\n                  description: The number of days in a working week (for example, 5.5).\n                    This value is specified in days.\n                  type: number\n                workingHoursPerDay:\n                  description: The number of hours in a working day (for example, 7.6).\n                    This value is specified in hours.\n                  type: number\n              type: object\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  defaultUnit:\n                    minLength: 1\n                    type: string\n                  timeFormat:\n                    minLength: 1\n                    type: string\n                  workingDaysPerWeek:\n                    type: number\n                  workingHoursPerDay:\n                    type: number\n                required:\n                  - workingHoursPerDay\n                  - workingDaysPerWeek\n                  - timeFormat\n                  - defaultUnit\n                type: object\n  \"/customFieldOption/{id}\":\n    get:\n      description: Returns a custom field option. For example, an option in a cascading\n        select list.\n      parameters:\n        - description: The ID of the custom field option. To find this ID, configure the\n            custom field and edit its options in Jira. Click the option and its\n            ID will show in the URL as the selectedParentOptionId parameter.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  self:\n                    minLength: 1\n                    type: string\n                  value:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - value\n                type: object\n  /dashboard:\n    get:\n      description: Returns a list of dashboards owned by or shared with the user. The list\n        may be filtered to include only favorite or owned dashboards.\n      parameters:\n        - description: \"The filter applied to the list of dashboards. Valid values are:\"\n          in: query\n          name: filter\n          schema:\n            type: string\n            enum:\n              - favourite\n              - my\n        - description: The maximum number of items to return per page. Maximum is 1000.\n          in: query\n          name: maxResults\n          schema:\n            type: integer\n        - description: The index of the first item to return in a page of results (page\n            offset).\n          in: query\n          name: startAt\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  dashboards:\n                    items:\n                      properties:\n                        id:\n                          minLength: 1\n                          type: string\n                        isFavourite:\n                          type: boolean\n                        name:\n                          minLength: 1\n                          type: string\n                        owner:\n                          properties:\n                            avatarUrls:\n                              properties:\n                                16x16:\n                                  minLength: 1\n                                  type: string\n                                24x24:\n                                  minLength: 1\n                                  type: string\n                                32x32:\n                                  minLength: 1\n                                  type: string\n                                48x48:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - 32x32\n                                - 16x16\n                                - 24x24\n                                - 48x48\n                              type: object\n                            displayName:\n                              minLength: 1\n                              type: string\n                            key:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                            self:\n                              minLength: 1\n                              type: string\n                          required:\n                            - key\n                            - self\n                            - name\n                            - displayName\n                            - avatarUrls\n                          type: object\n                        popularity:\n                          type: number\n                        self:\n                          minLength: 1\n                          type: string\n                        sharePermissions:\n                          items:\n                            properties:\n                              group:\n                                properties:\n                                  name:\n                                    minLength: 1\n                                    type: string\n                                  self:\n                                    minLength: 1\n                                    type: string\n                                required:\n                                  - name\n                                  - self\n                                type: object\n                              id:\n                                type: number\n                              type:\n                                minLength: 1\n                                type: string\n                            required:\n                              - id\n                              - type\n                          minItems: 1\n                          type: array\n                          uniqueItems: true\n                        view:\n                          minLength: 1\n                          type: string\n                      required:\n                        - id\n                        - isFavourite\n                        - name\n                        - popularity\n                        - self\n                        - view\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  maxResults:\n                    type: number\n                  next:\n                    minLength: 1\n                    type: string\n                  prev:\n                    minLength: 1\n                    type: string\n                  startAt:\n                    type: number\n                  total:\n                    type: number\n                required:\n                  - startAt\n                  - maxResults\n                  - total\n                  - prev\n                  - next\n                  - dashboards\n                type: object\n  \"/dashboard/{dashboardId}/items/{itemId}/properties\":\n    get:\n      description: Returns the keys of all properties for a dashboard item.\n      parameters:\n        - description: The ID of the dashboard.\n          in: path\n          name: dashboardId\n          required: true\n          schema:\n            type: string\n        - description: The ID of the dashboard item.\n          in: path\n          name: itemId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  keys:\n                    items:\n                      properties:\n                        key:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - key\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - keys\n                type: object\n  \"/dashboard/{dashboardId}/items/{itemId}/properties/{propertyKey}\":\n    delete:\n      description: Deletes a dashboard item property.\n      parameters:\n        - description: The ID of the dashboard.\n          in: path\n          name: dashboardId\n          required: true\n          schema:\n            type: string\n        - description: The ID of the dashboard item.\n          in: path\n          name: itemId\n          required: true\n          schema:\n            type: string\n        - description: The key of the dashboard item property.\n          in: path\n          name: propertyKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Returned if the dashboard item property was deleted.\n    get:\n      description: Returns the key and value of a dashboard item property.\n      parameters:\n        - description: The ID of the dashboard.\n          in: path\n          name: dashboardId\n          required: true\n          schema:\n            type: string\n        - description: The ID of the dashboard item.\n          in: path\n          name: itemId\n          required: true\n          schema:\n            type: string\n        - description: The key of the dashboard item property.\n          in: path\n          name: propertyKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  key:\n                    minLength: 1\n                    type: string\n                  value:\n                    properties:\n                      stride.conversation.id:\n                        minLength: 1\n                        type: string\n                      support.time:\n                        minLength: 1\n                        type: string\n                    required:\n                      - stride.conversation.id\n                      - support.time\n                    type: object\n                required:\n                  - key\n                  - value\n                type: object\n    put:\n      description: Sets the value of a dashboard item property. Use this resource in apps\n        to store custom data against a dashboard item.\n      parameters:\n        - description: The ID of the dashboard.\n          in: path\n          name: dashboardId\n          required: true\n          schema:\n            type: string\n        - description: The ID of the dashboard item.\n          in: path\n          name: itemId\n          required: true\n          schema:\n            type: string\n        - description: The key of the dashboard item property. The maximum length of the\n            key is 255 bytes.\n          in: path\n          name: propertyKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the dashboard item property is updated.\n  \"/dashboard/{id}\":\n    get:\n      description: Returns a dashboard.\n      parameters:\n        - description: The ID of the dashboard.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  id:\n                    minLength: 1\n                    type: string\n                  isFavourite:\n                    type: boolean\n                  name:\n                    minLength: 1\n                    type: string\n                  popularity:\n                    type: number\n                  self:\n                    minLength: 1\n                    type: string\n                  sharePermissions:\n                    items:\n                      properties:\n                        type:\n                          minLength: 1\n                          type: string\n                      required:\n                        - type\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  view:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - isFavourite\n                  - name\n                  - popularity\n                  - self\n                  - sharePermissions\n                  - view\n                type: object\n  /expression/eval:\n    post:\n      description: Evaluates a Jira expression and returns its value.\n      parameters:\n        - description: \"Use expand to include additional information in the response. This\n            parameter accepts multiple values separated by a comma:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - meta.complexity\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                context:\n                  type: object\n                expression:\n                  description: The Jira expression to evaluate.\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          description: Returned if the expression evaluated successfully. The result can be\n            any JSON, not only a primitive value but also a list or object.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  meta:\n                    properties:\n                      complexity:\n                        properties:\n                          beans:\n                            properties:\n                              limit:\n                                type: number\n                              value:\n                                type: number\n                            required:\n                              - value\n                              - limit\n                            type: object\n                          expensiveOperations:\n                            properties:\n                              limit:\n                                type: number\n                              value:\n                                type: number\n                            required:\n                              - value\n                              - limit\n                            type: object\n                          primitiveValues:\n                            properties:\n                              limit:\n                                type: number\n                              value:\n                                type: number\n                            required:\n                              - value\n                              - limit\n                            type: object\n                          steps:\n                            properties:\n                              limit:\n                                type: number\n                              value:\n                                type: number\n                            required:\n                              - value\n                              - limit\n                            type: object\n                        required:\n                          - steps\n                          - expensiveOperations\n                          - beans\n                          - primitiveValues\n                        type: object\n                    required:\n                      - complexity\n                    type: object\n                  value:\n                    minLength: 1\n                    type: string\n                required:\n                  - value\n                  - meta\n                type: object\n  /field:\n    get:\n      description: Returns all issue fields in Jira, both system and custom fields.\n      responses:\n        \"200\":\n          description: Returned if the requested fields are returned.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    clauseNames:\n                      items:\n                        properties: {}\n                      type: array\n                    custom:\n                      type: boolean\n                    id:\n                      minLength: 1\n                      type: string\n                    key:\n                      minLength: 1\n                      type: string\n                    name:\n                      minLength: 1\n                      type: string\n                    navigable:\n                      type: boolean\n                    orderable:\n                      type: boolean\n                    schema:\n                      properties:\n                        system:\n                          minLength: 1\n                          type: string\n                        type:\n                          minLength: 1\n                          type: string\n                      required:\n                        - type\n                        - system\n                      type: object\n                    searchable:\n                      type: boolean\n                  required:\n                    - id\n                    - key\n                    - name\n                    - custom\n                    - orderable\n                    - navigable\n                    - searchable\n                    - clauseNames\n                    - schema\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n    post:\n      description: Creates a custom field.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                description:\n                  description: The description of the custom field, which is displayed in\n                    the UI.\n                  type: string\n                name:\n                  description: The name of the custom field, which is displayed in the UI.\n                    This is not the unique identifier.\n                  type: string\n                searcherKey:\n                  description: \"The searcher defines the way the field is searched in Jira.\n                    For example,\n                    com.atlassian.jira.plugin.system.customfieldtypes:grouppick\\\n                    ersearcher.The search UI (basic search and JQL search) will\n                    display different operations and values for the field, based\n                    on the field searcher. You must specify a searcher that is\n                    valid for the field type, as listed below (abbreviated\n                    values shown):\"\n                  enum:\n                    - com.atlassian.jira.plugin.system.customfieldtypes:cascadingselectsearcher\n                    - com.atlassian.jira.plugin.system.customfieldtypes:daterange\n                    - com.atlassian.jira.plugin.system.customfieldtypes:datetimerange\n                    - com.atlassian.jira.plugin.system.customfieldtypes:exactnumber\n                    - com.atlassian.jira.plugin.system.customfieldtypes:exacttextsearcher\n                    - com.atlassian.jira.plugin.system.customfieldtypes:grouppickersearcher\n                    - com.atlassian.jira.plugin.system.customfieldtypes:labelsearcher\n                    - com.atlassian.jira.plugin.system.customfieldtypes:multiselectsearcher\n                    - com.atlassian.jira.plugin.system.customfieldtypes:numberrange\n                    - com.atlassian.jira.plugin.system.customfieldtypes:projectsearcher\n                  type: string\n                type:\n                  description: The type of the custom field. For example,\n                    com.atlassian.jira.plugin.system.customfieldtypes:grouppicker.\n                  enum:\n                    - com.atlassian.jira.plugin.system.customfieldtypes:cascadingselect\n                    - com.atlassian.jira.plugin.system.customfieldtypes:datepicker\n                    - com.atlassian.jira.plugin.system.customfieldtypes:datetime\n                    - com.atlassian.jira.plugin.system.customfieldtypes:float\n                    - com.atlassian.jira.plugin.system.customfieldtypes:grouppicker\n                    - com.atlassian.jira.plugin.system.customfieldtypes:importid\n                    - com.atlassian.jira.plugin.system.customfieldtypes:labels\n                    - com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes\n                    - com.atlassian.jira.plugin.system.customfieldtypes:multigrouppicker\n                    - com.atlassian.jira.plugin.system.customfieldtypes:multiselect\n                  type: string\n              type: object\n      responses:\n        \"201\":\n          description: Returned if the custom field was created.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  clauseNames:\n                    items:\n                      properties: {}\n                    type: array\n                  custom:\n                    type: boolean\n                  id:\n                    minLength: 1\n                    type: string\n                  name:\n                    minLength: 1\n                    type: string\n                  navigable:\n                    type: boolean\n                  orderable:\n                    type: boolean\n                  schema:\n                    properties:\n                      custom:\n                        minLength: 1\n                        type: string\n                      customId:\n                        type: number\n                      type:\n                        minLength: 1\n                        type: string\n                    required:\n                      - type\n                      - custom\n                      - customId\n                    type: object\n                  searchable:\n                    type: boolean\n                required:\n                  - id\n                  - name\n                  - custom\n                  - orderable\n                  - navigable\n                  - searchable\n                  - clauseNames\n                  - schema\n                type: object\n  \"/field/{fieldKey}/option\":\n    get:\n      description: Returns all options defined for a select list issue field. A select list\n        issue field is a type of issue field that allows a user to select an\n        value from a list of options.\n      parameters:\n        - description: \"The field key is specified in the following format:\n            $(app-key)__$(field-key). For example,\n            example-add-on__example-issue-field.\"\n          in: path\n          name: fieldKey\n          required: true\n          schema:\n            type: string\n        - description: The maximum number of items to return per page. For example, 20.\n          in: query\n          name: maxResults\n          schema:\n            type: integer\n        - description: The starting index of the returned objects. For example, 1.\n          in: query\n          name: startAt\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the requested options are returned.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  isLast:\n                    type: boolean\n                  maxResults:\n                    type: number\n                  nextPage:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                  startAt:\n                    type: number\n                  total:\n                    type: number\n                  values:\n                    items:\n                      properties:\n                        config:\n                          properties:\n                            attributes:\n                              items:\n                                properties: {}\n                              type: array\n                            scope:\n                              properties:\n                                global:\n                                  properties: {}\n                                  type: object\n                                projects:\n                                  items:\n                                    properties: {}\n                                  type: array\n                                projects2:\n                                  items:\n                                    properties:\n                                      attributes:\n                                        items:\n                                          properties: {}\n                                        type: array\n                                      id:\n                                        type: number\n                                    required:\n                                      - id\n                                  minItems: 1\n                                  type: array\n                                  uniqueItems: true\n                              required:\n                                - projects\n                                - projects2\n                                - global\n                              type: object\n                          required:\n                            - scope\n                            - attributes\n                          type: object\n                        id:\n                          type: number\n                        properties:\n                          properties:\n                            description:\n                              minLength: 1\n                              type: string\n                            founded:\n                              minLength: 1\n                              type: string\n                            leader:\n                              properties:\n                                email:\n                                  minLength: 1\n                                  type: string\n                                name:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - name\n                                - email\n                              type: object\n                            members:\n                              type: number\n                          required:\n                            - leader\n                            - members\n                            - description\n                            - founded\n                          type: object\n                        value:\n                          minLength: 1\n                          type: string\n                      required:\n                        - id\n                        - value\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - self\n                  - nextPage\n                  - maxResults\n                  - startAt\n                  - total\n                  - isLast\n                  - values\n                type: object\n    post:\n      description: Creates an option for a select list issue field.\n      parameters:\n        - in: path\n          name: fieldKey\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Body\"\n      responses:\n        \"200\":\n          description: Returned if the option has been created.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  config:\n                    properties:\n                      attributes:\n                        items:\n                          properties: {}\n                        type: array\n                      scope:\n                        properties:\n                          global:\n                            properties: {}\n                            type: object\n                          projects:\n                            items:\n                              properties: {}\n                            type: array\n                          projects2:\n                            items:\n                              properties:\n                                attributes:\n                                  items:\n                                    properties: {}\n                                  type: array\n                                id:\n                                  type: number\n                              required:\n                                - id\n                            minItems: 1\n                            type: array\n                            uniqueItems: true\n                        required:\n                          - projects\n                          - projects2\n                          - global\n                        type: object\n                    required:\n                      - scope\n                      - attributes\n                    type: object\n                  properties:\n                    properties:\n                      description:\n                        minLength: 1\n                        type: string\n                      founded:\n                        minLength: 1\n                        type: string\n                      leader:\n                        properties:\n                          email:\n                            minLength: 1\n                            type: string\n                          name:\n                            minLength: 1\n                            type: string\n                        required:\n                          - name\n                          - email\n                        type: object\n                      members:\n                        type: number\n                    required:\n                      - leader\n                      - members\n                      - description\n                      - founded\n                    type: object\n                  value:\n                    minLength: 1\n                    type: string\n                required:\n                  - value\n                  - properties\n                  - config\n                type: object\n  \"/field/{fieldKey}/option/suggestions/edit\":\n    get:\n      description: Returns options defined for a select list issue field that can be viewed\n        and selected by the currently logged in user.\n      parameters:\n        - description: \"The field key is specified in the following format:\n            $(app-key)__$(field-key). For example,\n            example-add-on__example-issue-field.\"\n          in: path\n          name: fieldKey\n          required: true\n          schema:\n            type: string\n        - description: The maximum number of items to return per page. For example, 20.\n          in: query\n          name: maxResults\n          schema:\n            type: integer\n        - description: Filters the results to options that are only available in the\n            specified project. For example, 10000.\n          in: query\n          name: projectId\n          schema:\n            type: integer\n        - description: The starting index of the returned objects. For example, 1.\n          in: query\n          name: startAt\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the requested options are returned.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  isLast:\n                    type: boolean\n                  maxResults:\n                    type: number\n                  nextPage:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                  startAt:\n                    type: number\n                  total:\n                    type: number\n                  values:\n                    items:\n                      properties:\n                        id:\n                          type: number\n                        properties:\n                          properties:\n                            description:\n                              minLength: 1\n                              type: string\n                            founded:\n                              minLength: 1\n                              type: string\n                            leader:\n                              properties:\n                                email:\n                                  minLength: 1\n                                  type: string\n                                name:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - name\n                                - email\n                              type: object\n                            members:\n                              type: number\n                          required:\n                            - leader\n                            - members\n                            - description\n                            - founded\n                          type: object\n                        value:\n                          minLength: 1\n                          type: string\n                      required:\n                        - id\n                        - value\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - self\n                  - nextPage\n                  - maxResults\n                  - startAt\n                  - total\n                  - isLast\n                  - values\n                type: object\n  \"/field/{fieldKey}/option/suggestions/search\":\n    get:\n      description: Returns options defined for a select list issue field that can be viewed\n        by the currently logged in user.\n      parameters:\n        - description: \"The field key is specified in the following format:\n            $(app-key)__$(field-key). For example,\n            example-add-on__example-issue-field.\"\n          in: path\n          name: fieldKey\n          required: true\n          schema:\n            type: string\n        - description: The maximum number of items to return per page. For example, 20.\n          in: query\n          name: maxResults\n          schema:\n            type: integer\n        - description: Filters the results to options that are only available in the\n            specified project. For example, 10000.\n          in: query\n          name: projectId\n          schema:\n            type: integer\n        - description: The starting index of the returned objects. For example, 1.\n          in: query\n          name: startAt\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the requested options are returned.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  isLast:\n                    type: boolean\n                  maxResults:\n                    type: number\n                  nextPage:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                  startAt:\n                    type: number\n                  total:\n                    type: number\n                  values:\n                    items:\n                      properties:\n                        id:\n                          type: number\n                        properties:\n                          properties:\n                            description:\n                              minLength: 1\n                              type: string\n                            founded:\n                              minLength: 1\n                              type: string\n                            leader:\n                              properties:\n                                email:\n                                  minLength: 1\n                                  type: string\n                                name:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - name\n                                - email\n                              type: object\n                            members:\n                              type: number\n                          required:\n                            - leader\n                            - members\n                            - description\n                            - founded\n                          type: object\n                        value:\n                          minLength: 1\n                          type: string\n                      required:\n                        - id\n                        - value\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - self\n                  - nextPage\n                  - maxResults\n                  - startAt\n                  - total\n                  - isLast\n                  - values\n                type: object\n  \"/field/{fieldKey}/option/{optionId}\":\n    delete:\n      description: Deletes an option from a select list issue field.\n      parameters:\n        - description: \"The field key is specified in the following format:\n            $(app-key)__$(field-key). For example,\n            example-add-on__example-issue-field.\"\n          in: path\n          name: fieldKey\n          required: true\n          schema:\n            type: string\n        - description: The ID of the option to be deleted. For example, 3.\n          in: path\n          name: optionId\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          description: Returned if the field option has been deleted.\n    get:\n      description: Returns an option from a select list issue field.\n      parameters:\n        - description: \"The field key is specified in the following format:\n            $(app-key)__$(field-key). For example,\n            example-add-on__example-issue-field.\"\n          in: path\n          name: fieldKey\n          required: true\n          schema:\n            type: string\n        - description: The ID of the option to be returned. For example, 3.\n          in: path\n          name: optionId\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the requested option is returned.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  config:\n                    properties:\n                      attributes:\n                        items:\n                          properties: {}\n                        type: array\n                      scope:\n                        properties:\n                          global:\n                            properties: {}\n                            type: object\n                          projects:\n                            items:\n                              properties: {}\n                            type: array\n                          projects2:\n                            items:\n                              properties:\n                                attributes:\n                                  items:\n                                    properties: {}\n                                  type: array\n                                id:\n                                  type: number\n                              required:\n                                - id\n                            minItems: 1\n                            type: array\n                            uniqueItems: true\n                        required:\n                          - projects\n                          - projects2\n                          - global\n                        type: object\n                    required:\n                      - scope\n                      - attributes\n                    type: object\n                  id:\n                    type: number\n                  properties:\n                    properties:\n                      description:\n                        minLength: 1\n                        type: string\n                      founded:\n                        minLength: 1\n                        type: string\n                      leader:\n                        properties:\n                          email:\n                            minLength: 1\n                            type: string\n                          name:\n                            minLength: 1\n                            type: string\n                        required:\n                          - name\n                          - email\n                        type: object\n                      members:\n                        type: number\n                    required:\n                      - leader\n                      - members\n                      - description\n                      - founded\n                    type: object\n                  value:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - value\n                  - properties\n                  - config\n                type: object\n    put:\n      description: Updates an option for a select list issue field. If the option does not\n        exist, a new option is created.\n      parameters:\n        - description: \"The field key is specified in the following format:\n            $(app-key)__$(field-key). For example,\n            example-add-on__example-issue-field.\"\n          in: path\n          name: fieldKey\n          required: true\n          schema:\n            type: string\n        - description: The ID of the option to be updated. For example, 3.\n          in: path\n          name: optionId\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        $ref: \"#/components/requestBodies/Body\"\n      responses:\n        \"200\":\n          description: Returned if the option has been updated or created.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  config:\n                    properties:\n                      attributes:\n                        items:\n                          properties: {}\n                        type: array\n                      scope:\n                        properties:\n                          global:\n                            properties: {}\n                            type: object\n                          projects:\n                            items:\n                              properties: {}\n                            type: array\n                          projects2:\n                            items:\n                              properties:\n                                attributes:\n                                  items:\n                                    properties: {}\n                                  type: array\n                                id:\n                                  type: number\n                              required:\n                                - id\n                            minItems: 1\n                            type: array\n                            uniqueItems: true\n                        required:\n                          - projects\n                          - projects2\n                          - global\n                        type: object\n                    required:\n                      - scope\n                      - attributes\n                    type: object\n                  id:\n                    type: number\n                  properties:\n                    properties:\n                      description:\n                        minLength: 1\n                        type: string\n                      founded:\n                        minLength: 1\n                        type: string\n                      leader:\n                        properties:\n                          email:\n                            minLength: 1\n                            type: string\n                          name:\n                            minLength: 1\n                            type: string\n                        required:\n                          - name\n                          - email\n                        type: object\n                      members:\n                        type: number\n                    required:\n                      - leader\n                      - members\n                      - description\n                      - founded\n                    type: object\n                  value:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - value\n                  - properties\n                  - config\n                type: object\n  \"/field/{fieldKey}/option/{optionId}/issue\":\n    delete:\n      description: Deselects a select list issue field option in all issues that it has\n        been selected in. A different option can be selected to replace the\n        deselected option. The update can also be limited to a smaller set of\n        issues by using a JQL query.\n      parameters:\n        - description: \"The field key is specified in the following format:\n            $(app-key)__$(field-key). For example,\n            example-add-on__example-issue-field.\"\n          in: path\n          name: fieldKey\n          required: true\n          schema:\n            type: string\n        - description: A JQL query that specifies the issues to be updated. For example,\n            project=10000.\n          in: query\n          name: jql\n          schema:\n            type: string\n        - description: The ID of the option to be deselected. For example, 3.\n          in: path\n          name: optionId\n          required: true\n          schema:\n            type: integer\n        - description: The ID of the option that will replace the currently selected\n            option. For example, 2.\n          in: query\n          name: replaceWith\n          schema:\n            type: integer\n      responses:\n        \"303\":\n          description: Example response (application/json)\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  description:\n                    minLength: 1\n                    type: string\n                  elapsedRuntime:\n                    type: number\n                  id:\n                    minLength: 1\n                    type: string\n                  result:\n                    properties:\n                      errors:\n                        properties:\n                          errorMessages:\n                            items:\n                              properties: {}\n                            type: array\n                          errors:\n                            properties: {}\n                            type: object\n                        required:\n                          - errors\n                          - errorMessages\n                        type: object\n                      modifiedIssues:\n                        items:\n                          properties: {}\n                        type: array\n                      unmodifiedIssues:\n                        items:\n                          properties: {}\n                        type: array\n                    required:\n                      - modifiedIssues\n                      - unmodifiedIssues\n                      - errors\n                    type: object\n                  self:\n                    minLength: 1\n                    type: string\n                  status:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - id\n                  - description\n                  - status\n                  - result\n                  - elapsedRuntime\n                type: object\n  /filter:\n    get:\n      description: \"Returns all filters. Deprecated, use Search for filters that supports\n        search and pagination. Permissions required: None, however only the\n        following filters are returned:\"\n      parameters:\n        - description: \"Use expand to include additional information about filter in the\n            response. This parameter accepts multiple values separated by a\n            comma:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - sharedUsers\n              - subscriptions\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  description:\n                    minLength: 1\n                    type: string\n                  favourite:\n                    type: boolean\n                  favouritedCount:\n                    type: number\n                  id:\n                    minLength: 1\n                    type: string\n                  jql:\n                    minLength: 1\n                    type: string\n                  name:\n                    minLength: 1\n                    type: string\n                  owner:\n                    properties:\n                      accountId:\n                        minLength: 1\n                        type: string\n                      active:\n                        type: boolean\n                      avatarUrls:\n                        properties:\n                          16x16:\n                            minLength: 1\n                            type: string\n                          24x24:\n                            minLength: 1\n                            type: string\n                          32x32:\n                            minLength: 1\n                            type: string\n                          48x48:\n                            minLength: 1\n                            type: string\n                        required:\n                          - 48x48\n                          - 24x24\n                          - 16x16\n                          - 32x32\n                        type: object\n                      displayName:\n                        minLength: 1\n                        type: string\n                      key:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - key\n                      - accountId\n                      - name\n                      - avatarUrls\n                      - displayName\n                      - active\n                    type: object\n                  searchUrl:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                  sharePermissions:\n                    items:\n                      properties: {}\n                    type: array\n                  subscriptions:\n                    properties:\n                      end-index:\n                        type: number\n                      items:\n                        items:\n                          properties: {}\n                        type: array\n                      max-results:\n                        type: number\n                      size:\n                        type: number\n                      start-index:\n                        type: number\n                    required:\n                      - size\n                      - items\n                      - max-results\n                      - start-index\n                      - end-index\n                    type: object\n                  viewUrl:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - id\n                  - name\n                  - description\n                  - owner\n                  - jql\n                  - viewUrl\n                  - searchUrl\n                  - favourite\n                  - favouritedCount\n                  - sharePermissions\n                  - subscriptions\n                type: object\n    post:\n      description: \"Creates a new filter. The new filter is not shared and not selected as\n        a favorite. Permissions required: Permission to log in to Jira.\"\n      parameters:\n        - description: \"Use expand to include additional information about filter in the\n            response. This parameter accepts multiple values separated by a\n            comma:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - sharedUsers\n              - subscriptions\n      requestBody:\n        $ref: \"#/components/requestBodies/Body7\"\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  description:\n                    minLength: 1\n                    type: string\n                  favourite:\n                    type: boolean\n                  favouritedCount:\n                    type: number\n                  id:\n                    minLength: 1\n                    type: string\n                  jql:\n                    minLength: 1\n                    type: string\n                  name:\n                    minLength: 1\n                    type: string\n                  owner:\n                    properties:\n                      accountId:\n                        minLength: 1\n                        type: string\n                      active:\n                        type: boolean\n                      avatarUrls:\n                        properties:\n                          16x16:\n                            minLength: 1\n                            type: string\n                          24x24:\n                            minLength: 1\n                            type: string\n                          32x32:\n                            minLength: 1\n                            type: string\n                          48x48:\n                            minLength: 1\n                            type: string\n                        required:\n                          - 48x48\n                          - 24x24\n                          - 16x16\n                          - 32x32\n                        type: object\n                      displayName:\n                        minLength: 1\n                        type: string\n                      key:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - key\n                      - accountId\n                      - name\n                      - avatarUrls\n                      - displayName\n                      - active\n                    type: object\n                  searchUrl:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                  sharePermissions:\n                    items:\n                      properties: {}\n                    type: array\n                  subscriptions:\n                    properties:\n                      end-index:\n                        type: number\n                      items:\n                        items:\n                          properties: {}\n                        type: array\n                      max-results:\n                        type: number\n                      size:\n                        type: number\n                      start-index:\n                        type: number\n                    required:\n                      - size\n                      - items\n                      - max-results\n                      - start-index\n                      - end-index\n                    type: object\n                  viewUrl:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - id\n                  - name\n                  - description\n                  - owner\n                  - jql\n                  - viewUrl\n                  - searchUrl\n                  - favourite\n                  - favouritedCount\n                  - sharePermissions\n                  - subscriptions\n                type: object\n  /filter/defaultShareScope:\n    get:\n      description: \"Returns the default sharing settings for new filters and dashboards for\n        a user. Permissions required: Permission to log in to Jira (i.e., member\n        of the users group).\"\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  scope:\n                    minLength: 1\n                    type: string\n                required:\n                  - scope\n                type: object\n    put:\n      description: \"Sets the default sharing for new filters and dashboards for a user.\n        Permissions required: Permission to log in to Jira (i.e., member of the\n        users group).\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                scope:\n                  description: \"The scope of the default sharing for new filters and\n                    dashboards:\"\n                  enum:\n                    - GLOBAL\n                    - AUTHENTICATED\n                    - PRIVATE\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  scope:\n                    minLength: 1\n                    type: string\n                required:\n                  - scope\n                type: object\n  /filter/favourite:\n    get:\n      description: \"Returns the favorite filters of the calling user. Permissions required:\n        Permission to log in to Jira (i.e., member of the users group).\"\n      parameters:\n        - description: \"Use expand to include additional information about filter in the\n            response. This parameter accepts multiple values separated by a\n            comma:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - sharedUsers\n              - subscriptions\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    description:\n                      minLength: 1\n                      type: string\n                    favourite:\n                      type: boolean\n                    favouritedCount:\n                      type: number\n                    id:\n                      minLength: 1\n                      type: string\n                    jql:\n                      minLength: 1\n                      type: string\n                    name:\n                      minLength: 1\n                      type: string\n                    owner:\n                      properties:\n                        accountId:\n                          minLength: 1\n                          type: string\n                        active:\n                          type: boolean\n                        avatarUrls:\n                          properties:\n                            16x16:\n                              minLength: 1\n                              type: string\n                            24x24:\n                              minLength: 1\n                              type: string\n                            32x32:\n                              minLength: 1\n                              type: string\n                            48x48:\n                              minLength: 1\n                              type: string\n                          required:\n                            - 48x48\n                            - 24x24\n                            - 16x16\n                            - 32x32\n                          type: object\n                        displayName:\n                          minLength: 1\n                          type: string\n                        key:\n                          minLength: 1\n                          type: string\n                        name:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - key\n                        - accountId\n                        - name\n                        - avatarUrls\n                        - displayName\n                        - active\n                      type: object\n                    searchUrl:\n                      minLength: 1\n                      type: string\n                    self:\n                      minLength: 1\n                      type: string\n                    sharePermissions:\n                      items:\n                        properties: {}\n                      type: array\n                    subscriptions:\n                      properties:\n                        end-index:\n                          type: number\n                        items:\n                          items:\n                            properties: {}\n                          type: array\n                        max-results:\n                          type: number\n                        size:\n                          type: number\n                        start-index:\n                          type: number\n                      required:\n                        - size\n                        - items\n                        - max-results\n                        - start-index\n                        - end-index\n                      type: object\n                    viewUrl:\n                      minLength: 1\n                      type: string\n                  required:\n                    - self\n                    - id\n                    - name\n                    - description\n                    - owner\n                    - jql\n                    - viewUrl\n                    - searchUrl\n                    - favourite\n                    - favouritedCount\n                    - sharePermissions\n                    - subscriptions\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n  /filter/my:\n    get:\n      description: \"Returns the filters owned by the calling user. If includeFavourites is\n        true, the user's favorite filters are also returned. Permissions\n        required: Permission to log in to Jira (i.e., member of the users\n        group).\"\n      parameters:\n        - description: \"Use expand to include additional information about filter in the\n            response. This parameter accepts multiple values separated by a\n            comma:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - sharedUsers\n              - subscriptions\n        - description: Include the user's favorite filters in the response.\n          in: query\n          name: includeFavourites\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    description:\n                      minLength: 1\n                      type: string\n                    favourite:\n                      type: boolean\n                    favouritedCount:\n                      type: number\n                    id:\n                      minLength: 1\n                      type: string\n                    jql:\n                      minLength: 1\n                      type: string\n                    name:\n                      minLength: 1\n                      type: string\n                    owner:\n                      properties:\n                        accountId:\n                          minLength: 1\n                          type: string\n                        active:\n                          type: boolean\n                        avatarUrls:\n                          properties:\n                            16x16:\n                              minLength: 1\n                              type: string\n                            24x24:\n                              minLength: 1\n                              type: string\n                            32x32:\n                              minLength: 1\n                              type: string\n                            48x48:\n                              minLength: 1\n                              type: string\n                          required:\n                            - 48x48\n                            - 24x24\n                            - 16x16\n                            - 32x32\n                          type: object\n                        displayName:\n                          minLength: 1\n                          type: string\n                        key:\n                          minLength: 1\n                          type: string\n                        name:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - key\n                        - accountId\n                        - name\n                        - avatarUrls\n                        - displayName\n                        - active\n                      type: object\n                    searchUrl:\n                      minLength: 1\n                      type: string\n                    self:\n                      minLength: 1\n                      type: string\n                    sharePermissions:\n                      items:\n                        properties: {}\n                      type: array\n                    subscriptions:\n                      properties:\n                        end-index:\n                          type: number\n                        items:\n                          items:\n                            properties: {}\n                          type: array\n                        max-results:\n                          type: number\n                        size:\n                          type: number\n                        start-index:\n                          type: number\n                      required:\n                        - size\n                        - items\n                        - max-results\n                        - start-index\n                        - end-index\n                      type: object\n                    viewUrl:\n                      minLength: 1\n                      type: string\n                  required:\n                    - self\n                    - id\n                    - name\n                    - description\n                    - owner\n                    - jql\n                    - viewUrl\n                    - searchUrl\n                    - favourite\n                    - favouritedCount\n                    - sharePermissions\n                    - subscriptions\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n  /filter/search:\n    get:\n      description: \"Search for filters. This method is similar to Get filters except that\n        you can refine the results to include filters that have specific\n        attributes. For example, filters with a particular name. Permissions\n        required: None, however only the following filters are returned (if no\n        search parameters are set):\"\n      parameters:\n        - description: Returns filters with an owner that exactly matches accountId of the\n            owner. This parameter cannot be used with the owner parameter.\n          in: query\n          name: accountId\n          schema:\n            type: string\n        - description: \"Use expand to include additional information about filter in the\n            response. This parameter accepts multiple values separated by a\n            comma:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - sharedUsers\n              - subscriptions\n        - description: Returns filters with a name that partially matches filterName.\n          in: query\n          name: filterName\n          schema:\n            type: string\n        - description: Returns filters that are shared with a group that has a name that\n            exactly matches groupname.\n          in: query\n          name: groupname\n          schema:\n            type: string\n        - description: The maximum number of items to return per page. Max is 50.\n          in: query\n          name: maxResults\n          schema:\n            type: integer\n        - description: Orders the results by a property of the filter. For example, name.\n          in: query\n          name: orderBy\n          schema:\n            type: string\n            enum:\n              - id\n              - name\n              - description\n              - owner\n              - favourite_count\n              - favouritedCount\n              - is_favourite\n              - favourite\n        - description: Returns filters with an owner that exactly matches owner. This\n            parameter cannot be used with the accountId parameter.\n          in: query\n          name: owner\n          schema:\n            type: string\n        - description: Returns filters that are shared with a project that has an ID that\n            exactly matches projectId.\n          in: query\n          name: projectId\n          schema:\n            type: integer\n        - description: The index of the first item to return in a page of results (page\n            offset). The base index is 0.\n          in: query\n          name: startAt\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  isLast:\n                    type: boolean\n                  maxResults:\n                    type: number\n                  self:\n                    minLength: 1\n                    type: string\n                  startAt:\n                    type: number\n                  total:\n                    type: number\n                  values:\n                    items:\n                      properties:\n                        description:\n                          minLength: 1\n                          type: string\n                        favourite:\n                          type: boolean\n                        favouritedCount:\n                          type: number\n                        id:\n                          minLength: 1\n                          type: string\n                        jql:\n                          minLength: 1\n                          type: string\n                        name:\n                          minLength: 1\n                          type: string\n                        owner:\n                          properties:\n                            accountId:\n                              minLength: 1\n                              type: string\n                            active:\n                              type: boolean\n                            avatarUrls:\n                              properties:\n                                16x16:\n                                  minLength: 1\n                                  type: string\n                                24x24:\n                                  minLength: 1\n                                  type: string\n                                32x32:\n                                  minLength: 1\n                                  type: string\n                                48x48:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - 48x48\n                                - 24x24\n                                - 16x16\n                                - 32x32\n                              type: object\n                            displayName:\n                              minLength: 1\n                              type: string\n                            key:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                            self:\n                              minLength: 1\n                              type: string\n                          required:\n                            - self\n                            - key\n                            - accountId\n                            - name\n                            - avatarUrls\n                            - displayName\n                            - active\n                          type: object\n                        searchUrl:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                        sharePermissions:\n                          items:\n                            properties: {}\n                          type: array\n                        subscriptions:\n                          items:\n                            properties: {}\n                          type: array\n                        viewUrl:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - id\n                        - name\n                        - description\n                        - jql\n                        - viewUrl\n                        - searchUrl\n                        - favourite\n                        - favouritedCount\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - self\n                  - maxResults\n                  - startAt\n                  - total\n                  - isLast\n                  - values\n                type: object\n  \"/filter/{id}\":\n    delete:\n      description: \"Delete a filter. Permissions required: Permission to log in to Jira,\n        however the following rules govern what a user can delete:\"\n      parameters:\n        - description: The ID of the filter to delete.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n    get:\n      description: \"Returns a filter. Permissions required: None, however the calling user\n        must have permission view the filter.\"\n      parameters:\n        - description: \"Use expand to include additional information about filter in the\n            response. This parameter accepts multiple values separated by a\n            comma:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - sharedUsers\n              - subscriptions\n        - description: The ID of the filter to return.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  description:\n                    minLength: 1\n                    type: string\n                  favourite:\n                    type: boolean\n                  favouritedCount:\n                    type: number\n                  id:\n                    minLength: 1\n                    type: string\n                  jql:\n                    minLength: 1\n                    type: string\n                  name:\n                    minLength: 1\n                    type: string\n                  owner:\n                    properties:\n                      accountId:\n                        minLength: 1\n                        type: string\n                      active:\n                        type: boolean\n                      avatarUrls:\n                        properties:\n                          16x16:\n                            minLength: 1\n                            type: string\n                          24x24:\n                            minLength: 1\n                            type: string\n                          32x32:\n                            minLength: 1\n                            type: string\n                          48x48:\n                            minLength: 1\n                            type: string\n                        required:\n                          - 48x48\n                          - 24x24\n                          - 16x16\n                          - 32x32\n                        type: object\n                      displayName:\n                        minLength: 1\n                        type: string\n                      key:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - key\n                      - accountId\n                      - name\n                      - avatarUrls\n                      - displayName\n                      - active\n                    type: object\n                  searchUrl:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                  sharePermissions:\n                    items:\n                      properties: {}\n                    type: array\n                  subscriptions:\n                    properties:\n                      end-index:\n                        type: number\n                      items:\n                        items:\n                          properties: {}\n                        type: array\n                      max-results:\n                        type: number\n                      size:\n                        type: number\n                      start-index:\n                        type: number\n                    required:\n                      - size\n                      - items\n                      - max-results\n                      - start-index\n                      - end-index\n                    type: object\n                  viewUrl:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - id\n                  - name\n                  - description\n                  - owner\n                  - jql\n                  - viewUrl\n                  - searchUrl\n                  - favourite\n                  - favouritedCount\n                  - sharePermissions\n                  - subscriptions\n                type: object\n    put:\n      description: \"Updates an existing filter. Use this method to update a filter's name,\n        description, JQL, or sharing. Permissions required: Permission to log in\n        to Jira, however the following rules govern what a user can update:\"\n      parameters:\n        - description: \"Use expand to include additional information about filter in the\n            response. This parameter accepts multiple values separated by a\n            comma:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - sharedUsers\n              - subscriptions\n        - description: The ID of the filter to update.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        $ref: \"#/components/requestBodies/Body7\"\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  description:\n                    minLength: 1\n                    type: string\n                  favourite:\n                    type: boolean\n                  favouritedCount:\n                    type: number\n                  id:\n                    minLength: 1\n                    type: string\n                  jql:\n                    minLength: 1\n                    type: string\n                  name:\n                    minLength: 1\n                    type: string\n                  owner:\n                    properties:\n                      accountId:\n                        minLength: 1\n                        type: string\n                      active:\n                        type: boolean\n                      avatarUrls:\n                        properties:\n                          16x16:\n                            minLength: 1\n                            type: string\n                          24x24:\n                            minLength: 1\n                            type: string\n                          32x32:\n                            minLength: 1\n                            type: string\n                          48x48:\n                            minLength: 1\n                            type: string\n                        required:\n                          - 48x48\n                          - 24x24\n                          - 16x16\n                          - 32x32\n                        type: object\n                      displayName:\n                        minLength: 1\n                        type: string\n                      key:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - key\n                      - accountId\n                      - name\n                      - avatarUrls\n                      - displayName\n                      - active\n                    type: object\n                  searchUrl:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                  sharePermissions:\n                    items:\n                      properties: {}\n                    type: array\n                  subscriptions:\n                    properties:\n                      end-index:\n                        type: number\n                      items:\n                        items:\n                          properties: {}\n                        type: array\n                      max-results:\n                        type: number\n                      size:\n                        type: number\n                      start-index:\n                        type: number\n                    required:\n                      - size\n                      - items\n                      - max-results\n                      - start-index\n                      - end-index\n                    type: object\n                  viewUrl:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - id\n                  - name\n                  - description\n                  - owner\n                  - jql\n                  - viewUrl\n                  - searchUrl\n                  - favourite\n                  - favouritedCount\n                  - sharePermissions\n                  - subscriptions\n                type: object\n  \"/filter/{id}/columns\":\n    delete:\n      description: \"Reset the user's column configuration for the filter to the default.\n        Permissions required: Permission to log in to Jira (i.e., member of the\n        users group) and permission to view the filter.\"\n      parameters:\n        - description: The ID of the filter.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n    get:\n      description: \"Returns the columns configured for a filter. The column configuration\n        is used when the filter's results are viewed in List View with the\n        Columns set to Filter. Permissions required: None, however the calling\n        user must have permission to view the filter.\"\n      parameters:\n        - description: The ID of the filter.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    label:\n                      minLength: 1\n                      type: string\n                    value:\n                      minLength: 1\n                      type: string\n                  required:\n                    - label\n                    - value\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n    put:\n      description: \"Sets the columns for a filter. Only navigable fields can be set as\n        columns. Use Get fields to get the list fields in Jira. A navigable\n        field has navigable set to true. Permissions required: Permission to log\n        in to Jira (i.e., member of the users group) and permission to view the\n        filter.\"\n      parameters:\n        - description: The ID of the filter.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n  \"/filter/{id}/favourite\":\n    delete:\n      description: \"Removes a filter as a favorite for the calling user. Permissions\n        required: Permission to log in to Jira (i.e., member of the users group)\n        and permission to view the filter.\"\n      parameters:\n        - description: \"Use expand to include additional information about filter in the\n            response. This parameter accepts multiple values separated by a\n            comma:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - sharedUsers\n              - subscriptions\n        - description: The ID of the filter.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  description:\n                    minLength: 1\n                    type: string\n                  favourite:\n                    type: boolean\n                  favouritedCount:\n                    type: number\n                  id:\n                    minLength: 1\n                    type: string\n                  jql:\n                    minLength: 1\n                    type: string\n                  name:\n                    minLength: 1\n                    type: string\n                  owner:\n                    properties:\n                      accountId:\n                        minLength: 1\n                        type: string\n                      active:\n                        type: boolean\n                      avatarUrls:\n                        properties:\n                          16x16:\n                            minLength: 1\n                            type: string\n                          24x24:\n                            minLength: 1\n                            type: string\n                          32x32:\n                            minLength: 1\n                            type: string\n                          48x48:\n                            minLength: 1\n                            type: string\n                        required:\n                          - 48x48\n                          - 24x24\n                          - 16x16\n                          - 32x32\n                        type: object\n                      displayName:\n                        minLength: 1\n                        type: string\n                      key:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - key\n                      - accountId\n                      - name\n                      - avatarUrls\n                      - displayName\n                      - active\n                    type: object\n                  searchUrl:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                  sharePermissions:\n                    items:\n                      properties: {}\n                    type: array\n                  subscriptions:\n                    properties:\n                      end-index:\n                        type: number\n                      items:\n                        items:\n                          properties: {}\n                        type: array\n                      max-results:\n                        type: number\n                      size:\n                        type: number\n                      start-index:\n                        type: number\n                    required:\n                      - size\n                      - items\n                      - max-results\n                      - start-index\n                      - end-index\n                    type: object\n                  viewUrl:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - id\n                  - name\n                  - description\n                  - owner\n                  - jql\n                  - viewUrl\n                  - searchUrl\n                  - favourite\n                  - favouritedCount\n                  - sharePermissions\n                  - subscriptions\n                type: object\n    put:\n      description: \"Add a filter as a favorite for the calling user. Permissions required:\n        Permission to log in to Jira (i.e., member of the users group) and\n        permission to view the filter.\"\n      parameters:\n        - description: \"Use expand to include additional information about filter in the\n            response. This parameter accepts multiple values separated by a\n            comma:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - sharedUsers\n              - subscriptions\n        - description: The ID of the filter.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  description:\n                    minLength: 1\n                    type: string\n                  favourite:\n                    type: boolean\n                  favouritedCount:\n                    type: number\n                  id:\n                    minLength: 1\n                    type: string\n                  jql:\n                    minLength: 1\n                    type: string\n                  name:\n                    minLength: 1\n                    type: string\n                  owner:\n                    properties:\n                      accountId:\n                        minLength: 1\n                        type: string\n                      active:\n                        type: boolean\n                      avatarUrls:\n                        properties:\n                          16x16:\n                            minLength: 1\n                            type: string\n                          24x24:\n                            minLength: 1\n                            type: string\n                          32x32:\n                            minLength: 1\n                            type: string\n                          48x48:\n                            minLength: 1\n                            type: string\n                        required:\n                          - 48x48\n                          - 24x24\n                          - 16x16\n                          - 32x32\n                        type: object\n                      displayName:\n                        minLength: 1\n                        type: string\n                      key:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - key\n                      - accountId\n                      - name\n                      - avatarUrls\n                      - displayName\n                      - active\n                    type: object\n                  searchUrl:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                  sharePermissions:\n                    items:\n                      properties: {}\n                    type: array\n                  subscriptions:\n                    properties:\n                      end-index:\n                        type: number\n                      items:\n                        items:\n                          properties: {}\n                        type: array\n                      max-results:\n                        type: number\n                      size:\n                        type: number\n                      start-index:\n                        type: number\n                    required:\n                      - size\n                      - items\n                      - max-results\n                      - start-index\n                      - end-index\n                    type: object\n                  viewUrl:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - id\n                  - name\n                  - description\n                  - owner\n                  - jql\n                  - viewUrl\n                  - searchUrl\n                  - favourite\n                  - favouritedCount\n                  - sharePermissions\n                  - subscriptions\n                type: object\n  \"/filter/{id}/permission\":\n    get:\n      description: \"Returns the share permissions for a filter. A filter can be shared with\n        groups, projects, all logged-in users, or the public. Sharing with all\n        logged-in users or the public is known as a global share permission.\n        Permissions required: None, however the calling user must have\n        permission to view the filter.\"\n      parameters:\n        - description: The ID of the filter.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    id:\n                      type: number\n                    project:\n                      properties:\n                        avatarUrls:\n                          properties:\n                            16x16:\n                              minLength: 1\n                              type: string\n                            24x24:\n                              minLength: 1\n                              type: string\n                            32x32:\n                              minLength: 1\n                              type: string\n                            48x48:\n                              minLength: 1\n                              type: string\n                          required:\n                            - 48x48\n                            - 24x24\n                            - 16x16\n                            - 32x32\n                          type: object\n                        id:\n                          minLength: 1\n                          type: string\n                        key:\n                          minLength: 1\n                          type: string\n                        name:\n                          minLength: 1\n                          type: string\n                        projectCategory:\n                          properties:\n                            description:\n                              minLength: 1\n                              type: string\n                            id:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                            self:\n                              minLength: 1\n                              type: string\n                          required:\n                            - self\n                            - id\n                            - name\n                            - description\n                          type: object\n                        self:\n                          minLength: 1\n                          type: string\n                        simplified:\n                          type: boolean\n                        style:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - id\n                        - key\n                        - name\n                        - avatarUrls\n                        - projectCategory\n                        - simplified\n                        - style\n                      type: object\n                    role:\n                      properties:\n                        actors:\n                          items:\n                            properties:\n                              actorGroup:\n                                properties:\n                                  displayName:\n                                    minLength: 1\n                                    type: string\n                                  name:\n                                    minLength: 1\n                                    type: string\n                                required:\n                                  - name\n                                  - displayName\n                                type: object\n                              displayName:\n                                minLength: 1\n                                type: string\n                              id:\n                                type: number\n                              name:\n                                minLength: 1\n                                type: string\n                              type:\n                                minLength: 1\n                                type: string\n                            required:\n                              - id\n                              - displayName\n                              - type\n                              - name\n                          minItems: 1\n                          type: array\n                          uniqueItems: true\n                        description:\n                          minLength: 1\n                          type: string\n                        id:\n                          type: number\n                        name:\n                          minLength: 1\n                          type: string\n                        scope:\n                          properties:\n                            project:\n                              properties:\n                                id:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - id\n                              type: object\n                            type:\n                              minLength: 1\n                              type: string\n                          required:\n                            - type\n                            - project\n                          type: object\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - name\n                        - id\n                        - description\n                        - actors\n                        - scope\n                      type: object\n                    type:\n                      minLength: 1\n                      type: string\n                  required:\n                    - id\n                    - type\n                    - project\n                    - role\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n    post:\n      description: \"Add a share permissions to a filter. If you add a global share\n        permission (i.e., all logged-in users or the public) it will overwrite\n        all share permissions for the filter.Be aware that this method uses\n        different objects for updating share permissions compared to Update\n        filter. Permissions required: Share dashboards and filters global\n        permission and the calling user must own the filter.\"\n      parameters:\n        - description: The ID of the filter.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                groupname:\n                  description: The name of the group to share the filter with. Set type to\n                    group.\n                  type: string\n                projectId:\n                  description: The ID of the project to share the filter with. Set type to\n                    project.\n                  type: string\n                projectRoleId:\n                  description: The ID of the project role to share the filter with. Set\n                    type to projectRole and the projectId for the project that\n                    the role is in.\n                  type: string\n                type:\n                  description: \"The type of the share permission.Specify the type as\n                    follows:\"\n                  enum:\n                    - project\n                    - group\n                    - projectRole\n                    - global\n                    - authenticated\n                  type: string\n              type: object\n      responses:\n        \"201\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    id:\n                      type: number\n                    project:\n                      properties:\n                        avatarUrls:\n                          properties:\n                            16x16:\n                              minLength: 1\n                              type: string\n                            24x24:\n                              minLength: 1\n                              type: string\n                            32x32:\n                              minLength: 1\n                              type: string\n                            48x48:\n                              minLength: 1\n                              type: string\n                          required:\n                            - 48x48\n                            - 24x24\n                            - 16x16\n                            - 32x32\n                          type: object\n                        id:\n                          minLength: 1\n                          type: string\n                        key:\n                          minLength: 1\n                          type: string\n                        name:\n                          minLength: 1\n                          type: string\n                        projectCategory:\n                          properties:\n                            description:\n                              minLength: 1\n                              type: string\n                            id:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                            self:\n                              minLength: 1\n                              type: string\n                          required:\n                            - self\n                            - id\n                            - name\n                            - description\n                          type: object\n                        self:\n                          minLength: 1\n                          type: string\n                        simplified:\n                          type: boolean\n                        style:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - id\n                        - key\n                        - name\n                        - avatarUrls\n                        - projectCategory\n                        - simplified\n                        - style\n                      type: object\n                    role:\n                      properties:\n                        actors:\n                          items:\n                            properties:\n                              actorGroup:\n                                properties:\n                                  displayName:\n                                    minLength: 1\n                                    type: string\n                                  name:\n                                    minLength: 1\n                                    type: string\n                                required:\n                                  - name\n                                  - displayName\n                                type: object\n                              displayName:\n                                minLength: 1\n                                type: string\n                              id:\n                                type: number\n                              name:\n                                minLength: 1\n                                type: string\n                              type:\n                                minLength: 1\n                                type: string\n                            required:\n                              - id\n                              - displayName\n                              - type\n                              - name\n                          minItems: 1\n                          type: array\n                          uniqueItems: true\n                        description:\n                          minLength: 1\n                          type: string\n                        id:\n                          type: number\n                        name:\n                          minLength: 1\n                          type: string\n                        scope:\n                          properties:\n                            project:\n                              properties:\n                                id:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - id\n                              type: object\n                            type:\n                              minLength: 1\n                              type: string\n                          required:\n                            - type\n                            - project\n                          type: object\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - name\n                        - id\n                        - description\n                        - actors\n                        - scope\n                      type: object\n                    type:\n                      minLength: 1\n                      type: string\n                  required:\n                    - id\n                    - type\n                    - project\n                    - role\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n  \"/filter/{id}/permission/{permissionId}\":\n    delete:\n      description: \"Deletes a share permission from a filter. Permissions required:\n        Permission to log in to Jira (i.e., member of the users group) and the\n        calling user must own the filter.\"\n      parameters:\n        - description: The ID of the filter.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: The ID of the share permission.\n          in: path\n          name: permissionId\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n    get:\n      description: \"Returns a share permission for a filter. A filter can be shared with\n        groups, projects, all logged-in users, or the public. Sharing with all\n        logged-in users or the public is known as a global share permission.\n        Permissions required: None, however the calling user must have\n        permission to view the filter.\"\n      parameters:\n        - description: The ID of the filter.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: The ID of the share permission.\n          in: path\n          name: permissionId\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  id:\n                    type: number\n                  type:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - type\n                type: object\n  /group:\n    delete:\n      description: Deletes a group.\n      parameters:\n        - description: The name of the group.\n          in: query\n          name: groupname\n          schema:\n            type: string\n        - description: The group to transfer restrictions to. Only comments and worklogs\n            are transferred. If restrictions are not transferred, comments and\n            worklogs will be inaccessible after the deletion.\n          in: query\n          name: swapGroup\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the group was deleted.\n    get:\n      description: This resource is deprecated, use group/member.\n      parameters:\n        - description: List of fields to expand.\n          in: query\n          name: expand\n          schema:\n            type: string\n        - description: The name of the group.\n          in: query\n          name: groupname\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the requested group is returned.\n    post:\n      description: Creates a group.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                name:\n                  description: The name of the group.\n                  type: string\n              type: object\n      responses:\n        \"201\":\n          description: Returns the group details.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  expand:\n                    minLength: 1\n                    type: string\n                  name:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                  users:\n                    properties:\n                      end-index:\n                        type: number\n                      items:\n                        items:\n                          properties:\n                            active:\n                              type: boolean\n                            displayName:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                            self:\n                              minLength: 1\n                              type: string\n                          required:\n                            - self\n                            - name\n                            - displayName\n                            - active\n                        minItems: 1\n                        type: array\n                        uniqueItems: true\n                      max-results:\n                        type: number\n                      size:\n                        type: number\n                      start-index:\n                        type: number\n                    required:\n                      - size\n                      - items\n                      - max-results\n                      - start-index\n                      - end-index\n                    type: object\n                required:\n                  - name\n                  - self\n                  - users\n                  - expand\n                type: object\n  /group/member:\n    get:\n      description: Returns all users in a group. Users are ordered by username.\n      parameters:\n        - description: The name of the group.\n          in: query\n          name: groupname\n          schema:\n            type: string\n        - description: Include inactive users.\n          in: query\n          name: includeInactiveUsers\n          schema:\n            type: boolean\n        - description: The maximum number of users to return per page.\n          in: query\n          name: maxResults\n          schema:\n            type: integer\n        - description: The index of the first user to return.\n          in: query\n          name: startAt\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the requested group is returned.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  isLast:\n                    type: boolean\n                  maxResults:\n                    type: number\n                  nextPage:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                  startAt:\n                    type: number\n                  total:\n                    type: number\n                  values:\n                    items:\n                      properties:\n                        accountId:\n                          minLength: 1\n                          type: string\n                        active:\n                          type: boolean\n                        avatarUrls:\n                          properties: {}\n                          type: object\n                        displayName:\n                          minLength: 1\n                          type: string\n                        emailAddress:\n                          minLength: 1\n                          type: string\n                        key:\n                          minLength: 1\n                          type: string\n                        name:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                        timeZone:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - name\n                        - key\n                        - accountId\n                        - emailAddress\n                        - displayName\n                        - active\n                        - timeZone\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - self\n                  - nextPage\n                  - maxResults\n                  - startAt\n                  - total\n                  - isLast\n                  - values\n                type: object\n  /group/user:\n    delete:\n      description: \"Removes a user from a group. Permissions required: Administer Jira\n        global permission.\"\n      parameters:\n        - description: The accountId of the user, which uniquely identifies the user across\n            all Atlassian products. For example,\n            384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192. Required, unless\n            username is specified.\n          in: query\n          name: accountid\n          schema:\n            type: string\n        - description: The name of the group.\n          in: query\n          name: groupname\n          schema:\n            type: string\n        - description: This parameter has been deprecated due to privacy changes. Use\n            accountId instead. See the migration guide for details.The username\n            of the user. For example, admin. Required, unless accountId is\n            specified.\n          in: query\n          name: username\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the user is removed from the group.\n    post:\n      description: Adds a user to a group.\n      parameters:\n        - description: The name of the group.\n          in: query\n          name: groupname\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                accountId:\n                  description: The accountId of the user, which uniquely identifies the\n                    user across all Atlassian products. For example,\n                    384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192.\n                  type: string\n                name:\n                  description: This property has been deprecated in favour of accountId due\n                    to privacy changes. See the migration guide for details.The\n                    username of the user. For example, admin.\n                  type: string\n              type: object\n      responses:\n        \"201\":\n          description: Returns the group details.\n  /groups/picker:\n    get:\n      description: Returns a list of groups whose names contain a query string. A list of\n        group names can be provided to exclude groups from the results.\n      parameters:\n        - description: Parameter not in use.\n          in: query\n          name: accountId\n          schema:\n            type: string\n        - description: A list of groups to exclude from the result.\n          in: query\n          name: exclude\n          schema:\n            type: array\n            items:\n              type: string\n        - description: The maximum number of groups to return. The maximum number of groups\n            that can be returned is limited by the system property\n            jira.ajax.autocomplete.limit.\n          in: query\n          name: maxResults\n          schema:\n            type: integer\n        - description: The string to find in group names.\n          in: query\n          name: query\n          schema:\n            type: string\n        - description: Parameter not in use.\n          in: query\n          name: userName\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  groups:\n                    items:\n                      properties:\n                        html:\n                          minLength: 1\n                          type: string\n                        name:\n                          minLength: 1\n                          type: string\n                      required:\n                        - name\n                        - html\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  header:\n                    minLength: 1\n                    type: string\n                  total:\n                    type: number\n                required:\n                  - header\n                  - total\n                  - groups\n                type: object\n  /groupuserpicker:\n    get:\n      description: \"Returns a list of users and groups matching a string. The string is\n        used:\"\n      parameters:\n        - description: The size of the avatar to return. If an invalid value is provided,\n            the default value is used.\n          in: query\n          name: avatarSize\n          schema:\n            type: string\n        - description: Indicates whether the search for groups should be case insensitive.\n          in: query\n          name: caseInsensitive\n          schema:\n            type: boolean\n        - description: Indicates whether Connect app users and groups should be excluded\n            from the search results. If an invalid value is provided, the\n            default value is used.\n          in: query\n          name: excludeConnectAddons\n          schema:\n            type: boolean\n        - description: The custom field ID of the field this request is for.\n          in: query\n          name: fieldId\n          schema:\n            type: string\n        - description: The ID of an issue type that returned users and groups must have\n            permission to view. To include multiple issue type IDs repeat this\n            parameter, use of a comma separated list is not supported. Special\n            values, such as -1 (all standard issue types) and -2 (all subtask\n            issue types), are supported. This parameter is only used when\n            fieldId is present.\n          in: query\n          name: issueTypeId\n          schema:\n            type: array\n            items:\n              type: string\n        - description: The maximum number of items to return in each list. The maximum is\n            1000.\n          in: query\n          name: maxResults\n          schema:\n            type: integer\n        - description: The ID of a project that returned users and groups must have\n            permission to view. To include multiple projects repeat this\n            parameter, use of a comma separated list is not supported. This\n            parameter is only used when fieldId is present.\n          in: query\n          name: projectId\n          schema:\n            type: array\n            items:\n              type: string\n        - description: The search string.\n          in: query\n          name: query\n          schema:\n            type: string\n        - description: Indicates whether the user avatar should be returned. If an invalid\n            value is provided, the default value is used.\n          in: query\n          name: showAvatar\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  groups:\n                    properties:\n                      groups:\n                        items:\n                          properties:\n                            html:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                          required:\n                            - name\n                            - html\n                        minItems: 1\n                        type: array\n                        uniqueItems: true\n                      header:\n                        minLength: 1\n                        type: string\n                      total:\n                        type: number\n                    required:\n                      - header\n                      - total\n                      - groups\n                    type: object\n                  users:\n                    properties:\n                      header:\n                        minLength: 1\n                        type: string\n                      total:\n                        type: number\n                      users:\n                        items:\n                          properties:\n                            accountId:\n                              minLength: 1\n                              type: string\n                            avatarUrl:\n                              minLength: 1\n                              type: string\n                            displayName:\n                              minLength: 1\n                              type: string\n                            html:\n                              minLength: 1\n                              type: string\n                            key:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                          required:\n                            - accountId\n                            - name\n                            - key\n                            - html\n                            - displayName\n                            - avatarUrl\n                        minItems: 1\n                        type: array\n                        uniqueItems: true\n                    required:\n                      - users\n                      - total\n                      - header\n                    type: object\n                required:\n                  - users\n                  - groups\n                type: object\n  /issue:\n    post:\n      description: Creates an issue or, where the option to create sub-tasks is enabled in\n        Jira, a sub-task. A transition may be applied, to move the issue or\n        sub-task to a workflow step other than the default start step, and issue\n        properties set.\n      parameters:\n        - description: Indicates whether the project in which the issue is created is added\n            to the user's Recently viewed project list, as shown under Projects\n            in Jira.\n          in: query\n          name: updateHistory\n          schema:\n            type: boolean\n      requestBody:\n        $ref: \"#/components/requestBodies/Body8\"\n      responses:\n        \"201\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  id:\n                    minLength: 1\n                    type: string\n                  key:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - key\n                  - self\n                type: object\n  /issue/bulk:\n    post:\n      description: Creates issues and, where the option to create sub-tasks is enabled in\n        Jira, sub-tasks. Transitions may be applied, to move the issues or\n        sub-tasks to a workflow step other than the default start step, and\n        issue properties set.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                issueUpdates:\n                  items:\n                    type: object\n                  type: array\n              type: object\n      responses:\n        \"201\":\n          description: Example response (application/json)\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  errors:\n                    items:\n                      properties: {}\n                    type: array\n                  issues:\n                    items:\n                      properties:\n                        id:\n                          minLength: 1\n                          type: string\n                        key:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - id\n                        - key\n                        - self\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - issues\n                  - errors\n                type: object\n  /issue/createmeta:\n    get:\n      description: Returns details of projects, issue types within projects, and, when\n        requested, the create screen fields for each issue type for the user.\n        Use the information to populate the requests in Create issue and Create\n        issues.\n      parameters:\n        - description: \"Use expand to include additional information about in the response.\n            This parameter accepts multiple values separated by a comma:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - projects.issuetypes.fields\n              - fields\n              - update\n        - description: Comma-separated list of issue type IDs. May be specified multiple\n            times and with issuetypeNames.\n          in: query\n          name: issuetypeIds\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Comma-separated list of issue type names. May be specified multiple\n            times and with issuetypeIds.\n          in: query\n          name: issuetypeNames\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Comma-separated list of project IDs. May be specified multiple times\n            and with projectKeys.\n          in: query\n          name: projectIds\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Comma-separated list of project keys. May be specified multiple\n            times and with projectIds.\n          in: query\n          name: projectKeys\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  projects:\n                    items:\n                      properties:\n                        avatarUrls:\n                          properties:\n                            16x16:\n                              minLength: 1\n                              type: string\n                            24x24:\n                              minLength: 1\n                              type: string\n                            32x32:\n                              minLength: 1\n                              type: string\n                            48x48:\n                              minLength: 1\n                              type: string\n                          required:\n                            - 16x16\n                            - 24x24\n                            - 32x32\n                            - 48x48\n                          type: object\n                        id:\n                          minLength: 1\n                          type: string\n                        issuetypes:\n                          items:\n                            properties:\n                              description:\n                                minLength: 1\n                                type: string\n                              fields:\n                                properties:\n                                  issuetype:\n                                    properties:\n                                      hasDefaultValue:\n                                        type: boolean\n                                      key:\n                                        minLength: 1\n                                        type: string\n                                      name:\n                                        minLength: 1\n                                        type: string\n                                      operations:\n                                        items:\n                                          properties: {}\n                                        type: array\n                                      required:\n                                        type: boolean\n                                    required:\n                                      - required\n                                      - name\n                                      - key\n                                      - hasDefaultValue\n                                      - operations\n                                    type: object\n                                required:\n                                  - issuetype\n                                type: object\n                              iconUrl:\n                                minLength: 1\n                                type: string\n                              id:\n                                minLength: 1\n                                type: string\n                              name:\n                                minLength: 1\n                                type: string\n                              self:\n                                minLength: 1\n                                type: string\n                              subtask:\n                                type: boolean\n                            required:\n                              - self\n                              - id\n                              - description\n                              - iconUrl\n                              - name\n                              - subtask\n                          minItems: 1\n                          type: array\n                          uniqueItems: true\n                        key:\n                          minLength: 1\n                          type: string\n                        name:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - id\n                        - key\n                        - name\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - projects\n                type: object\n  /issue/picker:\n    get:\n      description: Returns a list of suggested issues matching the auto-completion query\n        for the user executing this request. This operation checks the user's\n        history and browsing context to return issue suggestions.\n      parameters:\n        - description: Key of the issue defining search context. The issue defining a\n            context is excluded from the search results.\n          in: query\n          name: currentIssueKey\n          schema:\n            type: string\n        - description: JQL that defines the search context. Only issues matching this JQL\n            query are included in the results. Note that username and userkey\n            have been deprecated as search terms for this parameter. See the\n            migration guide for details. Use accountId instead.\n          in: query\n          name: currentJQL\n          schema:\n            type: string\n        - description: ID of a project defining search context. Only issues belonging to a\n            given project are suggested.\n          in: query\n          name: currentProjectId\n          schema:\n            type: string\n        - description: Query used to filter issue search results.\n          in: query\n          name: query\n          schema:\n            type: string\n        - description: Set to false to exclude parent issue from the suggestions list if\n            search is performed in the context of a sub-task.\n          in: query\n          name: showSubTaskParent\n          schema:\n            type: boolean\n        - description: Set to false to exclude subtasks from the suggestions list.\n          in: query\n          name: showSubTasks\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Returns a list of issues matching the issue picker parameters.\n  \"/issue/properties/{propertyKey}\":\n    delete:\n      description: Deletes a property value from multiple issues. The issues to be updated\n        can be specified by filter criteria.\n      parameters:\n        - description: The key of the property.\n          in: path\n          name: propertyKey\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                currentValue:\n                  description: The value of properties to perform the bulk operation on.\n                  type: object\n                entityIds:\n                  description: List of issues to perform the bulk delete operation on.\n                  items:\n                    type: integer\n                  type: array\n              type: object\n      responses:\n        \"303\":\n          description: Returned if the request is successful.\n    put:\n      description: Sets a property value on multiple issues. The issues to be updated can\n        be specified by a filter.\n      parameters:\n        - description: The key of the property. The maximum length is 255 characters.\n          in: path\n          name: propertyKey\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                filter:\n                  description: Bulk operation filter details.\n                  type: object\n                value:\n                  description: The value of the property. The value must be a valid,\n                    non-empty JSON blob. The maximum length is 32768 characters.\n                  type: object\n              type: object\n      responses:\n        \"303\":\n          description: Returned if the request is successful.\n  \"/issue/{issueIdOrKey}\":\n    delete:\n      description: Deletes an issue.\n      parameters:\n        - description: Indicates whether the issue's sub-tasks are deleted when the issue\n            is deleted.\n          in: query\n          name: deleteSubtasks\n          schema:\n            type: string\n        - description: The ID or key of the issue.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n    get:\n      description: Returns the details for an issue.\n      parameters:\n        - description: \"Use expand to include additional information about the issues in\n            the response. This parameter accepts multiple values separated by a\n            comma:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - renderedFields\n              - names\n              - schema\n              - transitions\n              - operations\n              - editmeta\n              - changelog\n              - versionedRepresentations\n              - fields\n        - description: \"A comma-separated list of fields to return for the issue. Use it to\n            retrieve a subset of fields. Allowed values:\"\n          in: query\n          name: fields\n          schema:\n            type: array\n            items:\n              type: string\n            enum:\n              - \"*all\"\n              - \"*navigable\"\n              - summary,comment\n              - -description\n              - \"*navigable,-comment\"\n        - description: Indicates whether fields in fields are referenced by keys rather\n            than IDs. This parameter is useful where fields have been added by a\n            connect app and a field's key may differ from its ID.\n          in: query\n          name: fieldsByKeys\n          schema:\n            type: boolean\n        - description: The ID or key of the issue. For example, JRACLOUD-1549.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n        - description: \"A comma-separated list of issue properties to return for the issue.\n            Allowed values:\"\n          in: query\n          name: properties\n          schema:\n            type: array\n            items:\n              type: string\n            enum:\n              - \"*all\"\n              - \"*all,-prop1\"\n              - prop1\n              - prop1,prop2\n              - prop2\n        - description: Indicates whether the project in which the issue is created is added\n            to the user's Recently viewed project list, as shown under Projects\n            in Jira. This also populates the JQL issues search lastViewed field.\n          in: query\n          name: updateHistory\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  fields:\n                    properties:\n                      attachment:\n                        items:\n                          properties:\n                            author:\n                              properties:\n                                accountId:\n                                  minLength: 1\n                                  type: string\n                                active:\n                                  type: boolean\n                                avatarUrls:\n                                  properties:\n                                    16x16:\n                                      minLength: 1\n                                      type: string\n                                    24x24:\n                                      minLength: 1\n                                      type: string\n                                    32x32:\n                                      minLength: 1\n                                      type: string\n                                    48x48:\n                                      minLength: 1\n                                      type: string\n                                  required:\n                                    - 48x48\n                                    - 24x24\n                                    - 16x16\n                                    - 32x32\n                                  type: object\n                                displayName:\n                                  minLength: 1\n                                  type: string\n                                key:\n                                  minLength: 1\n                                  type: string\n                                name:\n                                  minLength: 1\n                                  type: string\n                                self:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - self\n                                - key\n                                - accountId\n                                - name\n                                - avatarUrls\n                                - displayName\n                                - active\n                              type: object\n                            content:\n                              minLength: 1\n                              type: string\n                            created:\n                              minLength: 1\n                              type: string\n                            filename:\n                              minLength: 1\n                              type: string\n                            id:\n                              type: number\n                            mimeType:\n                              minLength: 1\n                              type: string\n                            self:\n                              minLength: 1\n                              type: string\n                            size:\n                              type: number\n                            thumbnail:\n                              minLength: 1\n                              type: string\n                          required:\n                            - id\n                            - self\n                            - filename\n                            - created\n                            - size\n                            - mimeType\n                            - content\n                            - thumbnail\n                        minItems: 1\n                        type: array\n                        uniqueItems: true\n                      comment:\n                        items:\n                          properties:\n                            author:\n                              properties:\n                                active:\n                                  type: boolean\n                                displayName:\n                                  minLength: 1\n                                  type: string\n                                name:\n                                  minLength: 1\n                                  type: string\n                                self:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - self\n                                - name\n                                - displayName\n                                - active\n                              type: object\n                            body:\n                              properties:\n                                content:\n                                  items:\n                                    properties:\n                                      content:\n                                        items:\n                                          properties:\n                                            text:\n                                              minLength: 1\n                                              type: string\n                                            type:\n                                              minLength: 1\n                                              type: string\n                                          required:\n                                            - type\n                                            - text\n                                        minItems: 1\n                                        type: array\n                                        uniqueItems: true\n                                      type:\n                                        minLength: 1\n                                        type: string\n                                    required:\n                                      - type\n                                  minItems: 1\n                                  type: array\n                                  uniqueItems: true\n                                type:\n                                  minLength: 1\n                                  type: string\n                                version:\n                                  type: number\n                              required:\n                                - type\n                                - version\n                                - content\n                              type: object\n                            created:\n                              minLength: 1\n                              type: string\n                            id:\n                              minLength: 1\n                              type: string\n                            self:\n                              minLength: 1\n                              type: string\n                            updateAuthor:\n                              properties:\n                                active:\n                                  type: boolean\n                                displayName:\n                                  minLength: 1\n                                  type: string\n                                name:\n                                  minLength: 1\n                                  type: string\n                                self:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - self\n                                - name\n                                - displayName\n                                - active\n                              type: object\n                            updated:\n                              minLength: 1\n                              type: string\n                            visibility:\n                              properties:\n                                type:\n                                  minLength: 1\n                                  type: string\n                                value:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - type\n                                - value\n                              type: object\n                          required:\n                            - self\n                            - id\n                            - created\n                            - updated\n                        minItems: 1\n                        type: array\n                        uniqueItems: true\n                      description:\n                        properties:\n                          content:\n                            items:\n                              properties:\n                                content:\n                                  items:\n                                    properties:\n                                      text:\n                                        minLength: 1\n                                        type: string\n                                      type:\n                                        minLength: 1\n                                        type: string\n                                    required:\n                                      - type\n                                      - text\n                                  minItems: 1\n                                  type: array\n                                  uniqueItems: true\n                                type:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - type\n                            minItems: 1\n                            type: array\n                            uniqueItems: true\n                          type:\n                            minLength: 1\n                            type: string\n                          version:\n                            type: number\n                        required:\n                          - type\n                          - version\n                          - content\n                        type: object\n                      issuelinks:\n                        items:\n                          properties:\n                            id:\n                              minLength: 1\n                              type: string\n                            outwardIssue:\n                              properties:\n                                fields:\n                                  properties:\n                                    status:\n                                      properties:\n                                        iconUrl:\n                                          minLength: 1\n                                          type: string\n                                        name:\n                                          minLength: 1\n                                          type: string\n                                      required:\n                                        - iconUrl\n                                        - name\n                                      type: object\n                                  required:\n                                    - status\n                                  type: object\n                                id:\n                                  minLength: 1\n                                  type: string\n                                key:\n                                  minLength: 1\n                                  type: string\n                                self:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - id\n                                - key\n                                - self\n                                - fields\n                              type: object\n                            type:\n                              properties:\n                                id:\n                                  minLength: 1\n                                  type: string\n                                inward:\n                                  minLength: 1\n                                  type: string\n                                name:\n                                  minLength: 1\n                                  type: string\n                                outward:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - id\n                                - name\n                                - inward\n                                - outward\n                              type: object\n                          required:\n                            - id\n                        minItems: 1\n                        type: array\n                        uniqueItems: true\n                      project:\n                        properties:\n                          avatarUrls:\n                            properties:\n                              16x16:\n                                minLength: 1\n                                type: string\n                              24x24:\n                                minLength: 1\n                                type: string\n                              32x32:\n                                minLength: 1\n                                type: string\n                              48x48:\n                                minLength: 1\n                                type: string\n                            required:\n                              - 48x48\n                              - 24x24\n                              - 16x16\n                              - 32x32\n                            type: object\n                          id:\n                            minLength: 1\n                            type: string\n                          key:\n                            minLength: 1\n                            type: string\n                          name:\n                            minLength: 1\n                            type: string\n                          projectCategory:\n                            properties:\n                              description:\n                                minLength: 1\n                                type: string\n                              id:\n                                minLength: 1\n                                type: string\n                              name:\n                                minLength: 1\n                                type: string\n                              self:\n                                minLength: 1\n                                type: string\n                            required:\n                              - self\n                              - id\n                              - name\n                              - description\n                            type: object\n                          self:\n                            minLength: 1\n                            type: string\n                          simplified:\n                            type: boolean\n                          style:\n                            minLength: 1\n                            type: string\n                        required:\n                          - self\n                          - id\n                          - key\n                          - name\n                          - avatarUrls\n                          - projectCategory\n                          - simplified\n                          - style\n                        type: object\n                      sub-tasks:\n                        items:\n                          properties:\n                            id:\n                              minLength: 1\n                              type: string\n                            outwardIssue:\n                              properties:\n                                fields:\n                                  properties:\n                                    status:\n                                      properties:\n                                        iconUrl:\n                                          minLength: 1\n                                          type: string\n                                        name:\n                                          minLength: 1\n                                          type: string\n                                      required:\n                                        - iconUrl\n                                        - name\n                                      type: object\n                                  required:\n                                    - status\n                                  type: object\n                                id:\n                                  minLength: 1\n                                  type: string\n                                key:\n                                  minLength: 1\n                                  type: string\n                                self:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - id\n                                - key\n                                - self\n                                - fields\n                              type: object\n                            type:\n                              properties:\n                                id:\n                                  minLength: 1\n                                  type: string\n                                inward:\n                                  minLength: 1\n                                  type: string\n                                name:\n                                  type: string\n                                outward:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - id\n                                - name\n                                - inward\n                                - outward\n                              type: object\n                          required:\n                            - id\n                        minItems: 1\n                        type: array\n                        uniqueItems: true\n                      timetracking:\n                        properties:\n                          originalEstimate:\n                            minLength: 1\n                            type: string\n                          originalEstimateSeconds:\n                            type: number\n                          remainingEstimate:\n                            minLength: 1\n                            type: string\n                          remainingEstimateSeconds:\n                            type: number\n                          timeSpent:\n                            minLength: 1\n                            type: string\n                          timeSpentSeconds:\n                            type: number\n                        required:\n                          - originalEstimate\n                          - remainingEstimate\n                          - timeSpent\n                          - originalEstimateSeconds\n                          - remainingEstimateSeconds\n                          - timeSpentSeconds\n                        type: object\n                      updated:\n                        type: number\n                      watcher:\n                        properties:\n                          isWatching:\n                            type: boolean\n                          self:\n                            minLength: 1\n                            type: string\n                          watchCount:\n                            type: number\n                          watchers:\n                            items:\n                              properties:\n                                active:\n                                  type: boolean\n                                displayName:\n                                  minLength: 1\n                                  type: string\n                                name:\n                                  minLength: 1\n                                  type: string\n                                self:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - self\n                                - name\n                                - displayName\n                                - active\n                            minItems: 1\n                            type: array\n                            uniqueItems: true\n                        required:\n                          - self\n                          - isWatching\n                          - watchCount\n                          - watchers\n                        type: object\n                      worklog:\n                        items:\n                          properties:\n                            author:\n                              properties:\n                                active:\n                                  type: boolean\n                                displayName:\n                                  minLength: 1\n                                  type: string\n                                name:\n                                  minLength: 1\n                                  type: string\n                                self:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - self\n                                - name\n                                - displayName\n                                - active\n                              type: object\n                            comment:\n                              properties:\n                                content:\n                                  items:\n                                    properties:\n                                      content:\n                                        items:\n                                          properties:\n                                            text:\n                                              minLength: 1\n                                              type: string\n                                            type:\n                                              minLength: 1\n                                              type: string\n                                          required:\n                                            - type\n                                            - text\n                                        minItems: 1\n                                        type: array\n                                        uniqueItems: true\n                                      type:\n                                        minLength: 1\n                                        type: string\n                                    required:\n                                      - type\n                                  minItems: 1\n                                  type: array\n                                  uniqueItems: true\n                                type:\n                                  minLength: 1\n                                  type: string\n                                version:\n                                  type: number\n                              required:\n                                - type\n                                - version\n                                - content\n                              type: object\n                            id:\n                              minLength: 1\n                              type: string\n                            issueId:\n                              minLength: 1\n                              type: string\n                            self:\n                              minLength: 1\n                              type: string\n                            started:\n                              minLength: 1\n                              type: string\n                            timeSpent:\n                              minLength: 1\n                              type: string\n                            timeSpentSeconds:\n                              type: number\n                            updateAuthor:\n                              properties:\n                                active:\n                                  type: boolean\n                                displayName:\n                                  minLength: 1\n                                  type: string\n                                name:\n                                  minLength: 1\n                                  type: string\n                                self:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - self\n                                - name\n                                - displayName\n                                - active\n                              type: object\n                            updated:\n                              minLength: 1\n                              type: string\n                            visibility:\n                              properties:\n                                type:\n                                  minLength: 1\n                                  type: string\n                                value:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - type\n                                - value\n                              type: object\n                          required:\n                            - self\n                            - updated\n                            - started\n                            - timeSpent\n                            - timeSpentSeconds\n                            - id\n                            - issueId\n                        minItems: 1\n                        type: array\n                        uniqueItems: true\n                    required:\n                      - watcher\n                      - attachment\n                      - sub-tasks\n                      - description\n                      - project\n                      - comment\n                      - issuelinks\n                      - worklog\n                      - updated\n                      - timetracking\n                    type: object\n                  id:\n                    minLength: 1\n                    type: string\n                  key:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - self\n                  - key\n                  - fields\n                type: object\n    put:\n      description: Edits an issue. A transition may be applied and issue properties updated\n        as part of the edit.\n      parameters:\n        - description: The ID or key of the issue.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n        - description: Indicates whether a notification email about the issue update is\n            sent to all watchers. To disable the notification, administer Jira\n            or administer project permissions are required. If the user doesn't\n            have the necessary permission the request is ignored.\n          in: query\n          name: notifyUsers\n          schema:\n            type: boolean\n        - description: Indicates whether screen security should be overridden to enable\n            uneditable fields to be edited. Available to Connect app users with\n            admin permissions.\n          in: query\n          name: overrideEditableFlag\n          schema:\n            type: boolean\n        - description: Indicates whether screen security should be overridden to enable\n            hidden fields to be edited. Available to Connect app users with\n            admin permissions.\n          in: query\n          name: overrideScreenSecurity\n          schema:\n            type: boolean\n      requestBody:\n        $ref: \"#/components/requestBodies/Body8\"\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n  \"/issue/{issueIdOrKey}/assignee\":\n    put:\n      description: Assigns an issue to a user. Use this operation when the calling user\n        does not have the Edit Issues permission but has the Assign issue\n        permission for the project that the issue is in.\n      parameters:\n        - description: The ID or key of the issue to be assigned.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                accountId:\n                  description: The accountId of the user, which uniquely identifies the\n                    user across all Atlassian products. For example,\n                    384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192.\n                  type: string\n                active:\n                  description: Indicates whether the user is active.\n                  type: boolean\n                applicationRoles:\n                  description: The application roles the user is assigned to.\n                  type: object\n                avatarUrls:\n                  description: The avatars of the user.\n                  type: object\n                displayName:\n                  description: The display name of the user. Depending on the user’s\n                    privacy setting, this may return an alternative value.\n                  type: string\n                emailAddress:\n                  description: The email address of the user. Depending on the user’s\n                    privacy setting, this may be returned as null.\n                  type: string\n                groups:\n                  description: The groups that the user belongs to.\n                  type: object\n                key:\n                  description: This property has been deprecated in favour of accountId due\n                    to privacy changes. See the migration guide for details.The\n                    key of the user. For example, admin.\n                  type: string\n                locale:\n                  description: The locale of the user. Depending on the user’s privacy\n                    setting, this may be returned as null.\n                  type: string\n                name:\n                  description: This property has been deprecated in favour of accountId due\n                    to privacy changes. See the migration guide for details.The\n                    username of the user. For example, admin.\n                  type: string\n                timeZone:\n                  description: The time zone specified in the user's profile. Depending on\n                    the user’s privacy setting, this may be returned as null.\n                  type: string\n              type: object\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n  \"/issue/{issueIdOrKey}/attachments\":\n    post:\n      description: Adds one or more attachments to an issue. Attachments are posted as\n        multipart/form-data (RFC 1867).\n      parameters:\n        - description: The ID or key of the issue that attachments are added to.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    author:\n                      properties:\n                        accountId:\n                          minLength: 1\n                          type: string\n                        active:\n                          type: boolean\n                        avatarUrls:\n                          properties:\n                            16x16:\n                              minLength: 1\n                              type: string\n                            24x24:\n                              minLength: 1\n                              type: string\n                            32x32:\n                              minLength: 1\n                              type: string\n                            48x48:\n                              minLength: 1\n                              type: string\n                          required:\n                            - 48x48\n                            - 24x24\n                            - 16x16\n                            - 32x32\n                          type: object\n                        displayName:\n                          minLength: 1\n                          type: string\n                        emailAddress:\n                          minLength: 1\n                          type: string\n                        key:\n                          minLength: 1\n                          type: string\n                        name:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                        timeZone:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - name\n                        - key\n                        - accountId\n                        - emailAddress\n                        - avatarUrls\n                        - displayName\n                        - active\n                        - timeZone\n                      type: object\n                    content:\n                      minLength: 1\n                      type: string\n                    created:\n                      minLength: 1\n                      type: string\n                    filename:\n                      minLength: 1\n                      type: string\n                    id:\n                      minLength: 1\n                      type: string\n                    mimeType:\n                      minLength: 1\n                      type: string\n                    self:\n                      minLength: 1\n                      type: string\n                    size:\n                      type: number\n                    thumbnail:\n                      minLength: 1\n                      type: string\n                  required:\n                    - self\n                    - id\n                    - filename\n                    - author\n                    - created\n                    - size\n                    - mimeType\n                    - content\n                    - thumbnail\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n  \"/issue/{issueIdOrKey}/changelog\":\n    get:\n      description: Returns a paginated list of all updates of an issue, sorted by date,\n        starting from the oldest.\n      parameters:\n        - description: ID or key of the issue.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n        - description: Maximum number of items to return per page. See Pagination section\n            for more details.\n          in: query\n          name: maxResults\n          schema:\n            type: integer\n        - description: \"Page offset, ie. index of the first item returned in the page of\n            results. Base index: 0.\"\n          in: query\n          name: startAt\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: returns a collection of changelogs associated with the issue, with\n            count and pagination information.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  isLast:\n                    type: boolean\n                  maxResults:\n                    type: number\n                  nextPage:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                  startAt:\n                    type: number\n                  total:\n                    type: number\n                  values:\n                    items:\n                      properties:\n                        author:\n                          properties:\n                            accountId:\n                              minLength: 1\n                              type: string\n                            active:\n                              type: boolean\n                            avatarUrls:\n                              properties:\n                                16x16:\n                                  minLength: 1\n                                  type: string\n                                24x24:\n                                  minLength: 1\n                                  type: string\n                                32x32:\n                                  minLength: 1\n                                  type: string\n                                48x48:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - 48x48\n                                - 24x24\n                                - 16x16\n                                - 32x32\n                              type: object\n                            displayName:\n                              minLength: 1\n                              type: string\n                            emailAddress:\n                              minLength: 1\n                              type: string\n                            key:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                            self:\n                              minLength: 1\n                              type: string\n                            timeZone:\n                              minLength: 1\n                              type: string\n                          required:\n                            - self\n                            - name\n                            - key\n                            - accountId\n                            - emailAddress\n                            - avatarUrls\n                            - displayName\n                            - active\n                            - timeZone\n                          type: object\n                        created:\n                          minLength: 1\n                          type: string\n                        id:\n                          minLength: 1\n                          type: string\n                        items:\n                          items:\n                            properties:\n                              field:\n                                minLength: 1\n                                type: string\n                              fieldId:\n                                minLength: 1\n                                type: string\n                              fieldtype:\n                                minLength: 1\n                                type: string\n                              from: {}\n                              fromString:\n                                type: string\n                              to: {}\n                              toString:\n                                minLength: 1\n                                type: string\n                            required:\n                              - field\n                              - fieldtype\n                              - fieldId\n                              - fromString\n                              - toString\n                          minItems: 1\n                          type: array\n                          uniqueItems: true\n                      required:\n                        - id\n                        - created\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - self\n                  - nextPage\n                  - maxResults\n                  - startAt\n                  - total\n                  - isLast\n                  - values\n                type: object\n  \"/issue/{issueIdOrKey}/comment\":\n    get:\n      description: to get comments for\n      parameters:\n        - description: \"optional flags: renderedBody (provides body rendered in HTML)\"\n          in: query\n          name: expand\n          schema:\n            type: string\n        - description: to get comments for\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n        - description: how many results on the page should be included. Defaults to 50.\n          in: query\n          name: maxResults\n          schema:\n            type: integer\n        - description: ordering of the results.\n          in: query\n          name: orderBy\n          schema:\n            type: string\n        - description: the page offset, if not specified then defaults to 0\n          in: query\n          name: startAt\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: returns a collection of comments associated with the issue, with\n            count and pagination information.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  comments:\n                    items:\n                      properties:\n                        author:\n                          properties:\n                            active:\n                              type: boolean\n                            displayName:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                            self:\n                              minLength: 1\n                              type: string\n                          required:\n                            - self\n                            - name\n                            - displayName\n                            - active\n                          type: object\n                        body:\n                          properties:\n                            content:\n                              items:\n                                properties:\n                                  content:\n                                    items:\n                                      properties:\n                                        text:\n                                          minLength: 1\n                                          type: string\n                                        type:\n                                          minLength: 1\n                                          type: string\n                                      required:\n                                        - type\n                                        - text\n                                    minItems: 1\n                                    type: array\n                                    uniqueItems: true\n                                  type:\n                                    minLength: 1\n                                    type: string\n                                required:\n                                  - type\n                              minItems: 1\n                              type: array\n                              uniqueItems: true\n                            type:\n                              minLength: 1\n                              type: string\n                            version:\n                              type: number\n                          required:\n                            - type\n                            - version\n                            - content\n                          type: object\n                        created:\n                          minLength: 1\n                          type: string\n                        id:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                        updateAuthor:\n                          properties:\n                            active:\n                              type: boolean\n                            displayName:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                            self:\n                              minLength: 1\n                              type: string\n                          required:\n                            - self\n                            - name\n                            - displayName\n                            - active\n                          type: object\n                        updated:\n                          minLength: 1\n                          type: string\n                        visibility:\n                          properties:\n                            type:\n                              minLength: 1\n                              type: string\n                            value:\n                              minLength: 1\n                              type: string\n                          required:\n                            - type\n                            - value\n                          type: object\n                      required:\n                        - self\n                        - id\n                        - created\n                        - updated\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  maxResults:\n                    type: number\n                  startAt:\n                    type: number\n                  total:\n                    type: number\n                required:\n                  - startAt\n                  - maxResults\n                  - total\n                  - comments\n                type: object\n    post:\n      description: a string containing the issue id or key the comment will be added to\n      parameters:\n        - description: \"optional flags: renderedBody (provides body rendered in HTML)\"\n          in: query\n          name: expand\n          schema:\n            type: string\n        - description: a string containing the issue id or key the comment will be added to\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Body10\"\n      responses:\n        \"201\":\n          description: Returned if add was successful\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  author:\n                    properties:\n                      active:\n                        type: boolean\n                      displayName:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - name\n                      - displayName\n                      - active\n                    type: object\n                  body:\n                    properties:\n                      content:\n                        items:\n                          properties:\n                            content:\n                              items:\n                                properties:\n                                  text:\n                                    minLength: 1\n                                    type: string\n                                  type:\n                                    minLength: 1\n                                    type: string\n                                required:\n                                  - type\n                                  - text\n                              minItems: 1\n                              type: array\n                              uniqueItems: true\n                            type:\n                              minLength: 1\n                              type: string\n                          required:\n                            - type\n                        minItems: 1\n                        type: array\n                        uniqueItems: true\n                      type:\n                        minLength: 1\n                        type: string\n                      version:\n                        type: number\n                    required:\n                      - type\n                      - version\n                      - content\n                    type: object\n                  created:\n                    minLength: 1\n                    type: string\n                  id:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                  updateAuthor:\n                    properties:\n                      active:\n                        type: boolean\n                      displayName:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - name\n                      - displayName\n                      - active\n                    type: object\n                  updated:\n                    minLength: 1\n                    type: string\n                  visibility:\n                    properties:\n                      type:\n                        minLength: 1\n                        type: string\n                      value:\n                        minLength: 1\n                        type: string\n                    required:\n                      - type\n                      - value\n                    type: object\n                required:\n                  - self\n                  - id\n                  - author\n                  - body\n                  - updateAuthor\n                  - created\n                  - updated\n                  - visibility\n                type: object\n  \"/issue/{issueIdOrKey}/comment/{id}\":\n    delete:\n      description: a string containing the issue id or key the comment belongs to\n      parameters:\n        - description: id of the comment to be deleted\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: a string containing the issue id or key the comment belongs to\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Returned if delete was successful\n    get:\n      description: of the issue the comment belongs to\n      parameters:\n        - description: \"optional flags: renderedBody (provides body rendered in HTML)\"\n          in: query\n          name: expand\n          schema:\n            type: string\n        - description: the ID of the comment to request\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: of the issue the comment belongs to\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returns a full representation of a Jira comment in JSON format.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  author:\n                    properties:\n                      active:\n                        type: boolean\n                      displayName:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - name\n                      - displayName\n                      - active\n                    type: object\n                  body:\n                    properties:\n                      content:\n                        items:\n                          properties:\n                            content:\n                              items:\n                                properties:\n                                  text:\n                                    minLength: 1\n                                    type: string\n                                  type:\n                                    minLength: 1\n                                    type: string\n                                required:\n                                  - type\n                                  - text\n                              minItems: 1\n                              type: array\n                              uniqueItems: true\n                            type:\n                              minLength: 1\n                              type: string\n                          required:\n                            - type\n                        minItems: 1\n                        type: array\n                        uniqueItems: true\n                      type:\n                        minLength: 1\n                        type: string\n                      version:\n                        type: number\n                    required:\n                      - type\n                      - version\n                      - content\n                    type: object\n                  created:\n                    minLength: 1\n                    type: string\n                  id:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                  updateAuthor:\n                    properties:\n                      active:\n                        type: boolean\n                      displayName:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - name\n                      - displayName\n                      - active\n                    type: object\n                  updated:\n                    minLength: 1\n                    type: string\n                  visibility:\n                    properties:\n                      type:\n                        minLength: 1\n                        type: string\n                      value:\n                        minLength: 1\n                        type: string\n                    required:\n                      - type\n                      - value\n                    type: object\n                required:\n                  - self\n                  - id\n                  - author\n                  - body\n                  - updateAuthor\n                  - created\n                  - updated\n                  - visibility\n                type: object\n    put:\n      description: a string containing the issue id or key the comment belongs to\n      parameters:\n        - description: \"optional flags: renderedBody (provides body rendered in HTML)\"\n          in: query\n          name: expand\n          schema:\n            type: string\n        - description: id of the comment to be updated\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: a string containing the issue id or key the comment belongs to\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Body10\"\n      responses:\n        \"200\":\n          description: Returned if update was successful\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  author:\n                    properties:\n                      active:\n                        type: boolean\n                      displayName:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - name\n                      - displayName\n                      - active\n                    type: object\n                  body:\n                    properties:\n                      content:\n                        items:\n                          properties:\n                            content:\n                              items:\n                                properties:\n                                  text:\n                                    minLength: 1\n                                    type: string\n                                  type:\n                                    minLength: 1\n                                    type: string\n                                required:\n                                  - type\n                                  - text\n                              minItems: 1\n                              type: array\n                              uniqueItems: true\n                            type:\n                              minLength: 1\n                              type: string\n                          required:\n                            - type\n                        minItems: 1\n                        type: array\n                        uniqueItems: true\n                      type:\n                        minLength: 1\n                        type: string\n                      version:\n                        type: number\n                    required:\n                      - type\n                      - version\n                      - content\n                    type: object\n                  created:\n                    minLength: 1\n                    type: string\n                  id:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                  updateAuthor:\n                    properties:\n                      active:\n                        type: boolean\n                      displayName:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - name\n                      - displayName\n                      - active\n                    type: object\n                  updated:\n                    minLength: 1\n                    type: string\n                  visibility:\n                    properties:\n                      type:\n                        minLength: 1\n                        type: string\n                      value:\n                        minLength: 1\n                        type: string\n                    required:\n                      - type\n                      - value\n                    type: object\n                required:\n                  - self\n                  - id\n                  - author\n                  - body\n                  - updateAuthor\n                  - created\n                  - updated\n                  - visibility\n                type: object\n  \"/issue/{issueIdOrKey}/editmeta\":\n    get:\n      description: Returns the edit screen fields for an issue that are visible to and\n        editable by the user. Use the information to populate the requests in\n        Edit issue.\n      parameters:\n        - description: The ID or key of the issue.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n        - description: Indicates whether non-editable fields should be returned. Available\n            to connect app users with admin permissions.\n          in: query\n          name: overrideEditableFlag\n          schema:\n            type: boolean\n        - description: Indicates whether hidden fields should be returned. Available to\n            connect app users with admin permissions.\n          in: query\n          name: overrideScreenSecurity\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  fields:\n                    properties:\n                      summary:\n                        properties:\n                          allowedValues:\n                            items:\n                              properties: {}\n                            type: array\n                          defaultValue:\n                            minLength: 1\n                            type: string\n                          hasDefaultValue:\n                            type: boolean\n                          key:\n                            minLength: 1\n                            type: string\n                          name:\n                            minLength: 1\n                            type: string\n                          operations:\n                            items:\n                              properties: {}\n                            type: array\n                          required:\n                            type: boolean\n                          schema:\n                            properties:\n                              custom:\n                                minLength: 1\n                                type: string\n                              customId:\n                                type: number\n                              items:\n                                minLength: 1\n                                type: string\n                              type:\n                                minLength: 1\n                                type: string\n                            required:\n                              - type\n                              - items\n                              - custom\n                              - customId\n                            type: object\n                        required:\n                          - required\n                          - schema\n                          - name\n                          - key\n                          - hasDefaultValue\n                          - operations\n                          - allowedValues\n                          - defaultValue\n                        type: object\n                    required:\n                      - summary\n                    type: object\n                required:\n                  - fields\n                type: object\n  \"/issue/{issueIdOrKey}/notify\":\n    post:\n      description: Creates an email notification for an issue and adds it to the mail queue.\n      parameters:\n        - description: ID or key of the issue that the notification is sent for.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                htmlBody:\n                  description: The HTML body of the email notification for the issue.\n                  type: string\n                restrict:\n                  type: object\n                subject:\n                  description: The subject of the email notification for the issue. If this\n                    is not specified, then the subject is set to the issue key\n                    and summary.\n                  type: string\n                textBody:\n                  description: The plain text body of the email notification for the issue.\n                  type: string\n                to:\n                  type: object\n              type: object\n      responses:\n        \"204\":\n          description: Returned if the email was successfully queued for sending.\n  \"/issue/{issueIdOrKey}/properties\":\n    get:\n      description: Returns the URIs and keys of an issue's properties.\n      parameters:\n        - description: The key or ID of the issue.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  keys:\n                    items:\n                      properties:\n                        key:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - key\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - keys\n                type: object\n  \"/issue/{issueIdOrKey}/properties/{propertyKey}\":\n    delete:\n      description: Deletes an issue's property.\n      parameters:\n        - description: The key or ID of the issue.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n        - description: The key of the property.\n          in: path\n          name: propertyKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n    get:\n      description: Returns the key and value of an issue's property.\n      parameters:\n        - description: The key or ID of the issue.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n        - description: The key of the property.\n          in: path\n          name: propertyKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  key:\n                    minLength: 1\n                    type: string\n                  value:\n                    properties:\n                      stride.conversation.id:\n                        minLength: 1\n                        type: string\n                      support.time:\n                        minLength: 1\n                        type: string\n                    required:\n                      - stride.conversation.id\n                      - support.time\n                    type: object\n                required:\n                  - key\n                  - value\n                type: object\n    put:\n      description: Sets the value of an issue's property. Use this resource to store custom\n        data against an issue.\n      parameters:\n        - description: The ID or key of the issue.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n        - description: The key of the issue property. The maximum length is 255 characters.\n          in: path\n          name: propertyKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the issue property is updated.\n  \"/issue/{issueIdOrKey}/remotelink\":\n    delete:\n      description: Deletes the remote issue link from the issue using the link's global ID.\n      parameters:\n        - description: The global ID of a remote issue link.\n          in: query\n          name: globalId\n          schema:\n            type: string\n        - description: The ID or key of the issue.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n    get:\n      description: Returns the remote issue links for an issue. When a remote issue link\n        global ID is provided the record with that global ID is returned,\n        otherwise all remote issue links are returned.\n      parameters:\n        - description: The global ID of the remote issue link.\n          in: query\n          name: globalId\n          schema:\n            type: string\n        - description: The ID or key of the issue.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    application:\n                      properties:\n                        name:\n                          minLength: 1\n                          type: string\n                        type:\n                          minLength: 1\n                          type: string\n                      required:\n                        - type\n                        - name\n                      type: object\n                    globalId:\n                      minLength: 1\n                      type: string\n                    id:\n                      type: number\n                    object:\n                      properties:\n                        icon:\n                          properties:\n                            title:\n                              minLength: 1\n                              type: string\n                            url16x16:\n                              minLength: 1\n                              type: string\n                          required:\n                            - url16x16\n                            - title\n                          type: object\n                        status:\n                          properties:\n                            icon:\n                              properties:\n                                link:\n                                  minLength: 1\n                                  type: string\n                                title:\n                                  minLength: 1\n                                  type: string\n                                url16x16:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - url16x16\n                                - title\n                                - link\n                              type: object\n                            resolved:\n                              type: boolean\n                          required:\n                            - resolved\n                            - icon\n                          type: object\n                        summary:\n                          minLength: 1\n                          type: string\n                        title:\n                          minLength: 1\n                          type: string\n                        url:\n                          minLength: 1\n                          type: string\n                      required:\n                        - url\n                        - title\n                        - summary\n                        - icon\n                        - status\n                      type: object\n                    relationship:\n                      minLength: 1\n                      type: string\n                    self:\n                      minLength: 1\n                      type: string\n                  required:\n                    - id\n                    - self\n                    - globalId\n                    - application\n                    - relationship\n                    - object\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n    post:\n      description: Creates or updates a remote issue link for an issue.\n      parameters:\n        - description: The ID or key of the issue.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Body11\"\n      responses:\n        \"200\":\n          description: Returned if the remote issue link is updated.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  id:\n                    type: number\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - self\n                type: object\n  \"/issue/{issueIdOrKey}/remotelink/{linkId}\":\n    delete:\n      description: Deletes a remote issue link from an issue.\n      parameters:\n        - description: The ID or key of the issue.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n        - description: The ID of a remote issue link.\n          in: path\n          name: linkId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n    get:\n      description: Returns a remote issue link for an issue.\n      parameters:\n        - description: The ID or key of the issue.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n        - description: The ID of the remote issue link.\n          in: path\n          name: linkId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  application:\n                    properties:\n                      name:\n                        minLength: 1\n                        type: string\n                      type:\n                        minLength: 1\n                        type: string\n                    required:\n                      - type\n                      - name\n                    type: object\n                  globalId:\n                    minLength: 1\n                    type: string\n                  id:\n                    type: number\n                  object:\n                    properties:\n                      icon:\n                        properties:\n                          title:\n                            minLength: 1\n                            type: string\n                          url16x16:\n                            minLength: 1\n                            type: string\n                        required:\n                          - url16x16\n                          - title\n                        type: object\n                      status:\n                        properties:\n                          icon:\n                            properties:\n                              link:\n                                minLength: 1\n                                type: string\n                              title:\n                                minLength: 1\n                                type: string\n                              url16x16:\n                                minLength: 1\n                                type: string\n                            required:\n                              - url16x16\n                              - title\n                              - link\n                            type: object\n                          resolved:\n                            type: boolean\n                        required:\n                          - resolved\n                          - icon\n                        type: object\n                      summary:\n                        minLength: 1\n                        type: string\n                      title:\n                        minLength: 1\n                        type: string\n                      url:\n                        minLength: 1\n                        type: string\n                    required:\n                      - url\n                      - title\n                      - summary\n                      - icon\n                      - status\n                    type: object\n                  relationship:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - self\n                  - globalId\n                  - application\n                  - relationship\n                  - object\n                type: object\n    put:\n      description: Updates a remote issue link for an issue.\n      parameters:\n        - description: The ID or key of the issue.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n        - description: The ID of the remote issue link.\n          in: path\n          name: linkId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Body11\"\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n  \"/issue/{issueIdOrKey}/transitions\":\n    get:\n      description: Returns either all transitions or a transition that can be performed by\n        the user on an issue, based on the issue's status.\n      parameters:\n        - description: \"Use expand to include additional information about in the response.\n            This parameter accepts multiple values separated by a comma:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - transitions.fields\n              - fields\n              - update\n        - description: The ID or key of the issue.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n        - description: Indicates whether transitions with the condition Hide From User\n            Condition are included in the response.\n          in: query\n          name: skipRemoteOnlyCondition\n          schema:\n            type: boolean\n        - description: The ID of the transition.\n          in: query\n          name: transitionId\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  transitions:\n                    items:\n                      properties:\n                        fields:\n                          properties:\n                            summary:\n                              properties:\n                                allowedValues:\n                                  items:\n                                    properties: {}\n                                  type: array\n                                defaultValue:\n                                  minLength: 1\n                                  type: string\n                                hasDefaultValue:\n                                  type: boolean\n                                key:\n                                  minLength: 1\n                                  type: string\n                                name:\n                                  minLength: 1\n                                  type: string\n                                operations:\n                                  items:\n                                    properties: {}\n                                  type: array\n                                required:\n                                  type: boolean\n                                schema:\n                                  properties:\n                                    custom:\n                                      minLength: 1\n                                      type: string\n                                    customId:\n                                      type: number\n                                    items:\n                                      minLength: 1\n                                      type: string\n                                    type:\n                                      minLength: 1\n                                      type: string\n                                  required:\n                                    - type\n                                    - items\n                                    - custom\n                                    - customId\n                                  type: object\n                              required:\n                                - required\n                                - schema\n                                - name\n                                - key\n                                - hasDefaultValue\n                                - operations\n                                - allowedValues\n                                - defaultValue\n                              type: object\n                          required:\n                            - summary\n                          type: object\n                        hasScreen:\n                          type: boolean\n                        id:\n                          minLength: 1\n                          type: string\n                        isConditional:\n                          type: boolean\n                        isGlobal:\n                          type: boolean\n                        isInitial:\n                          type: boolean\n                        name:\n                          minLength: 1\n                          type: string\n                        to:\n                          properties:\n                            description:\n                              minLength: 1\n                              type: string\n                            iconUrl:\n                              minLength: 1\n                              type: string\n                            id:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                            self:\n                              minLength: 1\n                              type: string\n                            statusCategory:\n                              properties:\n                                colorName:\n                                  minLength: 1\n                                  type: string\n                                id:\n                                  type: number\n                                key:\n                                  minLength: 1\n                                  type: string\n                                name:\n                                  minLength: 1\n                                  type: string\n                                self:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - self\n                                - id\n                                - key\n                                - colorName\n                                - name\n                              type: object\n                          required:\n                            - self\n                            - description\n                            - iconUrl\n                            - name\n                            - id\n                            - statusCategory\n                          type: object\n                      required:\n                        - id\n                        - name\n                        - hasScreen\n                        - isGlobal\n                        - isInitial\n                        - isConditional\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - transitions\n                type: object\n    post:\n      description: Performs an issue transition and, if the transition has a screen,\n        updates the fields from the transition screen. Optionally, issue\n        properties can be set.\n      parameters:\n        - description: The ID or key of the issue.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Body8\"\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n  \"/issue/{issueIdOrKey}/votes\":\n    delete:\n      description: Deletes a user's vote from an issue. This is the equivalent of the user\n        clicking Unvote on an issue in Jira.\n      parameters:\n        - description: The ID or key of the issue.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n    get:\n      description: Returns details about the votes on an issue.\n      parameters:\n        - description: The ID or key of the issue.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  hasVoted:\n                    type: boolean\n                  self:\n                    minLength: 1\n                    type: string\n                  voters:\n                    items:\n                      properties:\n                        accountId:\n                          minLength: 1\n                          type: string\n                        active:\n                          type: boolean\n                        avatarUrls:\n                          properties:\n                            16x16:\n                              minLength: 1\n                              type: string\n                            24x24:\n                              minLength: 1\n                              type: string\n                            32x32:\n                              minLength: 1\n                              type: string\n                            48x48:\n                              minLength: 1\n                              type: string\n                          required:\n                            - 48x48\n                            - 24x24\n                            - 16x16\n                            - 32x32\n                          type: object\n                        displayName:\n                          minLength: 1\n                          type: string\n                        key:\n                          minLength: 1\n                          type: string\n                        name:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - key\n                        - accountId\n                        - name\n                        - displayName\n                        - active\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  votes:\n                    type: number\n                required:\n                  - self\n                  - votes\n                  - hasVoted\n                  - voters\n                type: object\n    post:\n      description: Adds the user's vote to an issue. This is the equivalent of the user\n        clicking Vote on an issue in Jira.\n      parameters:\n        - description: The ID or key of the issue.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n  \"/issue/{issueIdOrKey}/watchers\":\n    delete:\n      description: Deletes a user as a watcher of an issue.\n      parameters:\n        - description: The account ID of the user. Required if username is omitted,\n            otherwise must be omitted.\n          in: query\n          name: accountId\n          schema:\n            type: string\n        - description: The ID or key of the issue.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n        - description: The name of the user. Required if accountId is omitted, otherwise\n            must be omitted.\n          in: query\n          name: username\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n    get:\n      description: Returns the watchers for an issue.\n      parameters:\n        - description: The ID or key of the issue.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  isWatching:\n                    type: boolean\n                  self:\n                    minLength: 1\n                    type: string\n                  watchCount:\n                    type: number\n                  watchers:\n                    items:\n                      properties:\n                        active:\n                          type: boolean\n                        displayName:\n                          minLength: 1\n                          type: string\n                        name:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - name\n                        - displayName\n                        - active\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - self\n                  - isWatching\n                  - watchCount\n                  - watchers\n                type: object\n    post:\n      description: Adds a user as a watcher of an issue. If no user is specified the\n        calling user is added.\n      parameters:\n        - description: The ID or key of the issue.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Returned if the request was successful.\n  \"/issue/{issueIdOrKey}/worklog\":\n    get:\n      description: Returns all worklogs for an issue.\n      parameters:\n        - description: \"Use expand to include additional information about worklogs in the\n            response. This parameter accepts multiple values separated by a\n            comma:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - properties\n        - description: The ID or key of the issue.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n        - description: The maximum number of items to return per page. Maximum is 1048576.\n          in: query\n          name: maxResults\n          schema:\n            type: integer\n        - description: The index of the first item to return in a page of results (page\n            offset).\n          in: query\n          name: startAt\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the request is successful\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  maxResults:\n                    type: number\n                  startAt:\n                    type: number\n                  total:\n                    type: number\n                  worklogs:\n                    items:\n                      properties:\n                        author:\n                          properties:\n                            active:\n                              type: boolean\n                            displayName:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                            self:\n                              minLength: 1\n                              type: string\n                          required:\n                            - self\n                            - name\n                            - displayName\n                            - active\n                          type: object\n                        comment:\n                          properties:\n                            content:\n                              items:\n                                properties:\n                                  content:\n                                    items:\n                                      properties:\n                                        text:\n                                          minLength: 1\n                                          type: string\n                                        type:\n                                          minLength: 1\n                                          type: string\n                                      required:\n                                        - type\n                                        - text\n                                    minItems: 1\n                                    type: array\n                                    uniqueItems: true\n                                  type:\n                                    minLength: 1\n                                    type: string\n                                required:\n                                  - type\n                              minItems: 1\n                              type: array\n                              uniqueItems: true\n                            type:\n                              minLength: 1\n                              type: string\n                            version:\n                              type: number\n                          required:\n                            - type\n                            - version\n                            - content\n                          type: object\n                        id:\n                          minLength: 1\n                          type: string\n                        issueId:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                        started:\n                          minLength: 1\n                          type: string\n                        timeSpent:\n                          minLength: 1\n                          type: string\n                        timeSpentSeconds:\n                          type: number\n                        updateAuthor:\n                          properties:\n                            active:\n                              type: boolean\n                            displayName:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                            self:\n                              minLength: 1\n                              type: string\n                          required:\n                            - self\n                            - name\n                            - displayName\n                            - active\n                          type: object\n                        updated:\n                          minLength: 1\n                          type: string\n                        visibility:\n                          properties:\n                            type:\n                              minLength: 1\n                              type: string\n                            value:\n                              minLength: 1\n                              type: string\n                          required:\n                            - type\n                            - value\n                          type: object\n                      required:\n                        - self\n                        - updated\n                        - started\n                        - timeSpent\n                        - timeSpentSeconds\n                        - id\n                        - issueId\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - startAt\n                  - maxResults\n                  - total\n                  - worklogs\n                type: object\n    post:\n      description: Adds a worklog to an issue.\n      parameters:\n        - description: \"Defines how to update the issue's time estimate, the options are:\"\n          in: query\n          name: adjustEstimate\n          schema:\n            type: string\n            enum:\n              - new\n              - newEstimate\n              - leave\n              - manual\n              - reduceBy\n              - auto\n              - timeSpent\n        - description: \"Use expand to include additional information about work logs in the\n            response. This parameter accepts multiple values separated by a\n            comma:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - properties\n        - description: The ID or key the issue.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n        - description: \"The value to set as the issue's remaining time estimate, as days\n            (#d), hours (#h), or minutes (#m or #). For example, 2d. Required\n            when adjustEstimate is new.\"\n          in: query\n          name: newEstimate\n          schema:\n            type: string\n        - description: Indicates whether users watching the issue are notified by email.\n          in: query\n          name: notifyUsers\n          schema:\n            type: boolean\n        - description: Indicates whether the worklog entry should be added to the issue\n            even if the issue is not editable, because jira.issue.editable set\n            to false or missing. For example, the issue is closed. Only connect\n            app users with admin scope permission can use this flag.\n          in: query\n          name: overrideEditableFlag\n          schema:\n            type: boolean\n        - description: The amount to reduce the issue's remaining estimate by, as days\n            (#d), hours (#h), or minutes (#m). For example, 2d. Required when\n            adjustEstimate is manual.\n          in: query\n          name: reduceBy\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Body3\"\n      responses:\n        \"201\":\n          description: Returned if the request was successful\n  \"/issue/{issueIdOrKey}/worklog/{id}\":\n    delete:\n      description: Deletes a worklog from an issue.\n      parameters:\n        - description: \"Defines how to update the issue's time estimate, the options are:\"\n          in: query\n          name: adjustEstimate\n          schema:\n            type: string\n            enum:\n              - new\n              - newEstimate\n              - leave\n              - manual\n              - increaseBy\n              - auto\n              - timeSpent\n        - description: The ID of the worklog.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: \"The amount to increase the issue's remaining estimate by, as days\n            (#d), hours (#h), or minutes (#m or #). For example, 2d. Required\n            when adjustEstimate is manual.\"\n          in: query\n          name: increaseBy\n          schema:\n            type: string\n        - description: The ID or key of the issue.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n        - description: \"The value to set as the issue's remaining time estimate, as days\n            (#d), hours (#h), or minutes (#m or #). For example, 2d. Required\n            when adjustEstimate is new.\"\n          in: query\n          name: newEstimate\n          schema:\n            type: string\n        - description: Indicates whether users watching the issue are notified by email.\n          in: query\n          name: notifyUsers\n          schema:\n            type: boolean\n        - description: Indicates whether the work log entry should be added to the issue\n            even if the issue is not editable, because jira.issue.editable set\n            to false or missing. For example, the issue is closed. Only connect\n            app users with admin permissions can use this flag.\n          in: query\n          name: overrideEditableFlag\n          schema:\n            type: boolean\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n    get:\n      description: Returns a worklog.\n      parameters:\n        - description: \"Use expand to include additional information about work logs in the\n            response. This parameter accepts multiple values separated by a\n            comma:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - properties\n        - description: The ID of the worklog.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: The ID or key of the issue.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  author:\n                    properties:\n                      active:\n                        type: boolean\n                      displayName:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - name\n                      - displayName\n                      - active\n                    type: object\n                  comment:\n                    properties:\n                      content:\n                        items:\n                          properties:\n                            content:\n                              items:\n                                properties:\n                                  text:\n                                    minLength: 1\n                                    type: string\n                                  type:\n                                    minLength: 1\n                                    type: string\n                                required:\n                                  - type\n                                  - text\n                              minItems: 1\n                              type: array\n                              uniqueItems: true\n                            type:\n                              minLength: 1\n                              type: string\n                          required:\n                            - type\n                        minItems: 1\n                        type: array\n                        uniqueItems: true\n                      type:\n                        minLength: 1\n                        type: string\n                      version:\n                        type: number\n                    required:\n                      - type\n                      - version\n                      - content\n                    type: object\n                  id:\n                    minLength: 1\n                    type: string\n                  issueId:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                  started:\n                    minLength: 1\n                    type: string\n                  timeSpent:\n                    minLength: 1\n                    type: string\n                  timeSpentSeconds:\n                    type: number\n                  updateAuthor:\n                    properties:\n                      active:\n                        type: boolean\n                      displayName:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - name\n                      - displayName\n                      - active\n                    type: object\n                  updated:\n                    minLength: 1\n                    type: string\n                  visibility:\n                    properties:\n                      type:\n                        minLength: 1\n                        type: string\n                      value:\n                        minLength: 1\n                        type: string\n                    required:\n                      - type\n                      - value\n                    type: object\n                required:\n                  - self\n                  - author\n                  - updateAuthor\n                  - comment\n                  - updated\n                  - visibility\n                  - started\n                  - timeSpent\n                  - timeSpentSeconds\n                  - id\n                  - issueId\n                type: object\n    put:\n      description: Updates a worklog.\n      parameters:\n        - description: \"Defines how to update the issue's time estimate, the options are:\"\n          in: query\n          name: adjustEstimate\n          schema:\n            type: string\n            enum:\n              - new\n              - newEstimate\n              - leave\n              - auto\n              - timeSpent\n              - timeSpentSeconds\n        - description: \"Use expand to include additional information about worklogs in the\n            response. This parameter accepts multiple values separated by a\n            comma:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - properties\n        - description: The ID of the worklog.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: The ID or key the issue.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n        - description: \"The value to set as the issue's remaining time estimate, as days\n            (#d), hours (#h), or minutes (#m or #). For example, 2d. Required\n            when adjustEstimate is new.\"\n          in: query\n          name: newEstimate\n          schema:\n            type: string\n        - description: Indicates whether users watching the issue are notified by email.\n          in: query\n          name: notifyUsers\n          schema:\n            type: boolean\n        - description: Indicates whether the worklog should be added to the issue even if\n            the issue is not editable, for example, because the issue is closed.\n            Only connect app users with admin permissions can use this flag.\n          in: query\n          name: overrideEditableFlag\n          schema:\n            type: boolean\n      requestBody:\n        $ref: \"#/components/requestBodies/Body3\"\n      responses:\n        \"200\":\n          description: Returned if the request is successful\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  author:\n                    properties:\n                      active:\n                        type: boolean\n                      displayName:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - name\n                      - displayName\n                      - active\n                    type: object\n                  comment:\n                    properties:\n                      content:\n                        items:\n                          properties:\n                            content:\n                              items:\n                                properties:\n                                  text:\n                                    minLength: 1\n                                    type: string\n                                  type:\n                                    minLength: 1\n                                    type: string\n                                required:\n                                  - type\n                                  - text\n                              minItems: 1\n                              type: array\n                              uniqueItems: true\n                            type:\n                              minLength: 1\n                              type: string\n                          required:\n                            - type\n                        minItems: 1\n                        type: array\n                        uniqueItems: true\n                      type:\n                        minLength: 1\n                        type: string\n                      version:\n                        type: number\n                    required:\n                      - type\n                      - version\n                      - content\n                    type: object\n                  id:\n                    minLength: 1\n                    type: string\n                  issueId:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                  started:\n                    minLength: 1\n                    type: string\n                  timeSpent:\n                    minLength: 1\n                    type: string\n                  timeSpentSeconds:\n                    type: number\n                  updateAuthor:\n                    properties:\n                      active:\n                        type: boolean\n                      displayName:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - name\n                      - displayName\n                      - active\n                    type: object\n                  updated:\n                    minLength: 1\n                    type: string\n                  visibility:\n                    properties:\n                      type:\n                        minLength: 1\n                        type: string\n                      value:\n                        minLength: 1\n                        type: string\n                    required:\n                      - type\n                      - value\n                    type: object\n                required:\n                  - self\n                  - author\n                  - updateAuthor\n                  - comment\n                  - updated\n                  - visibility\n                  - started\n                  - timeSpent\n                  - timeSpentSeconds\n                  - id\n                  - issueId\n                type: object\n  \"/issue/{issueIdOrKey}/worklog/{worklogId}/properties\":\n    get:\n      description: Returns the keys of all properties for a worklog.\n      parameters:\n        - description: The ID or key of the issue.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n        - description: The ID of the worklog.\n          in: path\n          name: worklogId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  keys:\n                    items:\n                      properties:\n                        key:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - key\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - keys\n                type: object\n  \"/issue/{issueIdOrKey}/worklog/{worklogId}/properties/{propertyKey}\":\n    delete:\n      description: Deletes a worklog property.\n      parameters:\n        - description: The ID or key of the issue.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n        - description: The key of the property.\n          in: path\n          name: propertyKey\n          required: true\n          schema:\n            type: string\n        - description: The ID of the worklog.\n          in: path\n          name: worklogId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Returned if the worklog property was removed successfully.\n    get:\n      description: Returns the value of a worklog property.\n      parameters:\n        - description: The ID or key of the issue.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n        - description: The key of the property.\n          in: path\n          name: propertyKey\n          required: true\n          schema:\n            type: string\n        - description: The ID of the worklog.\n          in: path\n          name: worklogId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  key:\n                    minLength: 1\n                    type: string\n                  value:\n                    properties:\n                      stride.conversation.id:\n                        minLength: 1\n                        type: string\n                      support.time:\n                        minLength: 1\n                        type: string\n                    required:\n                      - stride.conversation.id\n                      - support.time\n                    type: object\n                required:\n                  - key\n                  - value\n                type: object\n    put:\n      description: Sets the value of a worklog property. Use this operation to store custom\n        data against the worklog.\n      parameters:\n        - description: The ID or key of the issue.\n          in: path\n          name: issueIdOrKey\n          required: true\n          schema:\n            type: string\n        - description: The key of the issue property. The maximum length is 255 characters.\n          in: path\n          name: propertyKey\n          required: true\n          schema:\n            type: string\n        - description: The ID of the worklog.\n          in: path\n          name: worklogId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the worklog property is updated.\n  /issueLink:\n    post:\n      description: Creates a link between two issues. Use this operation to indicate a\n        relationship between two issues and optionally add a comment to the from\n        (outward) issue. To use this resource the site must have Issue Linking\n        enabled.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                comment:\n                  description: A comment.\n                  type: object\n                inwardIssue:\n                  description: The ID or key of a linked issue.\n                  type: object\n                outwardIssue:\n                  description: The ID or key of a linked issue.\n                  type: object\n                type:\n                  description: \"This bean is used as follows:\"\n                  type: object\n              type: object\n      responses:\n        \"201\":\n          description: Returned if the request is successful.\n  \"/issueLink/{linkId}\":\n    delete:\n      description: Deletes an issue link.\n      parameters:\n        - description: The ID of the issue link.\n          in: path\n          name: linkId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: 200 response\n    get:\n      description: Returns an issue link.\n      parameters:\n        - description: The ID of the issue link.\n          in: path\n          name: linkId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  id:\n                    minLength: 1\n                    type: string\n                  inwardIssue:\n                    properties:\n                      fields:\n                        properties:\n                          issuetype:\n                            properties:\n                              avatarId:\n                                type: number\n                              description:\n                                minLength: 1\n                                type: string\n                              iconUrl:\n                                minLength: 1\n                                type: string\n                              id:\n                                minLength: 1\n                                type: string\n                              name:\n                                minLength: 1\n                                type: string\n                              scope:\n                                properties:\n                                  project:\n                                    properties:\n                                      id:\n                                        minLength: 1\n                                        type: string\n                                    required:\n                                      - id\n                                    type: object\n                                  type:\n                                    minLength: 1\n                                    type: string\n                                required:\n                                  - type\n                                  - project\n                                type: object\n                              self:\n                                minLength: 1\n                                type: string\n                              subtask:\n                                type: boolean\n                            required:\n                              - self\n                              - id\n                              - description\n                              - iconUrl\n                              - name\n                              - subtask\n                              - avatarId\n                              - scope\n                            type: object\n                          priority:\n                            properties:\n                              description:\n                                minLength: 1\n                                type: string\n                              iconUrl:\n                                minLength: 1\n                                type: string\n                              id:\n                                minLength: 1\n                                type: string\n                              name:\n                                minLength: 1\n                                type: string\n                              self:\n                                minLength: 1\n                                type: string\n                              statusColor:\n                                minLength: 1\n                                type: string\n                            required:\n                              - self\n                              - statusColor\n                              - description\n                              - iconUrl\n                              - name\n                              - id\n                            type: object\n                          status:\n                            properties:\n                              description:\n                                minLength: 1\n                                type: string\n                              iconUrl:\n                                minLength: 1\n                                type: string\n                              id:\n                                minLength: 1\n                                type: string\n                              name:\n                                minLength: 1\n                                type: string\n                              self:\n                                minLength: 1\n                                type: string\n                              statusCategory:\n                                properties:\n                                  colorName:\n                                    minLength: 1\n                                    type: string\n                                  id:\n                                    type: number\n                                  key:\n                                    minLength: 1\n                                    type: string\n                                  self:\n                                    minLength: 1\n                                    type: string\n                                required:\n                                  - self\n                                  - id\n                                  - key\n                                  - colorName\n                                type: object\n                            required:\n                              - self\n                              - description\n                              - iconUrl\n                              - name\n                              - id\n                              - statusCategory\n                            type: object\n                        required:\n                          - status\n                          - priority\n                          - issuetype\n                        type: object\n                      id:\n                        minLength: 1\n                        type: string\n                      key:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                    required:\n                      - id\n                      - key\n                      - self\n                      - fields\n                    type: object\n                  outwardIssue:\n                    properties:\n                      fields:\n                        properties:\n                          issuetype:\n                            properties:\n                              avatarId:\n                                type: number\n                              description:\n                                minLength: 1\n                                type: string\n                              iconUrl:\n                                minLength: 1\n                                type: string\n                              id:\n                                minLength: 1\n                                type: string\n                              name:\n                                minLength: 1\n                                type: string\n                              self:\n                                minLength: 1\n                                type: string\n                              subtask:\n                                type: boolean\n                            required:\n                              - self\n                              - id\n                              - description\n                              - iconUrl\n                              - name\n                              - subtask\n                              - avatarId\n                            type: object\n                          priority:\n                            properties:\n                              description:\n                                minLength: 1\n                                type: string\n                              iconUrl:\n                                minLength: 1\n                                type: string\n                              id:\n                                minLength: 1\n                                type: string\n                              name:\n                                minLength: 1\n                                type: string\n                              self:\n                                minLength: 1\n                                type: string\n                              statusColor:\n                                minLength: 1\n                                type: string\n                            required:\n                              - self\n                              - statusColor\n                              - description\n                              - iconUrl\n                              - name\n                              - id\n                            type: object\n                          status:\n                            properties:\n                              description:\n                                minLength: 1\n                                type: string\n                              iconUrl:\n                                minLength: 1\n                                type: string\n                              id:\n                                minLength: 1\n                                type: string\n                              name:\n                                minLength: 1\n                                type: string\n                              self:\n                                minLength: 1\n                                type: string\n                              statusCategory:\n                                properties:\n                                  colorName:\n                                    minLength: 1\n                                    type: string\n                                  id:\n                                    type: number\n                                  key:\n                                    minLength: 1\n                                    type: string\n                                  name:\n                                    minLength: 1\n                                    type: string\n                                  self:\n                                    minLength: 1\n                                    type: string\n                                required:\n                                  - self\n                                  - id\n                                  - key\n                                  - colorName\n                                  - name\n                                type: object\n                            required:\n                              - self\n                              - description\n                              - iconUrl\n                              - name\n                              - id\n                              - statusCategory\n                            type: object\n                        required:\n                          - status\n                          - priority\n                          - issuetype\n                        type: object\n                      id:\n                        minLength: 1\n                        type: string\n                      key:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                    required:\n                      - id\n                      - key\n                      - self\n                      - fields\n                    type: object\n                  type:\n                    properties:\n                      id:\n                        minLength: 1\n                        type: string\n                      inward:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      outward:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                    required:\n                      - id\n                      - name\n                      - inward\n                      - outward\n                      - self\n                    type: object\n                required:\n                  - id\n                  - type\n                  - inwardIssue\n                  - outwardIssue\n                type: object\n  /issueLinkType:\n    get:\n      description: Returns a list of all issue link types.\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  issueLinkTypes:\n                    items:\n                      properties:\n                        id:\n                          minLength: 1\n                          type: string\n                        inward:\n                          minLength: 1\n                          type: string\n                        name:\n                          minLength: 1\n                          type: string\n                        outward:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - id\n                        - name\n                        - inward\n                        - outward\n                        - self\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - issueLinkTypes\n                type: object\n    post:\n      description: Creates an issue link type. Use this operation to create descriptions of\n        the reasons why issues are linked. The issue link type consists of a\n        name and descriptions for a link's inward and outward relationships.\n      requestBody:\n        $ref: \"#/components/requestBodies/Body12\"\n      responses:\n        \"201\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  id:\n                    minLength: 1\n                    type: string\n                  inward:\n                    minLength: 1\n                    type: string\n                  name:\n                    minLength: 1\n                    type: string\n                  outward:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - name\n                  - inward\n                  - outward\n                  - self\n                type: object\n  \"/issueLinkType/{issueLinkTypeId}\":\n    delete:\n      description: Deletes an issue link type.\n      parameters:\n        - description: The ID of the issue link type.\n          in: path\n          name: issueLinkTypeId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n    get:\n      description: Returns an issue link type.\n      parameters:\n        - description: The ID of the issue link type.\n          in: path\n          name: issueLinkTypeId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  id:\n                    minLength: 1\n                    type: string\n                  inward:\n                    minLength: 1\n                    type: string\n                  name:\n                    minLength: 1\n                    type: string\n                  outward:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - name\n                  - inward\n                  - outward\n                  - self\n                type: object\n    put:\n      description: Updates an issue link type.\n      parameters:\n        - description: The ID of the issue link type.\n          in: path\n          name: issueLinkTypeId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Body12\"\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  id:\n                    minLength: 1\n                    type: string\n                  inward:\n                    minLength: 1\n                    type: string\n                  name:\n                    minLength: 1\n                    type: string\n                  outward:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - name\n                  - inward\n                  - outward\n                  - self\n                type: object\n  /issuesecurityschemes:\n    get:\n      description: Returns all issue security schemes.\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  issueSecuritySchemes:\n                    items:\n                      properties:\n                        defaultSecurityLevelId:\n                          type: number\n                        description:\n                          minLength: 1\n                          type: string\n                        id:\n                          type: number\n                        name:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - id\n                        - name\n                        - description\n                        - defaultSecurityLevelId\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - issueSecuritySchemes\n                type: object\n  \"/issuesecurityschemes/{id}\":\n    get:\n      description: Returns an issue security scheme along with its security levels.\n      parameters:\n        - description: The ID of the issue security scheme. Use the Get issue security\n            schemes operation to get a list of issue security scheme IDs.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  defaultSecurityLevelId:\n                    type: number\n                  description:\n                    minLength: 1\n                    type: string\n                  id:\n                    type: number\n                  levels:\n                    items:\n                      properties:\n                        description:\n                          minLength: 1\n                          type: string\n                        id:\n                          minLength: 1\n                          type: string\n                        name:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - id\n                        - description\n                        - name\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  name:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - id\n                  - name\n                  - description\n                  - defaultSecurityLevelId\n                  - levels\n                type: object\n  /issuetype:\n    get:\n      description: \"Returns all issue types. Permissions required: Permission to access\n        Jira, however, only issue types that are visible to the user are\n        returned.\"\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    avatarId:\n                      type: number\n                    description:\n                      minLength: 1\n                      type: string\n                    iconUrl:\n                      minLength: 1\n                      type: string\n                    id:\n                      minLength: 1\n                      type: string\n                    name:\n                      minLength: 1\n                      type: string\n                    scope:\n                      properties:\n                        project:\n                          properties:\n                            id:\n                              minLength: 1\n                              type: string\n                          required:\n                            - id\n                          type: object\n                        type:\n                          minLength: 1\n                          type: string\n                      required:\n                        - type\n                        - project\n                      type: object\n                    self:\n                      minLength: 1\n                      type: string\n                    subtask:\n                      type: boolean\n                  required:\n                    - self\n                    - id\n                    - description\n                    - iconUrl\n                    - name\n                    - subtask\n                    - avatarId\n                    - scope\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n    post:\n      description: \"Creates an issue type and adds it to the default issue type scheme.\n        Permissions required: Administer Jira global permission.\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                description:\n                  description: The description of the issue type.\n                  type: string\n                name:\n                  description: The unique name for the issue type. Maximum length 60\n                    characters. Required.\n                  type: string\n                type:\n                  description: Whether the issue type is subtype or standard. Defaults to\n                    standard.\n                  enum:\n                    - subtask\n                    - standard\n                  type: string\n              type: object\n      responses:\n        \"201\":\n          description: Returned if the request is successful.\n  \"/issuetype/{id}\":\n    delete:\n      description: \"Deletes the issue type. If the issue type is in use, all uses are\n        updated with the alternative issue type (alternativeIssueTypeId). A list\n        of alternative issue types can be obtained from the Get alternative\n        issue types resource. Permissions required: Administer Jira global\n        permission.\"\n      parameters:\n        - description: The ID of the replacement issue type.\n          in: query\n          name: alternativeIssueTypeId\n          schema:\n            type: string\n        - description: The ID of the issue type.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n    get:\n      description: \"Returns an issue type. Permissions required:\"\n      parameters:\n        - description: The ID of the issue type.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  avatarId:\n                    type: number\n                  description:\n                    minLength: 1\n                    type: string\n                  iconUrl:\n                    minLength: 1\n                    type: string\n                  id:\n                    minLength: 1\n                    type: string\n                  name:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                  subtask:\n                    type: boolean\n                required:\n                  - self\n                  - id\n                  - description\n                  - iconUrl\n                  - name\n                  - subtask\n                  - avatarId\n                type: object\n    put:\n      description: \"Updates the issue type. Permissions required: Administer Jira global\n        permission.\"\n      parameters:\n        - description: The ID of the issue type.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                avatarId:\n                  description: The ID of an issue type avatar.\n                  type: integer\n                description:\n                  description: The description of the issue type.\n                  type: string\n                name:\n                  description: The unique name for the issue type. Maximum length 60\n                    characters.\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n  \"/issuetype/{id}/alternatives\":\n    get:\n      description: \"Returns a list of issue types that can be used to replace the issue\n        type. The alternative issue types are those assigned to the same\n        workflow scheme, field configuration scheme, and screen scheme.\n        Permissions required: Permission to access Jira.\"\n      parameters:\n        - description: The ID of the issue type.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    avatarId:\n                      type: number\n                    description:\n                      minLength: 1\n                      type: string\n                    iconUrl:\n                      minLength: 1\n                      type: string\n                    id:\n                      minLength: 1\n                      type: string\n                    name:\n                      minLength: 1\n                      type: string\n                    scope:\n                      properties:\n                        project:\n                          properties:\n                            id:\n                              minLength: 1\n                              type: string\n                          required:\n                            - id\n                          type: object\n                        type:\n                          minLength: 1\n                          type: string\n                      required:\n                        - type\n                        - project\n                      type: object\n                    self:\n                      minLength: 1\n                      type: string\n                    subtask:\n                      type: boolean\n                  required:\n                    - self\n                    - id\n                    - description\n                    - iconUrl\n                    - name\n                    - subtask\n                    - avatarId\n                    - scope\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n  \"/issuetype/{id}/avatar2\":\n    post:\n      description: Loads an avatar for the issue type.\n      parameters:\n        - description: The ID of the issue type.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: The length of each side of the crop region.\n          in: query\n          name: size\n          schema:\n            type: integer\n        - description: The X coordinate of the top-left corner of the crop region.\n          in: query\n          name: x\n          schema:\n            type: integer\n        - description: The Y coordinate of the top-left corner of the crop region.\n          in: query\n          name: y\n          schema:\n            type: integer\n      responses:\n        \"201\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  id:\n                    minLength: 1\n                    type: string\n                  isDeletable:\n                    type: boolean\n                  isSelected:\n                    type: boolean\n                  isSystemAvatar:\n                    type: boolean\n                  urls:\n                    properties:\n                      16x16:\n                        minLength: 1\n                        type: string\n                      24x24:\n                        minLength: 1\n                        type: string\n                      32x32:\n                        minLength: 1\n                        type: string\n                      48x48:\n                        minLength: 1\n                        type: string\n                    required:\n                      - 16x16\n                      - 24x24\n                      - 32x32\n                      - 48x48\n                    type: object\n                required:\n                  - id\n                  - isSystemAvatar\n                  - isSelected\n                  - isDeletable\n                  - urls\n                type: object\n  \"/issuetype/{issueTypeId}/properties\":\n    get:\n      description: \"Returns all the issue type property keys of the issue type. Permissions\n        required:\"\n      parameters:\n        - description: The ID of the issue type.\n          in: path\n          name: issueTypeId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  keys:\n                    items:\n                      properties:\n                        key:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - key\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - keys\n                type: object\n  \"/issuetype/{issueTypeId}/properties/{propertyKey}\":\n    delete:\n      description: \"Deletes the issue type property. Permissions required: Administer Jira\n        global permission.\"\n      parameters:\n        - description: The ID of the issue type.\n          in: path\n          name: issueTypeId\n          required: true\n          schema:\n            type: string\n        - description: The key of the property. Use Get issue type property keys to get a\n            list of all issue type property keys.\n          in: path\n          name: propertyKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Returned if the issue type property is deleted.\n    get:\n      description: \"Returns the key and value of the issue type property. Permissions\n        required:\"\n      parameters:\n        - description: The ID of the issue type.\n          in: path\n          name: issueTypeId\n          required: true\n          schema:\n            type: string\n        - description: The key of the property. Use Get issue type property keys to get a\n            list of all issue type property keys.\n          in: path\n          name: propertyKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  key:\n                    minLength: 1\n                    type: string\n                  value:\n                    properties:\n                      stride.conversation.id:\n                        minLength: 1\n                        type: string\n                      support.time:\n                        minLength: 1\n                        type: string\n                    required:\n                      - stride.conversation.id\n                      - support.time\n                    type: object\n                required:\n                  - key\n                  - value\n                type: object\n    put:\n      description: \"Creates or updates the value of the issue type property. Use this\n        resource to store and update data against an issue type. The value of\n        the request body must be a valid, non-empty JSON blob. The maximum\n        length of the property value is 32768 bytes. Permissions required:\n        Administer Jira global permission.\"\n      parameters:\n        - description: The ID of the issue type.\n          in: path\n          name: issueTypeId\n          required: true\n          schema:\n            type: string\n        - description: The key of the issue type property. The maximum length of the key is\n            255 bytes.\n          in: path\n          name: propertyKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the issue type property is updated.\n  /jql/autocompletedata:\n    get:\n      description: Returns reference data for JQL searches. This is a downloadable version\n        of the documentation provided in Advanced searching - fields reference\n        and Advanced searching - functions reference, along with a list of\n        JQL-reserved words. Use this information to assist with the programmatic\n        creation of JQL queries or the validation of queries built in a custom\n        query builder.\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  jqlReservedWords:\n                    items:\n                      properties: {}\n                    type: array\n                  visibleFieldNames:\n                    items:\n                      properties:\n                        auto:\n                          minLength: 1\n                          type: string\n                        cfid:\n                          minLength: 1\n                          type: string\n                        displayName:\n                          minLength: 1\n                          type: string\n                        operators:\n                          items:\n                            properties: {}\n                          type: array\n                        orderable:\n                          minLength: 1\n                          type: string\n                        searchable:\n                          minLength: 1\n                          type: string\n                        types:\n                          items:\n                            properties: {}\n                          type: array\n                        value:\n                          minLength: 1\n                          type: string\n                      required:\n                        - value\n                        - displayName\n                        - orderable\n                        - searchable\n                        - auto\n                        - cfid\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  visibleFunctionNames:\n                    items:\n                      properties:\n                        displayName:\n                          minLength: 1\n                          type: string\n                        isList:\n                          minLength: 1\n                          type: string\n                        types:\n                          items:\n                            properties: {}\n                          type: array\n                        value:\n                          minLength: 1\n                          type: string\n                      required:\n                        - value\n                        - displayName\n                        - isList\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - visibleFieldNames\n                  - visibleFunctionNames\n                  - jqlReservedWords\n                type: object\n  /jql/autocompletedata/suggestions:\n    get:\n      description: Returns the JQL search auto complete suggestions for a field.\n      parameters:\n        - description: The name of the field.\n          in: query\n          name: fieldName\n          schema:\n            type: string\n        - description: The partial field item name entered by the user.\n          in: query\n          name: fieldValue\n          schema:\n            type: string\n        - description: The name of the CHANGED operator predicate for which the suggestions\n            are generated. The valid predicate operators are by, from, and to.\n          in: query\n          name: predicateName\n          schema:\n            type: string\n        - description: The partial predicate item name entered by the user.\n          in: query\n          name: predicateValue\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  results:\n                    items:\n                      properties:\n                        displayName:\n                          minLength: 1\n                          type: string\n                        value:\n                          minLength: 1\n                          type: string\n                      required:\n                        - value\n                        - displayName\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - results\n                type: object\n  /jql/pdcleaner:\n    post:\n      description: The query strings having personal data that need to be migrated. There\n        should be at most 100 queries.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                queryStrings:\n                  description: The query strings having personal data that need to be\n                    migrated. There should be at most 100 queries.\n                  items:\n                    type: string\n                  type: array\n              type: object\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  queryStrings:\n                    items:\n                      properties: {}\n                    type: array\n                required:\n                  - queryStrings\n                type: object\n  /mypermissions:\n    get:\n      description: Returns a list of permissions indicating which permissions the user has.\n        Details of the user's permissions can be obtained in a global, project,\n        or issue context.\n      parameters:\n        - description: The ID of the issue.\n          in: query\n          name: issueId\n          schema:\n            type: string\n        - description: The key of the issue. Ignored if issueId is provided.\n          in: query\n          name: issueKey\n          schema:\n            type: string\n        - description: A comma separated list of permission keys. Omitting this parameter\n            is deprecated. To get the list of available permissions, use Get all\n            permissions. Note that deprecated keys cannot be used. Deprecated\n            keys are not returned by Get all permissions but are returned by\n            this operation if permissions is omitted.\n          in: query\n          name: permissions\n          schema:\n            type: string\n        - description: The ID of project.\n          in: query\n          name: projectId\n          schema:\n            type: string\n        - description: The key of project. Ignored if projectId is provided.\n          in: query\n          name: projectKey\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  permissions:\n                    properties:\n                      EDIT_ISSUE:\n                        properties:\n                          description:\n                            minLength: 1\n                            type: string\n                          havePermission:\n                            type: boolean\n                          id:\n                            minLength: 1\n                            type: string\n                          key:\n                            minLength: 1\n                            type: string\n                          name:\n                            minLength: 1\n                            type: string\n                          type:\n                            minLength: 1\n                            type: string\n                        required:\n                          - id\n                          - key\n                          - name\n                          - type\n                          - description\n                          - havePermission\n                        type: object\n                    required:\n                      - EDIT_ISSUE\n                    type: object\n                required:\n                  - permissions\n                type: object\n  /mypreferences:\n    delete:\n      description: Deletes a preference of the user, which restores the default value of\n        system defined settings.\n      parameters:\n        - description: The key of the preference.\n          in: query\n          name: key\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n    get:\n      description: Returns the value of a preference of the user.\n      parameters:\n        - description: The key of the preference.\n          in: query\n          name: key\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n    put:\n      description: \"Creates a preference for the user or updates its value. An arbitrary\n        preference can be created with the value containing up to 255\n        characters. In addition, the following keys define system preferences\n        that can be set or created:\"\n      parameters:\n        - description: The key of the preference. Maximum length is 255 characters.\n          in: query\n          name: key\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n  /mypreferences/locale:\n    delete:\n      description: Deletes the locale of the current user, which restores the default\n        setting.\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n    get:\n      description: Returns the locale for the current user.\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  locale:\n                    minLength: 1\n                    type: string\n                required:\n                  - locale\n                type: object\n    put:\n      description: Sets the locale of the current user. The requested locale must be one\n        supported by the instance of Jira.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                locale:\n                  description: \"The locale code. The Java the locale format is used: a two\n                    character language code (ISO 639), an underscore, and two\n                    letter country code (ISO 3166). For example, en_US\n                    represents a locale of English (United States). Required on\n                    create.\"\n                  type: string\n              type: object\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n  /myself:\n    get:\n      description: Returns details for the authenticated user.\n      parameters:\n        - description: \"Use expand to include additional information about user in the\n            response. This parameter accepts multiple values separated by a\n            comma:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - groups\n              - applicationRoles\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  accountId:\n                    minLength: 1\n                    type: string\n                  active:\n                    type: boolean\n                  applicationRoles:\n                    properties:\n                      items:\n                        items:\n                          properties: {}\n                        type: array\n                      size:\n                        type: number\n                    required:\n                      - size\n                      - items\n                    type: object\n                  avatarUrls:\n                    properties:\n                      16x16:\n                        minLength: 1\n                        type: string\n                      24x24:\n                        minLength: 1\n                        type: string\n                      32x32:\n                        minLength: 1\n                        type: string\n                      48x48:\n                        minLength: 1\n                        type: string\n                    required:\n                      - 48x48\n                      - 24x24\n                      - 16x16\n                      - 32x32\n                    type: object\n                  displayName:\n                    minLength: 1\n                    type: string\n                  emailAddress:\n                    minLength: 1\n                    type: string\n                  groups:\n                    properties:\n                      items:\n                        items:\n                          properties: {}\n                        type: array\n                      size:\n                        type: number\n                    required:\n                      - size\n                      - items\n                    type: object\n                  key:\n                    minLength: 1\n                    type: string\n                  name:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                  timeZone:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - key\n                  - accountId\n                  - name\n                  - emailAddress\n                  - avatarUrls\n                  - displayName\n                  - active\n                  - timeZone\n                  - groups\n                  - applicationRoles\n                type: object\n  /notificationscheme:\n    get:\n      description: Returns a paginated list of notification schemes in order by display\n        name.\n      parameters:\n        - description: \"Use expand to include additional information in the response. This\n            parameter accepts multiple values separated by a comma:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - all\n              - field\n              - group\n              - notificationSchemeEvents\n              - projectRole\n              - user\n        - description: The maximum number of items to return per page. Max is 50.\n          in: query\n          name: maxResults\n          schema:\n            type: integer\n        - description: The index of the first item to return in a page of results (page\n            offset). The base index is 0.\n          in: query\n          name: startAt\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the request is successful. Only returns notification\n            schemes that the user has permission to access. An empty list is\n            returned if the requesting user lacks permission to access all\n            notification schemes.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  isLast:\n                    type: boolean\n                  maxResults:\n                    type: number\n                  startAt:\n                    type: number\n                  total:\n                    type: number\n                  values:\n                    items:\n                      properties:\n                        description:\n                          minLength: 1\n                          type: string\n                        expand:\n                          minLength: 1\n                          type: string\n                        id:\n                          type: number\n                        name:\n                          minLength: 1\n                          type: string\n                        notificationSchemeEvents:\n                          items:\n                            properties:\n                              event:\n                                properties:\n                                  description:\n                                    minLength: 1\n                                    type: string\n                                  id:\n                                    type: number\n                                  name:\n                                    minLength: 1\n                                    type: string\n                                required:\n                                  - id\n                                  - name\n                                  - description\n                                type: object\n                              notifications:\n                                items:\n                                  properties:\n                                    expand:\n                                      minLength: 1\n                                      type: string\n                                    group:\n                                      properties:\n                                        name:\n                                          minLength: 1\n                                          type: string\n                                        self:\n                                          minLength: 1\n                                          type: string\n                                      required:\n                                        - name\n                                        - self\n                                      type: object\n                                    id:\n                                      type: number\n                                    notificationType:\n                                      minLength: 1\n                                      type: string\n                                    parameter:\n                                      minLength: 1\n                                      type: string\n                                  required:\n                                    - id\n                                    - notificationType\n                                    - parameter\n                                    - expand\n                                minItems: 1\n                                type: array\n                                uniqueItems: true\n                          minItems: 1\n                          type: array\n                          uniqueItems: true\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - expand\n                        - id\n                        - self\n                        - name\n                        - description\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - maxResults\n                  - startAt\n                  - total\n                  - isLast\n                  - values\n                type: object\n  \"/notificationscheme/{id}\":\n    get:\n      description: Returns a notification scheme, including the list of events and the\n        recipients who will receive notifications for those events.\n      parameters:\n        - description: \"Use expand to include additional information in the response. This\n            parameter accepts multiple values separated by a comma:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - all\n              - field\n              - group\n              - notificationSchemeEvents\n              - projectRole\n              - user\n        - description: The ID of the notification scheme. Use Get notification schemes\n            paginated to get a list of notification scheme IDs.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  description:\n                    minLength: 1\n                    type: string\n                  expand:\n                    minLength: 1\n                    type: string\n                  id:\n                    type: number\n                  name:\n                    minLength: 1\n                    type: string\n                  notificationSchemeEvents:\n                    items:\n                      properties:\n                        event:\n                          properties:\n                            description:\n                              minLength: 1\n                              type: string\n                            id:\n                              type: number\n                            name:\n                              minLength: 1\n                              type: string\n                          required:\n                            - id\n                            - name\n                            - description\n                          type: object\n                        notifications:\n                          items:\n                            properties:\n                              expand:\n                                minLength: 1\n                                type: string\n                              group:\n                                properties:\n                                  name:\n                                    minLength: 1\n                                    type: string\n                                  self:\n                                    minLength: 1\n                                    type: string\n                                required:\n                                  - name\n                                  - self\n                                type: object\n                              id:\n                                type: number\n                              notificationType:\n                                minLength: 1\n                                type: string\n                              parameter:\n                                minLength: 1\n                                type: string\n                            required:\n                              - id\n                              - notificationType\n                              - parameter\n                              - expand\n                          minItems: 1\n                          type: array\n                          uniqueItems: true\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - expand\n                  - id\n                  - self\n                  - name\n                  - description\n                  - notificationSchemeEvents\n                type: object\n  /permissions:\n    get:\n      description: \"Returns all permissions, including:\"\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  permissions:\n                    properties:\n                      BULK_CHANGE:\n                        properties:\n                          description:\n                            minLength: 1\n                            type: string\n                          key:\n                            minLength: 1\n                            type: string\n                          name:\n                            minLength: 1\n                            type: string\n                          type:\n                            minLength: 1\n                            type: string\n                        required:\n                          - key\n                          - name\n                          - type\n                          - description\n                        type: object\n                    required:\n                      - BULK_CHANGE\n                    type: object\n                required:\n                  - permissions\n                type: object\n  /permissions/project:\n    post:\n      description: Returns all the projects where the user is granted a list of project\n        permissions.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                permissions:\n                  description: A list of permission keys.\n                  items:\n                    type: string\n                  type: array\n              type: object\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  projects:\n                    items:\n                      properties:\n                        id:\n                          type: number\n                        key:\n                          minLength: 1\n                          type: string\n                      required:\n                        - id\n                        - key\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - projects\n                type: object\n  /permissionscheme:\n    get:\n      description: Returns all permission schemes.\n      parameters:\n        - description: \"Use expand to include additional information in the response. This\n            parameter accepts multiple values separated by a comma. Note that\n            permissions are included when you specify any value:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - all\n              - field\n              - group\n              - permissions\n              - projectRole\n              - user\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  permissionSchemes:\n                    items:\n                      properties:\n                        description:\n                          minLength: 1\n                          type: string\n                        id:\n                          type: number\n                        name:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - id\n                        - self\n                        - name\n                        - description\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - permissionSchemes\n                type: object\n    post:\n      description: \"Creates a new permission scheme. You can create a permission scheme\n        with or without defining a set of permission grants. Permissions\n        required: Administer Jira global permission.\"\n      parameters:\n        - description: \"Use expand to include additional information in the response. This\n            parameter accepts multiple values separated by a comma. Note that\n            permissions are always included when you specify any value:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - all\n              - field\n              - group\n              - permissions\n              - projectRole\n              - user\n      requestBody:\n        $ref: \"#/components/requestBodies/Body13\"\n      responses:\n        \"201\":\n          description: Returned if the permission scheme is created successfully.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  description:\n                    minLength: 1\n                    type: string\n                  id:\n                    type: number\n                  name:\n                    minLength: 1\n                    type: string\n                  permissions:\n                    items:\n                      properties:\n                        holder:\n                          properties:\n                            expand:\n                              minLength: 1\n                              type: string\n                            parameter:\n                              minLength: 1\n                              type: string\n                            type:\n                              minLength: 1\n                              type: string\n                          required:\n                            - type\n                            - parameter\n                            - expand\n                          type: object\n                        id:\n                          type: number\n                        permission:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - id\n                        - self\n                        - permission\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - self\n                  - name\n                  - description\n                  - permissions\n                type: object\n  \"/permissionscheme/{schemeId}\":\n    delete:\n      description: \"Deletes a permission scheme. Permissions required: Administer Jira\n        global permission.\"\n      parameters:\n        - description: The ID of the permission scheme being deleted (e.g., 10000).\n          in: path\n          name: schemeId\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          description: Returned if the permission scheme is deleted successfully.\n    get:\n      description: \"Returns a permission scheme. Permissions required: Permission to log in\n        to Jira.\"\n      parameters:\n        - description: \"Use expand to include additional information in the response. This\n            parameter accepts multiple values separated by a comma. Note that\n            permissions are included when you specify any value:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - all\n              - field\n              - group\n              - permissions\n              - projectRole\n              - user\n        - description: The ID of the permission scheme to return (e.g., 10000).\n          in: path\n          name: schemeId\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  description:\n                    minLength: 1\n                    type: string\n                  id:\n                    type: number\n                  name:\n                    minLength: 1\n                    type: string\n                  permissions:\n                    items:\n                      properties:\n                        holder:\n                          properties:\n                            expand:\n                              minLength: 1\n                              type: string\n                            parameter:\n                              minLength: 1\n                              type: string\n                            type:\n                              minLength: 1\n                              type: string\n                          required:\n                            - type\n                            - parameter\n                            - expand\n                          type: object\n                        id:\n                          type: number\n                        permission:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - id\n                        - self\n                        - permission\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - self\n                  - name\n                  - description\n                  - permissions\n                type: object\n    put:\n      description: \"Updates a permission scheme. Below are some important things to note\n        when using this resource:\"\n      parameters:\n        - description: \"Use expand to include additional information in the response. This\n            parameter accepts multiple values separated by a comma. Note that\n            permissions are always included when you specify any value:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - all\n              - field\n              - group\n              - permissions\n              - projectRole\n              - user\n        - description: The ID of the permission scheme to update (e.g., 10000).\n          in: path\n          name: schemeId\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        $ref: \"#/components/requestBodies/Body13\"\n      responses:\n        \"200\":\n          description: Returned if the scheme is updated successfully.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  description:\n                    minLength: 1\n                    type: string\n                  id:\n                    type: number\n                  name:\n                    minLength: 1\n                    type: string\n                  permissions:\n                    items:\n                      properties:\n                        holder:\n                          properties:\n                            expand:\n                              minLength: 1\n                              type: string\n                            parameter:\n                              minLength: 1\n                              type: string\n                            type:\n                              minLength: 1\n                              type: string\n                          required:\n                            - type\n                            - parameter\n                            - expand\n                          type: object\n                        id:\n                          type: number\n                        permission:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - id\n                        - self\n                        - permission\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - self\n                  - name\n                  - description\n                  - permissions\n                type: object\n  \"/permissionscheme/{schemeId}/permission\":\n    get:\n      description: \"Returns all permission grants for a permission scheme. Permissions\n        required: Permission to log in to Jira.\"\n      parameters:\n        - description: \"Use expand to include additional information in the response. This\n            parameter accepts multiple values separated by a comma. Note that\n            permissions are always included when you specify any value:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - permissions\n              - user\n              - group\n              - projectRole\n              - field\n              - all\n        - description: The ID of the permission scheme (e.g., 10010).\n          in: path\n          name: schemeId\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  expand:\n                    minLength: 1\n                    type: string\n                  permissions:\n                    items:\n                      properties:\n                        holder:\n                          properties:\n                            expand:\n                              minLength: 1\n                              type: string\n                            parameter:\n                              minLength: 1\n                              type: string\n                            type:\n                              minLength: 1\n                              type: string\n                          required:\n                            - type\n                            - parameter\n                            - expand\n                          type: object\n                        id:\n                          type: number\n                        permission:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - id\n                        - self\n                        - permission\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - permissions\n                  - expand\n                type: object\n    post:\n      description: \"Creates a new permission grant in the given permission scheme.\n        Permissions required: Administer Jira global permission.\"\n      parameters:\n        - description: \"Use expand to include additional information in the response. This\n            parameter accepts multiple values separated by a comma. Note that\n            permissions are always included when you specify any value:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - permissions\n              - user\n              - group\n              - projectRole\n              - field\n              - all\n        - description: The ID of the permission scheme in which to create a new permission\n            grant.\n          in: path\n          name: schemeId\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                holder:\n                  description: The user or group being granted the permission. It consists\n                    of a type and a type-dependent parameter. See holderfor more\n                    information.\n                  type: object\n                permission:\n                  description: The permission to grant. Choose from the list of built-in\n                    permissions or from any custom permissions that have been\n                    added by apps. For more information about custom\n                    permissions, see the project permission and global\n                    permission module documentation.\n                  type: string\n              type: object\n      responses:\n        \"201\":\n          description: Returned if the scheme permission is created successfully.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  holder:\n                    properties:\n                      expand:\n                        minLength: 1\n                        type: string\n                      parameter:\n                        minLength: 1\n                        type: string\n                      type:\n                        minLength: 1\n                        type: string\n                    required:\n                      - type\n                      - parameter\n                      - expand\n                    type: object\n                  id:\n                    type: number\n                  permission:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - self\n                  - holder\n                  - permission\n                type: object\n  \"/permissionscheme/{schemeId}/permission/{permissionId}\":\n    delete:\n      description: \"Deletes a permission grant from a permission scheme. See About\n        permission schemes and grants for more details. Permissions required:\n        Administer Jira global permission.\"\n      parameters:\n        - description: The ID of the permission grant to delete (e.g., 10847).\n          in: path\n          name: permissionId\n          required: true\n          schema:\n            type: integer\n        - description: The ID of the permission scheme to delete the permission grant from\n            (e.g., 10000).\n          in: path\n          name: schemeId\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          description: Returned if the permission grant is deleted successfully.\n    get:\n      description: \"Returns a permission grant. Permissions required: Permission to log in\n        to Jira.\"\n      parameters:\n        - description: \"Use expand to include additional information in the response. This\n            parameter accepts multiple values separated by a comma. Note that\n            permissions are always included when you specify any value:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - all\n              - field\n              - group\n              - permissions\n              - projectRole\n              - user\n        - description: The ID of the permission grant (e.g., 10000).\n          in: path\n          name: permissionId\n          required: true\n          schema:\n            type: integer\n        - description: The ID of the permission scheme (e.g., 10010).\n          in: path\n          name: schemeId\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  holder:\n                    properties:\n                      expand:\n                        minLength: 1\n                        type: string\n                      parameter:\n                        minLength: 1\n                        type: string\n                      type:\n                        minLength: 1\n                        type: string\n                    required:\n                      - type\n                      - parameter\n                      - expand\n                    type: object\n                  id:\n                    type: number\n                  permission:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - self\n                  - holder\n                  - permission\n                type: object\n  /priority:\n    get:\n      description: Returns the list of all issue priorities.\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    description:\n                      minLength: 1\n                      type: string\n                    iconUrl:\n                      minLength: 1\n                      type: string\n                    id:\n                      minLength: 1\n                      type: string\n                    name:\n                      minLength: 1\n                      type: string\n                    self:\n                      minLength: 1\n                      type: string\n                    statusColor:\n                      minLength: 1\n                      type: string\n                  required:\n                    - self\n                    - statusColor\n                    - description\n                    - iconUrl\n                    - name\n                    - id\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n  \"/priority/{id}\":\n    get:\n      description: Returns an issue priority.\n      parameters:\n        - description: The ID of the issue priority.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  description:\n                    minLength: 1\n                    type: string\n                  iconUrl:\n                    minLength: 1\n                    type: string\n                  id:\n                    minLength: 1\n                    type: string\n                  name:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                  statusColor:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - statusColor\n                  - description\n                  - iconUrl\n                  - name\n                  - id\n                type: object\n  /project:\n    get:\n      description: Returns all projects visible to the currently logged in user.\n        Deprecated, use Get projects paginated that supports search and\n        pagination. For projects to be visible, the authenticated user must be\n        granted either Browse projects or Administer projects permissions. If no\n        user is logged in, it returns all projects that are visible for\n        anonymous users.\n      parameters:\n        - description: \"Use expand to include additional information in the response. This\n            parameter accepts multiple values separated by a comma:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - description\n              - issueTypes\n              - lead\n              - projectKeys\n        - description: Returns the most recently accessed projects for the current user.\n            You may specify the number of results to return up to a maximum of\n            20. If no user is logged in, then the recently accessed projects\n            will be returned based on the current HTTP session.\n          in: query\n          name: recent\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returns a list of projects visible to the current user or visible\n            with anonymous access if no user is logged in.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    avatarUrls:\n                      properties:\n                        16x16:\n                          minLength: 1\n                          type: string\n                        24x24:\n                          minLength: 1\n                          type: string\n                        32x32:\n                          minLength: 1\n                          type: string\n                        48x48:\n                          minLength: 1\n                          type: string\n                      required:\n                        - 48x48\n                        - 24x24\n                        - 16x16\n                        - 32x32\n                      type: object\n                    id:\n                      minLength: 1\n                      type: string\n                    key:\n                      minLength: 1\n                      type: string\n                    name:\n                      minLength: 1\n                      type: string\n                    projectCategory:\n                      properties:\n                        description:\n                          minLength: 1\n                          type: string\n                        id:\n                          minLength: 1\n                          type: string\n                        name:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - id\n                        - name\n                        - description\n                      type: object\n                    self:\n                      minLength: 1\n                      type: string\n                    simplified:\n                      type: boolean\n                    style:\n                      minLength: 1\n                      type: string\n                  required:\n                    - self\n                    - id\n                    - key\n                    - name\n                    - avatarUrls\n                    - projectCategory\n                    - simplified\n                    - style\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n    post:\n      description: Creates a new project.\n      requestBody:\n        $ref: \"#/components/requestBodies/Body14\"\n      responses:\n        \"201\":\n          description: Returned if the project was created successfully.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  id:\n                    type: number\n                  key:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - id\n                  - key\n                type: object\n  /project/search:\n    get:\n      description: Returns projects visible to the currently logged in user. For projects\n        to be visible, the authenticated user must be granted either Browse\n        projects or Administer projects permissions. If no user is logged in,\n        then all projects visible to anonymous users are returned.\n      parameters:\n        - description: Filter results by projects for which the calling user has permission\n            to perform the given action. The view action corresponds with the\n            Browse projects project permission, and the edit action corresponds\n            with Administer project permissions.\n          in: query\n          name: action\n          schema:\n            type: string\n        - description: The ID of the project's category. A complete list of category IDs\n            can be found using the Get all project categories resource.\n          in: query\n          name: categoryId\n          schema:\n            type: integer\n        - description: \"Use expand to include additional information in the response. This\n            parameter accepts multiple values separated by a comma:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - description\n              - projectKeys\n              - lead\n              - issueTypes\n              - url\n        - description: The maximum number of items to return per page. Max 50.\n          in: query\n          name: maxResults\n          schema:\n            type: integer\n        - description: \"Order the results by a particular field. If the orderBy field is\n            not set, then projects are listed in ascending order by project\n            key:\"\n          in: query\n          name: orderBy\n          schema:\n            type: string\n            enum:\n              - category\n              - key\n              - name\n              - owner\n        - description: Filter the results using a literal string. Projects with a matching\n            key or name are returned (case insensitive).\n          in: query\n          name: query\n          schema:\n            type: string\n        - description: The starting index of the first item returned in the page of results\n            (page offset). The base index is 0.\n          in: query\n          name: startAt\n          schema:\n            type: integer\n        - description: Orders results by the project type. This parameter accepts multiple\n            values separated by a comma. Valid values are business,\n            service_desk, and software.\n          in: query\n          name: typeKey\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful. Returns a single page of\n            projects.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  isLast:\n                    type: boolean\n                  maxResults:\n                    type: number\n                  nextPage:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                  startAt:\n                    type: number\n                  total:\n                    type: number\n                  values:\n                    items:\n                      properties:\n                        avatarUrls:\n                          properties:\n                            16x16:\n                              minLength: 1\n                              type: string\n                            24x24:\n                              minLength: 1\n                              type: string\n                            32x32:\n                              minLength: 1\n                              type: string\n                            48x48:\n                              minLength: 1\n                              type: string\n                          required:\n                            - 48x48\n                            - 24x24\n                            - 16x16\n                            - 32x32\n                          type: object\n                        id:\n                          minLength: 1\n                          type: string\n                        key:\n                          minLength: 1\n                          type: string\n                        name:\n                          minLength: 1\n                          type: string\n                        projectCategory:\n                          properties:\n                            description:\n                              minLength: 1\n                              type: string\n                            id:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                            self:\n                              minLength: 1\n                              type: string\n                          required:\n                            - self\n                            - id\n                            - name\n                            - description\n                          type: object\n                        self:\n                          minLength: 1\n                          type: string\n                        simplified:\n                          type: boolean\n                        style:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - id\n                        - key\n                        - name\n                        - simplified\n                        - style\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - self\n                  - nextPage\n                  - maxResults\n                  - startAt\n                  - total\n                  - isLast\n                  - values\n                type: object\n  /project/type:\n    get:\n      description: Returns all project types, whether or not the instance has a valid\n        license for each type.\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    color:\n                      minLength: 1\n                      type: string\n                    descriptionI18nKey:\n                      minLength: 1\n                      type: string\n                    formattedKey:\n                      minLength: 1\n                      type: string\n                    icon:\n                      minLength: 1\n                      type: string\n                    key:\n                      minLength: 1\n                      type: string\n                  required:\n                    - key\n                    - formattedKey\n                    - descriptionI18nKey\n                    - icon\n                    - color\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n  \"/project/type/{projectTypeKey}\":\n    get:\n      description: Returns a project type.\n      parameters:\n        - description: The key of the project type.\n          in: path\n          name: projectTypeKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  color:\n                    minLength: 1\n                    type: string\n                  descriptionI18nKey:\n                    minLength: 1\n                    type: string\n                  formattedKey:\n                    minLength: 1\n                    type: string\n                  icon:\n                    minLength: 1\n                    type: string\n                  key:\n                    minLength: 1\n                    type: string\n                required:\n                  - key\n                  - formattedKey\n                  - descriptionI18nKey\n                  - icon\n                  - color\n                type: object\n  \"/project/type/{projectTypeKey}/accessible\":\n    get:\n      description: Returns a project type if it is accessible to the logged in user.\n      parameters:\n        - description: The key of the project type.\n          in: path\n          name: projectTypeKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  color:\n                    minLength: 1\n                    type: string\n                  descriptionI18nKey:\n                    minLength: 1\n                    type: string\n                  formattedKey:\n                    minLength: 1\n                    type: string\n                  icon:\n                    minLength: 1\n                    type: string\n                  key:\n                    minLength: 1\n                    type: string\n                required:\n                  - key\n                  - formattedKey\n                  - descriptionI18nKey\n                  - icon\n                  - color\n                type: object\n  \"/project/{projectIdOrKey}\":\n    delete:\n      description: Deletes an existing project.\n      parameters:\n        - description: The project ID or project key (case sensitive).\n          in: path\n          name: projectIdOrKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Returned if the project was deleted successfully.\n    get:\n      description: Returns the project details for the specified project.\n      parameters:\n        - description: \"Use expand to include additional information in the response. This\n            parameter accepts multiple values separated by a comma. Note that\n            the project description, issue types, and project lead are included\n            in all responses by default:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - description\n              - issueTypes\n              - lead\n              - projectKeys\n        - description: The project ID or project key (case sensitive).\n          in: path\n          name: projectIdOrKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  assigneeType:\n                    minLength: 1\n                    type: string\n                  avatarUrls:\n                    properties:\n                      16x16:\n                        minLength: 1\n                        type: string\n                      24x24:\n                        minLength: 1\n                        type: string\n                      32x32:\n                        minLength: 1\n                        type: string\n                      48x48:\n                        minLength: 1\n                        type: string\n                    required:\n                      - 48x48\n                      - 24x24\n                      - 16x16\n                      - 32x32\n                    type: object\n                  components:\n                    items:\n                      properties:\n                        assignee:\n                          properties:\n                            accountId:\n                              minLength: 1\n                              type: string\n                            active:\n                              type: boolean\n                            avatarUrls:\n                              properties:\n                                16x16:\n                                  minLength: 1\n                                  type: string\n                                24x24:\n                                  minLength: 1\n                                  type: string\n                                32x32:\n                                  minLength: 1\n                                  type: string\n                                48x48:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - 48x48\n                                - 24x24\n                                - 16x16\n                                - 32x32\n                              type: object\n                            displayName:\n                              minLength: 1\n                              type: string\n                            key:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                            self:\n                              minLength: 1\n                              type: string\n                          required:\n                            - self\n                            - key\n                            - accountId\n                            - name\n                            - avatarUrls\n                            - displayName\n                            - active\n                          type: object\n                        assigneeType:\n                          minLength: 1\n                          type: string\n                        description:\n                          minLength: 1\n                          type: string\n                        id:\n                          minLength: 1\n                          type: string\n                        isAssigneeTypeValid:\n                          type: boolean\n                        lead:\n                          properties:\n                            accountId:\n                              minLength: 1\n                              type: string\n                            active:\n                              type: boolean\n                            avatarUrls:\n                              properties:\n                                16x16:\n                                  minLength: 1\n                                  type: string\n                                24x24:\n                                  minLength: 1\n                                  type: string\n                                32x32:\n                                  minLength: 1\n                                  type: string\n                                48x48:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - 48x48\n                                - 24x24\n                                - 16x16\n                                - 32x32\n                              type: object\n                            displayName:\n                              minLength: 1\n                              type: string\n                            key:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                            self:\n                              minLength: 1\n                              type: string\n                          required:\n                            - self\n                            - key\n                            - accountId\n                            - name\n                            - avatarUrls\n                            - displayName\n                            - active\n                          type: object\n                        name:\n                          minLength: 1\n                          type: string\n                        project:\n                          minLength: 1\n                          type: string\n                        projectId:\n                          type: number\n                        realAssignee:\n                          properties:\n                            accountId:\n                              minLength: 1\n                              type: string\n                            active:\n                              type: boolean\n                            avatarUrls:\n                              properties:\n                                16x16:\n                                  minLength: 1\n                                  type: string\n                                24x24:\n                                  minLength: 1\n                                  type: string\n                                32x32:\n                                  minLength: 1\n                                  type: string\n                                48x48:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - 48x48\n                                - 24x24\n                                - 16x16\n                                - 32x32\n                              type: object\n                            displayName:\n                              minLength: 1\n                              type: string\n                            key:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                            self:\n                              minLength: 1\n                              type: string\n                          required:\n                            - self\n                            - key\n                            - accountId\n                            - name\n                            - avatarUrls\n                            - displayName\n                            - active\n                          type: object\n                        realAssigneeType:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - id\n                        - name\n                        - description\n                        - assigneeType\n                        - realAssigneeType\n                        - isAssigneeTypeValid\n                        - project\n                        - projectId\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  description:\n                    minLength: 1\n                    type: string\n                  email:\n                    minLength: 1\n                    type: string\n                  id:\n                    minLength: 1\n                    type: string\n                  issueTypes:\n                    items:\n                      properties:\n                        avatarId:\n                          type: number\n                        description:\n                          minLength: 1\n                          type: string\n                        iconUrl:\n                          minLength: 1\n                          type: string\n                        id:\n                          minLength: 1\n                          type: string\n                        name:\n                          minLength: 1\n                          type: string\n                        scope:\n                          properties:\n                            project:\n                              properties:\n                                id:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - id\n                              type: object\n                            type:\n                              minLength: 1\n                              type: string\n                          required:\n                            - type\n                            - project\n                          type: object\n                        self:\n                          minLength: 1\n                          type: string\n                        subtask:\n                          type: boolean\n                      required:\n                        - self\n                        - id\n                        - description\n                        - iconUrl\n                        - name\n                        - subtask\n                        - avatarId\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  key:\n                    minLength: 1\n                    type: string\n                  lead:\n                    properties:\n                      accountId:\n                        minLength: 1\n                        type: string\n                      active:\n                        type: boolean\n                      avatarUrls:\n                        properties:\n                          16x16:\n                            minLength: 1\n                            type: string\n                          24x24:\n                            minLength: 1\n                            type: string\n                          32x32:\n                            minLength: 1\n                            type: string\n                          48x48:\n                            minLength: 1\n                            type: string\n                        required:\n                          - 48x48\n                          - 24x24\n                          - 16x16\n                          - 32x32\n                        type: object\n                      displayName:\n                        minLength: 1\n                        type: string\n                      key:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - key\n                      - accountId\n                      - name\n                      - avatarUrls\n                      - displayName\n                      - active\n                    type: object\n                  name:\n                    minLength: 1\n                    type: string\n                  projectCategory:\n                    properties:\n                      description:\n                        minLength: 1\n                        type: string\n                      id:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - id\n                      - name\n                      - description\n                    type: object\n                  roles:\n                    properties:\n                      Developers:\n                        minLength: 1\n                        type: string\n                    required:\n                      - Developers\n                    type: object\n                  self:\n                    minLength: 1\n                    type: string\n                  simplified:\n                    type: boolean\n                  style:\n                    minLength: 1\n                    type: string\n                  url:\n                    minLength: 1\n                    type: string\n                  versions:\n                    items:\n                      properties: {}\n                    type: array\n                required:\n                  - self\n                  - id\n                  - key\n                  - description\n                  - lead\n                  - components\n                  - issueTypes\n                  - url\n                  - email\n                  - assigneeType\n                  - versions\n                  - name\n                  - roles\n                  - avatarUrls\n                  - projectCategory\n                  - simplified\n                  - style\n                type: object\n    put:\n      description: Updates the project details of an existing project.\n      parameters:\n        - description: \"Use expand to include additional information in the response. This\n            parameter accepts multiple values separated by a comma. Note that\n            the project description, issue types, and project lead are included\n            in all responses by default:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - description\n              - issueTypes\n              - lead\n              - projectKeys\n        - description: The project ID or project key (case sensitive).\n          in: path\n          name: projectIdOrKey\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Body14\"\n      responses:\n        \"200\":\n          description: Returned if the project was updated successfully.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  assigneeType:\n                    minLength: 1\n                    type: string\n                  avatarUrls:\n                    properties:\n                      16x16:\n                        minLength: 1\n                        type: string\n                      24x24:\n                        minLength: 1\n                        type: string\n                      32x32:\n                        minLength: 1\n                        type: string\n                      48x48:\n                        minLength: 1\n                        type: string\n                    required:\n                      - 48x48\n                      - 24x24\n                      - 16x16\n                      - 32x32\n                    type: object\n                  components:\n                    items:\n                      properties:\n                        assignee:\n                          properties:\n                            accountId:\n                              minLength: 1\n                              type: string\n                            active:\n                              type: boolean\n                            avatarUrls:\n                              properties:\n                                16x16:\n                                  minLength: 1\n                                  type: string\n                                24x24:\n                                  minLength: 1\n                                  type: string\n                                32x32:\n                                  minLength: 1\n                                  type: string\n                                48x48:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - 48x48\n                                - 24x24\n                                - 16x16\n                                - 32x32\n                              type: object\n                            displayName:\n                              minLength: 1\n                              type: string\n                            key:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                            self:\n                              minLength: 1\n                              type: string\n                          required:\n                            - self\n                            - key\n                            - accountId\n                            - name\n                            - avatarUrls\n                            - displayName\n                            - active\n                          type: object\n                        assigneeType:\n                          minLength: 1\n                          type: string\n                        description:\n                          minLength: 1\n                          type: string\n                        id:\n                          minLength: 1\n                          type: string\n                        isAssigneeTypeValid:\n                          type: boolean\n                        lead:\n                          properties:\n                            accountId:\n                              minLength: 1\n                              type: string\n                            active:\n                              type: boolean\n                            avatarUrls:\n                              properties:\n                                16x16:\n                                  minLength: 1\n                                  type: string\n                                24x24:\n                                  minLength: 1\n                                  type: string\n                                32x32:\n                                  minLength: 1\n                                  type: string\n                                48x48:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - 48x48\n                                - 24x24\n                                - 16x16\n                                - 32x32\n                              type: object\n                            displayName:\n                              minLength: 1\n                              type: string\n                            key:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                            self:\n                              minLength: 1\n                              type: string\n                          required:\n                            - self\n                            - key\n                            - accountId\n                            - name\n                            - avatarUrls\n                            - displayName\n                            - active\n                          type: object\n                        name:\n                          minLength: 1\n                          type: string\n                        project:\n                          minLength: 1\n                          type: string\n                        projectId:\n                          type: number\n                        realAssignee:\n                          properties:\n                            accountId:\n                              minLength: 1\n                              type: string\n                            active:\n                              type: boolean\n                            avatarUrls:\n                              properties:\n                                16x16:\n                                  minLength: 1\n                                  type: string\n                                24x24:\n                                  minLength: 1\n                                  type: string\n                                32x32:\n                                  minLength: 1\n                                  type: string\n                                48x48:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - 48x48\n                                - 24x24\n                                - 16x16\n                                - 32x32\n                              type: object\n                            displayName:\n                              minLength: 1\n                              type: string\n                            key:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                            self:\n                              minLength: 1\n                              type: string\n                          required:\n                            - self\n                            - key\n                            - accountId\n                            - name\n                            - avatarUrls\n                            - displayName\n                            - active\n                          type: object\n                        realAssigneeType:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - id\n                        - name\n                        - description\n                        - assigneeType\n                        - realAssigneeType\n                        - isAssigneeTypeValid\n                        - project\n                        - projectId\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  description:\n                    minLength: 1\n                    type: string\n                  email:\n                    minLength: 1\n                    type: string\n                  id:\n                    minLength: 1\n                    type: string\n                  issueTypes:\n                    items:\n                      properties:\n                        avatarId:\n                          type: number\n                        description:\n                          minLength: 1\n                          type: string\n                        iconUrl:\n                          minLength: 1\n                          type: string\n                        id:\n                          minLength: 1\n                          type: string\n                        name:\n                          minLength: 1\n                          type: string\n                        scope:\n                          properties:\n                            project:\n                              properties:\n                                id:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - id\n                              type: object\n                            type:\n                              minLength: 1\n                              type: string\n                          required:\n                            - type\n                            - project\n                          type: object\n                        self:\n                          minLength: 1\n                          type: string\n                        subtask:\n                          type: boolean\n                      required:\n                        - self\n                        - id\n                        - description\n                        - iconUrl\n                        - name\n                        - subtask\n                        - avatarId\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  key:\n                    minLength: 1\n                    type: string\n                  lead:\n                    properties:\n                      accountId:\n                        minLength: 1\n                        type: string\n                      active:\n                        type: boolean\n                      avatarUrls:\n                        properties:\n                          16x16:\n                            minLength: 1\n                            type: string\n                          24x24:\n                            minLength: 1\n                            type: string\n                          32x32:\n                            minLength: 1\n                            type: string\n                          48x48:\n                            minLength: 1\n                            type: string\n                        required:\n                          - 48x48\n                          - 24x24\n                          - 16x16\n                          - 32x32\n                        type: object\n                      displayName:\n                        minLength: 1\n                        type: string\n                      key:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - key\n                      - accountId\n                      - name\n                      - avatarUrls\n                      - displayName\n                      - active\n                    type: object\n                  name:\n                    minLength: 1\n                    type: string\n                  projectCategory:\n                    properties:\n                      description:\n                        minLength: 1\n                        type: string\n                      id:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - id\n                      - name\n                      - description\n                    type: object\n                  roles:\n                    properties:\n                      Developers:\n                        minLength: 1\n                        type: string\n                    required:\n                      - Developers\n                    type: object\n                  self:\n                    minLength: 1\n                    type: string\n                  simplified:\n                    type: boolean\n                  style:\n                    minLength: 1\n                    type: string\n                  url:\n                    minLength: 1\n                    type: string\n                  versions:\n                    items:\n                      properties: {}\n                    type: array\n                required:\n                  - self\n                  - id\n                  - key\n                  - description\n                  - lead\n                  - components\n                  - issueTypes\n                  - url\n                  - email\n                  - assigneeType\n                  - versions\n                  - name\n                  - roles\n                  - avatarUrls\n                  - projectCategory\n                  - simplified\n                  - style\n                type: object\n  \"/project/{projectIdOrKey}/avatar\":\n    put:\n      description: Sets the avatar displayed for a project.\n      parameters:\n        - description: The ID or (case-sensitive) key of the project.\n          in: path\n          name: projectIdOrKey\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                id:\n                  description: The ID of the avatar. Required when setting the project\n                    avatar, otherwise read only.\n                  type: string\n              type: object\n      responses:\n        \"204\":\n          description: Returned if request was successfully.\n  \"/project/{projectIdOrKey}/avatar/{id}\":\n    delete:\n      description: Deletes a custom avatar from a project. Note that system avatars cannot\n        be deleted.\n      parameters:\n        - description: The ID of the avatar.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: The project ID or (case-sensitive) key.\n          in: path\n          name: projectIdOrKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Returned if request was successfully.\n  \"/project/{projectIdOrKey}/avatar2\":\n    post:\n      description: Loads an avatar for a project.\n      parameters:\n        - description: The ID or (case-sensitive) key of the project.\n          in: path\n          name: projectIdOrKey\n          required: true\n          schema:\n            type: string\n        - description: The length of each side of the crop region.\n          in: query\n          name: size\n          schema:\n            type: integer\n        - description: The X coordinate of the top-left corner of the crop region.\n          in: query\n          name: x\n          schema:\n            type: integer\n        - description: The Y coordinate of the top-left corner of the crop region.\n          in: query\n          name: y\n          schema:\n            type: integer\n      responses:\n        \"201\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  id:\n                    minLength: 1\n                    type: string\n                  isDeletable:\n                    type: boolean\n                  isSelected:\n                    type: boolean\n                  isSystemAvatar:\n                    type: boolean\n                required:\n                  - id\n                  - isSystemAvatar\n                  - isSelected\n                  - isDeletable\n                type: object\n  \"/project/{projectIdOrKey}/avatars\":\n    get:\n      description: Returns all project avatars, grouped by system and custom avatars.\n      parameters:\n        - description: The ID or (case-sensitive) key of the project.\n          in: path\n          name: projectIdOrKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  custom:\n                    items:\n                      properties:\n                        id:\n                          minLength: 1\n                          type: string\n                        isDeletable:\n                          type: boolean\n                        isSelected:\n                          type: boolean\n                        isSystemAvatar:\n                          type: boolean\n                        urls:\n                          properties:\n                            16x16:\n                              minLength: 1\n                              type: string\n                            24x24:\n                              minLength: 1\n                              type: string\n                            32x32:\n                              minLength: 1\n                              type: string\n                            48x48:\n                              minLength: 1\n                              type: string\n                          required:\n                            - 16x16\n                            - 24x24\n                            - 32x32\n                            - 48x48\n                          type: object\n                      required:\n                        - id\n                        - isSystemAvatar\n                        - isSelected\n                        - isDeletable\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  system:\n                    items:\n                      properties:\n                        id:\n                          minLength: 1\n                          type: string\n                        isDeletable:\n                          type: boolean\n                        isSelected:\n                          type: boolean\n                        isSystemAvatar:\n                          type: boolean\n                        urls:\n                          properties:\n                            16x16:\n                              minLength: 1\n                              type: string\n                            24x24:\n                              minLength: 1\n                              type: string\n                            32x32:\n                              minLength: 1\n                              type: string\n                            48x48:\n                              minLength: 1\n                              type: string\n                          required:\n                            - 16x16\n                            - 24x24\n                            - 32x32\n                            - 48x48\n                          type: object\n                      required:\n                        - id\n                        - isSystemAvatar\n                        - isSelected\n                        - isDeletable\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - system\n                  - custom\n                type: object\n  \"/project/{projectIdOrKey}/component\":\n    get:\n      description: Returns a paginated representation of all components existing in a\n        single project. See the Get project components resource if you want to\n        get a full list of versions without pagination.\n      parameters:\n        - description: The maximum number of components to return per page. Max 50.\n          in: query\n          name: maxResults\n          schema:\n            type: integer\n        - description: \"Order the results by a particular field:\"\n          in: query\n          name: orderBy\n          schema:\n            type: string\n            enum:\n              - description\n              - issueCount\n              - lead\n              - name\n        - description: The project ID or project key (case sensitive).\n          in: path\n          name: projectIdOrKey\n          required: true\n          schema:\n            type: string\n        - description: Filter the results using a literal string. Components with a\n            matching name or description are returned (case insensitive).\n          in: query\n          name: query\n          schema:\n            type: string\n        - description: The starting index of the returned list of components. The base\n            index is 0.\n          in: query\n          name: startAt\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returns a single page of components.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  isLast:\n                    type: boolean\n                  maxResults:\n                    type: number\n                  nextPage:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                  startAt:\n                    type: number\n                  total:\n                    type: number\n                  values:\n                    items:\n                      properties:\n                        assignee:\n                          properties:\n                            accountId:\n                              minLength: 1\n                              type: string\n                            active:\n                              type: boolean\n                            avatarUrls:\n                              properties:\n                                16x16:\n                                  minLength: 1\n                                  type: string\n                                24x24:\n                                  minLength: 1\n                                  type: string\n                                32x32:\n                                  minLength: 1\n                                  type: string\n                                48x48:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - 48x48\n                                - 24x24\n                                - 16x16\n                                - 32x32\n                              type: object\n                            displayName:\n                              minLength: 1\n                              type: string\n                            key:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                            self:\n                              minLength: 1\n                              type: string\n                          required:\n                            - self\n                            - key\n                            - accountId\n                            - name\n                            - avatarUrls\n                            - displayName\n                            - active\n                          type: object\n                        assigneeType:\n                          minLength: 1\n                          type: string\n                        description:\n                          minLength: 1\n                          type: string\n                        id:\n                          minLength: 1\n                          type: string\n                        isAssigneeTypeValid:\n                          type: boolean\n                        issueCount:\n                          type: number\n                        lead:\n                          properties:\n                            accountId:\n                              minLength: 1\n                              type: string\n                            active:\n                              type: boolean\n                            avatarUrls:\n                              properties:\n                                16x16:\n                                  minLength: 1\n                                  type: string\n                                24x24:\n                                  minLength: 1\n                                  type: string\n                                32x32:\n                                  minLength: 1\n                                  type: string\n                                48x48:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - 48x48\n                                - 24x24\n                                - 16x16\n                                - 32x32\n                              type: object\n                            displayName:\n                              minLength: 1\n                              type: string\n                            key:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                            self:\n                              minLength: 1\n                              type: string\n                          required:\n                            - self\n                            - key\n                            - accountId\n                            - name\n                            - avatarUrls\n                            - displayName\n                            - active\n                          type: object\n                        name:\n                          minLength: 1\n                          type: string\n                        project:\n                          minLength: 1\n                          type: string\n                        projectId:\n                          type: number\n                        realAssignee:\n                          properties:\n                            accountId:\n                              minLength: 1\n                              type: string\n                            active:\n                              type: boolean\n                            avatarUrls:\n                              properties:\n                                16x16:\n                                  minLength: 1\n                                  type: string\n                                24x24:\n                                  minLength: 1\n                                  type: string\n                                32x32:\n                                  minLength: 1\n                                  type: string\n                                48x48:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - 48x48\n                                - 24x24\n                                - 16x16\n                                - 32x32\n                              type: object\n                            displayName:\n                              minLength: 1\n                              type: string\n                            key:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                            self:\n                              minLength: 1\n                              type: string\n                          required:\n                            - self\n                            - key\n                            - accountId\n                            - name\n                            - avatarUrls\n                            - displayName\n                            - active\n                          type: object\n                        realAssigneeType:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - issueCount\n                        - description\n                        - self\n                        - project\n                        - assigneeType\n                        - projectId\n                        - isAssigneeTypeValid\n                        - realAssigneeType\n                        - name\n                        - id\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - self\n                  - nextPage\n                  - maxResults\n                  - startAt\n                  - total\n                  - isLast\n                  - values\n                type: object\n  \"/project/{projectIdOrKey}/components\":\n    get:\n      description: Returns all components existing in a single project. See the Get project\n        components paginated resource if you want to get a full list of\n        components with pagination.\n      parameters:\n        - description: The project ID or project key (case sensitive).\n          in: path\n          name: projectIdOrKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the project exists and the user has permission to view\n            its components.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    assignee:\n                      properties:\n                        accountId:\n                          minLength: 1\n                          type: string\n                        active:\n                          type: boolean\n                        avatarUrls:\n                          properties:\n                            16x16:\n                              minLength: 1\n                              type: string\n                            24x24:\n                              minLength: 1\n                              type: string\n                            32x32:\n                              minLength: 1\n                              type: string\n                            48x48:\n                              minLength: 1\n                              type: string\n                          required:\n                            - 48x48\n                            - 24x24\n                            - 16x16\n                            - 32x32\n                          type: object\n                        displayName:\n                          minLength: 1\n                          type: string\n                        key:\n                          minLength: 1\n                          type: string\n                        name:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - key\n                        - accountId\n                        - name\n                        - avatarUrls\n                        - displayName\n                        - active\n                      type: object\n                    assigneeType:\n                      minLength: 1\n                      type: string\n                    description:\n                      minLength: 1\n                      type: string\n                    id:\n                      minLength: 1\n                      type: string\n                    isAssigneeTypeValid:\n                      type: boolean\n                    lead:\n                      properties:\n                        accountId:\n                          minLength: 1\n                          type: string\n                        active:\n                          type: boolean\n                        avatarUrls:\n                          properties:\n                            16x16:\n                              minLength: 1\n                              type: string\n                            24x24:\n                              minLength: 1\n                              type: string\n                            32x32:\n                              minLength: 1\n                              type: string\n                            48x48:\n                              minLength: 1\n                              type: string\n                          required:\n                            - 48x48\n                            - 24x24\n                            - 16x16\n                            - 32x32\n                          type: object\n                        displayName:\n                          minLength: 1\n                          type: string\n                        key:\n                          minLength: 1\n                          type: string\n                        name:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - key\n                        - accountId\n                        - name\n                        - avatarUrls\n                        - displayName\n                        - active\n                      type: object\n                    name:\n                      minLength: 1\n                      type: string\n                    project:\n                      minLength: 1\n                      type: string\n                    projectId:\n                      type: number\n                    realAssignee:\n                      properties:\n                        accountId:\n                          minLength: 1\n                          type: string\n                        active:\n                          type: boolean\n                        avatarUrls:\n                          properties:\n                            16x16:\n                              minLength: 1\n                              type: string\n                            24x24:\n                              minLength: 1\n                              type: string\n                            32x32:\n                              minLength: 1\n                              type: string\n                            48x48:\n                              minLength: 1\n                              type: string\n                          required:\n                            - 48x48\n                            - 24x24\n                            - 16x16\n                            - 32x32\n                          type: object\n                        displayName:\n                          minLength: 1\n                          type: string\n                        key:\n                          minLength: 1\n                          type: string\n                        name:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - key\n                        - accountId\n                        - name\n                        - avatarUrls\n                        - displayName\n                        - active\n                      type: object\n                    realAssigneeType:\n                      minLength: 1\n                      type: string\n                    self:\n                      minLength: 1\n                      type: string\n                  required:\n                    - self\n                    - id\n                    - name\n                    - description\n                    - lead\n                    - assigneeType\n                    - assignee\n                    - realAssigneeType\n                    - realAssignee\n                    - isAssigneeTypeValid\n                    - project\n                    - projectId\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n  \"/project/{projectIdOrKey}/properties\":\n    get:\n      description: Returns all project property keys for the project.\n      parameters:\n        - description: The project ID or project key (case sensitive).\n          in: path\n          name: projectIdOrKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request was successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  keys:\n                    items:\n                      properties:\n                        key:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - key\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - keys\n                type: object\n  \"/project/{projectIdOrKey}/properties/{propertyKey}\":\n    delete:\n      description: Removes the property from the project.\n      parameters:\n        - description: The project ID or project key (case sensitive).\n          in: path\n          name: projectIdOrKey\n          required: true\n          schema:\n            type: string\n        - description: The project property key. Use Get project property keys to get a\n            list of all project property keys.\n          in: path\n          name: propertyKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Returned if the project property was deleted successfully.\n    get:\n      description: Returns the value of the project property.\n      parameters:\n        - description: The project ID or project key (case sensitive).\n          in: path\n          name: projectIdOrKey\n          required: true\n          schema:\n            type: string\n        - description: The project property key. Use Get project property keys to get a\n            list of all project property keys.\n          in: path\n          name: propertyKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request was successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  key:\n                    minLength: 1\n                    type: string\n                  value:\n                    properties:\n                      stride.conversation.id:\n                        minLength: 1\n                        type: string\n                      support.time:\n                        minLength: 1\n                        type: string\n                    required:\n                      - stride.conversation.id\n                      - support.time\n                    type: object\n                required:\n                  - key\n                  - value\n                type: object\n    put:\n      description: Sets the value of the project property. You can use project properties\n        to store custom data against the project.\n      parameters:\n        - description: The project ID or project key (case sensitive).\n          in: path\n          name: projectIdOrKey\n          required: true\n          schema:\n            type: string\n        - description: The key of the project property. The maximum length is 255 bytes.\n          in: path\n          name: propertyKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the project property is successfully updated.\n  \"/project/{projectIdOrKey}/role\":\n    get:\n      description: Returns a list of project roles for the project.\n      parameters:\n        - description: The project ID or project key (case sensitive).\n          in: path\n          name: projectIdOrKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  Administrators:\n                    minLength: 1\n                    type: string\n                  Developers:\n                    minLength: 1\n                    type: string\n                  Users:\n                    minLength: 1\n                    type: string\n                required:\n                  - Administrators\n                  - Users\n                  - Developers\n                type: object\n  \"/project/{projectIdOrKey}/role/{id}\":\n    delete:\n      description: Deletes actors from a project role for the project.\n      parameters:\n        - description: The name of the group to remove from the project role.\n          in: query\n          name: group\n          schema:\n            type: string\n        - description: The ID of the project role. Use Get all project roles to get a list\n            of project role IDs.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: The project ID or project key (case sensitive).\n          in: path\n          name: projectIdOrKey\n          required: true\n          schema:\n            type: string\n        - description: The user account ID of the user to remove from the project role.\n          in: query\n          name: user\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n    get:\n      description: Returns the project role's details and actors associated with the\n        project. The list of actors is sorted by display name.\n      parameters:\n        - description: The ID of the project role. Use Get all project roles to get a list\n            of project role IDs.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: The project ID or project key (case sensitive).\n          in: path\n          name: projectIdOrKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  actors:\n                    items:\n                      properties:\n                        actorGroup:\n                          properties:\n                            displayName:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                          required:\n                            - name\n                            - displayName\n                          type: object\n                        displayName:\n                          minLength: 1\n                          type: string\n                        id:\n                          type: number\n                        name:\n                          minLength: 1\n                          type: string\n                        type:\n                          minLength: 1\n                          type: string\n                      required:\n                        - id\n                        - displayName\n                        - type\n                        - name\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  description:\n                    minLength: 1\n                    type: string\n                  id:\n                    type: number\n                  name:\n                    minLength: 1\n                    type: string\n                  scope:\n                    properties:\n                      project:\n                        properties:\n                          id:\n                            minLength: 1\n                            type: string\n                        required:\n                          - id\n                        type: object\n                      type:\n                        minLength: 1\n                        type: string\n                    required:\n                      - type\n                      - project\n                    type: object\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - name\n                  - id\n                  - description\n                  - actors\n                  - scope\n                type: object\n    post:\n      description: Adds additional actors to a project role for the project.\n      parameters:\n        - description: The ID of the project role. Use Get all project roles to get a list\n            of project role IDs.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: The project ID or project key (case sensitive).\n          in: path\n          name: projectIdOrKey\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                group:\n                  description: The name of the group to add.\n                  items:\n                    type: string\n                  type: array\n                user:\n                  description: The user account ID of the user to add.\n                  items:\n                    type: string\n                  type: array\n              type: object\n      responses:\n        \"200\":\n          description: Example response (application/json)\n    put:\n      description: Associates actors with the project role for the project, replacing all\n        existing actors.\n      parameters:\n        - description: The ID of the project role. Use Get all project roles to get a list\n            of project role IDs.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: The project ID or project key (case sensitive).\n          in: path\n          name: projectIdOrKey\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                categorisedActors:\n                  description: The actors to add to the project role for the project.\n                    Provide the group name or account ID. User key may be\n                    provided instead of account ID when not in GDPR-strict mode,\n                    however this is deprecated behavior. Add groups using\n                    atlassian-group-role-actor. Add users using\n                    atlassian-user-role-actor.\n                  type: object\n                id:\n                  description: The ID of the project role. Use Get all project roles to get\n                    a list of project role IDs.\n                  type: integer\n              type: object\n      responses:\n        \"200\":\n          description: Returned if the request is successful. The complete list of actors\n            for the project is returned.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  actors:\n                    items:\n                      properties:\n                        actorGroup:\n                          properties:\n                            displayName:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                          required:\n                            - name\n                            - displayName\n                          type: object\n                        displayName:\n                          minLength: 1\n                          type: string\n                        id:\n                          type: number\n                        name:\n                          minLength: 1\n                          type: string\n                        type:\n                          minLength: 1\n                          type: string\n                      required:\n                        - id\n                        - displayName\n                        - type\n                        - name\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  description:\n                    minLength: 1\n                    type: string\n                  id:\n                    type: number\n                  name:\n                    minLength: 1\n                    type: string\n                  scope:\n                    properties:\n                      project:\n                        properties:\n                          id:\n                            minLength: 1\n                            type: string\n                        required:\n                          - id\n                        type: object\n                      type:\n                        minLength: 1\n                        type: string\n                    required:\n                      - type\n                      - project\n                    type: object\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - name\n                  - id\n                  - description\n                  - actors\n                  - scope\n                type: object\n  \"/project/{projectIdOrKey}/roledetails\":\n    get:\n      description: Returns all project roles and the details for each role. Note that the\n        list of project roles is common to all projects.\n      parameters:\n        - description: The project ID or project key (case sensitive).\n          in: path\n          name: projectIdOrKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    actors:\n                      items:\n                        properties:\n                          actorGroup:\n                            properties:\n                              displayName:\n                                minLength: 1\n                                type: string\n                              name:\n                                minLength: 1\n                                type: string\n                            required:\n                              - name\n                              - displayName\n                            type: object\n                          displayName:\n                            minLength: 1\n                            type: string\n                          id:\n                            type: number\n                          name:\n                            minLength: 1\n                            type: string\n                          type:\n                            minLength: 1\n                            type: string\n                        required:\n                          - id\n                          - displayName\n                          - type\n                          - name\n                      minItems: 1\n                      type: array\n                      uniqueItems: true\n                    description:\n                      minLength: 1\n                      type: string\n                    id:\n                      type: number\n                    name:\n                      minLength: 1\n                      type: string\n                    scope:\n                      properties:\n                        project:\n                          properties:\n                            id:\n                              minLength: 1\n                              type: string\n                          required:\n                            - id\n                          type: object\n                        type:\n                          minLength: 1\n                          type: string\n                      required:\n                        - type\n                        - project\n                      type: object\n                    self:\n                      minLength: 1\n                      type: string\n                  required:\n                    - self\n                    - name\n                    - id\n                    - description\n                    - actors\n                    - scope\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n  \"/project/{projectIdOrKey}/statuses\":\n    get:\n      description: Returns the valid statuses for a project. The statuses are grouped by\n        issue type, as each project has a set of valid issue types and each\n        issue type has a set of valid statuses.\n      parameters:\n        - description: The project ID or project key (case sensitive).\n          in: path\n          name: projectIdOrKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returns a list of issue types and valid statuses for each type.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    id:\n                      minLength: 1\n                      type: string\n                    name:\n                      minLength: 1\n                      type: string\n                    self:\n                      minLength: 1\n                      type: string\n                    statuses:\n                      items:\n                        properties:\n                          description:\n                            minLength: 1\n                            type: string\n                          iconUrl:\n                            minLength: 1\n                            type: string\n                          id:\n                            minLength: 1\n                            type: string\n                          name:\n                            minLength: 1\n                            type: string\n                          self:\n                            minLength: 1\n                            type: string\n                        required:\n                          - self\n                          - description\n                          - iconUrl\n                          - name\n                          - id\n                      minItems: 1\n                      type: array\n                      uniqueItems: true\n                    subtask:\n                      type: boolean\n                  required:\n                    - self\n                    - id\n                    - name\n                    - subtask\n                    - statuses\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n  \"/project/{projectIdOrKey}/type/{newProjectTypeKey}\":\n    put:\n      description: Updates the project type.\n      parameters:\n        - description: The key of the new project type.\n          in: path\n          name: newProjectTypeKey\n          required: true\n          schema:\n            type: string\n        - description: The project ID or project key (case sensitive).\n          in: path\n          name: projectIdOrKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the project type was updated successfully.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  assigneeType:\n                    minLength: 1\n                    type: string\n                  avatarUrls:\n                    properties:\n                      16x16:\n                        minLength: 1\n                        type: string\n                      24x24:\n                        minLength: 1\n                        type: string\n                      32x32:\n                        minLength: 1\n                        type: string\n                      48x48:\n                        minLength: 1\n                        type: string\n                    required:\n                      - 48x48\n                      - 24x24\n                      - 16x16\n                      - 32x32\n                    type: object\n                  components:\n                    items:\n                      properties:\n                        assignee:\n                          properties:\n                            accountId:\n                              minLength: 1\n                              type: string\n                            active:\n                              type: boolean\n                            avatarUrls:\n                              properties:\n                                16x16:\n                                  minLength: 1\n                                  type: string\n                                24x24:\n                                  minLength: 1\n                                  type: string\n                                32x32:\n                                  minLength: 1\n                                  type: string\n                                48x48:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - 48x48\n                                - 24x24\n                                - 16x16\n                                - 32x32\n                              type: object\n                            displayName:\n                              minLength: 1\n                              type: string\n                            key:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                            self:\n                              minLength: 1\n                              type: string\n                          required:\n                            - self\n                            - key\n                            - accountId\n                            - name\n                            - avatarUrls\n                            - displayName\n                            - active\n                          type: object\n                        assigneeType:\n                          minLength: 1\n                          type: string\n                        description:\n                          minLength: 1\n                          type: string\n                        id:\n                          minLength: 1\n                          type: string\n                        isAssigneeTypeValid:\n                          type: boolean\n                        lead:\n                          properties:\n                            accountId:\n                              minLength: 1\n                              type: string\n                            active:\n                              type: boolean\n                            avatarUrls:\n                              properties:\n                                16x16:\n                                  minLength: 1\n                                  type: string\n                                24x24:\n                                  minLength: 1\n                                  type: string\n                                32x32:\n                                  minLength: 1\n                                  type: string\n                                48x48:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - 48x48\n                                - 24x24\n                                - 16x16\n                                - 32x32\n                              type: object\n                            displayName:\n                              minLength: 1\n                              type: string\n                            key:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                            self:\n                              minLength: 1\n                              type: string\n                          required:\n                            - self\n                            - key\n                            - accountId\n                            - name\n                            - avatarUrls\n                            - displayName\n                            - active\n                          type: object\n                        name:\n                          minLength: 1\n                          type: string\n                        project:\n                          minLength: 1\n                          type: string\n                        projectId:\n                          type: number\n                        realAssignee:\n                          properties:\n                            accountId:\n                              minLength: 1\n                              type: string\n                            active:\n                              type: boolean\n                            avatarUrls:\n                              properties:\n                                16x16:\n                                  minLength: 1\n                                  type: string\n                                24x24:\n                                  minLength: 1\n                                  type: string\n                                32x32:\n                                  minLength: 1\n                                  type: string\n                                48x48:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - 48x48\n                                - 24x24\n                                - 16x16\n                                - 32x32\n                              type: object\n                            displayName:\n                              minLength: 1\n                              type: string\n                            key:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                            self:\n                              minLength: 1\n                              type: string\n                          required:\n                            - self\n                            - key\n                            - accountId\n                            - name\n                            - avatarUrls\n                            - displayName\n                            - active\n                          type: object\n                        realAssigneeType:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - id\n                        - name\n                        - description\n                        - assigneeType\n                        - realAssigneeType\n                        - isAssigneeTypeValid\n                        - project\n                        - projectId\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  description:\n                    minLength: 1\n                    type: string\n                  email:\n                    minLength: 1\n                    type: string\n                  id:\n                    minLength: 1\n                    type: string\n                  issueTypes:\n                    items:\n                      properties:\n                        avatarId:\n                          type: number\n                        description:\n                          minLength: 1\n                          type: string\n                        iconUrl:\n                          minLength: 1\n                          type: string\n                        id:\n                          minLength: 1\n                          type: string\n                        name:\n                          minLength: 1\n                          type: string\n                        scope:\n                          properties:\n                            project:\n                              properties:\n                                id:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - id\n                              type: object\n                            type:\n                              minLength: 1\n                              type: string\n                          required:\n                            - type\n                            - project\n                          type: object\n                        self:\n                          minLength: 1\n                          type: string\n                        subtask:\n                          type: boolean\n                      required:\n                        - self\n                        - id\n                        - description\n                        - iconUrl\n                        - name\n                        - subtask\n                        - avatarId\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  key:\n                    minLength: 1\n                    type: string\n                  lead:\n                    properties:\n                      accountId:\n                        minLength: 1\n                        type: string\n                      active:\n                        type: boolean\n                      avatarUrls:\n                        properties:\n                          16x16:\n                            minLength: 1\n                            type: string\n                          24x24:\n                            minLength: 1\n                            type: string\n                          32x32:\n                            minLength: 1\n                            type: string\n                          48x48:\n                            minLength: 1\n                            type: string\n                        required:\n                          - 48x48\n                          - 24x24\n                          - 16x16\n                          - 32x32\n                        type: object\n                      displayName:\n                        minLength: 1\n                        type: string\n                      key:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - key\n                      - accountId\n                      - name\n                      - avatarUrls\n                      - displayName\n                      - active\n                    type: object\n                  name:\n                    minLength: 1\n                    type: string\n                  projectCategory:\n                    properties:\n                      description:\n                        minLength: 1\n                        type: string\n                      id:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - id\n                      - name\n                      - description\n                    type: object\n                  roles:\n                    properties:\n                      Developers:\n                        minLength: 1\n                        type: string\n                    required:\n                      - Developers\n                    type: object\n                  self:\n                    minLength: 1\n                    type: string\n                  simplified:\n                    type: boolean\n                  style:\n                    minLength: 1\n                    type: string\n                  url:\n                    minLength: 1\n                    type: string\n                  versions:\n                    items:\n                      properties: {}\n                    type: array\n                required:\n                  - self\n                  - id\n                  - key\n                  - description\n                  - lead\n                  - components\n                  - issueTypes\n                  - url\n                  - email\n                  - assigneeType\n                  - versions\n                  - name\n                  - roles\n                  - avatarUrls\n                  - projectCategory\n                  - simplified\n                  - style\n                type: object\n  \"/project/{projectIdOrKey}/version\":\n    get:\n      description: Returns a paginated representation of all versions existing in a single\n        project. See the Get project versions resource if you want to get a full\n        list of versions without pagination.\n      parameters:\n        - description: \"Use expand to include additional information in the response. This\n            parameter accepts multiple values separated by a comma:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - issuesstatus\n              - operations\n              - remotelinks\n        - description: The maximum number of versions to return per page. Max 50.\n          in: query\n          name: maxResults\n          schema:\n            type: integer\n        - description: \"Order the results by a particular field:\"\n          in: query\n          name: orderBy\n          schema:\n            type: string\n            enum:\n              - description\n              - name\n              - releaseDate\n              - sequence\n              - startDate\n        - description: The project ID or project key (case sensitive).\n          in: path\n          name: projectIdOrKey\n          required: true\n          schema:\n            type: string\n        - description: Filter the results using a literal string. Versions with matching\n            name or description are returned (case insensitive).\n          in: query\n          name: query\n          schema:\n            type: string\n        - description: The starting index of the returned list of versions (page offset).\n            The base index is 0.\n          in: query\n          name: startAt\n          schema:\n            type: integer\n        - description: A comma separated string used to filter the results by version\n            status.\n          in: query\n          name: status\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returns a single page of versions.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  isLast:\n                    type: boolean\n                  maxResults:\n                    type: number\n                  nextPage:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                  startAt:\n                    type: number\n                  total:\n                    type: number\n                  values:\n                    items:\n                      properties:\n                        archived:\n                          type: boolean\n                        description:\n                          minLength: 1\n                          type: string\n                        id:\n                          minLength: 1\n                          type: string\n                        name:\n                          minLength: 1\n                          type: string\n                        overdue:\n                          type: boolean\n                        projectId:\n                          type: number\n                        releaseDate:\n                          minLength: 1\n                          type: string\n                        released:\n                          type: boolean\n                        self:\n                          minLength: 1\n                          type: string\n                        userReleaseDate:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - id\n                        - description\n                        - name\n                        - archived\n                        - released\n                        - releaseDate\n                        - overdue\n                        - userReleaseDate\n                        - projectId\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - self\n                  - nextPage\n                  - maxResults\n                  - startAt\n                  - total\n                  - isLast\n                  - values\n                type: object\n  \"/project/{projectIdOrKey}/versions\":\n    get:\n      description: Returns all versions existing in a single project. The response is not\n        paginated. Use Get project versions paginated if you want to get the\n        versions in a project with pagination.\n      parameters:\n        - description: \"Use expand to include additional information in the response. This\n            parameter accepts multiple values separated by a comma:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - operations\n        - description: The project ID or project key (case sensitive).\n          in: path\n          name: projectIdOrKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    archived:\n                      type: boolean\n                    description:\n                      minLength: 1\n                      type: string\n                    id:\n                      minLength: 1\n                      type: string\n                    name:\n                      minLength: 1\n                      type: string\n                    overdue:\n                      type: boolean\n                    projectId:\n                      type: number\n                    releaseDate:\n                      minLength: 1\n                      type: string\n                    released:\n                      type: boolean\n                    self:\n                      minLength: 1\n                      type: string\n                    userReleaseDate:\n                      minLength: 1\n                      type: string\n                  required:\n                    - self\n                    - id\n                    - description\n                    - name\n                    - archived\n                    - released\n                    - releaseDate\n                    - overdue\n                    - userReleaseDate\n                    - projectId\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n  \"/project/{projectKeyOrId}/issuesecuritylevelscheme\":\n    get:\n      description: Returns the issue security scheme associated with the project.\n      parameters:\n        - description: The project ID or project key (case sensitive).\n          in: path\n          name: projectKeyOrId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  defaultSecurityLevelId:\n                    type: number\n                  description:\n                    minLength: 1\n                    type: string\n                  id:\n                    type: number\n                  levels:\n                    items:\n                      properties:\n                        description:\n                          minLength: 1\n                          type: string\n                        id:\n                          minLength: 1\n                          type: string\n                        name:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - id\n                        - description\n                        - name\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  name:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - id\n                  - name\n                  - description\n                  - defaultSecurityLevelId\n                  - levels\n                type: object\n  \"/project/{projectKeyOrId}/notificationscheme\":\n    get:\n      description: Gets a notification scheme associated with the project. See the Get\n        notification scheme resource for more information about notification\n        schemes.\n      parameters:\n        - description: \"Use expand to include additional information in the response. This\n            parameter accepts multiple values separated by a comma:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - all\n              - field\n              - group\n              - notificationSchemeEvents\n              - projectRole\n              - user\n        - description: The project ID or project key (case sensitive).\n          in: path\n          name: projectKeyOrId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  description:\n                    minLength: 1\n                    type: string\n                  expand:\n                    minLength: 1\n                    type: string\n                  id:\n                    type: number\n                  name:\n                    minLength: 1\n                    type: string\n                  notificationSchemeEvents:\n                    items:\n                      properties:\n                        event:\n                          properties:\n                            description:\n                              minLength: 1\n                              type: string\n                            id:\n                              type: number\n                            name:\n                              minLength: 1\n                              type: string\n                          required:\n                            - id\n                            - name\n                            - description\n                          type: object\n                        notifications:\n                          items:\n                            properties:\n                              expand:\n                                minLength: 1\n                                type: string\n                              group:\n                                properties:\n                                  name:\n                                    minLength: 1\n                                    type: string\n                                  self:\n                                    minLength: 1\n                                    type: string\n                                required:\n                                  - name\n                                  - self\n                                type: object\n                              id:\n                                type: number\n                              notificationType:\n                                minLength: 1\n                                type: string\n                              parameter:\n                                minLength: 1\n                                type: string\n                            required:\n                              - id\n                              - notificationType\n                              - parameter\n                              - expand\n                          minItems: 1\n                          type: array\n                          uniqueItems: true\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - expand\n                  - id\n                  - self\n                  - name\n                  - description\n                  - notificationSchemeEvents\n                type: object\n  \"/project/{projectKeyOrId}/permissionscheme\":\n    get:\n      description: Gets the permission scheme associated with the project.\n      parameters:\n        - description: \"Use expand to include additional information in the response. This\n            parameter accepts multiple values separated by a comma. Note that\n            permissions are included when you specify any value:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - all\n              - field\n              - group\n              - permissions\n              - projectRole\n              - user\n        - description: The project ID or project key (case sensitive).\n          in: path\n          name: projectKeyOrId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  description:\n                    minLength: 1\n                    type: string\n                  id:\n                    type: number\n                  name:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - self\n                  - name\n                  - description\n                type: object\n    put:\n      description: Associates a permission scheme with a particular project. See Managing\n        project permissions for more information about permission schemes.\n      parameters:\n        - description: \"Use expand to include additional information in the response. This\n            parameter accepts multiple values separated by a comma. Note that\n            permissions are included when you specify any value:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - all\n              - field\n              - group\n              - permissions\n              - projectRole\n              - user\n        - description: The project ID or project key (case sensitive).\n          in: path\n          name: projectKeyOrId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                id:\n                  description: The ID of the permission scheme to associate with the\n                    project. Use the Get all permission schemes resource to get\n                    a list of permission scheme IDs.\n                  type: integer\n              type: object\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  description:\n                    minLength: 1\n                    type: string\n                  id:\n                    type: number\n                  name:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - self\n                  - name\n                  - description\n                type: object\n  \"/project/{projectKeyOrId}/securitylevel\":\n    get:\n      description: Returns all issue security levels for the project that the currently\n        authenticated user has access to. If the user does not have permission\n        to see an issue security level, then that level is not returned. If the\n        user lacks the Set Issue Security permission, then an empty list is\n        returned.\n      parameters:\n        - description: The project ID or project key (case sensitive).\n          in: path\n          name: projectKeyOrId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  levels:\n                    items:\n                      properties:\n                        description:\n                          minLength: 1\n                          type: string\n                        id:\n                          minLength: 1\n                          type: string\n                        name:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - id\n                        - description\n                        - name\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - levels\n                type: object\n  /projectCategory:\n    get:\n      description: Returns all project categories.\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    description:\n                      minLength: 1\n                      type: string\n                    id:\n                      minLength: 1\n                      type: string\n                    name:\n                      minLength: 1\n                      type: string\n                    self:\n                      minLength: 1\n                      type: string\n                  required:\n                    - self\n                    - id\n                    - name\n                    - description\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n    post:\n      description: Creates a project category.\n      requestBody:\n        $ref: \"#/components/requestBodies/Body2\"\n      responses:\n        \"201\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  description:\n                    minLength: 1\n                    type: string\n                  id:\n                    minLength: 1\n                    type: string\n                  name:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - id\n                  - name\n                  - description\n                type: object\n  \"/projectCategory/{id}\":\n    delete:\n      description: Deletes a project category.\n      parameters:\n        - description: ID of the project category to delete.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n    get:\n      description: Returns a project category.\n      parameters:\n        - description: The ID of the project category.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  description:\n                    minLength: 1\n                    type: string\n                  id:\n                    minLength: 1\n                    type: string\n                  name:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - id\n                  - name\n                  - description\n                type: object\n    put:\n      description: Updates a project category.\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        $ref: \"#/components/requestBodies/Body2\"\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  description:\n                    minLength: 1\n                    type: string\n                  id:\n                    minLength: 1\n                    type: string\n                  name:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - id\n                  - name\n                  - description\n                type: object\n  /projectvalidate/key:\n    get:\n      description: Validates a project key by confirming the key is a valid string and not\n        in use.\n      parameters:\n        - description: The project key.\n          in: query\n          name: key\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  errorMessages:\n                    items:\n                      properties: {}\n                    type: array\n                  errors:\n                    properties:\n                      projectKey:\n                        minLength: 1\n                        type: string\n                    required:\n                      - projectKey\n                    type: object\n                required:\n                  - errorMessages\n                  - errors\n                type: object\n  /projectvalidate/validProjectKey:\n    get:\n      description: Validates a project key and, if the key is invalid or in use, generates\n        a valid random string for the project key.\n      parameters:\n        - description: The project key.\n          in: query\n          name: key\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  \"0\":\n                    minLength: 1\n                    type: string\n                  \"1\":\n                    minLength: 1\n                    type: string\n                  \"2\":\n                    minLength: 1\n                    type: string\n                  \"3\":\n                    minLength: 1\n                    type: string\n                required:\n                  - \"0\"\n                  - \"1\"\n                  - \"2\"\n                  - \"3\"\n                type: object\n  /projectvalidate/validProjectName:\n    get:\n      description: Checks that a project name isn't in use. If the name isn't in use, the\n        passed string is returned. If the name is in use, this operation\n        attempts to generate a valid project name based on the one supplied,\n        usually by adding a sequence number. If a valid project name cannot be\n        generated, a 404 response is returned.\n      parameters:\n        - description: The project name.\n          in: query\n          name: name\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  \"0\":\n                    minLength: 1\n                    type: string\n                  \"1\":\n                    minLength: 1\n                    type: string\n                  \"2\":\n                    minLength: 1\n                    type: string\n                  \"3\":\n                    minLength: 1\n                    type: string\n                  \"4\":\n                    minLength: 1\n                    type: string\n                  \"5\":\n                    minLength: 1\n                    type: string\n                  \"6\":\n                    minLength: 1\n                    type: string\n                  \"7\":\n                    minLength: 1\n                    type: string\n                  \"8\":\n                    minLength: 1\n                    type: string\n                  \"9\":\n                    minLength: 1\n                    type: string\n                  \"10\":\n                    minLength: 1\n                    type: string\n                  \"11\":\n                    minLength: 1\n                    type: string\n                  \"12\":\n                    minLength: 1\n                    type: string\n                  \"13\":\n                    minLength: 1\n                    type: string\n                  \"14\":\n                    minLength: 1\n                    type: string\n                  \"15\":\n                    minLength: 1\n                    type: string\n                  \"16\":\n                    minLength: 1\n                    type: string\n                  \"17\":\n                    minLength: 1\n                    type: string\n                  \"18\":\n                    minLength: 1\n                    type: string\n                  \"19\":\n                    minLength: 1\n                    type: string\n                  \"20\":\n                    minLength: 1\n                    type: string\n                  \"21\":\n                    minLength: 1\n                    type: string\n                  \"22\":\n                    minLength: 1\n                    type: string\n                  \"23\":\n                    minLength: 1\n                    type: string\n                  \"24\":\n                    minLength: 1\n                    type: string\n                  \"25\":\n                    minLength: 1\n                    type: string\n                required:\n                  - \"0\"\n                  - \"1\"\n                  - \"2\"\n                  - \"3\"\n                  - \"4\"\n                  - \"5\"\n                  - \"6\"\n                  - \"7\"\n                  - \"8\"\n                  - \"9\"\n                  - \"10\"\n                  - \"11\"\n                  - \"12\"\n                  - \"13\"\n                  - \"14\"\n                  - \"15\"\n                  - \"16\"\n                  - \"17\"\n                  - \"18\"\n                  - \"19\"\n                  - \"20\"\n                  - \"21\"\n                  - \"22\"\n                  - \"23\"\n                  - \"24\"\n                  - \"25\"\n                type: object\n  /resolution:\n    get:\n      description: Returns a list of all issue resolution values.\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    description:\n                      minLength: 1\n                      type: string\n                    id:\n                      minLength: 1\n                      type: string\n                    name:\n                      minLength: 1\n                      type: string\n                    self:\n                      minLength: 1\n                      type: string\n                  required:\n                    - self\n                    - id\n                    - description\n                    - name\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n  \"/resolution/{id}\":\n    get:\n      description: Returns an issue resolution value.\n      parameters:\n        - description: The ID of the issue resolution value.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  description:\n                    minLength: 1\n                    type: string\n                  id:\n                    minLength: 1\n                    type: string\n                  name:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - id\n                  - description\n                  - name\n                type: object\n  /role:\n    get:\n      description: Gets a list of all project roles, complete with project role details and\n        default actors.\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    actors:\n                      items:\n                        properties:\n                          actorGroup:\n                            properties:\n                              displayName:\n                                minLength: 1\n                                type: string\n                              name:\n                                minLength: 1\n                                type: string\n                            required:\n                              - name\n                              - displayName\n                            type: object\n                          displayName:\n                            minLength: 1\n                            type: string\n                          id:\n                            type: number\n                          name:\n                            minLength: 1\n                            type: string\n                          type:\n                            minLength: 1\n                            type: string\n                        required:\n                          - id\n                          - displayName\n                          - type\n                          - name\n                      minItems: 1\n                      type: array\n                      uniqueItems: true\n                    description:\n                      minLength: 1\n                      type: string\n                    id:\n                      type: number\n                    name:\n                      minLength: 1\n                      type: string\n                    scope:\n                      properties:\n                        project:\n                          properties:\n                            id:\n                              minLength: 1\n                              type: string\n                          required:\n                            - id\n                          type: object\n                        type:\n                          minLength: 1\n                          type: string\n                      required:\n                        - type\n                        - project\n                      type: object\n                    self:\n                      minLength: 1\n                      type: string\n                  required:\n                    - self\n                    - name\n                    - id\n                    - description\n                    - actors\n                    - scope\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n    post:\n      description: Creates a new project role with no default actors. You can use the Add\n        default actors to project role the project method to add default actors\n        to the project role after creating it.\n      requestBody:\n        $ref: \"#/components/requestBodies/Body15\"\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  description:\n                    minLength: 1\n                    type: string\n                  id:\n                    type: number\n                  name:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - name\n                  - id\n                  - description\n                type: object\n  \"/role/{id}\":\n    delete:\n      description: Deletes a project role. You must specify a replacement project role if\n        you wish to delete a project role that is in use.\n      parameters:\n        - description: The ID of the project role to delete. Use Get all project roles to\n            get a list of project role IDs.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: The ID of the project role that will replace the one being deleted.\n          in: query\n          name: swap\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n    get:\n      description: Gets the project role details and the default actors associated with the\n        role. The list of default actors is sorted by display name.\n      parameters:\n        - description: The ID of the project role. Use Get all project roles to get a list\n            of project role IDs.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  actors:\n                    items:\n                      properties:\n                        actorGroup:\n                          properties:\n                            displayName:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                          required:\n                            - name\n                            - displayName\n                          type: object\n                        displayName:\n                          minLength: 1\n                          type: string\n                        id:\n                          type: number\n                        name:\n                          minLength: 1\n                          type: string\n                        type:\n                          minLength: 1\n                          type: string\n                      required:\n                        - id\n                        - displayName\n                        - type\n                        - name\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  description:\n                    minLength: 1\n                    type: string\n                  id:\n                    type: number\n                  name:\n                    minLength: 1\n                    type: string\n                  scope:\n                    properties:\n                      project:\n                        properties:\n                          id:\n                            minLength: 1\n                            type: string\n                        required:\n                          - id\n                        type: object\n                      type:\n                        minLength: 1\n                        type: string\n                    required:\n                      - type\n                      - project\n                    type: object\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - name\n                  - id\n                  - description\n                  - actors\n                  - scope\n                type: object\n    post:\n      description: Update either the project role's name or its description.\n      parameters:\n        - description: The ID of the project role. Use Get all project roles to get a list\n            of project role IDs.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        $ref: \"#/components/requestBodies/Body15\"\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  actors:\n                    items:\n                      properties:\n                        actorGroup:\n                          properties:\n                            displayName:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                          required:\n                            - name\n                            - displayName\n                          type: object\n                        displayName:\n                          minLength: 1\n                          type: string\n                        id:\n                          type: number\n                        name:\n                          minLength: 1\n                          type: string\n                        type:\n                          minLength: 1\n                          type: string\n                      required:\n                        - id\n                        - displayName\n                        - type\n                        - name\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  description:\n                    minLength: 1\n                    type: string\n                  id:\n                    type: number\n                  name:\n                    minLength: 1\n                    type: string\n                  scope:\n                    properties:\n                      project:\n                        properties:\n                          id:\n                            minLength: 1\n                            type: string\n                        required:\n                          - id\n                        type: object\n                      type:\n                        minLength: 1\n                        type: string\n                    required:\n                      - type\n                      - project\n                    type: object\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - name\n                  - id\n                  - description\n                  - actors\n                  - scope\n                type: object\n    put:\n      description: Update the project role's name and description. You must include both a\n        name and a description in the request.\n      parameters:\n        - description: The ID of the project role. Use Get all project roles to get a list\n            of project role IDs.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        $ref: \"#/components/requestBodies/Body15\"\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  actors:\n                    items:\n                      properties:\n                        actorGroup:\n                          properties:\n                            displayName:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                          required:\n                            - name\n                            - displayName\n                          type: object\n                        displayName:\n                          minLength: 1\n                          type: string\n                        id:\n                          type: number\n                        name:\n                          minLength: 1\n                          type: string\n                        type:\n                          minLength: 1\n                          type: string\n                      required:\n                        - id\n                        - displayName\n                        - type\n                        - name\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  description:\n                    minLength: 1\n                    type: string\n                  id:\n                    type: number\n                  name:\n                    minLength: 1\n                    type: string\n                  scope:\n                    properties:\n                      project:\n                        properties:\n                          id:\n                            minLength: 1\n                            type: string\n                        required:\n                          - id\n                        type: object\n                      type:\n                        minLength: 1\n                        type: string\n                    required:\n                      - type\n                      - project\n                    type: object\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - name\n                  - id\n                  - description\n                  - actors\n                  - scope\n                type: object\n  \"/role/{id}/actors\":\n    delete:\n      description: Removes default actors from the project role. You may remove either a\n        group or user, but you cannot remove a group and a user in the same\n        request.\n      parameters:\n        - description: The group name of the group to be removed as a default actor.\n          in: query\n          name: group\n          schema:\n            type: string\n        - description: The ID of the project role. Use Get all project roles to get a list\n            of project role IDs.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: The user account ID of the user to remove as a default actor.\n          in: query\n          name: user\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request was successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  actors:\n                    items:\n                      properties:\n                        actorGroup:\n                          properties:\n                            displayName:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                          required:\n                            - name\n                            - displayName\n                          type: object\n                        displayName:\n                          minLength: 1\n                          type: string\n                        id:\n                          type: number\n                        name:\n                          minLength: 1\n                          type: string\n                        type:\n                          minLength: 1\n                          type: string\n                      required:\n                        - id\n                        - displayName\n                        - type\n                        - name\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - actors\n                type: object\n    get:\n      description: Returns the default actors for the project role.\n      parameters:\n        - description: The ID of the project role. Use Get all project roles to get a list\n            of project role IDs.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  actors:\n                    items:\n                      properties:\n                        actorGroup:\n                          properties:\n                            displayName:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                          required:\n                            - name\n                            - displayName\n                          type: object\n                        displayName:\n                          minLength: 1\n                          type: string\n                        id:\n                          type: number\n                        name:\n                          minLength: 1\n                          type: string\n                        type:\n                          minLength: 1\n                          type: string\n                      required:\n                        - id\n                        - displayName\n                        - type\n                        - name\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - actors\n                type: object\n    post:\n      description: Adds default actors to the given role. You may add either groups or\n        users, but you cannot add groups and users in the same request.\n      parameters:\n        - description: The ID of the project role. Use Get all project roles to get a list\n            of project role IDs.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                group:\n                  items:\n                    type: string\n                  type: array\n                user:\n                  description: The user account ID of the user to add as a default actor.\n                    When not in GDPR-strict-mode this may be user key instead,\n                    however this behaviour is deprecated. You can add multiple\n                    users separated by a comma (for example,\n                    \"user\":[\"12345678-9abc-def1-2345-6789abcdef12\",\n                    \"abcdef12-3456-789a-bcde-f123456789ab\"]).\n                  items:\n                    type: string\n                  type: array\n              type: object\n      responses:\n        \"200\":\n          description: Returned if the request was successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  actors:\n                    items:\n                      properties:\n                        actorGroup:\n                          properties:\n                            displayName:\n                              minLength: 1\n                              type: string\n                            name:\n                              minLength: 1\n                              type: string\n                          required:\n                            - name\n                            - displayName\n                          type: object\n                        displayName:\n                          minLength: 1\n                          type: string\n                        id:\n                          type: number\n                        name:\n                          minLength: 1\n                          type: string\n                        type:\n                          minLength: 1\n                          type: string\n                      required:\n                        - id\n                        - displayName\n                        - type\n                        - name\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - actors\n                type: object\n  /screens:\n    get:\n      description: Returns all screens.\n      parameters:\n        - description: The maximum number of items to return per page. Maximum is 100.\n          in: query\n          name: maxResults\n          schema:\n            type: integer\n        - description: The index of the first item to return in a page of results (page\n            offset).\n          in: query\n          name: startAt\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n  \"/screens/addToDefault/{fieldId}\":\n    post:\n      description: Adds a field to the default tab of the default screen.\n      parameters:\n        - description: The ID of the field.\n          in: path\n          name: fieldId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n  \"/screens/{screenId}/availableFields\":\n    get:\n      description: Returns the fields that can be added to a tab on a screen.\n      parameters:\n        - description: The ID of the screen.\n          in: path\n          name: screenId\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n  \"/screens/{screenId}/tabs\":\n    get:\n      description: Returns the list of tabs for a screen.\n      parameters:\n        - description: The key of the project.\n          in: query\n          name: projectKey\n          schema:\n            type: string\n        - description: The ID of the screen.\n          in: path\n          name: screenId\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n    post:\n      description: Creates a tab for a screen.\n      parameters:\n        - description: The ID of the screen.\n          in: path\n          name: screenId\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        $ref: \"#/components/requestBodies/Body16\"\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  id:\n                    type: number\n                  name:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - name\n                type: object\n  \"/screens/{screenId}/tabs/{tabId}\":\n    delete:\n      description: Deletes a screen tab.\n      parameters:\n        - description: The ID of the screen.\n          in: path\n          name: screenId\n          required: true\n          schema:\n            type: integer\n        - description: The ID of the screen tab.\n          in: path\n          name: tabId\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n    put:\n      description: Updates the name of a screen tab.\n      parameters:\n        - description: The ID of the screen.\n          in: path\n          name: screenId\n          required: true\n          schema:\n            type: integer\n        - description: The ID of the screen tab.\n          in: path\n          name: tabId\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        $ref: \"#/components/requestBodies/Body16\"\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  id:\n                    type: number\n                  name:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - name\n                type: object\n  \"/screens/{screenId}/tabs/{tabId}/fields\":\n    get:\n      description: Returns all fields for a screen tab.\n      parameters:\n        - description: The key of the project.\n          in: query\n          name: projectKey\n          schema:\n            type: string\n        - description: The ID of the screen.\n          in: path\n          name: screenId\n          required: true\n          schema:\n            type: integer\n        - description: The ID of the screen tab.\n          in: path\n          name: tabId\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n    post:\n      description: Adds a field to a screen tab.\n      parameters:\n        - description: The ID of the screen.\n          in: path\n          name: screenId\n          required: true\n          schema:\n            type: integer\n        - description: The ID of the screen tab.\n          in: path\n          name: tabId\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                fieldId:\n                  description: The ID of the field to add.\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  id:\n                    minLength: 1\n                    type: string\n                  name:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - name\n                type: object\n  \"/screens/{screenId}/tabs/{tabId}/fields/{id}\":\n    delete:\n      description: Removes a field from a screen tab.\n      parameters:\n        - description: The ID of the field.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: The ID of the screen.\n          in: path\n          name: screenId\n          required: true\n          schema:\n            type: integer\n        - description: The ID of the screen tab.\n          in: path\n          name: tabId\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"201\":\n          description: Returned if the request is successful.\n  \"/screens/{screenId}/tabs/{tabId}/fields/{id}/move\":\n    post:\n      description: Moves a screen tab field.\n      parameters:\n        - description: The ID of the field.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: The ID of the screen.\n          in: path\n          name: screenId\n          required: true\n          schema:\n            type: integer\n        - description: The ID of the screen tab.\n          in: path\n          name: tabId\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                after:\n                  description: The ID of the screen tab field after which to place the\n                    moved screen tab field. Required if position isn't provided.\n                  type: string\n                position:\n                  description: The named position to which the screen tab field should be\n                    moved. Required if after isn't provided.\n                  enum:\n                    - Earlier\n                    - Later\n                    - First\n                    - Last\n                  type: string\n              type: object\n      responses:\n        \"201\":\n          description: Returned if the request is successful.\n  \"/screens/{screenId}/tabs/{tabId}/move/{pos}\":\n    post:\n      description: Moves a screen tab.\n      parameters:\n        - description: The position of tab. The base index is 0.\n          in: path\n          name: pos\n          required: true\n          schema:\n            type: integer\n        - description: The ID of the screen.\n          in: path\n          name: screenId\n          required: true\n          schema:\n            type: integer\n        - description: The ID of the screen tab.\n          in: path\n          name: tabId\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"201\":\n          description: Returned if the request is successful.\n  /search:\n    get:\n      description: \"Searches for issues using JQL. Permissions required: Permission to\n        access Jira.\"\n      parameters:\n        - description: \"Use expand to include additional information about issues in the\n            response. This parameter accepts multiple values separated by a\n            comma:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - renderedFields\n              - names\n              - schema\n              - transitions\n              - operations\n              - editmeta\n              - changelog\n              - versionedRepresentations\n              - fields\n        - description: \"A comma-separated list of fields to return for each issue, use it\n            to retrieve a subset of fields. Allowed values:\"\n          in: query\n          name: fields\n          schema:\n            type: array\n            items:\n              type: string\n            enum:\n              - \"*all\"\n              - \"*navigable\"\n              - summary,comment\n              - -description\n              - \"*all,-comment\"\n        - description: Reference fields by their key (rather than ID).\n          in: query\n          name: fieldsByKeys\n          schema:\n            type: boolean\n        - description: The JQL that defines the search. If no JQL expression is provided,\n            all issues are returned. Note that username and userkey have been\n            deprecated as search terms for this parameter. See the migration\n            guide for details. Use accountId instead.\n          in: query\n          name: jql\n          schema:\n            type: string\n        - description: The maximum number of items to return per page. Maximum is 100.\n          in: query\n          name: maxResults\n          schema:\n            type: integer\n        - description: A comma-separated list of up to 5 issue properties to include in the\n            results.\n          in: query\n          name: properties\n          schema:\n            type: array\n            items:\n              type: string\n        - description: The index of the first item to return in the page of results (page\n            offset).\n          in: query\n          name: startAt\n          schema:\n            type: integer\n        - description: \"Determines how to validate the JQL query and treat the validation\n            results. Supported values are:\"\n          in: query\n          name: validateQuery\n          schema:\n            type: string\n            enum:\n              - strict\n              - warn\n              - none\n              - \"true\"\n              - \"false\"\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  expand:\n                    minLength: 1\n                    type: string\n                  issues:\n                    items:\n                      properties:\n                        expand:\n                          type: string\n                        id:\n                          minLength: 1\n                          type: string\n                        key:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - expand\n                        - id\n                        - self\n                        - key\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  maxResults:\n                    type: number\n                  startAt:\n                    type: number\n                  total:\n                    type: number\n                  warningMessages:\n                    items:\n                      properties: {}\n                    type: array\n                required:\n                  - expand\n                  - startAt\n                  - maxResults\n                  - total\n                  - issues\n                  - warningMessages\n                type: object\n    post:\n      description: \"Searches for issues using JQL. Permissions required: Permission to\n        access Jira.\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                expand:\n                  description: \"Use expand to include additional information about issues\n                    in the response. This parameter accepts multiple values\n                    separated by a comma:\"\n                  items:\n                    type: string\n                  type: array\n                fields:\n                  description: A comma-separated list of fields to return for each issue,\n                    use it to retrieve a subset of fields. Allowed values\n                  items:\n                    type: string\n                  type: array\n                fieldsByKeys:\n                  description: Reference fields by their key (rather than ID). The default\n                    is false.\n                  type: boolean\n                jql:\n                  description: A JQL expression.\n                  type: string\n                maxResults:\n                  description: The maximum number of items to return per page. The default\n                    is 50 and maximum is 100.\n                  type: integer\n                properties:\n                  description: A comma-separated list of up to 5 issue properties to\n                    include in the results.\n                  items:\n                    type: string\n                  type: array\n                startAt:\n                  description: The index of the first item to return in the page of results\n                    (page offset). The base index is 0.\n                  type: integer\n                validateQuery:\n                  description: \"Determines how to validate the JQL query and treat the\n                    validation results. Supported values:\"\n                  enum:\n                    - strict\n                    - warn\n                    - none\n                    - \"true\"\n                    - \"false\"\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  expand:\n                    minLength: 1\n                    type: string\n                  issues:\n                    items:\n                      properties:\n                        expand:\n                          type: string\n                        id:\n                          minLength: 1\n                          type: string\n                        key:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - expand\n                        - id\n                        - self\n                        - key\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  maxResults:\n                    type: number\n                  startAt:\n                    type: number\n                  total:\n                    type: number\n                  warningMessages:\n                    items:\n                      properties: {}\n                    type: array\n                required:\n                  - expand\n                  - startAt\n                  - maxResults\n                  - total\n                  - issues\n                  - warningMessages\n                type: object\n  \"/securitylevel/{id}\":\n    get:\n      description: Returns details of an issue security level.\n      parameters:\n        - description: The ID of the issue security level.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  description:\n                    minLength: 1\n                    type: string\n                  id:\n                    minLength: 1\n                    type: string\n                  name:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - id\n                  - description\n                  - name\n                type: object\n  /serverInfo:\n    get:\n      description: Returns information about the Jira instance.\n      responses:\n        \"200\":\n          description: Returns if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  baseUrl:\n                    minLength: 1\n                    type: string\n                  buildDate:\n                    minLength: 1\n                    type: string\n                  buildNumber:\n                    type: number\n                  scmInfo:\n                    minLength: 1\n                    type: string\n                  serverTime:\n                    minLength: 1\n                    type: string\n                  serverTitle:\n                    minLength: 1\n                    type: string\n                  version:\n                    minLength: 1\n                    type: string\n                  versionNumbers:\n                    items:\n                      properties: {}\n                    type: array\n                required:\n                  - baseUrl\n                  - version\n                  - versionNumbers\n                  - buildNumber\n                  - buildDate\n                  - serverTime\n                  - scmInfo\n                  - serverTitle\n                type: object\n  /settings/columns:\n    get:\n      description: Returns the default issue navigator columns.\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    label:\n                      minLength: 1\n                      type: string\n                    value:\n                      minLength: 1\n                      type: string\n                  required:\n                    - label\n                    - value\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n    put:\n      description: Sets the default issue navigator columns.\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n  /status:\n    get:\n      description: Returns a list of all statuses associated with workflows.\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    description:\n                      minLength: 1\n                      type: string\n                    iconUrl:\n                      minLength: 1\n                      type: string\n                    id:\n                      minLength: 1\n                      type: string\n                    name:\n                      minLength: 1\n                      type: string\n                    self:\n                      minLength: 1\n                      type: string\n                    statusCategory:\n                      properties:\n                        colorName:\n                          minLength: 1\n                          type: string\n                        id:\n                          type: number\n                        key:\n                          minLength: 1\n                          type: string\n                        name:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - id\n                        - key\n                        - colorName\n                        - name\n                      type: object\n                  required:\n                    - self\n                    - description\n                    - iconUrl\n                    - name\n                    - id\n                    - statusCategory\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n  \"/status/{idOrName}\":\n    get:\n      description: Returns a status. The status must be associated with a workflow to be\n        returned.\n      parameters:\n        - description: The ID or name of the status.\n          in: path\n          name: idOrName\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  description:\n                    minLength: 1\n                    type: string\n                  iconUrl:\n                    minLength: 1\n                    type: string\n                  id:\n                    minLength: 1\n                    type: string\n                  name:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                  statusCategory:\n                    properties:\n                      colorName:\n                        minLength: 1\n                        type: string\n                      id:\n                        type: number\n                      key:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - id\n                      - key\n                      - colorName\n                      - name\n                    type: object\n                required:\n                  - self\n                  - description\n                  - iconUrl\n                  - name\n                  - id\n                  - statusCategory\n                type: object\n  /statuscategory:\n    get:\n      description: Returns a list of all status categories.\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    colorName:\n                      minLength: 1\n                      type: string\n                    id:\n                      type: number\n                    key:\n                      minLength: 1\n                      type: string\n                    name:\n                      minLength: 1\n                      type: string\n                    self:\n                      minLength: 1\n                      type: string\n                  required:\n                    - self\n                    - id\n                    - key\n                    - colorName\n                    - name\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n  \"/statuscategory/{idOrKey}\":\n    get:\n      description: Returns a status category. Status categories provided a mechanism for\n        categorizing statuses.\n      parameters:\n        - description: The ID or key of the status category.\n          in: path\n          name: idOrKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  colorName:\n                    minLength: 1\n                    type: string\n                  id:\n                    type: number\n                  key:\n                    minLength: 1\n                    type: string\n                  name:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - id\n                  - key\n                  - colorName\n                  - name\n                type: object\n  \"/task/{taskId}\":\n    get:\n      description: Returns the status of a long-running asynchronous task.\n      parameters:\n        - description: The ID of the task.\n          in: path\n          name: taskId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  description:\n                    minLength: 1\n                    type: string\n                  elapsedRuntime:\n                    type: number\n                  finished:\n                    type: number\n                  id:\n                    minLength: 1\n                    type: string\n                  lastUpdate:\n                    type: number\n                  progress:\n                    type: number\n                  result:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                  started:\n                    type: number\n                  status:\n                    minLength: 1\n                    type: string\n                  submitted:\n                    type: number\n                  submittedBy:\n                    type: number\n                required:\n                  - self\n                  - id\n                  - description\n                  - status\n                  - result\n                  - submittedBy\n                  - progress\n                  - elapsedRuntime\n                  - submitted\n                  - started\n                  - finished\n                  - lastUpdate\n                type: object\n  \"/task/{taskId}/cancel\":\n    post:\n      description: Cancels a task.\n      parameters:\n        - description: The ID of the task.\n          in: path\n          name: taskId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"202\":\n          description: Returned if the request is successful.\n  \"/universal_avatar/type/{type}/owner/{entityId}\":\n    get:\n      description: Returns the system and custom avatars for a project or issue type.\n      parameters:\n        - description: The ID of the entity item.\n          in: path\n          name: entityId\n          required: true\n          schema:\n            type: string\n        - description: The type of the entity. Valid values are project and issuetype.\n          in: path\n          name: type\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  custom:\n                    items:\n                      properties:\n                        id:\n                          minLength: 1\n                          type: string\n                        isDeletable:\n                          type: boolean\n                        isSelected:\n                          type: boolean\n                        isSystemAvatar:\n                          type: boolean\n                        urls:\n                          properties:\n                            16x16:\n                              minLength: 1\n                              type: string\n                            24x24:\n                              minLength: 1\n                              type: string\n                            32x32:\n                              minLength: 1\n                              type: string\n                            48x48:\n                              minLength: 1\n                              type: string\n                          required:\n                            - 16x16\n                            - 24x24\n                            - 32x32\n                            - 48x48\n                          type: object\n                      required:\n                        - id\n                        - isSystemAvatar\n                        - isSelected\n                        - isDeletable\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  system:\n                    items:\n                      properties:\n                        id:\n                          minLength: 1\n                          type: string\n                        isDeletable:\n                          type: boolean\n                        isSelected:\n                          type: boolean\n                        isSystemAvatar:\n                          type: boolean\n                        urls:\n                          properties:\n                            16x16:\n                              minLength: 1\n                              type: string\n                            24x24:\n                              minLength: 1\n                              type: string\n                            32x32:\n                              minLength: 1\n                              type: string\n                            48x48:\n                              minLength: 1\n                              type: string\n                          required:\n                            - 16x16\n                            - 24x24\n                            - 32x32\n                            - 48x48\n                          type: object\n                      required:\n                        - id\n                        - isSystemAvatar\n                        - isSelected\n                        - isDeletable\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - system\n                  - custom\n                type: object\n    post:\n      description: Loads a custom avatar for a project or issue type.\n      parameters:\n        - description: The ID of the entity item.\n          in: path\n          name: entityId\n          required: true\n          schema:\n            type: string\n        - description: The length of each side of the crop region.\n          in: query\n          name: size\n          schema:\n            type: integer\n        - description: The type of the entity. Valid values are project and issuetype.\n          in: path\n          name: type\n          required: true\n          schema:\n            type: string\n        - description: The X coordinate of the top-left corner of the crop region.\n          in: query\n          name: x\n          schema:\n            type: integer\n        - description: The Y coordinate of the top-left corner of the crop region.\n          in: query\n          name: y\n          schema:\n            type: integer\n      responses:\n        \"201\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  id:\n                    minLength: 1\n                    type: string\n                  isDeletable:\n                    type: boolean\n                  isSelected:\n                    type: boolean\n                  isSystemAvatar:\n                    type: boolean\n                  urls:\n                    properties:\n                      16x16:\n                        minLength: 1\n                        type: string\n                      24x24:\n                        minLength: 1\n                        type: string\n                      32x32:\n                        minLength: 1\n                        type: string\n                      48x48:\n                        minLength: 1\n                        type: string\n                    required:\n                      - 16x16\n                      - 24x24\n                      - 32x32\n                      - 48x48\n                    type: object\n                required:\n                  - id\n                  - isSystemAvatar\n                  - isSelected\n                  - isDeletable\n                  - urls\n                type: object\n  \"/universal_avatar/type/{type}/owner/{owningObjectId}/avatar/{id}\":\n    delete:\n      description: Deletes an avatar from a project or issue type.\n      parameters:\n        - description: The ID of the avatar.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: The ID of the entity item.\n          in: path\n          name: owningObjectId\n          required: true\n          schema:\n            type: string\n        - description: The type of the entity. Valid values are project and issuetype.\n          in: path\n          name: type\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n  /user:\n    delete:\n      description: \"Deletes a user. Permissions required: Site administration (i.e., member\n        of the site-admin group).\"\n      parameters:\n        - description: The accountId of the user, which uniquely identifies the user across\n            all Atlassian products. For example,\n            384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192. Required, unless\n            username or key is specified.\n          in: query\n          name: accountId\n          schema:\n            type: string\n        - description: This parameter has been deprecated due to privacy changes. Use\n            accountId instead. See the migration guide for details.The key of\n            the user. For example, admin. Required, unless accountId or username\n            is specified.\n          in: query\n          name: key\n          schema:\n            type: string\n        - description: This parameter has been deprecated due to privacy changes. Use\n            accountId instead. See the migration guide for details.The username\n            of the user. For example, admin. Required, unless accountId or key\n            is specified.\n          in: query\n          name: username\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n    get:\n      description: \"Returns a user. Permissions required: None.\"\n      parameters:\n        - description: The accountId of the user, which uniquely identifies the user across\n            all Atlassian products. For example,\n            384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192. Required, unless\n            username or key is specified.\n          in: query\n          name: accountId\n          schema:\n            type: string\n        - description: \"Use expand to include additional information about users in the\n            response. This parameter accepts multiple values separated by a\n            comma:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - groups\n              - applicationRoles\n        - description: This parameter has been deprecated due to privacy changes. Use\n            accountId instead. See the migration guide for details.The key of\n            the user. For example, admin. Required, unless accountId or username\n            is specified.\n          in: query\n          name: key\n          schema:\n            type: string\n        - description: This parameter has been deprecated due to privacy changes. Use\n            accountId instead. See the migration guide for details.The username\n            of the user. For example, admin. Required, unless accountId or key\n            is specified.\n          in: query\n          name: username\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  accountId:\n                    minLength: 1\n                    type: string\n                  active:\n                    type: boolean\n                  applicationRoles:\n                    properties:\n                      items:\n                        items:\n                          properties: {}\n                        type: array\n                      size:\n                        type: number\n                    required:\n                      - size\n                      - items\n                    type: object\n                  avatarUrls:\n                    properties:\n                      16x16:\n                        minLength: 1\n                        type: string\n                      24x24:\n                        minLength: 1\n                        type: string\n                      32x32:\n                        minLength: 1\n                        type: string\n                      48x48:\n                        minLength: 1\n                        type: string\n                    required:\n                      - 48x48\n                      - 24x24\n                      - 16x16\n                      - 32x32\n                    type: object\n                  displayName:\n                    minLength: 1\n                    type: string\n                  emailAddress:\n                    minLength: 1\n                    type: string\n                  groups:\n                    properties:\n                      items:\n                        items:\n                          properties: {}\n                        type: array\n                      size:\n                        type: number\n                    required:\n                      - size\n                      - items\n                    type: object\n                  key:\n                    minLength: 1\n                    type: string\n                  name:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                  timeZone:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - key\n                  - accountId\n                  - name\n                  - emailAddress\n                  - avatarUrls\n                  - displayName\n                  - active\n                  - timeZone\n                  - groups\n                  - applicationRoles\n                type: object\n    post:\n      description: \"Creates a user. This resource is retained for legacy compatibility. As\n        soon as a more suitable alternative is available this resource will be\n        deprecated. The option is provided to set or generate a password for the\n        user. When using the option to generate a password, by omitting password\n        from the request, include \\\"notification\\\": \\\"true\\\" to ensure the user\n        is sent an email advising them that their account has been created. This\n        email includes a link for the user to set their password. If the\n        notification isn't sent for a generated password, the user will need to\n        be sent a reset password request from Jira. Permissions required:\n        Administer Jira global permission\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                applicationKeys:\n                  description: Deprecated, do not use.\n                  items:\n                    type: string\n                  type: array\n                displayName:\n                  description: The display name for the user. Required.\n                  type: string\n                emailAddress:\n                  description: The email address for the user. Required.\n                  type: string\n                key:\n                  description: The key for the user. Read-only. This property has been\n                    deprecated due to privacy changes.See the migration guide\n                    for details.\n                  type: string\n                name:\n                  description: The username for the user. This property has been deprecated\n                    due to privacy changes. See the migration guide for details.\n                  type: string\n                notification:\n                  description: Sends the user an email confirmation that they have been\n                    added to Jira. Default is false.\n                  type: string\n                password:\n                  description: A password for the user. If a password is not set, a random\n                    password is generated.\n                  type: string\n              type: object\n      responses:\n        \"201\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  accountId:\n                    minLength: 1\n                    type: string\n                  active:\n                    type: boolean\n                  applicationRoles:\n                    properties:\n                      items:\n                        items:\n                          properties: {}\n                        type: array\n                      size:\n                        type: number\n                    required:\n                      - size\n                      - items\n                    type: object\n                  avatarUrls:\n                    properties:\n                      16x16:\n                        minLength: 1\n                        type: string\n                      24x24:\n                        minLength: 1\n                        type: string\n                      32x32:\n                        minLength: 1\n                        type: string\n                      48x48:\n                        minLength: 1\n                        type: string\n                    required:\n                      - 48x48\n                      - 24x24\n                      - 16x16\n                      - 32x32\n                    type: object\n                  displayName:\n                    minLength: 1\n                    type: string\n                  emailAddress:\n                    minLength: 1\n                    type: string\n                  groups:\n                    properties:\n                      items:\n                        items:\n                          properties: {}\n                        type: array\n                      size:\n                        type: number\n                    required:\n                      - size\n                      - items\n                    type: object\n                  key:\n                    minLength: 1\n                    type: string\n                  name:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                  timeZone:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - key\n                  - accountId\n                  - name\n                  - emailAddress\n                  - avatarUrls\n                  - displayName\n                  - active\n                  - timeZone\n                  - groups\n                  - applicationRoles\n                type: object\n  /user/assignable/multiProjectSearch:\n    get:\n      description: \"Returns a list of users who fulfill both of these criteria:\"\n      parameters:\n        - description: The maximum number of items to return per page. Maximum is 1000.\n          in: query\n          name: maxResults\n          schema:\n            type: integer\n        - description: A comma-separated list of project keys (case sensitive).\n          in: query\n          name: projectKeys\n          schema:\n            type: string\n        - description: A query string that is matched against user attributes, such as key,\n            name, displayName, and emailAddress, to find relevant users. The\n            string can match any part of the attribute's value. For example,\n            query=john matches a user with a displayName of John Smith and a\n            user with an emailAddress of jane.johnson@example.com.\n          in: query\n          name: query\n          schema:\n            type: string\n        - description: The index of the first item to return in a page of results (page\n            offset).\n          in: query\n          name: startAt\n          schema:\n            type: integer\n        - description: This parameter has been deprecated due to privacy changes. Use query\n            instead. See the migration guide for details. A query string used to\n            search username, display name, and email address. The string is\n            matched to the starting letters of any word in the searched fields.\n            For example, ar matches to the username archie but not mark.\n          in: query\n          name: username\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    accountId:\n                      minLength: 1\n                      type: string\n                    active:\n                      type: boolean\n                    avatarUrls:\n                      properties:\n                        16x16:\n                          minLength: 1\n                          type: string\n                        24x24:\n                          minLength: 1\n                          type: string\n                        32x32:\n                          minLength: 1\n                          type: string\n                        48x48:\n                          minLength: 1\n                          type: string\n                      required:\n                        - 48x48\n                        - 24x24\n                        - 16x16\n                        - 32x32\n                      type: object\n                    displayName:\n                      minLength: 1\n                      type: string\n                    key:\n                      minLength: 1\n                      type: string\n                    name:\n                      minLength: 1\n                      type: string\n                    self:\n                      minLength: 1\n                      type: string\n                  required:\n                    - self\n                    - key\n                    - accountId\n                    - name\n                    - avatarUrls\n                    - displayName\n                    - active\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n  /user/assignable/search:\n    get:\n      description: \"Returns a list of users that can be assigned to an issue. Use this\n        method to find the list of users who can be assigned to:\"\n      parameters:\n        - description: The ID of the transition.\n          in: query\n          name: actionDescriptorId\n          schema:\n            type: integer\n        - description: The key of the issue. Required, unless project is specified.\n          in: query\n          name: issueKey\n          schema:\n            type: string\n        - description: The maximum number of items to return per page. Maximum is 1000.\n          in: query\n          name: maxResults\n          schema:\n            type: integer\n        - description: The project ID or project key (case sensitive). Required, unless\n            issueKey is specified.\n          in: query\n          name: project\n          schema:\n            type: string\n        - description: A query string that is matched against user attributes, such as key,\n            name, displayName, and emailAddress, to find relevant users. The\n            string can match any part of the attribute's value. For example,\n            query=john matches a user with a displayName of John Smith and a\n            user with an emailAddress of jane.johnson@example.com. Required,\n            unless username is specified.\n          in: query\n          name: query\n          schema:\n            type: string\n        - description: The index of the first item to return in a page of results (page\n            offset).\n          in: query\n          name: startAt\n          schema:\n            type: integer\n        - description: This parameter has been deprecated due to privacy changes. Use query\n            instead. See the migration guide for details. A query string used to\n            search username, display name, and email address. The string is\n            matched to the starting letters of any word in the searched fields.\n            For example, ar matches to the username archie but not mark.\n            Required, unless accountId is specified.\n          in: query\n          name: username\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  accountId:\n                    minLength: 1\n                    type: string\n                  active:\n                    type: boolean\n                  applicationRoles:\n                    properties:\n                      items:\n                        items:\n                          properties: {}\n                        type: array\n                      size:\n                        type: number\n                    required:\n                      - size\n                      - items\n                    type: object\n                  avatarUrls:\n                    properties:\n                      16x16:\n                        minLength: 1\n                        type: string\n                      24x24:\n                        minLength: 1\n                        type: string\n                      32x32:\n                        minLength: 1\n                        type: string\n                      48x48:\n                        minLength: 1\n                        type: string\n                    required:\n                      - 48x48\n                      - 24x24\n                      - 16x16\n                      - 32x32\n                    type: object\n                  displayName:\n                    minLength: 1\n                    type: string\n                  emailAddress:\n                    minLength: 1\n                    type: string\n                  groups:\n                    properties:\n                      items:\n                        items:\n                          properties: {}\n                        type: array\n                      size:\n                        type: number\n                    required:\n                      - size\n                      - items\n                    type: object\n                  key:\n                    minLength: 1\n                    type: string\n                  name:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                  timeZone:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - key\n                  - accountId\n                  - name\n                  - emailAddress\n                  - avatarUrls\n                  - displayName\n                  - active\n                  - timeZone\n                  - groups\n                  - applicationRoles\n                type: object\n  /user/bulk:\n    get:\n      description: \"Returns details of users specified in a list of usernames or keys.\n        Permissions required: Administer Jira global permission. Users with\n        permission to access Jira can call this method, but empty search results\n        are returned.\"\n      parameters:\n        - description: Comma-separated list of user keys. Required if username isn't\n            provided.\n          in: query\n          name: key\n          schema:\n            type: array\n            items:\n              type: string\n        - description: The maximum number of items to return per page. Maximum is 200.\n          in: query\n          name: maxResults\n          schema:\n            type: integer\n        - description: The index of the first item to return in a page of results (page\n            offset).\n          in: query\n          name: startAt\n          schema:\n            type: integer\n        - description: Comma-separated list of usernames. Required if key isn't provided.\n          in: query\n          name: username\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  isLast:\n                    type: boolean\n                  maxResults:\n                    type: number\n                  startAt:\n                    type: number\n                  total:\n                    type: number\n                  values:\n                    items:\n                      properties:\n                        accountId:\n                          minLength: 1\n                          type: string\n                        active:\n                          type: boolean\n                        applicationRoles:\n                          properties:\n                            items:\n                              items:\n                                properties: {}\n                              type: array\n                            size:\n                              type: number\n                          required:\n                            - size\n                            - items\n                          type: object\n                        avatarUrls:\n                          properties:\n                            16x16:\n                              minLength: 1\n                              type: string\n                            24x24:\n                              minLength: 1\n                              type: string\n                            32x32:\n                              minLength: 1\n                              type: string\n                            48x48:\n                              minLength: 1\n                              type: string\n                          required:\n                            - 48x48\n                            - 24x24\n                            - 16x16\n                            - 32x32\n                          type: object\n                        displayName:\n                          minLength: 1\n                          type: string\n                        emailAddress:\n                          minLength: 1\n                          type: string\n                        groups:\n                          properties:\n                            items:\n                              items:\n                                properties: {}\n                              type: array\n                            size:\n                              type: number\n                          required:\n                            - size\n                            - items\n                          type: object\n                        key:\n                          minLength: 1\n                          type: string\n                        name:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                        timeZone:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - key\n                        - accountId\n                        - name\n                        - emailAddress\n                        - displayName\n                        - active\n                        - timeZone\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - maxResults\n                  - startAt\n                  - total\n                  - isLast\n                  - values\n                type: object\n  /user/columns:\n    delete:\n      description: \"Resets the default issue table columns for the user to the system\n        default. If a username is not passed, the calling user's default columns\n        are reset. Permissions required:\"\n      parameters:\n        - description: The accountId of the user, which uniquely identifies the user across\n            all Atlassian products. For example,\n            384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192. Required, unless\n            username is specified.\n          in: query\n          name: accountId\n          schema:\n            type: string\n        - description: This parameter has been deprecated due to privacy changes. Use\n            accountId instead. See the migration guide for details.The username\n            of the user. For example, admin. Required, unless accountId is\n            specified.\n          in: query\n          name: username\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n    get:\n      description: \"Returns the default issue table columns for the user. If a username is\n        not passed in the request, the calling user's details are returned.\n        Permissions required:\"\n      parameters:\n        - description: The accountId of the user, which uniquely identifies the user across\n            all Atlassian products. For example,\n            384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192. Required, unless\n            username is specified.\n          in: query\n          name: accountId\n          schema:\n            type: string\n        - description: This parameter has been deprecated due to privacy changes. Use\n            accountId instead. See the migration guide for details.The username\n            of the user. For example, admin. Required, unless accountId is\n            specified.\n          in: query\n          name: username\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n    put:\n      description: \"Sets the default issue table columns for the user. If a username is not\n        passed, the calling user's default columns are set. If no column details\n        are sent, then all default columns are removed. The parameters for this\n        resource are expressed as HTML form data. For example, in curl: curl -X\n        PUT -d username=\u003cusername\u003e -d columns=summary -d columns=description\n        \u003curl\u003e Permissions required:\"\n      parameters:\n        - description: The accountId of the user, which uniquely identifies the user across\n            all Atlassian products. For example,\n            384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192. Required, unless\n            username is specified.\n          in: query\n          name: accountId\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n  /user/groups:\n    get:\n      description: \"Returns the groups to which a user belongs. Permissions required:\n        Browse users and groups global permission.\"\n      parameters:\n        - description: The account ID of the user.\n          in: query\n          name: accountId\n          schema:\n            type: string\n        - description: The key of the user.\n          in: query\n          name: key\n          schema:\n            type: string\n        - description: The username of the user. Deprecated in favour of accountId.\n          in: query\n          name: username\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  name:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - name\n                  - self\n                type: object\n  /user/permission/search:\n    get:\n      description: \"Returns a list of users who fulfill both of these criteria:\"\n      parameters:\n        - description: The issue key for the issue.\n          in: query\n          name: issueKey\n          schema:\n            type: string\n        - description: The maximum number of items to return per page. Maximum is 1000.\n          in: query\n          name: maxResults\n          schema:\n            type: integer\n        - description: \"A comma-separated list of permissions. The valid permissions are:\"\n          in: query\n          name: permissions\n          schema:\n            type: string\n        - description: The project key for the project (case sensitive).\n          in: query\n          name: projectKey\n          schema:\n            type: string\n        - description: A query string that is matched against user attributes, such as key,\n            name, displayName, and emailAddress, to find relevant users. The\n            string can match any part of the attribute's value. For example,\n            query=john matches a user with a displayName of John Smith and a\n            user with an emailAddress of jane.johnson@example.com.\n          in: query\n          name: query\n          schema:\n            type: string\n        - description: The index of the first item to return in a page of results (page\n            offset).\n          in: query\n          name: startAt\n          schema:\n            type: integer\n        - description: This parameter has been deprecated due to privacy changes. Use query\n            instead. See the migration guide for details. A query string used to\n            search username, display name, and email address. The string is\n            matched to the starting letters of any word in the searched fields.\n            For example, ar matches to the username archie but not mark.\n          in: query\n          name: username\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    accountId:\n                      minLength: 1\n                      type: string\n                    active:\n                      type: boolean\n                    avatarUrls:\n                      properties:\n                        16x16:\n                          minLength: 1\n                          type: string\n                        24x24:\n                          minLength: 1\n                          type: string\n                        32x32:\n                          minLength: 1\n                          type: string\n                        48x48:\n                          minLength: 1\n                          type: string\n                      required:\n                        - 48x48\n                        - 24x24\n                        - 16x16\n                        - 32x32\n                      type: object\n                    displayName:\n                      minLength: 1\n                      type: string\n                    key:\n                      minLength: 1\n                      type: string\n                    name:\n                      minLength: 1\n                      type: string\n                    self:\n                      minLength: 1\n                      type: string\n                  required:\n                    - self\n                    - key\n                    - accountId\n                    - name\n                    - avatarUrls\n                    - displayName\n                    - active\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n  /user/picker:\n    get:\n      description: \"Returns a list of users whose attributes match the query term. The\n        returned object includes the html field where the matched query term is\n        highlighted with the HTML strong tag. A list of account IDs can be\n        provided to exclude users from the results. Permissions required: Browse\n        users and groups global permission. Users with permission to access Jira\n        can call this method, but will only get search results for an exact name\n        match.\"\n      parameters:\n        - description: This parameter has been deprecated due to privacy changes. Use\n            excludeAccountIds instead. See the migration guide for details. A\n            comma-separated list of usernames to exclude from the search\n            results.\n          in: query\n          name: exclude\n          schema:\n            type: array\n            items:\n              type: string\n        - description: A comma-separated list of account IDs to exclude from the search\n            results.\n          in: query\n          name: excludeAccountIds\n          schema:\n            type: array\n            items:\n              type: string\n        - description: The maximum number of items to return. Maximum is 1000. The total\n            number of matched users is returned in total.\n          in: query\n          name: maxResults\n          schema:\n            type: integer\n        - description: A search input that is matched against appropriate user attributes\n            to find relevant users.\n          in: query\n          name: query\n          schema:\n            type: string\n        - description: Include the URI to the user's avatar.\n          in: query\n          name: showAvatar\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  header:\n                    minLength: 1\n                    type: string\n                  total:\n                    type: number\n                  users:\n                    items:\n                      properties:\n                        accountId:\n                          minLength: 1\n                          type: string\n                        avatarUrl:\n                          minLength: 1\n                          type: string\n                        displayName:\n                          minLength: 1\n                          type: string\n                        html:\n                          minLength: 1\n                          type: string\n                        key:\n                          minLength: 1\n                          type: string\n                        name:\n                          minLength: 1\n                          type: string\n                      required:\n                        - accountId\n                        - name\n                        - key\n                        - html\n                        - displayName\n                        - avatarUrl\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - users\n                  - total\n                  - header\n                type: object\n  /user/properties:\n    get:\n      description: \"Returns the keys of all properties for a user. Permissions required:\"\n      parameters:\n        - description: The accountId of the user, which uniquely identifies the user across\n            all Atlassian products. For example,\n            384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192. Required, unless\n            username or key is specified.\n          in: query\n          name: accountId\n          schema:\n            type: string\n        - description: This parameter has been deprecated due to privacy changes. Use\n            accountId instead. See the migration guide for details.The key of\n            the user. For example, admin. Required, unless accountId or username\n            is specified.\n          in: query\n          name: userKey\n          schema:\n            type: string\n        - description: This parameter has been deprecated due to privacy changes. Use\n            accountId instead. See the migration guide for details.The username\n            of the user. For example, admin. Required, unless accountId or key\n            is specified.\n          in: query\n          name: username\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  keys:\n                    items:\n                      properties:\n                        key:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - key\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - keys\n                type: object\n  \"/user/properties/{propertyKey}\":\n    delete:\n      description: \"Deletes a property from a user. Permissions required:\"\n      parameters:\n        - description: The accountId of the user, which uniquely identifies the user across\n            all Atlassian products. For example,\n            384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192. Required, unless\n            username or key is specified.\n          in: query\n          name: accountId\n          schema:\n            type: string\n        - description: The key of the user's property.\n          in: path\n          name: propertyKey\n          required: true\n          schema:\n            type: string\n        - description: This parameter has been deprecated due to privacy changes. Use\n            accountId instead. See the migration guide for details.The key of\n            the user. For example, admin.\n          in: query\n          name: userKey\n          schema:\n            type: string\n        - description: This parameter has been deprecated due to privacy changes. Use\n            accountId instead. See the migration guide for details.The username\n            of the user. For example, admin. Required, unless accountId or key\n            is specified.\n          in: query\n          name: username\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Returned if the user property is deleted.\n    get:\n      description: \"Returns the value of a user's property. If no property key is provided\n        Get user property keys is called. Permissions required:\"\n      parameters:\n        - description: The accountId of the user, which uniquely identifies the user across\n            all Atlassian products. For example,\n            384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192. Required, unless\n            username or key is specified.\n          in: query\n          name: accountId\n          schema:\n            type: string\n        - description: The key of the user's property.\n          in: path\n          name: propertyKey\n          required: true\n          schema:\n            type: string\n        - description: This parameter has been deprecated due to privacy changes. Use\n            accountId instead. See the migration guide for details.The key of\n            the user. For example, admin.\n          in: query\n          name: userKey\n          schema:\n            type: string\n        - description: This parameter has been deprecated due to privacy changes. Use\n            accountId instead. See the migration guide for details.The username\n            of the user. For example, admin. Required, unless accountId or key\n            is specified.\n          in: query\n          name: username\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  key:\n                    minLength: 1\n                    type: string\n                  value:\n                    properties:\n                      stride.conversation.id:\n                        minLength: 1\n                        type: string\n                      support.time:\n                        minLength: 1\n                        type: string\n                    required:\n                      - stride.conversation.id\n                      - support.time\n                    type: object\n                required:\n                  - key\n                  - value\n                type: object\n    put:\n      description: \"Sets the value of a user's property. Use this resource to store custom\n        data against a user. Permissions required:\"\n      parameters:\n        - description: The accountId of the user, which uniquely identifies the user across\n            all Atlassian products. For example,\n            384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192. Required, unless\n            username or key is specified.\n          in: query\n          name: accountId\n          schema:\n            type: string\n        - description: The key of the user's property. The maximum length of the key is 255\n            bytes.\n          in: path\n          name: propertyKey\n          required: true\n          schema:\n            type: string\n        - description: This parameter has been deprecated due to privacy changes. Use\n            accountId instead. See the migration guide for details.The key of\n            the user. For example, admin. Required, unless accountId or username\n            is specified.\n          in: query\n          name: userKey\n          schema:\n            type: string\n        - description: This parameter has been deprecated due to privacy changes. Use\n            accountId instead. See the migration guide for details.The username\n            of the user. For example, admin. Required, unless accountId or key\n            is specified.\n          in: query\n          name: username\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the user property is updated.\n  /user/search:\n    get:\n      description: \"Returns a list of users that match the search string and property.\n        Permissions required: Browse users and groups global permission. Users\n        with permission to access Jira can call this method, but empty search\n        results are returned.\"\n      parameters:\n        - description: Include active users.\n          in: query\n          name: includeActive\n          schema:\n            type: boolean\n        - description: Include inactive users.\n          in: query\n          name: includeInactive\n          schema:\n            type: boolean\n        - description: The maximum number of items to return per page. Maximum is 1000.\n          in: query\n          name: maxResults\n          schema:\n            type: integer\n        - description: 'A query string used to search properties. Property keys are\n            specified by path, so property keys containing dot (.) or equals (=)\n            characters cannot be used. The query string cannot be specified\n            using a JSON object. Example: To search for the value of nested from\n            {\"something\":{\"nested\":1,\"other\":2}} use\n            thepropertykey.something.nested=1.'\n          in: query\n          name: property\n          schema:\n            type: string\n        - description: A query string that is matched against user attributes (key, name,\n            displayName, and emailAddress) to find relevant users. The string\n            can match any part of the attribute's value. For example, query=john\n            matches a user with a displayName of John Smith and a user with an\n            emailAddress of jane.johnson@example.com. Required, unless username\n            is specified.\n          in: query\n          name: query\n          schema:\n            type: string\n        - description: The index of the first item to return in a page of results (page\n            offset).\n          in: query\n          name: startAt\n          schema:\n            type: integer\n        - description: This parameter has been deprecated due to privacy changes. Use query\n            instead. See the migration guide for details. A query string used to\n            search username, display name, and email address. The string is\n            matched to the starting letters of any word in the searched fields.\n            For example, ar matches to the username archie but not mark.\n            Required, unless accountId is specified.\n          in: query\n          name: username\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    accountId:\n                      minLength: 1\n                      type: string\n                    active:\n                      type: boolean\n                    avatarUrls:\n                      properties:\n                        16x16:\n                          minLength: 1\n                          type: string\n                        24x24:\n                          minLength: 1\n                          type: string\n                        32x32:\n                          minLength: 1\n                          type: string\n                        48x48:\n                          minLength: 1\n                          type: string\n                      required:\n                        - 48x48\n                        - 24x24\n                        - 16x16\n                        - 32x32\n                      type: object\n                    displayName:\n                      minLength: 1\n                      type: string\n                    key:\n                      minLength: 1\n                      type: string\n                    name:\n                      minLength: 1\n                      type: string\n                    self:\n                      minLength: 1\n                      type: string\n                  required:\n                    - self\n                    - key\n                    - accountId\n                    - name\n                    - avatarUrls\n                    - displayName\n                    - active\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n  /user/search/query:\n    get:\n      description: \"Finds users using a structured query and returns user details.\n        Permissions required: Browse users and groups global permission. The\n        available queries statements are:\"\n      parameters:\n        - description: Include inactive users in the results.\n          in: query\n          name: includeInactive\n          schema:\n            type: boolean\n        - description: The maximum number of items to return per page. Maximum is 1000.\n          in: query\n          name: maxResults\n          schema:\n            type: integer\n        - description: The search query.\n          in: query\n          name: query\n          schema:\n            type: string\n        - description: The index of the first item to return in a page of results (page\n            offset).\n          in: query\n          name: startAt\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n  /user/search/query/key:\n    get:\n      description: \"Finds users using a structured query and returns a list of user keys.\n        Permissions required: Browse users and groups global permission. The\n        available query statements are:\"\n      parameters:\n        - description: Include inactive users in the results.\n          in: query\n          name: includeInactive\n          schema:\n            type: boolean\n        - description: The maximum number of items to return per page. Maximum is 1000.\n          in: query\n          name: maxResults\n          schema:\n            type: integer\n        - description: The search query.\n          in: query\n          name: query\n          schema:\n            type: string\n        - description: The index of the first item to return in a page of results (page\n            offset).\n          in: query\n          name: startAt\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n  /user/viewissue/search:\n    get:\n      description: \"Returns a list of users who fulfill both of these criteria:\"\n      parameters:\n        - description: The issue key for the issue. Required, unless projectKey is\n            specified.\n          in: query\n          name: issueKey\n          schema:\n            type: string\n        - description: The maximum number of items to return per page. Maximum is 1000.\n          in: query\n          name: maxResults\n          schema:\n            type: integer\n        - description: The project key for the project (case sensitive). Required, unless\n            issueKey is specified.\n          in: query\n          name: projectKey\n          schema:\n            type: string\n        - description: A query string that is matched against user attributes, such as key,\n            name, displayName, and emailAddress, to find relevant users. The\n            string can match any part of the attribute's value. For example,\n            query=john matches a user with a displayName of John Smith and a\n            user with an emailAddress of jane.johnson@example.com. Required,\n            unless username is specified.\n          in: query\n          name: query\n          schema:\n            type: string\n        - description: The index of the first item to return in a page of results (page\n            offset).\n          in: query\n          name: startAt\n          schema:\n            type: integer\n        - description: This parameter has been deprecated due to privacy changes. Use query\n            instead. See the migration guide for details. A query string used to\n            search username, display name, and email address. The string is\n            matched to the starting letters of any word in the searched fields.\n            For example, ar matches to the username archie but not mark.\n            Required, unless accountId is specified.\n          in: query\n          name: username\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    accountId:\n                      minLength: 1\n                      type: string\n                    active:\n                      type: boolean\n                    avatarUrls:\n                      properties:\n                        16x16:\n                          minLength: 1\n                          type: string\n                        24x24:\n                          minLength: 1\n                          type: string\n                        32x32:\n                          minLength: 1\n                          type: string\n                        48x48:\n                          minLength: 1\n                          type: string\n                      required:\n                        - 48x48\n                        - 24x24\n                        - 16x16\n                        - 32x32\n                      type: object\n                    displayName:\n                      minLength: 1\n                      type: string\n                    key:\n                      minLength: 1\n                      type: string\n                    name:\n                      minLength: 1\n                      type: string\n                    self:\n                      minLength: 1\n                      type: string\n                  required:\n                    - self\n                    - key\n                    - accountId\n                    - name\n                    - avatarUrls\n                    - displayName\n                    - active\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n  /version:\n    post:\n      description: \"Creates a project version. Permissions required: Administer Jira global\n        permission or Administer Projects project permission.\"\n      requestBody:\n        $ref: \"#/components/requestBodies/Body17\"\n      responses:\n        \"201\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  archived:\n                    type: boolean\n                  description:\n                    minLength: 1\n                    type: string\n                  name:\n                    minLength: 1\n                    type: string\n                  project:\n                    minLength: 1\n                    type: string\n                  projectId:\n                    type: number\n                  releaseDate:\n                    minLength: 1\n                    type: string\n                  released:\n                    type: boolean\n                  userReleaseDate:\n                    minLength: 1\n                    type: string\n                required:\n                  - description\n                  - name\n                  - archived\n                  - released\n                  - releaseDate\n                  - userReleaseDate\n                  - project\n                  - projectId\n                type: object\n  /version/remotelink:\n    get:\n      description: the global ID of the remote resource that is linked to the versions\n      parameters:\n        - description: the global ID of the remote resource that is linked to the versions\n          in: query\n          name: globalId\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Contains a list of remote version links. Any existing links that the\n            user does not have permission to see will be filtered out. The user\n            must have BROWSE permission for the project to see links to its\n            versions.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  links:\n                    items:\n                      properties:\n                        link:\n                          properties:\n                            colors:\n                              items:\n                                properties: {}\n                              type: array\n                            globalId:\n                              minLength: 1\n                              type: string\n                            myCustomLinkProperty:\n                              type: boolean\n                          required:\n                            - globalId\n                            - myCustomLinkProperty\n                            - colors\n                          type: object\n                        name:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - name\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - links\n                type: object\n  \"/version/{id}\":\n    delete:\n      description: \"Deletes a project version. Deprecated, use Delete and replace version\n        that supports swapping version values in custom fields, in addition to\n        the swapping for fixVersion and affectedVersion provided in this\n        resource. Alternative versions can be provided to update issues that use\n        the deleted version in fixVersion or affectedVersion. If alternatives\n        are not provided, occurrences of fixVersion and affectedVersion that\n        contain the deleted version are cleared. Permissions required:\n        Administer Jira global permission or Administer Projects project\n        permission.\"\n      parameters:\n        - description: The ID of the version.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: The ID of the version to update affectedVersion to when the field\n            contains the deleted version. The replacement version must be in the\n            same project as the version being deleted and cannot be the version\n            being deleted.\n          in: query\n          name: moveAffectedIssuesTo\n          schema:\n            type: string\n        - description: The ID of the version to update fixVersion to when the field\n            contains the deleted version. The replacement version must be in the\n            same project as the version being deleted and cannot be the version\n            being deleted.\n          in: query\n          name: moveFixIssuesTo\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Returned if the version is deleted.\n    get:\n      description: \"Returns a project version. Permissions required: Browse projects\n        project permission\"\n      parameters:\n        - description: \"Use expand to include additional information about version in the\n            response. This parameter accepts multiple values separated by a\n            comma:\"\n          in: query\n          name: expand\n          schema:\n            type: string\n            enum:\n              - operations\n              - remotelinks\n              - issuesstatus\n        - description: The ID of the version.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  archived:\n                    type: boolean\n                  description:\n                    minLength: 1\n                    type: string\n                  id:\n                    minLength: 1\n                    type: string\n                  name:\n                    minLength: 1\n                    type: string\n                  overdue:\n                    type: boolean\n                  projectId:\n                    type: number\n                  releaseDate:\n                    minLength: 1\n                    type: string\n                  released:\n                    type: boolean\n                  self:\n                    minLength: 1\n                    type: string\n                  userReleaseDate:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - id\n                  - description\n                  - name\n                  - archived\n                  - released\n                  - releaseDate\n                  - overdue\n                  - userReleaseDate\n                  - projectId\n                type: object\n    put:\n      description: \"Modifies a project version. Permissions required: Administer Jira\n        global permission or Administer Projects project permission.\"\n      parameters:\n        - description: The ID of the version.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Body17\"\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n  \"/version/{id}/mergeto/{moveIssuesTo}\":\n    put:\n      description: \"Merges two project versions. The merge is completed by deleting the\n        version specified in id and replacing any occurrences of its ID in\n        fixVersion with the version ID specified in moveIssuesTo. Consider using\n        Delete and replace version instead. This resource supports swapping\n        version values in fixVersion, affectedVersion, and custom fields.\n        Permissions required: Administer Jira global permission or Administer\n        Projects project permission.\"\n      parameters:\n        - description: The ID of the version to delete.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: The ID of the version to merge into.\n          in: path\n          name: moveIssuesTo\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Returned if the version is deleted.\n  \"/version/{id}/move\":\n    post:\n      description: \"Modifies the version's sequence within the project, which affects the\n        display order of the versions in Jira. Permissions required: Administer\n        Jira global permission or Administer Projects project permission.\"\n      parameters:\n        - description: The ID of the version to be moved.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                after:\n                  description: The URI (self link) of the version after which to place the\n                    moved version. Cannot be used with position.\n                  type: string\n                position:\n                  description: An absolute position in which to place the moved version.\n                    Cannot be used with after.\n                  enum:\n                    - Earlier\n                    - Later\n                    - First\n                    - Last\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  archived:\n                    type: boolean\n                  description:\n                    minLength: 1\n                    type: string\n                  id:\n                    minLength: 1\n                    type: string\n                  name:\n                    minLength: 1\n                    type: string\n                  overdue:\n                    type: boolean\n                  projectId:\n                    type: number\n                  releaseDate:\n                    minLength: 1\n                    type: string\n                  released:\n                    type: boolean\n                  self:\n                    minLength: 1\n                    type: string\n                  userReleaseDate:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - id\n                  - description\n                  - name\n                  - archived\n                  - released\n                  - releaseDate\n                  - overdue\n                  - userReleaseDate\n                  - projectId\n                type: object\n  \"/version/{id}/relatedIssueCounts\":\n    get:\n      description: \"Returns the following counts for a version:\"\n      parameters:\n        - description: The ID of the version.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  customFieldUsage:\n                    items:\n                      properties:\n                        customFieldId:\n                          type: number\n                        fieldName:\n                          minLength: 1\n                          type: string\n                        issueCountWithVersionInCustomField:\n                          type: number\n                      required:\n                        - fieldName\n                        - customFieldId\n                        - issueCountWithVersionInCustomField\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  issueCountWithCustomFieldsShowingVersion:\n                    type: number\n                  issuesAffectedCount:\n                    type: number\n                  issuesFixedCount:\n                    type: number\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - issuesFixedCount\n                  - issuesAffectedCount\n                  - issueCountWithCustomFieldsShowingVersion\n                  - customFieldUsage\n                type: object\n  \"/version/{id}/removeAndSwap\":\n    post:\n      description: \"Deletes a project version. Permissions required: Administer Jira global\n        permission or Administer Projects project permission. Alternative\n        versions can be provided to update issues that use the deleted version\n        in fixVersion, affectedVersion, or any version picker custom fields. If\n        alternatives are not provided, occurrences of fixVersion,\n        affectedVersion, and any version picker custom field, that contain the\n        deleted version, are cleared. Any replacement version must be in the\n        same project as the version being deleted and cannot be the version\n        being deleted.\"\n      parameters:\n        - description: The ID of the version.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                customFieldReplacementList:\n                  description: A JSON array of custom field IDs (customFieldId) and version\n                    IDs (moveTo) to update when the fields contain the deleted\n                    version.\n                  items:\n                    type: object\n                  type: array\n                moveAffectedIssuesTo:\n                  description: The ID of the version to update affectedVersion to when the\n                    field contains the deleted version.\n                  type: integer\n                moveFixIssuesTo:\n                  description: The ID of the version to update fixVersion to when the field\n                    contains the deleted version.\n                  type: integer\n              type: object\n      responses:\n        \"204\":\n          description: Returned if the version is deleted.\n  \"/version/{id}/unresolvedIssueCount\":\n    get:\n      description: \"Returns counts of the issues and unresolved issues for the project\n        version. Permissions required: Browse projects project permission\"\n      parameters:\n        - description: The ID of the version.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  issuesCount:\n                    type: number\n                  issuesUnresolvedCount:\n                    type: number\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - issuesUnresolvedCount\n                  - issuesCount\n                type: object\n  \"/version/{versionId}/remotelink\":\n    delete:\n      description: The version for which to delete ALL existing remote version links\n      parameters:\n        - description: The version for which to delete ALL existing remote version links\n          in: path\n          name: versionId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Returned if the remote version links are successfully deleted.\n    get:\n      description: a String containing the version ID\n      parameters:\n        - description: a String containing the version ID\n          in: path\n          name: versionId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the version exists and the currently authenticated user\n            has permission to view it, which is restricted to those users with\n            BROWSE permission for the project. Contains a full representation of\n            the remote version links.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  links:\n                    items:\n                      properties:\n                        link:\n                          properties:\n                            colors:\n                              items:\n                                properties: {}\n                              type: array\n                            globalId:\n                              minLength: 1\n                              type: string\n                            myCustomLinkProperty:\n                              type: boolean\n                          required:\n                            - globalId\n                            - myCustomLinkProperty\n                            - colors\n                          type: object\n                        name:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - name\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - links\n                type: object\n    post:\n      description: Create a remote version link via POST. The link's global ID will be\n        taken from the JSON payload if provided; otherwise, it will be\n        generated.\n      parameters:\n        - in: path\n          name: versionId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"201\":\n          description: \"\"\n  \"/version/{versionId}/remotelink/{globalId}\":\n    delete:\n      description: The version ID of the remote link\n      parameters:\n        - description: The global ID of the remote link\n          in: path\n          name: globalId\n          required: true\n          schema:\n            type: string\n        - description: The version ID of the remote link\n          in: path\n          name: versionId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Returned if the remote version link is successfully deleted.\n    get:\n      description: A REST sub-resource representing a remote version link\n      parameters:\n        - description: The id of the remote issue link to be returned. If {@code null} (not\n            provided) all remote links for the issue are returned.\n          in: path\n          name: globalId\n          required: true\n          schema:\n            type: string\n        - description: a String containing the version id\n          in: path\n          name: versionId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Example response (application/json)\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  link:\n                    properties:\n                      colors:\n                        items:\n                          properties: {}\n                        type: array\n                      globalId:\n                        minLength: 1\n                        type: string\n                      myCustomLinkProperty:\n                        type: boolean\n                    required:\n                      - globalId\n                      - myCustomLinkProperty\n                      - colors\n                    type: object\n                  name:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - self\n                  - name\n                  - link\n                type: object\n    post:\n      parameters:\n        - in: path\n          name: globalId\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: versionId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"201\":\n          description: A schema has not been defined for this response code.\n  /workflow:\n    get:\n      description: Returns all workflows in Jira or a single workflow.\n      parameters:\n        - description: The name of the workflow to be returned. Only one workflow can be\n            specified.\n          in: query\n          name: workflowName\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the requested workflows are returned.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    default:\n                      type: boolean\n                    description:\n                      minLength: 1\n                      type: string\n                    lastModifiedDate:\n                      minLength: 1\n                      type: string\n                    lastModifiedUser:\n                      minLength: 1\n                      type: string\n                    lastModifiedUserAccountId:\n                      minLength: 1\n                      type: string\n                    name:\n                      minLength: 1\n                      type: string\n                    steps:\n                      type: number\n                  required:\n                    - name\n                    - description\n                    - lastModifiedDate\n                    - lastModifiedUser\n                    - lastModifiedUserAccountId\n                    - steps\n                    - default\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n  \"/workflow/transitions/{transitionId}/properties\":\n    delete:\n      description: Deletes a property from a workflow transition. Transition properties are\n        used to change the behavior of a transition. For more information, see\n        Transition properties and Workflow properties.\n      parameters:\n        - description: The name of the transition property to delete, also known as the\n            name of the property.\n          in: query\n          name: key\n          schema:\n            type: string\n        - description: The ID of the transition. To get the ID, view the workflow in text\n            mode in the Jira admin settings. The ID is shown next to the\n            transition.\n          in: path\n          name: transitionId\n          required: true\n          schema:\n            type: integer\n        - description: The workflow status. Set to live for inactive workflows or draft for\n            draft workflows. Active workflows cannot be edited.\n          in: query\n          name: workflowMode\n          schema:\n            type: string\n        - description: The name of the workflow that the transition belongs to.\n          in: query\n          name: workflowName\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: 200 response\n    get:\n      description: Returns the properties on a workflow transition. Transition properties\n        are used to change the behavior of a transition. For more information,\n        see Transition properties and Workflow properties.\n      parameters:\n        - description: Some properties with keys that have the jira. prefix are reserved,\n            i.e., not editable. To include these properties in the results, set\n            this parameter to true.\n          in: query\n          name: includeReservedKeys\n          schema:\n            type: boolean\n        - description: The key of the property being returned, also known as the name of\n            the property. If this parameter is not specified, all properties on\n            the transition are returned.\n          in: query\n          name: key\n          schema:\n            type: string\n        - description: The ID of the transition. To get the ID, view the workflow in text\n            mode in the Jira administration console. The ID is shown next to the\n            transition.\n          in: path\n          name: transitionId\n          required: true\n          schema:\n            type: integer\n        - description: The workflow status. Set to live for active and inactive workflows,\n            or draft for draft workflows.\n          in: query\n          name: workflowMode\n          schema:\n            type: string\n        - description: The name of the workflow that the transition belongs to.\n          in: query\n          name: workflowName\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: 200 response\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    id:\n                      minLength: 1\n                      type: string\n                    key:\n                      minLength: 1\n                      type: string\n                    value:\n                      minLength: 1\n                      type: string\n                  required:\n                    - key\n                    - value\n                    - id\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n    post:\n      description: Adds a property to a workflow transition. Transition properties are used\n        to change the behavior of a transition. For more information, see\n        Transition properties and Workflow properties.\n      parameters:\n        - description: The key of the property being added, also known as the name of the\n            property. Set this to the same value as the key defined in the\n            request body.\n          in: query\n          name: key\n          schema:\n            type: string\n        - description: The ID of the transition. To get the ID, view the workflow in text\n            mode in the Jira admin settings. The ID is shown next to the\n            transition.\n          in: path\n          name: transitionId\n          required: true\n          schema:\n            type: integer\n        - description: The workflow status. Set to live for inactive workflows or draft for\n            draft workflows. Active workflows cannot be edited.\n          in: query\n          name: workflowMode\n          schema:\n            type: string\n        - description: The name of the workflow that the transition belongs to.\n          in: query\n          name: workflowName\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Body18\"\n      responses:\n        \"200\":\n          description: 200 response\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  id:\n                    minLength: 1\n                    type: string\n                  key:\n                    minLength: 1\n                    type: string\n                  value:\n                    minLength: 1\n                    type: string\n                required:\n                  - key\n                  - value\n                  - id\n                type: object\n    put:\n      description: Updates a workflow transition by changing the property value. Trying to\n        update a property that does not exist results in a new property being\n        added to the transition. Transition properties are used to change the\n        behavior of a transition. For more information, see Transition\n        properties and Workflow properties.\n      parameters:\n        - description: The key of the property being updated, also known as the name of the\n            property. Set this to the same value as the key defined in the\n            request body.\n          in: query\n          name: key\n          schema:\n            type: string\n        - description: The ID of the transition. To get the ID, view the workflow in text\n            mode in the Jira admin settings. The ID is shown next to the\n            transition.\n          in: path\n          name: transitionId\n          required: true\n          schema:\n            type: integer\n        - description: The workflow status. Set to live for inactive workflows or draft for\n            draft workflows. Active workflows cannot be edited.\n          in: query\n          name: workflowMode\n          schema:\n            type: string\n        - description: The name of the workflow that the transition belongs to.\n          in: query\n          name: workflowName\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Body18\"\n      responses:\n        \"200\":\n          description: 200 response\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  id:\n                    minLength: 1\n                    type: string\n                  key:\n                    minLength: 1\n                    type: string\n                  value:\n                    minLength: 1\n                    type: string\n                required:\n                  - key\n                  - value\n                  - id\n                type: object\n  /workflowscheme:\n    post:\n      description: Creates a workflow scheme.\n      requestBody:\n        $ref: \"#/components/requestBodies/Body19\"\n      responses:\n        \"201\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  defaultWorkflow:\n                    minLength: 1\n                    type: string\n                  description:\n                    minLength: 1\n                    type: string\n                  draft:\n                    type: boolean\n                  id:\n                    type: number\n                  issueTypeMappings:\n                    properties:\n                      \"10000\":\n                        minLength: 1\n                        type: string\n                      \"10001\":\n                        minLength: 1\n                        type: string\n                    required:\n                      - \"10000\"\n                      - \"10001\"\n                    type: object\n                  name:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - name\n                  - description\n                  - defaultWorkflow\n                  - issueTypeMappings\n                  - draft\n                  - self\n                type: object\n  \"/workflowscheme/{id}\":\n    delete:\n      description: Deletes a workflow scheme. Note that a workflow scheme cannot be deleted\n        if it is active (that is, being used by at least one project).\n      parameters:\n        - description: The ID of the workflow scheme. Find this ID by editing the desired\n            workflow scheme in Jira. The ID will be shown in the URL as schemeId\n            (for example, schemeId=10301).\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n    get:\n      description: Returns a workflow scheme.\n      parameters:\n        - description: The ID of the workflow scheme. Find this ID by editing the desired\n            workflow scheme in Jira. The ID will be shown in the URL as schemeId\n            (for example, schemeId=10301).\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: Returns the workflow scheme's draft rather than scheme itself, if\n            set to true. If the workflow scheme does not have a draft, then the\n            workflow scheme is returned.\n          in: query\n          name: returnDraftIfExists\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  defaultWorkflow:\n                    minLength: 1\n                    type: string\n                  description:\n                    minLength: 1\n                    type: string\n                  draft:\n                    type: boolean\n                  id:\n                    type: number\n                  issueTypeMappings:\n                    properties:\n                      \"10000\":\n                        minLength: 1\n                        type: string\n                      \"10001\":\n                        minLength: 1\n                        type: string\n                    required:\n                      - \"10000\"\n                      - \"10001\"\n                    type: object\n                  name:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - name\n                  - description\n                  - defaultWorkflow\n                  - issueTypeMappings\n                  - draft\n                  - self\n                type: object\n    put:\n      description: Updates a workflow scheme, including the name, default workflow, issue\n        type to project mappings, and more. If the workflow scheme is active\n        (that is, being used by at least one project), then a draft workflow\n        scheme is created or updated instead, provided that updateDraftIfNeeded\n        is set to true.\n      parameters:\n        - description: The ID of the workflow scheme. Find this ID by editing the desired\n            workflow scheme in Jira. The ID will be shown in the URL as schemeId\n            (for example, schemeId=10301).\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        $ref: \"#/components/requestBodies/Body19\"\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  defaultWorkflow:\n                    minLength: 1\n                    type: string\n                  description:\n                    minLength: 1\n                    type: string\n                  draft:\n                    type: boolean\n                  id:\n                    type: number\n                  issueTypeMappings:\n                    properties:\n                      \"10000\":\n                        minLength: 1\n                        type: string\n                      \"10001\":\n                        minLength: 1\n                        type: string\n                    required:\n                      - \"10000\"\n                      - \"10001\"\n                    type: object\n                  name:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - name\n                  - description\n                  - defaultWorkflow\n                  - issueTypeMappings\n                  - draft\n                  - self\n                type: object\n  \"/workflowscheme/{id}/createdraft\":\n    post:\n      description: Create a draft workflow scheme from an active workflow scheme, by\n        copying the active workflow scheme. Note that an active workflow scheme\n        can only have one draft workflow scheme at any given time.\n      parameters:\n        - description: The ID of the active workflow scheme that the draft is created from.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"201\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  defaultWorkflow:\n                    minLength: 1\n                    type: string\n                  description:\n                    minLength: 1\n                    type: string\n                  draft:\n                    type: boolean\n                  id:\n                    type: number\n                  issueTypeMappings:\n                    properties:\n                      \"10000\":\n                        minLength: 1\n                        type: string\n                      \"10001\":\n                        minLength: 1\n                        type: string\n                    required:\n                      - \"10000\"\n                      - \"10001\"\n                    type: object\n                  lastModified:\n                    minLength: 1\n                    type: string\n                  lastModifiedUser:\n                    properties:\n                      accountId:\n                        minLength: 1\n                        type: string\n                      active:\n                        type: boolean\n                      applicationRoles:\n                        properties:\n                          items:\n                            items:\n                              properties: {}\n                            type: array\n                          size:\n                            type: number\n                        required:\n                          - size\n                          - items\n                        type: object\n                      avatarUrls:\n                        properties:\n                          16x16:\n                            minLength: 1\n                            type: string\n                          24x24:\n                            minLength: 1\n                            type: string\n                          32x32:\n                            minLength: 1\n                            type: string\n                          48x48:\n                            minLength: 1\n                            type: string\n                        required:\n                          - 48x48\n                          - 24x24\n                          - 16x16\n                          - 32x32\n                        type: object\n                      displayName:\n                        minLength: 1\n                        type: string\n                      emailAddress:\n                        minLength: 1\n                        type: string\n                      groups:\n                        properties:\n                          items:\n                            items:\n                              properties: {}\n                            type: array\n                          size:\n                            type: number\n                        required:\n                          - size\n                          - items\n                        type: object\n                      key:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                      timeZone:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - key\n                      - accountId\n                      - name\n                      - emailAddress\n                      - avatarUrls\n                      - displayName\n                      - active\n                      - timeZone\n                      - groups\n                      - applicationRoles\n                    type: object\n                  name:\n                    minLength: 1\n                    type: string\n                  originalDefaultWorkflow:\n                    minLength: 1\n                    type: string\n                  originalIssueTypeMappings:\n                    properties:\n                      \"10001\":\n                        minLength: 1\n                        type: string\n                    required:\n                      - \"10001\"\n                    type: object\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - name\n                  - description\n                  - defaultWorkflow\n                  - issueTypeMappings\n                  - originalDefaultWorkflow\n                  - originalIssueTypeMappings\n                  - draft\n                  - lastModifiedUser\n                  - lastModified\n                  - self\n                type: object\n  \"/workflowscheme/{id}/default\":\n    delete:\n      description: Resets the default workflow for a workflow scheme. That is, the default\n        workflow is set to Jira's system workflow (the jira workflow).\n      parameters:\n        - description: The ID of the workflow scheme.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: Set to true to create or update the draft of a workflow scheme and\n            delete the mapping from the draft, when the workflow scheme cannot\n            be edited. Defaults to false.\n          in: query\n          name: updateDraftIfNeeded\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  defaultWorkflow:\n                    minLength: 1\n                    type: string\n                  description:\n                    minLength: 1\n                    type: string\n                  draft:\n                    type: boolean\n                  id:\n                    type: number\n                  issueTypeMappings:\n                    properties:\n                      \"10000\":\n                        minLength: 1\n                        type: string\n                      \"10001\":\n                        minLength: 1\n                        type: string\n                    required:\n                      - \"10000\"\n                      - \"10001\"\n                    type: object\n                  name:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - name\n                  - description\n                  - defaultWorkflow\n                  - issueTypeMappings\n                  - draft\n                  - self\n                type: object\n    get:\n      description: Returns the default workflow for a workflow scheme. The default workflow\n        is the workflow that is assigned any issue types that have not been\n        mapped to any other workflow. The default workflow has All Unassigned\n        Issue Types listed in its issue types for the workflow scheme in Jira.\n      parameters:\n        - description: The ID of the workflow scheme.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: Set to true to return the default workflow for the workflow scheme's\n            draft rather than scheme itself. If the workflow scheme does not\n            have a draft, then the default workflow for the workflow scheme is\n            returned.\n          in: query\n          name: returnDraftIfExists\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  workflow:\n                    minLength: 1\n                    type: string\n                required:\n                  - workflow\n                type: object\n    put:\n      description: Sets the default workflow for a workflow scheme.\n      parameters:\n        - description: The ID of the workflow scheme.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        $ref: \"#/components/requestBodies/Body4\"\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  defaultWorkflow:\n                    minLength: 1\n                    type: string\n                  description:\n                    minLength: 1\n                    type: string\n                  draft:\n                    type: boolean\n                  id:\n                    type: number\n                  issueTypeMappings:\n                    properties:\n                      \"10000\":\n                        minLength: 1\n                        type: string\n                      \"10001\":\n                        minLength: 1\n                        type: string\n                    required:\n                      - \"10000\"\n                      - \"10001\"\n                    type: object\n                  name:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - name\n                  - description\n                  - defaultWorkflow\n                  - issueTypeMappings\n                  - draft\n                  - self\n                type: object\n  \"/workflowscheme/{id}/draft\":\n    delete:\n      description: Deletes a draft workflow scheme.\n      parameters:\n        - description: The ID of the active workflow scheme that the draft was originally\n            created from.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          description: Returned if the request is successful.\n    get:\n      description: \"Returns the draft workflow scheme for an active workflow scheme. Draft\n        workflow schemes allow changes to be made to the active workflow\n        schemes: When an active workflow scheme is updated, a draft copy is\n        created. The draft is modified, then the changes in the draft are copied\n        back to the active workflow scheme. See Configuring workflow schemes for\n        more information.Note that:\"\n      parameters:\n        - description: The ID of the active workflow scheme that the draft was originally\n            created from.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  defaultWorkflow:\n                    minLength: 1\n                    type: string\n                  description:\n                    minLength: 1\n                    type: string\n                  draft:\n                    type: boolean\n                  id:\n                    type: number\n                  issueTypeMappings:\n                    properties:\n                      \"10000\":\n                        minLength: 1\n                        type: string\n                      \"10001\":\n                        minLength: 1\n                        type: string\n                    required:\n                      - \"10000\"\n                      - \"10001\"\n                    type: object\n                  lastModified:\n                    minLength: 1\n                    type: string\n                  lastModifiedUser:\n                    properties:\n                      accountId:\n                        minLength: 1\n                        type: string\n                      active:\n                        type: boolean\n                      applicationRoles:\n                        properties:\n                          items:\n                            items:\n                              properties: {}\n                            type: array\n                          size:\n                            type: number\n                        required:\n                          - size\n                          - items\n                        type: object\n                      avatarUrls:\n                        properties:\n                          16x16:\n                            minLength: 1\n                            type: string\n                          24x24:\n                            minLength: 1\n                            type: string\n                          32x32:\n                            minLength: 1\n                            type: string\n                          48x48:\n                            minLength: 1\n                            type: string\n                        required:\n                          - 48x48\n                          - 24x24\n                          - 16x16\n                          - 32x32\n                        type: object\n                      displayName:\n                        minLength: 1\n                        type: string\n                      emailAddress:\n                        minLength: 1\n                        type: string\n                      groups:\n                        properties:\n                          items:\n                            items:\n                              properties: {}\n                            type: array\n                          size:\n                            type: number\n                        required:\n                          - size\n                          - items\n                        type: object\n                      key:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                      timeZone:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - key\n                      - accountId\n                      - name\n                      - emailAddress\n                      - avatarUrls\n                      - displayName\n                      - active\n                      - timeZone\n                      - groups\n                      - applicationRoles\n                    type: object\n                  name:\n                    minLength: 1\n                    type: string\n                  originalDefaultWorkflow:\n                    minLength: 1\n                    type: string\n                  originalIssueTypeMappings:\n                    properties:\n                      \"10001\":\n                        minLength: 1\n                        type: string\n                    required:\n                      - \"10001\"\n                    type: object\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - name\n                  - description\n                  - defaultWorkflow\n                  - issueTypeMappings\n                  - originalDefaultWorkflow\n                  - originalIssueTypeMappings\n                  - draft\n                  - lastModifiedUser\n                  - lastModified\n                  - self\n                type: object\n    put:\n      description: Updates a draft workflow scheme. If a draft workflow scheme does not\n        exist for the active workflow scheme, then a draft is created. Note that\n        an active workflow scheme can only have one draft workflow scheme at any\n        given time.\n      parameters:\n        - description: The ID of the active workflow scheme that the draft was originally\n            created from.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        $ref: \"#/components/requestBodies/Body19\"\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  defaultWorkflow:\n                    minLength: 1\n                    type: string\n                  description:\n                    minLength: 1\n                    type: string\n                  draft:\n                    type: boolean\n                  id:\n                    type: number\n                  issueTypeMappings:\n                    properties:\n                      \"10000\":\n                        minLength: 1\n                        type: string\n                      \"10001\":\n                        minLength: 1\n                        type: string\n                    required:\n                      - \"10000\"\n                      - \"10001\"\n                    type: object\n                  lastModified:\n                    minLength: 1\n                    type: string\n                  lastModifiedUser:\n                    properties:\n                      accountId:\n                        minLength: 1\n                        type: string\n                      active:\n                        type: boolean\n                      applicationRoles:\n                        properties:\n                          items:\n                            items:\n                              properties: {}\n                            type: array\n                          size:\n                            type: number\n                        required:\n                          - size\n                          - items\n                        type: object\n                      avatarUrls:\n                        properties:\n                          16x16:\n                            minLength: 1\n                            type: string\n                          24x24:\n                            minLength: 1\n                            type: string\n                          32x32:\n                            minLength: 1\n                            type: string\n                          48x48:\n                            minLength: 1\n                            type: string\n                        required:\n                          - 48x48\n                          - 24x24\n                          - 16x16\n                          - 32x32\n                        type: object\n                      displayName:\n                        minLength: 1\n                        type: string\n                      emailAddress:\n                        minLength: 1\n                        type: string\n                      groups:\n                        properties:\n                          items:\n                            items:\n                              properties: {}\n                            type: array\n                          size:\n                            type: number\n                        required:\n                          - size\n                          - items\n                        type: object\n                      key:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                      timeZone:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - key\n                      - accountId\n                      - name\n                      - emailAddress\n                      - avatarUrls\n                      - displayName\n                      - active\n                      - timeZone\n                      - groups\n                      - applicationRoles\n                    type: object\n                  name:\n                    minLength: 1\n                    type: string\n                  originalDefaultWorkflow:\n                    minLength: 1\n                    type: string\n                  originalIssueTypeMappings:\n                    properties:\n                      \"10001\":\n                        minLength: 1\n                        type: string\n                    required:\n                      - \"10001\"\n                    type: object\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - name\n                  - description\n                  - defaultWorkflow\n                  - issueTypeMappings\n                  - originalDefaultWorkflow\n                  - originalIssueTypeMappings\n                  - draft\n                  - lastModifiedUser\n                  - lastModified\n                  - self\n                type: object\n  \"/workflowscheme/{id}/draft/default\":\n    delete:\n      description: Resets the default workflow for a workflow scheme's draft. That is, the\n        default workflow is set to Jira's system workflow (the jira workflow).\n      parameters:\n        - description: The ID of the workflow scheme that the draft belongs to.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  defaultWorkflow:\n                    minLength: 1\n                    type: string\n                  description:\n                    minLength: 1\n                    type: string\n                  draft:\n                    type: boolean\n                  id:\n                    type: number\n                  issueTypeMappings:\n                    properties:\n                      \"10000\":\n                        minLength: 1\n                        type: string\n                      \"10001\":\n                        minLength: 1\n                        type: string\n                    required:\n                      - \"10000\"\n                      - \"10001\"\n                    type: object\n                  lastModified:\n                    minLength: 1\n                    type: string\n                  lastModifiedUser:\n                    properties:\n                      accountId:\n                        minLength: 1\n                        type: string\n                      active:\n                        type: boolean\n                      applicationRoles:\n                        properties:\n                          items:\n                            items:\n                              properties: {}\n                            type: array\n                          size:\n                            type: number\n                        required:\n                          - size\n                          - items\n                        type: object\n                      avatarUrls:\n                        properties:\n                          16x16:\n                            minLength: 1\n                            type: string\n                          24x24:\n                            minLength: 1\n                            type: string\n                          32x32:\n                            minLength: 1\n                            type: string\n                          48x48:\n                            minLength: 1\n                            type: string\n                        required:\n                          - 48x48\n                          - 24x24\n                          - 16x16\n                          - 32x32\n                        type: object\n                      displayName:\n                        minLength: 1\n                        type: string\n                      emailAddress:\n                        minLength: 1\n                        type: string\n                      groups:\n                        properties:\n                          items:\n                            items:\n                              properties: {}\n                            type: array\n                          size:\n                            type: number\n                        required:\n                          - size\n                          - items\n                        type: object\n                      key:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                      timeZone:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - key\n                      - accountId\n                      - name\n                      - emailAddress\n                      - avatarUrls\n                      - displayName\n                      - active\n                      - timeZone\n                      - groups\n                      - applicationRoles\n                    type: object\n                  name:\n                    minLength: 1\n                    type: string\n                  originalDefaultWorkflow:\n                    minLength: 1\n                    type: string\n                  originalIssueTypeMappings:\n                    properties:\n                      \"10001\":\n                        minLength: 1\n                        type: string\n                    required:\n                      - \"10001\"\n                    type: object\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - name\n                  - description\n                  - defaultWorkflow\n                  - issueTypeMappings\n                  - originalDefaultWorkflow\n                  - originalIssueTypeMappings\n                  - draft\n                  - lastModifiedUser\n                  - lastModified\n                  - self\n                type: object\n    get:\n      description: Returns the default workflow for a workflow scheme's draft. The default\n        workflow is the workflow that is assigned any issue types that have not\n        been mapped to any other workflow. The default workflow has All\n        Unassigned Issue Types listed in its issue types for the workflow scheme\n        in Jira.\n      parameters:\n        - description: The ID of the workflow scheme that the draft belongs to.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  workflow:\n                    minLength: 1\n                    type: string\n                required:\n                  - workflow\n                type: object\n    put:\n      description: Sets the default workflow for a workflow scheme's draft.\n      parameters:\n        - description: The ID of the workflow scheme that the draft belongs to.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        $ref: \"#/components/requestBodies/Body4\"\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  defaultWorkflow:\n                    minLength: 1\n                    type: string\n                  description:\n                    minLength: 1\n                    type: string\n                  draft:\n                    type: boolean\n                  id:\n                    type: number\n                  issueTypeMappings:\n                    properties:\n                      \"10000\":\n                        minLength: 1\n                        type: string\n                      \"10001\":\n                        minLength: 1\n                        type: string\n                    required:\n                      - \"10000\"\n                      - \"10001\"\n                    type: object\n                  lastModified:\n                    minLength: 1\n                    type: string\n                  lastModifiedUser:\n                    properties:\n                      accountId:\n                        minLength: 1\n                        type: string\n                      active:\n                        type: boolean\n                      applicationRoles:\n                        properties:\n                          items:\n                            items:\n                              properties: {}\n                            type: array\n                          size:\n                            type: number\n                        required:\n                          - size\n                          - items\n                        type: object\n                      avatarUrls:\n                        properties:\n                          16x16:\n                            minLength: 1\n                            type: string\n                          24x24:\n                            minLength: 1\n                            type: string\n                          32x32:\n                            minLength: 1\n                            type: string\n                          48x48:\n                            minLength: 1\n                            type: string\n                        required:\n                          - 48x48\n                          - 24x24\n                          - 16x16\n                          - 32x32\n                        type: object\n                      displayName:\n                        minLength: 1\n                        type: string\n                      emailAddress:\n                        minLength: 1\n                        type: string\n                      groups:\n                        properties:\n                          items:\n                            items:\n                              properties: {}\n                            type: array\n                          size:\n                            type: number\n                        required:\n                          - size\n                          - items\n                        type: object\n                      key:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                      timeZone:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - key\n                      - accountId\n                      - name\n                      - emailAddress\n                      - avatarUrls\n                      - displayName\n                      - active\n                      - timeZone\n                      - groups\n                      - applicationRoles\n                    type: object\n                  name:\n                    minLength: 1\n                    type: string\n                  originalDefaultWorkflow:\n                    minLength: 1\n                    type: string\n                  originalIssueTypeMappings:\n                    properties:\n                      \"10001\":\n                        minLength: 1\n                        type: string\n                    required:\n                      - \"10001\"\n                    type: object\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - name\n                  - description\n                  - defaultWorkflow\n                  - issueTypeMappings\n                  - originalDefaultWorkflow\n                  - originalIssueTypeMappings\n                  - draft\n                  - lastModifiedUser\n                  - lastModified\n                  - self\n                type: object\n  \"/workflowscheme/{id}/draft/issuetype/{issueType}\":\n    delete:\n      description: Deletes the issue type-workflow mapping for an issue type in a workflow\n        scheme's draft.\n      parameters:\n        - description: The ID of the workflow scheme that the draft belongs to.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: The ID of the issue type.\n          in: path\n          name: issueType\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  defaultWorkflow:\n                    minLength: 1\n                    type: string\n                  description:\n                    minLength: 1\n                    type: string\n                  draft:\n                    type: boolean\n                  id:\n                    type: number\n                  issueTypeMappings:\n                    properties:\n                      \"10000\":\n                        minLength: 1\n                        type: string\n                      \"10001\":\n                        minLength: 1\n                        type: string\n                    required:\n                      - \"10000\"\n                      - \"10001\"\n                    type: object\n                  lastModified:\n                    minLength: 1\n                    type: string\n                  lastModifiedUser:\n                    properties:\n                      accountId:\n                        minLength: 1\n                        type: string\n                      active:\n                        type: boolean\n                      applicationRoles:\n                        properties:\n                          items:\n                            items:\n                              properties: {}\n                            type: array\n                          size:\n                            type: number\n                        required:\n                          - size\n                          - items\n                        type: object\n                      avatarUrls:\n                        properties:\n                          16x16:\n                            minLength: 1\n                            type: string\n                          24x24:\n                            minLength: 1\n                            type: string\n                          32x32:\n                            minLength: 1\n                            type: string\n                          48x48:\n                            minLength: 1\n                            type: string\n                        required:\n                          - 48x48\n                          - 24x24\n                          - 16x16\n                          - 32x32\n                        type: object\n                      displayName:\n                        minLength: 1\n                        type: string\n                      emailAddress:\n                        minLength: 1\n                        type: string\n                      groups:\n                        properties:\n                          items:\n                            items:\n                              properties: {}\n                            type: array\n                          size:\n                            type: number\n                        required:\n                          - size\n                          - items\n                        type: object\n                      key:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                      timeZone:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - key\n                      - accountId\n                      - name\n                      - emailAddress\n                      - avatarUrls\n                      - displayName\n                      - active\n                      - timeZone\n                      - groups\n                      - applicationRoles\n                    type: object\n                  name:\n                    minLength: 1\n                    type: string\n                  originalDefaultWorkflow:\n                    minLength: 1\n                    type: string\n                  originalIssueTypeMappings:\n                    properties:\n                      \"10001\":\n                        minLength: 1\n                        type: string\n                    required:\n                      - \"10001\"\n                    type: object\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - name\n                  - description\n                  - defaultWorkflow\n                  - issueTypeMappings\n                  - originalDefaultWorkflow\n                  - originalIssueTypeMappings\n                  - draft\n                  - lastModifiedUser\n                  - lastModified\n                  - self\n                type: object\n    get:\n      description: Returns the issue type-workflow mapping for an issue type in a workflow\n        scheme's draft.\n      parameters:\n        - description: The ID of the workflow scheme that the draft belongs to.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: The ID of the issue type.\n          in: path\n          name: issueType\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  issueType:\n                    minLength: 1\n                    type: string\n                  workflow:\n                    minLength: 1\n                    type: string\n                required:\n                  - issueType\n                  - workflow\n                type: object\n    put:\n      description: Sets the workflow for an issue type in a workflow scheme's draft.\n      parameters:\n        - description: The ID of the workflow scheme that the draft belongs to.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: The ID of the issue type.\n          in: path\n          name: issueType\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Body9\"\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  defaultWorkflow:\n                    minLength: 1\n                    type: string\n                  description:\n                    minLength: 1\n                    type: string\n                  draft:\n                    type: boolean\n                  id:\n                    type: number\n                  issueTypeMappings:\n                    properties:\n                      \"10000\":\n                        minLength: 1\n                        type: string\n                      \"10001\":\n                        minLength: 1\n                        type: string\n                    required:\n                      - \"10000\"\n                      - \"10001\"\n                    type: object\n                  lastModified:\n                    minLength: 1\n                    type: string\n                  lastModifiedUser:\n                    properties:\n                      accountId:\n                        minLength: 1\n                        type: string\n                      active:\n                        type: boolean\n                      applicationRoles:\n                        properties:\n                          items:\n                            items:\n                              properties: {}\n                            type: array\n                          size:\n                            type: number\n                        required:\n                          - size\n                          - items\n                        type: object\n                      avatarUrls:\n                        properties:\n                          16x16:\n                            minLength: 1\n                            type: string\n                          24x24:\n                            minLength: 1\n                            type: string\n                          32x32:\n                            minLength: 1\n                            type: string\n                          48x48:\n                            minLength: 1\n                            type: string\n                        required:\n                          - 48x48\n                          - 24x24\n                          - 16x16\n                          - 32x32\n                        type: object\n                      displayName:\n                        minLength: 1\n                        type: string\n                      emailAddress:\n                        minLength: 1\n                        type: string\n                      groups:\n                        properties:\n                          items:\n                            items:\n                              properties: {}\n                            type: array\n                          size:\n                            type: number\n                        required:\n                          - size\n                          - items\n                        type: object\n                      key:\n                        minLength: 1\n                        type: string\n                      name:\n                        minLength: 1\n                        type: string\n                      self:\n                        minLength: 1\n                        type: string\n                      timeZone:\n                        minLength: 1\n                        type: string\n                    required:\n                      - self\n                      - key\n                      - accountId\n                      - name\n                      - emailAddress\n                      - avatarUrls\n                      - displayName\n                      - active\n                      - timeZone\n                      - groups\n                      - applicationRoles\n                    type: object\n                  name:\n                    minLength: 1\n                    type: string\n                  originalDefaultWorkflow:\n                    minLength: 1\n                    type: string\n                  originalIssueTypeMappings:\n                    properties:\n                      \"10001\":\n                        minLength: 1\n                        type: string\n                    required:\n                      - \"10001\"\n                    type: object\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - name\n                  - description\n                  - defaultWorkflow\n                  - issueTypeMappings\n                  - originalDefaultWorkflow\n                  - originalIssueTypeMappings\n                  - draft\n                  - lastModifiedUser\n                  - lastModified\n                  - self\n                type: object\n  \"/workflowscheme/{id}/draft/workflow\":\n    delete:\n      description: Deletes the workflow-issue type mapping for a workflow in a workflow\n        scheme's draft.\n      parameters:\n        - description: The ID of the workflow scheme that the draft belongs to.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: The name of the workflow.\n          in: query\n          name: workflowName\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n    get:\n      description: Returns the workflow-issue type mappings for a workflow scheme's draft.\n      parameters:\n        - description: The ID of the workflow scheme that the draft belongs to.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: The name of a workflow in the scheme. Limits the results to the\n            workflow-issue type mapping for the specified workflow.\n          in: query\n          name: workflowName\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  defaultMapping:\n                    type: boolean\n                  issueTypes:\n                    items:\n                      properties: {}\n                    type: array\n                  workflow:\n                    minLength: 1\n                    type: string\n                required:\n                  - workflow\n                  - issueTypes\n                  - defaultMapping\n                type: object\n    put:\n      description: Sets the issue types for a workflow in a workflow scheme's draft. The\n        workflow can also be set as the default workflow for the draft workflow\n        scheme. Unmapped issues types are mapped to the default workflow.\n      parameters:\n        - description: The ID of the workflow scheme that the draft belongs to.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: The name of the workflow.\n          in: query\n          name: workflowName\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Body5\"\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  defaultWorkflow:\n                    minLength: 1\n                    type: string\n                  description:\n                    minLength: 1\n                    type: string\n                  draft:\n                    type: boolean\n                  id:\n                    type: number\n                  issueTypeMappings:\n                    properties:\n                      \"10000\":\n                        minLength: 1\n                        type: string\n                      \"10001\":\n                        minLength: 1\n                        type: string\n                    required:\n                      - \"10000\"\n                      - \"10001\"\n                    type: object\n                  name:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - name\n                  - description\n                  - defaultWorkflow\n                  - issueTypeMappings\n                  - draft\n                  - self\n                type: object\n  \"/workflowscheme/{id}/issuetype/{issueType}\":\n    delete:\n      description: Deletes the issue type-workflow mapping for an issue type in a workflow\n        scheme.\n      parameters:\n        - description: The ID of the workflow scheme.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: The ID of the issue type.\n          in: path\n          name: issueType\n          required: true\n          schema:\n            type: string\n        - description: Set to true to create or update the draft of a workflow scheme and\n            update the mapping in the draft, when the workflow scheme cannot be\n            edited. Defaults to false.\n          in: query\n          name: updateDraftIfNeeded\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  defaultWorkflow:\n                    minLength: 1\n                    type: string\n                  description:\n                    minLength: 1\n                    type: string\n                  draft:\n                    type: boolean\n                  id:\n                    type: number\n                  issueTypeMappings:\n                    properties:\n                      \"10000\":\n                        minLength: 1\n                        type: string\n                      \"10001\":\n                        minLength: 1\n                        type: string\n                    required:\n                      - \"10000\"\n                      - \"10001\"\n                    type: object\n                  name:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - name\n                  - description\n                  - defaultWorkflow\n                  - issueTypeMappings\n                  - draft\n                  - self\n                type: object\n    get:\n      description: Returns the issue type-workflow mapping for an issue type in a workflow\n        scheme.\n      parameters:\n        - description: The ID of the workflow scheme.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: The ID of the issue type.\n          in: path\n          name: issueType\n          required: true\n          schema:\n            type: string\n        - description: Returns the mapping from the workflow scheme's draft rather than the\n            workflow scheme, if set to true. If no draft exists, the mapping\n            from the workflow scheme is returned.\n          in: query\n          name: returnDraftIfExists\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  issueType:\n                    minLength: 1\n                    type: string\n                  workflow:\n                    minLength: 1\n                    type: string\n                required:\n                  - issueType\n                  - workflow\n                type: object\n    put:\n      description: Sets the workflow for an issue type in a workflow scheme.\n      parameters:\n        - description: The ID of the workflow scheme.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: The ID of the issue type.\n          in: path\n          name: issueType\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Body9\"\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  defaultWorkflow:\n                    minLength: 1\n                    type: string\n                  description:\n                    minLength: 1\n                    type: string\n                  draft:\n                    type: boolean\n                  id:\n                    type: number\n                  issueTypeMappings:\n                    properties:\n                      \"10000\":\n                        minLength: 1\n                        type: string\n                      \"10001\":\n                        minLength: 1\n                        type: string\n                    required:\n                      - \"10000\"\n                      - \"10001\"\n                    type: object\n                  name:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - name\n                  - description\n                  - defaultWorkflow\n                  - issueTypeMappings\n                  - draft\n                  - self\n                type: object\n  \"/workflowscheme/{id}/workflow\":\n    delete:\n      description: Deletes the workflow-issue type mapping for a workflow in a workflow\n        scheme.\n      parameters:\n        - description: The ID of the workflow scheme.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: Set to true to create or update the draft of a workflow scheme and\n            delete the mapping from the draft, when the workflow scheme cannot\n            be edited. Defaults to false.\n          in: query\n          name: updateDraftIfNeeded\n          schema:\n            type: boolean\n        - description: The name of the workflow.\n          in: query\n          name: workflowName\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n    get:\n      description: Returns the workflow-issue type mappings for a workflow scheme.\n      parameters:\n        - description: The ID of the workflow scheme.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: Returns the mapping from the workflow scheme's draft rather than the\n            workflow scheme, if set to true. If no draft exists, the mapping\n            from the workflow scheme is returned.\n          in: query\n          name: returnDraftIfExists\n          schema:\n            type: boolean\n        - description: The name of a workflow in the scheme. Limits the results to the\n            workflow-issue type mapping for the specified workflow.\n          in: query\n          name: workflowName\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  defaultMapping:\n                    type: boolean\n                  issueTypes:\n                    items:\n                      properties: {}\n                    type: array\n                  workflow:\n                    minLength: 1\n                    type: string\n                required:\n                  - workflow\n                  - issueTypes\n                  - defaultMapping\n                type: object\n    put:\n      description: Sets the issue types for a workflow in a workflow scheme. The workflow\n        can also be set as the default workflow for the workflow scheme.\n        Unmapped issues types are mapped to the default workflow.\n      parameters:\n        - description: The ID of the workflow scheme.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: The name of the workflow.\n          in: query\n          name: workflowName\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Body5\"\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  defaultWorkflow:\n                    minLength: 1\n                    type: string\n                  description:\n                    minLength: 1\n                    type: string\n                  draft:\n                    type: boolean\n                  id:\n                    type: number\n                  issueTypeMappings:\n                    properties:\n                      \"10000\":\n                        minLength: 1\n                        type: string\n                      \"10001\":\n                        minLength: 1\n                        type: string\n                    required:\n                      - \"10000\"\n                      - \"10001\"\n                    type: object\n                  name:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                required:\n                  - id\n                  - name\n                  - description\n                  - defaultWorkflow\n                  - issueTypeMappings\n                  - draft\n                  - self\n                type: object\n  /worklog/deleted:\n    get:\n      description: Returns a list of IDs and delete timestamps for worklogs deleted after a\n        date and time.\n      parameters:\n        - description: The date and time, in UNIX timestamp format, after which deleted\n            worklogs are returned.\n          in: query\n          name: since\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  lastPage:\n                    type: boolean\n                  nextPage:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                  since:\n                    type: number\n                  until:\n                    type: number\n                  values:\n                    items:\n                      properties:\n                        properties:\n                          items:\n                            properties: {}\n                          type: array\n                        updatedTime:\n                          type: number\n                        worklogId:\n                          type: number\n                      required:\n                        - worklogId\n                        - updatedTime\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - values\n                  - since\n                  - until\n                  - self\n                  - nextPage\n                  - lastPage\n                type: object\n  /worklog/list:\n    post:\n      description: Returns worklog details for a list of worklog IDs.\n      parameters:\n        - description: Use expand to include additional information about worklogs in the\n            response. This parameter accepts properties that returns the\n            properties of each worklog.\n          in: query\n          name: expand\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                ids:\n                  description: A list of worklog IDs.\n                  items:\n                    type: integer\n                  type: array\n              type: object\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                items:\n                  properties:\n                    author:\n                      properties:\n                        active:\n                          type: boolean\n                        displayName:\n                          minLength: 1\n                          type: string\n                        name:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - name\n                        - displayName\n                        - active\n                      type: object\n                    comment:\n                      properties:\n                        content:\n                          items:\n                            properties:\n                              content:\n                                items:\n                                  properties:\n                                    text:\n                                      minLength: 1\n                                      type: string\n                                    type:\n                                      minLength: 1\n                                      type: string\n                                  required:\n                                    - type\n                                    - text\n                                minItems: 1\n                                type: array\n                                uniqueItems: true\n                              type:\n                                minLength: 1\n                                type: string\n                            required:\n                              - type\n                          minItems: 1\n                          type: array\n                          uniqueItems: true\n                        type:\n                          minLength: 1\n                          type: string\n                        version:\n                          type: number\n                      required:\n                        - type\n                        - version\n                        - content\n                      type: object\n                    id:\n                      minLength: 1\n                      type: string\n                    issueId:\n                      minLength: 1\n                      type: string\n                    self:\n                      minLength: 1\n                      type: string\n                    started:\n                      minLength: 1\n                      type: string\n                    timeSpent:\n                      minLength: 1\n                      type: string\n                    timeSpentSeconds:\n                      type: number\n                    updateAuthor:\n                      properties:\n                        active:\n                          type: boolean\n                        displayName:\n                          minLength: 1\n                          type: string\n                        name:\n                          minLength: 1\n                          type: string\n                        self:\n                          minLength: 1\n                          type: string\n                      required:\n                        - self\n                        - name\n                        - displayName\n                        - active\n                      type: object\n                    updated:\n                      minLength: 1\n                      type: string\n                    visibility:\n                      properties:\n                        type:\n                          minLength: 1\n                          type: string\n                        value:\n                          minLength: 1\n                          type: string\n                      required:\n                        - type\n                        - value\n                      type: object\n                  required:\n                    - self\n                    - author\n                    - updateAuthor\n                    - comment\n                    - updated\n                    - visibility\n                    - started\n                    - timeSpent\n                    - timeSpentSeconds\n                    - id\n                    - issueId\n                  type: object\n                minItems: 1\n                type: array\n                uniqueItems: true\n  /worklog/updated:\n    get:\n      description: Returns a list of IDs and update timestamps for worklogs updated after a\n        date and time.\n      parameters:\n        - description: Use expand to include additional information about worklogs in the\n            response. This parameter accepts properties that returns the\n            properties of each worklog.\n          in: query\n          name: expand\n          schema:\n            type: string\n        - description: The date and time, in UNIX timestamp format, after which updated\n            worklogs are returned.\n          in: query\n          name: since\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                description: \"\"\n                properties:\n                  lastPage:\n                    type: boolean\n                  nextPage:\n                    minLength: 1\n                    type: string\n                  self:\n                    minLength: 1\n                    type: string\n                  since:\n                    type: number\n                  until:\n                    type: number\n                  values:\n                    items:\n                      properties:\n                        properties:\n                          items:\n                            properties: {}\n                          type: array\n                        updatedTime:\n                          type: number\n                        worklogId:\n                          type: number\n                      required:\n                        - worklogId\n                        - updatedTime\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - values\n                  - since\n                  - until\n                  - self\n                  - nextPage\n                  - lastPage\n                type: object\nservers:\n  - url: https://jira.atlassian.com/rest/api/3\ncomponents:\n  requestBodies:\n    Body:\n      content:\n        application/json:\n          schema:\n            properties:\n              config:\n                type: object\n              properties:\n                description: The properties can be any arbitrary key value pairs. These\n                  properties can be searched using JQL, if the extractions (see\n                  https://developer.atlassian.com/cloud/jira/platform/modules/issue-field-option-property-index/)\n                  are defined in the descriptor for the issue field module.\n                type: object\n              value:\n                description: The option's name, which is displayed in the UI.\n                type: string\n            type: object\n    Body2:\n      content:\n        application/json:\n          schema:\n            properties:\n              description:\n                description: The description of the project category. Required on create,\n                  optional on update.\n                type: string\n              name:\n                description: The name of the project category. Required on create, optional\n                  on update.\n                type: string\n            type: object\n    Body3:\n      content:\n        application/json:\n          schema:\n            properties:\n              author:\n                description: User details. Read only.\n                type: object\n              comment:\n                description: A comment about the worklog. Optional when creating or\n                  updating a worklog.\n                type: object\n              properties:\n                description: Details of properties for the worklog. Optional when creating\n                  or updating a worklog.\n                items:\n                  type: object\n                type: array\n              started:\n                description: The datetime on which the worklog effort was started. Required\n                  when creating a worklog. Optional when updating a worklog.\n                type: string\n              timeSpent:\n                description: \"The time spent working on the issue as days (#d), hours (#h),\n                  or minutes (#m or #). Required when creating a worklog if\n                  timeSpentSeconds isn't provided. Optional when updating a\n                  worklog. Cannot be provided if timeSpentSecond is provided.\"\n                type: string\n              timeSpentSeconds:\n                description: The time in seconds spent working on the issue. Required when\n                  creating a worklog if timeSpent isn't provided. Optional when\n                  updating a worklog. Cannot be provided if timeSpent is\n                  provided.\n                type: integer\n              updateAuthor:\n                description: User details. Read only.\n                type: object\n              visibility:\n                description: The group or role to which this item is visible.\n                type: object\n            type: object\n    Body4:\n      content:\n        application/json:\n          schema:\n            properties:\n              updateDraftIfNeeded:\n                description: Indicates whether a draft workflow scheme is created or\n                  updated when updating an active workflow scheme. The draft is\n                  updated with the new default workflow. Defaults to false.\n                type: boolean\n              workflow:\n                description: The name of the workflow to set as the default workflow. For\n                  example, jira.\n                type: string\n            type: object\n    Body5:\n      content:\n        application/json:\n          schema:\n            properties:\n              defaultMapping:\n                description: Indicates whether the workflow is the default workflow for the\n                  workflow scheme.\n                type: boolean\n              issueTypes:\n                description: The list of issue type IDs.\n                items:\n                  type: string\n                type: array\n              updateDraftIfNeeded:\n                description: Indicates whether a draft workflow scheme is created or\n                  updated when updating an active workflow scheme. The draft is\n                  updated with the new workflow-issue types mapping. Defaults to\n                  false.\n                type: boolean\n              workflow:\n                description: The name of the workflow. For example, jira. Optional if\n                  updating the workflow-issue types mapping.\n                type: string\n            type: object\n    Body6:\n      content:\n        application/json:\n          schema:\n            properties:\n              assignee:\n                description: A user.\n                type: object\n              assigneeType:\n                description: \"The nominal user type used to determine the assignee for\n                  issues created with this component. See realAssigneeType for\n                  details on how the type of the user, and hence the user,\n                  assigned to issues is determined. Can take the following\n                  values:\"\n                enum:\n                  - PROJECT_DEFAULT\n                  - COMPONENT_LEAD\n                  - PROJECT_LEAD\n                  - UNASSIGNED\n                type: string\n              description:\n                description: The description for the component. Optional when creating or\n                  updating a component.\n                type: string\n              lead:\n                description: A user.\n                type: object\n              leadAccountId:\n                description: The accountId of the component's lead user. The accountId\n                  uniquely identifies the user across all Atlassian products.\n                  For example,\n                  384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192.Optional when\n                  creating or updating a component.\n                type: string\n              leadUserName:\n                description: This property has been deprecated in favour of leadAccountId\n                  due to privacy changes. See the migration guide for\n                  details.The username of the component's lead user. Optional\n                  when creating or updating a component.\n                type: string\n              name:\n                description: The unique name for the component in the project. Required\n                  when creating a component. Optional when updating a component.\n                  Maximum length 255 chars.\n                type: string\n              project:\n                description: The key of the project to which the component is assigned.\n                  Required when creating a component. Can't be updated.\n                type: string\n              projectId:\n                description: Not used.\n                type: integer\n              realAssignee:\n                description: A user.\n                type: object\n            type: object\n    Body7:\n      content:\n        application/json:\n          schema:\n            properties:\n              description:\n                description: A description of the filter (e.g., This filter returns open\n                  bugs for the Example project).\n                type: string\n              name:\n                description: The name of the filter (e.g., Open bugs for Example project).\n                  Must be unique.\n                type: string\n              owner:\n                description: A user.\n                type: object\n              sharePermissions:\n                description: The groups and projects that the filter is shared with. This\n                  can be specified when updating a filter, but not when creating\n                  a filter.\n                items:\n                  type: object\n                type: array\n              sharedUsers:\n                type: object\n              subscriptions:\n                type: object\n            type: object\n    Body8:\n      content:\n        application/json:\n          schema:\n            properties:\n              fields:\n                description: List of issue screen field to update, specifying the sub-field\n                  to update and its value. This field provides a straightforward\n                  option when setting a single sub-field. When multiple\n                  sub-fields or other operations are required, use update.\n                  Fields included in here cannot be included in update.\n                type: object\n              historyMetadata:\n                description: Details of issue history metadata. Deprecated.\n                type: object\n              properties:\n                description: Details of issue properties to be add or update.\n                items:\n                  type: object\n                type: array\n              transition:\n                description: Details of an issue transition.\n                type: object\n              update:\n                description: List of operations to perform on issue screen fields. Note\n                  that fields included in here cannot be included in fields.\n                type: object\n            type: object\n    Body9:\n      content:\n        application/json:\n          schema:\n            properties:\n              issueType:\n                description: The ID of the issue type. Not required if updating the issue\n                  type-workflow mapping.\n                type: string\n              updateDraftIfNeeded:\n                description: Set to true to create or update the draft of a workflow scheme\n                  and update the mapping in the draft, when the workflow scheme\n                  cannot be edited. Defaults to false. Only applicable when\n                  updating the workflow-issue types mapping.\n                type: boolean\n              workflow:\n                description: The name of the workflow. For example, jira.\n                type: string\n            type: object\n    Body10:\n      content:\n        application/json:\n          schema:\n            properties:\n              body:\n                description: The comment.\n                type: object\n              jsdPublic:\n                description: Indicates whether the comment is visible in Jira Service Desk.\n                  Optional on create and update. Defaults to true. If the site\n                  doesn't use Jira Service Desk or the project isn't a Jira\n                  Service Desk projectthis parameter defaults to true.\n                type: boolean\n              properties:\n                description: A list of comment properties. Optional on create and update.\n                items:\n                  type: object\n                type: array\n              visibility:\n                description: The group or role to which this comment is visible. Optional\n                  on create and update.\n                type: object\n            type: object\n    Body11:\n      content:\n        application/json:\n          schema:\n            properties:\n              application:\n                description: The application the linked item is in.\n                type: object\n              globalId:\n                description: The global ID of the link, such as the ID of the item on the\n                  remote system. The maximum length is 255 characters.\n                type: string\n              object:\n                description: The linked item.\n                type: object\n              relationship:\n                description: Description of the relationship between the issue and the\n                  linked item.\n                type: string\n            type: object\n    Body12:\n      content:\n        application/json:\n          schema:\n            properties:\n              id:\n                description: \"The ID of the issue link type and is used as follows:\"\n                type: string\n              inward:\n                description: \"The description of the issue link type inward link and is\n                  used as follows:\"\n                type: string\n              name:\n                description: \"The name of the issue link type and is used as follows:\"\n                type: string\n              outward:\n                description: \"The description of the issue link type outward link and is\n                  used as follows:\"\n                type: string\n            type: object\n    Body13:\n      content:\n        application/json:\n          schema:\n            properties:\n              description:\n                description: A description for the permission scheme.\n                type: string\n              name:\n                description: The name of the permission scheme. Must be unique. Required\n                  when creating or updating a permission scheme.\n                type: string\n              permissions:\n                description: The permission scheme to create or update. See About\n                  permission schemes and grants for more information.\n                items:\n                  type: object\n                type: array\n              scope:\n                description: The scope of the permission scheme\n                type: object\n            type: object\n    Body14:\n      content:\n        application/json:\n          schema:\n            properties:\n              assigneeType:\n                description: The default assignee when creating issues for this project.\n                enum:\n                  - PROJECT_LEAD\n                  - UNASSIGNED\n                type: string\n              avatarId:\n                description: An integer value for the project's avatar.\n                type: integer\n              categoryId:\n                description: The ID of the project's category. A complete list of category\n                  IDs can be found using the Get all project categories\n                  resource.\n                type: integer\n              description:\n                description: A brief description of the project.\n                type: string\n              issueSecurityScheme:\n                description: The ID of the issue security scheme for the project, which\n                  enables you to control who can and cannot view issues. Use the\n                  Get issue security schemes resource to get all issue security\n                  scheme IDs.\n                type: integer\n              key:\n                description: Project keys must be unique and start with an uppercase letter\n                  followed by one or more uppercase alphanumeric characters. Max\n                  length is 10 characters. Required when creating a project.\n                  Optional when updating a project.\n                type: string\n              lead:\n                description: Sets the username of the project lead. Either lead or\n                  leadAccountId should be setwhen creating a project. Optional\n                  when updating a project.\n                type: string\n              leadAccountId:\n                description: Sets the project lead account id.Either lead or leadAccountId\n                  should be setwhen creating a project. Optional when updating a\n                  project.\n                type: string\n              name:\n                description: The name of the project. Required when creating a project.\n                  Optional when updating a project.\n                type: string\n              notificationScheme:\n                description: The ID of the notification scheme for the project. Use the Get\n                  notification schemes resource to get a list of notification\n                  scheme IDs.\n                type: integer\n              permissionScheme:\n                description: The ID of the permission scheme for the project. Use the Get\n                  all permission schemes resource to see a list of all\n                  permission scheme IDs.\n                type: integer\n              projectTemplateKey:\n                description: A prebuilt configuration for a project. The type of the\n                  projectTemplateKey must match with the type of the\n                  projectTypeKey. Required when creating a project. Not\n                  applicable for the Update project resource.\n                enum:\n                  - com.pyxis.greenhopper.jira:gh-simplified-agility\n                  - com.pyxis.greenhopper.jira:gh-simplified-basic\n                  - com.pyxis.greenhopper.jira:gh-simplified-kanban\n                  - com.pyxis.greenhopper.jira:gh-simplified-scrum\n                  - com.atlassian.servicedesk:simplified-it-service-desk\n                  - com.atlassian.servicedesk:simplified-internal-service-desk\n                  - com.atlassian.servicedesk:simplified-external-service-desk\n                  - com.atlassian.jira-core-project-templates:jira-core-simplified-content-management\n                  - com.atlassian.jira-core-project-templates:jira-core-simplified-document-approval\n                  - com.atlassian.jira-core-project-templates:jira-core-simplified-lead-tracking\n                type: string\n              projectTypeKey:\n                description: The project type, which dictates the application-specific\n                  feature set. Required when creating a project. Not applicable\n                  for the Update project resource. See the Update project type\n                  resource instead.\n                enum:\n                  - software\n                  - service_desk\n                  - business\n                type: string\n              url:\n                description: A link to information about this project, such as project\n                  documentation\n                type: string\n            type: object\n    Body15:\n      content:\n        application/json:\n          schema:\n            properties:\n              description:\n                description: A description of the project role. Required when fully\n                  updating a project role. Optional when creating or partially\n                  updating a project role.\n                type: string\n              name:\n                description: The name of the project role. Must be unique. Cannot begin or\n                  end with whitespace. Max length is 255 characters. Required\n                  when creating a project role. Optional when partially updating\n                  a project role.\n                type: string\n            type: object\n    Body16:\n      content:\n        application/json:\n          schema:\n            properties:\n              name:\n                description: The name of the screen tab. Required on create and update.\n                  Maximum length is 255 characters.\n                type: string\n            type: object\n    Body17:\n      content:\n        application/json:\n          schema:\n            properties:\n              archived:\n                description: Indicates that the version is archived. Optional when creating\n                  or updating a version.\n                type: boolean\n              description:\n                description: The description of the version. Optional when creating or\n                  updating a version.\n                type: string\n              issuesStatusForFixVersion:\n                type: object\n              moveUnfixedIssuesTo:\n                description: The URL of the self link to the version to which all unfixed\n                  issues are moved when a version is released. Not applicable\n                  when creating a version. Optional when updating a version.\n                type: string\n              name:\n                description: The unique name of the version. Required when creating a\n                  version. Optional when updating a version. Maximum length 255\n                  chars.\n                type: string\n              operations:\n                description: If the expand option operations is used, returns the list of\n                  operations available for this version. Read only.\n                items:\n                  type: object\n                type: array\n              project:\n                description: Deprecated. Use projectId.\n                type: string\n              projectId:\n                description: The ID of the project to which this version is attached.\n                  Required when creating a version. Not applicable when updating\n                  a version.\n                type: integer\n              releaseDate:\n                description: The release date of the version. Expressed in ISO 8601 format\n                  (yyyy-mm-dd). Optional when creating or updating a version.\n                type: string\n              released:\n                description: Indicates that the version is released. If the version is\n                  released a request to release again is ignored. Not applicable\n                  when creating a version. Optional when updating a version.\n                type: boolean\n              remotelinks:\n                description: If the expand option remotelinks is used, returns the list of\n                  remote links stored against this version. Read only.\n                items:\n                  type: object\n                type: array\n              startDate:\n                description: The start date of the version. Expressed in ISO 8601 format\n                  (yyyy-mm-dd). Optional when creating or updating a version.\n                type: string\n            type: object\n    Body18:\n      content:\n        application/json:\n          schema:\n            properties:\n              key:\n                description: The key of the transition property. Also known as the name of\n                  the transition property.\n                type: string\n              value:\n                description: The value of the transition property.\n                type: string\n            type: object\n    Body19:\n      content:\n        application/json:\n          schema:\n            properties:\n              defaultWorkflow:\n                description: The name of the default workflow for the workflow scheme. The\n                  default workflow has All Unassigned Issue Types assigned to it\n                  in Jira. If defaultWorkflow is not specified when creating a\n                  workflow scheme, it is set to Jira Workflow (jira).\n                type: string\n              description:\n                description: The description of the workflow scheme.\n                type: string\n              issueTypeMappings:\n                description: The issue type-project mappings, where each mapping is an\n                  issue type ID and project name pair. Note that an issue type\n                  can only be mapped to one project in a workflow scheme.\n                type: object\n              name:\n                description: The name of the workflow scheme. The name must be unique.\n                  Maximum length 255 characters.\n                type: string\n              updateDraftIfNeeded:\n                description: \"Indicates whether to create or update a draft workflow scheme\n                  when updating an active workflow scheme. An active workflow\n                  scheme is a workflow scheme that is used by at least one\n                  project. The following examples show how this property works:\"\n                type: boolean\n            type: object\n  securitySchemes:\n    Basic:\n      type: http\n      scheme: basic\n    OAuth:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: https://auth.atlassian.com/authorize\n          tokenUrl: https://auth.atlassian.com/oauth/token\n          scopes:\n            manage:jira-configuration: Take Jira administration actions (for example, create projects and\n              custom fields, view workflows, and manage issue link types)\n            manage:jira-project: Create and edit project settings and create new project-level\n              objects (for example, versions and components)\n            read:jira-user: View user information in Jira that the user has access to,\n              including usernames, email addresses, and avatars\n            read:jira-work: Read Jira project and issue data, search for issues and objects\n              associated with issues like attachments and worklogs\n            write:jira-work: Create and edit issues in Jira, post comments as the user, create\n              worklogs, and delete issues\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/atlassian.com-jira-v3-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/atlassian.com-jira-v3-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/search\": get: parameters: parse parameter \"fields\": schema: at 1:304061: parse enum values: parse value \"\\\"*all\\\"\": expected type \"array\", got \"string\""
}