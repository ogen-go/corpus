{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/swagger-api/swagger-parser"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "modules/swagger-parser-v3/src/test/resources/allOf-relative-file-references/swagger.yaml",
			"byteSize": 1830,
			"content": "openapi: 3.0.0\nservers:\n  - url: 'http://petstore.swagger.io/api'\ninfo:\n  version: 1.0.0\n  title: Swagger Petstore (Simple)\n  description: \u003e-\n    A sample API that uses a petstore as an example to demonstrate features in\n    the swagger-2.0 specification\n  termsOfService: 'http://helloreverb.com/terms/'\n  contact:\n    name: Swagger API team\n    email: foo@example.com\n    url: 'http://swagger.io'\n  license:\n    name: MIT\n    url: 'http://opensource.org/licenses/MIT'\npaths:\n  /pets:\n    get:\n      description: Returns all pets from the system that the user has access to\n      operationId: findPets\n      parameters:\n        - name: tags\n          in: query\n          description: tags to filter by\n          required: false\n          style: form\n          schema:\n            type: array\n            items:\n              type: string\n        - name: limit\n          in: query\n          description: maximum number of results to return\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: pet response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: './definitions.yaml#/components/schemas/ShippingInfo'\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: './definitions.yaml#/components/schemas/ShippingInfo'\n            text/xml:\n              schema:\n                type: array\n                items:\n                  $ref: './definitions.yaml#/components/schemas/ShippingInfo'\n            text/html:\n              schema:\n                type: array\n                items:\n                  $ref: './definitions.yaml#/components/schemas/ShippingInfo'"
		}
	},
	"Error": "parse: parse spec: paths: /pets: get: operation \"findPets\": responses: 200: content: \"text/xml\": schema: parse schema: item: parse schema: resolve \"./definitions.yaml#/components/schemas/ShippingInfo\": find schema: external base \"./definitions.yaml\" is not supported"
}