{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Sean-Bradley/Seans-TypeScript-NodeJS-CRUD-REST-API-Boilerplate"
		},
		"file": {
			"name": "swagger.json",
			"size": 0,
			"path": "dist/swagger.json",
			"byteSize": 6932,
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n        \"version\": \"1.0.0\",\n        \"title\": \"Seans-TypeScript-NodeJS-CRUD-REST-API-Boilerplate\",\n        \"description\": \"A minimal and easy to follow example of what you need to create a CRUD style API in NodeJs using TypeScript\",\n        \"license\": {\n            \"name\": \"MIT\",\n            \"url\": \"https://opensource.org/licenses/MIT\"\n        }\n    },\n    \"servers\": [\n        {\n            \"url\": \"/\",\n            \"description\": \"Local Dev, or from Heroku\"\n        },\n        {\n            \"url\": \"/api/\",\n            \"description\": \"With docker-compose and nginx proxy\"\n        }\n    ],\n    \"tags\": [\n        {\n            \"name\": \"Cats\",\n            \"description\": \"API for cats in the system\"\n        }\n    ],\n    \"consumes\": [\n        \"application/json\"\n    ],\n    \"produces\": [\n        \"application/json\"\n    ],\n    \"paths\": {\n        \"/cats\": {\n            \"get\": {\n                \"tags\": [\n                    \"Cats\"\n                ],\n                \"summary\": \"Get all cats in system\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/Cats\"\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                    \"Cats\"\n                ],\n                \"summary\": \"Create a new cat in system\",\n                \"requestBody\": {\n                    \"description\": \"Cat Object\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/definitions/Cat\"\n                            }\n                        }\n                    }\n                },\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/id\"\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Failed. Bad post data.\"\n                    }\n                }\n            }\n        },\n        \"/cats/{id}\": {\n            \"parameters\": [\n                {\n                    \"name\": \"id\",\n                    \"in\": \"path\",\n                    \"required\": true,\n                    \"description\": \"ID of the cat that we want to match\",\n                    \"type\": \"string\"\n                }\n            ],\n            \"get\": {\n                \"tags\": [\n                    \"Cats\"\n                ],\n                \"summary\": \"Get cat with given ID\",\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"description\": \"Cat with id\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/id\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/Cat\"\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Failed. Cat not found.\"\n                    }\n                }\n            },\n            \"put\": {\n                \"summary\": \"Update cat with given ID\",\n                \"tags\": [\n                    \"Cats\"\n                ],\n                \"requestBody\": {\n                    \"description\": \"Cat Object\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/definitions/Cat\"\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"description\": \"Cat with new values of properties\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/id\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/Cat\"\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Failed. Bad post data.\"\n                    },\n                    \"404\": {\n                        \"description\": \"Failed. Cat not found.\"\n                    }\n                }\n            },\n            \"delete\": {\n                \"summary\": \"Delete cat with given ID\",\n                \"tags\": [\n                    \"Cats\"\n                ],\n                \"parameters\": [\n                    {\n                        \"in\": \"path\",\n                        \"name\": \"id\",\n                        \"required\": true,\n                        \"description\": \"Delete Cat with id\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/id\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/id\"\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Failed. Cat not found.\"\n                    }\n                }\n            }\n        }\n    },\n    \"definitions\": {\n        \"id\": {\n            \"properties\": {\n                \"uuid\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"Cat\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"genus\": {\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"isHungry\": {\n                    \"type\": \"boolean\"\n                },\n                \"lastFedDate\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"Cats\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"cats\": {\n                    \"type\": \"object\",\n                    \"additionalProperties\": {\n                        \"$ref\": \"#/definitions/Cat\"\n                    }\n                }\n            }\n        }\n    }\n}\n",
			"canonicalURL": "/github.com/Sean-Bradley/Seans-TypeScript-NodeJS-CRUD-REST-API-Boilerplate@128f25b7aecec4957f674a86ba32c6de5d99bf9c/-/blob/dist/swagger.json",
			"externalURLs": [
				{
					"url": "https://github.com/Sean-Bradley/Seans-TypeScript-NodeJS-CRUD-REST-API-Boilerplate/blob/128f25b7aecec4957f674a86ba32c6de5d99bf9c/dist/swagger.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: /cats/{id}: parameters: parse parameter \"id\": parameter MUST contain either a schema property, or a content property"
}