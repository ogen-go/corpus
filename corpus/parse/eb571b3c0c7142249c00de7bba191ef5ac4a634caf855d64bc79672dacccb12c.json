{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/plantbreeding/BrAPI"
		},
		"file": {
			"name": "ObservationUnitPosition.yaml",
			"size": 0,
			"path": "Specification/BrAPI-Phenotyping/ObservationUnits/Schemas/ObservationUnitPosition.yaml",
			"byteSize": 6124,
			"content": "info:\n  title: BrAPI\n  version: ''\nopenapi: 3.0.0\npaths: {}\ncomponents:\n  schemas:\n    ObservationUnitPosition:\n      description: |-\n        All positional and layout information related to this Observation Unit \n        \n        MIAPPE V1.1 (DM-73) Spatial distribution - Type and value of a spatial coordinate (georeference or relative) \n        or level of observation (plot 45, subblock 7, block 2) provided as a key-value pair of the form type:value. \n        Levels of observation must be consistent with those listed in the Study section.\n      type: object\n      properties:\n        observationLevel:\n          allOf:\n          - $ref: '#/components/schemas/ObservationUnitLevel'\n          - type: object\n            properties: {}\n            description: |-\n              The exact level and level code of an observation unit. \n              \n              For more information on Observation Levels, please review the \u003ca target=\"_blank\" href=\"https://wiki.brapi.org/index.php/Observation_Levels\"\u003eObservation Levels documentation\u003c/a\u003e. \n\n              MIAPPE V1.1 DM-71 Observation unit type \"Type of observation unit in textual form, usually one of the following: study, block, sub-block, plot, sub-plot, pot, plant. Use of other observation unit types is possible but not recommended. \n              The observation unit type can not be used to indicate sub-plant levels. However, observations can still be made on the sub-plant level, as long as the details are indicated in the associated observed variable (see observed variables). \n              Alternatively, it is possible to use samples for more detailed tracing of sub-plant units, attaching the observations to them instead.\" \n        observationLevelRelationships:\n          description: |-\n            Observation levels indicate the granularity level at which the measurements are taken. `levelName` \n            defines the level, `levelOrder` defines where that level exists in the hierarchy of levels. \n            `levelOrder`s lower numbers are at the top of the hierarchy (ie field \u003e 0) and higher numbers are \n            at the bottom of the hierarchy (ie plant \u003e 6). `levelCode` is an ID code for this level tag. Identify \n            this observation unit by each level of the hierarchy where it exists. \n\n            For more information on Observation Levels, please review the \u003ca target=\"_blank\" href=\"https://wiki.brapi.org/index.php/Observation_Levels\"\u003eObservation Levels documentation\u003c/a\u003e. \n\n            **Standard Level Names: study, field, entry, rep, block, sub-block, plot, sub-plot, plant, pot, sample** \n          type: array \n          items:\n            $ref: '#/components/schemas/ObservationUnitLevelRelationship' \n          example:\n            - levelName: field\n              levelOrder: 0\n              levelCode: Field_1\n            - levelName: block\n              levelOrder: 1\n              levelCode: Block_12\n            - levelName: plot\n              levelOrder: 2\n              levelCode: Plot_123\n        entryType:\n          description: The type of entry for this observation unit. ex. \"CHECK\", \"TEST\", \"FILLER\"\n          enum:\n          - CHECK\n          - TEST\n          - FILLER\n          type: string\n          example: TEST\n        positionCoordinateX:\n          description: The X position coordinate for an observation unit. Different systems may use different coordinate systems.\n          type: string\n          example: '74'\n        positionCoordinateXType:\n          description: |-\n            The type of positional coordinate used. Must be one of the following values \n            \n            LONGITUDE - ISO 6709 standard, WGS84 geodetic datum. See 'Location Coordinate Encoding' for details \n            \n            LATITUDE - ISO 6709 standard, WGS84 geodetic datum. See 'Location Coordinate Encoding' for details \n            \n            PLANTED_ROW - The physical planted row number \n            \n            PLANTED_INDIVIDUAL - The physical counted number, could be independant or within a planted row \n            \n            GRID_ROW - The row index number of a square grid overlay \n            \n            GRID_COL - The column index number of a square grid overlay \n            \n            MEASURED_ROW - The distance in meters from a defined 0-th row \n            \n            MEASURED_COL - The distance in meters from a defined 0-th column \n          enum:\n          - LONGITUDE\n          - LATITUDE\n          - PLANTED_ROW\n          - PLANTED_INDIVIDUAL\n          - GRID_ROW\n          - GRID_COL\n          - MEASURED_ROW\n          - MEASURED_COL\n          type: string\n          example: GRID_COL\n        positionCoordinateY:\n          description: The Y position coordinate for an observation unit. Different systems may use different coordinate systems.\n          type: string\n          example: '03'\n        positionCoordinateYType:\n          description: |-\n            The type of positional coordinate used. Must be one of the following values \n            \n            LONGITUDE - ISO 6709 standard, WGS84 geodetic datum. See 'Location Coordinate Encoding' for details \n            \n            LATITUDE - ISO 6709 standard, WGS84 geodetic datum. See 'Location Coordinate Encoding' for details \n            \n            PLANTED_ROW - The physical planted row number  \n            \n            PLANTED_INDIVIDUAL - The physical counted number, could be independant or within a planted row \n            \n            GRID_ROW - The row index number of a square grid overlay \n            \n            GRID_COL - The column index number of a square grid overlay \n            \n            MEASURED_ROW - The distance in meters from a defined 0-th row \n            \n            MEASURED_COL - The distance in meters from a defined 0-th column \n          enum:\n          - LONGITUDE\n          - LATITUDE\n          - PLANTED_ROW\n          - PLANTED_INDIVIDUAL\n          - GRID_ROW\n          - GRID_COL\n          - MEASURED_ROW\n          - MEASURED_COL\n          type: string\n          example: GRID_ROW\n        geoCoordinates:\n          $ref: '#/components/schemas/geoJSON'\n",
			"canonicalURL": "/github.com/plantbreeding/BrAPI@a45723dba8753a1c1177ec8f7759d57ebcf5f5b1/-/blob/Specification/BrAPI-Phenotyping/ObservationUnits/Schemas/ObservationUnitPosition.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/plantbreeding/BrAPI/blob/a45723dba8753a1c1177ec8f7759d57ebcf5f5b1/Specification/BrAPI-Phenotyping/ObservationUnits/Schemas/ObservationUnitPosition.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"ObservationUnitPosition\": parse schema: property \"geoCoordinates\": parse schema: resolve \"#/components/schemas/geoJSON\": find schema: resolve \"#/components/schemas/geoJSON\": can't find value for \"components/schemas/geoJSON\""
}