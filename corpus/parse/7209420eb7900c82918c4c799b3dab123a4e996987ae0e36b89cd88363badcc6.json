{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/oatovar/test-scheduling-api"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "SwaggerUI/api.yaml",
			"byteSize": 14962,
			"content": "openapi: 3.0.0\ninfo:\n  title: Environmental Test Scheduling API\n  description: API for the environmental test scheduling application.\n  contact:\n    email: you@your-company.com\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  version: 1.0.1\nservers:\n- url: https://api.testscheduler.com\n  description: API\ntags:\n- name: Admin Endpoints\n  description: API functionality restricted to Admins only.\n- name: Manager Endpoints\n  description: API functionality restricted to managers only.\n- name: Requestor Endpoints\n  description: API functionality available to everyone.\npaths:\n  /requests:\n    get:\n      tags:\n      - Requestor Endpoints\n      - Manager Endpoints\n      - Admin Endpoints\n      summary: Retrieves multiple work requests.\n      description: |\n        You can use this endpoint to filter down the work requests you would like to retrieve.\n      operationId: searchWorkRequests\n      parameters:\n      - name: requestor\n        in: query\n        description: Narrows down work requests using the name of the requestor. If\n          the requestor is not specified, the application will automatically load\n          in the first 10 work requests.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: chargecode\n        in: query\n        description: Narrows down work requests using the chargecode used.\n        required: false\n        style: form\n        explode: true\n        schema:\n          minimum: 0\n          type: integer\n          format: int32\n      - name: $limit\n        in: query\n        description: maximum number of records to return\n        required: false\n        style: form\n        explode: true\n        schema:\n          maximum: 50\n          minimum: 0\n          type: integer\n          format: int32\n      - name: tool\n        in: query\n        description: Narrows down work requests using the tool\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: status\n        in: query\n        description: Narrows down work requests using the status\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: testlocation\n        in: query\n        description: Narrows down work requests using the testlocation\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      - name: driver\n        in: query\n        description: Narrows down work requests using the driver\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Requests'\n        400:\n          description: bad input parameter\n    put:\n      tags:\n      - Admin Endpoints\n      - Manager Endpoints\n      summary: This endpoint is used to completely replace a work request.\n      description: Updates a work request within the system.\n      operationId: approveWorkRequest\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Requests'\n      responses:\n        200:\n          description: Item updated successfully.\n        404:\n          description: Invalid Work Request id.\n    post:\n      tags:\n      - Requestor Endpoints\n      summary: Adds a work request.\n      description: Adds a work request to the system.\n      operationId: addWorkRequest\n      requestBody:\n        $ref: '#/components/requestBodies/Requests'\n      responses:\n        201:\n          description: Work Request created.\n        500:\n          description: There was an error with the format of the request.\n    patch:\n      tags:\n      - Admin Endpoints\n      - Manager Endpoints\n      summary: This will update or add a field to a request.\n      description: Partially updates a work request within the system\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Requests'\n      responses:\n        201:\n          description: Request updated successfully\n        400:\n          description: The request was invalid. The response will contain a list of\n            errors.\n  /requests/{work_request_id}/:\n    delete:\n      tags:\n      - Requestor Endpoints\n      summary: This endpoint allows for the removal of work requests.\n      description: It's main functionality is for the removal of draft work requests.\n      operationId: removeWorkRequest\n      parameters:\n      - name: work_request_id\n        in: path\n        description: This is the work request id that will be deleted.\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n          example: 5c5b7bc5a11f9e34724530cb\n      responses:\n        200:\n          description: Work Request deleted.\n        404:\n          description: Invalid Work Request id.\n  /tasks:\n    get:\n      tags:\n      - Requestor Endpoints\n      summary: This api request allows for the retrieval of work request tasks.\n      description: It's main functioanlity is to retrieve the tasks associated with\n        work requests.\n      operationId: retrieveTasks\n      parameters:\n      - name: taskId\n        in: query\n        description: This is the task id that will be retrieved.\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          example: a1b2c9384\n      responses:\n        200:\n          description: Successfully found task request.\n        404:\n          description: Invalid Task Id.\n    put:\n      tags:\n      - Admin Endpoints\n      - Manager Endpoints\n      summary: This api call allows for the approval of work request tasks.\n      description: This api call requires the usage of the work request api to retrieve\n        the task ids.\n      operationId: approveTasks\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Tasks'\n      responses:\n        201:\n          description: Successfully update/approved task.\n        500:\n          description: Invalid data/format submitted.\n    post:\n      tags:\n      - Requestor Endpoints\n      summary: This api request allows for the creation of work request tasks.\n      description: Its main functionality is to create tasks that will be associate\n        with a work request.\n      operationId: createTasks\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Tasks'\n      responses:\n        201:\n          description: Successfully created task.\n        500:\n          description: Invalid data/format submitted.\n  /tasks/{task_id}/:\n    get:\n      tags:\n      - Requestor Endpoints\n      summary: This allows dropdown menu selection for groups\n      parameters:\n      - name: task_id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n          example: a1b2c9384\n      - name: _id\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          description: Group not found\n      responses:\n        200:\n          description: Success\n        404:\n          description: Error\n    post:\n      tags:\n      - Admin Endpoints\n      summary: This allows post for groups\n      parameters:\n      - name: task_id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n          example: a1b2c9384\n      - name: _id\n        in: query\n        required: true\n        style: form\n        explode: true\n        schema:\n          type: string\n          example: 5c80345221b11\n      responses:\n        200:\n          description: success\n        404:\n          description: Error\n    delete:\n      tags:\n      - Requestor Endpoints\n      summary: This api call allows for the deletion of work request tasks.\n      description: Its main purpose is the removal of draft tasks.\n      operationId: removeTasks\n      parameters:\n      - name: task_id\n        in: path\n        required: true\n        style: simple\n        explode: false\n        schema:\n          type: string\n          example: a1b2c9384\n      responses:\n        200:\n          description: Work Request deleted.\n        404:\n          description: Invalid Work Request id.\n  /tools:\n    get:\n      tags:\n      - Requestor Endpoints\n      summary: This allows dropdown menu selection for toolss\n      parameters:\n      - name: _id\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          example: 5c80345221b11\n      responses:\n        200:\n          description: Found tool\n        404:\n          description: Tool not found\n    post:\n      tags:\n      - Admin Endpoints\n      summary: This allows post for tools\n      parameters:\n      - name: _id\n        in: query\n        required: true\n        style: form\n        explode: true\n        schema:\n          type: string\n          example: 5c80345221b11\n      responses:\n        200:\n          description: success\n        404:\n          description: Error\n    delete:\n      tags:\n      - Admin Endpoints\n      summary: This allows delete for tools\n      parameters:\n      - name: _id\n        in: query\n        required: true\n        style: form\n        explode: true\n        schema:\n          type: string\n          example: 5c80345221b11\n      responses:\n        200:\n          description: success\n        404:\n          description: Error\n  /priority:\n    get:\n      tags:\n      - Requestor Endpoints\n      summary: This allows dropdown menu selection for priority\n      parameters:\n      - name: _id\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          example: 5c80345221b11\n      responses:\n        200:\n          description: Found priority\n        404:\n          description: Priority not found\n    post:\n      tags:\n      - Admin Endpoints\n      summary: This allows post for prioritys\n      parameters:\n      - name: _id\n        in: query\n        required: true\n        style: form\n        explode: true\n        schema:\n          type: string\n          example: 5c80345221b11\n      responses:\n        200:\n          description: success\n        404:\n          description: Error\n    delete:\n      tags:\n      - Admin Endpoints\n      summary: This allows delete for priorities\n      parameters:\n      - name: _id\n        in: query\n        required: true\n        style: form\n        explode: true\n        schema:\n          type: string\n          example: 5c80345221b11\n      responses:\n        200:\n          description: success\n        404:\n          description: Error\n  /pslcompanies:\n    get:\n      tags:\n      - Requestor Endpoints\n      summary: This allows dropdown menu selection for pslcompaniess\n      parameters:\n      - name: _id\n        in: query\n        required: false\n        style: form\n        explode: true\n        schema:\n          type: string\n          example: 5c80345221b11\n      responses:\n        200:\n          description: Found psl/company\n        404:\n          description: PSL/company not found\n    post:\n      tags:\n      - Admin Endpoints\n      summary: This allows post for psl/companies\n      parameters:\n      - name: _id\n        in: query\n        required: true\n        style: form\n        explode: true\n        schema:\n          type: string\n          example: 5c80345221b11\n      responses:\n        200:\n          description: success\n        404:\n          description: Error\n    delete:\n      tags:\n      - Admin Endpoints\n      summary: This allows delete for psl/companies\n      parameters:\n      - name: _id\n        in: query\n        required: true\n        style: form\n        explode: true\n        schema:\n          type: string\n          example: 5c80345221b11\n      responses:\n        200:\n          description: success\n        404:\n          description: Error\n  /search:\n    get:\n      tags:\n      - Admin Endpoints\n      - Manager Endpoints\n      - Requestor Endpoints\n      summary: This allows for the ability to search for various tasks and requests\n      parameters:\n      - name: search\n        in: query\n        required: true\n        style: form\n        explode: true\n        schema:\n          type: string\n          example: abc1234\n      responses:\n        200:\n          description: Will have a JSON response with the results that contained the\n            keyword\ncomponents:\n  schemas:\n    Requests:\n      required:\n      - chargecode\n      - description\n      - driver\n      - requestcomments\n      - requestor\n      - status\n      - tasks\n      - testlocation\n      - tool\n      type: object\n      properties:\n        requestor:\n          type: string\n        chargecode:\n          type: integer\n          format: i32\n        description:\n          type: string\n        tool:\n          type: string\n        tasks:\n          minItems: 1\n          type: array\n          items:\n            type: string\n        status:\n          type: string\n        testlocation:\n          type: string\n        driver:\n          type: string\n        requestcomments:\n          type: string\n    Tasks:\n      required:\n      - companyPSL\n      - duration\n      - enddate\n      - group\n      - links\n      - priority\n      - resource\n      - schedule\n      - startdate\n      - taskid\n      - testContact\n      - testdata\n      - testdescription\n      - testlog\n      - testresource\n      type: object\n      properties:\n        testdescription:\n          type: string\n        resource:\n          type: string\n        priority:\n          type: string\n        group:\n          type: string\n        testContact:\n          type: string\n        companyPSL:\n          type: string\n        duration:\n          type: string\n        tool:\n          type: string\n        taskid:\n          type: string\n        testresource:\n          type: string\n        startdate:\n          type: string\n          format: date\n        enddate:\n          type: string\n          format: date\n        schedule:\n          type: integer\n          example: 4\n        status:\n          type: string\n          description: 'Can be one of the following: pending, approved, denied, draft.'\n          enum:\n          - approved\n          - closed\n          - pending\n          - denied\n          - draft\n  requestBodies:\n    Requests:\n      description: A JSON object containing work request information.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Requests'\n      required: true\n",
			"canonicalURL": "/github.com/oatovar/test-scheduling-api@7a7a0e716fc22b75d5a63496c25a2afdf225301f/-/blob/SwaggerUI/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/oatovar/test-scheduling-api/blob/7a7a0e716fc22b75d5a63496c25a2afdf225301f/SwaggerUI/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/tasks/{task_id}/\": get: parameters: parse parameter \"_id\": at 1:10017: invalid schema:style:explode combination: (\"\":\"form\":true)"
}