{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Greenstand/treetracker-wallet-api"
		},
		"file": {
			"name": "treetracker-token-api-v1-10-3.yaml",
			"size": 0,
			"path": "docs/api/spec/treetracker-token-api-v1-10-3.yaml",
			"byteSize": 34012,
			"content": "openapi: 3.0.0\ninfo:\n  title: treetracker token api v1.10.3\n  contact: {}\n  version: '1.10.3'\npaths:\n  /auth:\n    post:\n      tags:\n        - Authentication\n      summary: Authenticate account\n      description: 'Authenticate the client using wallet name or id and password, and respond with a bearer token'\n      parameters:\n        - $ref: '#/components/parameters/treetrackerApiKeyParam'\n        - $ref: '#/components/parameters/contentTypeJsonHeader'\n      requestBody:\n        description: ''\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/authrequest'\n        required: true\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/bearerToken'\n      deprecated: false\n  /tokens:\n    get:\n      tags:\n        - Token details\n      summary: Get a list of tokens in the current wallet  or managed wallets\n      description: 'Get a list of for tokens in the current wallet or managed wallets, matching certain parameters'\n      parameters:\n        - $ref: '#/components/parameters/treetrackerApiKeyParam'\n        - $ref: '#/components/parameters/contentTypeJsonHeader'\n        - name: limit\n          in: query\n          description: Number of items to return\n          required: true\n          style: form\n          explode: true\n          schema:\n            type: integer\n            format: int32\n            example: 100\n        - name: start\n          in: query\n          description: 'Where does the list start, 1 means start from the beginning of the list'\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: integer\n            format: int32\n            example: 1\n        - name: wallet\n          description: Wallet id or name can be specified if the authenticated wallet manages other wallets.  The default is to return tokens matching the authenticated wallet\n          in: query\n          required: false\n          schema:\n            $ref: '#/components/schemas/walletNameOrId'\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/tokens'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n      deprecated: false\n  '/tokens/{token_uuid}':\n    get:\n      tags:\n        - Token details\n      summary: Get details for one token\n      description: 'Get details for one token in the current wallet or managed wallets, matching certain parameters'\n      parameters:\n        - $ref: '#/components/parameters/treetrackerApiKeyParam'\n        - $ref: '#/components/parameters/contentTypeJsonHeader'\n        - name: token_uuid\n          description: ''\n          in: path\n          required: true\n          schema:\n            type: string\n            example: 496ffa8e-2fa2-488c-98e1-acf9b57c230b\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/tokenItem'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n      deprecated: false\n  /wallets:\n    get:\n      tags:\n        - Managed wallets\n      summary: Get all wallets managed by the logged in account.  This endpoint is also used to get the total number of tokens in a given wallet.  Each wallet also returns all trust relationships for that wallet that have not been deleted\n      parameters:\n        - $ref: '#/components/parameters/treetrackerApiKeyParam'\n        - $ref: '#/components/parameters/contentTypeJsonHeader'\n        - name: limit\n          in: query\n          description: Number of items to return\n          required: true\n          style: form\n          explode: true\n          schema:\n            type: integer\n            format: int32\n            example: 100\n            default: 100\n        - name: start\n          in: query\n          description: 'Where does the list start, 1 means start from the beginning of the list'\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: integer\n            format: int32\n            example: 1\n            default: 1\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/walletsResponse'\n      deprecated: false\n    post:\n      tags:\n        - Managed wallets\n      summary: Create a new managed wallet\n      description: Create a new managed wallet.  Requires the manage_account role.\n      parameters:\n        - $ref: '#/components/parameters/treetrackerApiKeyParam'\n        - $ref: '#/components/parameters/contentTypeJsonHeader'\n      requestBody:\n        description: ''\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/accountrequest'\n            example:\n              wallet: sprinter_van_2004\n        required: true\n      responses:\n        '201':\n          description: A new wallet was created\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n      deprecated: false\n  /transfers:\n    post:\n      tags:\n        - Transfers\n      summary: 'Move, request, and send tokens between wallets'\n      description: 'Move, request, and send tokens between wallets (by name or id) as allowed by trust relationships.  Transfer can be created/requested either using an explicit list of token ids or by specifying a bundle of tokens using tags and a count of tokens to attempt to transfer.  The originator of the request (currently logged in wallet) is used by the server code to compute who the originating wallet is for this request, whether the request is a credit, debut, or managed transfer, and if appropriate trust relationships exist to automatically execute or if it must be stored as a request until approval'\n      parameters:\n        - $ref: '#/components/parameters/treetrackerApiKeyParam'\n        - $ref: '#/components/parameters/contentTypeJsonHeader'\n      requestBody:\n        description: ''\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/transferrequest'\n            examples:\n              ExplicitTokens:\n                value:\n                  tokens:\n                    - e1b278e8-f025-44b7-9dd8-36ffb2d58f7e\n                    - e533653e-2dbf-48cd-940a-a87e5a393158\n                  sender_wallet: zaven4\n                  receiver_wallet: dadiorchen\n              Bundle:\n                value:\n                  bundle:\n                    bundle_size: 100\n                    matching_all_tags:\n                      - pine\n                      - Tanzania\n        required: true\n      responses:\n        '201':\n          description: The transfer was completely processed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/sendRequestProcessedResponse'\n        '202':\n          description: 'The transfer could not be completely processed because a trust relationship does not exist allowing for automated processing.  If a the source wallet is controlled by the authenitcated user, a  transfer in the pending state has been created. If the source wallet is not controlled but the authenticated user, but the destination wallet is, then a transfer in the requested state has been created'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/sendRequestPendingResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n    get:\n      tags:\n        - Transfers\n      summary: 'Get requested, pending, completed, cancelled, and failed transfers'\n      description: 'Get requested, pending, completed, cancelled and failed transfers for wallets (by name or id). The authenticated wallet is either the source, destination, or originating wallet entity.'\n      parameters:\n        - $ref: '#/components/parameters/treetrackerApiKeyParam'\n        - $ref: '#/components/parameters/contentTypeJsonHeader'\n        - in: query\n          name: state\n          schema:\n            type: string\n            example: pending\n          required: false\n          description: 'requested, pending, completed, cancelled, failed'\n        - in: query\n          name: wallet\n          schema: \n            $ref: '#/components/schemas/walletNameOrId'\n          required: false\n          description: 'filter transfers matches the source, destination, or originating wallet (by name or id) of a transfer'\n        - name: limit\n          in: query\n          description: Number of items to return\n          required: true\n          style: form\n          explode: true\n          schema:\n            type: integer\n            format: int32\n            example: 100\n        - name: start\n          in: query\n          description: 'Where does the list start, 1 means start from the beginning of the list'\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: integer\n            format: int32\n            example: 1\n      responses:\n        '200':\n          description: Return array of matching transfers\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  '/tokens/{token_uuid}/transactions':\n    get:\n      tags:\n        - Token details\n      summary: Get transaction history for a particular token\n      parameters:\n        - $ref: '#/components/parameters/treetrackerApiKeyParam'\n        - $ref: '#/components/parameters/contentTypeJsonHeader'\n        - name: token_uuid\n          in: path\n          description: ''\n          required: true\n          explode: true\n          schema:\n            type: string\n            example: e3cd6587-ff01-419b-b2c9-44ceed4dc749\n        - name: limit\n          in: query\n          description: Number of items to return\n          required: true\n          style: form\n          explode: true\n          schema:\n            type: integer\n            format: int32\n            example: 100\n        - name: start\n          in: query\n          description: 'Where does the list start, 1 means start from the beginning of the list'\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: integer\n            format: int32\n            example: 1\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/historyResponse'\n      deprecated: false\n  '/transfers/{transfer_id}':\n    get:\n      tags:\n        - Transfers\n      summary: Get information of a single transfer\n      parameters:\n        - $ref: '#/components/parameters/treetrackerApiKeyParam'\n        - $ref: '#/components/parameters/contentTypeJsonHeader'\n        - name: transfer_id\n          in: path\n          description: ''\n          required: true\n          schema:\n            $ref: '#/components/schemas/uuid'\n      responses:\n        '200':\n          description: ''\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n    delete:\n      tags:\n        - Transfers\n      summary: Cancel a pending or requested transfer that has not closed\n      description: Cancel a pending (untrusted) or requested transfer.  The executor can delete the pending/requested transfer before it is executed.  Transfer is marked canceled by this command.\n      parameters:\n        - $ref: '#/components/parameters/treetrackerApiKeyParam'\n        - $ref: '#/components/parameters/contentTypeJsonHeader'\n        - name: transfer_id\n          in: path\n          description: ''\n          required: true\n          schema:\n            $ref: '#/components/schemas/uuid'\n      responses:\n        '200':\n          description: Transfer was marked canceled\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          description: Authenticated wallet does not have access to this transfer\n        '404':\n          description: No transfer record with that id\n        '406':\n          description: Transfer with this id is not in requested or pending state\n  '/transfers/{transfer_id}/accept':\n    post:\n      tags:\n        - Transfers\n      summary: Accept a pending (untrusted) transfer\n      parameters:\n        - $ref: '#/components/parameters/treetrackerApiKeyParam'\n        - $ref: '#/components/parameters/contentTypeJsonHeader'\n        - name: transfer_id\n          in: path\n          description: ''\n          required: true\n          schema:\n            $ref: '#/components/schemas/uuid'\n      responses:\n        '200':\n          description: ''\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  '/transfers/{transfer_id}/decline':\n    post:\n      tags:\n        - Transfers\n      summary: Decline a pending (untrusted) transfer\n      parameters:\n        - $ref: '#/components/parameters/treetrackerApiKeyParam'\n        - $ref: '#/components/parameters/contentTypeJsonHeader'\n        - name: transfer_id\n          in: path\n          description: ''\n          required: true\n          schema:\n            $ref: '#/components/schemas/uuid'\n      responses:\n        '200':\n          description: ''\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  '/transfers/{transfer_id}/fulfill':\n    parameters:\n      - $ref: '#/components/parameters/treetrackerApiKeyParam'\n      - $ref: '#/components/parameters/contentTypeJsonHeader'\n    post:\n      tags:\n        - Transfers\n      summary: Fullfill a requested transfer\n      description: Post a list of tokens to fulfill the parameters of a transfer request that specifies tokens using a bundle.  This allows the debited wallet to decide which tokens matching the bundle parameters to attach to the transfer.  Application logic must check that each token matches the parameters of the request.\n      parameters:\n        - name: transfer_id\n          in: path\n          description: the id of the transfer record on the server\n          required: true\n          style: simple\n          schema:\n            $ref: '#/components/schemas/uuid'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/requestBundleFulfillBody'\n      responses:\n        '200':\n          description: ''\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  '/transfers/{transfer_id}/tokens':\n    get:\n      tags:\n        - Transfers\n      summary: Get all tokens linked to a single transfer\n      parameters:\n        - $ref: '#/components/parameters/treetrackerApiKeyParam'\n        - $ref: '#/components/parameters/contentTypeJsonHeader'\n        - name: transfer_id\n          in: path\n          description: ''\n          required: true\n          schema:\n            $ref: '#/components/schemas/uuid'\n        - name: limit\n          in: query\n          description: Number of items to return\n          required: true\n          style: form\n          explode: true\n          schema:\n            type: integer\n            format: int32\n            example: 100\n        - name: start\n          in: query\n          description: 'Where does the list start, 1 means start from the beginning of the list'\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: integer\n            format: int32\n            example: 1\n      responses:\n        '200':\n          description: ''\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  /trust_relationships:\n    get:\n      tags:\n        - Trust relationships\n      summary: 'Get a list of existing, requested, and pending trust relationships'\n      parameters:\n        - $ref: '#/components/parameters/treetrackerApiKeyParam'\n        - $ref: '#/components/parameters/contentTypeJsonHeader'\n        - name: limit\n          in: query\n          description: Number of items to return\n          required: true\n          style: form\n          explode: true\n          schema:\n            type: integer\n            format: int32\n            example: 100\n        - name: start\n          in: query\n          description: 'Where does the list start, 1 means start from the beginning of the list'\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: integer\n            format: int32\n            example: 1\n        - name: state\n          in: query\n          description: Filter by state of the trust relationship\n          required: false\n          style: form\n          schema:\n            type: string\n          examples:\n            Trusted:\n              value: trusted\n              description: Active trust relationship\n            Requested:\n              value: requested\n              description: Trust relationship pending approval\n            CancelledByOriginator:\n              value: cancelled_by_originator\n              description: Trust relationship was cancelled by the originator\n            CancelledByActor:\n              value: cancelled_by_actor\n              description: Trust relationship was cancelled by the actor\n            CancelledByTarget:\n              value: cancelled_by_target\n              description: Trust relationship was cancelled by the target\n        - name: type\n          in: query\n          description: Type of trust relationship\n          required: false\n          style: form\n          schema:\n            type: string\n          examples:\n            Send:\n              value: send\n              description: Allow actor to send to target\n            Deduct:\n              value: deduct\n              description: Allow actor to deduct from wallet\n            Manage:\n              value: manage\n              description: Allow actor to move funds from target wallet to any other wallet they control\n        - name: request_type\n          in: query\n          description: Type of trust relationship\n          required: false\n          style: form\n          schema:\n            type: string\n          examples:\n            Send:\n              value: send\n              description: Request to allow actor to send to target\n            Receive:\n              value: receive\n              description: Request a send priviledge to a wallet controlled by the originator on behalf of another sending wallet (opposite direction of send trust request)\n            Deduct:\n              value: deduct\n              description: Request to allow actor to deduct from wallet\n            Release:\n              value: release\n              description: Request a deduct priviledge from a wallet controlled by the originator on behalf of another deducting wallet  (opposite direction of deduct trust request)\n            Manage:\n              value: manage\n              description: Request to allow actor to move funds from target wallet to any other wallet they control\n            Yield:\n              value: manage\n              description: Request to give manage privilege on a wallet controlled by the originator to another wallet (opposite direction of manage trust request)\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/trustRelationshipsResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n    post:\n      tags:\n        - Trust relationships\n      summary: Request a new trust relationship from another wallet\n      parameters:\n        - $ref: '#/components/parameters/treetrackerApiKeyParam'\n        - $ref: '#/components/parameters/contentTypeJsonHeader'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/trustRequest'\n      responses:\n        '202':\n          description: Accepted but waiting for approval\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/ForbiddenError'\n  '/trust_relationships/{trust_relationship_id}':\n    delete:\n      tags:\n        - Trust relationships\n      summary: Remove a trust relationship linked to the autheticated wallet\n      description: Remove a trust relationship linked to the autheticated wallet.  This could be either the actor wallet or the target wallet\n      parameters:\n        - $ref: '#/components/parameters/treetrackerApiKeyParam'\n        - $ref: '#/components/parameters/contentTypeJsonHeader'\n        - name: trust_relationship_id\n          in: path\n          description: the id of the entity trust record on the server\n          required: true\n          style: simple\n          schema:\n            $ref: '#/components/schemas/uuid'\n      responses:\n        '200':\n          description: ''\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  '/trust_relationships/{trust_relationship_id}/accept':\n    post:\n      tags:\n        - Trust relationships\n      summary: Accept a trust relationship\n      parameters:\n        - $ref: '#/components/parameters/treetrackerApiKeyParam'\n        - $ref: '#/components/parameters/contentTypeJsonHeader'\n        - name: trust_relationship_id\n          in: path\n          description: the id of the entity trust record on the server\n          required: true\n          style: simple\n          schema:\n            $ref: '#/components/schemas/uuid'\n      responses:\n        '200':\n          description: ''\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/ForbiddenError'\n  '/trust_relationships/{trust_relationship_id}/decline':\n    post:\n      tags:\n        - Trust relationships\n      summary: Decline a trust relationship\n      parameters:\n        - $ref: '#/components/parameters/treetrackerApiKeyParam'\n        - $ref: '#/components/parameters/contentTypeJsonHeader'\n        - name: trust_relationship_id\n          in: path\n          description: the id of the entity trust record on the server\n          required: true\n          style: simple\n          schema:\n            $ref: '#/components/schemas/uuid'\n      responses:\n        '200':\n          description: ''\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '403':\n          $ref: '#/components/responses/ForbiddenError'\ncomponents:\n  parameters:\n    treetrackerApiKeyParam:\n      name: TREETRACKER-API-KEY\n      in: header\n      description: ''\n      required: true\n      style: simple\n      schema:\n        type: string\n        example: '{{apiKey}}'\n    contentTypeJsonHeader:\n      name: Content-Type\n      in: header\n      description: ''\n      required: true\n      style: simple\n      schema:\n        type: string\n        example: application/json\n  schemas:\n    authrequest:\n      title: Authentication Request\n      required:\n        - wallet\n        - password\n      type: object\n      properties:\n        wallet:\n          oneOf:\n            - type: string\n              format: string\n              example: zaven\n            - type: string\n              format: uuid\n              example: 21af8154-b7f1-48d3-8520-2e376efae45e\n        password:\n          type: string\n          example: walnut\n    bearerToken:\n      title: Successful Authentication Response\n      type: object\n      properties:\n        bearer:\n          type: string\n    tokens:\n      title: Token query response\n      type: object\n      properties:\n        tokens:\n          type: array\n          items:\n            $ref: '#/components/schemas/tokenItem'\n    tokenItems:\n      title: Token Item\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        capture_id:\n          type: string\n          format: uuid\n        wallet_id:\n          type: string\n          format: uuid\n        transfer_pending:\n          type: boolean\n        transfer_pending_id:\n          type: string\n          format: uuid\n        created_at:\n          type: string\n          format: date\n        updated_at:\n          type: string\n          format: date\n        links:\n          type: object\n          properties:\n            capture:\n              type: string\n      example:\n        id: \"ca1a99c3-9797-465d-8ee3-8dbd26a08faa\"\n        capture_id: \"8df635f6-2df8-496f-93da-3060fc1e3180\"\n        wallet_id: \"c63da6b3-d7a3-444a-9ff0-10644036eccd\"\n        transfer_pending: false\n        transfer_pending_id: null\n        created_at: \"2021-07-02T18:31:07.208Z\"\n        updated_at: \"2021-07-02T18:31:07.208Z\"\n        links:\n          type: object\n          properties:\n            capture: \"/webmap/tree?uuid=8df635f6-2df8-496f-93da-3060fc1e3180\"\n    accountrequest:\n      title: accountrequest\n      required:\n        - wallet\n      type: object\n      properties:\n        wallet:\n          type: string\n      example:\n        wallet: sprinter_van_2004\n    walletsResponse:\n      title: Wallets Response\n      properties:\n        wallets:\n          type: array\n          items:\n            $ref: '#/components/schemas/walletItem'\n    walletItem:\n      title: Wallet Details\n      properties:\n        wallet:\n          type: string\n        email:\n          type: string\n        phone:\n          type: string\n        tokens_in_wallet:\n          type: integer\n    transferrequest:\n      title: transferrequest\n      oneOf:\n        - properties:\n            tokens:\n              type: array\n              items:\n                type: string\n              description: 'Explicitly transfer tokens'\n            sender_wallet:\n              oneOf:\n              - type: string\n              - type: number\n            receiver_wallet:\n              oneOf:\n              - type: string\n              - type: number\n          required:\n            - tokens\n            - sender_wallet\n            - receiver_wallet\n        - properties:\n            bundle:\n              type: object\n              description: 'Transfer some amount of token'\n              properties:\n                bundle_size:\n                  type: integer\n                  description: required number of trees to transfer\n            sender_wallet:\n              oneOf:\n              - type: string\n              - type: number\n            receiver_wallet:\n              oneOf:\n              - type: string\n              - type: number\n          required:\n            - bundle\n            - sender_wallet\n            - receiver_wallet\n    transferbundlerequest:\n      title: transferbundlerequest\n      required:\n        - parameters\n        - sender_wallet\n        - receiver_wallet\n      type: object\n      properties:\n        parameters:\n          $ref: '#/components/schemas/requestBundleRequestParameters'\n        sender_wallet:\n          oneOf:\n            - type: string\n            - type: number\n        receiver_wallet:\n          oneOf:\n            - type: string\n            - type: number\n      example:\n        bundle_size: 500\n        sender_wallet: zaven\n        receiver_wallet: GreenEarthAppeal\n    sendrequest:\n      title: sendrequest\n      required:\n        - tokens\n        - receiver_wallet\n      type: object\n      properties:\n        tokens:\n          type: array\n          items:\n            type: string\n          description: ''\n        receiver_wallet:\n          oneOf:\n            - type: string\n            - type: number\n      example:\n        tokens:\n          - e1b278e8-f025-44b7-9dd8-36ffb2d58f7e\n          - e533653e-2dbf-48cd-940a-a87e5a393158\n        receiver_wallet: zaven\n    sendRequestProcessedResponse:\n      title: sendRequestProcessedResponse\n      type: object\n      properties:\n        id:\n          type: string\n          description: The unique ID for this transfer\n        originating_wallet:\n          type: string\n        source_wallet:\n          type: string\n        destination_wallet:\n          type: string\n        type:\n          type: string\n          description: 'the type of transfer.  send, deduct, or managed. the value is computed by the server based on the submitted request'\n        parameters:\n          $ref: '#/components/schemas/requestBundleRequestParameters'\n        state:\n          type: string\n          description: 'the state of the transfer.  requested, pending, completed, cancelled, or failed'\n        created_at:\n          type: string\n        closed_at:\n          type: string\n      example:\n        originating_wallet: johnwallet1\n        source_wallet: planeter\n        destination_wallet: just.a.guy\n        type: send\n        parameters:\n          $ref: '#/components/schemas/requestBundleRequestParameters'\n        state: completed\n        created_at: '2020-07-09T00:41:49+00:00'\n        closed_at: '2020-07-09T00:41:49+00:00'\n    sendRequestPendingResponse:\n      title: sendRequestPendingResponse\n    sendBundleRequest:\n      title: sendBundleRequest\n      type: object\n      properties:\n        parameters:\n          $ref: '#/components/schemas/requestBundleRequestParameters'\n        receiver_wallet:\n          type: string\n      required:\n        - bundle_size\n        - receiver_wallet\n    pendingTransfersResponse:\n      title: List of Pending Transfers\n      type: object\n      properties:\n        pending:\n          type: array\n          items:\n            $ref: '#/components/schemas/pendingTransferItem'\n    pendingTransferItem:\n      title: Pending Transfer Item\n      type: object\n      properties:\n        id:\n          type: integer\n        sender_wallet:\n          type: string\n        receiver_wallet:\n          type: string\n        created_at:\n          type: string\n    requestBundleRequest:\n      title: requestBundleRequest\n      type: object\n      properties:\n        parameters:\n          $ref: '#/components/schemas/requestBundleRequestParameters'\n        sender_wallet:\n          type: string\n          description: Senders other than the wallet requesting the transfer are not allowed at this time\n        receiver_wallet:\n          type: string\n      required:\n        - params\n        - receiver_wallet\n    requestBundleRequestParameters:\n      title: Parameters for Transfer Request\n      type: object\n      properties:\n        tokens:\n          type: array\n          items:\n            type: string\n          description: optional array of explicit tokens\n        bundle_size:\n          type: integer\n          description: required number of trees to transfer\n        matching_all_tags:\n          type: array\n          items:\n            type: string\n          description: optional list of tags that trees must match ALL of\n      required:\n        - bundle_size\n    requestBundleFulfillBody:\n      title: Transfer Request Fulfillment\n      type: object\n      properties:\n        tokens:\n          type: array\n          items:\n            type: string\n          description: optional array of explicit tokens\n          example: ['ed155d71-67f0-4d21-a73d-f5445b8c43c8']\n        implicit:\n          type: boolean\n          description: automatically fill the request with tokens matching the specified parameters if set\n          example: false\n    trustRequest:\n      title: Trust Request\n      type: object\n      properties:\n        trust_request_type:\n          type: string\n          example: send\n        requestee_wallet:\n          type: string\n          description: The wallet to who this request are targetting\n          example: dadiorchen\n    historyResponse:\n      title: History Response\n      type: object\n      properties:\n        history:\n          type: array\n          items:\n            $ref: '#/components/schemas/historyItem'\n    historyItem:\n      title: History Item\n      type: object\n      properties:\n        token:\n          type: string\n        sender_wallet:\n          type: string\n        receiver_wallet:\n          type: string\n        processed_at:\n          type: string\n      example:\n        token: e3cd6587-ff01-419b-b2c9-44ceed4dc749\n        sender_wallet: zaven\n        receiver_wallet: zaven2\n        processed_at: '2020-01-17T22:32:43.008Z'\n    eventStream:\n      title: Event Stream\n      type: object\n      properties:\n        events:\n          type: array\n          items:\n            $ref: '#/components/schemas/eventItem'\n    eventItem:\n      title: Event Item\n      type: object\n      properties:\n        type:\n          type: string\n        wallet:\n          type: string\n        transfer_id:\n          type: integer\n        trust_relationship_id:\n          type: integer\n        created_at:\n          type: string\n    trustRelationshipsResponse:\n      title: Trust Relationship Responses\n      type: object\n      properties:\n        trust_relationships:\n          type: array\n          items:\n            $ref: '#/components/schemas/trustRelationshipItem'\n    trustRelationshipItem:\n      title: Trust Relationship Item\n      type: object\n      properties:\n        id:\n          type: integer\n        actor_wallet:\n          type: string\n        target_wallet:\n          type: string\n        trust_type:\n          type: string\n        state:\n          type: string\n        trust_request_type:\n          type: string\n        orginating_wallet:\n          type: string\n        created_at:\n          type: string\n    walletNameOrId:\n      oneOf:\n        - type: string\n          format: string\n          example: zaven\n        - type: string\n          format: uuid\n          example: bc7d4c0d-1ea5-4ead-9fef-b726a34c2d74\n    uuid:\n      type: string\n      format: uuid\n      example: bc7d4c0d-1ea5-4ead-9fef-b726a34c2d74\n  responses:\n    UnauthorizedError:\n      description: Access bearer token is missing or invalid\n    ForbiddenError:\n      description: Access denied for that resource\n  securitySchemes:\n    httpBearer:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\nsecurity:\n  - httpBearer: []\n",
			"canonicalURL": "/github.com/Greenstand/treetracker-wallet-api@4f1e09549a32a62fdfc020392031a8fbfaa0d83e/-/blob/docs/api/spec/treetracker-token-api-v1-10-3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Greenstand/treetracker-wallet-api/blob/4f1e09549a32a62fdfc020392031a8fbfaa0d83e/docs/api/spec/treetracker-token-api-v1-10-3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"tokens\": parse schema: property \"tokens\": parse schema: parse schema: at 1:6224: find schema: resolve: can't find value for \"components/schemas/tokenItem\""
}