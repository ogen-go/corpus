{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hasura/graphql-engine"
		},
		"file": {
			"name": "openapi_get_endpoint_test_complex_arg.yaml",
			"path": "server/tests-py/queries/openapi/openapi_get_endpoint_test_complex_arg.yaml",
			"content": "- description: Try to add a GET rest endpoint with no argument\n  url: /v1/query\n  status: 200\n  response:\n    message: success\n  query:\n    type: create_rest_endpoint\n    args:\n      url: complex_arg\n      name: complex_arg\n      methods:\n      - POST\n      definition:\n        query:\n          collection_name: test_collection\n          query_name: mutation_complex_arg\n\n\n- description: Call openapi json endpoint\n  url: /api/swagger/json\n  method: GET\n  status: 200\n  query:\n  response:\n    openapi: 3.0.0\n    info:\n      version: ''\n      title: Rest Endpoints\n      description: This OpenAPI specification is automatically generated by Hasura.\n    paths:\n      /api/rest/complex_arg:\n        post:\n          summary: complex_arg\n          description: \"***\\nThe GraphQl query for this endpoint is:\\n``` graphql\\n\\\n            mutation ($objects: [test_table_insert_input!]!) { insert_test_table( objects:\\\n            \\ $objects) { returning { id } } }\\n```\"\n          parameters:\n          - schema:\n              type: string\n            in: header\n            name: x-hasura-admin-secret\n            description: Your x-hasura-admin-secret will be used for authentication of\n              the API request.\n          requestBody:\n            required: true\n            content:\n              application/json:\n                schema:\n                  type: object\n                  properties:\n                    objects:\n                      items:\n                        $ref: \"#/components/schemas/test_table_insert_input\"\n                      type: array\n                      nullable: false\n            description: Query parameters can also be provided in the request body as\n              a JSON object\n          responses:\n            '200':\n              content:\n                application/json:\n                  schema:\n                    properties:\n                      insert_test_table:\n                        type: object\n                        properties:\n                          returning:\n                            items:\n                              type: object\n                              properties:\n                                id:\n                                  pattern: '[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}'\n                                  title: uuid\n                                  type: string\n                            type: array\n                            nullable: false\n              description: Responses for POST /api/rest/complex_arg\n    components:\n      schemas:\n        String:\n          type: string\n          nullable: true\n        uuid:\n          pattern: '[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}'\n          type: string\n          nullable: true\n        test_table_insert_input:\n          type: object\n          description: input type for inserting data into table \"test_table\"\n          nullable: false\n          properties:\n            first_name:\n              \"$ref\": \"#/components/schemas/String\"\n            last_name:\n              \"$ref\": \"#/components/schemas/String\"\n            id:\n              \"$ref\": \"#/components/schemas/uuid\"\n- description: Try to remove the endpoint\n  url: /v1/query\n  status: 200\n  response:\n    message: success\n  query:\n    type: drop_rest_endpoint\n    args:\n      name: complex_arg\n"
		}
	},
	"Error": "json: cannot unmarshal array into Go value of type ogen.Spec"
}