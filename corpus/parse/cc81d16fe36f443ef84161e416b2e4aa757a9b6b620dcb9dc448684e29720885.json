{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dojot/dojot"
		},
		"file": {
			"name": "v1.yml",
			"size": 0,
			"path": "storage/file/minio/file-mgmt/docs/v1.yml",
			"byteSize": 11167,
			"content": "---\nopenapi: 3.0.0\ninfo:\n  description: \"Dojot service for file management.\"\n  version: 1.0.0 #Version from package.json\n  title: \"File-Mgmt\"\ntags:\n  - name: files\n    description: File manager\npaths:\n  \"/api/v1/files/upload\":\n    put:\n      tags:\n        - files\n      security:\n        - bearerAuth: []\n      summary: \"Upload a file to the Dojot\"\n      description: \"Upload a file to the Dojot\"\n      operationId: \"uploadFile\"\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: \"#/components/schemas/uploadRequest\"\n      responses:\n        \"201\":\n          description: \"Uploaded File\"\n          content:\n            application/json:\n              schema:\n               $ref: \"#/components/schemas/uploadedFile\"\n        \"400\":\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/apiError\"\n        \"401\":\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/apiError\"\n        \"413\":\n          description: \"The file is too large\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/apiError\"\n        \"500\":\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/apiErrorUnknown\"\n\n  \"/api/v1/files/remove\":\n    delete:\n      tags:\n        - files\n      security:\n        - bearerAuth: []\n      summary: \"Removes a file from Dojot\"\n      description: \"Removes a file from Dojot\"\n      operationId: \"removeFile\"\n      parameters:\n        - $ref: \"#/components/parameters/pathDelete\"\n      responses:\n        \"200\":\n          description: \"Removed File\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/removedFile\"\n        \"400\":\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/apiError\"\n        \"401\":\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/apiError\"\n        \"500\":\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/apiErrorUnknown\"\n\n  \"/api/v1/files/download?alt=media\":\n    get:\n      tags:\n        - files\n      security:\n        - bearerAuth: []\n      summary: \"Retrieves a file from Dojot.\"\n      description: \"Retrieves a file from Dojot.\"\n      operationId: \"retrieveFile\"\n      parameters:\n        - $ref: \"#/components/parameters/pathRetriever\"\n      responses:\n        \"200\":\n          description: \"Retrieved file\"\n          content:\n            Any:\n              schema:\n               type: string\n               format: binary\n        \"400\":\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/apiError\"\n        \"401\":\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/apiError\"\n        \"500\":\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/apiErrorUnknown\"\n\n  \"/api/v1/files/download?alt=url\":\n    get:\n      tags:\n        - files\n      security:\n        - bearerAuth: []\n      summary: \"Retrieves a URL to extern download\"\n      description: \"Retrieves a MinIo URL to extern download and file metadata.\"\n      operationId: \"retrieveFile\"\n      parameters:\n        - $ref: \"#/components/parameters/pathRetriever\"\n      responses:\n        \"200\":\n          description: \"MinIo URL and file metadata\"\n          content:\n            application/json:\n              schema:\n               $ref: \"#/components/schemas/retrieveUrlFile\"\n        \"400\":\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/apiError\"\n        \"401\":\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/apiError\"\n        \"500\":\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/apiErrorUnknown\"\n\n  \"/api/v1/files/list\":\n    get:\n      tags:\n        - files\n      security:\n        - bearerAuth: []\n      summary: \"Retrieve a list of stored files.\"\n      description: \"Retrieve a list of stored files.\"\n      operationId: \"listFiles\"\n      parameters:\n        - $ref: \"#/components/parameters/limit\"\n        - $ref: \"#/components/parameters/pathPrefix\"\n        - $ref: \"#/components/parameters/startAfter\"\n\n      responses:\n        \"200\":\n          description: \"List of files\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/listFiles\"\n        \"400\":\n          description: \"Bad Request\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/apiError\"\n        \"401\":\n          description: \"Unauthorized\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/apiError\"\n        \"500\":\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/apiErrorUnknown\"\n\n\nexternalDocs:\n  description: Find out more about Dojot\n  url: https://dojotdocs.readthedocs.io/\nservers:\n  - url: \"{url}\"\n    description: URL for File-mgmt Service\n    variables:\n      url:\n        default: \"http://localhost:8000/file-mgmt/\"\ncomponents:\n  securitySchemes:\n    authorization:\n      description: Bearer JWT\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  parameters:\n    pathRetriever:\n      name: path\n      in: query\n      required: true\n      description: |\n        Requested file path.\n\n        Minimum length: 3\n\n        Maximum length: 100\n      allowReserved: true\n      schema:\n        $ref: \"#/components/schemas/pathParamenter\"\n    pathUpload:\n      name: path\n      in: query\n      required: true\n      description: |\n        Path where the file will be persisted.\n\n        Minimum length: 3\n\n        Maximum length: 100\n      allowReserved: true\n      schema:\n        $ref: \"#/components/schemas/pathParamenter\"\n    alt:\n      name: alt\n      in: query\n      required: true\n      description: |\n        Sets how the files will be downloaded.\n\n      allowReserved: true\n      schema:\n        type: string\n        enum: [media, url]\n    pathDelete:\n      name: path\n      in: query\n      required: true\n      description: |\n        Path of the file will be removed.\n\n        Minimum length: 3\n\n        Maximum length: 100\n      allowReserved: true\n      schema:\n        $ref: \"#/components/schemas/pathParamenter\"\n    limit:\n      name: limit\n      in: query\n      required: true\n      description: |\n        The limit of items to be returned.\n      allowReserved: true\n      schema:\n        type: integer\n    pathPrefix:\n      name: pathPrefix\n      in: query\n      description: |\n        Path prefix where the files will be fetched.\n      allowReserved: true\n      schema:\n        type: string\n        format: path\n    startAfter:\n      name: startAfter\n      in: query\n      description: |\n        Sets which file the list should start from.\n      allowReserved: true\n      schema:\n        type: string\n        format: path\n  schemas:\n    uploadRequest:\n      type: object\n      required: [file, path]\n      properties:\n        file:\n          type: string\n          format: binary\n        path:\n          $ref: \"#/components/schemas/pathParamenter\"\n        md5:\n          required:\n            - \"\"\n          type: string\n          format: md5\n    pathParamenter:\n      type: string\n      minLength: 3\n      maxLength: 100\n    uploadedFile:\n      type: object\n      properties:\n        message:\n          anyOf:\n            - type: string\n        details:\n          $ref: \"#/components/schemas/fileDetails\"\n    retrieveUrlFile:\n      type: object\n      properties:\n        url:\n          anyOf:\n            - type: string\n            - format: URL\n        info:\n          $ref: \"#/components/schemas/retrieveUrlFileMetadata\"\n    retrieveUrlFileMetadata:\n      type: object\n      properties:\n        contentType:\n          anyOf:\n            - type: string\n            - format: mimetype\n        etag:\n          anyOf:\n            - type: string\n            - format: MD5\n        size:\n          anyOf:\n            - type: integer\n    removedFile:\n      type: object\n      properties:\n        message:\n          anyOf:\n            - type: string\n        details:\n          $ref: \"#/components/schemas/fileDetails2\"\n    listFiles:\n      type: object\n      properties:\n        files:\n          anyOf:\n            - type: array\n              items:\n                $ref: \"#/components/schemas/fileSummary\"\n        length:\n          anyOf:\n            - type: integer\n        nextPageStartsAfter:\n          anyOf:\n            - type: string\n    fileDetails:\n      type: object\n      properties:\n        transactionCode:\n          anyOf:\n            - type: string\n        filename:\n         anyOf:\n            - type: string\n        info:\n          $ref: \"#/components/schemas/minioFileInfo\"\n        encoding:\n          anyOf:\n            - type: string\n        mimetype:\n          anyOf:\n            - type: string\n    fileDetails2:\n      type: object\n      properties:\n        size:\n          anyOf:\n            - type: \"integer\"\n        metadata:\n          anyOf:\n            - type: object\n              properties:\n                content-type:\n                  anyOf:\n                    - type: string\n        lastModified:\n          anyOf:\n            - type: string\n        versionId:\n          anyOf:\n            - type: string\n        etag:\n         anyOf:\n            - type: string\n    fileSummary:\n      properties:\n        name:\n         anyOf:\n            - type: string\n        lastModified:\n         anyOf:\n            - type: string\n        etag:\n         anyOf:\n            - type: string\n        size:\n         anyOf:\n            - type: integer\n    minioFileInfo:\n      type: object\n      properties:\n        etag:\n          anyOf:\n            - type: string\n        versionId:\n          anyOf:\n            - type: string\n    apiError:\n      type: object\n      properties:\n        error:\n          anyOf:\n            - type: string\n        detail:\n          anyOf:\n            - type: string\n    apiErrorUnknown:\n      type: object\n      properties:\n        error:\n          anyOf:\n            - type: string\n",
			"canonicalURL": "/github.com/dojot/dojot@8a6538153baa395ca36a487d7f4ae554ea7b06d4/-/blob/storage/file/minio/file-mgmt/docs/v1.yml",
			"externalURLs": [
				{
					"url": "https://github.com/dojot/dojot/blob/8a6538153baa395ca36a487d7f4ae554ea7b06d4/storage/file/minio/file-mgmt/docs/v1.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/api/v1/files/download?alt=media\": get: operation \"retrieveFile\": at storage/file/minio/file-mgmt/docs/v1.yml:96:7: parse path \"/api/v1/files/download?alt=media\": path MUST NOT contain a query string"
}