{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/team-monite/api-style-guide"
		},
		"file": {
			"name": "test-openapi.yaml",
			"size": 0,
			"path": "spectral/test-openapi.yaml",
			"byteSize": 562589,
			"content": "openapi: 3.0.2\ninfo:\n  title: Monite internal Partner API soem tyypo\n  version: '2022-07-27'\n  description: The Monite Internal REST API, for Monite partners to integrate with our solution tyypoo.\n  termsOfService: https://monite.com/terms/\n  contact:\n    name: Monite team\n    url: https://monite.com/about/\n    email: hello@monite.com\nservers:\n  - url: http://api.sandbox.monite.com/v1\n    description: Sandbox environment\n  - url: https://api.monite.com/v1\n    description: Production environment\ntags:\n  - name: Authentication\n  - name: Entities and users\n  - name: Payables\n  - name: Receivables\n  - name: Payments\n  - name: Mail\n  - name: Events\npaths:\n  /internal_accounts:\n    post:\n      tags:\n        - Payments\n      summary: Create Onboarding Account tyypor\n      operationId: create_onboarding_account_v1_accounts_post\n      parameters:\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OnboardingPayload'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountLinkResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n  /accountss\\{account_id}:\n    get:\n      tags:\n        - Payments\n      summary: Get Account By Id\n      operationId: get_account_by_id_v1_accounts__account_id__get\n      parameters:\n        - required: true\n          schema:\n            title: Account Id\n            type: string\n          name: account_id\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n    delete:\n      tags:\n        - Payments\n      summary: Delete Account\n      operationId: delete_account_v1_accounts__account_id__delete\n      parameters:\n        - required: true\n          schema:\n            title: Account Id\n            type: string\n          name: account_id\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n    patch:\n      tags:\n        - Payments\n      summary: Update Account\n      operationId: update_account_v1_accounts__account_id__patch\n      parameters:\n        - required: true\n          schema:\n            title: Account Id\n            type: string\n          name: account_id\n          in: path\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateAccount'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n  /APPROVAls:\n    get:\n      tags:\n        - Payables\n      summary: Get All Pending Approvals\n      description: Get all pending approvals\n      operationId: get_all_pending_approvals_approvals_get\n      parameters:\n        - description: 'Sort order: `asc` (ascending) or `desc` (descending).'\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/OrderEnum'\n            description: 'Sort order: `asc` (ascending) or `desc` (descending).'\n            default: asc\n          name: order\n          in: query\n        - description: The maximum number of results to return per page.\n          required: false\n          schema:\n            title: Limit\n            maximum: 100\n            minimum: 1\n            type: integer\n            description: The maximum number of results to return per page.\n            default: 100\n          name: limit\n          in: query\n        - description: The maximum number of results to return per page.\n          required: false\n          schema:\n            title: Limit\n            maximum: 100\n            minimum: 1\n            type: integer\n            description: The maximum number of results to return per page.\n            default: 100\n          name: internal_id\n          in: query\n        - description: The pagination token to access the next or previous page of results. If `pagination_token` is specified, the `sort`, `order`, and filtering parameters are ignored.\n          required: false\n          schema:\n            title: Pagination Token\n            type: string\n            description: The pagination token to access the next or previous page of results. If `pagination_token` is specified, the `sort`, `order`, and filtering parameters are ignored.\n          name: pagination_token\n          in: query\n        - description: The field by which the results will be sorted.\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/api__v1__approvals__pagination__CursorFields'\n            description: The field by which the results will be sorted.\n          name: sort\n          in: query\n        - required: false\n          schema:\n            $ref: '#/components/schemas/ObjectType'\n          name: object_type\n          in: query\n        - required: false\n          schema:\n            $ref: '#/components/schemas/ApprovalStatusEnum'\n          name: status\n          in: query\n        - required: false\n          schema:\n            title: Created At\n            type: string\n            format: date-time\n          name: created_at\n          in: query\n        - required: false\n          schema:\n            title: Created At  Gt\n            type: string\n            format: date-time\n          name: created_at__gt\n          in: query\n        - required: false\n          schema:\n            title: Created At  Lt\n            type: string\n            format: date-time\n          name: created_at__lt\n          in: query\n        - required: false\n          schema:\n            title: Created At  Gte\n            type: string\n            format: date-time\n          name: created_at__gte\n          in: query\n        - required: false\n          schema:\n            title: Created At  Lte\n            type: string\n            format: date-time\n          name: created_at__lte\n          in: query\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedApprovalResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /approvals/{approval_id}:\n    get:\n      tags:\n        - Payables\n      summary: Get Approval By Id\n      description: Get approval details by ID\n      operationId: get_approval_by_id_approvals__approval_id__get\n      parameters:\n        - required: true\n          schema:\n            title: Approval Id\n            type: string\n            format: uuid\n          name: approval_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApprovalResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /approvals/{approval_id}/approve:\n    post:\n      tags:\n        - Payables\n      summary: Approve\n      description: Approve approval\n      operationId: approve_approvals__approval_id__approve_post\n      parameters:\n        - required: true\n          schema:\n            title: Approval Id\n            type: string\n            format: uuid\n          name: approval_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApprovalResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /approvals/{approval_id}/reject:\n    post:\n      tags:\n        - Payables\n      summary: Reject\n      description: Reject approval\n      operationId: reject_approvals__approval_id__reject_post\n      parameters:\n        - required: true\n          schema:\n            title: Approval Id\n            type: string\n            format: uuid\n          name: approval_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApprovalResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /auth//revoke_private:\n    post:\n      tags:\n        - Authentication\n      summary: Revoke Token\n      operationId: revoke_token_v1_auth_revoke_post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RevokeTokenPayload'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MessageResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n  /auth/token:\n    post:\n      tags:\n        - Authentication\n      summary: Obtain New Token\n      operationId: obtain_new_token_v1_auth_token_post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ObtainTokenPayload'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessTokenResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n  /banky_accounts:\n    get:\n      tags:\n        - Entities and users\n      summary: Get Entity Bank Accounts\n      description: Get entity bank accounts\n      operationId: get_entity_bank_accounts_v1_bank_accounts_get\n      parameters:\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityBankAccountPaginationResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    post:\n      tags:\n        - Entities and users\n      summary: Create Entity Bank Account\n      description: Create a new entity bank account\n      operationId: create_entity_bank_account_v1_bank_accounts_post\n      parameters:\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EntityBankAccountRequest'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityBankAccountResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /bank_accounts/{entity_bank_account_id}:\n    get:\n      tags:\n        - Entities and users\n      summary: Get Entity Bank Account\n      description: Get entity bank account\n      operationId: get_entity_bank_account_v1_bank_accounts__entity_bank_account_id__get\n      parameters:\n        - required: true\n          schema:\n            title: Entity Bank Account Id\n            type: string\n            format: uuid\n          name: entity_bank_account_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityBankAccountResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    delete:\n      tags:\n        - Entities and users\n      summary: Delete Entity Bank Account\n      description: Delete entity bank account\n      operationId: delete_entity_bank_account_v1_bank_accounts__entity_bank_account_id__delete\n      parameters:\n        - required: true\n          schema:\n            title: Entity Bank Account Id\n            type: string\n            format: uuid\n          name: entity_bank_account_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                title: Response Delete Entity Bank Account V1 Bank Accounts  Entity Bank Account Id  Delete\n                type: boolean\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    patch:\n      tags:\n        - Entities and users\n      summary: Update Entity Bank Account\n      description: Update entity bank account\n      operationId: update_entity_bank_account_v1_bank_accounts__entity_bank_account_id__patch\n      parameters:\n        - required: true\n          schema:\n            title: Entity Bank Account Id\n            type: string\n            format: uuid\n          name: entity_bank_account_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateEntityBankAccountRequest'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityBankAccountResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /api/comments/{comment_id}:\n    get:\n      tags:\n        - Payables\n      summary: Get Comment By Id\n      description: Get comment\n      operationId: get_comment_by_id_comments__comment_id__get\n      parameters:\n        - required: true\n          schema:\n            title: Comment Id\n            type: string\n            format: uuid\n          name: comment_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommentSchema'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: 'Possible responses: `Action {action} for {object_type} not allowed`,`Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}``{operation}: status has not changed`'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    patch:\n      tags:\n        - Payables\n      summary: Update Comment By Id\n      description: Update comment\n      operationId: update_comment_by_id_comments__comment_id__patch\n      parameters:\n        - required: true\n          schema:\n            title: Comment Id\n            type: string\n            format: uuid\n          name: comment_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateUpdateCommentSchema'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MessageResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: 'Possible responses: `Action {action} for {object_type} not allowed`,`Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}``{operation}: status has not changed`'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /comments/{object_type}/{object_id}:\n    get:\n      tags:\n        - Payables\n      summary: Get Comments\n      description: Get comments\n      operationId: get_comments_comments__object_type___object_id__get\n      parameters:\n        - required: true\n          schema:\n            $ref: '#/components/schemas/ObjectTypeAvailableComment'\n          name: object_type\n          in: path\n        - required: true\n          schema:\n            title: Object Id\n            type: string\n            format: uuid\n          name: object_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                title: Response Get Comments Comments  Object Type   Object Id  Get\n                type: array\n                items:\n                  $ref: '#/components/schemas/CommentSchema'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: 'Possible responses: `Action {action} for {object_type} not allowed`,`Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}``{operation}: status has not changed`'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    post:\n      tags:\n        - Payables\n      summary: Create New Comment\n      description: Create new comment\n      operationId: create_new_comment_comments__object_type___object_id__post\n      parameters:\n        - required: true\n          schema:\n            $ref: '#/components/schemas/ObjectTypeAvailableComment'\n          name: object_type\n          in: path\n        - required: true\n          schema:\n            title: Object Id\n            type: string\n            format: uuid\n          name: object_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateUpdateCommentSchema'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommentSchema'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: 'Possible responses: `Could not notify groups: {not_valid_recipients}. Recipients dont exists`,`groups with ids: {'',''.join(missed_ids)} dont exists`,`Could not notify groups: {missed_groups}. Only {available_groups} are available`,`Action {action} for {object_type} not allowed`,`Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}``{operation}: status has not changed`'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /commercial_conditions:\n    get:\n      tags:\n        - Receivables\n      summary: Get All Commercial Conditions\n      description: get all commercial conditions\n      operationId: get_all_commercial_conditions_v1_commercial_conditions_get\n      parameters:\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateUpdateCommentSchema'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                title: Response Get All Commercial Conditions V1 Commercial Conditions Get\n                type: array\n                items:\n                  $ref: '#/components/schemas/CommercialConditionResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    post:\n      tags:\n        - Receivables\n      summary: Add Commercial Condition\n      description: create commercial condition\n      operationId: add_commercial_condition_v1_commercial_conditions_post\n      parameters:\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CommercialConditionRequest'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommercialConditionResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /get_commercial_conditions/{commercial_condition_id}:\n    get:\n      tags:\n        - Receivables\n      summary: Get Commercial Condition\n      description: get commercial condition\n      operationId: get_commercial_condition_v1_commercial_conditions__commercial_condition_id__get\n      parameters:\n        - required: true\n          schema:\n            title: Commercial Condition Id\n            type: string\n            format: uuid\n          name: commercial_condition_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommercialConditionResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    put:\n      tags:\n        - Receivables\n      summary: Update Commercial Condition\n      description: update commercial condition\n      operationId: update_commercial_condition_v1_commercial_conditions__commercial_condition_id__put\n      parameters:\n        - required: true\n          schema:\n            title: Commercial Condition Id\n            type: string\n            format: uuid\n          name: commercial_condition_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CommercialConditionUpdate'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommercialConditionResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    delete:\n      description: update commercial condition\n      operationId: delete_commercial_condition_v1_commercial_conditions__commercial_condition_id__delete\n      parameters:\n        - required: true\n          schema:\n            title: Commercial Condition Id\n            type: string\n            format: uuid\n          name: commercial_condition_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: MoniteEntityId\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateUpdateCommentSchema'\n        required: true\n      responses:\n        '204':\n          description: Successful Response\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /contents.xml:\n    get:\n      tags:\n        - Mail\n      summary: Get All\n      description: Get all custom contents\n      operationId: get_all_v1_contents_get\n      parameters:\n        - description: Document type of content\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/DocumentObjectTypeEnum'\n            description: Document type of content\n          name: document_type\n          in: query\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid4\n          example: a4e9a453-70f4-48b6-ac83-47350e7b993c\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                title: Response Get All V1 Contents Get\n                type: array\n                items:\n                  $ref: '#/components/schemas/ContentResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    post:\n      tags:\n        - Mail\n      summary: Create\n      description: Create custom content\n      operationId: create_v1_contents_post\n      parameters:\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: a4e9a453-70f4-48b6-ac83-47350e7b993c\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateContentRequest'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContentResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /contents/subject_body_template/{document_type}:\n    get:\n      tags:\n        - Mail\n      summary: Get Subject Body Template\n      description: Subject_Body Template\n      operationId: get_subject_body_template_v1_contents_subject_body_template__document_type__get\n      parameters:\n        - required: true\n          schema:\n            $ref: '#/components/schemas/DocumentObjectTypeEnum'\n          name: document_type\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: a4e9a453-70f4-48b6-ac83-47350e7b993c\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateContentRequest'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /contents/{content_id}:\n    get:\n      tags:\n        - Mail\n      summary: Get\n      description: Get custom content by ID\n      operationId: get_v1_contents__content_id__get\n      parameters:\n        - required: true\n          schema:\n            title: Content Id\n            type: string\n            format: uuid\n          name: content_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: a4e9a453-70f4-48b6-ac83-47350e7b993c\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContentResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    delete:\n      tags:\n        - Mail\n      summary: Delete\n      description: Delete custom content by ID\n      operationId: delete_v1_contents__content_id__delete\n      parameters:\n        - required: true\n          schema:\n            title: Content Id\n            type: string\n            format: uuid\n          name: content_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: a4e9a453-70f4-48b6-ac83-47350e7b993c\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    patch:\n      tags:\n        - Mail\n      summary: Update\n      description: Update custom content by ID\n      operationId: update_v1_contents__content_id__patch\n      parameters:\n        - required: true\n          schema:\n            title: Content Id\n            type: string\n            format: uuid\n          name: content_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: a4e9a453-70f4-48b6-ac83-47350e7b993c\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateContentRequest'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContentResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /counterparts:\n    get:\n      tags:\n        - Receivables\n      summary: Get Counterparts\n      operationId: get_counterparts_v1_counterparts_get\n      parameters:\n        - description: The IBAN of the entity’s bank account.\n          required: false\n          schema:\n            title: Iban\n            maxLength: 34\n            type: string\n            description: The IBAN of the entity’s bank account.\n          name: iban\n          in: query\n        - description: Order by\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/OrderEnum'\n            description: Order by\n            default: asc\n          name: order\n          in: query\n        - description: Max is 100\n          required: false\n          schema:\n            title: Limit\n            maximum: 100\n            minimum: 1\n            type: integer\n            description: Max is 100\n            default: 100\n          name: limit\n          in: query\n        - description: A token, obtained from previous page. Prior over other filters\n          required: false\n          schema:\n            title: Pagination Token\n            type: string\n            description: A token, obtained from previous page. Prior over other filters\n          name: pagination_token\n          in: query\n        - description: Allowed sort fields\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/api__v1__counterparts__pagination__CursorFields'\n            description: Allowed sort fields\n          name: sort\n          in: query\n        - required: false\n          schema:\n            $ref: '#/components/schemas/CounterpartType'\n          name: type\n          in: query\n        - required: false\n          schema:\n            title: Counterpart Name\n            type: string\n          name: counterpart_name\n          in: query\n        - required: false\n          schema:\n            title: Counterpart Name  Contains\n            type: string\n          name: counterpart_name__contains\n          in: query\n        - required: false\n          schema:\n            title: Counterpart Name  Icontains\n            type: string\n          name: counterpart_name__icontains\n          in: query\n        - required: false\n          schema:\n            title: Is Vendor\n            type: boolean\n          name: is_vendor\n          in: query\n        - required: false\n          schema:\n            title: Is Customer\n            type: boolean\n          name: is_customer\n          in: query\n        - required: false\n          schema:\n            title: Email\n            type: string\n          name: email\n          in: query\n        - required: false\n          schema:\n            title: Email  Contains\n            type: string\n          name: email__contains\n          in: query\n        - required: false\n          schema:\n            title: Email  Icontains\n            type: string\n          name: email__icontains\n          in: query\n        - required: false\n          schema:\n            title: Created At\n            type: string\n            format: date-time\n          name: created_at\n          in: query\n        - required: false\n          schema:\n            title: Created At  Gt\n            type: string\n            format: date-time\n          name: created_at__gt\n          in: query\n        - required: false\n          schema:\n            title: Created At  Lt\n            type: string\n            format: date-time\n          name: created_at__lt\n          in: query\n        - required: false\n          schema:\n            title: Created At  Gte\n            type: string\n            format: date-time\n          name: created_at__gte\n          in: query\n        - required: false\n          schema:\n            title: Created At  Lte\n            type: string\n            format: date-time\n          name: created_at__lte\n          in: query\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CounterpartPaginationResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    post:\n      tags:\n        - Receivables\n      summary: Create New Counterpart\n      operationId: create_new_counterpart_v1_counterparts_post\n      parameters:\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CounterpartCreatePayload'\n        required: true\n      responses:\n        '201':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CounterpartResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /counterparts/{counterpart_id}:\n    get:\n      tags:\n        - Receivables\n      summary: Get Counterpart By Id\n      operationId: get_counterpart_by_id_v1_counterparts__counterpart_id__get\n      parameters:\n        - required: true\n          schema:\n            title: Counterpart Id\n            type: string\n            format: uuid\n          name: counterpart_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CounterpartResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    delete:\n      tags:\n        - Receivables\n      summary: Delete Counterpart By Id\n      operationId: delete_counterpart_by_id_v1_counterparts__counterpart_id__delete\n      parameters:\n        - required: true\n          schema:\n            title: Counterpart Id\n            type: string\n            format: uuid\n          name: counterpart_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '204':\n          description: Successful Response\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    patch:\n      tags:\n        - Receivables\n      summary: Update Counterpart\n      operationId: update_counterpart_v1_counterparts__counterpart_id__patch\n      parameters:\n        - required: true\n          schema:\n            title: Counterpart Id\n            type: string\n            format: uuid\n          name: counterpart_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CounterpartUpdatePayload'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CounterpartResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /counterparts/{counterpart_id}/bank_accounts:\n    get:\n      tags:\n        - Receivables\n      summary: Get Counterparts Bank Accounts\n      operationId: get_counterparts_bank_accounts_v1_counterparts__counterpart_id__bank_accounts_get\n      parameters:\n        - required: true\n          schema:\n            title: Counterpart Id\n            type: string\n            format: uuid\n          name: counterpart_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                title: Response Get Counterparts Bank Accounts V1 Counterparts  Counterpart Id  Bank Accounts Get\n                type: array\n                items:\n                  $ref: '#/components/schemas/CounterpartBankAccountResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    post:\n      tags:\n        - Receivables\n      summary: Create Counterparts Bank Account\n      operationId: create_counterparts_bank_account_v1_counterparts__counterpart_id__bank_accounts_post\n      parameters:\n        - required: true\n          schema:\n            title: Counterpart Id\n            type: string\n            format: uuid\n          name: counterpart_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CounterpartBankAccount'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CounterpartBankAccountResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /counterparts/{counterpart_id}/bank_accounts/{bank_account_id}:\n    get:\n      tags:\n        - Receivables\n      summary: Get Counterparts Bank Accounts By Id\n      operationId: get_counterparts_bank_accounts_by_id_v1_counterparts__counterpart_id__bank_accounts__bank_account_id__get\n      parameters:\n        - required: true\n          schema:\n            title: Counterpart Id\n            type: string\n            format: uuid\n          name: counterpart_id\n          in: path\n        - required: true\n          schema:\n            title: Bank Account Id\n            type: string\n            format: uuid\n          name: bank_account_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CounterpartBankAccountResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    delete:\n      tags:\n        - Receivables\n      summary: Delete Counterpart Bank Account By Id\n      operationId: delete_counterpart_bank_account_by_id_v1_counterparts__counterpart_id__bank_accounts__bank_account_id__delete\n      parameters:\n        - required: true\n          schema:\n            title: Counterpart Id\n            type: string\n            format: uuid\n          name: counterpart_id\n          in: path\n        - required: true\n          schema:\n            title: Bank Account Id\n            type: string\n            format: uuid\n          name: bank_account_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '204':\n          description: Successful Response\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    patch:\n      tags:\n        - Receivables\n      summary: Update Counterparts Bank Account\n      operationId: update_counterparts_bank_account_v1_counterparts__counterpart_id__bank_accounts__bank_account_id__patch\n      parameters:\n        - required: true\n          schema:\n            title: Counterpart Id\n            type: string\n            format: uuid\n          name: counterpart_id\n          in: path\n        - required: true\n          schema:\n            title: Bank Account Id\n            type: string\n            format: uuid\n          name: bank_account_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CounterpartBankAccount'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CounterpartBankAccountResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /counterparts/{counterpart_id}/contacts:\n    get:\n      tags:\n        - Receivables\n      summary: Get Counterpart Contacts\n      operationId: get_counterpart_contacts_v1_counterparts__counterpart_id__contacts_get\n      parameters:\n        - required: true\n          schema:\n            title: Counterpart Id\n            type: string\n            format: uuid\n          name: counterpart_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                title: Response Get Counterpart Contacts V1 Counterparts  Counterpart Id  Contacts Get\n                type: array\n                items:\n                  $ref: '#/components/schemas/CounterpartContactResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    post:\n      tags:\n        - Receivables\n      summary: Create Counterpart Contacts\n      operationId: create_counterpart_contacts_v1_counterparts__counterpart_id__contacts_post\n      parameters:\n        - required: true\n          schema:\n            title: Counterpart Id\n            type: string\n            format: uuid\n          name: counterpart_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateCounterpartContactPayload'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CounterpartContactResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /counterparts/{counterpart_id}/contacts/{contact_id}:\n    get:\n      tags:\n        - Receivables\n      summary: Get Counterpart Contact By Id\n      operationId: get_counterpart_contact_by_id_v1_counterparts__counterpart_id__contacts__contact_id__get\n      parameters:\n        - required: true\n          schema:\n            title: Counterpart Id\n            type: string\n            format: uuid\n          name: counterpart_id\n          in: path\n        - required: true\n          schema:\n            title: Contact Id\n            type: string\n            format: uuid\n          name: contact_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CounterpartContactResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    delete:\n      tags:\n        - Receivables\n      summary: Delete Counterpart Contact By Id\n      operationId: delete_counterpart_contact_by_id_v1_counterparts__counterpart_id__contacts__contact_id__delete\n      parameters:\n        - required: true\n          schema:\n            title: Counterpart Id\n            type: string\n            format: uuid\n          name: counterpart_id\n          in: path\n        - required: true\n          schema:\n            title: Contact Id\n            type: string\n            format: uuid\n          name: contact_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '204':\n          description: Successful Response\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    patch:\n      tags:\n        - Receivables\n      summary: Update Counterpart Contact By Id\n      operationId: update_counterpart_contact_by_id_v1_counterparts__counterpart_id__contacts__contact_id__patch\n      parameters:\n        - required: true\n          schema:\n            title: Counterpart Id\n            type: string\n            format: uuid\n          name: counterpart_id\n          in: path\n        - required: true\n          schema:\n            title: Contact Id\n            type: string\n            format: uuid\n          name: contact_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateCounterpartContactPayload'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CounterpartContactResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /counterparts/{counterpart_id}/contacts/{contact_id}/make_default:\n    patch:\n      tags:\n        - Receivables\n      summary: Make Default Counterpart Contacts By Id\n      operationId: make_default_counterpart_contacts_by_id_v1_counterparts__counterpart_id__contacts__contact_id__make_default_patch\n      parameters:\n        - required: true\n          schema:\n            title: Counterpart Id\n            type: string\n            format: uuid\n          name: counterpart_id\n          in: path\n        - required: true\n          schema:\n            title: Contact Id\n            type: string\n            format: uuid\n          name: contact_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CounterpartContactResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /data_exports:\n    get:\n      tags:\n        - Payables\n      summary: Get All\n      operationId: get_all_data_exports_get\n      parameters:\n        - description: 'Sort order: `asc` (ascending) or `desc` (descending).'\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/OrderEnum'\n            description: 'Sort order: `asc` (ascending) or `desc` (descending).'\n            default: asc\n          name: order\n          in: query\n        - description: The maximum number of results to return per page.\n          required: false\n          schema:\n            title: Limit\n            maximum: 100\n            minimum: 1\n            type: integer\n            description: The maximum number of results to return per page.\n            default: 100\n          name: limit\n          in: query\n        - description: The pagination token to access the next or previous page of results. If `pagination_token` is specified, the `sort`, `order`, and filtering parameters are ignored.\n          required: false\n          schema:\n            title: Pagination Token\n            type: string\n            description: The pagination token to access the next or previous page of results. If `pagination_token` is specified, the `sort`, `order`, and filtering parameters are ignored.\n          name: pagination_token\n          in: query\n        - description: The field by which the results will be sorted.\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/api__v1__export__pagination__CursorFields'\n            description: The field by which the results will be sorted.\n          name: sort\n          in: query\n        - required: false\n          schema:\n            title: Created By Entity User Id\n            type: string\n            format: uuid\n          name: created_by_entity_user_id\n          in: query\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    post:\n      tags:\n        - Payables\n      summary: Add Document Export\n      operationId: add_document_export_data_exports_post\n      parameters:\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExportPayloadSchema'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateExportTaskResponseSchema'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: 'Possible responses: `Not all statuses are available: {missed_statuses}. Available ones: {object_statuses},`{missed_objects} are not allowed. Available only {objects}`'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /data_exports/supported_formats:\n    get:\n      tags:\n        - Payables\n      summary: Get Supported Export Formats\n      operationId: get_supported_export_formats_data_exports_supported_formats_get\n      parameters:\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                title: Response Get Supported Export Formats Data Exports Supported Formats Get\n                type: array\n                items:\n                  $ref: '#/components/schemas/SupportedFormatSchema'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /data_exports/{id}:\n    get:\n      tags:\n        - Payables\n      summary: Get Document Export By Id\n      operationId: get_document_export_by_id_data_exports__id__get\n      parameters:\n        - required: true\n          schema:\n            title: Id\n            type: string\n            format: uuid\n          name: id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DocumentExportResponseSchema'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /document_templates:\n    get:\n      tags:\n        - Mail\n      summary: Get Document Templates\n      description: 'This API call returns all supported templates with language codes. '\n      operationId: get_document_templates_v1_document_templates_get\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TemplateListResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /document_templates/{document_template_id}:\n    get:\n      tags:\n        - Mail\n      summary: Get Document Template By Id\n      operationId: get_document_template_by_id_v1_document_templates__document_template_id__get\n      parameters:\n        - required: true\n          schema:\n            title: Document Template Id\n            type: string\n            format: uuid\n          name: document_template_id\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TemplateResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /entities:\n    get:\n      tags:\n        - Entities and users\n      summary: Get Entities\n      operationId: get_entities_v1_entities_get\n      parameters:\n        - description: Order by\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/OrderEnum'\n            description: Order by\n            default: asc\n          name: order\n          in: query\n        - description: Max is 100\n          required: false\n          schema:\n            title: Limit\n            maximum: 100\n            minimum: 1\n            type: integer\n            description: Max is 100\n            default: 100\n          name: limit\n          in: query\n        - description: A token, obtained from previous page. Prior over other filters\n          required: false\n          schema:\n            title: Pagination Token\n            type: string\n            description: A token, obtained from previous page. Prior over other filters\n          name: pagination_token\n          in: query\n        - description: Allowed sort fields\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/api__v1__entities__pagination__CursorFields'\n            description: Allowed sort fields\n          name: sort\n          in: query\n        - required: false\n          schema:\n            title: Name\n            type: string\n          name: name\n          in: query\n        - required: false\n          schema:\n            title: Internal Id\n            type: string\n          name: internal_id\n          in: query\n        - required: false\n          schema:\n            $ref: '#/components/schemas/EntityTypeEnum'\n          name: type\n          in: query\n        - required: false\n          schema:\n            title: Created At\n            type: string\n            format: date-time\n          name: created_at\n          in: query\n        - required: false\n          schema:\n            title: Created At  Gt\n            type: string\n            format: date-time\n          name: created_at__gt\n          in: query\n        - required: false\n          schema:\n            title: Created At  Lt\n            type: string\n            format: date-time\n          name: created_at__lt\n          in: query\n        - required: false\n          schema:\n            title: Created At  Gte\n            type: string\n            format: date-time\n          name: created_at__gte\n          in: query\n        - required: false\n          schema:\n            title: Created At  Lte\n            type: string\n            format: date-time\n          name: created_at__lte\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityPaginationResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    post:\n      tags:\n        - Entities and users\n      summary: Create Entity\n      operationId: create_entity_v1_entities_post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateEntityRequest'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /entities/{entity_id}:\n    get:\n      tags:\n        - Entities and users\n      summary: Get Entity By Id\n      operationId: get_entity_by_id_v1_entities__entity_id__get\n      parameters:\n        - required: true\n          schema:\n            title: Entity Id\n            type: string\n            format: uuid\n          example: e8365da9-d35a-473b-9404-9403a7ab864d\n          name: entity_id\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    patch:\n      tags:\n        - Entities and users\n      summary: Update Entity By Id\n      operationId: update_entity_by_id_v1_entities__entity_id__patch\n      parameters:\n        - required: true\n          schema:\n            title: Entity Id\n            type: string\n            format: uuid\n          example: df67899b-6b0d-4860-9c65-4dba78f2f275\n          name: entity_id\n          in: path\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateEntityRequest'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /entities/{entity_id}/settings:\n    get:\n      tags:\n        - Entities and users\n      summary: Get Entity Settings\n      operationId: get_entity_settings_v1_entities__entity_id__settings_get\n      parameters:\n        - required: true\n          schema:\n            title: Entity Id\n            type: string\n            format: uuid\n          example: f9b3ec50-fac1-4473-844f-98868420f95d\n          name: entity_id\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SettingsResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    patch:\n      tags:\n        - Entities and users\n      summary: Patch Entity Settings\n      operationId: patch_entity_settings_v1_entities__entity_id__settings_patch\n      parameters:\n        - required: true\n          schema:\n            title: Entity Id\n            type: string\n            format: uuid\n          example: 9e67ade9-676a-4375-aa54-4fa884ff8873\n          name: entity_id\n          in: path\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchSettingsPayload'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SettingsResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /entity_users:\n    get:\n      tags:\n        - Entities and users\n      summary: Get Entity Users\n      operationId: get_entity_users_v1_entity_users_get\n      parameters:\n        - description: Order by\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/OrderEnum'\n            description: Order by\n            default: asc\n          name: order\n          in: query\n        - description: Max is 100\n          required: false\n          schema:\n            title: Limit\n            maximum: 100\n            minimum: 1\n            type: integer\n            description: Max is 100\n            default: 100\n          name: limit\n          in: query\n        - description: A token, obtained from previous page. Prior over other filters\n          required: false\n          schema:\n            title: Pagination Token\n            type: string\n            description: A token, obtained from previous page. Prior over other filters\n          name: pagination_token\n          in: query\n        - description: Allowed sort fields\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/api__v1__entity_users__pagination__CursorFields'\n            description: Allowed sort fields\n          name: sort\n          in: query\n        - required: false\n          schema:\n            title: First Name\n            type: string\n          name: first_name\n          in: query\n        - required: false\n          schema:\n            title: Created At\n            type: string\n            format: date-time\n          name: created_at\n          in: query\n        - required: false\n          schema:\n            title: Created At  Gt\n            type: string\n            format: date-time\n          name: created_at__gt\n          in: query\n        - required: false\n          schema:\n            title: Created At  Lt\n            type: string\n            format: date-time\n          name: created_at__lt\n          in: query\n        - required: false\n          schema:\n            title: Created At  Gte\n            type: string\n            format: date-time\n          name: created_at__gte\n          in: query\n        - required: false\n          schema:\n            title: Created At  Lte\n            type: string\n            format: date-time\n          name: created_at__lte\n          in: query\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityUserPaginationResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    post:\n      tags:\n        - Entities and users\n      summary: Create Entity User\n      operationId: create_entity_user_v1_entity_users_post\n      parameters:\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateEntityUserRequest'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityUserResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /entity_users/search:\n    post:\n      tags:\n        - Entities and users\n      summary: Search Entity User\n      operationId: search_entity_user_v1_entity_users_search_post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SearchEntitiesPayload'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                title: Response Search Entity User V1 Entity Users Search Post\n                type: array\n                items:\n                  $ref: '#/components/schemas/EntityUserResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /entity_users/{entity_user_id}:\n    get:\n      tags:\n        - Entities and users\n      summary: Get Entity User By Id\n      operationId: get_entity_user_by_id_v1_entity_users__entity_user_id__get\n      parameters:\n        - required: true\n          schema:\n            title: Entity User Id\n            type: string\n            format: uuid\n          name: entity_user_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 206fbbe7-f795-4f60-b95e-f7b99bd34d54\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityUserResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    patch:\n      tags:\n        - Entities and users\n      summary: Update Entity User By Id\n      operationId: update_entity_user_by_id_v1_entity_users__entity_user_id__patch\n      parameters:\n        - required: true\n          schema:\n            title: Entity User Id\n            type: string\n            format: uuid\n          name: entity_user_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 206fbbe7-f795-4f60-b95e-f7b99bd34d54\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateEntityUserRequest'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityUserResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /mail_templates:\n    get:\n      tags:\n        - Mail\n      summary: Get All\n      description: Get all custom templates\n      operationId: get_all_v1_mail_templates_get\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                title: Response Get All V1 Mail Templates Get\n                type: array\n                items:\n                  $ref: '#/components/schemas/CustomTemplateDataSchema'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    post:\n      tags:\n        - Mail\n      summary: Create\n      description: Create custom template\n      operationId: create_v1_mail_templates_post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddCustomTemplateSchema'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomTemplateDataSchema'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /mail_templates/system:\n    get:\n      tags:\n        - Mail\n      summary: Get All System Templates\n      description: Get all system templates\n      operationId: get_all_system_templates_v1_mail_templates_system_get\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                title: Response Get All System Templates V1 Mail Templates System Get\n                type: array\n                items:\n                  $ref: '#/components/schemas/SystemTemplateDataSchema'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /mail_templates/{template_id}:\n    get:\n      tags:\n        - Mail\n      summary: Get\n      description: Get custom template by ID\n      operationId: get_v1_mail_templates__template_id__get\n      parameters:\n        - required: true\n          schema:\n            title: Template Id\n            type: string\n            format: uuid\n          name: template_id\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomTemplateDataSchema'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    delete:\n      tags:\n        - Mail\n      summary: Delete\n      description: Delete custom template bt ID\n      operationId: delete_v1_mail_templates__template_id__delete\n      parameters:\n        - required: true\n          schema:\n            title: Template Id\n            type: string\n            format: uuid\n          name: template_id\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomTemplateDataSchema'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    patch:\n      tags:\n        - Mail\n      summary: Update\n      description: Update custom template by ID\n      operationId: update_v1_mail_templates__template_id__patch\n      parameters:\n        - required: true\n          schema:\n            title: Template Id\n            type: string\n            format: uuid\n          name: template_id\n          in: path\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateCustomTemplateSchemaRequest'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomTemplateDataSchema'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /mailbox_domains:\n    get:\n      tags:\n        - Mail\n      summary: Get Domains\n      description: Get all domains owned by partner_id\n      operationId: get_domains_v1_mailbox_domains_get\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainListResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    post:\n      tags:\n        - Mail\n      summary: Create Domain\n      description: Create domain for the partner_id\n      operationId: create_domain_v1_mailbox_domains_post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DomainRequest'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /mailbox_domains/{domain_id}:\n    delete:\n      tags:\n        - Mail\n      summary: Delete Domain\n      description: Delete domain for the partner_id\n      operationId: delete_domain_v1_mailbox_domains__domain_id__delete\n      parameters:\n        - required: true\n          schema:\n            title: Domain Id\n            type: string\n            format: uuid\n          name: domain_id\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /mailbox_domains/{token}/verify:\n    post:\n      tags:\n        - Mail\n      summary: Verify Domain\n      description: Verify domain for the partner_id\n      operationId: verify_domain_v1_mailbox_domains__domain_id__verify_post\n      parameters:\n        - required: true\n          schema:\n            type: string\n            format: uuid\n          name: token\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VerifyResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /mailboxes:\n    get:\n      tags:\n        - Mail\n      summary: Get Mailboxes\n      description: Get all mailboxes owned by Entity\n      operationId: get_mailboxes_v1_mailboxes_get\n      parameters:\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MailboxDataResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    post:\n      tags:\n        - Mail\n      summary: Create Mailbox\n      description: Create a new mailbox\n      operationId: create_mailbox_v1_mailboxes_post\n      parameters:\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MailboxDomainRequest'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MailboxResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /mailboxes/generate:\n    post:\n      tags:\n        - Mail\n      summary: Generate Mailbox\n      description: Create a new mailbox when creating a new entity\n      operationId: generate_mailbox_v1_mailboxes_generate_post\n      parameters:\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MailboxRequest'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MailboxResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /mailboxes/search:\n    post:\n      tags:\n        - Mail\n      summary: Get Mailboxes By Multiple Entity Ids\n      description: Get all mailboxes owned by Entity\n      operationId: get_mailboxes_by_multiple_entity_ids_v1_mailboxes_search_post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MailboxMultipleEntitiesRequest'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MailboxDataResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /mailboxes/{mailbox_id}:\n    delete:\n      tags:\n        - Mail\n      summary: Delete Mailbox\n      description: Delete mailbox\n      operationId: delete_mailbox_v1_mailboxes__mailbox_id__delete\n      parameters:\n        - required: true\n          schema:\n            title: Mailbox Id\n            type: string\n            format: uuid\n          name: mailbox_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /measure_units:\n    get:\n      tags:\n        - Receivables\n      summary: Get Units\n      operationId: get_units_v1_measure_units_get\n      parameters:\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnitListResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    post:\n      tags:\n        - Receivables\n      summary: Create Unit\n      operationId: create_unit_v1_measure_units_post\n      parameters:\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UnitRequest'\n        required: true\n      responses:\n        '201':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnitResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /measure_units/{unit_id}:\n    get:\n      tags:\n        - Receivables\n      summary: Get Unit By Id\n      operationId: get_unit_by_id_v1_measure_units__unit_id__get\n      parameters:\n        - required: true\n          schema:\n            title: Unit Id\n            type: string\n            format: uuid\n          name: unit_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnitResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    delete:\n      tags:\n        - Receivables\n      summary: Delete Unit By Id\n      operationId: delete_unit_by_id_v1_measure_units__unit_id__delete\n      parameters:\n        - required: true\n          schema:\n            title: Unit Id\n            type: string\n            format: uuid\n          name: unit_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '204':\n          description: Successful Response\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    patch:\n      tags:\n        - Receivables\n      summary: Update Unit By Id\n      operationId: update_unit_by_id_v1_measure_units__unit_id__patch\n      parameters:\n        - required: true\n          schema:\n            title: Unit Id\n            type: string\n            format: uuid\n          name: unit_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UnitUpdate'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnitResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /payables:\n    get:\n      tags:\n        - Payables\n      summary: Get Payables\n      description: Lists all payables from the connected entity.\n      operationId: get_payables_payables_get\n      parameters:\n        - description: 'Sort order: `asc` (ascending) or `desc` (descending).'\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/OrderEnum'\n            description: 'Sort order: `asc` (ascending) or `desc` (descending).'\n            default: asc\n          name: order\n          in: query\n        - description: The maximum number of results to return per page.\n          required: false\n          schema:\n            title: Limit\n            maximum: 100\n            minimum: 1\n            type: integer\n            description: The maximum number of results to return per page.\n            default: 100\n          name: secret\n          in: query\n        - description: The pagination token to access the next or previous page of results. If `pagination_token` is specified, the `sort`, `order`, and filtering parameters are ignored.\n          required: false\n          schema:\n            title: Pagination Token\n            type: string\n            description: The pagination token to access the next or previous page of results. If `pagination_token` is specified, the `sort`, `order`, and filtering parameters are ignored.\n          name: pagination_token\n          in: query\n        - description: The field by which the results will be sorted.\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/api__v1__payables__pagination__CursorFields'\n            description: The field by which the results will be sorted.\n          name: sort\n          in: query\n        - required: false\n          schema:\n            title: Created At\n            type: string\n            format: date-time\n          name: created_at\n          in: query\n        - required: false\n          schema:\n            title: Created At  Gt\n            type: string\n            format: date-time\n          name: created_at__gt\n          in: query\n        - required: false\n          schema:\n            title: Created At  Lt\n            type: string\n            format: date-time\n          name: created_at__lt\n          in: query\n        - required: false\n          schema:\n            title: Created At  Gte\n            type: string\n            format: date-time\n          name: created_at__gte\n          in: query\n        - required: false\n          schema:\n            title: Created At  Lte\n            type: string\n            format: date-time\n          name: created_at__lte\n          in: query\n        - required: false\n          schema:\n            $ref: '#/components/schemas/PayableStateEnum'\n          name: status\n          in: query\n        - required: false\n          schema:\n            title: Amount\n            type: integer\n          name: amount\n          in: query\n        - required: false\n          schema:\n            title: Amount  Gt\n            type: integer\n          name: amount__gt\n          in: query\n        - required: false\n          schema:\n            title: Amount  Lt\n            type: integer\n          name: amount__lt\n          in: query\n        - required: false\n          schema:\n            title: Amount  Gte\n            type: integer\n          name: amount__gte\n          in: query\n        - required: false\n          schema:\n            title: Amount  Lte\n            type: integer\n          name: amount__lte\n          in: query\n        - required: false\n          schema:\n            $ref: '#/components/schemas/CurrencyEnum'\n          name: currency\n          in: query\n        - required: false\n          schema:\n            title: Counterpart Name\n            type: string\n          name: counterpart_name\n          in: query\n        - required: false\n          schema:\n            title: Due Date\n            type: string\n            format: date-time\n          name: due_date\n          in: query\n        - required: false\n          schema:\n            title: Due Date  Gt\n            type: string\n            format: date-time\n          name: due_date__gt\n          in: query\n        - required: false\n          schema:\n            title: Due Date  Lt\n            type: string\n            format: date-time\n          name: due_date__lt\n          in: query\n        - required: false\n          schema:\n            title: Due Date  Gte\n            type: string\n            format: date-time\n          name: due_date__gte\n          in: query\n        - required: false\n          schema:\n            title: Due Date  Lte\n            type: string\n            format: date-time\n          name: due_date__lte\n          in: query\n        - required: false\n          schema:\n            title: Document Id\n            type: string\n          name: document_id\n          in: query\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginationResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    post:\n      tags:\n        - Payables\n      summary: Upload New Payable\n      description: Uploads an incoming invoice (payable) in PDF, PNG, JPG, or GIF format. The max file size is 10MB.\n      operationId: upload_new_payable_payables_post\n      parameters:\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Body_upload_new_payable_payables_post'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PayableResponseSchema'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /payables/pending_actions:\n    get:\n      tags:\n        - Payables\n      summary: Get Pending Actions\n      description: Get next best actions\n      operationId: get_pending_actions_payables_pending_actions_get\n      parameters:\n        - description: Action for pending invoice.\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/PayablePendingActionEnum'\n            description: Action for pending invoice.\n          name: action_type\n          in: query\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PayablePendingActionResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: ','\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /payables/upload_with_data:\n    post:\n      tags:\n        - Payables\n      summary: Create a payable\n      description: |-\n        Add a new payable by providing the amount, currency, vendor name, and other details\n        along with the original document (`base64_encoded_file`).\n        The original document is required for the reference. Any file formats are allowed.\n\n        You can use this endpoint to bypass the Monite OCR service and provide the data directly\n        (for example, if you already have the data in place).\n\n        A newly created payable has the the `draft` [status](https://docs.monite.com/docs/payables-lifecycle).\n      operationId: upload_payable_with_data_payables_upload_with_data_post\n      parameters:\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PayableUploadWithDataSchema'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PayableResponseSchema'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /payables/{payable_id}:\n    get:\n      tags:\n        - Payables\n      summary: Get Payable By Id\n      description: Retrieves information about a specific payable with the given ID.\n      operationId: get_payable_by_id_payables__payable_id__get\n      parameters:\n        - required: true\n          schema:\n            title: Payable Id\n            type: string\n            format: uuid\n          name: payable_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PayableResponseSchema'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: 'Possible responses: `Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}`,`Action {action} for {object_type} not allowed`,`Payable is not associated with the entity`'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    patch:\n      tags:\n        - Payables\n      summary: Update Payable By Id\n      description: Updates the information about a specific payable.\n      operationId: update_payable_by_id_payables__payable_id__patch\n      parameters:\n        - required: true\n          schema:\n            title: Payable Id\n            type: string\n            format: uuid\n          name: payable_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PayableUpdateSchema'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PayableResponseSchema'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: 'Possible responses: `Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}`,`Action {action} for {object_type} not allowed`,`Payable couldn''t be updated due to current state`'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /payables/{payable_id}/approve_payment_operation:\n    post:\n      tags:\n        - Payables\n      summary: Confirm Payment\n      description: Confirms that the payable is ready to be paid.\n      operationId: confirm_payment_payables__payable_id__approve_payment_operation_post\n      parameters:\n        - required: true\n          schema:\n            title: Payable Id\n            type: string\n            format: uuid\n          name: payable_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PayableResponseSchema'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: 'Possible responses: `Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}`,`Action {action} for {object_type} not allowed`,`Payable couldn''t be updated due to current state`'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /payables/{payable_id}/cancel:\n    post:\n      tags:\n        - Payables\n      summary: Cancel Payable\n      description: Cancels the payable that was not confirmed during the review.\n      operationId: cancel_payable_payables__payable_id__cancel_post\n      parameters:\n        - required: true\n          schema:\n            title: Payable Id\n            type: string\n            format: uuid\n          name: payable_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PayableResponseSchema'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: 'Possible responses: `Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}`,`Action {action} for {object_type} not allowed`,`Payable couldn''t be updated due to current state`'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /payables/{payable_id}/mark_as_paid:\n    post:\n      tags:\n        - Payables\n      summary: Mark Payable As Paid\n      description: Converts the specified payable status into paid.\n      operationId: mark_payable_as_paid_payables__payable_id__mark_as_paid_post\n      parameters:\n        - required: true\n          schema:\n            title: Payable Id\n            type: string\n            format: uuid\n          name: payable_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CommentPayload'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PayableResponseSchema'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: 'Possible responses: `Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}`,`Action {action} for {object_type} not allowed`,`Payable couldn''t be updated due to current state`'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /payables/{payable_id}/pay:\n    post:\n      tags:\n        - Payables\n      summary: Pay\n      description: Marks the invoice as paid.\n      operationId: pay_payables__payable_id__pay_post\n      parameters:\n        - required: true\n          schema:\n            title: Payable Id\n            type: string\n            format: uuid\n          name: payable_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PayableResponseSchema'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: 'Possible responses: `Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}`,`Action {action} for {object_type} not allowed`,`Payable couldn''t be updated due to current state`'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /payables/{payable_id}/reject:\n    post:\n      tags:\n        - Payables\n      summary: Reject Payable\n      description: Declines the payable when an approver finds any mismatch or discrepancies.\n      operationId: reject_payable_payables__payable_id__reject_post\n      parameters:\n        - required: true\n          schema:\n            title: Payable Id\n            type: string\n            format: uuid\n          name: payable_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PayableResponseSchema'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: 'Possible responses: `Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}`,`Action {action} for {object_type} not allowed`,`Payable couldn''t be updated due to current state`'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /payables/{payable_id}/submit_for_approval:\n    post:\n      tags:\n        - Payables\n      summary: Submit For Approval\n      description: Starts the approval process once the uploaded payable is validated.\n      operationId: submit_for_approval_payables__payable_id__submit_for_approval_post\n      parameters:\n        - required: true\n          schema:\n            title: Payable Id\n            type: string\n            format: uuid\n          name: payable_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PayableResponseSchema'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: 'Possible responses: `Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}`,`Action {action} for {object_type} not allowed`,`Payable couldn''t be updated due to current state`'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /payables/{payable_id}/workflow:\n    get:\n      tags:\n        - Payables\n      summary: Get Workflow Of The Active Pipeline By Id\n      description: Get workflow of the active pipeline by ID\n      operationId: get_workflow_of_the_active_pipeline_by_id_payables__payable_id__workflow_get\n      parameters:\n        - required: true\n          schema:\n            title: Payable Id\n            type: string\n            format: uuid\n          name: payable_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowResponseSchema'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /payment_intents:\n    post:\n      tags:\n        - Payments\n      summary: Init Payment Link\n      description: Use payment_links instead\n      operationId: init_payment_link_v1_payment_intents_post\n      parameters:\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreatePaymentLink'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentLinkResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      deprecated: true\n      security:\n        - HTTPBearer: []\n  /payment_links:\n    post:\n      tags:\n        - Payments\n      summary: Init Payment Link\n      description: Use payment_links instead\n      operationId: init_payment_link_v1_payment_links_post\n      parameters:\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreatePaymentLink'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentLinkResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /payment_terms:\n    get:\n      tags:\n        - Receivables\n      summary: Get Items\n      operationId: get_items_v1_payment_terms_get\n      parameters:\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentTermsListResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    post:\n      tags:\n        - Receivables\n      summary: Create Item\n      operationId: create_item_v1_payment_terms_post\n      parameters:\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PaymentTermsCreatePayload'\n        required: true\n      responses:\n        '201':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentTermsResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /payment_terms/{payment_terms_id}:\n    get:\n      tags:\n        - Receivables\n      summary: Get Item By Id\n      operationId: get_item_by_id_v1_payment_terms__payment_terms_id__get\n      parameters:\n        - required: true\n          schema:\n            title: Payment Terms Id\n            type: string\n            format: uuid\n          name: payment_terms_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentTermsResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    delete:\n      tags:\n        - Receivables\n      summary: Delete Item By Id\n      operationId: delete_item_by_id_v1_payment_terms__payment_terms_id__delete\n      parameters:\n        - required: true\n          schema:\n            title: Payment Terms Id\n            type: string\n            format: uuid\n          name: payment_terms_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '204':\n          description: Successful Response\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    patch:\n      tags:\n        - Receivables\n      summary: Update Item By Id\n      operationId: update_item_by_id_v1_payment_terms__payment_terms_id__patch\n      parameters:\n        - required: true\n          schema:\n            title: Payment Terms Id\n            type: string\n            format: uuid\n          name: payment_terms_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PaymentTermsUpdatePayload'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentTermsResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /products:\n    get:\n      tags:\n        - Receivables\n      summary: Get Items\n      operationId: get_items_v1_products_get\n      parameters:\n        - description: Order by\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/OrderEnum'\n            description: Order by\n            default: asc\n          name: order\n          in: query\n        - description: Max is 100\n          required: false\n          schema:\n            title: Limit\n            maximum: 100\n            minimum: 1\n            type: integer\n            description: Max is 100\n            default: 100\n          name: limit\n          in: query\n        - description: A token, obtained from previous page. Prior over other filters\n          required: false\n          schema:\n            title: Pagination Token\n            type: string\n            description: A token, obtained from previous page. Prior over other filters\n          name: pagination_token\n          in: query\n        - description: Allowed sort fields\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/api__v1__products_services__pagination__CursorFields'\n            description: Allowed sort fields\n          name: sort\n          in: query\n        - required: false\n          schema:\n            title: Name\n            type: string\n          name: name\n          in: query\n        - required: false\n          schema:\n            title: Name  Contains\n            type: string\n          name: name__contains\n          in: query\n        - required: false\n          schema:\n            title: Name  Icontains\n            type: string\n          name: name__icontains\n          in: query\n        - required: false\n          schema:\n            $ref: '#/components/schemas/ProductServiceTypeEnum'\n          name: type\n          in: query\n        - required: false\n          schema:\n            title: Price\n            type: integer\n          name: price\n          in: query\n        - required: false\n          schema:\n            title: Price  Gt\n            type: integer\n          name: price__gt\n          in: query\n        - required: false\n          schema:\n            title: Price  Lt\n            type: integer\n          name: price__lt\n          in: query\n        - required: false\n          schema:\n            title: Price  Gte\n            type: integer\n          name: price__gte\n          in: query\n        - required: false\n          schema:\n            title: Price  Lte\n            type: integer\n          name: price__lte\n          in: query\n        - required: false\n          schema:\n            $ref: '#/components/schemas/CurrencyEnum'\n          name: currency\n          in: query\n        - required: false\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/CurrencyEnum'\n          name: currency__in\n          in: query\n        - required: false\n          schema:\n            title: Measure Unit Id\n            type: string\n            format: uuid\n          name: measure_unit_id\n          in: query\n        - required: false\n          schema:\n            title: Created At\n            type: string\n            format: date-time\n          name: created_at\n          in: query\n        - required: false\n          schema:\n            title: Created At  Gt\n            type: string\n            format: date-time\n          name: created_at__gt\n          in: query\n        - required: false\n          schema:\n            title: Created At  Lt\n            type: string\n            format: date-time\n          name: created_at__lt\n          in: query\n        - required: false\n          schema:\n            title: Created At  Gte\n            type: string\n            format: date-time\n          name: created_at__gte\n          in: query\n        - required: false\n          schema:\n            title: Created At  Lte\n            type: string\n            format: date-time\n          name: created_at__lte\n          in: query\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductServicePaginationResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    post:\n      tags:\n        - Receivables\n      summary: Create Item\n      operationId: create_item_v1_products_post\n      parameters:\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProductServiceRequest'\n        required: true\n      responses:\n        '201':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductServiceResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /products/{item_id}:\n    get:\n      tags:\n        - Receivables\n      summary: Get Item By Id\n      operationId: get_item_by_id_v1_products__item_id__get\n      parameters:\n        - required: true\n          schema:\n            title: Item Id\n            type: string\n            format: uuid\n          name: item_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductServiceResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    delete:\n      tags:\n        - Receivables\n      summary: Delete Item By Id\n      operationId: delete_item_by_id_v1_products__item_id__delete\n      parameters:\n        - required: true\n          schema:\n            title: Item Id\n            type: string\n            format: uuid\n          name: item_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '204':\n          description: Successful Response\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    patch:\n      tags:\n        - Receivables\n      summary: Update Item By Id\n      operationId: update_item_by_id_v1_products__item_id__patch\n      parameters:\n        - required: true\n          schema:\n            title: Item Id\n            type: string\n            format: uuid\n          name: item_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProductServiceUpdate'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductServiceResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /receivables:\n    get:\n      tags:\n        - Receivables\n      summary: Get All\n      operationId: get_all_v1_receivables_get\n      parameters:\n        - description: Order by\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/OrderEnum'\n            description: Order by\n            default: asc\n          name: order\n          in: query\n        - description: Max is 100\n          required: false\n          schema:\n            title: Limit\n            maximum: 100\n            minimum: 1\n            type: integer\n            description: Max is 100\n            default: 100\n          name: limit\n          in: query\n        - description: A token, obtained from previous page. Prior over other filters\n          required: false\n          schema:\n            title: Pagination Token\n            type: string\n            description: A token, obtained from previous page. Prior over other filters\n          name: pagination_token\n          in: query\n        - description: Allowed sort fields\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/api__v1__receivables__pagination__CursorFields'\n            description: Allowed sort fields\n          name: sort\n          in: query\n        - required: false\n          schema:\n            $ref: '#/components/schemas/ReceivableType'\n          name: type\n          in: query\n        - required: false\n          schema:\n            title: Document Id\n            type: string\n          name: document_id\n          in: query\n        - required: false\n          schema:\n            title: Document Id  Contains\n            type: string\n          name: document_id__contains\n          in: query\n        - required: false\n          schema:\n            title: Document Id  Icontains\n            type: string\n          name: document_id__icontains\n          in: query\n        - required: false\n          schema:\n            title: Issued Date\n            type: string\n            format: date-time\n          name: issued_date\n          in: query\n        - required: false\n          schema:\n            title: Issued Date  Gt\n            type: string\n            format: date-time\n          name: issued_date__gt\n          in: query\n        - required: false\n          schema:\n            title: Issued Date  Lt\n            type: string\n            format: date-time\n          name: issued_date__lt\n          in: query\n        - required: false\n          schema:\n            title: Issued Date  Gte\n            type: string\n            format: date-time\n          name: issued_date__gte\n          in: query\n        - required: false\n          schema:\n            title: Issued Date  Lte\n            type: string\n            format: date-time\n          name: issued_date__lte\n          in: query\n        - required: false\n          schema:\n            title: Created At\n            type: string\n            format: date-time\n          name: created_at\n          in: query\n        - required: false\n          schema:\n            title: Created At  Gt\n            type: string\n            format: date-time\n          name: created_at__gt\n          in: query\n        - required: false\n          schema:\n            title: Created At  Lt\n            type: string\n            format: date-time\n          name: created_at__lt\n          in: query\n        - required: false\n          schema:\n            title: Created At  Gte\n            type: string\n            format: date-time\n          name: created_at__gte\n          in: query\n        - required: false\n          schema:\n            title: Created At  Lte\n            type: string\n            format: date-time\n          name: created_at__lte\n          in: query\n        - required: false\n          schema:\n            title: Counterpart Name\n            type: string\n          name: counterpart_name\n          in: query\n        - required: false\n          schema:\n            title: Counterpart Name  Contains\n            type: string\n          name: counterpart_name__contains\n          in: query\n        - required: false\n          schema:\n            title: Counterpart Name  Icontains\n            type: string\n          name: counterpart_name__icontains\n          in: query\n        - required: false\n          schema:\n            title: Amount\n            type: integer\n          name: amount\n          in: query\n        - required: false\n          schema:\n            title: Amount  Gt\n            type: integer\n          name: amount__gt\n          in: query\n        - required: false\n          schema:\n            title: Amount  Lt\n            type: integer\n          name: amount__lt\n          in: query\n        - required: false\n          schema:\n            title: Amount  Gte\n            type: integer\n          name: amount__gte\n          in: query\n        - required: false\n          schema:\n            title: Amount  Lte\n            type: integer\n          name: amount__lte\n          in: query\n        - required: false\n          schema:\n            $ref: '#/components/schemas/ReceivablesStatusEnum'\n          name: status\n          in: query\n        - required: false\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/ReceivablesStatusEnum'\n          name: status__in\n          in: query\n        - required: false\n          schema:\n            title: Entity User Id\n            type: string\n            format: uuid\n          name: entity_user_id\n          in: query\n        - required: false\n          schema:\n            title: Entity User Id  In\n            type: array\n            items:\n              type: string\n              format: uuid\n          name: entity_user_id__in\n          in: query\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginationResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: 'Possible responses: `Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}`,`Action {action} for {object_type} not allowed`'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    post:\n      tags:\n        - Receivables\n      summary: Create New Receivable\n      operationId: create_new_receivable_v1_receivables_post\n      parameters:\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReceivableFacadeCreatePayload'\n        required: true\n      responses:\n        '201':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReceivableResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /receivables/variables:\n    get:\n      tags:\n        - Receivables\n      summary: Get Variables\n      description: Get a list of placeholders allowed to insert into an email template for customization\n      operationId: get_variables_v1_receivables_variables_get\n      parameters:\n        - required: true\n          schema:\n            $ref: '#/components/schemas/CounterpartType'\n          name: counterpart_type\n          in: query\n        - required: true\n          schema:\n            $ref: '#/components/schemas/ReceivableType'\n          name: receivable_type\n          in: query\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReceivableVariablesResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /receivables/{receivable_id}:\n    get:\n      tags:\n        - Receivables\n      summary: Get Receivable By Id\n      operationId: get_receivable_by_id_v1_receivables__receivable_id__get\n      parameters:\n        - required: true\n          schema:\n            title: Receivable Id\n            type: string\n            format: uuid\n          name: receivable_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReceivableResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    delete:\n      tags:\n        - Receivables\n      summary: Delete Receivable By Id\n      operationId: delete_receivable_by_id_v1_receivables__receivable_id__delete\n      parameters:\n        - required: true\n          schema:\n            title: Receivable Id\n            type: string\n            format: uuid\n          name: receivable_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '204':\n          description: Successful Response\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    patch:\n      tags:\n        - Receivables\n      summary: Update Receivable By Id\n      operationId: update_receivable_by_id_v1_receivables__receivable_id__patch\n      parameters:\n        - required: true\n          schema:\n            title: Receivable Id\n            type: string\n            format: uuid\n          name: receivable_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReceivableUpdatePayload'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReceivableResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /receivables/{receivable_id}/accept:\n    post:\n      tags:\n        - Receivables\n      summary: Accept Quote\n      operationId: accept_quote_v1_receivables__receivable_id__accept_post\n      parameters:\n        - required: true\n          schema:\n            title: Receivable Id\n            type: string\n            format: uuid\n          name: receivable_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              title: Payload\n              type: object\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /receivables/{receivable_id}/decline:\n    post:\n      tags:\n        - Receivables\n      summary: Decline Quote\n      operationId: decline_quote_v1_receivables__receivable_id__decline_post\n      parameters:\n        - required: true\n          schema:\n            title: Receivable Id\n            type: string\n            format: uuid\n          name: receivable_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReceivableDeclinePayload'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema: {}\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /receivables/{receivable_id}/issue:\n    post:\n      tags:\n        - Receivables\n      summary: Issue Receivable\n      operationId: issue_receivable_v1_receivables__receivable_id__issue_post\n      parameters:\n        - required: true\n          schema:\n            title: Receivable Id\n            type: string\n            format: uuid\n          name: receivable_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReceivableResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /receivables/{receivable_id}/pdf_link:\n    get:\n      tags:\n        - Receivables\n      summary: Get Pdf Link\n      operationId: get_pdf_link_v1_receivables__receivable_id__pdf_link_get\n      parameters:\n        - required: true\n          schema:\n            title: Receivable Id\n            type: string\n            format: uuid\n          name: receivable_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                title: Response Get Pdf Link V1 Receivables  Receivable Id  Pdf Link Get\n                type: string\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /receivables/{receivable_id}/preview:\n    post:\n      tags:\n        - Receivables\n      summary: Preview\n      operationId: preview_v1_receivables__receivable_id__preview_post\n      parameters:\n        - required: true\n          schema:\n            title: Receivable Id\n            type: string\n            format: uuid\n          name: receivable_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReceivablePreviewRequest'\n        required: true\n      responses:\n        '201':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReceivablePreviewResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /receivables/{receivable_id}/send:\n    post:\n      tags:\n        - Receivables\n      summary: Send\n      operationId: send_v1_receivables__receivable_id__send_post\n      parameters:\n        - required: true\n          schema:\n            title: Receivable Id\n            type: string\n            format: uuid\n          name: receivable_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReceivableSendRequest'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReceivableSendResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /recurrences:\n    get:\n      tags:\n        - Receivables\n      summary: Get All Recurrences\n      operationId: get_all_recurrences_v1_recurrences_get\n      parameters:\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAllRecurrences'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    post:\n      tags:\n        - Receivables\n      summary: Create Recurrence\n      operationId: create_recurrence_v1_recurrences_post\n      parameters:\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateRecurrencePayload'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Recurrence'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /recurrences/{recurrence_id}:\n    get:\n      tags:\n        - Receivables\n      summary: Get Recurrence\n      operationId: get_recurrence_v1_recurrences__recurrence_id__get\n      parameters:\n        - required: true\n          schema:\n            title: Recurrence Id\n            type: string\n            format: uuid\n          name: recurrence_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Recurrence'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    patch:\n      tags:\n        - Receivables\n      summary: Update Recurrence\n      operationId: update_recurrence_v1_recurrences__recurrence_id__patch\n      parameters:\n        - required: true\n          schema:\n            title: Recurrence Id\n            type: string\n            format: uuid\n          name: recurrence_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateRecurrencePayload'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Recurrence'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /recurrences/{recurrence_id}/cancel:\n    post:\n      tags:\n        - Receivables\n      summary: Delete Reccurence By Id\n      operationId: delete_reccurence_by_id_v1_recurrences__recurrence_id__cancel_post\n      parameters:\n        - required: true\n          schema:\n            title: Recurrence Id\n            type: string\n            format: uuid\n          name: recurrence_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '204':\n          description: Successful Response\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /roles:\n    get:\n      tags:\n        - Entities and users\n      summary: Get Roles\n      operationId: get_roles_v1_roles_get\n      parameters:\n        - description: Order by\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/OrderEnum'\n            description: Order by\n            default: asc\n          name: order\n          in: query\n        - description: Max is 100\n          required: false\n          schema:\n            title: Limit\n            maximum: 100\n            minimum: 1\n            type: integer\n            description: Max is 100\n            default: 100\n          name: limit\n          in: query\n        - description: A token, obtained from previous page. Prior over other filters\n          required: false\n          schema:\n            title: Pagination Token\n            type: string\n            description: A token, obtained from previous page. Prior over other filters\n          name: pagination_token\n          in: query\n        - description: Allowed sort fields\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/api__v1__roles__pagination__CursorFields'\n            description: Allowed sort fields\n          name: sort\n          in: query\n        - required: false\n          schema:\n            title: Name\n            type: string\n          name: name\n          in: query\n        - required: false\n          schema:\n            title: Created At\n            type: string\n            format: date-time\n          name: created_at\n          in: query\n        - required: false\n          schema:\n            title: Created At  Gt\n            type: string\n            format: date-time\n          name: created_at__gt\n          in: query\n        - required: false\n          schema:\n            title: Created At  Lt\n            type: string\n            format: date-time\n          name: created_at__lt\n          in: query\n        - required: false\n          schema:\n            title: Created At  Gte\n            type: string\n            format: date-time\n          name: created_at__gte\n          in: query\n        - required: false\n          schema:\n            title: Created At  Lte\n            type: string\n            format: date-time\n          name: created_at__lte\n          in: query\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 206fbbe7-f795-4f60-b95e-f7b99bd34d54\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RolePaginationResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    post:\n      tags:\n        - Entities and users\n      summary: Create Role\n      operationId: create_role_v1_roles_post\n      parameters:\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateRoleRequest'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoleResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /roles/search:\n    post:\n      tags:\n        - Entities and users\n      summary: Search Roles\n      operationId: search_roles_v1_roles_search_post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SearchRolesPayload'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                title: Response Search Roles V1 Roles Search Post\n                type: array\n                items:\n                  $ref: '#/components/schemas/RoleResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /roles/{role_id}:\n    get:\n      tags:\n        - Entities and users\n      summary: Get Role By Id\n      operationId: get_role_by_id_v1_roles__role_id__get\n      parameters:\n        - required: true\n          schema:\n            title: Role Id\n            type: string\n            format: uuid\n          name: role_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoleResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    patch:\n      tags:\n        - Entities and users\n      summary: Update Role By Id\n      operationId: update_role_by_id_v1_roles__role_id__patch\n      parameters:\n        - required: true\n          schema:\n            title: Role Id\n            type: string\n            format: uuid\n          name: role_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateRoleRequest'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoleResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /settings:\n    get:\n      tags:\n        - Entities and users\n      summary: Get Partner Project Settings\n      operationId: get_partner_project_settings_v1_settings_get\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PartnerProjectSettingsResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    patch:\n      tags:\n        - Entities and users\n      summary: Save Or Replace Partner Project Settings\n      operationId: save_or_replace_partner_project_settings_v1_settings_patch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PartnerProjectSettingsPayload'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PartnerProjectSettingsResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /tags:\n    get:\n      tags:\n        - Payables\n      summary: Get Tags\n      description: |-\n        Get a list of all tags that can be assigned to payables.\n            Tags can be used, for example, as trigger conditions in payable approval workflows.\n      operationId: get_tags_tags_get\n      parameters:\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagsResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    post:\n      tags:\n        - Payables\n      summary: Create Tag\n      description: |-\n        Create a new tag for use in payables. The tag name must be unique.\n            Tag names are case-sensitive, that is `Marketing` and `marketing` are two different tags.\n\n\n        The response returns an auto-generated ID assigned to this tag.\n        To assign this tag to a payable, send the tag ID in the `tag_ids` list when creating or updating a payable.\n      operationId: create_tag_tags_post\n      parameters:\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TagCreateOrUpdateSchema'\n        required: true\n      responses:\n        '201':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagReadSchema'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /tags/{tag_id}:\n    get:\n      tags:\n        - Payables\n      summary: Get Tag\n      description: Get information about a tag with the given ID.\n      operationId: get_tag_tags__tag_id__get\n      parameters:\n        - required: true\n          schema:\n            title: Tag Id\n            type: string\n            format: uuid\n          name: tag_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagReadSchema'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    delete:\n      tags:\n        - Payables\n      summary: Delete Tag\n      description: Delete a tag with the given ID. This tag will be automatically deleted from all payables where it's used.\n      operationId: delete_tag_tags__tag_id__delete\n      parameters:\n        - required: true\n          schema:\n            title: Tag Id\n            type: string\n            format: uuid\n          name: tag_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '204':\n          description: Successful Response\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    patch:\n      tags:\n        - Payables\n      summary: Update Tag\n      description: |-\n        Change the tag name. The new name must be unique among existing tags.\n            Tag names are case-sensitive, that is `Marketing` and `marketing` are two different tags.\n      operationId: update_tag_tags__tag_id__patch\n      parameters:\n        - required: true\n          schema:\n            title: Tag Id\n            type: string\n            format: uuid\n          name: tag_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TagCreateOrUpdateSchema'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagReadSchema'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /todo_tasks:\n    get:\n      tags:\n        - Payables\n      summary: Get All Todo Tasks Assigned\n      description: Get all assigned todo tasks\n      operationId: get_all_todo_tasks_assigned_todo_tasks_get\n      parameters:\n        - required: true\n          schema:\n            title: Include Related Object Information\n            type: boolean\n          name: include_related_object_information\n          in: query\n        - description: 'Sort order: `asc` (ascending) or `desc` (descending).'\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/OrderEnum'\n            description: 'Sort order: `asc` (ascending) or `desc` (descending).'\n            default: asc\n          name: order\n          in: query\n        - description: The maximum number of results to return per page.\n          required: false\n          schema:\n            title: Limit\n            maximum: 100\n            minimum: 1\n            type: integer\n            description: The maximum number of results to return per page.\n            default: 100\n          name: limit\n          in: query\n        - description: The pagination token to access the next or previous page of results. If `pagination_token` is specified, the `sort`, `order`, and filtering parameters are ignored.\n          required: false\n          schema:\n            title: Pagination Token\n            type: string\n            description: The pagination token to access the next or previous page of results. If `pagination_token` is specified, the `sort`, `order`, and filtering parameters are ignored.\n          name: pagination_token\n          in: query\n        - description: The field by which the results will be sorted.\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/api__v1__todo__pagination__CursorFields'\n            description: The field by which the results will be sorted.\n          name: sort\n          in: query\n        - required: false\n          schema:\n            $ref: '#/components/schemas/ObjectType'\n          name: object_type\n          in: query\n        - required: false\n          schema:\n            title: Object Id\n            type: string\n            format: uuid\n          name: object_id\n          in: query\n        - required: false\n          schema:\n            title: Object Id  Isnull\n            type: string\n          name: object_id__isnull\n          in: query\n        - required: false\n          schema:\n            $ref: '#/components/schemas/TodoTaskStatusEnum'\n          name: status\n          in: query\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedTodoTask'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: 'Possible responses: `Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}`,`Action {action} for {object_type} not allowed`'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /todo_tasks/counters:\n    get:\n      tags:\n        - Payables\n      summary: How Many Tasks Do I Have\n      description: Tasks count\n      operationId: how_many_tasks_do_i_have_todo_tasks_counters_get\n      parameters:\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                title: Response How Many Tasks Do I Have Todo Tasks Counters Get\n                type: array\n                items:\n                  $ref: '#/components/schemas/TasksCountSchema'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: 'Possible responses: `Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}`,`Action {action} for {object_type} not allowed`'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /todo_tasks/{todo_task_id}:\n    get:\n      tags:\n        - Payables\n      summary: Read One Todo Task\n      description: Read one todo task\n      operationId: read_one_todo_task_todo_tasks__todo_task_id__get\n      parameters:\n        - required: true\n          schema:\n            title: Todo Task Id\n            type: string\n            format: uuid\n          name: todo_task_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TodoTask'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: 'Possible responses: `Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}`,`Action {action} for {object_type} not allowed`'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    patch:\n      tags:\n        - Payables\n      summary: Update Task\n      description: Update todo task\n      operationId: update_task_todo_tasks__todo_task_id__patch\n      parameters:\n        - required: true\n          schema:\n            title: Todo Task Id\n            type: string\n            format: uuid\n          name: todo_task_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateTodoTask'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TodoTask'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: 'Possible responses: `Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}`,`Action {action} for {object_type} not allowed`'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /vat_classes:\n    get:\n      tags:\n        - Receivables\n      summary: Get Vat Classes\n      operationId: get_vat_classes_v1_vat_classes_get\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VatClassListResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    post:\n      tags:\n        - Receivables\n      summary: Create Vat Class\n      operationId: create_vat_class_v1_vat_classes_post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VatClassRequest'\n        required: true\n      responses:\n        '201':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VatClassResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /vat_classes/{vat_class_id}:\n    get:\n      tags:\n        - Receivables\n      summary: Get Vat Class By Id\n      operationId: get_vat_class_by_id_v1_vat_classes__vat_class_id__get\n      parameters:\n        - required: true\n          schema:\n            title: Vat Class Id\n            type: string\n            format: uuid\n          name: vat_class_id\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VatClassResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /webhook_settings:\n    get:\n      tags:\n        - Events\n      summary: Get All\n      operationId: get_all_v1_webhook_settings_get\n      parameters:\n        - required: false\n          schema:\n            $ref: '#/components/schemas/ObjectType'\n          name: object_type\n          in: query\n        - description: Order by\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/OrderEnum'\n            description: Order by\n            default: asc\n          name: order\n          in: query\n        - description: Max is 100\n          required: false\n          schema:\n            title: Limit\n            maximum: 100\n            minimum: 1\n            type: integer\n            description: Max is 100\n            default: 100\n          name: limit\n          in: query\n        - description: A token, obtained from previous page. Prior over other filters\n          required: false\n          schema:\n            title: Pagination Token\n            type: string\n            description: A token, obtained from previous page. Prior over other filters\n          name: pagination_token\n          in: query\n        - description: Allowed sort fields\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/api__v1__webhook_settings__pagination__CursorFields'\n            description: Allowed sort fields\n          name: sort\n          in: query\n        - required: false\n          schema:\n            title: Created At\n            type: string\n            format: date-time\n          name: created_at\n          in: query\n        - required: false\n          schema:\n            title: Created At  Gt\n            type: string\n            format: date-time\n          name: created_at__gt\n          in: query\n        - required: false\n          schema:\n            title: Created At  Lt\n            type: string\n            format: date-time\n          name: created_at__lt\n          in: query\n        - required: false\n          schema:\n            title: Created At  Gte\n            type: string\n            format: date-time\n          name: created_at__gte\n          in: query\n        - required: false\n          schema:\n            title: Created At  Lte\n            type: string\n            format: date-time\n          name: created_at__lte\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WebhookSettingsByObjectTypePaginationResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    post:\n      tags:\n        - Events\n      summary: Post\n      operationId: post_v1_webhook_settings_post\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateWebhookRequest'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WebhookSettingsResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      callbacks:\n        webhook_notification:\n          '{$request.body.url}':\n            post:\n              summary: Webhook Notification\n              operationId: webhook_notification__request_body_url__post\n              requestBody:\n                content:\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/api__v1__webhook_settings__callback__EventPayload'\n                required: true\n              responses:\n                '200':\n                  description: Successful Response\n                  content:\n                    application/json:\n                      schema: {}\n                '422':\n                  description: Validation Error\n                  content:\n                    application/json:\n                      schema:\n                        $ref: '#/components/schemas/HTTPValidationError'\n      security:\n        - HTTPBearer: []\n  /webhook_settings/{webhook_id}:\n    get:\n      tags:\n        - Events\n      summary: Get\n      operationId: get_v1_webhook_settings__webhook_id__get\n      parameters:\n        - required: true\n          schema:\n            title: Webhook Id\n            type: string\n            format: uuid\n          name: webhook_id\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WebhookSettingsResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    delete:\n      tags:\n        - Events\n      summary: Delete\n      operationId: delete_v1_webhook_settings__webhook_id__delete\n      parameters:\n        - required: true\n          schema:\n            title: Webhook Id\n            type: string\n            format: uuid\n          name: webhook_id\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MessageResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    patch:\n      tags:\n        - Events\n      summary: Update Webhook\n      operationId: update_webhook_v1_webhook_settings__webhook_id__patch\n      parameters:\n        - required: true\n          schema:\n            title: Webhook Id\n            type: string\n            format: uuid\n          name: webhook_id\n          in: path\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WebhookUpdateRequest'\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WebhookSettingsResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /webhooks:\n    get:\n      tags:\n        - Events\n      summary: Get All\n      operationId: get_all_v1_webhooks_get\n      parameters:\n        - required: false\n          schema:\n            $ref: '#/components/schemas/ObjectType'\n          name: object_type\n          in: query\n        - required: false\n          schema:\n            title: Event Id\n            type: string\n            format: uuid\n          name: event_id\n          in: query\n        - description: Order by\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/OrderEnum'\n            description: Order by\n            default: asc\n          name: order\n          in: query\n        - description: Max is 100\n          required: false\n          schema:\n            title: Limit\n            maximum: 100\n            minimum: 1\n            type: integer\n            description: Max is 100\n            default: 100\n          name: limit\n          in: query\n        - description: A token, obtained from previous page. Prior over other filters\n          required: false\n          schema:\n            title: Pagination Token\n            type: string\n            description: A token, obtained from previous page. Prior over other filters\n          name: pagination_token\n          in: query\n        - description: Allowed sort fields\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/api__v1__webhooks__pagination__CursorFields'\n            description: Allowed sort fields\n          name: sort\n          in: query\n        - required: false\n          schema:\n            title: Created At\n            type: string\n            format: date-time\n          name: created_at\n          in: query\n        - required: false\n          schema:\n            title: Created At  Gt\n            type: string\n            format: date-time\n          name: created_at__gt\n          in: query\n        - required: false\n          schema:\n            title: Created At  Lt\n            type: string\n            format: date-time\n          name: created_at__lt\n          in: query\n        - required: false\n          schema:\n            title: Created At  Gte\n            type: string\n            format: date-time\n          name: created_at__gte\n          in: query\n        - required: false\n          schema:\n            title: Created At  Lte\n            type: string\n            format: date-time\n          name: created_at__lte\n          in: query\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 0b8b0dcd-e324-476f-ab08-381345f289b0\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WebhooksPaginationResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '416':\n          description: Requested Range Not Satisfiable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /workflows:\n    get:\n      tags:\n        - Payables\n      summary: Read Workflows\n      description: Get workflows\n      operationId: read_workflows_workflows_get\n      parameters:\n        - description: 'Sort order: `asc` (ascending) or `desc` (descending).'\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/OrderEnum'\n            description: 'Sort order: `asc` (ascending) or `desc` (descending).'\n            default: asc\n          name: order\n          in: query\n        - description: The maximum number of results to return per page.\n          required: false\n          schema:\n            title: Limit\n            maximum: 100\n            minimum: 1\n            type: integer\n            description: The maximum number of results to return per page.\n            default: 100\n          name: limit\n          in: query\n        - description: The pagination token to access the next or previous page of results. If `pagination_token` is specified, the `sort`, `order`, and filtering parameters are ignored.\n          required: false\n          schema:\n            title: Pagination Token\n            type: string\n            description: The pagination token to access the next or previous page of results. If `pagination_token` is specified, the `sort`, `order`, and filtering parameters are ignored.\n          name: pagination_token\n          in: query\n        - description: The field by which the results will be sorted.\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/api__v1__workflows__pagination__CursorFields'\n            description: The field by which the results will be sorted.\n          name: sort\n          in: query\n        - required: false\n          schema:\n            $ref: '#/components/schemas/ObjectType'\n          name: object_type\n          in: query\n        - required: false\n          schema:\n            title: Policy Name\n            type: string\n          name: policy_name\n          in: query\n        - required: false\n          schema:\n            title: Created By\n            type: string\n            format: uuid\n          name: created_by\n          in: query\n        - required: false\n          schema:\n            title: Created At\n            type: string\n            format: date-time\n          name: created_at\n          in: query\n        - required: false\n          schema:\n            title: Created At  Gt\n            type: string\n            format: date-time\n          name: created_at__gt\n          in: query\n        - required: false\n          schema:\n            title: Created At  Lt\n            type: string\n            format: date-time\n          name: created_at__lt\n          in: query\n        - required: false\n          schema:\n            title: Created At  Gte\n            type: string\n            format: date-time\n          name: created_at__gte\n          in: query\n        - required: false\n          schema:\n            title: Created At  Lte\n            type: string\n            format: date-time\n          name: created_at__lte\n          in: query\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowsPaginationResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    post:\n      tags:\n        - Payables\n      summary: Create New Workflow\n      description: Create new workflow\n      operationId: create_new_workflow_workflows_post\n      parameters:\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateWorkflowSchema'\n            examples:\n              minimal:\n                summary: Minimal example\n                value:\n                  policy_name: Approve everything\n                  policy_description: All newly added payables require a finance manager's approval\n                  workflow:\n                    trigger:\n                      version: 1\n                      object_type: payable\n                      action: create\n                      currency: EUR\n                    functions:\n                      - call:\n                          method: Payables.request_approval_by_entity_user\n                          params:\n                            entity_user_ids:\n                              - 5f3196d2-48ce-4c1e-b29e-c3e5d1fb7a13\n              all fields:\n                summary: All possible fields\n                description: This example includes all possible trigger conditions. You can remove those you don't need.\n                value:\n                  policy_name: Travel expense approval\n                  policy_description: ''\n                  workflow:\n                    trigger:\n                      version: 1\n                      object_type: payable\n                      action: create\n                      currency: EUR\n                      amount:\n                        gte: 1\n                        lte: 50000\n                      counterparts:\n                        - bbe12a96-a09e-45ef-b407-6fc914329c32\n                        - 21f69def-8e5c-4e45-bc15-7bf790b4e32a\n                      created_by_users:\n                        - 6d16b0b3-ebbe-49f1-a1e7-5d80597ec068\n                        - 8bfeb795-b903-4db5-b601-44692efdebe4\n                      created_by_roles:\n                        - f601d398-3e0a-4919-b249-79003947be10\n                        - ac87f0c1-34c6-48de-9869-3bf3ef94fe02\n                      statuses:\n                        - paid\n                        - waiting_to_be_paid\n                      tags:\n                        - travel expenses\n                        - marketing\n                      custom_params:\n                        comes_from_email: true\n                        comes_from_upload: true\n                        previously_approved: true\n                    functions:\n                      - call:\n                          method: Payables.request_approval_by_entity_user\n                          params:\n                            entity_user_ids:\n                              - 5f3196d2-48ce-4c1e-b29e-c3e5d1fb7a13\n                              - 7a3696a5-56ef-5b43-af9f-2ae5d1fb7b25\n                            entity_users_to_approve: 2\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowResponseSchema'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '409':\n          description: Biz logic error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /workflows/pipelines:\n    get:\n      tags:\n        - Payables\n      summary: Get Pipelines\n      description: Get pipelines\n      operationId: get_pipelines_workflows_pipelines_get\n      parameters:\n        - description: 'Sort order: `asc` (ascending) or `desc` (descending).'\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/OrderEnum'\n            description: 'Sort order: `asc` (ascending) or `desc` (descending).'\n            default: asc\n          name: order\n          in: query\n        - description: The maximum number of results to return per page.\n          required: false\n          schema:\n            title: Limit\n            maximum: 100\n            minimum: 1\n            type: integer\n            description: The maximum number of results to return per page.\n            default: 100\n          name: limit\n          in: query\n        - description: The pagination token to access the next or previous page of results. If `pagination_token` is specified, the `sort`, `order`, and filtering parameters are ignored.\n          required: false\n          schema:\n            title: Pagination Token\n            type: string\n            description: The pagination token to access the next or previous page of results. If `pagination_token` is specified, the `sort`, `order`, and filtering parameters are ignored.\n          name: pagination_token\n          in: query\n        - description: The field by which the results will be sorted.\n          required: false\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/api__v1__workflows__pagination__CursorFields'\n            description: The field by which the results will be sorted.\n          name: sort\n          in: query\n        - required: false\n          schema:\n            $ref: '#/components/schemas/ObjectType'\n          name: object_type\n          in: query\n        - required: false\n          schema:\n            $ref: '#/components/schemas/biz__objects__workflows__enums__WorkflowPipelineStatusEnum'\n          name: status\n          in: query\n        - required: false\n          schema:\n            title: Created At\n            type: string\n            format: date-time\n          name: created_at\n          in: query\n        - required: false\n          schema:\n            title: Created At  Gt\n            type: string\n            format: date-time\n          name: created_at__gt\n          in: query\n        - required: false\n          schema:\n            title: Created At  Lt\n            type: string\n            format: date-time\n          name: created_at__lt\n          in: query\n        - required: false\n          schema:\n            title: Created At  Gte\n            type: string\n            format: date-time\n          name: created_at__gte\n          in: query\n        - required: false\n          schema:\n            title: Created At  Lte\n            type: string\n            format: date-time\n          name: created_at__lte\n          in: query\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PipelinesPaginationResponse'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /workflows/pipelines/{pipeline_id}:\n    get:\n      tags:\n        - Payables\n      summary: Get Single Pipeline\n      description: Get pipeline\n      operationId: get_single_pipeline_workflows_pipelines__pipeline_id__get\n      parameters:\n        - required: true\n          schema:\n            title: Pipeline Id\n            type: string\n            format: uuid\n          name: pipeline_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PipelineResponseSchema'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /workflows/{workflow_id}:\n    get:\n      tags:\n        - Payables\n      summary: Read Single Workflow\n      description: Get workflow\n      operationId: read_single_workflow_workflows__workflow_id__get\n      parameters:\n        - required: true\n          schema:\n            title: Workflow Id\n            type: string\n            format: uuid\n          name: workflow_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowResponseSchema'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n    delete:\n      tags:\n        - Payables\n      summary: Delete Workflow\n      description: Delete workflow\n      operationId: delete_workflow_workflows__workflow_id__delete\n      parameters:\n        - required: true\n          schema:\n            title: Workflow Id\n            type: string\n            format: uuid\n          name: workflow_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WorkflowResponseSchema'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\n  /workflows/{workflow_id}/pipelines:\n    get:\n      tags:\n        - Payables\n      summary: Read Pipelines By Workflow Id\n      description: Get pipelines by workflow ID\n      operationId: read_pipelines_by_workflow_id_workflows__workflow_id__pipelines_get\n      parameters:\n        - required: true\n          schema:\n            title: Workflow Id\n            type: string\n            format: uuid\n          name: workflow_id\n          in: path\n        - description: monite entity_id\n          required: true\n          schema:\n            title: X-Monite-Entity-Id\n            type: string\n            description: monite entity_id\n            format: uuid\n          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4\n          name: x-monite-entity-id\n          in: header\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                title: Response Read Pipelines By Workflow Id Workflows  Workflow Id  Pipelines Get\n                type: array\n                items:\n                  $ref: '#/components/schemas/PipelineResponseSchema'\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '403':\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '405':\n          description: Method Not Allowed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HTTPValidationError'\n        '500':\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorSchemaResponse'\n      security:\n        - HTTPBearer: []\ncomponents:\n  schemas:\n    AllowedCountriesInternalCodes:\n      enum:\n        - AF\n        - AX\n        - AL\n        - DZ\n        - AS\n        - AD\n        - AO\n        - AI\n        - AQ\n        - AG\n        - AR\n        - AM\n        - AW\n        - AU\n        - AT\n        - AZ\n        - BS\n        - BH\n        - BD\n        - BB\n        - BY\n        - BE\n        - BZ\n        - BJ\n        - BM\n        - BT\n        - BO\n        - BA\n        - BW\n        - BV\n        - BR\n        - IO\n        - BN\n        - BG\n        - BF\n        - BI\n        - KH\n        - CM\n        - CA\n        - CV\n        - KY\n        - CF\n        - TD\n        - CL\n        - CN\n        - CX\n        - CC\n        - CO\n        - KM\n        - CG\n        - CD\n        - CK\n        - CR\n        - CI\n        - HR\n        - CU\n        - CY\n        - CZ\n        - DK\n        - DJ\n        - DM\n        - DO\n        - EC\n        - EG\n        - SV\n        - GQ\n        - ER\n        - EE\n        - ET\n        - FK\n        - FO\n        - FJ\n        - FI\n        - FR\n        - GF\n        - PF\n        - TF\n        - GA\n        - GM\n        - GE\n        - DE\n        - GH\n        - GI\n        - GR\n        - GL\n        - GD\n        - GP\n        - GU\n        - GT\n        - GG\n        - GN\n        - GW\n        - GY\n        - HT\n        - HM\n        - VA\n        - HN\n        - HK\n        - HU\n        - IS\n        - IN\n        - ID\n        - IR\n        - IQ\n        - IE\n        - IM\n        - IL\n        - IT\n        - JM\n        - JP\n        - JE\n        - JO\n        - KZ\n        - KE\n        - KI\n        - KP\n        - KR\n        - KW\n        - KG\n        - LA\n        - LV\n        - LB\n        - LS\n        - LR\n        - LY\n        - LI\n        - LT\n        - LU\n        - MO\n        - MK\n        - MG\n        - MW\n        - MY\n        - MV\n        - ML\n        - MT\n        - MH\n        - MQ\n        - MR\n        - MU\n        - YT\n        - MX\n        - FM\n        - MD\n        - MC\n        - MN\n        - MS\n        - MA\n        - MZ\n        - MM\n        - NA\n        - NR\n        - NP\n        - NL\n        - AN\n        - NC\n        - NZ\n        - NI\n        - NE\n        - NG\n        - NU\n        - NF\n        - MP\n        - 'NO'\n        - OM\n        - PK\n        - PW\n        - PS\n        - PA\n        - PG\n        - PY\n        - PE\n        - PH\n        - PN\n        - PL\n        - PT\n        - PR\n        - QA\n        - RE\n        - RO\n        - RU\n        - RW\n        - SH\n        - KN\n        - LC\n        - PM\n        - VC\n        - WS\n        - SM\n        - ST\n        - SA\n        - SN\n        - CS\n        - SC\n        - SL\n        - SG\n        - SK\n        - SI\n        - SB\n        - SO\n        - ZA\n        - GS\n        - ES\n        - LK\n        - SD\n        - SR\n        - SJ\n        - SZ\n        - SE\n        - CH\n        - SY\n        - TW\n        - TJ\n        - TZ\n        - TH\n        - TL\n        - TG\n        - TK\n        - TO\n        - TT\n        - TN\n        - TR\n        - TM\n        - TC\n        - TV\n        - UG\n        - UA\n        - AE\n        - GB\n        - US\n        - UM\n        - UY\n        - UZ\n        - VU\n        - VE\n        - VN\n        - VG\n        - VI\n        - WF\n        - EH\n        - YE\n        - ZM\n        - ZW\n      type: string\n      description: An enumeration.\n    AllowedCountriesCodes:\n      enum:\n        - AF\n        - AX\n        - AL\n        - DZ\n        - AS\n        - AD\n        - AO\n        - AI\n        - AQ\n        - AG\n        - AR\n        - AM\n        - AW\n        - AU\n        - AT\n        - AZ\n        - BS\n        - BH\n        - BD\n        - BB\n        - BY\n        - BE\n        - BZ\n        - BJ\n        - BM\n        - BT\n        - BO\n        - BA\n        - BW\n        - BV\n        - BR\n        - IO\n        - BN\n        - BG\n        - BF\n        - BI\n        - KH\n        - CM\n        - CA\n        - CV\n        - KY\n        - CF\n        - TD\n        - CL\n        - CN\n        - CX\n        - CC\n        - CO\n        - KM\n        - CG\n        - CD\n        - CK\n        - CR\n        - CI\n        - HR\n        - CU\n        - CY\n        - CZ\n        - DK\n        - DJ\n        - DM\n        - DO\n        - EC\n        - EG\n        - SV\n        - GQ\n        - ER\n        - EE\n        - ET\n        - FK\n        - FO\n        - FJ\n        - FI\n        - FR\n        - GF\n        - PF\n        - TF\n        - GA\n        - GM\n        - GE\n        - DE\n        - GH\n        - GI\n        - GR\n        - GL\n        - GD\n        - GP\n        - GU\n        - GT\n        - GG\n        - GN\n        - GW\n        - GY\n        - HT\n        - HM\n        - VA\n        - HN\n        - HK\n        - HU\n        - IS\n        - IN\n        - ID\n        - IR\n        - IQ\n        - IE\n        - IM\n        - IL\n        - IT\n        - JM\n        - JP\n        - JE\n        - JO\n        - KZ\n        - KE\n        - KI\n        - KP\n        - KR\n        - KW\n        - KG\n        - LA\n        - LV\n        - LB\n        - LS\n        - LR\n        - LY\n        - LI\n        - LT\n        - LU\n        - MO\n        - MK\n        - MG\n        - MW\n        - MY\n        - MV\n        - ML\n        - MT\n        - MH\n        - MQ\n        - MR\n        - MU\n        - YT\n        - MX\n        - FM\n        - MD\n        - MC\n        - MN\n        - MS\n        - MA\n        - MZ\n        - MM\n        - NA\n        - NR\n        - NP\n        - NL\n        - AN\n        - NC\n        - NZ\n        - NI\n        - NE\n        - NG\n        - NU\n        - NF\n        - MP\n        - 'NO'\n        - OM\n        - PK\n        - PW\n        - PS\n        - PA\n        - PG\n        - PY\n        - PE\n        - PH\n        - PN\n        - PL\n        - PT\n        - PR\n        - QA\n        - RE\n        - RO\n        - RU\n        - RW\n        - SH\n        - KN\n        - LC\n        - PM\n        - VC\n        - WS\n        - SM\n        - ST\n        - SA\n        - SN\n        - CS\n        - SC\n        - SL\n        - SG\n        - SK\n        - SI\n        - SB\n        - SO\n        - ZA\n        - GS\n        - ES\n        - LK\n        - SD\n        - SR\n        - SJ\n        - SZ\n        - SE\n        - CH\n        - SY\n        - TW\n        - TJ\n        - TZ\n        - TH\n        - TL\n        - TG\n        - TK\n        - TO\n        - TT\n        - TN\n        - TR\n        - TM\n        - TC\n        - TV\n        - UG\n        - UA\n        - AE\n        - GB\n        - US\n        - UM\n        - UY\n        - UZ\n        - VU\n        - VE\n        - VN\n        - VG\n        - VI\n        - WF\n        - EH\n        - YE\n        - ZM\n        - ZW\n      type: string\n      description: An enumeration.\n    CommercialConditionRequest:\n      required:\n        - name\n        - description\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n    CommercialConditionResponse:\n      required:\n        - name\n        - description\n        - entity_id\n        - created_at\n        - updated_at\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        id:\n          type: string\n          format: uuid\n        entity_id:\n          type: string\n          format: uuid\n        entity_user_id:\n          type: string\n          format: uuid\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n    CommercialConditionUpdate:\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n    CounterpartAddress:\n      required:\n        - country\n        - city\n        - postal_code\n        - state\n        - line1\n      type: object\n      properties:\n        country:\n          allOf:\n            - $ref: '#/components/schemas/AllowedCountriesCodes'\n          description: Two-letter ISO country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).\n          example: DE\n        city:\n          type: string\n          description: City name.\n          example: Berlin\n        postal_code:\n          type: string\n          description: ZIP or postal code.\n          example: '10115'\n        state:\n          type: string\n          description: State, region, province, or county.\n        line1:\n          type: string\n          description: Street address.\n          example: Flughafenstrasse 52\n        line2:\n          type: string\n          description: Additional address information (if any).\n      description: Address information.\n    CounterpartBankAccount:\n      type: object\n      properties:\n        iban:\n          maxLength: 34\n          type: string\n        bic:\n          maxLength: 11\n          type: string\n        name:\n          maxLength: 200\n          type: string\n    CounterpartBankAccountResponse:\n      required:\n        - id\n        - counterpart_id\n      type: object\n      properties:\n        iban:\n          maxLength: 34\n          type: string\n        bic:\n          maxLength: 11\n          type: string\n        name:\n          maxLength: 200\n          type: string\n        id:\n          type: string\n          format: uuid\n        counterpart_id:\n          type: string\n          format: uuid\n    CounterpartContactResponse:\n      required:\n        - first_name\n        - last_name\n        - email\n        - phone\n        - is_default\n        - address\n        - id\n        - counterpart_id\n      type: object\n      properties:\n        first_name:\n          type: string\n          description: The first name of a contact person.\n          example: Mary\n        last_name:\n          type: string\n          description: The last name of a contact person.\n          example: O'Brien\n        email:\n          type: string\n          description: The email address of a contact person.\n          format: email\n          example: contact@example.org\n        phone:\n          type: string\n          description: The phone number of a contact person\n          example: '5551235476'\n        is_default:\n          type: boolean\n          description: Specifies if this contact person is the default one in case the organization has multiple contacts.\n        address:\n          allOf:\n            - $ref: '#/components/schemas/CounterpartAddress'\n          description: The address of a contact person.\n        title:\n          type: string\n          description: 'The title or honorific of a contact person. Examples: Mr., Ms., Dr., Prof.'\n          example: Ms.\n        id:\n          type: string\n          format: uuid\n        counterpart_id:\n          type: string\n          format: uuid\n      description: The contact person for an organization.\n    CounterpartCreateIndividualPayload:\n      required:\n        - type\n        - individual\n      type: object\n      properties:\n        type:\n          enum:\n            - individual\n          type: string\n          description: Must be \"individual\".\n          example: individual\n        individual:\n          $ref: '#/components/schemas/CounterpartIndividual'\n      description: This schema is used to create counterparts that are individuals (natural persons).\n    CounterpartCreateOrganizationPayload:\n      required:\n        - type\n        - organization\n      type: object\n      properties:\n        type:\n          enum:\n            - organization\n          type: string\n          description: Must be \"organization\".\n          example: organization\n        organization:\n          $ref: '#/components/schemas/CounterpartOrganization'\n      description: This schema is used to create counterparts that are organizations (juridical persons).\n    CounterpartCreatePayload:\n      anyOf:\n        - $ref: '#/components/schemas/CounterpartCreateOrganizationPayload'\n        - $ref: '#/components/schemas/CounterpartCreateIndividualPayload'\n      description: |-\n        This schema is used to create new counterparts (either organizations or individuals).\n        The counterpart type is specified by the `type` property. Depending on the `type`,\n        you need to provide the data for either the `individual` or `organization` property.\n    CounterpartIndividual:\n      required:\n        - first_name\n        - last_name\n        - is_vendor\n        - is_customer\n        - residential_address\n      type: object\n      properties:\n        first_name:\n          type: string\n          description: The person's first name.\n          example: Adnan\n        last_name:\n          type: string\n          description: The person's last name.\n          example: Singh\n        title:\n          type: string\n          description: 'The person''s title or honorific. Examples: Mr., Ms., Dr., Prof.'\n          example: Mr.\n        is_vendor:\n          type: boolean\n          description: Indicates if the counterpart is a vendor.\n        is_customer:\n          type: boolean\n          description: Indicates if the counterpart is a customer.\n        phone:\n          type: string\n          description: The person's phone number.\n          example: '5553211234'\n        email:\n          type: string\n          description: The person's email address.\n          example: asingh@example.net\n        tax_id:\n          type: string\n          description: The person's Tax ID.\n          example: '1234567'\n        residential_address:\n          allOf:\n            - $ref: '#/components/schemas/CounterpartAddress'\n          description: The person's address.\n      description: Represents counterparts that are individuals (natural persons).\n    CounterpartIndividualResponse:\n      required:\n        - id\n        - created_at\n        - updated_at\n        - type\n        - individual\n      type: object\n      properties:\n        id:\n          type: string\n          description: Unique ID of the counterpart.\n          format: uuid\n        created_at:\n          type: string\n          description: Date and time when the counterpart was created. Timestamps follow the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) standard.\n          format: date-time\n        updated_at:\n          type: string\n          description: Date and time when the counterpart was last updated. Timestamps follow the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) standard.\n          format: date-time\n        type:\n          allOf:\n            - $ref: '#/components/schemas/CounterpartType'\n          description: 'The counterpart type: `organization` (juridical person) or `individual` (natural person).'\n        created_automatically:\n          type: boolean\n          description: '`true` if the counterpart was created automatically by Monite when processing incoming invoices with OCR. `false` if the counterpart was created by the API client.'\n          default: false\n        individual:\n          $ref: '#/components/schemas/CounterpartIndividual'\n      description: Represents counterparts that are individuals (natural persons).\n    CounterpartOrganization:\n      required:\n        - legal_name\n        - vat_number\n        - is_vendor\n        - is_customer\n        - registered_address\n        - contacts\n      type: object\n      properties:\n        legal_name:\n          type: string\n          description: The legal name of the organization.\n          example: Acme Inc.\n        vat_number:\n          type: string\n          description: The VAT number of the organization.\n          example: '101002749'\n        is_vendor:\n          type: boolean\n          description: Indicates if the counterpart is a vendor.\n        is_customer:\n          type: boolean\n          description: Indicates if the counterpart is a customer.\n        phone:\n          type: string\n          description: The phone number of the organization\n          example: '5551231234'\n        email:\n          type: string\n          description: The email address of the organization\n          example: acme@example.com\n        registered_address:\n          allOf:\n            - $ref: '#/components/schemas/CounterpartAddress'\n          description: The address of the organization.\n        contacts:\n          type: array\n          items:\n            $ref: '#/components/schemas/CreateCounterpartContactPayload'\n          description: An array of contacts for this organization.\n      description: Represents counterparts that are organizations (juridical persons).\n    CounterpartOrganizationResponse:\n      required:\n        - id\n        - created_at\n        - updated_at\n        - type\n        - organization\n      type: object\n      properties:\n        id:\n          type: string\n          description: Unique ID of the counterpart.\n          format: uuid\n        created_at:\n          type: string\n          description: Date and time when the counterpart was created. Timestamps follow the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) standard.\n          format: date-time\n        updated_at:\n          type: string\n          description: Date and time when the counterpart was last updated. Timestamps follow the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) standard.\n          format: date-time\n        type:\n          allOf:\n            - $ref: '#/components/schemas/CounterpartType'\n          description: 'The counterpart type: `organization` (juridical person) or `individual` (natural person).'\n        created_automatically:\n          type: boolean\n          description: '`true` if the counterpart was created automatically by Monite when processing incoming invoices with OCR. `false` if the counterpart was created by the API client.'\n          default: false\n        organization:\n          $ref: '#/components/schemas/CounterpartOrganization'\n      description: Represents counterparts that are organizations (juridical persons).\n    CounterpartPaginationResponse:\n      required:\n        - data\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/CounterpartResponse'\n        prev_pagination_token:\n          type: string\n          description: optional querystring with pagination parameters, null if there is no page\n        next_pagination_token:\n          type: string\n          description: optional querystring with pagination parameters, null if there is no page\n      description: A paginated list of counterparts\n    CounterpartResponse:\n      anyOf:\n        - $ref: '#/components/schemas/CounterpartIndividualResponse'\n        - $ref: '#/components/schemas/CounterpartOrganizationResponse'\n      description: |-\n        A Counterpart object contains information about an organization (juridical person) or\n        individual (natural person) that provides goods and services to or buys them from an\n        [SME](https://monite.stoplight.io/docs/api-docs/ZG9jOjQyMDM0NzMx-glossary#sme).\n    CounterpartType:\n      enum:\n        - individual\n        - organization\n      type: string\n      description: An enumeration.\n    CounterpartUpdateAddress:\n      required:\n        - country\n        - city\n        - postal_code\n        - state\n        - line1\n      type: object\n      properties:\n        blacklist:\n          allOf:\n            - $ref: '#/components/schemas/AllowedCountriesCodes'\n          description: Two-letter ISO country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).\n          example: DE\n        country_internal:\n          allOf:\n            - $ref: '#/components/schemas/AllowedCountriesCodes'\n          description: Two-letter ISO country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).\n          example: DE\n        country:\n          allOf:\n            - $ref: '#/components/schemas/AllowedCountriesCodes'\n          description: Two-letter ISO country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).\n          example: DE\n        city:\n          type: string\n          description: City name.\n          example: Berlin\n        postal_code:\n          type: string\n          description: ZIP or postal code.\n          example: '10115'\n        state:\n          type: string\n          description: State, region, province, or county.\n        line1:\n          type: string\n          description: Street address.\n          example: Flughafenstrasse 52\n        line2:\n          type: string\n          description: Additional address information (if any).\n      description: The business address of a counterpart (organization or individual).\n    CounterpartUpdatePayload:\n      anyOf:\n        - $ref: '#/components/schemas/OptionalIndividualPayload'\n        - $ref: '#/components/schemas/OptionalOrganizationPayload'\n      description: This schema is used to update existing counterparts (organizations or individuals).\n    CreateCounterpartContactPayload:\n      required:\n        - first_name\n        - last_name\n        - email\n        - phone\n        - is_default\n        - address\n      type: object\n      properties:\n        first_name:\n          type: string\n          description: The first name of a contact person.\n          example: Mary\n        last_name:\n          type: string\n          description: The last name of a contact person.\n          example: O'Brien\n        email:\n          type: string\n          description: The email address of a contact person.\n          format: email\n          example: contact@example.org\n        phone:\n          type: string\n          description: The phone number of a contact person\n          example: '5551235476'\n        is_default:\n          type: boolean\n          description: Specifies if this contact person is the default one in case the organization has multiple contacts.\n        address:\n          allOf:\n            - $ref: '#/components/schemas/CounterpartAddress'\n          description: The address of a contact person.\n        title:\n          type: string\n          description: 'The title or honorific of a contact person. Examples: Mr., Ms., Dr., Prof.'\n          example: Ms.\n      description: The contact person for an organization.\n    CreateRecurrencePayload:\n      required:\n        - invoice_id\n        - start_year\n        - start_month\n        - end_year\n        - end_month\n        - day_of_month\n      type: object\n      properties:\n        invoice_id:\n          type: string\n          format: uuid\n        start_year:\n          maximum: 2077\n          type: integer\n        start_month:\n          maximum: 12\n          minimum: 1\n          type: integer\n        end_year:\n          maximum: 2077\n          type: integer\n        end_month:\n          maximum: 12\n          minimum: 1\n          type: integer\n        day_of_month:\n          $ref: '#/components/schemas/DayOfMonth'\n    CurrencyEnum:\n      enum:\n        - USD\n        - EUR\n        - JPY\n        - GBP\n        - AUD\n        - CAD\n        - CHF\n        - CNY\n        - HKD\n        - NZD\n        - SEK\n        - KRW\n        - SGD\n        - NOK\n        - MXN\n        - INR\n        - RUB\n        - ZAR\n        - TRY\n        - BRL\n      type: string\n      description: An enumeration.\n    DayOfMonth:\n      enum:\n        - first_day\n        - last_day\n      type: string\n      description: An enumeration.\n    EntityAddressSchema:\n      required:\n        - city\n        - postal_code\n        - line1\n      type: object\n      properties:\n        country:\n          allOf:\n            - $ref: '#/components/schemas/AllowedCountriesCodes'\n          description: 'A country name (as ISO code) where the entity is registered '\n          default: DE\n        city:\n          maxLength: 255\n          type: string\n          description: A city (a full name) where the entity is registered\n        postal_code:\n          maxLength: 10\n          type: string\n          description: A postal code of the address where the entity is registered\n        state:\n          type: string\n          description: A state in a country where the entity is registered\n        line1:\n          maxLength: 255\n          type: string\n          description: A street where the entity is registered\n        line2:\n          maxLength: 100\n          type: string\n          description: An alternative street used by the entity\n      description: A schema represents address info of the entity\n    EntityBankAccountRequest:\n      required:\n        - iban\n        - bic\n        - bank_name\n      type: object\n      properties:\n        iban:\n          maxLength: 34\n          type: string\n          description: The IBAN of the entity’s bank account.\n        bic:\n          maxLength: 11\n          type: string\n          description: The BIC of the entity’s bank account.\n        bank_name:\n          type: string\n          description: The name of the entity’s bank account.\n        display_name:\n          type: string\n    EntityIndividual:\n      required:\n        - first_name\n        - last_name\n        - type\n      type: object\n      properties:\n        phone:\n          type: string\n          description: A phone number of the entity\n        logo:\n          maxLength: 2083\n          minLength: 1\n          type: string\n          description: A link to the entity logo\n          format: uri\n        email:\n          type: string\n          description: An email of the entity\n          format: email\n        first_name:\n          type: string\n          description: The first name of the entity issuing the receivable\n        last_name:\n          type: string\n          description: The last name of the entity issuing the receivable\n        tax_id:\n          type: string\n          description: The Tax ID of the entity issuing the receivable\n        type:\n          enum:\n            - individual\n          type: string\n          description: The entity type\n      description: A schema for an entity of individual type\n    EntityOrganization:\n      required:\n        - name\n        - type\n      type: object\n      properties:\n        phone:\n          type: string\n          description: A phone number of the entity\n        logo:\n          maxLength: 2083\n          minLength: 1\n          type: string\n          description: A link to the entity logo\n          format: uri\n        email:\n          type: string\n          description: An email of the entity\n          format: email\n        name:\n          type: string\n          description: The name of the entity issuing the receivable, when it is an organization.\n        vat_id:\n          type: string\n          description: The VAT ID of the entity issuing the receivable, when it is an organization.\n        type:\n          enum:\n            - organization\n          type: string\n          description: The entity type\n      description: A schema for an entity of organization type\n    ErrorSchema:\n      required:\n        - message\n      type: object\n      properties:\n        message:\n          type: string\n    ErrorSchemaResponse:\n      required:\n        - error\n      type: object\n      properties:\n        error:\n          $ref: '#/components/schemas/ErrorSchema'\n    GetAllRecurrences:\n      required:\n        - data\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Recurrence'\n    HTTPValidationError:\n      type: object\n      properties:\n        detail:\n          type: array\n          items:\n            $ref: '#/components/schemas/ValidationError'\n    InvoiceResponsePayload:\n      required:\n        - type\n        - id\n        - created_at\n        - updated_at\n        - currency\n        - total_amount\n        - line_items\n        - entity_address\n        - entity\n        - counterpart_id\n        - counterpart_type\n        - counterpart_address\n        - status\n        - total_vat_amount\n      type: object\n      properties:\n        type:\n          enum:\n            - invoice\n          type: string\n          description: The type of the document uploaded.\n        id:\n          type: string\n          format: uuid\n        created_at:\n          type: string\n          description: Time at which the receivable was created. Timestamps follow the ISO 8601 standard.\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which the receivable was last updated. Timestamps follow the ISO 8601 standard.\n          format: date-time\n        document_id:\n          type: string\n          description: The sequential code systematically assigned to invoices.\n        currency:\n          allOf:\n            - $ref: '#/components/schemas/CurrencyEnum'\n          description: The currency used in the receivable.\n        total_amount:\n          type: integer\n          description: The total price of the receivable.\n        line_items:\n          type: array\n          items:\n            $ref: '#/components/schemas/ResponseItem'\n        entity_address:\n          $ref: '#/components/schemas/EntityAddressSchema'\n        entity:\n          anyOf:\n            - $ref: '#/components/schemas/EntityOrganization'\n            - $ref: '#/components/schemas/EntityIndividual'\n        entity_user_id:\n          type: string\n          description: The entity user who created this document.\n          format: uuid\n        counterpart_id:\n          type: string\n          description: Unique ID of the counterpart.\n          format: uuid\n        counterpart_type:\n          allOf:\n            - $ref: '#/components/schemas/CounterpartType'\n          description: The type of the counterpart.\n        counterpart_address:\n          $ref: '#/components/schemas/CounterpartAddress'\n        counterpart_contact:\n          allOf:\n            - $ref: '#/components/schemas/ReceivableCounterpartContact'\n          description: Additional information about counterpart contacts.\n        counterpart_name:\n          type: string\n          description: A legal name of a counterpart it is an organization\n        file_url:\n          type: string\n        commercial_condition_description:\n          type: string\n          description: The commercial terms of the receivable (e.g. The products must be delivered in X days).\n        status:\n          allOf:\n            - $ref: '#/components/schemas/ReceivablesStatusEnum'\n          description: The status of the receivable inside the receivable workflow.\n        total_vat_amount:\n          type: string\n          description: The sum from the VAT of the individual line items monetary amount.\n        entity_bank_account:\n          $ref: '#/components/schemas/EntityBankAccountRequest'\n        vat_exempt:\n          type: boolean\n          description: Indicates whether the goods, materials, or services listed in the receivable are exempt from VAT or not.\n        vat_exemption_rationale:\n          type: string\n          description: The reason for the VAT exemption, if applicable.\n        based_on:\n          type: string\n          description: The unique ID of a previous document related to the receivable if applicable.\n          format: uuid\n        memo:\n          type: string\n          description: A note with additional information for a receivable\n        payment_reminder_id:\n          type: string\n          format: uuid\n        recurrence_id:\n          type: string\n          description: Stores an unique ID of a recurrence if the receivable is in a recurring status\n          format: uuid\n        payment_terms:\n          $ref: '#/components/schemas/PaymentTerms'\n    IterationStatus:\n      enum:\n        - pending\n        - completed\n        - canceled\n        - issue_failed\n      type: string\n      description: An enumeration.\n    LineItem:\n      required:\n        - price\n        - quantity\n      type: object\n      properties:\n        price:\n          $ref: '#/components/schemas/Price'\n        quantity:\n          minimum: 0\n          exclusiveMinimum: true\n          type: integer\n    LineItemProduct:\n      required:\n        - name\n        - measure_unit_id\n        - vat_classes\n        - entity_id\n        - created_at\n        - updated_at\n        - vat_class\n        - measure_unit\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the product.\n        description:\n          type: string\n          description: Description of the product.\n        price:\n          $ref: '#/components/schemas/Price'\n        measure_unit_id:\n          type: string\n          description: The unique ID reference of the unit used to measure the quantity of this product (e.g. items, meters, kilograms).\n          format: uuid\n        vat_classes:\n          type: array\n          items:\n            type: string\n            format: uuid\n          description: The list of unique ID references of VAT classes for the product.\n        smallest_amount:\n          minimum: 0\n          type: number\n          description: The smallest amount allowed for this product.\n        id:\n          type: string\n          description: Unique ID of the product.\n          format: uuid\n        entity_id:\n          type: string\n          format: uuid\n        entity_user_id:\n          type: string\n          format: uuid\n        created_at:\n          type: string\n          description: Time at which the product was created. Timestamps follow the ISO 8601 standard.\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which the product was last updated. Timestamps follow the ISO 8601 standard.\n          format: date-time\n        vat_class:\n          $ref: '#/components/schemas/VatClassResponse'\n        measure_unit:\n          $ref: '#/components/schemas/UnitResponse'\n    OptionalCounterpartIndividual:\n      type: object\n      properties:\n        first_name:\n          type: string\n          description: The person's first name.\n          example: Adnan\n        last_name:\n          type: string\n          description: The person's last name.\n          example: Singh\n        title:\n          type: string\n          description: 'The person''s title or honorific. Examples: Mr., Ms., Dr., Prof.'\n          example: Mr.\n        is_vendor:\n          type: boolean\n          description: Indicates if the counterpart is a vendor.\n        is_customer:\n          type: boolean\n          description: Indicates if the counterpart is a customer.\n        phone:\n          type: string\n          description: The person's phone number.\n          example: '5553211234'\n        email:\n          type: string\n          description: The person's email address.\n          example: asingh@example.net\n        tax_id:\n          type: string\n          description: The person's Tax ID.\n          example: '1234567'\n        residential_address:\n          allOf:\n            - $ref: '#/components/schemas/CounterpartUpdateAddress'\n          description: The person's address.\n      description: Represents counterparts that are individuals (natural persons).\n    OptionalCounterpartUpdateOrganization:\n      type: object\n      properties:\n        legal_name:\n          type: string\n          description: The legal name of the organization.\n          example: Acme Inc.\n        vat_number:\n          type: string\n          description: The VAT number of the organization.\n          example: '101002749'\n        is_vendor:\n          type: boolean\n          description: Indicates if the counterpart is a vendor.\n        is_customer:\n          type: boolean\n          description: Indicates if the counterpart is a customer.\n        phone:\n          type: string\n          description: The phone number of the organization.\n          example: '5551231234'\n        email:\n          type: string\n          description: The email address of the organization.\n          example: acme@example.com\n        registered_address:\n          allOf:\n            - $ref: '#/components/schemas/CounterpartUpdateAddress'\n          description: The address of the organization.\n      description: Represents counterparts that are organizations (juridical persons).\n    OptionalIndividualPayload:\n      required:\n        - type\n        - individual\n      type: object\n      properties:\n        type:\n          enum:\n            - individual\n          type: string\n          description: Must be \"individual\".\n          example: individual\n        individual:\n          $ref: '#/components/schemas/OptionalCounterpartIndividual'\n      description: Represents counterparts that are individuals (natural persons).\n    OptionalOrganizationPayload:\n      required:\n        - type\n        - organization\n      type: object\n      properties:\n        type:\n          enum:\n            - organization\n          type: string\n          description: Must be \"organization\".\n          example: organization\n        organization:\n          $ref: '#/components/schemas/OptionalCounterpartUpdateOrganization'\n      description: Represents counterparts that are organizations (juridical persons).\n    OrderEnum:\n      enum:\n        - asc\n        - desc\n      description: An enumeration.\n    PaginationResponse:\n      required:\n        - data\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/PayableResponseSchema'\n        prev_pagination_token:\n          type: string\n          description: optional querystring with pagination parameters, null if there is no page\n        next_pagination_token:\n          type: string\n          description: optional querystring with pagination parameters, null if there is no page\n      description: A paginated list of payables.\n    PaymentTerm:\n      required:\n        - number_of_days\n      type: object\n      properties:\n        number_of_days:\n          maximum: 10000\n          minimum: 0\n          type: integer\n          description: The amount of days after the invoice issue date.\n    PaymentTermDiscount:\n      required:\n        - number_of_days\n        - discount\n      type: object\n      properties:\n        number_of_days:\n          maximum: 10000\n          minimum: 0\n          type: integer\n          description: The amount of days after the invoice issue date.\n        discount:\n          maximum: 10000\n          minimum: 0\n          type: integer\n          description: The discount percentage in minor units. E.g., 200 means 2%. 1050 means 10.5%.\n    PaymentTermDiscountWithDate:\n      required:\n        - number_of_days\n        - discount\n      type: object\n      properties:\n        number_of_days:\n          maximum: 10000\n          minimum: 0\n          type: integer\n          description: The amount of days after the invoice issue date.\n        discount:\n          maximum: 10000\n          minimum: 0\n          type: integer\n          description: The discount percentage in minor units. E.g., 200 means 2%. 1050 means 10.5%.\n        end_date:\n          type: string\n          format: date\n    PaymentTerms:\n      required:\n        - id\n        - term_final\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        name:\n          type: string\n        term_final:\n          $ref: '#/components/schemas/TermFinalWithDate'\n        term_1:\n          $ref: '#/components/schemas/PaymentTermDiscountWithDate'\n        term_2:\n          $ref: '#/components/schemas/PaymentTermDiscountWithDate'\n    PaymentTermsCreatePayload:\n      required:\n        - name\n        - term_final\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        term_final:\n          $ref: '#/components/schemas/PaymentTerm'\n        term_1:\n          $ref: '#/components/schemas/PaymentTermDiscount'\n        term_2:\n          $ref: '#/components/schemas/PaymentTermDiscount'\n    PaymentTermsListResponse:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/PaymentTermsResponse'\n    PaymentTermsResponse:\n      required:\n        - name\n        - term_final\n        - id\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        term_final:\n          $ref: '#/components/schemas/PaymentTerm'\n        term_1:\n          $ref: '#/components/schemas/PaymentTermDiscount'\n        term_2:\n          $ref: '#/components/schemas/PaymentTermDiscount'\n        id:\n          type: string\n          format: uuid\n    PaymentTermsUpdatePayload:\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        term_final:\n          $ref: '#/components/schemas/PaymentTerm'\n        term_1:\n          $ref: '#/components/schemas/PaymentTermDiscount'\n        term_2:\n          $ref: '#/components/schemas/PaymentTermDiscount'\n    Price:\n      required:\n        - currency\n        - value\n      type: object\n      properties:\n        currency:\n          allOf:\n            - $ref: '#/components/schemas/CurrencyEnum'\n          description: The currency in which the price of the product is set.\n        value:\n          minimum: 0\n          type: integer\n          description: The actual price of the product.\n    ProductServicePaginationResponse:\n      required:\n        - data\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProductServiceResponse'\n        prev_pagination_token:\n          type: string\n          description: optional querystring with pagination parameters, null if there is no page\n        next_pagination_token:\n          type: string\n          description: optional querystring with pagination parameters, null if there is no page\n      description: A paginated list of products and services\n    ProductServiceRequest:\n      required:\n        - name\n        - measure_unit_id\n        - vat_classes\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the product.\n        description:\n          type: string\n          description: Description of the product.\n        price:\n          $ref: '#/components/schemas/Price'\n        measure_unit_id:\n          type: string\n          description: The unique ID reference of the unit used to measure the quantity of this product (e.g. items, meters, kilograms).\n          format: uuid\n        vat_classes:\n          type: array\n          items:\n            type: string\n            format: uuid\n          description: The list of unique ID references of VAT classes for the product.\n        smallest_amount:\n          minimum: 0\n          type: number\n          description: The smallest amount allowed for this product.\n    ProductServiceResponse:\n      required:\n        - name\n        - measure_unit_id\n        - vat_classes\n        - entity_id\n        - created_at\n        - updated_at\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the product.\n        description:\n          type: string\n          description: Description of the product.\n        price:\n          $ref: '#/components/schemas/Price'\n        measure_unit_id:\n          type: string\n          description: The unique ID reference of the unit used to measure the quantity of this product (e.g. items, meters, kilograms).\n          format: uuid\n        vat_classes:\n          type: array\n          items:\n            type: string\n            format: uuid\n          description: The list of unique ID references of VAT classes for the product.\n        smallest_amount:\n          minimum: 0\n          type: number\n          description: The smallest amount allowed for this product.\n        id:\n          type: string\n          description: Unique ID of the product.\n          format: uuid\n        entity_id:\n          type: string\n          format: uuid\n        entity_user_id:\n          type: string\n          format: uuid\n        created_at:\n          type: string\n          description: Time at which the product was created. Timestamps follow the ISO 8601 standard.\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which the product was last updated. Timestamps follow the ISO 8601 standard.\n          format: date-time\n    ProductServiceTypeEnum:\n      enum:\n        - product\n        - service\n      type: string\n      description: An enumeration.\n    ProductServiceUpdate:\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the product.\n        description:\n          type: string\n          description: Description of the product.\n        price:\n          $ref: '#/components/schemas/Price'\n        vat_classes:\n          type: array\n          items:\n            type: string\n            format: uuid\n          description: The list of unique ID references of VAT classes for the product.\n        smallest_amount:\n          minimum: 0\n          type: number\n          description: The smallest amount allowed for this product.\n    QuoteResponsePayload:\n      required:\n        - type\n        - id\n        - created_at\n        - updated_at\n        - currency\n        - total_amount\n        - line_items\n        - entity_address\n        - entity\n        - counterpart_id\n        - counterpart_type\n        - counterpart_address\n        - status\n        - total_vat_amount\n      type: object\n      properties:\n        type:\n          enum:\n            - quote\n          type: string\n          description: The type of the document uploaded.\n        expiry_date:\n          type: string\n          description: Time by which the quote is active. Timestamps follow the ISO 8601 standard.\n          format: date-time\n        id:\n          type: string\n          format: uuid\n        created_at:\n          type: string\n          description: Time at which the receivable was created. Timestamps follow the ISO 8601 standard.\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which the receivable was last updated. Timestamps follow the ISO 8601 standard.\n          format: date-time\n        document_id:\n          type: string\n          description: The sequential code systematically assigned to invoices.\n        currency:\n          allOf:\n            - $ref: '#/components/schemas/CurrencyEnum'\n          description: The currency used in the receivable.\n        total_amount:\n          type: integer\n          description: The total price of the receivable.\n        line_items:\n          type: array\n          items:\n            $ref: '#/components/schemas/ResponseItem'\n        entity_address:\n          $ref: '#/components/schemas/EntityAddressSchema'\n        entity:\n          anyOf:\n            - $ref: '#/components/schemas/EntityOrganization'\n            - $ref: '#/components/schemas/EntityIndividual'\n        entity_user_id:\n          type: string\n          description: The entity user who created this document.\n          format: uuid\n        counterpart_id:\n          type: string\n          description: Unique ID of the counterpart.\n          format: uuid\n        counterpart_type:\n          allOf:\n            - $ref: '#/components/schemas/CounterpartType'\n          description: The type of the counterpart.\n        counterpart_address:\n          $ref: '#/components/schemas/CounterpartAddress'\n        counterpart_contact:\n          allOf:\n            - $ref: '#/components/schemas/ReceivableCounterpartContact'\n          description: Additional information about counterpart contacts.\n        counterpart_name:\n          type: string\n          description: A legal name of a counterpart it is an organization\n        file_url:\n          type: string\n        commercial_condition_description:\n          type: string\n          description: The commercial terms of the receivable (e.g. The products must be delivered in X days).\n        status:\n          allOf:\n            - $ref: '#/components/schemas/ReceivablesStatusEnum'\n          description: The status of the receivable inside the receivable workflow.\n        total_vat_amount:\n          type: string\n          description: The sum from the VAT of the individual line items monetary amount.\n        entity_bank_account:\n          $ref: '#/components/schemas/EntityBankAccountRequest'\n        vat_exempt:\n          type: boolean\n          description: Indicates whether the goods, materials, or services listed in the receivable are exempt from VAT or not.\n        vat_exemption_rationale:\n          type: string\n          description: The reason for the VAT exemption, if applicable.\n        based_on:\n          type: string\n          description: The unique ID of a previous document related to the receivable if applicable.\n          format: uuid\n        memo:\n          type: string\n          description: A note with additional information for a receivable\n        payment_reminder_id:\n          type: string\n          format: uuid\n        recurrence_id:\n          type: string\n          description: Stores an unique ID of a recurrence if the receivable is in a recurring status\n          format: uuid\n        comment:\n          type: string\n          description: Field with a comment on why the client declined this Quote\n    ReceivableCounterpartContact:\n      required:\n        - first_name\n        - last_name\n        - email\n        - phone\n        - address\n      type: object\n      properties:\n        first_name:\n          type: string\n          description: The first name of the counterpart contact.\n          example: Marge\n        last_name:\n          type: string\n          description: The last name of the counterpart contact.\n          example: Smith\n        email:\n          type: string\n          description: The contact email of the counterpart.\n          format: email\n          example: marge@example.org\n        phone:\n          type: string\n          description: The contact phone number of the counterpart.\n          example: '55512378654'\n        title:\n          type: string\n          description: The counterpart contact title (e.g. Dr., Mr., Mrs., Ms., etc).\n          example: Dr.\n        address:\n          allOf:\n            - $ref: '#/components/schemas/CounterpartAddress'\n          description: The contact address of the counterpart\n    ReceivableCreateBasedOnPayload:\n      required:\n        - based_on\n      type: object\n      properties:\n        based_on:\n          type: string\n          description: The unique ID of a previous document related to the receivable if applicable.\n          format: uuid\n    ReceivableDeclinePayload:\n      type: object\n      properties:\n        comment:\n          type: string\n          description: Field with a comment on why the client declined this Quote\n      description: Payload for decline a Qoute with a comment\n    ReceivableFacadeCreateInvoicePayload:\n      required:\n        - type\n        - currency\n        - line_items\n        - counterpart_id\n      type: object\n      properties:\n        type:\n          enum:\n            - invoice\n          type: string\n          description: The type of the document uploaded.\n        currency:\n          $ref: '#/components/schemas/CurrencyEnum'\n        line_items:\n          type: array\n          items:\n            $ref: '#/components/schemas/LineItem'\n        counterpart_id:\n          type: string\n          format: uuid\n        commercial_condition_description:\n          type: string\n        entity_bank_account:\n          $ref: '#/components/schemas/EntityBankAccountRequest'\n        vat_exempt:\n          type: boolean\n        vat_exemption_rationale:\n          type: string\n        memo:\n          type: string\n          description: A note with additional information for a receivable\n        payment_terms_id:\n          type: string\n          format: uuid\n        payment_reminder_id:\n          type: string\n          format: uuid\n    ReceivableFacadeCreatePayload:\n      anyOf:\n        - $ref: '#/components/schemas/ReceivableFacadeCreateQuotePayload'\n        - $ref: '#/components/schemas/ReceivableFacadeCreateInvoicePayload'\n        - $ref: '#/components/schemas/ReceivableCreateBasedOnPayload'\n    ReceivableFacadeCreateQuotePayload:\n      required:\n        - type\n        - currency\n        - line_items\n        - counterpart_id\n      type: object\n      properties:\n        type:\n          enum:\n            - quote\n          type: string\n          description: The type of the document uploaded.\n        expiry_date:\n          type: string\n          description: Time by which the quote is active. Timestamps follow the ISO 8601 standard.\n          format: date-time\n        currency:\n          $ref: '#/components/schemas/CurrencyEnum'\n        line_items:\n          type: array\n          items:\n            $ref: '#/components/schemas/LineItem'\n        counterpart_id:\n          type: string\n          format: uuid\n        commercial_condition_description:\n          type: string\n        entity_bank_account:\n          $ref: '#/components/schemas/EntityBankAccountRequest'\n        vat_exempt:\n          type: boolean\n        vat_exemption_rationale:\n          type: string\n        memo:\n          type: string\n          description: A note with additional information for a receivable\n    ReceivablePreviewRequest:\n      required:\n        - subject_text\n        - body_text\n      type: object\n      properties:\n        subject_text:\n          type: string\n        body_text:\n          type: string\n      description: A schema for receiving a request for previewing an email with a receivable document\n    ReceivablePreviewResponse:\n      required:\n        - subject_preview\n        - body_preview\n      type: object\n      properties:\n        subject_preview:\n          type: string\n        body_preview:\n          type: string\n      description: A schema for receiving a request for previewing an email with a receivable document\n    ReceivableResponse:\n      anyOf:\n        - $ref: '#/components/schemas/QuoteResponsePayload'\n        - $ref: '#/components/schemas/InvoiceResponsePayload'\n    ReceivableSendRequest:\n      required:\n        - subject_text\n        - body_text\n      type: object\n      properties:\n        subject_text:\n          type: string\n        body_text:\n          type: string\n      description: A schema for receiving a request for sending a receivable\n    ReceivableSendResponse:\n      required:\n        - mail_id\n      type: object\n      properties:\n        mail_id:\n          type: string\n          format: uuid\n      description: A schema for returning a response an email with a link to receivable document has been sent\n    ReceivableType:\n      enum:\n        - quote\n        - invoice\n        - credit_note\n      type: string\n      description: An enumeration.\n    ReceivableUpdatePayload:\n      anyOf:\n        - $ref: '#/components/schemas/UpdateQuotePayload'\n        - $ref: '#/components/schemas/UpdateInvoicePayload'\n      description: An abstract which provides interfaces for managing polymorphic schemas\n    ReceivableVariablesResponse:\n      required:\n        - data\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            type: string\n      description: A schema for returning a list of placeholders allowed to be placed in an email content\n    ReceivablesStatusEnum:\n      enum:\n        - draft\n        - issued\n        - accepted\n        - partially_paid\n        - paid\n        - expired\n        - uncollectible\n        - canceled\n        - deleted\n        - recurring\n      type: string\n      description: An enumeration.\n    Recurrence:\n      required:\n        - invoice_id\n        - start_year\n        - start_month\n        - end_year\n        - end_month\n        - day_of_month\n        - id\n        - created_at\n        - updated_at\n        - iterations\n        - status\n        - current_iteration\n      type: object\n      properties:\n        invoice_id:\n          type: string\n          format: uuid\n        start_year:\n          maximum: 2077\n          type: integer\n        start_month:\n          maximum: 12\n          minimum: 1\n          type: integer\n        end_year:\n          maximum: 2077\n          type: integer\n        end_month:\n          maximum: 12\n          minimum: 1\n          type: integer\n        day_of_month:\n          $ref: '#/components/schemas/DayOfMonth'\n        id:\n          type: string\n          format: uuid\n        created_at:\n          type: string\n          description: Time at which the receivable was created. Timestamps follow the ISO 8601 standard.\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which the receivable was last updated. Timestamps follow the ISO 8601 standard.\n          format: date-time\n        iterations:\n          type: array\n          items:\n            $ref: '#/components/schemas/RecurrenceIteration'\n        status:\n          $ref: '#/components/schemas/RecurrenceStatus'\n        current_iteration:\n          type: integer\n    RecurrenceIteration:\n      required:\n        - issue_at\n        - status\n      type: object\n      properties:\n        issue_at:\n          type: string\n          format: date\n        issued_invoice_id:\n          type: string\n          format: uuid\n        status:\n          $ref: '#/components/schemas/IterationStatus'\n        iteration:\n          type: integer\n          default: 1\n    RecurrenceStatus:\n      enum:\n        - active\n        - canceled\n        - completed\n      type: string\n      description: An enumeration.\n    ResponseItem:\n      required:\n        - quantity\n        - product\n      type: object\n      properties:\n        quantity:\n          minimum: 0\n          type: integer\n          description: The quantity of each of the goods, materials, or services listed in the receivable.\n        product:\n          $ref: '#/components/schemas/LineItemProduct'\n    StatusEnum:\n      enum:\n        - active\n        - deleted\n      type: string\n      description: An enumeration.\n    TermFinalWithDate:\n      required:\n        - number_of_days\n      type: object\n      properties:\n        number_of_days:\n          maximum: 10000\n          minimum: 0\n          type: integer\n          description: The amount of days after the invoice issue date.\n        end_date:\n          type: string\n          format: date\n    UnitListResponse:\n      required:\n        - data\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/UnitResponse'\n    UnitRequest:\n      required:\n        - name\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n    UnitResponse:\n      required:\n        - name\n        - created_at\n        - updated_at\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        id:\n          type: string\n          format: uuid\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n    UnitUpdate:\n      type: object\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n    UpdateCounterpartContactPayload:\n      type: object\n      properties:\n        first_name:\n          type: string\n          description: The first name of a contact person.\n          example: Mary\n        last_name:\n          type: string\n          description: The last name of a contact person.\n          example: O'Brien\n        email:\n          type: string\n          description: The email address of a contact person.\n          format: email\n          example: contact@example.org\n        phone:\n          type: string\n          description: The phone number of a contact person\n          example: '5551235476'\n        is_default:\n          type: boolean\n          description: Specifies if this contact person is the default one in case the organization has multiple contacts.\n        title:\n          type: string\n          description: 'The title or honorific of a contact person. Examples: Mr., Ms., Dr., Prof.'\n          example: Ms.\n        address:\n          allOf:\n            - $ref: '#/components/schemas/CounterpartAddress'\n          description: The address of a contact person.\n      description: The contact person for an organization.\n    UpdateInvoice:\n      type: object\n      properties:\n        currency:\n          $ref: '#/components/schemas/CurrencyEnum'\n        counterpart_id:\n          type: string\n          format: uuid\n        vat_exempt:\n          type: boolean\n        vat_exemption_rationale:\n          type: string\n        memo:\n          type: string\n          description: A note with additional information for a receivable\n        payment_terms_id:\n          type: string\n          format: uuid\n        payment_reminder_id:\n          type: string\n          format: uuid\n    UpdateInvoicePayload:\n      required:\n        - invoice\n      type: object\n      properties:\n        invoice:\n          $ref: '#/components/schemas/UpdateInvoice'\n      description: |-\n        Helper class that provides a standard way to create an ABC using\n        inheritance.\n    UpdateQuote:\n      type: object\n      properties:\n        currency:\n          $ref: '#/components/schemas/CurrencyEnum'\n        counterpart_id:\n          type: string\n          format: uuid\n        vat_exempt:\n          type: boolean\n        vat_exemption_rationale:\n          type: string\n        memo:\n          type: string\n          description: A note with additional information for a receivable\n        expiry_date:\n          type: string\n          description: Time by which the quote is active. Timestamps follow the ISO 8601 standard.\n          format: date-time\n    UpdateQuotePayload:\n      required:\n        - quote\n      type: object\n      properties:\n        quote:\n          $ref: '#/components/schemas/UpdateQuote'\n      description: |-\n        Helper class that provides a standard way to create an ABC using\n        inheritance.\n    UpdateRecurrencePayload:\n      type: object\n      properties:\n        end_year:\n          maximum: 2077\n          type: integer\n        end_month:\n          maximum: 12\n          minimum: 1\n          type: integer\n        day_of_month:\n          $ref: '#/components/schemas/DayOfMonth'\n    ValidationError:\n      required:\n        - loc\n        - msg\n        - type\n      type: object\n      properties:\n        loc:\n          type: array\n          items:\n            type: string\n        msg:\n          type: string\n        type:\n          type: string\n    VatClassListResponse:\n      required:\n        - data\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/VatClassResponse'\n    VatClassRequest:\n      required:\n        - value\n        - country\n      type: object\n      properties:\n        value:\n          maximum: 10000\n          minimum: 0\n          type: integer\n          description: 'Percent minor units. Example: 12.5% is 1250'\n        country:\n          $ref: '#/components/schemas/AllowedCountriesCodes'\n    VatClassResponse:\n      required:\n        - value\n        - country\n        - created_at\n        - updated_at\n      type: object\n      properties:\n        value:\n          maximum: 10000\n          minimum: 0\n          type: integer\n          description: 'Percent minor units. Example: 12.5% is 1250'\n        country:\n          $ref: '#/components/schemas/AllowedCountriesCodes'\n        id:\n          type: string\n          format: uuid\n        inernal_id:\n          type: string\n          format: uuid\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n    api__v1__counterparts__pagination__CursorFields:\n      enum:\n        - counterpart_name\n      type: string\n      description: An enumeration.\n    api__v1__products_services__pagination__CursorFields:\n      enum:\n        - name\n      type: string\n      description: An enumeration.\n    api__v1__receivables__pagination__CursorFields:\n      enum:\n        - counterpart_name\n        - amount\n        - status\n      type: string\n      description: An enumeration.\n    AccessTokenResponse:\n      required:\n        - access_token\n        - token_type\n        - expires_in\n      type: object\n      properties:\n        access_token:\n          type: string\n          example: L8qq9PZyRg6ieKGEKhZolGC0vJWLw8iEJ88DRdyOg\n        token_type:\n          type: string\n          example: Bearer\n        expires_in:\n          type: integer\n          example: 86400\n    ActionEnum:\n      enum:\n        - create\n        - read\n        - update\n        - delete\n      type: string\n      description: An enumeration.\n    ActionSchema:\n      type: object\n      properties:\n        action_name:\n          allOf:\n            - $ref: '#/components/schemas/ActionEnum'\n          description: Action name\n          default: read\n        permission:\n          allOf:\n            - $ref: '#/components/schemas/PermissionEnum'\n          description: Permission type\n          default: allowed\n    BizObjectsSchema:\n      type: object\n      properties:\n        objects:\n          type: array\n          items:\n            $ref: '#/components/schemas/RootSchema'\n          description: List of objects\n    CommonSchema:\n      type: object\n      properties:\n        object_type:\n          enum:\n            - comment\n            - entity_user\n            - entity\n            - entity_bank_account\n            - export\n            - reconciliation\n            - role\n            - todo_task\n            - todo_task_mute\n            - transaction\n            - workflow\n          type: string\n          description: Object type\n          default: comment\n        actions:\n          type: array\n          items:\n            $ref: '#/components/schemas/ActionSchema'\n          description: List of actions\n    CreateEntityRequest:\n      anyOf:\n        - $ref: '#/components/schemas/CreateOrganizationEntityRequest'\n        - $ref: '#/components/schemas/CreateIndividualEntityRequest'\n      description: A schema for a request to create an entity of different types\n      discriminator:\n        propertyName: type\n        mapping:\n          organization: '#/components/schemas/CreateOrganizationEntityRequest'\n          individual: '#/components/schemas/CreateIndividualEntityRequest'\n    CreateEntityUserRequest:\n      required:\n        - login\n        - first_name\n      type: object\n      properties:\n        login:\n          type: string\n        info:\n          $ref: '#/components/schemas/EntityInfoSchema'\n        role_id:\n          type: string\n          description: UUID of the role assigned to this entity user\n          format: uuid\n        first_name:\n          type: string\n          description: First name\n          example: Andrey\n        last_name:\n          type: string\n          description: Last name\n          example: Korchak\n        title:\n          type: string\n          description: Title\n          example: Boss\n    CreateIndividualEntityRequest:\n      required:\n        - address\n        - email\n        - type\n        - individual\n      type: object\n      properties:\n        address:\n          allOf:\n            - $ref: '#/components/schemas/EntityAddressSchema'\n          description: An address description of the entity\n        email:\n          type: string\n          description: An official email address of the entity\n          format: email\n        phone:\n          maxLength: 100\n          type: string\n          description: A phone number of the entity\n        type:\n          enum:\n            - individual\n          type: string\n          description: A type for an organization\n        individual:\n          allOf:\n            - $ref: '#/components/schemas/IndividualSchema'\n          description: A set of meta data describing the individual\n      description: A base for an entity request schema\n    CreateOrganizationEntityRequest:\n      required:\n        - address\n        - email\n        - type\n        - organization\n      type: object\n      properties:\n        address:\n          allOf:\n            - $ref: '#/components/schemas/EntityAddressSchema'\n          description: An address description of the entity\n        email:\n          type: string\n          description: An official email address of the entity\n          format: email\n        phone:\n          maxLength: 100\n          type: string\n          description: A phone number of the entity\n        type:\n          enum:\n            - organization\n          type: string\n          description: A type for an organization\n        organization:\n          allOf:\n            - $ref: '#/components/schemas/OrganizationSchema'\n          description: A set of meta data describing the organization\n      description: A base for an entity request schema\n    CreateRoleRequest:\n      required:\n        - name\n        - permissions\n      type: object\n      properties:\n        name:\n          minLength: 1\n          type: string\n          description: Role name\n        permissions:\n          allOf:\n            - $ref: '#/components/schemas/BizObjectsSchema'\n          description: Access permissions\n    CurrencySettings:\n      required:\n        - default\n      type: object\n      properties:\n        default:\n          $ref: '#/components/schemas/CurrencyEnum'\n        exchange_rates:\n          type: array\n          items:\n            $ref: '#/components/schemas/ExchangeRate'\n    EntityBankAccountPaginationResponse:\n      required:\n        - data\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/EntityBankAccountResponse'\n          description: List of entity bank accounts.\n        prev_pagination_token:\n          type: string\n          description: Optional querystring with pagination parameters, null if there is no page.\n        next_pagination_token:\n          type: string\n          description: Optional querystring with pagination parameters, null if there is no page.\n      description: A paginated list of entity bank accounts\n    EntityBankAccountResponse:\n      required:\n        - id\n        - iban\n        - bic\n        - bank_name\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        iban:\n          type: string\n          description: The IBAN of the entity’s bank account.\n        bic:\n          type: string\n          description: The BIC of the entity’s bank account.\n        bank_name:\n          type: string\n          description: The name of the entity’s bank account.\n        display_name:\n          type: string\n        was_created_by_user_id:\n          type: string\n          format: uuid\n    EntityIndividualResponse:\n      required:\n        - address\n        - email\n        - created_at\n        - id\n        - status\n        - updated_at\n        - type\n        - individual\n      type: object\n      properties:\n        address:\n          allOf:\n            - $ref: '#/components/schemas/EntityAddressSchema'\n          description: An address description of the entity\n        email:\n          type: string\n          description: An official email address of the entity\n          format: email\n        phone:\n          maxLength: 100\n          type: string\n          description: A phone number of the entity\n        created_at:\n          type: string\n          description: UTC datetime\n          format: date-time\n        id:\n          type: string\n          description: UUID entity ID\n          format: uuid\n        logo:\n          allOf:\n            - $ref: '#/components/schemas/FileSchema'\n          description: A logo image of the entity\n        status:\n          allOf:\n            - $ref: '#/components/schemas/StatusEnum'\n          description: record status, 'active' by default\n        updated_at:\n          type: string\n          description: UTC datetime\n          format: date-time\n        type:\n          enum:\n            - individual\n          type: string\n          description: A type for an individual\n        individual:\n          allOf:\n            - $ref: '#/components/schemas/IndividualSchema'\n          description: A set of metadata describing an individual\n      description: A base for an entity response schema\n    EntityInfoSchema:\n      type: object\n      properties:\n        email:\n          type: string\n          description: An entity user business email\n          format: email\n        phone:\n          type: string\n          description: An entity user phone number in the international format\n      description: A scheme for validation an entity user additional info\n    EntityOrganizationResponse:\n      required:\n        - address\n        - email\n        - created_at\n        - id\n        - status\n        - updated_at\n        - type\n        - organization\n      type: object\n      properties:\n        address:\n          allOf:\n            - $ref: '#/components/schemas/EntityAddressSchema'\n          description: An address description of the entity\n        email:\n          type: string\n          description: An official email address of the entity\n          format: email\n        phone:\n          maxLength: 100\n          type: string\n          description: A phone number of the entity\n        created_at:\n          type: string\n          description: UTC datetime\n          format: date-time\n        id:\n          type: string\n          description: UUID entity ID\n          format: uuid\n        logo:\n          allOf:\n            - $ref: '#/components/schemas/FileSchema'\n          description: A logo image of the entity\n        status:\n          allOf:\n            - $ref: '#/components/schemas/StatusEnum'\n          description: record status, 'active' by default\n        updated_at:\n          type: string\n          description: UTC datetime\n          format: date-time\n        type:\n          enum:\n            - organization\n          type: string\n          description: A type for an organization\n        organization:\n          allOf:\n            - $ref: '#/components/schemas/OrganizationSchema'\n          description: A set of metadata describing an organization\n      description: A base for an entity response schema\n    EntityPaginationResponse:\n      required:\n        - data\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/EntityResponse'\n          description: A set of entities of different types returned per page\n        prev_pagination_token:\n          type: string\n          description: optional querystring with pagination parameters, null if there is no page\n        next_pagination_token:\n          type: string\n          description: optional querystring with pagination parameters, null if there is no page\n    EntityResponse:\n      anyOf:\n        - $ref: '#/components/schemas/EntityOrganizationResponse'\n        - $ref: '#/components/schemas/EntityIndividualResponse'\n      description: A schema for a response after creation of an entity of different types\n      discriminator:\n        propertyName: type\n        mapping:\n          organization: '#/components/schemas/EntityOrganizationResponse'\n          individual: '#/components/schemas/EntityIndividualResponse'\n    EntityTypeEnum:\n      enum:\n        - individual\n        - organization\n      type: string\n      description: An enumeration.\n    EntityUserPaginationResponse:\n      required:\n        - data\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/EntityUserResponse'\n          description: array of records\n        prev_pagination_token:\n          type: string\n          description: optional querystring with pagination parameters, null if there is no page\n        next_pagination_token:\n          type: string\n          description: optional querystring with pagination parameters, null if there is no page\n    EntityUserResponse:\n      required:\n        - id\n        - login\n        - status\n        - created_at\n        - updated_at\n      type: object\n      properties:\n        id:\n          type: string\n          description: UUID entity user ID\n          format: uuid\n        role:\n          allOf:\n            - $ref: '#/components/schemas/RoleResponse'\n          description: Role assigned to this entity user\n        userpic:\n          $ref: '#/components/schemas/FileSchema'\n        info:\n          $ref: '#/components/schemas/EntityInfoSchema'\n        login:\n          type: string\n          description: Login\n          example: Meme Lord\n        first_name:\n          type: string\n          description: First name\n        last_name:\n          type: string\n          description: Last name\n        status:\n          allOf:\n            - $ref: '#/components/schemas/StatusEnum'\n          description: record status, 'active' by default\n        created_at:\n          type: string\n          description: UTC datetime\n          format: date-time\n        updated_at:\n          type: string\n          description: UTC datetime\n          format: date-time\n    ExchangeRate:\n      required:\n        - base\n        - to\n        - rate\n      type: object\n      properties:\n        base:\n          type: string\n          example: USD\n        to:\n          type: string\n          example: EUR\n        rate:\n          minimum: 0\n          exclusiveMinimum: true\n          type: number\n          example: 0.98\n    FileSchema:\n      required:\n        - id\n        - created_at\n        - file_type\n        - name\n        - region\n        - md5\n        - mimetype\n        - url\n        - size\n      type: object\n      properties:\n        id:\n          type: string\n          description: A unique ID of this file.\n          format: uuid\n        created_at:\n          type: string\n          description: UTC date and time when this workflow was uploaded to Monite. Timestamps follow the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.\n          format: date-time\n        file_type:\n          type: string\n          description: The type of the business object associated with this file.\n          example: payables\n        name:\n          type: string\n          description: The original file name (if available).\n          example: invoice.pdf\n        region:\n          type: string\n          description: Geographical region of the data center where the file is stored.\n          example: eu-central-1\n        md5:\n          type: string\n          description: The MD5 hash of the file.\n          example: 31d1a2dd1ad3dfc39be849d70a68dac0\n        mimetype:\n          type: string\n          description: The file's [media type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types).\n          example: application/pdf\n        url:\n          type: string\n          description: The URL to download the file.\n          example: https://bucketname.s3.amazonaws.com/12345/67890.pdf\n        size:\n          minimum: 0\n          type: integer\n          description: The file size in bytes.\n          example: 24381\n        previews:\n          type: array\n          items:\n            $ref: '#/components/schemas/PreviewSchema'\n          description: Preview images generated for this file. There can be multiple images with different sizes.\n          default: []\n        pages:\n          type: array\n          items:\n            $ref: '#/components/schemas/PageSchema'\n          description: If the file is a PDF document, this property contains individual pages extracted from the file. Otherwise, an empty array.\n          default: []\n      description: Represents a file (such as a PDF invoice) that was uploaded to Monite.\n    GrantType:\n      enum:\n        - client_credentials\n        - entity_user\n      type: string\n      description: An enumeration.\n    IndividualSchema:\n      required:\n        - first_name\n        - last_name\n      type: object\n      properties:\n        first_name:\n          maxLength: 100\n          type: string\n          description: A first name of an individual\n        last_name:\n          maxLength: 100\n          type: string\n          description: A last name of an individual\n        vat_id:\n          maxLength: 15\n          type: string\n          description: A VAT number of the entity which points to the registered tax applied for a service price\n        tax_id:\n          maxLength: 30\n          type: string\n          description: An identification number of the legal entity\n        title:\n          maxLength: 10\n          type: string\n          description: A title of an individual\n      description: A schema contains metadata for an individual\n    MessageResponse:\n      required:\n        - message\n      type: object\n      properties:\n        message:\n          type: string\n    ObtainTokenPayload:\n      required:\n        - grant_type\n        - client_id\n        - client_secret\n      type: object\n      properties:\n        grant_type:\n          $ref: '#/components/schemas/GrantType'\n        client_id:\n          type: string\n          format: uuid\n        client_secret:\n          type: string\n        entity_user_id:\n          type: string\n          format: uuid\n    OptionalIndividualSchema:\n      type: object\n      properties:\n        first_name:\n          maxLength: 100\n          type: string\n          description: A first name of an individual\n        last_name:\n          maxLength: 100\n          type: string\n          description: A last name of an individual\n        vat_id:\n          maxLength: 15\n          type: string\n          description: A VAT number of the entity which points to the registered tax applied for a service price\n        tax_id:\n          maxLength: 30\n          type: string\n          description: An identification number of the legal entity\n        title:\n          maxLength: 10\n          type: string\n          description: A title of an individual\n      description: A schema for metadata for updating an individual\n    OptionalOrganizationSchema:\n      type: object\n      properties:\n        legal_name:\n          maxLength: 255\n          type: string\n          description: A legal name of an organization\n        vat_id:\n          maxLength: 15\n          type: string\n          description: A VAT number of the entity which points to the registered tax applied for a service price\n        legal_entity_id:\n          maxLength: 20\n          type: string\n          description: A code which identifies uniquely a party of a transaction worldwide\n      description: A schema contains metadata for updating an organization\n    OrganizationSchema:\n      required:\n        - legal_name\n        - vat_id\n      type: object\n      properties:\n        legal_name:\n          maxLength: 255\n          type: string\n          description: A legal name of an organization\n        vat_id:\n          maxLength: 15\n          type: string\n          description: A VAT number of the entity which points to the registered tax applied for a service price\n        legal_entity_id:\n          maxLength: 20\n          type: string\n          description: A code which identifies uniquely a party of a transaction worldwide\n      description: A schema contains metadata for an organization\n    PageSchema:\n      required:\n        - id\n        - mimetype\n        - size\n        - number\n        - url\n      type: object\n      properties:\n        id:\n          type: string\n          description: A unique ID of the image.\n          format: uuid\n        mimetype:\n          type: string\n          description: The [media type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the image.\n          example: image/png\n        size:\n          minimum: 0\n          type: integer\n          description: Image file size, in bytes.\n          example: 21972\n        number:\n          minimum: 0\n          type: integer\n          description: The page number in the PDF document, from 0.\n          example: 0\n        url:\n          type: string\n          description: The URL to download the image.\n          example: https://bucket.s3.amazonaws.com/123/456.png\n      description: |-\n        When a PDF document is uploaded to Monite, it extracts individual pages from the document\n        and saves them as PNG images. This object contains the image and metadata of a single page.\n    PartnerProjectSettingsPayload:\n      type: object\n      properties:\n        currency:\n          $ref: '#/components/schemas/CurrencySettings'\n        payable:\n          $ref: '#/components/schemas/PayableSettings'\n        receivable:\n          $ref: '#/components/schemas/ReceivableSettings'\n        commercial_conditions:\n          type: array\n          items:\n            type: string\n        units:\n          type: array\n          items:\n            $ref: '#/components/schemas/Unit'\n        website:\n          type: string\n    PartnerProjectSettingsResponse:\n      type: object\n      properties:\n        currency:\n          $ref: '#/components/schemas/CurrencySettings'\n        payable:\n          $ref: '#/components/schemas/PayableSettings'\n        receivable:\n          $ref: '#/components/schemas/ReceivableSettings'\n        commercial_conditions:\n          type: array\n          items:\n            type: string\n        units:\n          type: array\n          items:\n            $ref: '#/components/schemas/Unit'\n        website:\n          type: string\n    PatchSettingsPayload:\n      type: object\n      properties:\n        currency:\n          $ref: '#/components/schemas/CurrencySettings'\n        reminder:\n          $ref: '#/components/schemas/RemindersSettings'\n        template:\n          $ref: '#/components/schemas/TemplateSettings'\n        payment_priority:\n          allOf:\n            - $ref: '#/components/schemas/PaymentPriorityEnum'\n          description: Payment preferences for entity to automate calculating suggested payment date basing on payment terms and entity preferences\n          default: working_capital\n    PayableActionEnum:\n      enum:\n        - create\n        - read\n        - update\n        - delete\n        - pay\n        - approve\n        - submit\n      type: string\n      description: An enumeration.\n    PayableActionSchema:\n      type: object\n      properties:\n        action_name:\n          allOf:\n            - $ref: '#/components/schemas/PayableActionEnum'\n          description: Action name\n          default: read\n        permission:\n          allOf:\n            - $ref: '#/components/schemas/PermissionEnum'\n          description: Permission type\n          default: allowed\n    PayableSchema:\n      type: object\n      properties:\n        object_type:\n          enum:\n            - payable\n          type: string\n          description: Object type\n          default: payable\n        actions:\n          type: array\n          items:\n            $ref: '#/components/schemas/PayableActionSchema'\n          description: List of actions\n    PayableSettings:\n      required:\n        - approve_page_url\n      type: object\n      properties:\n        approve_page_url:\n          maxLength: 2083\n          minLength: 1\n          type: string\n          format: uri\n          example: https://monite.com\n    PaymentPriorityEnum:\n      enum:\n        - working_capital\n        - balanced\n        - bottom_line\n      type: string\n      description: An enumeration.\n    PermissionEnum:\n      enum:\n        - allowed\n        - allowed_for_own\n        - not_allowed\n      type: string\n      description: An enumeration.\n    PreviewSchema:\n      required:\n        - url\n        - width\n        - height\n      type: object\n      properties:\n        url:\n          type: string\n          description: The image URL.\n          example: https://bucketname.s3.amazonaws.com/1/2/3.png\n        width:\n          type: integer\n          description: The image width in pixels.\n          example: 200\n        height:\n          type: integer\n          description: The image height in pixels.\n          example: 400\n      description: A preview image generated for a file.\n    ReceivableSettings:\n      required:\n        - create_without_personal_info\n      type: object\n      properties:\n        create_without_personal_info:\n          type: boolean\n    RemindersSettings:\n      required:\n        - excluded_counterpart_ids\n      type: object\n      properties:\n        enabled:\n          type: boolean\n          default: true\n        excluded_counterpart_ids:\n          type: array\n          items:\n            type: string\n            format: uuid\n          description: Counterparts UUID's for which reminders will be turned off\n    RevokeTokenPayload:\n      required:\n        - client_id\n        - client_secret\n        - token\n      type: object\n      properties:\n        client_id:\n          type: string\n          format: uuid\n        client_secret:\n          type: string\n        token:\n          type: string\n    RolePaginationResponse:\n      required:\n        - data\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/RoleResponse'\n          description: array of records\n        prev_pagination_token:\n          type: string\n          description: optional querystring with pagination parameters, null if there is no page\n        next_pagination_token:\n          type: string\n          description: optional querystring with pagination parameters, null if there is no page\n    RoleResponse:\n      required:\n        - id\n        - name\n        - permissions\n        - status\n        - created_at\n        - updated_at\n      type: object\n      properties:\n        id:\n          type: string\n          description: UUID role ID\n          format: uuid\n        name:\n          minLength: 1\n          type: string\n          description: Role name\n        permissions:\n          allOf:\n            - $ref: '#/components/schemas/BizObjectsSchema'\n          description: Access permissions\n        status:\n          allOf:\n            - $ref: '#/components/schemas/StatusEnum'\n          description: record status, 'active' by default\n        created_at:\n          type: string\n          description: UTC datetime\n          format: date-time\n        updated_at:\n          type: string\n          description: UTC datetime\n          format: date-time\n    RootSchema:\n      anyOf:\n        - $ref: '#/components/schemas/CommonSchema'\n        - $ref: '#/components/schemas/PayableSchema'\n      description: An abstract which provides interfaces for managing polymorphic schemas\n      discriminator:\n        propertyName: object_type\n        mapping:\n          comment: '#/components/schemas/CommonSchema'\n          entity_user: '#/components/schemas/CommonSchema'\n          entity: '#/components/schemas/CommonSchema'\n          entity_bank_account: '#/components/schemas/CommonSchema'\n          export: '#/components/schemas/CommonSchema'\n          reconciliation: '#/components/schemas/CommonSchema'\n          role: '#/components/schemas/CommonSchema'\n          todo_task: '#/components/schemas/CommonSchema'\n          todo_task_mute: '#/components/schemas/CommonSchema'\n          transaction: '#/components/schemas/CommonSchema'\n          workflow: '#/components/schemas/CommonSchema'\n          payable: '#/components/schemas/PayableSchema'\n    SearchEntitiesPayload:\n      type: object\n      properties:\n        id__in:\n          type: array\n          items:\n            type: string\n            format: uuid\n        id__not_in:\n          type: array\n          items:\n            type: string\n            format: uuid\n        entity_id:\n          type: string\n          format: uuid\n        role__permissions__contains:\n          type: string\n          format: uuid\n        role_id:\n          type: string\n          format: uuid\n        login:\n          type: string\n        status:\n          type: string\n    SearchRolesPayload:\n      type: object\n      properties:\n        id__in:\n          type: array\n          items:\n            type: string\n            format: uuid\n        entity_id:\n          type: string\n          format: uuid\n    SettingsResponse:\n      type: object\n      properties:\n        currency:\n          $ref: '#/components/schemas/CurrencySettings'\n        reminder:\n          $ref: '#/components/schemas/RemindersSettings'\n        template:\n          $ref: '#/components/schemas/TemplateSettings'\n        payment_priority:\n          allOf:\n            - $ref: '#/components/schemas/PaymentPriorityEnum'\n          description: Payment preferences for entity to automate calculating suggested payment date basing on payment terms and entity preferences\n          default: working_capital\n    TemplateSettings:\n      required:\n        - receivables_pdf_template_id\n      type: object\n      properties:\n        receivables_pdf_template_id:\n          type: string\n          format: uuid\n    Unit:\n      required:\n        - name\n        - designation\n      type: object\n      properties:\n        name:\n          type: string\n          example: CPA\n        designation:\n          type: string\n          example: Certified Public Accountant\n    UpdateEntityBankAccountRequest:\n      type: object\n      properties:\n        iban:\n          maxLength: 34\n          type: string\n          description: The IBAN of the entity’s bank account.\n        bic:\n          maxLength: 11\n          type: string\n          description: The BIC of the entity’s bank account.\n        bank_name:\n          type: string\n          description: The name of the entity’s bank account.\n        display_name:\n          type: string\n    UpdateEntityRequest:\n      anyOf:\n        - $ref: '#/components/schemas/UpdateOrganizationEntityRequest'\n        - $ref: '#/components/schemas/UpdateIndividualEntityRequest'\n      description: A schema for a request to update an entity\n    UpdateEntityUserRequest:\n      type: object\n      properties:\n        role_id:\n          type: string\n          description: UUID of the role assigned to this entity user\n          format: uuid\n        first_name:\n          type: string\n          description: First name\n          example: Andrey\n        last_name:\n          type: string\n          description: Last name\n          example: Korchak\n        title:\n          type: string\n          description: Title\n          example: Boss\n        login:\n          type: string\n          description: Login\n          example: Meme Lord\n        info:\n          $ref: '#/components/schemas/EntityInfoSchema'\n    UpdateIndividualEntityRequest:\n      type: object\n      properties:\n        address:\n          allOf:\n            - $ref: '#/components/schemas/EntityAddressSchema'\n          description: An address description of the entity\n        email:\n          type: string\n          description: An official email address of the entity\n          format: email\n        phone:\n          maxLength: 100\n          type: string\n          description: A phone number of the entity\n        individual:\n          allOf:\n            - $ref: '#/components/schemas/OptionalIndividualSchema'\n          description: A set of meta data describing the individual\n      description: A base for entity related schemas of different types\n    UpdateOrganizationEntityRequest:\n      type: object\n      properties:\n        address:\n          allOf:\n            - $ref: '#/components/schemas/EntityAddressSchema'\n          description: An address description of the entity\n        email:\n          type: string\n          description: An official email address of the entity\n          format: email\n        phone:\n          maxLength: 100\n          type: string\n          description: A phone number of the entity\n        organization:\n          allOf:\n            - $ref: '#/components/schemas/OptionalOrganizationSchema'\n          description: A set of meta data describing the organization\n      description: A base for entity related schemas of different types\n    UpdateRoleRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          description: Role name\n        permissions:\n          allOf:\n            - $ref: '#/components/schemas/BizObjectsSchema'\n          description: Access permissions\n    api__v1__entities__pagination__CursorFields:\n      enum:\n        - created_at\n        - updated_at\n      type: string\n      description: An enumeration.\n    api__v1__entity_users__pagination__CursorFields:\n      enum:\n        - updated_at\n      type: string\n      description: An enumeration.\n    api__v1__roles__pagination__CursorFields:\n      enum:\n        - updated_at\n      type: string\n      description: An enumeration.\n    ApprovalResponse:\n      required:\n        - id\n        - object_type\n        - object_id\n        - action_name\n        - status\n        - created_at\n        - updated_at\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        object_type:\n          $ref: '#/components/schemas/ObjectType'\n        object_id:\n          type: string\n          format: uuid\n        action_name:\n          type: string\n        status:\n          $ref: '#/components/schemas/ApprovalStatusEnum'\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n    ApprovalStatusEnum:\n      enum:\n        - active\n        - approved\n        - rejected\n        - discarded\n      type: string\n      description: An enumeration.\n    Body_upload_new_payable_payables_post:\n      required:\n        - file\n      type: object\n      properties:\n        file:\n          type: string\n          format: binary\n    CommentPayload:\n      type: object\n      properties:\n        comment:\n          type: string\n          description: An arbitrary comment that describes how and when this payable was paid.\n    CommentSchema:\n      required:\n        - id\n        - entity_id\n        - status\n        - entity_user_id\n        - object_id\n        - object_type\n        - text\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        entity_id:\n          type: string\n          format: uuid\n        status:\n          $ref: '#/components/schemas/StatusEnum'\n        entity_user_id:\n          type: string\n          format: uuid\n        api_user_id:\n          type: string\n          format: uuid\n        partner_id:\n          type: string\n          format: uuid\n        object_id:\n          type: string\n        object_type:\n          type: string\n        text:\n          type: string\n        mentions:\n          type: array\n          items:\n            $ref: '#/components/schemas/MentionSchema'\n        replies_to:\n          type: string\n          format: uuid\n        attachments:\n          type: array\n          items:\n            $ref: '#/components/schemas/FileSchema'\n        edited_at:\n          type: string\n          format: date-time\n        created_at:\n          type: string\n          format: date-time\n    CreateExportTaskResponseSchema:\n      required:\n        - id\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n    CreateUpdateCommentSchema:\n      required:\n        - text\n      type: object\n      properties:\n        text:\n          type: string\n    CreateWorkflowSchema:\n      required:\n        - policy_name\n      type: object\n      properties:\n        policy_name:\n          maxLength: 255\n          type: string\n          description: The name of this workflow (approval policy).\n          example: Expense approval\n        policy_description:\n          maxLength: 500\n          type: string\n          description: An arbitrary description of this workflow (approval policy).\n        workflow:\n          type: object\n          description: The workflow definition in the [Monite script](https://docs.monite.com/docs/monite-script) format (as JSON).\n          default: {}\n          example:\n            trigger:\n              version: 1\n              object_type: payable\n              action: create\n              currency: EUR\n            functions:\n              - call:\n                  method: Payables.request_approval_by_entity_user\n                  params:\n                    entity_user_ids:\n                      - 5f3196d2-48ce-4c1e-b29e-c3e5d1fb7a13\n      description: |-\n        A Workflow object represents an approval policy for payable status transitions.\n        Workflows are defined using the [Monite script](https://docs.monite.com/docs/monite-script).\n        Each workflow consists of trigger conditions and the function calls executed when the workflow is triggered.\n    CurrencyExchangeSchema:\n      required:\n        - default_currency_code\n        - rate\n        - total\n      type: object\n      properties:\n        default_currency_code:\n          type: string\n        rate:\n          minimum: 0\n          exclusiveMinimum: true\n          type: integer\n        total:\n          type: integer\n    DocumentExportResponseSchema:\n      required:\n        - entity_id\n        - count\n        - id\n        - language\n        - status\n        - format\n      type: object\n      properties:\n        source_url:\n          maxLength: 2083\n          minLength: 1\n          type: string\n          format: uri\n        entity_id:\n          type: string\n          format: uuid\n        start_datetime:\n          type: string\n          format: date-time\n        end_datetime:\n          type: string\n          format: date-time\n        count:\n          type: integer\n        id:\n          type: string\n          format: uuid\n        language:\n          type: string\n        status:\n          type: string\n        created_by_entity_user_id:\n          type: string\n          format: uuid\n        format:\n          type: string\n    ExportFormat:\n      enum:\n        - csv\n        - pdf\n      type: string\n      description: An enumeration.\n    ExportObjectSchema:\n      anyOf:\n        - $ref: '#/components/schemas/ExportPayableSchema'\n        - $ref: '#/components/schemas/ExportReceivableSchema'\n      discriminator:\n        propertyName: name\n        mapping:\n          payable: '#/components/schemas/ExportPayableSchema'\n          receivable: '#/components/schemas/ExportReceivableSchema'\n    ExportPayableSchema:\n      required:\n        - name\n        - statuses\n      type: object\n      properties:\n        name:\n          enum:\n            - payable\n          type: string\n        statuses:\n          type: array\n          items:\n            $ref: '#/components/schemas/PayableStateEnum'\n    ExportPayloadSchema:\n      required:\n        - format\n        - objects\n        - date_from\n        - date_to\n      type: object\n      properties:\n        format:\n          $ref: '#/components/schemas/ExportFormat'\n        objects:\n          type: array\n          items:\n            $ref: '#/components/schemas/ExportObjectSchema'\n        date_from:\n          type: string\n          format: date\n        date_to:\n          type: string\n          format: date\n    ExportReceivableSchema:\n      required:\n        - name\n        - statuses\n      type: object\n      properties:\n        name:\n          enum:\n            - receivable\n          type: string\n        statuses:\n          type: array\n          items:\n            $ref: '#/components/schemas/ReceivablesStatusEnum'\n    Item:\n      required:\n        - text\n        - confidence\n      type: object\n      properties:\n        text:\n          type: string\n          description: The text as recognized by OCR.\n          example: €1,125.00\n        confidence:\n          maximum: 100\n          minimum: 0\n          type: number\n          description: OCR confidence score - the estimated accuracy percentage of character recognition of the extracted text, from 0 to 100%.\n          example: 96.238\n        processed_text:\n          anyOf:\n            - type: integer\n            - type: number\n            - type: string\n              format: date-time\n            - type: string\n          description: |-\n            If the `text` value is identified as a currency amount or a date, `processed_text` contains this value converted to a common format:\n\n            * Currency amounts (such as the total, subtotal, tax/VAT, line item prices) are converted to numbers with the currency character removed. For example, \"€1,125.00\" becomes 1125.0.* Dates are converted to the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, `YYYY-MM-DDThh:mm:ss`. For example, \"26/3/2021\" becomes \"2021-03-26T00:00:00\".\n\n            If `text` is not a currency amount or a date, `processed_text` is `null`.\n          example: 1125\n      description: Contains information about a text block or line extracted from an uploaded document by OCR.\n    LabelNValue:\n      required:\n        - label\n        - value\n      type: object\n      properties:\n        label:\n          allOf:\n            - $ref: '#/components/schemas/Item'\n          description: Text label.\n          example:\n            text: total\n            confidence: 99.799\n        value:\n          allOf:\n            - $ref: '#/components/schemas/Item'\n          description: The value (if any).\n      description: |-\n        A label-value pair extracted from an uploaded document by OCR.\n        For example, the label could be \"Total\" and the value could be a currency amount.\n    MentionSchema:\n      required:\n        - visible_name\n        - group\n        - recipient\n      type: object\n      properties:\n        visible_name:\n          type: string\n        group:\n          type: string\n        recipient:\n          type: string\n    ObjectType:\n      enum:\n        - partner\n        - partner_internal_config\n        - partner_token\n        - partner_settings\n        - approval\n        - comment\n        - export\n        - entity\n        - entity_settings\n        - entity_token\n        - entity_user\n        - entity_user_token\n        - entity_bank_account\n        - payable\n        - receivable\n        - reconciliation\n        - role\n        - todo_task\n        - todo_task_mute\n        - transaction\n        - workflow\n        - workflow_pipeline\n        - counterpart\n        - counterpart_bank_account\n        - counterpart_contact_person\n        - webhook\n        - audit_trail\n        - payment_reminder\n        - recurrence\n        - tag\n      type: string\n      description: An enumeration.\n    ObjectTypeAvailableComment:\n      enum:\n        - payable\n      description: An enumeration.\n    ObjectTypeEnum:\n      enum:\n        - payable\n      type: string\n      description: An enumeration.\n    OcrRecognitionResponse:\n      type: object\n      properties:\n        summary:\n          type: array\n          items:\n            $ref: '#/components/schemas/LabelNValue'\n          description: Invoice text content other than the line items. Such as the invoice issue and due dates, vendor name and address, and other general information.\n        line_items:\n          type: array\n          items:\n            $ref: '#/components/schemas/LabelNValue'\n          description: Text content of the invoice line items as recognized by OCR.\n      description: |-\n        Contains information about all text blocks extracted from an uploaded invoice by OCR.\n        The text blocks are grouped into `line_items` (invoice line items) and `summary` (all other information).\n    PaginatedApprovalResponse:\n      required:\n        - data\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/ApprovalResponse'\n        next_pagination_token:\n          type: string\n        prev_pagination_token:\n          type: string\n    PaginatedTodoTask:\n      required:\n        - data\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/TodoTask'\n        next_pagination_token:\n          type: string\n        prev_pagination_token:\n          type: string\n    PayableOriginEnum:\n      enum:\n        - upload\n        - email\n      type: string\n      description: An enumeration.\n    PayablePendingActionEnum:\n      enum:\n        - pay\n        - approve\n      type: string\n      description: An enumeration.\n    PayablePendingActionResponse:\n      required:\n        - data\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/PayablePendingActionSchema'\n    PayablePendingActionSchema:\n      required:\n        - action_type\n        - object_id\n        - object_type\n      type: object\n      properties:\n        action_type:\n          $ref: '#/components/schemas/PayablePendingActionEnum'\n        object_id:\n          type: string\n          format: uuid\n        object_type:\n          $ref: '#/components/schemas/ObjectTypeEnum'\n    PayableResponseSchema:\n      required:\n        - id\n        - entity_id\n        - status\n        - source_of_payable_data\n        - payable_origin\n        - created_at\n        - updated_at\n      type: object\n      properties:\n        id:\n          type: string\n          description: A unique ID assigned to this payable.\n          format: uuid\n        entity_id:\n          type: string\n          description: The ID of the entity to which the payable was issued.\n          format: uuid\n        marked_as_paid_with_comment:\n          type: string\n          description: An arbitrary comment that describes how and when this payable was paid.\n          example: Was paid partly in the end of the month.\n        marked_as_paid_by_entity_user_id:\n          type: string\n          description: The ID of the entity user who marked this document as paid.\n          format: uuid\n          example: 71e8875a-43b3-434f-b12a-54c84c176ef3\n        status:\n          allOf:\n            - $ref: '#/components/schemas/PayableStateEnum'\n          description: The [status](https://docs.monite.com/docs/payables-lifecycle) of the payable.\n        source_of_payable_data:\n          allOf:\n            - $ref: '#/components/schemas/SourceOfPayableDataEnum'\n          description: 'Specifies how the property values of this payable were provided: `ocr` - Monite OCR service extracted the values from the provided PDF or image file, `user_specified` - values were added or updated via an API call.'\n        currency:\n          allOf:\n            - $ref: '#/components/schemas/CurrencyEnum'\n          description: The [currency code](https://docs.monite.com/docs/currencies) of the currency used in the payable.\n          example: EUR\n        amount:\n          type: integer\n          description: The total amount to be paid, in [minor units](https://docs.monite.com/docs/currencies#minor-units). For example, $12.50 is represented as 1250.\n          example: 1250\n        description:\n          type: string\n          description: An arbitrary description of this payable.\n        due_date:\n          type: string\n          description: The date by which the payable must be paid, in the YYYY-MM-DD format. If the payable specifies payment terms with early payment discounts, this is the final payment date.\n          format: date\n        payment_terms:\n          allOf:\n            - $ref: '#/components/schemas/PaymentTermsCreatePayload'\n          description: The number of days to pay with potential discount for options shorter than due_date\n        suggested_payment_term:\n          allOf:\n            - $ref: '#/components/schemas/SuggestedPaymentTerm'\n          description: The suggested date and corresponding discount in which payable could be paid. The date is in the YYYY-MM-DD format. The discount is calculated as X * (10^-4) - for example, 100 is 1%, 25 is 0,25%, 10000 is 100 %. Date varies depending on the payment terms and may even be equal to the due date with discount 0.\n        issued_at:\n          type: string\n          description: The date when the payable was issued, in the YYYY-MM-DD format.\n          format: date\n        counterpart_bank_id:\n          type: string\n          description: SWIFT code (BIC) of the vendor's bank (if specified in the payable document).\n          example: DEUTDE2HXXX\n        counterpart_id:\n          type: string\n          description: The ID of the counterpart object that represents the vendor or supplier.\n          format: uuid\n        counterpart_account_id:\n          type: string\n          description: Vendor's bank account number, IBAN, or similar (if specified in the payable document).\n          example: '123456789012'\n        counterpart_name:\n          type: string\n          description: Vendor or supplier name.\n          example: Acme Inc.\n        payable_origin:\n          allOf:\n            - $ref: '#/components/schemas/PayableOriginEnum'\n          description: 'Specifies how this payable was created in Monite: `upload` - created via an API call, `email` - sent via email to the entity''s mailbox.'\n        was_created_by_user_id:\n          type: string\n          format: uuid\n        was_created_by_external_user_name:\n          type: string\n        was_created_by_external_user_id:\n          type: string\n        currency_exchange:\n          $ref: '#/components/schemas/CurrencyExchangeSchema'\n        file:\n          allOf:\n            - $ref: '#/components/schemas/FileSchema'\n          description: The original file from which this payable was created.\n        tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/TagReadSchema'\n          description: A list of user-defined tags (labels) assigned to this payable. Tags can be used to trigger a specific approval policy for this payable.\n        created_at:\n          type: string\n          description: UTC date and time when this payable was created. Timestamps follow the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.\n          format: date-time\n        updated_at:\n          type: string\n          description: UTC date and time when this payable was last updated. Timestamps follow the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.\n          format: date-time\n        other_extracted_data:\n          allOf:\n            - $ref: '#/components/schemas/OcrRecognitionResponse'\n          description: Data extracted from the uploaded payable by OCR.\n        applied_policy:\n          type: string\n          description: The name of an existing workflow (approval policy) that applies to this payable, if any. A workflow is applied if the payable matches the workflow trigger conditions.\n        document_id:\n          type: string\n          description: A unique invoice number assigned by the invoice issuer for payment tracking purposes. This is different from `id` which is an internal ID created automatically by Monite.\n          example: DE2287\n        subtotal:\n          type: integer\n          description: The subtotal amount to be paid, in [minor units](https://docs.monite.com/docs/currencies#minor-units). For example, $12.50 is represented as 1250.\n          example: 1250\n        tax:\n          type: integer\n          description: Registered tax applied for a service price, in [minor units](https://docs.monite.com/docs/currencies#minor-units). For example, $12.50 is represented as 1250.\n          example: 1900\n          format: int99\n      description: Represents an Accounts Payable document received from a vendor or supplier.\n    PayableStateEnum:\n      enum:\n        - new\n        - approve_in_progress\n        - waiting_to_be_paid\n        - paid\n        - canceled\n        - rejected\n      type: string\n      description: An enumeration.\n    PayableUpdateSchema:\n      type: object\n      properties:\n        currency:\n          allOf:\n            - $ref: '#/components/schemas/CurrencyEnum'\n          description: The [currency code](https://docs.monite.com/docs/currencies) of the currency used in the payable.\n          example: EUR\n        amount:\n          type: integer\n          description: The total amount to be paid, in [minor units](https://docs.monite.com/docs/currencies#minor-units). For example, $12.50 is represented as 1250.\n          example: 1250\n        description:\n          type: string\n          description: An arbitrary description of this payable.\n        due_date:\n          type: string\n          description: The date by which the payable must be paid, in the YYYY-MM-DD format. If the payable specifies payment terms with early payment discounts, this is the final payment date.\n          format: date\n        payment_terms:\n          allOf:\n            - $ref: '#/components/schemas/PaymentTermsCreatePayload'\n          description: The number of days to pay with potential discount for options shorter than due_date\n        suggested_payment_term:\n          allOf:\n            - $ref: '#/components/schemas/SuggestedPaymentTerm'\n          description: The suggested date and corresponding discount in which payable could be paid. The date is in the YYYY-MM-DD format. The discount is calculated as X * (10^-4) - for example, 100 is 1%, 25 is 0,25%, 10000 is 100 %. Date varies depending on the payment terms and may even be equal to the due date with discount 0.\n        issued_at:\n          type: string\n          description: The date when the payable was issued, in the YYYY-MM-DD format.\n          format: date\n        counterpart_bank_id:\n          type: string\n          description: SWIFT code (BIC) of the vendor's bank.\n          example: DEUTDE2HXXX\n        counterpart_id:\n          type: string\n          description: The ID of the counterpart object that represents the vendor or supplier.\n          format: uuid\n        counterpart_account_id:\n          type: string\n          description: Vendor's bank account number, IBAN, or similar.\n          example: '123456789012'\n        counterpart_name:\n          type: string\n          description: Vendor or supplier name.\n          example: Acme Inc.\n        tag_ids:\n          type: array\n          items:\n            type: string\n          description: A list of IDs of user-defined tags (labels) assigned to this payable. Tags can be used to trigger a specific approval policy for this payable.\n        document_id:\n          type: string\n          description: A unique invoice number assigned by the invoice issuer for payment tracking purposes.\n          example: DE2287\n        subtotal:\n          type: integer\n          description: The subtotal amount to be paid, in [minor units](https://docs.monite.com/docs/currencies#minor-units). For example, $12.50 is represented as 1250.\n          example: 1250\n        tax:\n          type: integer\n          description: Registered tax applied for a service price, in [minor units](https://docs.monite.com/docs/currencies#minor-units). For example, $12.50 is represented as 1250.\n          example: 1900\n      description: This schema is used to update the data of an existing payable.\n    PayableUploadWithDataSchema:\n      required:\n        - base64_encoded_file\n      type: object\n      properties:\n        currency:\n          allOf:\n            - $ref: '#/components/schemas/CurrencyEnum'\n          description: The [currency code](https://docs.monite.com/docs/currencies) of the currency used in the payable.\n          example: EUR\n        amount:\n          type: integer\n          description: The total amount to be paid, in [minor units](https://docs.monite.com/docs/currencies#minor-units). For example, $12.50 is represented as 1250.\n          example: 1250\n        description:\n          type: string\n          description: An arbitrary description of this payable.\n        due_date:\n          type: string\n          description: The date by which the payable must be paid, in the YYYY-MM-DD format. If the payable specifies payment terms with early payment discounts, this is the final payment date.\n          format: date\n        payment_terms:\n          allOf:\n            - $ref: '#/components/schemas/PaymentTermsCreatePayload'\n          description: The number of days to pay with potential discount for options shorter than due_date\n        suggested_payment_term:\n          allOf:\n            - $ref: '#/components/schemas/SuggestedPaymentTerm'\n          description: The suggested date and corresponding discount in which payable could be paid. The date is in the YYYY-MM-DD format. The discount is calculated as X * (10^-4) - for example, 100 is 1%, 25 is 0,25%, 10000 is 100 %. Date varies depending on the payment terms and may even be equal to the due date with discount 0.\n        issued_at:\n          type: string\n          description: The date when the payable was issued, in the YYYY-MM-DD format.\n          format: date\n        counterpart_bank_id:\n          type: string\n          description: SWIFT code (BIC) of the vendor's bank.\n          example: DEUTDE2HXXX\n        counterpart_account_id:\n          type: string\n          description: Vendor's bank account number, IBAN, or similar.\n          example: '123456789012'\n        counterpart_name:\n          type: string\n          description: Vendor or supplier name.\n          example: Acme Inc.\n        base64_encoded_file:\n          type: string\n          description: |-\n            Base64-encoded contents of the original issued payable. The file is provided for reference purposes as the original source of the data.\n\n             Any file formats are allowed. The most common formats are PDF, PNG, JPG, GIF.\n        tag_ids:\n          type: array\n          items:\n            type: string\n            format: uuid\n          description: A list of IDs of user-defined tags (labels) assigned to this payable. Tags can be used to trigger a specific approval policy for this payable.\n        document_id:\n          type: string\n          description: A unique invoice number assigned by the invoice issuer for payment tracking purposes.\n          example: DE2287\n        subtotal:\n          type: integer\n          description: The subtotal amount to be paid, in [minor units](https://docs.monite.com/docs/currencies#minor-units). For example, $12.50 is represented as 1250.\n          example: 1250\n        tax:\n          type: integer\n          description: Registered tax applied for a service price, in [minor units](https://docs.monite.com/docs/currencies#minor-units). For example, $12.50 is represented as 1250.\n          example: 1900\n      description: This schema is used to create a new payable by providing its data along with the original file.\n    PipelineResponseSchema:\n      required:\n        - id\n        - object_type\n        - object_id\n        - status\n        - workflow_id\n        - created_at\n        - updated_at\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        object_type:\n          type: string\n        object_id:\n          type: string\n          format: uuid\n        error_text:\n          type: string\n        status:\n          $ref: '#/components/schemas/api__schemas__workflows__enums__WorkflowPipelineStatusEnum'\n        workflow_id:\n          type: string\n          format: uuid\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n    PipelinesPaginationResponse:\n      required:\n        - data\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/PipelineResponseSchema'\n          description: A paginated list of pipelines.\n        prev_pagination_token:\n          type: string\n          description: optional querystring with pagination parameters, null if there is no page\n        next_pagination_token:\n          type: string\n          description: optional querystring with pagination parameters, null if there is no page\n    SourceOfPayableDataEnum:\n      enum:\n        - ocr\n        - user_specified\n      type: string\n      description: An enumeration.\n    SuggestedPaymentTerm:\n      required:\n        - date\n      type: object\n      properties:\n        date:\n          type: string\n          format: date\n        discount:\n          maximum: 10000\n          minimum: 0\n          type: integer\n      description: Suggested payment date and corresponding discount\n    SupportedFormatSchema:\n      required:\n        - object_type\n        - available_types\n      type: object\n      properties:\n        object_type:\n          enum:\n            - payable\n            - receivable\n          type: string\n        available_types:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/ExportFormat'\n    TagCreateOrUpdateSchema:\n      required:\n        - name\n      type: object\n      properties:\n        name:\n          maxLength: 255\n          minLength: 1\n          type: string\n          description: The tag name.\n          example: Marketing\n    TagReadSchema:\n      required:\n        - name\n        - id\n      type: object\n      properties:\n        name:\n          maxLength: 255\n          minLength: 1\n          type: string\n          description: The tag name.\n          example: Marketing\n        id:\n          type: string\n          description: A unique ID of this tag.\n          format: uuid\n      description: Represents a user-defined tag that can be assigned to payables to filter them.\n    TagsResponse:\n      required:\n        - data\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/TagReadSchema'\n      description: A list of Tags.\n    TasksCountSchema:\n      required:\n        - status\n        - count\n      type: object\n      properties:\n        status:\n          type: string\n        count:\n          type: integer\n    TodoTask:\n      required:\n        - id\n        - oid\n        - entity_user_id\n        - status\n        - viewed\n        - object_type\n        - action\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        oid:\n          type: integer\n        entity_user_id:\n          type: string\n          format: uuid\n        status:\n          type: string\n        viewed:\n          type: boolean\n        object_id:\n          type: string\n        object_type:\n          type: string\n        action:\n          type: string\n        performed_by_user_id:\n          type: string\n    TodoTaskStatusEnum:\n      enum:\n        - active\n        - muted\n        - completed\n        - discarded\n      type: string\n      description: An enumeration.\n    UpdateTodoTask:\n      type: object\n      properties:\n        mute:\n          type: boolean\n          default: false\n        viewed:\n          type: boolean\n          default: false\n    WorkflowResponseSchema:\n      required:\n        - id\n        - created_by_entity_user\n        - object_type\n        - policy_name\n        - workflow\n        - trigger\n        - action\n        - created_at\n        - updated_at\n      type: object\n      properties:\n        id:\n          type: string\n          description: A unique ID of this workflow.\n          format: uuid\n        created_by_entity_user:\n          allOf:\n            - $ref: '#/components/schemas/EntityUserResponse'\n          description: Data of the entity user that created this workflow.\n        object_type:\n          type: string\n          description: The type of objects associated with this workflow.\n          example: payable\n        policy_name:\n          type: string\n          description: The name of this workflow.\n          example: Expense approval\n        policy_description:\n          type: string\n          description: An arbitrary description of this workflow.\n        workflow:\n          type: array\n          items:\n            type: object\n          description: A list of functions executed when the workflow is triggered. Functions are defined in the [Monite script](https://docs.monite.com/docs/monite-script) format.\n          example:\n            - call:\n                method: Payables.request_approval_by_entity_user\n                params:\n                  entity_user_ids:\n                    - 5f3196d2-48ce-4c1e-b29e-c3e5d1fb7a13\n        trigger:\n          type: object\n          description: The trigger conditions for this workflow. Triggers are defined in the [Monite script](https://docs.monite.com/docs/monite-script) format.\n          example:\n            version: 1\n            object_type: payable\n            action: create\n            currency: EUR\n        action:\n          allOf:\n            - $ref: '#/components/schemas/ActionEnum'\n          description: The workflow is triggered only when this action is performed on an object. This is the same value as `trigger.action`.\n        created_at:\n          type: string\n          description: UTC date and time when this workflow was created. Timestamps follow the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.\n          format: date-time\n        updated_at:\n          type: string\n          description: UTC date and time when this workflow was last updated. Timestamps follow the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.\n          format: date-time\n      description: |-\n        A Workflow object represents an approval policy for payable status transitions.\n        Workflows are defined using the [Monite script](https://docs.monite.com/docs/monite-script).\n        Each workflow consists of trigger conditions and the function calls executed when the workflow is triggered.\n    WorkflowsPaginationResponse:\n      required:\n        - data\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/WorkflowResponseSchema'\n          description: A paginated list of workflows.\n        prev_pagination_token:\n          type: string\n          description: optional querystring with pagination parameters, null if there is no page\n        next_pagination_token:\n          type: string\n          description: optional querystring with pagination parameters, null if there is no page\n    api__schemas__workflows__enums__WorkflowPipelineStatusEnum:\n      enum:\n        - in_progress\n        - failed\n        - done\n        - pending\n        - outdated\n      type: string\n      description: An enumeration.\n    api__v1__approvals__pagination__CursorFields:\n      enum:\n        - updated_at\n      type: string\n      description: An enumeration.\n    api__v1__export__pagination__CursorFields:\n      enum:\n        - created_at\n      type: string\n      description: An enumeration.\n    api__v1__payables__pagination__CursorFields:\n      enum:\n        - id\n        - amount\n        - due_date\n      type: string\n      description: An enumeration.\n    api__v1__todo__pagination__CursorFields:\n      enum:\n        - created_at\n      type: string\n      description: An enumeration.\n    api__v1__workflows__pagination__CursorFields:\n      enum:\n        - created_at\n      type: string\n      description: An enumeration.\n    biz__objects__workflows__enums__WorkflowPipelineStatusEnum:\n      enum:\n        - failed\n        - done\n        - pending\n        - outdated\n      type: string\n      description: An enumeration.\n    Account:\n      required:\n        - email\n        - country\n        - business_type\n        - capabilities\n        - company\n      type: object\n      properties:\n        email:\n          type: string\n          format: email\n        country:\n          $ref: '#/components/schemas/AllowedCountriesCodes'\n        business_type:\n          $ref: '#/components/schemas/BusinessTypes'\n        capabilities:\n          $ref: '#/components/schemas/Capabilities'\n        company:\n          $ref: '#/components/schemas/Company'\n    AccountLinkResponse:\n      required:\n        - object\n        - created\n        - expires_at\n        - url\n        - id\n      type: object\n      properties:\n        object:\n          type: string\n        created:\n          type: integer\n        expires_at:\n          type: integer\n        url:\n          maxLength: 2083\n          minLength: 1\n          type: string\n          format: uri\n        id:\n          type: string\n    BusinessTypes:\n      enum:\n        - individual\n        - company\n        - non_profit\n        - government_entity\n      description: An enumeration.\n    Capabilities:\n      type: object\n      properties:\n        acss_debit_payments:\n          type: boolean\n        afterpay_clearpay_payments:\n          type: boolean\n        au_becs_debit_payments:\n          type: boolean\n        bacs_debit_payments:\n          type: boolean\n        bancontact_payments:\n          type: boolean\n        bank_transfer_payments:\n          type: boolean\n        boleto_payments:\n          type: boolean\n        card_issuing:\n          type: boolean\n        card_payments:\n          type: boolean\n        cartes_bancaires_payments:\n          type: boolean\n        eps_payments:\n          type: boolean\n        fpx_payments:\n          type: boolean\n        giropay_payments:\n          type: boolean\n        grabpay_payments:\n          type: boolean\n        ideal_payments:\n          type: boolean\n        jcb_payments:\n          type: boolean\n        klarna_payments:\n          type: boolean\n        konbini_payments:\n          type: boolean\n        legacy_payments:\n          type: boolean\n        oxxo_payments:\n          type: boolean\n        p24_payments:\n          type: boolean\n        paynow_payments:\n          type: boolean\n        sepa_debit_payments:\n          type: boolean\n        sofort_payments:\n          type: boolean\n        tax_reporting_us_1099_k:\n          type: boolean\n        tax_reporting_us_1099_misc:\n          type: boolean\n        transfers:\n          type: boolean\n        us_bank_account_ach_payments:\n          type: boolean\n    Company:\n      type: object\n      properties:\n        name:\n          type: string\n        tax_id:\n          type: string\n        address:\n          $ref: '#/components/schemas/CompanyAddress'\n    CompanyAddress:\n      type: object\n      properties:\n        city:\n          type: string\n        country:\n          $ref: '#/components/schemas/AllowedCountriesCodes'\n        line1:\n          type: string\n        line2:\n          type: string\n        postal_code:\n          type: string\n        state:\n          type: string\n    CreatePaymentLink:\n      required:\n        - amount\n        - payment_reference\n        - currency\n        - payment_methods\n        - account_id\n      type: object\n      properties:\n        amount:\n          minimum: 50\n          exclusiveMinimum: true\n          type: integer\n          description: Amount must convert to at least 50 cents.\n        payment_reference:\n          type: string\n        currency:\n          minLength: 1\n          type: string\n          example: EUR\n        payment_methods:\n          type: array\n          items:\n            $ref: '#/components/schemas/PaymentMethodsEnum'\n        cancel_url:\n          maxLength: 2083\n          minLength: 1\n          type: string\n          format: uri\n          example: https://example.com\n        return_url:\n          maxLength: 2083\n          minLength: 1\n          type: string\n          format: uri\n          example: https://google.com\n        payee:\n          $ref: '#/components/schemas/PayeePayload'\n        object:\n          $ref: '#/components/schemas/Object'\n        account_id:\n          type: string\n          description: account ID is used as on behalf of account\n    Fee:\n      required:\n        - percentage\n        - amount\n      type: object\n      properties:\n        percentage:\n          type: number\n          format: verybig\n        amount:\n          type: integer\n    Fees:\n      required:\n        - monite\n        - partner\n      type: object\n      properties:\n        monite:\n          $ref: '#/components/schemas/Fee'\n        partner:\n          $ref: '#/components/schemas/Fee'\n    Object:\n      required:\n        - id\n        - type\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: deaef523-cfd7-48ce-9de9-6d280dca1d6c\n        type:\n          $ref: '#/components/schemas/ObjectTypeEnum'\n    OnboardingPayload:\n      required:\n        - entity_id\n        - refresh_url\n        - return_url\n        - account\n      type: object\n      properties:\n        entity_id:\n          type: string\n          format: uuid\n        refresh_url:\n          maxLength: 2083\n          minLength: 1\n          type: string\n          description: 'The URL the user will be redirected to if the account link is expired, has been previously-visited, or is otherwise invalid. The URL you specify should attempt to generate a new account link with the same parameters used to create the original account link, then redirect the user to the new account link’s URL so they can continue with Connect Onboarding. If a new account link cannot be generated or the redirect fails you should display a useful error to the user '\n          format: uri\n        return_url:\n          maxLength: 2083\n          minLength: 1\n          type: string\n          description: The URL that the user will be redirected to upon leaving or completing the linked flow\n          format: uri\n        account:\n          $ref: '#/components/schemas/Account'\n    PayPaymentLinkPayload:\n      required:\n        - payment_method\n      type: object\n      properties:\n        payment_method:\n          $ref: '#/components/schemas/PaymentMethodsEnum'\n    PayeeAccountIdentificationPayload:\n      required:\n        - type\n        - value\n      type: object\n      properties:\n        type:\n          type: string\n          example: iban\n        value:\n          type: string\n          example: AD1400080001001234567890\n    PayeePayload:\n      required:\n        - name\n        - account_identification\n      type: object\n      properties:\n        name:\n          type: string\n        account_identification:\n          $ref: '#/components/schemas/PayeeAccountIdentificationPayload'\n    PaymentLinkResponse:\n      required:\n        - amount\n        - payment_reference\n        - currency\n        - payment_methods\n        - account_id\n        - id\n        - payment_page_url\n      type: object\n      properties:\n        amount:\n          minimum: 50\n          exclusiveMinimum: true\n          type: integer\n          description: Amount must convert to at least 50 cents.\n        payment_reference:\n          type: string\n        currency:\n          minLength: 1\n          type: string\n          example: EUR\n        payment_methods:\n          type: array\n          items:\n            $ref: '#/components/schemas/PaymentMethodsEnum'\n        cancel_url:\n          maxLength: 2083\n          minLength: 1\n          type: string\n          format: uri\n          example: https://example.com\n        return_url:\n          maxLength: 2083\n          minLength: 1\n          type: string\n          format: uri\n          example: https://google.com\n        payee:\n          $ref: '#/components/schemas/PayeePayload'\n        object:\n          $ref: '#/components/schemas/Object'\n        account_id:\n          type: string\n          description: account ID is used as on behalf of account\n        id:\n          type: string\n          format: uuid\n        payment_page_url:\n          maxLength: 2083\n          minLength: 1\n          type: string\n          format: uri\n    PaymentMethodsCalculateFeePayload:\n      required:\n        - payment_link_id\n      type: object\n      properties:\n        payment_link_id:\n          type: string\n          format: uuid\n          example: deaef523-cfd7-48ce-9de9-6d280dca1d6c\n    PaymentMethodsCalculateFeeResponse:\n      required:\n        - total\n        - fee\n      type: object\n      properties:\n        total:\n          $ref: '#/components/schemas/Total'\n        fee:\n          $ref: '#/components/schemas/Fees'\n    PaymentMethodsEnum:\n      enum:\n        - card\n        - sepa_debit\n        - eps\n        - bancontact\n        - giropay\n      type: string\n      description: An enumeration.\n    Total:\n      required:\n        - fee\n        - amount\n      type: object\n      properties:\n        fee:\n          type: integer\n        amount:\n          type: integer\n    UpdateAccount:\n      type: object\n      properties:\n        email:\n          type: string\n          format: email\n        country:\n          $ref: '#/components/schemas/AllowedCountriesCodes'\n        business_type:\n          $ref: '#/components/schemas/BusinessTypes'\n        capabilities:\n          $ref: '#/components/schemas/Capabilities'\n        company:\n          $ref: '#/components/schemas/UpdateCompany'\n    UpdateCompany:\n      type: object\n      properties:\n        name:\n          type: string\n        tax_id:\n          type: string\n    DocumentTypeEnum:\n      enum:\n        - receivable\n      type: string\n      description: An enumeration.\n    LanguageEnum:\n      enum:\n        - EN\n        - DE\n      type: string\n      description: An enumeration.\n    ReceivableTemplateCreatePayload:\n      required:\n        - document_type\n        - language\n        - name\n        - template_type\n        - template\n        - preview\n      type: object\n      properties:\n        document_type:\n          enum:\n            - receivable\n          type: string\n        language:\n          $ref: '#/components/schemas/LanguageEnum'\n        name:\n          type: string\n        template_type:\n          enum:\n            - block\n          type: string\n        template:\n          type: string\n        preview:\n          maxLength: 65536\n          minLength: 1\n          type: string\n          format: uri\n    TemplateBaseResponse:\n      required:\n        - document_type\n        - language\n        - name\n        - template_type\n        - template\n        - preview\n        - id\n        - created_at\n        - updated_at\n      type: object\n      properties:\n        document_type:\n          $ref: '#/components/schemas/DocumentTypeEnum'\n        language:\n          $ref: '#/components/schemas/LanguageEnum'\n        name:\n          type: string\n        template_type:\n          $ref: '#/components/schemas/TemplateTypeEnum'\n        template:\n          type: string\n        preview:\n          maxLength: 65536\n          minLength: 1\n          type: string\n          format: uri\n        id:\n          type: string\n          format: uuid\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n        blocks:\n          type: array\n          items:\n            type: string\n    TemplateCreatePayload:\n      $ref: '#/components/schemas/ReceivableTemplateCreatePayload'\n    TemplateListResponse:\n      required:\n        - data\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/TemplateResponse'\n    TemplateReceivableResponse:\n      required:\n        - document_type\n        - language\n        - name\n        - template_type\n        - template\n        - preview\n        - id\n        - created_at\n        - updated_at\n        - blocks\n      type: object\n      properties:\n        document_type:\n          enum:\n            - receivable\n          type: string\n        language:\n          $ref: '#/components/schemas/LanguageEnum'\n        name:\n          type: string\n        template_type:\n          enum:\n            - block\n          type: string\n        template:\n          type: string\n        preview:\n          maxLength: 65536\n          minLength: 1\n          type: string\n          format: uri\n        id:\n          type: string\n          format: uuid\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n        blocks:\n          type: array\n          items:\n            type: string\n    TemplateResponse:\n      anyOf:\n        - $ref: '#/components/schemas/TemplateBaseResponse'\n        - $ref: '#/components/schemas/TemplateReceivableResponse'\n    TemplateTypeEnum:\n      enum:\n        - block\n        - source_object\n      type: string\n      description: An enumeration.\n    AddCustomTemplateSchema:\n      required:\n        - language_code\n        - subject_template\n        - body_template\n        - template_name\n      type: object\n      properties:\n        language_code:\n          type: string\n          description: Lowercase iso code of language\n        subject_template:\n          type: string\n          description: Jinja2 compatible string with email subject\n        body_template:\n          type: string\n          description: Jinja2 compatible string with email body\n        template_name:\n          type: string\n          description: One of pre-defined names of emails. Should be validated with enum\n    ContentResponse:\n      required:\n        - id\n        - document_type\n        - subject\n        - body\n        - created_at\n        - updated_at\n      type: object\n      properties:\n        id:\n          type: string\n          description: ID of email content\n          format: uuid\n        document_type:\n          allOf:\n            - $ref: '#/components/schemas/DocumentObjectTypeEnum'\n          description: Document type of content\n        subject:\n          type: string\n          description: Subject text of the content\n        body:\n          type: string\n          description: Body text of the content\n        name:\n          type: string\n          description: Name of the content\n        created_at:\n          type: string\n          description: Content created date and time\n          format: date-time\n        updated_at:\n          type: string\n          description: Content updated date and time\n          format: date-time\n    CreateContentRequest:\n      required:\n        - document_type\n        - subject\n        - body\n      type: object\n      properties:\n        document_type:\n          allOf:\n            - $ref: '#/components/schemas/DocumentObjectTypeEnum'\n          description: Document type of content\n        subject:\n          type: string\n          description: Subject text of the content\n        body:\n          type: string\n          description: Body text of the content\n        name:\n          type: string\n          description: Name of the content\n    CustomTemplateDataSchema:\n      required:\n        - id\n        - template_name\n        - language_code\n        - subject_template\n        - body_template\n        - created_at\n        - updated_at\n      type: object\n      properties:\n        id:\n          type: string\n          description: ID of email template\n          format: uuid\n        template_name:\n          type: string\n          description: Name of the template\n        language_code:\n          type: string\n          description: ISO language code\n        subject_template:\n          type: string\n          description: Jinja2 compatible email subject template\n        body_template:\n          type: string\n          description: Jinja2 compatible email body template\n        created_at:\n          type: string\n          description: Template created date and time\n          format: date-time\n        updated_at:\n          type: string\n          description: Template updated date and time\n          format: date-time\n    DocumentObjectTypeEnum:\n      enum:\n        - quote\n        - invoice\n        - discount_reminder\n        - final_reminder\n      type: string\n      description: An enumeration.\n    SystemTemplateDataSchema:\n      required:\n        - template_name\n        - available_templates\n      type: object\n      properties:\n        template_name:\n          type: string\n          description: Name of the template\n        available_templates:\n          type: array\n          items:\n            $ref: '#/components/schemas/TemplateDataSchema'\n          description: Array of templates\n    TemplateDataSchema:\n      required:\n        - language\n        - subject_template\n        - body_template\n      type: object\n      properties:\n        language:\n          type: string\n          description: Lowercase language code [en, de]\n        subject_template:\n          type: string\n          description: Jinja2 compatible email subject template\n        body_template:\n          type: string\n          description: Jinja2 compatible email body template\n    UpdateContentRequest:\n      type: object\n      properties:\n        document_type:\n          allOf:\n            - $ref: '#/components/schemas/DocumentObjectTypeEnum'\n          description: Document type of content\n        subject:\n          type: string\n          description: Subject text of the content\n        body:\n          type: string\n          description: Body text of the content\n        name:\n          type: string\n          description: Name of the content\n    UpdateCustomTemplateSchemaRequest:\n      type: object\n      properties:\n        language_code:\n          type: string\n          description: Lowercase iso code of language\n        subject_template:\n          type: string\n          description: Jinja2 compatible string with email subject\n        body_template:\n          type: string\n          description: Jinja2 compatible string with email body\n    CreateWebhookRequest:\n      required:\n        - object_type\n        - url\n      type: object\n      properties:\n        object_type:\n          $ref: '#/components/schemas/ObjectType'\n        url:\n          maxLength: 2083\n          minLength: 1\n          type: string\n          format: uri\n    WebhookResponse:\n      required:\n        - id\n        - attempts_before_disabling\n        - url\n        - response\n        - requests_made_count\n        - event_id\n        - was_successful\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        attempts_before_disabling:\n          type: integer\n        url:\n          maxLength: 2083\n          minLength: 1\n          type: string\n          format: uri\n        response:\n          type: string\n        requests_made_count:\n          type: integer\n        event_id:\n          type: string\n          format: uuid\n        was_successful:\n          type: boolean\n    WebhookSettingsByObjectTypePaginationResponse:\n      required:\n        - data\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/WebhookSettingsResponse'\n          description: A set of webhook settings of different types returned per page\n        prev_pagination_token:\n          type: string\n          description: optional querystring with pagination parameters, null if there is no page\n        next_pagination_token:\n          type: string\n          description: optional querystring with pagination parameters, null if there is no page\n    WebhookSettingsResponse:\n      required:\n        - id\n        - object_type\n        - url\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        object_type:\n          $ref: '#/components/schemas/ObjectType'\n        url:\n          type: string\n    WebhookUpdateRequest:\n      type: object\n      properties:\n        object_type:\n          $ref: '#/components/schemas/ObjectType'\n        url:\n          maxLength: 2083\n          minLength: 1\n          type: string\n          format: uri\n    WebhooksPaginationResponse:\n      required:\n        - data\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/WebhookResponse'\n          description: A set of webhooks returned per page\n        prev_pagination_token:\n          type: string\n          description: optional querystring with pagination parameters, null if there is no page\n        next_pagination_token:\n          type: string\n          description: 'optional querystring with pagination parameters, null if there is no page'\n    api__v1__webhook_settings__callback__EventPayload:\n      required:\n        - object_id\n        - object_type\n        - action\n        - name\n      type: object\n      properties:\n        object_id:\n          type: string\n          format: uuid\n        object_type:\n          type: string\n        action:\n          type: string\n        name:\n          type: string\n    api__v1__webhook_settings__pagination__CursorFields:\n      enum:\n        - created_at\n        - updated_at\n      type: string\n      description: An enumeration.\n    api__v1__webhooks__pagination__CursorFields:\n      enum:\n        - created_at\n        - updated_at\n      type: string\n      description: An enumeration.\n    DomainListResponse:\n      required:\n        - data\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/DomainResponse'\n    DomainRequest:\n      required:\n        - domain\n      type: object\n      properties:\n        domain:\n          type: string\n        provider:\n          allOf:\n            - $ref: '#/components/schemas/EmailServiceProviderEnum'\n          description: Email service provider\n    DomainResponse:\n      required:\n        - id\n        - partner_id\n        - domain\n        - status\n        - provider\n        - dns_records\n      type: object\n      properties:\n        id:\n          type: string\n          description: Entry UUID\n          format: uuid\n        partner_id:\n          type: string\n          format: uuid\n        domain:\n          type: string\n        status:\n          type: string\n        provider:\n          type: string\n        dns_records:\n          type: object\n    EmailServiceProviderEnum:\n      enum:\n        - mailgun\n      type: string\n      description: An enumeration.\n    MailboxDataResponse:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/MailboxResponse'\n    MailboxDomainRequest:\n      required:\n        - related_object_type\n        - mailbox_full_address\n      type: object\n      properties:\n        related_object_type:\n          allOf:\n            - $ref: '#/components/schemas/ObjectTypeEnum'\n          description: 'Related object type: payable and so on'\n        mailbox_full_address:\n          type: string\n    MailboxMultipleEntitiesRequest:\n      required:\n        - entity_ids\n      type: object\n      properties:\n        entity_ids:\n          type: array\n          items:\n            type: string\n            format: uuid\n    MailboxRequest:\n      required:\n        - related_object_type\n      type: object\n      properties:\n        related_object_type:\n          allOf:\n            - $ref: '#/components/schemas/ObjectTypeEnum'\n          description: 'Related object type: payable and so on'\n    MailboxResponse:\n      required:\n        - id\n        - entity_id\n        - status\n        - related_object_type\n        - mailbox_name\n        - mailbox_full_address\n      type: object\n      properties:\n        id:\n          type: string\n          description: Mailbox UUID\n          format: uuid\n        entity_id:\n          type: string\n          description: UUID entity ID\n          format: uuid\n        status:\n          type: string\n        related_object_type:\n          type: string\n        mailbox_name:\n          type: string\n        mailbox_full_address:\n          type: string\n        belongs_to_mailbox_domain_id:\n          type: string\n          format: uuid\n    VerifyResponse:\n      required:\n        - id\n        - partner_id\n        - domain\n        - status\n        - provider\n      type: object\n      properties:\n        id:\n          type: string\n          description: Entry UUID\n          format: uuid\n        partner_id:\n          type: string\n          description: UUID of the API Partner\n          format: uuid\n        domain:\n          type: string\n        status:\n          type: string\n        provider:\n          type: string\n  securitySchemes:\n    HTTPBearer:\n      type: http\n      scheme: bearer\n    BasicAuth:\n      scheme: basic\n      type: http\n",
			"canonicalURL": "/github.com/team-monite/api-style-guide@9a1277d0df171e2566b83dd5189ae367ff935701/-/blob/spectral/test-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/team-monite/api-style-guide/blob/9a1277d0df171e2566b83dd5189ae367ff935701/spectral/test-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"ReceivableResponse\": parse schema: parse schema: parse schema: property \"entity_address\": parse schema: parse schema: property \"country\": at 1:30975: parse default: unexpected type: \"\""
}