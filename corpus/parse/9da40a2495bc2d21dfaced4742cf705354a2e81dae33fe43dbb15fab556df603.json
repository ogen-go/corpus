{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/open-traffic-generator/models"
		},
		"file": {
			"name": "control.yaml",
			"size": 0,
			"path": "control/control.yaml",
			"byteSize": 3977,
			"content": "openapi: 3.1.0\n\ninfo:\n  title: Control models\n  description: \u003e-\n    All control schemas\n  version: ^0.0.0\n\ncomponents:\n  schemas:\n    Link.State:\n      description: \u003e-\n        Port link state.\n      type: object\n      required: [state]\n      properties:\n        port_names:\n          description: \u003e-\n            The names of port objects to.\n            An empty or null list will control all port objects.\n          type: array\n          items:\n            type: string\n          x-constraint:\n          - '/components/schemas/Port/properties/name'\n        state:\n          description: \u003e-\n            The link state.\n          type: string\n          enum: [up, down]\n\n    Transmit.State:\n      description: \u003e-\n        Control the transmit state of flows.\n      type: object\n      required: [state]\n      properties:\n        flow_names:\n          description: \u003e-\n            The names of flows to which the transmit state will be applied to.\n            If the list of flow_names is empty or null the state will be applied\n            to all configured flows.\n          type: array\n          items:\n            type: string\n          x-constraint:\n          - '/components/schemas/Flow/properties/name'\n        state:\n          description: \u003e-\n            The transmit state.\n          type: string\n          enum: [start, stop, pause]\n\n    Capture.State:\n      description: \u003e-\n        Control port capture state\n      type: object\n      required: [state]\n      properties:\n        port_names:\n          description: \u003e-\n            The name of ports to start capturing packets on.\n            An empty or null list will control all port objects.\n          type: array\n          items:\n            type: string\n          x-constraint:\n          - '/components/schemas/Port/properties/name'\n        state:\n          description: \u003e-\n            The capture state.\n          type: string\n          enum: [start, stop]\n\n    Flows.Update:\n      description: A container of flows with associated properties to be updated without affecting the transmit state\n      type: object\n      required: [property_names, flows]\n      properties:\n        property_names:\n          description: Flow properties to be updated without affecting the transmit state\n          type: array\n          items: \n            type: string\n            enum: [rate, size]\n        flows:\n          description: \u003e-\n            The list of configured flows for which given property will be updated.\n          type: array\n          items:\n            $ref: '#/components/schemas/Flow'\n\n    Route.State:\n      description: \u003e-\n        Sets the device route state\n      type: object\n      required: [state]\n      properties:\n        names:\n          description: \u003e-\n            The names of device route objects to control.\n            If no names are specified then all route objects that match the\n            x-constraint will be affected.\n          type: array\n          items:\n            type: string\n          x-constraint:\n          - '/components/schemas/Bgp.V4RouteRange/properties/name'\n          - '/components/schemas/Bgp.V6RouteRange/properties/name'\n          - '/components/schemas/Isis.V4RouteRange/properties/name'\n          - '/components/schemas/Isis.V6RouteRange/properties/name'\n        state:\n          description: \u003e-\n            Route specific states\n          type: string\n          enum: [withdraw, advertise]\n\n    Ping.Request:\n      description: \u003e-\n        Ping request details\n      type: object\n      properties:\n        endpoints:\n          description:\n            Array of ping requests\n          type: array\n          items:\n            $ref: './ping.yaml#/components/schemas/Ping'\n\n    Protocol.State:\n      description: \u003e-\n        Sets all configured protocols to `start` or `stop` state.\n      type: object\n      required: [state]\n      properties:\n        state:\n          description: \u003e-\n            Protocol specific states\n          type: string\n          enum: [start, stop]"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"Ping.Request\": parse schema: property \"endpoints\": parse schema: item: parse schema: resolve \"./ping.yaml#/components/schemas/Ping\": find schema: external base \"./ping.yaml\" is not supported"
}