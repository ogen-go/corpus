{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Apicurio/apicurio-data-models"
		},
		"file": {
			"name": "rename-path-item-with-subPaths.before.json",
			"size": 0,
			"path": "src/test/resources/fixtures/cmd/commands/rename-path-item/openapi-3/rename-path-item-with-subPaths.before.json",
			"byteSize": 11728,
			"content": "{\n  \"openapi\": \"3.0.2\",\n  \"info\": {\n    \"title\": \"Test 3.0 API\",\n    \"description\": \"Just a test of a **3.0** API!\",\n    \"version\": \"1.0.0\"\n  },\n  \"paths\": {\n    \"/beers\": {\n      \"summary\": \"Path used to manage the list of Beers.\",\n      \"description\": \"The REST endpoint/path used to list and create zero or more `Beer` entities.  This path contains a `GET` and `POST` operation to perform the list and create tasks, respectively.\",\n      \"get\": {\n        \"summary\": \"List All Beers\",\n        \"description\": \"Gets a list of all `Beer` entities.\",\n        \"operationId\": \"getBeers\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful response - returns an array of `Beer` entities.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Beer\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Create a Beer\",\n        \"description\": \"Creates a new instance of a `Beer`.\",\n        \"operationId\": \"createBeer\",\n        \"requestBody\": {\n          \"description\": \"A new `Beer` to be created.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Beer\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successful response.\"\n          }\n        }\n      }\n    },\n    \"/beers/{beerId}\": {\n      \"summary\": \"Path used to manage a single Beer.\",\n      \"description\": \"The REST endpoint/path used to get, update, and delete single instances of an `Beer`.  This path contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and delete tasks, respectively.\",\n      \"get\": {\n        \"summary\": \"Get a Beer\",\n        \"description\": \"Gets the details of a single instance of a `Beer`.\",\n        \"operationId\": \"getBeer\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful response - returns a single `Beer`.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Beer\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\": \"Update a Beer\",\n        \"description\": \"Updates an existing `Beer`.\",\n        \"operationId\": \"updateBeer\",\n        \"requestBody\": {\n          \"description\": \"Updated `Beer` information.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Beer\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"202\": {\n            \"description\": \"Successful response.\"\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete a Beer\",\n        \"description\": \"Deletes an existing `Beer`.\",\n        \"operationId\": \"deleteBeer\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Successful response.\"\n          }\n        }\n      },\n      \"parameters\": [\n        {\n          \"name\": \"beerId\",\n          \"in\": \"path\",\n          \"description\": \"A unique identifier for a `Beer`.\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ]\n    },\n    \"/songs\": {\n      \"summary\": \"Path used to manage the list of Songs.\",\n      \"description\": \"The REST endpoint/path used to list and create zero or more `Song` entities.  This path contains a `GET` and `POST` operation to perform the list and create tasks, respectively.\",\n      \"get\": {\n        \"summary\": \"List All Songs\",\n        \"description\": \"Gets a list of all `Song` entities.\",\n        \"operationId\": \"getSongs\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful response - returns an array of `Song` entities.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Song\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Create a Song\",\n        \"description\": \"Creates a new instance of a `Song`.\",\n        \"operationId\": \"createSong\",\n        \"requestBody\": {\n          \"description\": \"A new `Song` to be created.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Song\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successful response.\"\n          }\n        }\n      }\n    },\n    \"/songs/{songId}\": {\n      \"summary\": \"Path used to manage a single Song.\",\n      \"description\": \"The REST endpoint/path used to get, update, and delete single instances of an `Song`.  This path contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and delete tasks, respectively.\",\n      \"get\": {\n        \"summary\": \"Get a Song\",\n        \"description\": \"Gets the details of a single instance of a `Song`.\",\n        \"operationId\": \"getSong\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful response - returns a single `Song`.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Song\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\": \"Update a Song\",\n        \"description\": \"Updates an existing `Song`.\",\n        \"operationId\": \"updateSong\",\n        \"requestBody\": {\n          \"description\": \"Updated `Song` information.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Song\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"202\": {\n            \"description\": \"Successful response.\"\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete a Song\",\n        \"description\": \"Deletes an existing `Song`.\",\n        \"operationId\": \"deleteSong\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Successful response.\"\n          }\n        }\n      },\n      \"parameters\": [\n        {\n          \"name\": \"songId\",\n          \"in\": \"path\",\n          \"description\": \"A unique identifier for a `Song`.\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ]\n    },\n    \"/geese\": {\n      \"summary\": \"Path used to manage the list of Geese.\",\n      \"description\": \"The REST endpoint/path used to list and create zero or more `Goose` entities.  This path contains a `GET` and `POST` operation to perform the list and create tasks, respectively.\",\n      \"get\": {\n        \"summary\": \"List All Geese\",\n        \"description\": \"Gets a list of all `Goose` entities.\",\n        \"operationId\": \"getGeese\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful response - returns an array of `Goose` entities.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Goose\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Create a Goose\",\n        \"description\": \"Creates a new instance of a `Goose`.\",\n        \"operationId\": \"createGoose\",\n        \"requestBody\": {\n          \"description\": \"A new `Goose` to be created.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Goose\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successful response.\"\n          }\n        }\n      }\n    },\n    \"/geese/{gooseId}\": {\n      \"summary\": \"Path used to manage a single Goose.\",\n      \"description\": \"The REST endpoint/path used to get, update, and delete single instances of an `Goose`.  This path contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and delete tasks, respectively.\",\n      \"get\": {\n        \"summary\": \"Get a Goose\",\n        \"description\": \"Gets the details of a single instance of a `Goose`.\",\n        \"operationId\": \"getGoose\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful response - returns a single `Goose`.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Goose\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\": \"Update a Goose\",\n        \"description\": \"Updates an existing `Goose`.\",\n        \"operationId\": \"updateGoose\",\n        \"requestBody\": {\n          \"description\": \"Updated `Goose` information.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Goose\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"202\": {\n            \"description\": \"Successful response.\"\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete a Goose\",\n        \"description\": \"Deletes an existing `Goose`.\",\n        \"operationId\": \"deleteGoose\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Successful response.\"\n          }\n        }\n      },\n      \"parameters\": [\n        {\n          \"name\": \"gooseId\",\n          \"in\": \"path\",\n          \"description\": \"A unique identifier for a `Goose`.\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ]\n    },\n    \"/beers/{beerId}/suds\": {\n      \"get\": {},\n      \"post\": {},\n      \"parameters\": [\n        {\n          \"name\": \"beerId\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ]\n    },\n    \"/beers/{beerId}/suds/{sudType}\": {\n      \"get\": {},\n      \"put\": {},\n      \"parameters\": [\n        {\n          \"name\": \"sudType\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        },\n        {\n          \"name\": \"beerId\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ]\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Beer\": {\n        \"title\": \"Root Type for Beer\",\n        \"description\": \"The root of the Beer type's schema.\",\n        \"required\": [],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"ibu\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"brewery\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          }\n        },\n        \"example\": \"{\\n    \\\"name\\\": \\\"beer\\\",\\n    \\\"description\\\": \\\"beer\\\",\\n    \\\"ibu\\\": 17,\\n    \\\"brewery\\\": 1\\n}\"\n      },\n      \"Song\": {},\n      \"Goose\": {}\n    }\n  }\n}",
			"canonicalURL": "/github.com/Apicurio/apicurio-data-models@8ccd810dddfed5b05801b9f5aab69a7e8bca3b68/-/blob/src/test/resources/fixtures/cmd/commands/rename-path-item/openapi-3/rename-path-item-with-subPaths.before.json",
			"externalURLs": [
				{
					"url": "https://github.com/Apicurio/apicurio-data-models/blob/8ccd810dddfed5b05801b9f5aab69a7e8bca3b68/src/test/resources/fixtures/cmd/commands/rename-path-item/openapi-3/rename-path-item-with-subPaths.before.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/beers/{beerId}/suds\": at 333:29: get: at 334:14: responses: no responses"
}