{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/chainjet/platform"
		},
		"file": {
			"name": "aws-sts-2011-06-15.json",
			"size": 0,
			"path": "schemas/openapi3/aws-sts-2011-06-15.json",
			"byteSize": 141333,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"version\": \"2011-06-15\",\n    \"x-release\": \"v4\",\n    \"title\": \"AWS STS (Security Token Service)\",\n    \"description\": \"The AWS Security Token Service (STS) is a web service that enables you to request temporary, limited-privilege credentials for AWS Identity and Access Management (IAM) users or for users that you authenticate (federated users). This guide provides descriptions of the STS API. For more detailed information about using this service, go to Temporary Security Credentials.  For information about setting up signatures and authorization through the API, go to Signing AWS API Requests in the AWS General Reference. For general information about the Query API, go to Making Query Requests in Using IAM. For information about using security tokens with other AWS products, go to AWS Services That Work with IAM in the IAM User Guide.  If you're new to AWS and need additional technical information about a specific AWS product, you can find the product's technical documentation at http\u0026#x3A;//aws.amazon.com/documentation/.   Endpoints  By default, AWS Security Token Service (STS) is available as a global service, and all AWS STS requests go to a single endpoint at https\u0026#x3A;//sts.amazonaws.com. Global requests map to the US East (N. Virginia) region. AWS recommends using Regional AWS STS endpoints instead of the global endpoint to reduce latency, build in redundancy, and increase session token validity. For more information, see Managing AWS STS in an AWS Region in the IAM User Guide. Most AWS Regions are enabled for operations in all AWS services by default. Those Regions are automatically activated for use with AWS STS. Some Regions, such as Asia Pacific (Hong Kong), must be manually enabled. To learn more about enabling and disabling AWS Regions, see Managing AWS Regions in the AWS General Reference. When you enable these AWS Regions, they are automatically activated for use with AWS STS. You cannot activate the STS endpoint for a Region that is disabled. Tokens that are valid in all AWS Regions are longer than tokens that are valid in Regions that are enabled by default. Changing this setting might affect existing systems where you temporarily store tokens. For more information, see Managing Global Endpoint Session Tokens in the IAM User Guide. After you activate a Region for use with AWS STS, you can direct AWS STS API calls to that Region. AWS STS recommends that you provide both the Region and endpoint when you make calls to a Regional endpoint. You can provide the Region alone for manually enabled Regions, such as Asia Pacific (Hong Kong). In this case, the calls are directed to the STS Regional endpoint. However, if you provide the Region alone for Regions enabled by default, the calls are directed to the global endpoint of https\u0026#x3A;//sts.amazonaws.com. To view the list of AWS STS endpoints and whether they are active by default, see Writing Code to Use AWS STS Regions in the IAM User Guide.  Recording API requests  STS supports AWS CloudTrail, which is a service that records AWS calls for your AWS account and delivers log files to an Amazon S3 bucket. By using information collected by CloudTrail, you can determine what requests were successfully made to STS, who made the request, when it was made, and so on. If you activate AWS STS endpoints in Regions other than the default global endpoint, then you must also turn on CloudTrail logging in those Regions. This is necessary to record any AWS STS API calls that are made in those Regions. For more information, see Turning On CloudTrail in Additional Regions in the AWS CloudTrail User Guide. AWS Security Token Service (STS) is a global service with a single endpoint at https\u0026#x3A;//sts.amazonaws.com. Calls to this endpoint are logged as calls to a global service. However, because this endpoint is physically located in the US East (N. Virginia) Region, your logs list us-east-1 as the event Region. CloudTrail does not write these logs to the US East (Ohio) Region unless you choose to include global service logs in that Region. CloudTrail writes calls to all Regional endpoints to their respective Regions. For example, calls to sts.us-east-2.amazonaws.com are published to the US East (Ohio) Region and calls to sts.eu-central-1.amazonaws.com are published to the EU (Frankfurt) Region. To learn more about CloudTrail, including how to turn it on and find your log files, see the AWS CloudTrail User Guide.\",\n    \"termsOfService\": \"https://aws.amazon.com/service-terms/\",\n    \"contact\": {\n      \"name\": \"Mike Ralphson\",\n      \"email\": \"mike.ralphson@gmail.com\",\n      \"url\": \"https://github.com/mermade/aws2openapi\",\n      \"x-twitter\": \"PermittedSoc\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0 License\",\n      \"url\": \"http://www.apache.org/licenses/\"\n    },\n    \"x-providerName\": \"amazonaws.com\",\n    \"x-serviceName\": \"sts\",\n    \"x-origin\": [\n      {\n        \"contentType\": \"application/json\",\n        \"url\": \"https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/sts-2011-06-15.normal.json\",\n        \"converter\": {\n          \"url\": \"https://github.com/mermade/aws2openapi\",\n          \"version\": \"1.0.0\"\n        },\n        \"x-apisguru-driver\": \"external\"\n      }\n    ],\n    \"x-apiClientRegistration\": {\n      \"url\": \"https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct\"\n    },\n    \"x-apisguru-categories\": [\"cloud\"],\n    \"x-preferred\": true\n  },\n  \"externalDocs\": {\n    \"description\": \"Amazon Web Services documentation\",\n    \"url\": \"https://docs.aws.amazon.com/sts/\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://sts.amazonaws.com\",\n      \"variables\": {},\n      \"description\": \"The general AWS STS multi-region endpoint\"\n    },\n    {\n      \"url\": \"http://sts.{region}.amazonaws.com\",\n      \"variables\": {\n        \"region\": {\n          \"description\": \"The AWS region\",\n          \"enum\": [\"us-gov-west-1\", \"us-gov-east-1\"],\n          \"default\": \"us-gov-west-1\"\n        }\n      },\n      \"description\": \"The AWS STS endpoint for AWS GovCloud (US) and AWS GovCloud (US-East)\"\n    },\n    {\n      \"url\": \"https://sts.{region}.amazonaws.com\",\n      \"variables\": {\n        \"region\": {\n          \"description\": \"The AWS region\",\n          \"enum\": [\"us-gov-west-1\", \"us-gov-east-1\"],\n          \"default\": \"us-gov-west-1\"\n        }\n      },\n      \"description\": \"The AWS STS endpoint for AWS GovCloud (US) and AWS GovCloud (US-East)\"\n    },\n    {\n      \"url\": \"http://sts.{region}.amazonaws.com.cn\",\n      \"variables\": {\n        \"region\": {\n          \"description\": \"The AWS region\",\n          \"enum\": [\"cn-north-1\", \"cn-northwest-1\"],\n          \"default\": \"cn-north-1\"\n        }\n      },\n      \"description\": \"The AWS STS endpoint for China (Beijing) and China (Ningxia)\"\n    },\n    {\n      \"url\": \"https://sts.{region}.amazonaws.com.cn\",\n      \"variables\": {\n        \"region\": {\n          \"description\": \"The AWS region\",\n          \"enum\": [\"cn-north-1\", \"cn-northwest-1\"],\n          \"default\": \"cn-north-1\"\n        }\n      },\n      \"description\": \"The AWS STS endpoint for China (Beijing) and China (Ningxia)\"\n    }\n  ],\n  \"x-hasEquivalentPaths\": true,\n  \"paths\": {\n    \"/#Action=AssumeRole\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ],\n      \"post\": {\n        \"x-aws-operation-name\": \"AssumeRole\",\n        \"operationId\": \"POST_AssumeRole\",\n        \"description\": \"\u003cp\u003eReturns a set of temporary security credentials that you can use to access AWS resources that you might not normally have access to. These temporary credentials consist of an access key ID, a secret access key, and a security token. Typically, you use \u003ccode\u003eAssumeRole\u003c/code\u003e within your account or for cross-account access. For a comparison of \u003ccode\u003eAssumeRole\u003c/code\u003e with other API operations that produce temporary credentials, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html\\\"\u003eRequesting Temporary Security Credentials\u003c/a\u003e and \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison\\\"\u003eComparing the AWS STS API operations\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eYou cannot use AWS account root user credentials to call \u003ccode\u003eAssumeRole\u003c/code\u003e. You must use credentials for an IAM user or an IAM role to call \u003ccode\u003eAssumeRole\u003c/code\u003e.\u003c/p\u003e \u003c/important\u003e \u003cp\u003eFor cross-account access, imagine that you own multiple accounts and need to access resources in each account. You could create long-term credentials in each account to access those resources. However, managing all those credentials and remembering which one can access which account can be time consuming. Instead, you can create one set of long-term credentials in one account. Then use temporary security credentials to access all the other accounts by assuming roles in those accounts. For more information about roles, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html\\\"\u003eIAM Roles\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e. \u003c/p\u003e \u003cp\u003e \u003cb\u003eSession Duration\u003c/b\u003e \u003c/p\u003e \u003cp\u003eBy default, the temporary security credentials created by \u003ccode\u003eAssumeRole\u003c/code\u003e last for one hour. However, you can use the optional \u003ccode\u003eDurationSeconds\u003c/code\u003e parameter to specify the duration of your session. You can provide a value from 900 seconds (15 minutes) up to the maximum session duration setting for the role. This setting can have a value from 1 hour to 12 hours. To learn how to view the maximum value for your role, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html#id_roles_use_view-role-max-session\\\"\u003eView the Maximum Session Duration Setting for a Role\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e. The maximum session duration limit applies when you use the \u003ccode\u003eAssumeRole*\u003c/code\u003e API operations or the \u003ccode\u003eassume-role*\u003c/code\u003e CLI commands. However the limit does not apply when you use those operations to create a console URL. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html\\\"\u003eUsing IAM Roles\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003e \u003cb\u003ePermissions\u003c/b\u003e \u003c/p\u003e \u003cp\u003eThe temporary security credentials created by \u003ccode\u003eAssumeRole\u003c/code\u003e can be used to make API calls to any AWS service with the following exception: You cannot call the AWS STS \u003ccode\u003eGetFederationToken\u003c/code\u003e or \u003ccode\u003eGetSessionToken\u003c/code\u003e API operations.\u003c/p\u003e \u003cp\u003e(Optional) You can pass inline or managed \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\\\"\u003esession policies\u003c/a\u003e to this operation. You can pass a single JSON policy document to use as an inline session policy. You can also specify up to 10 managed policies to use as managed session policies. The plain text that you use for both inline and managed session policies can't exceed 2,048 characters. Passing policies to this operation returns new temporary credentials. The resulting session's permissions are the intersection of the role's identity-based policy and the session policies. You can use the role's temporary credentials in subsequent AWS API calls to access resources in the account that owns the role. You cannot use session policies to grant more permissions than those allowed by the identity-based policy of the role that is being assumed. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\\\"\u003eSession Policies\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eTo assume a role from a different account, your AWS account must be trusted by the role. The trust relationship is defined in the role's trust policy when the role is created. That trust policy states which accounts are allowed to delegate that access to users in the account. \u003c/p\u003e \u003cp\u003eA user who wants to access a role in a different account must also have permissions that are delegated from the user account administrator. The administrator must attach a policy that allows the user to call \u003ccode\u003eAssumeRole\u003c/code\u003e for the ARN of the role in the other account. If the user is in the same account as the role, then you can do either of the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eAttach a policy to the user (identical to the previous user in a different account).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAdd the user as a principal directly in the role's trust policy.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIn this case, the trust policy acts as an IAM resource-based policy. Users in the same account as the role do not need explicit permission to assume the role. For more information about trust policies and resource-based policies, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html\\\"\u003eIAM Policies\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003e \u003cb\u003eTags\u003c/b\u003e \u003c/p\u003e \u003cp\u003e(Optional) You can pass tag key-value pairs to your session. These tags are called session tags. For more information about session tags, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html\\\"\u003ePassing Session Tags in STS\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eAn administrator must grant you the permissions necessary to pass session tags. The administrator can also create granular permissions to allow you to pass only specific session tags. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_attribute-based-access-control.html\\\"\u003eTutorial: Using Tags for Attribute-Based Access Control\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eYou can set the session tags as transitive. Transitive tags persist during role chaining. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html#id_session-tags_role-chaining\\\"\u003eChaining Roles with Session Tags\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003e \u003cb\u003eUsing MFA with AssumeRole\u003c/b\u003e \u003c/p\u003e \u003cp\u003e(Optional) You can include multi-factor authentication (MFA) information when you call \u003ccode\u003eAssumeRole\u003c/code\u003e. This is useful for cross-account scenarios to ensure that the user that assumes the role has been authenticated with an AWS MFA device. In that scenario, the trust policy of the role being assumed includes a condition that tests for MFA authentication. If the caller does not include valid MFA information, the request to assume the role is denied. The condition in a trust policy that tests for MFA authentication might look like the following example.\u003c/p\u003e \u003cp\u003e \u003ccode\u003e\\\"Condition\\\": {\\\"Bool\\\": {\\\"aws:MultiFactorAuthPresent\\\": true}}\u003c/code\u003e \u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/MFAProtectedAPI.html\\\"\u003eConfiguring MFA-Protected API Access\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e guide.\u003c/p\u003e \u003cp\u003eTo use MFA with \u003ccode\u003eAssumeRole\u003c/code\u003e, you pass values for the \u003ccode\u003eSerialNumber\u003c/code\u003e and \u003ccode\u003eTokenCode\u003c/code\u003e parameters. The \u003ccode\u003eSerialNumber\u003c/code\u003e value identifies the user's hardware or virtual MFA device. The \u003ccode\u003eTokenCode\u003c/code\u003e is the time-based one-time password (TOTP) that the MFA device produces. \u003c/p\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/xml\": {\n                \"schema\": { \"$ref\": \"#/components/schemas/AssumeRoleResponse\" }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"MalformedPolicyDocumentException\",\n            \"content\": {\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MalformedPolicyDocumentException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"PackedPolicyTooLargeException\",\n            \"content\": {\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PackedPolicyTooLargeException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"RegionDisabledException\",\n            \"content\": {\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RegionDisabledException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"ExpiredTokenException\",\n            \"content\": {\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ExpiredTokenException\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"text/xml\": {\n              \"schema\": { \"$ref\": \"#/components/schemas/AssumeRoleRequest\" }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"Action\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"enum\": [\"AssumeRole\"] }\n          },\n          {\n            \"name\": \"Version\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"enum\": [\"2011-06-15\"] }\n          }\n        ],\n        \"summary\": \"Assume Role\"\n      }\n    },\n    \"/#Action=AssumeRoleWithSAML\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ],\n      \"post\": {\n        \"x-aws-operation-name\": \"AssumeRoleWithSAML\",\n        \"operationId\": \"POST_AssumeRoleWithSAML\",\n        \"description\": \"\u003cp\u003eReturns a set of temporary security credentials for users who have been authenticated via a SAML authentication response. This operation provides a mechanism for tying an enterprise identity store or directory to role-based AWS access without user-specific credentials or configuration. For a comparison of \u003ccode\u003eAssumeRoleWithSAML\u003c/code\u003e with the other API operations that produce temporary credentials, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html\\\"\u003eRequesting Temporary Security Credentials\u003c/a\u003e and \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison\\\"\u003eComparing the AWS STS API operations\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eThe temporary security credentials returned by this operation consist of an access key ID, a secret access key, and a security token. Applications can use these temporary security credentials to sign calls to AWS services.\u003c/p\u003e \u003cp\u003e \u003cb\u003eSession Duration\u003c/b\u003e \u003c/p\u003e \u003cp\u003eBy default, the temporary security credentials created by \u003ccode\u003eAssumeRoleWithSAML\u003c/code\u003e last for one hour. However, you can use the optional \u003ccode\u003eDurationSeconds\u003c/code\u003e parameter to specify the duration of your session. Your role session lasts for the duration that you specify, or until the time specified in the SAML authentication response's \u003ccode\u003eSessionNotOnOrAfter\u003c/code\u003e value, whichever is shorter. You can provide a \u003ccode\u003eDurationSeconds\u003c/code\u003e value from 900 seconds (15 minutes) up to the maximum session duration setting for the role. This setting can have a value from 1 hour to 12 hours. To learn how to view the maximum value for your role, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html#id_roles_use_view-role-max-session\\\"\u003eView the Maximum Session Duration Setting for a Role\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e. The maximum session duration limit applies when you use the \u003ccode\u003eAssumeRole*\u003c/code\u003e API operations or the \u003ccode\u003eassume-role*\u003c/code\u003e CLI commands. However the limit does not apply when you use those operations to create a console URL. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html\\\"\u003eUsing IAM Roles\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003e \u003cb\u003ePermissions\u003c/b\u003e \u003c/p\u003e \u003cp\u003eThe temporary security credentials created by \u003ccode\u003eAssumeRoleWithSAML\u003c/code\u003e can be used to make API calls to any AWS service with the following exception: you cannot call the STS \u003ccode\u003eGetFederationToken\u003c/code\u003e or \u003ccode\u003eGetSessionToken\u003c/code\u003e API operations.\u003c/p\u003e \u003cp\u003e(Optional) You can pass inline or managed \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\\\"\u003esession policies\u003c/a\u003e to this operation. You can pass a single JSON policy document to use as an inline session policy. You can also specify up to 10 managed policies to use as managed session policies. The plain text that you use for both inline and managed session policies can't exceed 2,048 characters. Passing policies to this operation returns new temporary credentials. The resulting session's permissions are the intersection of the role's identity-based policy and the session policies. You can use the role's temporary credentials in subsequent AWS API calls to access resources in the account that owns the role. You cannot use session policies to grant more permissions than those allowed by the identity-based policy of the role that is being assumed. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\\\"\u003eSession Policies\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eCalling \u003ccode\u003eAssumeRoleWithSAML\u003c/code\u003e does not require the use of AWS security credentials. The identity of the caller is validated by using keys in the metadata document that is uploaded for the SAML provider entity for your identity provider. \u003c/p\u003e \u003cimportant\u003e \u003cp\u003eCalling \u003ccode\u003eAssumeRoleWithSAML\u003c/code\u003e can result in an entry in your AWS CloudTrail logs. The entry includes the value in the \u003ccode\u003eNameID\u003c/code\u003e element of the SAML assertion. We recommend that you use a \u003ccode\u003eNameIDType\u003c/code\u003e that is not associated with any personally identifiable information (PII). For example, you could instead use the persistent identifier (\u003ccode\u003eurn:oasis:names:tc:SAML:2.0:nameid-format:persistent\u003c/code\u003e).\u003c/p\u003e \u003c/important\u003e \u003cp\u003e \u003cb\u003eTags\u003c/b\u003e \u003c/p\u003e \u003cp\u003e(Optional) You can configure your IdP to pass attributes into your SAML assertion as session tags. Each session tag consists of a key name and an associated value. For more information about session tags, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html\\\"\u003ePassing Session Tags in STS\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eYou can pass up to 50 session tags. The plain text session tag keys can’t exceed 128 characters and the values can’t exceed 256 characters. For these and additional limits, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-limits.html#reference_iam-limits-entity-length\\\"\u003eIAM and STS Character Limits\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eAn AWS conversion compresses the passed session policies and session tags into a packed binary format that has a separate limit. Your request can fail for this limit even if your plain text meets the other requirements. The \u003ccode\u003ePackedPolicySize\u003c/code\u003e response element indicates by percentage how close the policies and tags for your request are to the upper size limit. \u003c/p\u003e \u003c/note\u003e \u003cp\u003eYou can pass a session tag with the same key as a tag that is attached to the role. When you do, session tags override the role's tags with the same key.\u003c/p\u003e \u003cp\u003eAn administrator must grant you the permissions necessary to pass session tags. The administrator can also create granular permissions to allow you to pass only specific session tags. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_attribute-based-access-control.html\\\"\u003eTutorial: Using Tags for Attribute-Based Access Control\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eYou can set the session tags as transitive. Transitive tags persist during role chaining. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html#id_session-tags_role-chaining\\\"\u003eChaining Roles with Session Tags\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003e \u003cb\u003eSAML Configuration\u003c/b\u003e \u003c/p\u003e \u003cp\u003eBefore your application can call \u003ccode\u003eAssumeRoleWithSAML\u003c/code\u003e, you must configure your SAML identity provider (IdP) to issue the claims required by AWS. Additionally, you must use AWS Identity and Access Management (IAM) to create a SAML provider entity in your AWS account that represents your identity provider. You must also create an IAM role that specifies this SAML provider in its trust policy. \u003c/p\u003e \u003cp\u003eFor more information, see the following resources:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html\\\"\u003eAbout SAML 2.0-based Federation\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_create_saml.html\\\"\u003eCreating SAML Identity Providers\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_create_saml_relying-party.html\\\"\u003eConfiguring a Relying Party and Claims\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-idp_saml.html\\\"\u003eCreating a Role for SAML 2.0 Federation\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e. \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AssumeRoleWithSAMLResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"MalformedPolicyDocumentException\",\n            \"content\": {\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MalformedPolicyDocumentException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"PackedPolicyTooLargeException\",\n            \"content\": {\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PackedPolicyTooLargeException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"IDPRejectedClaimException\",\n            \"content\": {\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/IDPRejectedClaimException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"InvalidIdentityTokenException\",\n            \"content\": {\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidIdentityTokenException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"ExpiredTokenException\",\n            \"content\": {\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ExpiredTokenException\"\n                }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"RegionDisabledException\",\n            \"content\": {\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RegionDisabledException\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"text/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AssumeRoleWithSAMLRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"Action\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"enum\": [\"AssumeRoleWithSAML\"] }\n          },\n          {\n            \"name\": \"Version\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"enum\": [\"2011-06-15\"] }\n          }\n        ],\n        \"summary\": \"Assume Role With SAML\"\n      }\n    },\n    \"/#Action=AssumeRoleWithWebIdentity\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ],\n      \"post\": {\n        \"x-aws-operation-name\": \"AssumeRoleWithWebIdentity\",\n        \"operationId\": \"POST_AssumeRoleWithWebIdentity\",\n        \"description\": \"\u003cp\u003eReturns a set of temporary security credentials for users who have been authenticated in a mobile or web application with a web identity provider. Example providers include Amazon Cognito, Login with Amazon, Facebook, Google, or any OpenID Connect-compatible identity provider.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eFor mobile applications, we recommend that you use Amazon Cognito. You can use Amazon Cognito with the \u003ca href=\\\"http://aws.amazon.com/sdkforios/\\\"\u003eAWS SDK for iOS Developer Guide\u003c/a\u003e and the \u003ca href=\\\"http://aws.amazon.com/sdkforandroid/\\\"\u003eAWS SDK for Android Developer Guide\u003c/a\u003e to uniquely identify a user. You can also supply the user with a consistent identity throughout the lifetime of an application.\u003c/p\u003e \u003cp\u003eTo learn more about Amazon Cognito, see \u003ca href=\\\"https://docs.aws.amazon.com/mobile/sdkforandroid/developerguide/cognito-auth.html#d0e840\\\"\u003eAmazon Cognito Overview\u003c/a\u003e in \u003ci\u003eAWS SDK for Android Developer Guide\u003c/i\u003e and \u003ca href=\\\"https://docs.aws.amazon.com/mobile/sdkforios/developerguide/cognito-auth.html#d0e664\\\"\u003eAmazon Cognito Overview\u003c/a\u003e in the \u003ci\u003eAWS SDK for iOS Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eCalling \u003ccode\u003eAssumeRoleWithWebIdentity\u003c/code\u003e does not require the use of AWS security credentials. Therefore, you can distribute an application (for example, on mobile devices) that requests temporary security credentials without including long-term AWS credentials in the application. You also don't need to deploy server-based proxy services that use long-term AWS credentials. Instead, the identity of the caller is validated by using a token from the web identity provider. For a comparison of \u003ccode\u003eAssumeRoleWithWebIdentity\u003c/code\u003e with the other API operations that produce temporary credentials, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html\\\"\u003eRequesting Temporary Security Credentials\u003c/a\u003e and \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison\\\"\u003eComparing the AWS STS API operations\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eThe temporary security credentials returned by this API consist of an access key ID, a secret access key, and a security token. Applications can use these temporary security credentials to sign calls to AWS service API operations.\u003c/p\u003e \u003cp\u003e \u003cb\u003eSession Duration\u003c/b\u003e \u003c/p\u003e \u003cp\u003eBy default, the temporary security credentials created by \u003ccode\u003eAssumeRoleWithWebIdentity\u003c/code\u003e last for one hour. However, you can use the optional \u003ccode\u003eDurationSeconds\u003c/code\u003e parameter to specify the duration of your session. You can provide a value from 900 seconds (15 minutes) up to the maximum session duration setting for the role. This setting can have a value from 1 hour to 12 hours. To learn how to view the maximum value for your role, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html#id_roles_use_view-role-max-session\\\"\u003eView the Maximum Session Duration Setting for a Role\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e. The maximum session duration limit applies when you use the \u003ccode\u003eAssumeRole*\u003c/code\u003e API operations or the \u003ccode\u003eassume-role*\u003c/code\u003e CLI commands. However the limit does not apply when you use those operations to create a console URL. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html\\\"\u003eUsing IAM Roles\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e. \u003c/p\u003e \u003cp\u003e \u003cb\u003ePermissions\u003c/b\u003e \u003c/p\u003e \u003cp\u003eThe temporary security credentials created by \u003ccode\u003eAssumeRoleWithWebIdentity\u003c/code\u003e can be used to make API calls to any AWS service with the following exception: you cannot call the STS \u003ccode\u003eGetFederationToken\u003c/code\u003e or \u003ccode\u003eGetSessionToken\u003c/code\u003e API operations.\u003c/p\u003e \u003cp\u003e(Optional) You can pass inline or managed \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\\\"\u003esession policies\u003c/a\u003e to this operation. You can pass a single JSON policy document to use as an inline session policy. You can also specify up to 10 managed policies to use as managed session policies. The plain text that you use for both inline and managed session policies can't exceed 2,048 characters. Passing policies to this operation returns new temporary credentials. The resulting session's permissions are the intersection of the role's identity-based policy and the session policies. You can use the role's temporary credentials in subsequent AWS API calls to access resources in the account that owns the role. You cannot use session policies to grant more permissions than those allowed by the identity-based policy of the role that is being assumed. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\\\"\u003eSession Policies\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003e \u003cb\u003eTags\u003c/b\u003e \u003c/p\u003e \u003cp\u003e(Optional) You can configure your IdP to pass attributes into your web identity token as session tags. Each session tag consists of a key name and an associated value. For more information about session tags, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html\\\"\u003ePassing Session Tags in STS\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eYou can pass up to 50 session tags. The plain text session tag keys can’t exceed 128 characters and the values can’t exceed 256 characters. For these and additional limits, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-limits.html#reference_iam-limits-entity-length\\\"\u003eIAM and STS Character Limits\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eAn AWS conversion compresses the passed session policies and session tags into a packed binary format that has a separate limit. Your request can fail for this limit even if your plain text meets the other requirements. The \u003ccode\u003ePackedPolicySize\u003c/code\u003e response element indicates by percentage how close the policies and tags for your request are to the upper size limit. \u003c/p\u003e \u003c/note\u003e \u003cp\u003eYou can pass a session tag with the same key as a tag that is attached to the role. When you do, the session tag overrides the role tag with the same key.\u003c/p\u003e \u003cp\u003eAn administrator must grant you the permissions necessary to pass session tags. The administrator can also create granular permissions to allow you to pass only specific session tags. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_attribute-based-access-control.html\\\"\u003eTutorial: Using Tags for Attribute-Based Access Control\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eYou can set the session tags as transitive. Transitive tags persist during role chaining. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html#id_session-tags_role-chaining\\\"\u003eChaining Roles with Session Tags\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003e \u003cb\u003eIdentities\u003c/b\u003e \u003c/p\u003e \u003cp\u003eBefore your application can call \u003ccode\u003eAssumeRoleWithWebIdentity\u003c/code\u003e, you must have an identity token from a supported identity provider and create a role that the application can assume. The role that your application assumes must trust the identity provider that is associated with the identity token. In other words, the identity provider must be specified in the role's trust policy. \u003c/p\u003e \u003cimportant\u003e \u003cp\u003eCalling \u003ccode\u003eAssumeRoleWithWebIdentity\u003c/code\u003e can result in an entry in your AWS CloudTrail logs. The entry includes the \u003ca href=\\\"http://openid.net/specs/openid-connect-core-1_0.html#Claims\\\"\u003eSubject\u003c/a\u003e of the provided Web Identity Token. We recommend that you avoid using any personally identifiable information (PII) in this field. For example, you could instead use a GUID or a pairwise identifier, as \u003ca href=\\\"http://openid.net/specs/openid-connect-core-1_0.html#SubjectIDTypes\\\"\u003esuggested in the OIDC specification\u003c/a\u003e.\u003c/p\u003e \u003c/important\u003e \u003cp\u003eFor more information about how to use web identity federation and the \u003ccode\u003eAssumeRoleWithWebIdentity\u003c/code\u003e API, see the following resources: \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc_manual.html\\\"\u003eUsing Web Identity Federation API Operations for Mobile Apps\u003c/a\u003e and \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_assumerolewithwebidentity\\\"\u003eFederation Through a Web-based Identity Provider\u003c/a\u003e. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\\\"https://web-identity-federation-playground.s3.amazonaws.com/index.html\\\"\u003e Web Identity Federation Playground\u003c/a\u003e. Walk through the process of authenticating through Login with Amazon, Facebook, or Google, getting temporary security credentials, and then using those credentials to make a request to AWS. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\\\"http://aws.amazon.com/sdkforios/\\\"\u003eAWS SDK for iOS Developer Guide\u003c/a\u003e and \u003ca href=\\\"http://aws.amazon.com/sdkforandroid/\\\"\u003eAWS SDK for Android Developer Guide\u003c/a\u003e. These toolkits contain sample apps that show how to invoke the identity providers. The toolkits then show how to use the information from these providers to get and use temporary security credentials. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\\\"http://aws.amazon.com/articles/web-identity-federation-with-mobile-applications\\\"\u003eWeb Identity Federation with Mobile Applications\u003c/a\u003e. This article discusses web identity federation and shows an example of how to use web identity federation to get access to content in Amazon S3. \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AssumeRoleWithWebIdentityResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"MalformedPolicyDocumentException\",\n            \"content\": {\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MalformedPolicyDocumentException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"PackedPolicyTooLargeException\",\n            \"content\": {\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PackedPolicyTooLargeException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"IDPRejectedClaimException\",\n            \"content\": {\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/IDPRejectedClaimException\"\n                }\n              }\n            }\n          },\n          \"483\": {\n            \"description\": \"IDPCommunicationErrorException\",\n            \"content\": {\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/IDPCommunicationErrorException\"\n                }\n              }\n            }\n          },\n          \"484\": {\n            \"description\": \"InvalidIdentityTokenException\",\n            \"content\": {\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidIdentityTokenException\"\n                }\n              }\n            }\n          },\n          \"485\": {\n            \"description\": \"ExpiredTokenException\",\n            \"content\": {\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ExpiredTokenException\"\n                }\n              }\n            }\n          },\n          \"486\": {\n            \"description\": \"RegionDisabledException\",\n            \"content\": {\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RegionDisabledException\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"text/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AssumeRoleWithWebIdentityRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"Action\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"AssumeRoleWithWebIdentity\"]\n            }\n          },\n          {\n            \"name\": \"Version\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"enum\": [\"2011-06-15\"] }\n          }\n        ],\n        \"summary\": \"Assume Role With Web Identity\"\n      }\n    },\n    \"/#Action=DecodeAuthorizationMessage\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ],\n      \"post\": {\n        \"x-aws-operation-name\": \"DecodeAuthorizationMessage\",\n        \"operationId\": \"POST_DecodeAuthorizationMessage\",\n        \"description\": \"\u003cp\u003eDecodes additional information about the authorization status of a request from an encoded message returned in response to an AWS request.\u003c/p\u003e \u003cp\u003eFor example, if a user is not authorized to perform an operation that he or she has requested, the request returns a \u003ccode\u003eClient.UnauthorizedOperation\u003c/code\u003e response (an HTTP 403 response). Some AWS operations additionally return an encoded message that can provide details about this authorization failure. \u003c/p\u003e \u003cnote\u003e \u003cp\u003eOnly certain AWS operations return an encoded authorization message. The documentation for an individual operation indicates whether that operation returns an encoded message in addition to returning an HTTP code.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eThe message is encoded because the details of the authorization status can constitute privileged information that the user who requested the operation should not see. To decode an authorization status message, a user must be granted permissions via an IAM policy to request the \u003ccode\u003eDecodeAuthorizationMessage\u003c/code\u003e (\u003ccode\u003ests:DecodeAuthorizationMessage\u003c/code\u003e) action. \u003c/p\u003e \u003cp\u003eThe decoded message includes the following type of information:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eWhether the request was denied due to an explicit deny or due to the absence of an explicit allow. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html#policy-eval-denyallow\\\"\u003eDetermining Whether a Request is Allowed or Denied\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eThe principal who made the request.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eThe requested action.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eThe requested resource.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eThe values of condition keys in the context of the user's request.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DecodeAuthorizationMessageResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"InvalidAuthorizationMessageException\",\n            \"content\": {\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidAuthorizationMessageException\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"text/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DecodeAuthorizationMessageRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"Action\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\"DecodeAuthorizationMessage\"]\n            }\n          },\n          {\n            \"name\": \"Version\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"enum\": [\"2011-06-15\"] }\n          }\n        ],\n        \"summary\": \"Decode Authorization Message\"\n      }\n    },\n    \"/#Action=GetAccessKeyInfo\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ],\n      \"post\": {\n        \"x-aws-operation-name\": \"GetAccessKeyInfo\",\n        \"operationId\": \"POST_GetAccessKeyInfo\",\n        \"description\": \"\u003cp\u003eReturns the account identifier for the specified access key ID.\u003c/p\u003e \u003cp\u003eAccess keys consist of two parts: an access key ID (for example, \u003ccode\u003eAKIAIOSFODNN7EXAMPLE\u003c/code\u003e) and a secret access key (for example, \u003ccode\u003ewJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\u003c/code\u003e). For more information about access keys, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html\\\"\u003eManaging Access Keys for IAM Users\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eWhen you pass an access key ID to this operation, it returns the ID of the AWS account to which the keys belong. Access key IDs beginning with \u003ccode\u003eAKIA\u003c/code\u003e are long-term credentials for an IAM user or the AWS account root user. Access key IDs beginning with \u003ccode\u003eASIA\u003c/code\u003e are temporary credentials that are created using STS operations. If the account in the response belongs to you, you can sign in as the root user and review your root user access keys. Then, you can pull a \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_getting-report.html\\\"\u003ecredentials report\u003c/a\u003e to learn which IAM user owns the keys. To learn who requested the temporary credentials for an \u003ccode\u003eASIA\u003c/code\u003e access key, view the STS events in your \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/cloudtrail-integration.html\\\"\u003eCloudTrail logs\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eThis operation does not indicate the state of the access key. The key might be active, inactive, or deleted. Active keys might not have permissions to perform an operation. Providing a deleted access key might return an error that the key doesn't exist.\u003c/p\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetAccessKeyInfoResponse\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"text/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/GetAccessKeyInfoRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"Action\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"enum\": [\"GetAccessKeyInfo\"] }\n          },\n          {\n            \"name\": \"Version\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"enum\": [\"2011-06-15\"] }\n          }\n        ],\n        \"summary\": \"Get Access Key Info\"\n      }\n    },\n    \"/#Action=GetCallerIdentity\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ],\n      \"post\": {\n        \"x-aws-operation-name\": \"GetCallerIdentity\",\n        \"operationId\": \"POST_GetCallerIdentity\",\n        \"description\": \"\u003cp\u003eReturns details about the IAM user or role whose credentials are used to call the operation.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eNo permissions are required to perform this operation. If an administrator adds a policy to your IAM user or role that explicitly denies access to the \u003ccode\u003ests:GetCallerIdentity\u003c/code\u003e action, you can still perform this operation. Permissions are not required because the same information is returned when an IAM user or role is denied access. To view an example response, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_access-denied-delete-mfa\\\"\u003eI Am Not Authorized to Perform: iam:DeleteVirtualMFADevice\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003c/note\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetCallerIdentityResponse\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"text/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/GetCallerIdentityRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"Action\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"enum\": [\"GetCallerIdentity\"] }\n          },\n          {\n            \"name\": \"Version\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"enum\": [\"2011-06-15\"] }\n          }\n        ],\n        \"summary\": \"Get Caller Identity\"\n      }\n    },\n    \"/#Action=GetFederationToken\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ],\n      \"post\": {\n        \"x-aws-operation-name\": \"GetFederationToken\",\n        \"operationId\": \"POST_GetFederationToken\",\n        \"description\": \"\u003cp\u003eReturns a set of temporary security credentials (consisting of an access key ID, a secret access key, and a security token) for a federated user. A typical use is in a proxy application that gets temporary security credentials on behalf of distributed applications inside a corporate network. You must call the \u003ccode\u003eGetFederationToken\u003c/code\u003e operation using the long-term security credentials of an IAM user. As a result, this call is appropriate in contexts where those credentials can be safely stored, usually in a server-based application. For a comparison of \u003ccode\u003eGetFederationToken\u003c/code\u003e with the other API operations that produce temporary credentials, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html\\\"\u003eRequesting Temporary Security Credentials\u003c/a\u003e and \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison\\\"\u003eComparing the AWS STS API operations\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eYou can create a mobile-based or browser-based app that can authenticate users using a web identity provider like Login with Amazon, Facebook, Google, or an OpenID Connect-compatible identity provider. In this case, we recommend that you use \u003ca href=\\\"http://aws.amazon.com/cognito/\\\"\u003eAmazon Cognito\u003c/a\u003e or \u003ccode\u003eAssumeRoleWithWebIdentity\u003c/code\u003e. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_assumerolewithwebidentity\\\"\u003eFederation Through a Web-based Identity Provider\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eYou can also call \u003ccode\u003eGetFederationToken\u003c/code\u003e using the security credentials of an AWS account root user, but we do not recommend it. Instead, we recommend that you create an IAM user for the purpose of the proxy application. Then attach a policy to the IAM user that limits federated users to only the actions and resources that they need to access. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html\\\"\u003eIAM Best Practices\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e. \u003c/p\u003e \u003cp\u003e \u003cb\u003eSession duration\u003c/b\u003e \u003c/p\u003e \u003cp\u003eThe temporary credentials are valid for the specified duration, from 900 seconds (15 minutes) up to a maximum of 129,600 seconds (36 hours). The default session duration is 43,200 seconds (12 hours). Temporary credentials that are obtained by using AWS account root user credentials have a maximum duration of 3,600 seconds (1 hour).\u003c/p\u003e \u003cp\u003e \u003cb\u003ePermissions\u003c/b\u003e \u003c/p\u003e \u003cp\u003eYou can use the temporary credentials created by \u003ccode\u003eGetFederationToken\u003c/code\u003e in any AWS service except the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eYou cannot call any IAM operations using the AWS CLI or the AWS API. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eYou cannot call any STS operations except \u003ccode\u003eGetCallerIdentity\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eYou must pass an inline or managed \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\\\"\u003esession policy\u003c/a\u003e to this operation. You can pass a single JSON policy document to use as an inline session policy. You can also specify up to 10 managed policies to use as managed session policies. The plain text that you use for both inline and managed session policies can't exceed 2,048 characters.\u003c/p\u003e \u003cp\u003eThough the session policy parameters are optional, if you do not pass a policy, then the resulting federated user session has no permissions. When you pass session policies, the session permissions are the intersection of the IAM user policies and the session policies that you pass. This gives you a way to further restrict the permissions for a federated user. You cannot use session policies to grant more permissions than those that are defined in the permissions policy of the IAM user. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\\\"\u003eSession Policies\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e. For information about using \u003ccode\u003eGetFederationToken\u003c/code\u003e to create temporary security credentials, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_getfederationtoken\\\"\u003eGetFederationToken—Federation Through a Custom Identity Broker\u003c/a\u003e. \u003c/p\u003e \u003cp\u003eYou can use the credentials to access a resource that has a resource-based policy. If that policy specifically references the federated user session in the \u003ccode\u003ePrincipal\u003c/code\u003e element of the policy, the session has the permissions allowed by the policy. These permissions are granted in addition to the permissions granted by the session policies.\u003c/p\u003e \u003cp\u003e \u003cb\u003eTags\u003c/b\u003e \u003c/p\u003e \u003cp\u003e(Optional) You can pass tag key-value pairs to your session. These are called session tags. For more information about session tags, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html\\\"\u003ePassing Session Tags in STS\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eAn administrator must grant you the permissions necessary to pass session tags. The administrator can also create granular permissions to allow you to pass only specific session tags. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_attribute-based-access-control.html\\\"\u003eTutorial: Using Tags for Attribute-Based Access Control\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eTag key–value pairs are not case sensitive, but case is preserved. This means that you cannot have separate \u003ccode\u003eDepartment\u003c/code\u003e and \u003ccode\u003edepartment\u003c/code\u003e tag keys. Assume that the user that you are federating has the \u003ccode\u003eDepartment\u003c/code\u003e=\u003ccode\u003eMarketing\u003c/code\u003e tag and you pass the \u003ccode\u003edepartment\u003c/code\u003e=\u003ccode\u003eengineering\u003c/code\u003e session tag. \u003ccode\u003eDepartment\u003c/code\u003e and \u003ccode\u003edepartment\u003c/code\u003e are not saved as separate tags, and the session tag passed in the request takes precedence over the user tag.\u003c/p\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetFederationTokenResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"MalformedPolicyDocumentException\",\n            \"content\": {\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MalformedPolicyDocumentException\"\n                }\n              }\n            }\n          },\n          \"481\": {\n            \"description\": \"PackedPolicyTooLargeException\",\n            \"content\": {\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PackedPolicyTooLargeException\"\n                }\n              }\n            }\n          },\n          \"482\": {\n            \"description\": \"RegionDisabledException\",\n            \"content\": {\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RegionDisabledException\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"text/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/GetFederationTokenRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"Action\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"enum\": [\"GetFederationToken\"] }\n          },\n          {\n            \"name\": \"Version\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"enum\": [\"2011-06-15\"] }\n          }\n        ],\n        \"summary\": \"Get Federation Token\"\n      }\n    },\n    \"/#Action=GetSessionToken\": {\n      \"parameters\": [\n        { \"$ref\": \"#/components/parameters/X-Amz-Content-Sha256\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Date\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Algorithm\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Credential\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Security-Token\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-Signature\" },\n        { \"$ref\": \"#/components/parameters/X-Amz-SignedHeaders\" }\n      ],\n      \"post\": {\n        \"x-aws-operation-name\": \"GetSessionToken\",\n        \"operationId\": \"POST_GetSessionToken\",\n        \"description\": \"\u003cp\u003eReturns a set of temporary credentials for an AWS account or IAM user. The credentials consist of an access key ID, a secret access key, and a security token. Typically, you use \u003ccode\u003eGetSessionToken\u003c/code\u003e if you want to use MFA to protect programmatic calls to specific AWS API operations like Amazon EC2 \u003ccode\u003eStopInstances\u003c/code\u003e. MFA-enabled IAM users would need to call \u003ccode\u003eGetSessionToken\u003c/code\u003e and submit an MFA code that is associated with their MFA device. Using the temporary security credentials that are returned from the call, IAM users can then make programmatic calls to API operations that require MFA authentication. If you do not supply a correct MFA code, then the API returns an access denied error. For a comparison of \u003ccode\u003eGetSessionToken\u003c/code\u003e with the other API operations that produce temporary credentials, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html\\\"\u003eRequesting Temporary Security Credentials\u003c/a\u003e and \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison\\\"\u003eComparing the AWS STS API operations\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003e \u003cb\u003eSession Duration\u003c/b\u003e \u003c/p\u003e \u003cp\u003eThe \u003ccode\u003eGetSessionToken\u003c/code\u003e operation must be called by using the long-term AWS security credentials of the AWS account root user or an IAM user. Credentials that are created by IAM users are valid for the duration that you specify. This duration can range from 900 seconds (15 minutes) up to a maximum of 129,600 seconds (36 hours), with a default of 43,200 seconds (12 hours). Credentials based on account credentials can range from 900 seconds (15 minutes) up to 3,600 seconds (1 hour), with a default of 1 hour. \u003c/p\u003e \u003cp\u003e \u003cb\u003ePermissions\u003c/b\u003e \u003c/p\u003e \u003cp\u003eThe temporary security credentials created by \u003ccode\u003eGetSessionToken\u003c/code\u003e can be used to make API calls to any AWS service with the following exceptions:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eYou cannot call any IAM API operations unless MFA authentication information is included in the request.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eYou cannot call any STS API \u003ci\u003eexcept\u003c/i\u003e \u003ccode\u003eAssumeRole\u003c/code\u003e or \u003ccode\u003eGetCallerIdentity\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cnote\u003e \u003cp\u003eWe recommend that you do not call \u003ccode\u003eGetSessionToken\u003c/code\u003e with AWS account root user credentials. Instead, follow our \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#create-iam-users\\\"\u003ebest practices\u003c/a\u003e by creating one or more IAM users, giving them the necessary permissions, and using IAM users for everyday interaction with AWS. \u003c/p\u003e \u003c/note\u003e \u003cp\u003eThe credentials that are returned by \u003ccode\u003eGetSessionToken\u003c/code\u003e are based on permissions associated with the user whose credentials were used to call the operation. If \u003ccode\u003eGetSessionToken\u003c/code\u003e is called using AWS account root user credentials, the temporary credentials have root user permissions. Similarly, if \u003ccode\u003eGetSessionToken\u003c/code\u003e is called using the credentials of an IAM user, the temporary credentials have the same permissions as the IAM user. \u003c/p\u003e \u003cp\u003eFor more information about using \u003ccode\u003eGetSessionToken\u003c/code\u003e to create temporary credentials, go to \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_getsessiontoken\\\"\u003eTemporary Credentials for Users in Untrusted Environments\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e. \u003c/p\u003e\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetSessionTokenResponse\"\n                }\n              }\n            }\n          },\n          \"480\": {\n            \"description\": \"RegionDisabledException\",\n            \"content\": {\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RegionDisabledException\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"text/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/GetSessionTokenRequest\"\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"Action\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"enum\": [\"GetSessionToken\"] }\n          },\n          {\n            \"name\": \"Version\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\", \"enum\": [\"2011-06-15\"] }\n          }\n        ],\n        \"summary\": \"Get Session Token\"\n      }\n    }\n  },\n  \"components\": {\n    \"parameters\": {\n      \"X-Amz-Content-Sha256\": {\n        \"name\": \"X-Amz-Content-Sha256\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Date\": {\n        \"name\": \"X-Amz-Date\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Algorithm\": {\n        \"name\": \"X-Amz-Algorithm\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Credential\": {\n        \"name\": \"X-Amz-Credential\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Security-Token\": {\n        \"name\": \"X-Amz-Security-Token\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-Signature\": {\n        \"name\": \"X-Amz-Signature\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      },\n      \"X-Amz-SignedHeaders\": {\n        \"name\": \"X-Amz-SignedHeaders\",\n        \"in\": \"header\",\n        \"schema\": { \"type\": \"string\" },\n        \"required\": false,\n        \"x-ignore\": true\n      }\n    },\n    \"securitySchemes\": {\n      \"hmac\": {\n        \"type\": \"apiKey\",\n        \"name\": \"Authorization\",\n        \"in\": \"header\",\n        \"description\": \"Amazon Signature authorization v4\",\n        \"x-amazon-apigateway-authtype\": \"awsSigv4\"\n      }\n    },\n    \"schemas\": {\n      \"AssumeRoleResponse\": {\n        \"type\": \"object\",\n        \"example\": {\n          \"AssumedRoleUser\": {\n            \"Arn\": \"arn:aws:sts::123456789012:assumed-role/demo/Bob\",\n            \"AssumedRoleId\": \"ARO123EXAMPLE123:Bob\"\n          },\n          \"Credentials\": {\n            \"AccessKeyId\": \"AKIAIOSFODNN7EXAMPLE\",\n            \"Expiration\": \"2011-07-15T23:28:33.359Z\",\n            \"SecretAccessKey\": \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYzEXAMPLEKEY\",\n            \"SessionToken\": \"AQoDYXdzEPT//////////wEXAMPLEtc764bNrC9SAPBSM22wDOk4x4HIZ8j4FZTwdQWLWsKWHGBuFqwAeMicRXmxfpSPfIeoIYRqTflfKD8YUuwthAx7mSEI/qkPpKPi/kMcGdQrmGdeehM4IC1NtBmUpp2wUE8phUZampKsburEDy0KPkyQDYwT7WZ0wq5VSXDvp75YU9HFvlRd8Tx6q6fE8YQcHNVXAkiY9q6d+xo0rKwT38xVqr7ZD0u0iPPkUL64lIZbqBAz+scqKmlzm8FDrypNC9Yjc8fPOLn9FX9KSYvKTr4rvx3iSIlTJabIQwj2ICCR/oLxBA==\"\n          },\n          \"PackedPolicySize\": 8\n        },\n        \"properties\": {\n          \"Credentials\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Credentials\" },\n              {\n                \"description\": \"\u003cp\u003eThe temporary security credentials, which include an access key ID, a secret access key, and a security (or session) token.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThe size of the security token that STS API operations return is not fixed. We strongly recommend that you make no assumptions about the maximum size.\u003c/p\u003e \u003c/note\u003e\"\n              }\n            ]\n          },\n          \"AssumedRoleUser\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/AssumedRoleUser\" },\n              {\n                \"description\": \"The Amazon Resource Name (ARN) and the assumed role ID, which are identifiers that you can use to refer to the resulting temporary security credentials. For example, you can reference these credentials as a principal in a resource-based policy by using the ARN or assumed role ID. The ARN and ID include the \u003ccode\u003eRoleSessionName\u003c/code\u003e that you specified when you called \u003ccode\u003eAssumeRole\u003c/code\u003e. \"\n              }\n            ]\n          },\n          \"PackedPolicySize\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/nonNegativeIntegerType\" },\n              {\n                \"description\": \"A percentage value that indicates the packed size of the session policies and session tags combined passed in the request. The request fails if the packed size is greater than 100 percent, which means the policies and tags exceeded the allowed space.\"\n              }\n            ]\n          },\n          \"SourceIdentity\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/sourceIdentityType\" },\n              {\n                \"description\": \"\u003cp\u003eThe source identity specified by the principal that is calling the \u003ccode\u003eAssumeRole\u003c/code\u003e operation.\u003c/p\u003e \u003cp\u003eYou can require users to specify a source identity when they assume a role. You do this by using the \u003ccode\u003ests:SourceIdentity\u003c/code\u003e condition key in a role trust policy. You can use source identity information in CloudTrail logs to determine who took actions with a role. You can use the \u003ccode\u003eaws:SourceIdentity\u003c/code\u003e condition key to further control access to Amazon Web Services resources based on the value of source identity. For more information about using source identity, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_monitor.html\\\"\u003eMonitor and control actions taken with assumed roles\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eThe regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@-\u003c/p\u003e\"\n              }\n            ]\n          }\n        },\n        \"description\": \"Contains the response to a successful \u003ca\u003eAssumeRole\u003c/a\u003e request, including temporary AWS credentials that can be used to make AWS requests. \"\n      },\n      \"PolicyDescriptorType\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"arn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/arnType\" },\n              {\n                \"description\": \"The Amazon Resource Name (ARN) of the IAM managed policy to use as a session policy for the role. For more information about ARNs, see \u003ca href=\\\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\\\"\u003eAmazon Resource Names (ARNs) and AWS Service Namespaces\u003c/a\u003e in the \u003ci\u003eAWS General Reference\u003c/i\u003e.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"A reference to the IAM managed policy that is passed as a session policy for a role session or a federated user session.\"\n      },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"required\": [\"Key\", \"Value\"],\n        \"properties\": {\n          \"Key\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/tagKeyType\" },\n              {\n                \"description\": \"\u003cp\u003eThe key for a session tag.\u003c/p\u003e \u003cp\u003eYou can pass up to 50 session tags. The plain text session tag keys can’t exceed 128 characters. For these and additional limits, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-limits.html#reference_iam-limits-entity-length\\\"\u003eIAM and STS Character Limits\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e\"\n              }\n            ]\n          },\n          \"Value\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/tagValueType\" },\n              {\n                \"description\": \"\u003cp\u003eThe value for a session tag.\u003c/p\u003e \u003cp\u003eYou can pass up to 50 session tags. The plain text session tag values can’t exceed 256 characters. For these and additional limits, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-limits.html#reference_iam-limits-entity-length\\\"\u003eIAM and STS Character Limits\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e\"\n              }\n            ]\n          }\n        },\n        \"description\": \"You can pass custom key-value pair attributes when you assume a role or federate a user. These are called session tags. You can then use the session tags to control access to resources. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html\\\"\u003eTagging AWS STS Sessions\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\"\n      },\n      \"tagKeyType\": {\n        \"type\": \"string\",\n        \"pattern\": \"[\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-@]+\",\n        \"minLength\": 1,\n        \"maxLength\": 128\n      },\n      \"MalformedPolicyDocumentException\": {},\n      \"PackedPolicyTooLargeException\": {},\n      \"RegionDisabledException\": {},\n      \"AssumeRoleWithSAMLResponse\": {\n        \"type\": \"object\",\n        \"example\": {\n          \"AssumedRoleUser\": {\n            \"Arn\": \"arn:aws:sts::123456789012:assumed-role/TestSaml\",\n            \"AssumedRoleId\": \"ARO456EXAMPLE789:TestSaml\"\n          },\n          \"Audience\": \"https://signin.aws.amazon.com/saml\",\n          \"Credentials\": {\n            \"AccessKeyId\": \"ASIAV3ZUEFP6EXAMPLE\",\n            \"Expiration\": \"2019-11-01T20:26:47Z\",\n            \"SecretAccessKey\": \"8P+SQvWIuLnKhh8d++jpw0nNmQRBZvNEXAMPLEKEY\",\n            \"SessionToken\": \"IQoJb3JpZ2luX2VjEOz////////////////////wEXAMPLEtMSJHMEUCIDoKK3JH9uGQE1z0sINr5M4jk+Na8KHDcCYRVjJCZEvOAiEA3OvJGtw1EcViOleS2vhs8VdCKFJQWPQrmGdeehM4IC1NtBmUpp2wUE8phUZampKsburEDy0KPkyQDYwT7WZ0wq5VSXDvp75YU9HFvlRd8Tx6q6fE8YQcHNVXAkiY9q6d+xo0rKwT38xVqr7ZD0u0iPPkUL64lIZbqBAz+scqKmlzm8FDrypNC9Yjc8fPOLn9FX9KSYvKTr4rvx3iSIlTJabIQwj2ICCR/oLxBA==\"\n          },\n          \"Issuer\": \"https://integ.example.com/idp/shibboleth\",\n          \"NameQualifier\": \"SbdGOnUkh1i4+EXAMPLExL/jEvs=\",\n          \"PackedPolicySize\": 6,\n          \"Subject\": \"SamlExample\",\n          \"SubjectType\": \"transient\"\n        },\n        \"properties\": {\n          \"Credentials\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Credentials\" },\n              {\n                \"description\": \"\u003cp\u003eThe temporary security credentials, which include an access key ID, a secret access key, and a security (or session) token.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThe size of the security token that STS API operations return is not fixed. We strongly recommend that you make no assumptions about the maximum size.\u003c/p\u003e \u003c/note\u003e\"\n              }\n            ]\n          },\n          \"AssumedRoleUser\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/AssumedRoleUser\" },\n              {\n                \"description\": \"The identifiers for the temporary security credentials that the operation returns.\"\n              }\n            ]\n          },\n          \"PackedPolicySize\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/nonNegativeIntegerType\" },\n              {\n                \"description\": \"A percentage value that indicates the packed size of the session policies and session tags combined passed in the request. The request fails if the packed size is greater than 100 percent, which means the policies and tags exceeded the allowed space.\"\n              }\n            ]\n          },\n          \"Subject\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Subject\" },\n              {\n                \"description\": \"The value of the \u003ccode\u003eNameID\u003c/code\u003e element in the \u003ccode\u003eSubject\u003c/code\u003e element of the SAML assertion.\"\n              }\n            ]\n          },\n          \"SubjectType\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SubjectType\" },\n              {\n                \"description\": \"\u003cp\u003e The format of the name ID, as defined by the \u003ccode\u003eFormat\u003c/code\u003e attribute in the \u003ccode\u003eNameID\u003c/code\u003e element of the SAML assertion. Typical examples of the format are \u003ccode\u003etransient\u003c/code\u003e or \u003ccode\u003epersistent\u003c/code\u003e. \u003c/p\u003e \u003cp\u003e If the format includes the prefix \u003ccode\u003eurn:oasis:names:tc:SAML:2.0:nameid-format\u003c/code\u003e, that prefix is removed. For example, \u003ccode\u003eurn:oasis:names:tc:SAML:2.0:nameid-format:transient\u003c/code\u003e is returned as \u003ccode\u003etransient\u003c/code\u003e. If the format includes any other prefix, the format is returned with no modifications.\u003c/p\u003e\"\n              }\n            ]\n          },\n          \"Issuer\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Issuer\" },\n              {\n                \"description\": \"The value of the \u003ccode\u003eIssuer\u003c/code\u003e element of the SAML assertion.\"\n              }\n            ]\n          },\n          \"Audience\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Audience\" },\n              {\n                \"description\": \" The value of the \u003ccode\u003eRecipient\u003c/code\u003e attribute of the \u003ccode\u003eSubjectConfirmationData\u003c/code\u003e element of the SAML assertion. \"\n              }\n            ]\n          },\n          \"NameQualifier\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/NameQualifier\" },\n              {\n                \"description\": \"\u003cp\u003eA hash value based on the concatenation of the \u003ccode\u003eIssuer\u003c/code\u003e response value, the AWS account ID, and the friendly name (the last part of the ARN) of the SAML provider in IAM. The combination of \u003ccode\u003eNameQualifier\u003c/code\u003e and \u003ccode\u003eSubject\u003c/code\u003e can be used to uniquely identify a federated user. \u003c/p\u003e \u003cp\u003eThe following pseudocode shows how the hash value is calculated:\u003c/p\u003e \u003cp\u003e \u003ccode\u003eBASE64 ( SHA1 ( \\\"https://example.com/saml\\\" + \\\"123456789012\\\" + \\\"/MySAMLIdP\\\" ) )\u003c/code\u003e \u003c/p\u003e\"\n              }\n            ]\n          },\n          \"SourceIdentity\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/sourceIdentityType\" },\n              {\n                \"description\": \"\u003cp\u003eThe value in the \u003ccode\u003eSourceIdentity\u003c/code\u003e attribute in the SAML assertion. \u003c/p\u003e \u003cp\u003eYou can require users to set a source identity value when they assume a role. You do this by using the \u003ccode\u003ests:SourceIdentity\u003c/code\u003e condition key in a role trust policy. That way, actions that are taken with the role are associated with that user. After the source identity is set, the value cannot be changed. It is present in the request for all actions that are taken by the role and persists across \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts#iam-term-role-chaining\\\"\u003echained role\u003c/a\u003e sessions. You can configure your SAML identity provider to use an attribute associated with your users, like user name or email, as the source identity when calling \u003ccode\u003eAssumeRoleWithSAML\u003c/code\u003e. You do this by adding an attribute to the SAML assertion. For more information about using source identity, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_monitor.html\\\"\u003eMonitor and control actions taken with assumed roles\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eThe regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@-\u003c/p\u003e\"\n              }\n            ]\n          }\n        },\n        \"description\": \"Contains the response to a successful \u003ca\u003eAssumeRoleWithSAML\u003c/a\u003e request, including temporary AWS credentials that can be used to make AWS requests. \"\n      },\n      \"IDPRejectedClaimException\": {},\n      \"InvalidIdentityTokenException\": {},\n      \"ExpiredTokenException\": {},\n      \"AssumeRoleWithWebIdentityResponse\": {\n        \"type\": \"object\",\n        \"example\": {\n          \"AssumedRoleUser\": {\n            \"Arn\": \"arn:aws:sts::123456789012:assumed-role/FederatedWebIdentityRole/app1\",\n            \"AssumedRoleId\": \"AROACLKWSDQRAOEXAMPLE:app1\"\n          },\n          \"Audience\": \"client.5498841531868486423.1548@apps.example.com\",\n          \"Credentials\": {\n            \"AccessKeyId\": \"AKIAIOSFODNN7EXAMPLE\",\n            \"Expiration\": \"2014-10-24T23:00:23Z\",\n            \"SecretAccessKey\": \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYzEXAMPLEKEY\",\n            \"SessionToken\": \"AQoDYXdzEE0a8ANXXXXXXXXNO1ewxE5TijQyp+IEXAMPLE\"\n          },\n          \"PackedPolicySize\": 123,\n          \"Provider\": \"www.amazon.com\",\n          \"SubjectFromWebIdentityToken\": \"amzn1.account.AF6RHO7KZU5XRVQJGXK6HEXAMPLE\"\n        },\n        \"properties\": {\n          \"Credentials\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Credentials\" },\n              {\n                \"description\": \"\u003cp\u003eThe temporary security credentials, which include an access key ID, a secret access key, and a security token.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThe size of the security token that STS API operations return is not fixed. We strongly recommend that you make no assumptions about the maximum size.\u003c/p\u003e \u003c/note\u003e\"\n              }\n            ]\n          },\n          \"SubjectFromWebIdentityToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/webIdentitySubjectType\" },\n              {\n                \"description\": \"The unique user identifier that is returned by the identity provider. This identifier is associated with the \u003ccode\u003eWebIdentityToken\u003c/code\u003e that was submitted with the \u003ccode\u003eAssumeRoleWithWebIdentity\u003c/code\u003e call. The identifier is typically unique to the user and the application that acquired the \u003ccode\u003eWebIdentityToken\u003c/code\u003e (pairwise identifier). For OpenID Connect ID tokens, this field contains the value returned by the identity provider as the token's \u003ccode\u003esub\u003c/code\u003e (Subject) claim. \"\n              }\n            ]\n          },\n          \"AssumedRoleUser\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/AssumedRoleUser\" },\n              {\n                \"description\": \"The Amazon Resource Name (ARN) and the assumed role ID, which are identifiers that you can use to refer to the resulting temporary security credentials. For example, you can reference these credentials as a principal in a resource-based policy by using the ARN or assumed role ID. The ARN and ID include the \u003ccode\u003eRoleSessionName\u003c/code\u003e that you specified when you called \u003ccode\u003eAssumeRole\u003c/code\u003e. \"\n              }\n            ]\n          },\n          \"PackedPolicySize\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/nonNegativeIntegerType\" },\n              {\n                \"description\": \"A percentage value that indicates the packed size of the session policies and session tags combined passed in the request. The request fails if the packed size is greater than 100 percent, which means the policies and tags exceeded the allowed space.\"\n              }\n            ]\n          },\n          \"Provider\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Issuer\" },\n              {\n                \"description\": \" The issuing authority of the web identity token presented. For OpenID Connect ID tokens, this contains the value of the \u003ccode\u003eiss\u003c/code\u003e field. For OAuth 2.0 access tokens, this contains the value of the \u003ccode\u003eProviderId\u003c/code\u003e parameter that was passed in the \u003ccode\u003eAssumeRoleWithWebIdentity\u003c/code\u003e request.\"\n              }\n            ]\n          },\n          \"Audience\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Audience\" },\n              {\n                \"description\": \"The intended audience (also known as client ID) of the web identity token. This is traditionally the client identifier issued to the application that requested the web identity token.\"\n              }\n            ]\n          },\n          \"SourceIdentity\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/sourceIdentityType\" },\n              {\n                \"description\": \"\u003cp\u003eThe value of the source identity that is returned in the JSON web token (JWT) from the identity provider.\u003c/p\u003e \u003cp\u003eYou can require users to set a source identity value when they assume a role. You do this by using the \u003ccode\u003ests:SourceIdentity\u003c/code\u003e condition key in a role trust policy. That way, actions that are taken with the role are associated with that user. After the source identity is set, the value cannot be changed. It is present in the request for all actions that are taken by the role and persists across \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts#iam-term-role-chaining\\\"\u003echained role\u003c/a\u003e sessions. You can configure your identity provider to use an attribute associated with your users, like user name or email, as the source identity when calling \u003ccode\u003eAssumeRoleWithWebIdentity\u003c/code\u003e. You do this by adding a claim to the JSON web token. To learn more about OIDC tokens and claims, see \u003ca href=\\\"https://docs.aws.amazon.com/cognito/latest/developerguide/amazon-cognito-user-pools-using-tokens-with-identity-providers.html\\\"\u003eUsing Tokens with User Pools\u003c/a\u003e in the \u003ci\u003eAmazon Cognito Developer Guide\u003c/i\u003e. For more information about using source identity, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_monitor.html\\\"\u003eMonitor and control actions taken with assumed roles\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eThe regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@-\u003c/p\u003e\"\n              }\n            ]\n          }\n        },\n        \"description\": \"Contains the response to a successful \u003ca\u003eAssumeRoleWithWebIdentity\u003c/a\u003e request, including temporary AWS credentials that can be used to make AWS requests. \"\n      },\n      \"IDPCommunicationErrorException\": {},\n      \"DecodeAuthorizationMessageResponse\": {\n        \"type\": \"object\",\n        \"example\": {\n          \"DecodedMessage\": \"{\\\"allowed\\\": \\\"false\\\",\\\"explicitDeny\\\": \\\"false\\\",\\\"matchedStatements\\\": \\\"\\\",\\\"failures\\\": \\\"\\\",\\\"context\\\": {\\\"principal\\\": {\\\"id\\\": \\\"AIDACKCEVSQ6C2EXAMPLE\\\",\\\"name\\\": \\\"Bob\\\",\\\"arn\\\": \\\"arn:aws:iam::123456789012:user/Bob\\\"},\\\"action\\\": \\\"ec2:StopInstances\\\",\\\"resource\\\": \\\"arn:aws:ec2:us-east-1:123456789012:instance/i-dd01c9bd\\\",\\\"conditions\\\": [{\\\"item\\\": {\\\"key\\\": \\\"ec2:Tenancy\\\",\\\"values\\\": [\\\"default\\\"]},{\\\"item\\\": {\\\"key\\\": \\\"ec2:ResourceTag/elasticbeanstalk:environment-name\\\",\\\"values\\\": [\\\"Default-Environment\\\"]}},(Additional items ...)]}}\"\n        },\n        \"properties\": {\n          \"DecodedMessage\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/decodedMessageType\" },\n              {\n                \"description\": \"An XML document that contains the decoded message.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"A document that contains additional information about the authorization status of a request from an encoded message that is returned in response to an AWS request.\"\n      },\n      \"InvalidAuthorizationMessageException\": {},\n      \"GetAccessKeyInfoResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"Account\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/accountType\" },\n              { \"description\": \"The number used to identify the AWS account.\" }\n            ]\n          }\n        }\n      },\n      \"GetCallerIdentityResponse\": {\n        \"type\": \"object\",\n        \"example\": {\n          \"Account\": \"123456789012\",\n          \"Arn\": \"arn:aws:sts::123456789012:federated-user/my-federated-user-name\",\n          \"UserId\": \"123456789012:my-federated-user-name\"\n        },\n        \"properties\": {\n          \"UserId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/userIdType\" },\n              {\n                \"description\": \"The unique identifier of the calling entity. The exact value depends on the type of entity that is making the call. The values returned are those listed in the \u003cb\u003eaws:userid\u003c/b\u003e column in the \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_variables.html#principaltable\\\"\u003ePrincipal table\u003c/a\u003e found on the \u003cb\u003ePolicy Variables\u003c/b\u003e reference page in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\"\n              }\n            ]\n          },\n          \"Account\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/accountType\" },\n              {\n                \"description\": \"The AWS account ID number of the account that owns or contains the calling entity.\"\n              }\n            ]\n          },\n          \"Arn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/arnType\" },\n              {\n                \"description\": \"The AWS ARN associated with the calling entity.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"Contains the response to a successful \u003ca\u003eGetCallerIdentity\u003c/a\u003e request, including information about the entity making the request.\"\n      },\n      \"GetFederationTokenResponse\": {\n        \"type\": \"object\",\n        \"example\": {\n          \"Credentials\": {\n            \"AccessKeyId\": \"AKIAIOSFODNN7EXAMPLE\",\n            \"Expiration\": \"2011-07-15T23:28:33.359Z\",\n            \"SecretAccessKey\": \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYzEXAMPLEKEY\",\n            \"SessionToken\": \"AQoDYXdzEPT//////////wEXAMPLEtc764bNrC9SAPBSM22wDOk4x4HIZ8j4FZTwdQWLWsKWHGBuFqwAeMicRXmxfpSPfIeoIYRqTflfKD8YUuwthAx7mSEI/qkPpKPi/kMcGdQrmGdeehM4IC1NtBmUpp2wUE8phUZampKsburEDy0KPkyQDYwT7WZ0wq5VSXDvp75YU9HFvlRd8Tx6q6fE8YQcHNVXAkiY9q6d+xo0rKwT38xVqr7ZD0u0iPPkUL64lIZbqBAz+scqKmlzm8FDrypNC9Yjc8fPOLn9FX9KSYvKTr4rvx3iSIlTJabIQwj2ICCR/oLxBA==\"\n          },\n          \"FederatedUser\": {\n            \"Arn\": \"arn:aws:sts::123456789012:federated-user/Bob\",\n            \"FederatedUserId\": \"123456789012:Bob\"\n          },\n          \"PackedPolicySize\": 8\n        },\n        \"properties\": {\n          \"Credentials\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Credentials\" },\n              {\n                \"description\": \"\u003cp\u003eThe temporary security credentials, which include an access key ID, a secret access key, and a security (or session) token.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThe size of the security token that STS API operations return is not fixed. We strongly recommend that you make no assumptions about the maximum size.\u003c/p\u003e \u003c/note\u003e\"\n              }\n            ]\n          },\n          \"FederatedUser\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/FederatedUser\" },\n              {\n                \"description\": \"Identifiers for the federated user associated with the credentials (such as \u003ccode\u003earn:aws:sts::123456789012:federated-user/Bob\u003c/code\u003e or \u003ccode\u003e123456789012:Bob\u003c/code\u003e). You can use the federated user's ARN in your resource-based policies, such as an Amazon S3 bucket policy. \"\n              }\n            ]\n          },\n          \"PackedPolicySize\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/nonNegativeIntegerType\" },\n              {\n                \"description\": \"A percentage value that indicates the packed size of the session policies and session tags combined passed in the request. The request fails if the packed size is greater than 100 percent, which means the policies and tags exceeded the allowed space.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"Contains the response to a successful \u003ca\u003eGetFederationToken\u003c/a\u003e request, including temporary AWS credentials that can be used to make AWS requests. \"\n      },\n      \"GetSessionTokenResponse\": {\n        \"type\": \"object\",\n        \"example\": {\n          \"Credentials\": {\n            \"AccessKeyId\": \"AKIAIOSFODNN7EXAMPLE\",\n            \"Expiration\": \"2011-07-11T19:55:29.611Z\",\n            \"SecretAccessKey\": \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYzEXAMPLEKEY\",\n            \"SessionToken\": \"AQoEXAMPLEH4aoAH0gNCAPyJxz4BlCFFxWNE1OPTgk5TthT+FvwqnKwRcOIfrRh3c/LTo6UDdyJwOOvEVPvLXCrrrUtdnniCEXAMPLE/IvU1dYUg2RVAJBanLiHb4IgRmpRV3zrkuWJOgQs8IZZaIv2BXIa2R4OlgkBN9bkUDNCJiBeb/AXlzBBko7b15fjrBs2+cTQtpZ3CYWFXG8C5zqx37wnOE49mRl/+OtkIKGO7fAE\"\n          }\n        },\n        \"properties\": {\n          \"Credentials\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/Credentials\" },\n              {\n                \"description\": \"\u003cp\u003eThe temporary security credentials, which include an access key ID, a secret access key, and a security (or session) token.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThe size of the security token that STS API operations return is not fixed. We strongly recommend that you make no assumptions about the maximum size.\u003c/p\u003e \u003c/note\u003e\"\n              }\n            ]\n          }\n        },\n        \"description\": \"Contains the response to a successful \u003ca\u003eGetSessionToken\u003c/a\u003e request, including temporary AWS credentials that can be used to make AWS requests. \"\n      },\n      \"arnType\": {\n        \"type\": \"string\",\n        \"pattern\": \"[\\\\u0009\\\\u000A\\\\u000D\\\\u0020-\\\\u007E\\\\u0085\\\\u00A0-\\\\uD7FF\\\\uE000-\\\\uFFFD\\\\u10000-\\\\u10FFFF]+\",\n        \"minLength\": 20,\n        \"maxLength\": 2048\n      },\n      \"roleSessionNameType\": {\n        \"type\": \"string\",\n        \"pattern\": \"[\\\\w+=,.@-]*\",\n        \"minLength\": 2,\n        \"maxLength\": 64\n      },\n      \"policyDescriptorListType\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/PolicyDescriptorType\" }\n      },\n      \"sessionPolicyDocumentType\": {\n        \"type\": \"string\",\n        \"pattern\": \"[\\\\u0009\\\\u000A\\\\u000D\\\\u0020-\\\\u00FF]+\",\n        \"minLength\": 1,\n        \"maxLength\": 2048\n      },\n      \"roleDurationSecondsType\": {\n        \"type\": \"integer\",\n        \"minimum\": 900,\n        \"maximum\": 43200\n      },\n      \"tagListType\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/Tag\" },\n        \"maxItems\": 50\n      },\n      \"tagKeyListType\": {\n        \"type\": \"array\",\n        \"items\": { \"$ref\": \"#/components/schemas/tagKeyType\" },\n        \"maxItems\": 50\n      },\n      \"externalIdType\": {\n        \"type\": \"string\",\n        \"pattern\": \"[\\\\w+=,.@:\\\\/-]*\",\n        \"minLength\": 2,\n        \"maxLength\": 1224\n      },\n      \"serialNumberType\": {\n        \"type\": \"string\",\n        \"pattern\": \"[\\\\w+=/:,.@-]*\",\n        \"minLength\": 9,\n        \"maxLength\": 256\n      },\n      \"tokenCodeType\": {\n        \"type\": \"string\",\n        \"pattern\": \"[\\\\d]*\",\n        \"minLength\": 6,\n        \"maxLength\": 6\n      },\n      \"AssumeRoleRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"RoleArn\", \"RoleSessionName\"],\n        \"title\": \"AssumeRoleRequest\",\n        \"properties\": {\n          \"RoleArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/arnType\" },\n              {\n                \"description\": \"The Amazon Resource Name (ARN) of the role to assume.\"\n              }\n            ]\n          },\n          \"RoleSessionName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/roleSessionNameType\" },\n              {\n                \"description\": \"\u003cp\u003eAn identifier for the assumed role session.\u003c/p\u003e \u003cp\u003eUse the role session name to uniquely identify a session when the same role is assumed by different principals or for different reasons. In cross-account scenarios, the role session name is visible to, and can be logged by the account that owns the role. The role session name is also used in the ARN of the assumed role principal. This means that subsequent cross-account API requests that use the temporary security credentials will expose the role session name to the external account in their AWS CloudTrail logs.\u003c/p\u003e \u003cp\u003eThe regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@-\u003c/p\u003e\"\n              }\n            ]\n          },\n          \"PolicyArns\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/policyDescriptorListType\" },\n              {\n                \"description\": \"\u003cp\u003eThe Amazon Resource Names (ARNs) of the IAM managed policies that you want to use as managed session policies. The policies must exist in the same account as the role.\u003c/p\u003e \u003cp\u003eThis parameter is optional. You can provide up to 10 managed policy ARNs. However, the plain text that you use for both inline and managed session policies can't exceed 2,048 characters. For more information about ARNs, see \u003ca href=\\\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\\\"\u003eAmazon Resource Names (ARNs) and AWS Service Namespaces\u003c/a\u003e in the AWS General Reference.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eAn AWS conversion compresses the passed session policies and session tags into a packed binary format that has a separate limit. Your request can fail for this limit even if your plain text meets the other requirements. The \u003ccode\u003ePackedPolicySize\u003c/code\u003e response element indicates by percentage how close the policies and tags for your request are to the upper size limit. \u003c/p\u003e \u003c/note\u003e \u003cp\u003ePassing policies to this operation returns new temporary credentials. The resulting session's permissions are the intersection of the role's identity-based policy and the session policies. You can use the role's temporary credentials in subsequent AWS API calls to access resources in the account that owns the role. You cannot use session policies to grant more permissions than those allowed by the identity-based policy of the role that is being assumed. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\\\"\u003eSession Policies\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e\"\n              }\n            ]\n          },\n          \"Policy\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/sessionPolicyDocumentType\" },\n              {\n                \"description\": \"\u003cp\u003eAn IAM policy in JSON format that you want to use as an inline session policy.\u003c/p\u003e \u003cp\u003eThis parameter is optional. Passing policies to this operation returns new temporary credentials. The resulting session's permissions are the intersection of the role's identity-based policy and the session policies. You can use the role's temporary credentials in subsequent AWS API calls to access resources in the account that owns the role. You cannot use session policies to grant more permissions than those allowed by the identity-based policy of the role that is being assumed. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\\\"\u003eSession Policies\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eThe plain text that you use for both inline and managed session policies can't exceed 2,048 characters. The JSON policy characters can be any ASCII character from the space character to the end of the valid character list (\\\\u0020 through \\\\u00FF). It can also include the tab (\\\\u0009), linefeed (\\\\u000A), and carriage return (\\\\u000D) characters.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eAn AWS conversion compresses the passed session policies and session tags into a packed binary format that has a separate limit. Your request can fail for this limit even if your plain text meets the other requirements. The \u003ccode\u003ePackedPolicySize\u003c/code\u003e response element indicates by percentage how close the policies and tags for your request are to the upper size limit. \u003c/p\u003e \u003c/note\u003e\"\n              }\n            ]\n          },\n          \"DurationSeconds\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/roleDurationSecondsType\" },\n              {\n                \"description\": \"\u003cp\u003eThe duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role. This setting can have a value from 1 hour to 12 hours. If you specify a value higher than this setting, the operation fails. For example, if you specify a session duration of 12 hours, but your administrator set the maximum session duration to 6 hours, your operation fails. To learn how to view the maximum value for your role, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html#id_roles_use_view-role-max-session\\\"\u003eView the Maximum Session Duration Setting for a Role\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eBy default, the value is set to \u003ccode\u003e3600\u003c/code\u003e seconds. \u003c/p\u003e \u003cnote\u003e \u003cp\u003eThe \u003ccode\u003eDurationSeconds\u003c/code\u003e parameter is separate from the duration of a console session that you might request using the returned credentials. The request to the federation endpoint for a console sign-in token takes a \u003ccode\u003eSessionDuration\u003c/code\u003e parameter that specifies the maximum length of the console session. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_enable-console-custom-url.html\\\"\u003eCreating a URL that Enables Federated Users to Access the AWS Management Console\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003c/note\u003e\"\n              }\n            ]\n          },\n          \"Tags\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/tagListType\" },\n              {\n                \"description\": \"\u003cp\u003eA list of session tags that you want to pass. Each session tag consists of a key name and an associated value. For more information about session tags, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html\\\"\u003eTagging AWS STS Sessions\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eThis parameter is optional. You can pass up to 50 session tags. The plain text session tag keys can’t exceed 128 characters, and the values can’t exceed 256 characters. For these and additional limits, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-limits.html#reference_iam-limits-entity-length\\\"\u003eIAM and STS Character Limits\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eAn AWS conversion compresses the passed session policies and session tags into a packed binary format that has a separate limit. Your request can fail for this limit even if your plain text meets the other requirements. The \u003ccode\u003ePackedPolicySize\u003c/code\u003e response element indicates by percentage how close the policies and tags for your request are to the upper size limit. \u003c/p\u003e \u003c/note\u003e \u003cp\u003eYou can pass a session tag with the same key as a tag that is already attached to the role. When you do, session tags override a role tag with the same key. \u003c/p\u003e \u003cp\u003eTag key–value pairs are not case sensitive, but case is preserved. This means that you cannot have separate \u003ccode\u003eDepartment\u003c/code\u003e and \u003ccode\u003edepartment\u003c/code\u003e tag keys. Assume that the role has the \u003ccode\u003eDepartment\u003c/code\u003e=\u003ccode\u003eMarketing\u003c/code\u003e tag and you pass the \u003ccode\u003edepartment\u003c/code\u003e=\u003ccode\u003eengineering\u003c/code\u003e session tag. \u003ccode\u003eDepartment\u003c/code\u003e and \u003ccode\u003edepartment\u003c/code\u003e are not saved as separate tags, and the session tag passed in the request takes precedence over the role tag.\u003c/p\u003e \u003cp\u003eAdditionally, if you used temporary credentials to perform this operation, the new session inherits any transitive session tags from the calling session. If you pass a session tag with the same key as an inherited tag, the operation fails. To view the inherited tags for a session, see the AWS CloudTrail logs. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/session-tags.html#id_session-tags_ctlogs\\\"\u003eViewing Session Tags in CloudTrail\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e\"\n              }\n            ]\n          },\n          \"TransitiveTagKeys\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/tagKeyListType\" },\n              {\n                \"description\": \"\u003cp\u003eA list of keys for session tags that you want to set as transitive. If you set a tag key as transitive, the corresponding key and value passes to subsequent sessions in a role chain. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html#id_session-tags_role-chaining\\\"\u003eChaining Roles with Session Tags\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eThis parameter is optional. When you set session tags as transitive, the session policy and session tags packed binary limit is not affected.\u003c/p\u003e \u003cp\u003eIf you choose not to specify a transitive tag key, then no tags are passed from this session to any subsequent sessions.\u003c/p\u003e\"\n              }\n            ]\n          },\n          \"ExternalId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/externalIdType\" },\n              {\n                \"description\": \"\u003cp\u003eA unique identifier that might be required when you assume a role in another account. If the administrator of the account to which the role belongs provided you with an external ID, then provide that value in the \u003ccode\u003eExternalId\u003c/code\u003e parameter. This value can be any string, such as a passphrase or account number. A cross-account role is usually set up to trust everyone in an account. Therefore, the administrator of the trusting account might send an external ID to the administrator of the trusted account. That way, only someone with the ID can assume the role, rather than everyone in the account. For more information about the external ID, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html\\\"\u003eHow to Use an External ID When Granting Access to Your AWS Resources to a Third Party\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eThe regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@:/-\u003c/p\u003e\"\n              }\n            ]\n          },\n          \"SerialNumber\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/serialNumberType\" },\n              {\n                \"description\": \"\u003cp\u003eThe identification number of the MFA device that is associated with the user who is making the \u003ccode\u003eAssumeRole\u003c/code\u003e call. Specify this value if the trust policy of the role being assumed includes a condition that requires MFA authentication. The value is either the serial number for a hardware device (such as \u003ccode\u003eGAHT12345678\u003c/code\u003e) or an Amazon Resource Name (ARN) for a virtual device (such as \u003ccode\u003earn:aws:iam::123456789012:mfa/user\u003c/code\u003e).\u003c/p\u003e \u003cp\u003eThe regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@-\u003c/p\u003e\"\n              }\n            ]\n          },\n          \"TokenCode\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/tokenCodeType\" },\n              {\n                \"description\": \"\u003cp\u003eThe value provided by the MFA device, if the trust policy of the role being assumed requires MFA (that is, if the policy includes a condition that tests for MFA). If the role being assumed requires MFA and if the \u003ccode\u003eTokenCode\u003c/code\u003e value is missing or expired, the \u003ccode\u003eAssumeRole\u003c/code\u003e call returns an \\\"access denied\\\" error.\u003c/p\u003e \u003cp\u003eThe format for this parameter, as described by its regex pattern, is a sequence of six numeric digits.\u003c/p\u003e\"\n              }\n            ]\n          },\n          \"SourceIdentity\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/sourceIdentityType\" },\n              {\n                \"description\": \"\u003cp\u003eThe source identity specified by the principal that is calling the \u003ccode\u003eAssumeRole\u003c/code\u003e operation.\u003c/p\u003e \u003cp\u003eYou can require users to specify a source identity when they assume a role. You do this by using the \u003ccode\u003ests:SourceIdentity\u003c/code\u003e condition key in a role trust policy. You can use source identity information in CloudTrail logs to determine who took actions with a role. You can use the \u003ccode\u003eaws:SourceIdentity\u003c/code\u003e condition key to further control access to Amazon Web Services resources based on the value of source identity. For more information about using source identity, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_monitor.html\\\"\u003eMonitor and control actions taken with assumed roles\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eThe regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@-. You cannot use a value that begins with the text \u003ccode\u003eaws:\u003c/code\u003e. This prefix is reserved for Amazon Web Services internal use.\u003c/p\u003e\"\n              }\n            ]\n          }\n        }\n      },\n      \"Credentials\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"AccessKeyId\",\n          \"SecretAccessKey\",\n          \"SessionToken\",\n          \"Expiration\"\n        ],\n        \"properties\": {\n          \"AccessKeyId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/accessKeyIdType\" },\n              {\n                \"description\": \"The access key ID that identifies the temporary security credentials.\"\n              }\n            ]\n          },\n          \"SecretAccessKey\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/accessKeySecretType\" },\n              {\n                \"description\": \"The secret access key that can be used to sign requests.\"\n              }\n            ]\n          },\n          \"SessionToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/tokenType\" },\n              {\n                \"description\": \"The token that users must pass to the service API to use the temporary credentials.\"\n              }\n            ]\n          },\n          \"Expiration\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/dateType\" },\n              {\n                \"description\": \"The date on which the current credentials expire.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"AWS credentials for API authentication.\"\n      },\n      \"AssumedRoleUser\": {\n        \"type\": \"object\",\n        \"required\": [\"AssumedRoleId\", \"Arn\"],\n        \"properties\": {\n          \"AssumedRoleId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/assumedRoleIdType\" },\n              {\n                \"description\": \"A unique identifier that contains the role ID and the role session name of the role that is being assumed. The role ID is generated by AWS when the role is created.\"\n              }\n            ]\n          },\n          \"Arn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/arnType\" },\n              {\n                \"description\": \"The ARN of the temporary security credentials that are returned from the \u003ca\u003eAssumeRole\u003c/a\u003e action. For more information about ARNs and how to use them in policies, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html\\\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\"\n              }\n            ]\n          }\n        },\n        \"description\": \"The identifiers for the temporary security credentials that the operation returns.\"\n      },\n      \"nonNegativeIntegerType\": { \"type\": \"integer\", \"minimum\": 0 },\n      \"SAMLAssertionType\": {\n        \"type\": \"string\",\n        \"minLength\": 4,\n        \"maxLength\": 100000,\n        \"format\": \"password\"\n      },\n      \"AssumeRoleWithSAMLRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"RoleArn\", \"PrincipalArn\", \"SAMLAssertion\"],\n        \"title\": \"AssumeRoleWithSAMLRequest\",\n        \"properties\": {\n          \"RoleArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/arnType\" },\n              {\n                \"description\": \"The Amazon Resource Name (ARN) of the role that the caller is assuming.\"\n              }\n            ]\n          },\n          \"PrincipalArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/arnType\" },\n              {\n                \"description\": \"The Amazon Resource Name (ARN) of the SAML provider in IAM that describes the IdP.\"\n              }\n            ]\n          },\n          \"SAMLAssertion\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/SAMLAssertionType\" },\n              {\n                \"description\": \"\u003cp\u003eThe base-64 encoded SAML authentication response provided by the IdP.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/create-role-saml-IdP-tasks.html\\\"\u003eConfiguring a Relying Party and Adding Claims\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e. \u003c/p\u003e\"\n              }\n            ]\n          },\n          \"PolicyArns\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/policyDescriptorListType\" },\n              {\n                \"description\": \"\u003cp\u003eThe Amazon Resource Names (ARNs) of the IAM managed policies that you want to use as managed session policies. The policies must exist in the same account as the role.\u003c/p\u003e \u003cp\u003eThis parameter is optional. You can provide up to 10 managed policy ARNs. However, the plain text that you use for both inline and managed session policies can't exceed 2,048 characters. For more information about ARNs, see \u003ca href=\\\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\\\"\u003eAmazon Resource Names (ARNs) and AWS Service Namespaces\u003c/a\u003e in the AWS General Reference.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eAn AWS conversion compresses the passed session policies and session tags into a packed binary format that has a separate limit. Your request can fail for this limit even if your plain text meets the other requirements. The \u003ccode\u003ePackedPolicySize\u003c/code\u003e response element indicates by percentage how close the policies and tags for your request are to the upper size limit. \u003c/p\u003e \u003c/note\u003e \u003cp\u003ePassing policies to this operation returns new temporary credentials. The resulting session's permissions are the intersection of the role's identity-based policy and the session policies. You can use the role's temporary credentials in subsequent AWS API calls to access resources in the account that owns the role. You cannot use session policies to grant more permissions than those allowed by the identity-based policy of the role that is being assumed. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\\\"\u003eSession Policies\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e\"\n              }\n            ]\n          },\n          \"Policy\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/sessionPolicyDocumentType\" },\n              {\n                \"description\": \"\u003cp\u003eAn IAM policy in JSON format that you want to use as an inline session policy.\u003c/p\u003e \u003cp\u003eThis parameter is optional. Passing policies to this operation returns new temporary credentials. The resulting session's permissions are the intersection of the role's identity-based policy and the session policies. You can use the role's temporary credentials in subsequent AWS API calls to access resources in the account that owns the role. You cannot use session policies to grant more permissions than those allowed by the identity-based policy of the role that is being assumed. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\\\"\u003eSession Policies\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e. \u003c/p\u003e \u003cp\u003eThe plain text that you use for both inline and managed session policies can't exceed 2,048 characters. The JSON policy characters can be any ASCII character from the space character to the end of the valid character list (\\\\u0020 through \\\\u00FF). It can also include the tab (\\\\u0009), linefeed (\\\\u000A), and carriage return (\\\\u000D) characters.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eAn AWS conversion compresses the passed session policies and session tags into a packed binary format that has a separate limit. Your request can fail for this limit even if your plain text meets the other requirements. The \u003ccode\u003ePackedPolicySize\u003c/code\u003e response element indicates by percentage how close the policies and tags for your request are to the upper size limit. \u003c/p\u003e \u003c/note\u003e\"\n              }\n            ]\n          },\n          \"DurationSeconds\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/roleDurationSecondsType\" },\n              {\n                \"description\": \"\u003cp\u003eThe duration, in seconds, of the role session. Your role session lasts for the duration that you specify for the \u003ccode\u003eDurationSeconds\u003c/code\u003e parameter, or until the time specified in the SAML authentication response's \u003ccode\u003eSessionNotOnOrAfter\u003c/code\u003e value, whichever is shorter. You can provide a \u003ccode\u003eDurationSeconds\u003c/code\u003e value from 900 seconds (15 minutes) up to the maximum session duration setting for the role. This setting can have a value from 1 hour to 12 hours. If you specify a value higher than this setting, the operation fails. For example, if you specify a session duration of 12 hours, but your administrator set the maximum session duration to 6 hours, your operation fails. To learn how to view the maximum value for your role, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html#id_roles_use_view-role-max-session\\\"\u003eView the Maximum Session Duration Setting for a Role\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eBy default, the value is set to \u003ccode\u003e3600\u003c/code\u003e seconds. \u003c/p\u003e \u003cnote\u003e \u003cp\u003eThe \u003ccode\u003eDurationSeconds\u003c/code\u003e parameter is separate from the duration of a console session that you might request using the returned credentials. The request to the federation endpoint for a console sign-in token takes a \u003ccode\u003eSessionDuration\u003c/code\u003e parameter that specifies the maximum length of the console session. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_enable-console-custom-url.html\\\"\u003eCreating a URL that Enables Federated Users to Access the AWS Management Console\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003c/note\u003e\"\n              }\n            ]\n          }\n        }\n      },\n      \"Subject\": { \"type\": \"string\" },\n      \"SubjectType\": { \"type\": \"string\" },\n      \"Issuer\": { \"type\": \"string\" },\n      \"Audience\": { \"type\": \"string\" },\n      \"NameQualifier\": { \"type\": \"string\" },\n      \"clientTokenType\": {\n        \"type\": \"string\",\n        \"minLength\": 4,\n        \"maxLength\": 2048,\n        \"format\": \"password\"\n      },\n      \"urlType\": { \"type\": \"string\", \"minLength\": 4, \"maxLength\": 2048 },\n      \"AssumeRoleWithWebIdentityRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"RoleArn\", \"RoleSessionName\", \"WebIdentityToken\"],\n        \"title\": \"AssumeRoleWithWebIdentityRequest\",\n        \"properties\": {\n          \"RoleArn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/arnType\" },\n              {\n                \"description\": \"The Amazon Resource Name (ARN) of the role that the caller is assuming.\"\n              }\n            ]\n          },\n          \"RoleSessionName\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/roleSessionNameType\" },\n              {\n                \"description\": \"\u003cp\u003eAn identifier for the assumed role session. Typically, you pass the name or identifier that is associated with the user who is using your application. That way, the temporary security credentials that your application will use are associated with that user. This session name is included as part of the ARN and assumed role ID in the \u003ccode\u003eAssumedRoleUser\u003c/code\u003e response element.\u003c/p\u003e \u003cp\u003eThe regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@-\u003c/p\u003e\"\n              }\n            ]\n          },\n          \"WebIdentityToken\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/clientTokenType\" },\n              {\n                \"description\": \"The OAuth 2.0 access token or OpenID Connect ID token that is provided by the identity provider. Your application must get this token by authenticating the user who is using your application with a web identity provider before the application makes an \u003ccode\u003eAssumeRoleWithWebIdentity\u003c/code\u003e call. \"\n              }\n            ]\n          },\n          \"ProviderId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/urlType\" },\n              {\n                \"description\": \"\u003cp\u003eThe fully qualified host component of the domain name of the identity provider.\u003c/p\u003e \u003cp\u003eSpecify this value only for OAuth 2.0 access tokens. Currently \u003ccode\u003ewww.amazon.com\u003c/code\u003e and \u003ccode\u003egraph.facebook.com\u003c/code\u003e are the only supported identity providers for OAuth 2.0 access tokens. Do not include URL schemes and port numbers.\u003c/p\u003e \u003cp\u003eDo not specify this value for OpenID Connect ID tokens.\u003c/p\u003e\"\n              }\n            ]\n          },\n          \"PolicyArns\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/policyDescriptorListType\" },\n              {\n                \"description\": \"\u003cp\u003eThe Amazon Resource Names (ARNs) of the IAM managed policies that you want to use as managed session policies. The policies must exist in the same account as the role.\u003c/p\u003e \u003cp\u003eThis parameter is optional. You can provide up to 10 managed policy ARNs. However, the plain text that you use for both inline and managed session policies can't exceed 2,048 characters. For more information about ARNs, see \u003ca href=\\\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\\\"\u003eAmazon Resource Names (ARNs) and AWS Service Namespaces\u003c/a\u003e in the AWS General Reference.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eAn AWS conversion compresses the passed session policies and session tags into a packed binary format that has a separate limit. Your request can fail for this limit even if your plain text meets the other requirements. The \u003ccode\u003ePackedPolicySize\u003c/code\u003e response element indicates by percentage how close the policies and tags for your request are to the upper size limit. \u003c/p\u003e \u003c/note\u003e \u003cp\u003ePassing policies to this operation returns new temporary credentials. The resulting session's permissions are the intersection of the role's identity-based policy and the session policies. You can use the role's temporary credentials in subsequent AWS API calls to access resources in the account that owns the role. You cannot use session policies to grant more permissions than those allowed by the identity-based policy of the role that is being assumed. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\\\"\u003eSession Policies\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e\"\n              }\n            ]\n          },\n          \"Policy\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/sessionPolicyDocumentType\" },\n              {\n                \"description\": \"\u003cp\u003eAn IAM policy in JSON format that you want to use as an inline session policy.\u003c/p\u003e \u003cp\u003eThis parameter is optional. Passing policies to this operation returns new temporary credentials. The resulting session's permissions are the intersection of the role's identity-based policy and the session policies. You can use the role's temporary credentials in subsequent AWS API calls to access resources in the account that owns the role. You cannot use session policies to grant more permissions than those allowed by the identity-based policy of the role that is being assumed. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\\\"\u003eSession Policies\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eThe plain text that you use for both inline and managed session policies can't exceed 2,048 characters. The JSON policy characters can be any ASCII character from the space character to the end of the valid character list (\\\\u0020 through \\\\u00FF). It can also include the tab (\\\\u0009), linefeed (\\\\u000A), and carriage return (\\\\u000D) characters.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eAn AWS conversion compresses the passed session policies and session tags into a packed binary format that has a separate limit. Your request can fail for this limit even if your plain text meets the other requirements. The \u003ccode\u003ePackedPolicySize\u003c/code\u003e response element indicates by percentage how close the policies and tags for your request are to the upper size limit. \u003c/p\u003e \u003c/note\u003e\"\n              }\n            ]\n          },\n          \"DurationSeconds\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/roleDurationSecondsType\" },\n              {\n                \"description\": \"\u003cp\u003eThe duration, in seconds, of the role session. The value can range from 900 seconds (15 minutes) up to the maximum session duration setting for the role. This setting can have a value from 1 hour to 12 hours. If you specify a value higher than this setting, the operation fails. For example, if you specify a session duration of 12 hours, but your administrator set the maximum session duration to 6 hours, your operation fails. To learn how to view the maximum value for your role, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html#id_roles_use_view-role-max-session\\\"\u003eView the Maximum Session Duration Setting for a Role\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eBy default, the value is set to \u003ccode\u003e3600\u003c/code\u003e seconds. \u003c/p\u003e \u003cnote\u003e \u003cp\u003eThe \u003ccode\u003eDurationSeconds\u003c/code\u003e parameter is separate from the duration of a console session that you might request using the returned credentials. The request to the federation endpoint for a console sign-in token takes a \u003ccode\u003eSessionDuration\u003c/code\u003e parameter that specifies the maximum length of the console session. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_enable-console-custom-url.html\\\"\u003eCreating a URL that Enables Federated Users to Access the AWS Management Console\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003c/note\u003e\"\n              }\n            ]\n          }\n        }\n      },\n      \"webIdentitySubjectType\": {\n        \"type\": \"string\",\n        \"minLength\": 6,\n        \"maxLength\": 255\n      },\n      \"assumedRoleIdType\": {\n        \"type\": \"string\",\n        \"pattern\": \"[\\\\w+=,.@:-]*\",\n        \"minLength\": 2,\n        \"maxLength\": 193\n      },\n      \"accessKeyIdType\": {\n        \"type\": \"string\",\n        \"pattern\": \"[\\\\w]*\",\n        \"minLength\": 16,\n        \"maxLength\": 128\n      },\n      \"accessKeySecretType\": { \"type\": \"string\" },\n      \"tokenType\": { \"type\": \"string\" },\n      \"dateType\": { \"type\": \"string\", \"format\": \"date-time\" },\n      \"encodedMessageType\": {\n        \"type\": \"string\",\n        \"minLength\": 1,\n        \"maxLength\": 10240\n      },\n      \"DecodeAuthorizationMessageRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"EncodedMessage\"],\n        \"title\": \"DecodeAuthorizationMessageRequest\",\n        \"properties\": {\n          \"EncodedMessage\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/encodedMessageType\" },\n              {\n                \"description\": \"The encoded message that was returned with the response.\"\n              }\n            ]\n          }\n        }\n      },\n      \"decodedMessageType\": { \"type\": \"string\" },\n      \"federatedIdType\": {\n        \"type\": \"string\",\n        \"pattern\": \"[\\\\w+=,.@\\\\:-]*\",\n        \"minLength\": 2,\n        \"maxLength\": 193\n      },\n      \"FederatedUser\": {\n        \"type\": \"object\",\n        \"required\": [\"FederatedUserId\", \"Arn\"],\n        \"properties\": {\n          \"FederatedUserId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/federatedIdType\" },\n              {\n                \"description\": \"The string that identifies the federated user associated with the credentials, similar to the unique ID of an IAM user.\"\n              }\n            ]\n          },\n          \"Arn\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/arnType\" },\n              {\n                \"description\": \"The ARN that specifies the federated user that is associated with the credentials. For more information about ARNs and how to use them in policies, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html\\\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e. \"\n              }\n            ]\n          }\n        },\n        \"description\": \"Identifiers for the federated user that is associated with the credentials.\"\n      },\n      \"GetAccessKeyInfoRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"AccessKeyId\"],\n        \"title\": \"GetAccessKeyInfoRequest\",\n        \"properties\": {\n          \"AccessKeyId\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/accessKeyIdType\" },\n              {\n                \"description\": \"\u003cp\u003eThe identifier of an access key.\u003c/p\u003e \u003cp\u003eThis parameter allows (through its regex pattern) a string of characters that can consist of any upper- or lowercase letter or digit.\u003c/p\u003e\"\n              }\n            ]\n          }\n        }\n      },\n      \"accountType\": { \"type\": \"string\" },\n      \"GetCallerIdentityRequest\": {\n        \"type\": \"object\",\n        \"title\": \"GetCallerIdentityRequest\",\n        \"properties\": {}\n      },\n      \"userIdType\": { \"type\": \"string\" },\n      \"userNameType\": {\n        \"type\": \"string\",\n        \"pattern\": \"[\\\\w+=,.@-]*\",\n        \"minLength\": 2,\n        \"maxLength\": 32\n      },\n      \"durationSecondsType\": {\n        \"type\": \"integer\",\n        \"minimum\": 900,\n        \"maximum\": 129600\n      },\n      \"GetFederationTokenRequest\": {\n        \"type\": \"object\",\n        \"required\": [\"Name\"],\n        \"title\": \"GetFederationTokenRequest\",\n        \"properties\": {\n          \"Name\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/userNameType\" },\n              {\n                \"description\": \"\u003cp\u003eThe name of the federated user. The name is used as an identifier for the temporary security credentials (such as \u003ccode\u003eBob\u003c/code\u003e). For example, you can reference the federated user name in a resource-based policy, such as in an Amazon S3 bucket policy.\u003c/p\u003e \u003cp\u003eThe regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@-\u003c/p\u003e\"\n              }\n            ]\n          },\n          \"Policy\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/sessionPolicyDocumentType\" },\n              {\n                \"description\": \"\u003cp\u003eAn IAM policy in JSON format that you want to use as an inline session policy.\u003c/p\u003e \u003cp\u003eYou must pass an inline or managed \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\\\"\u003esession policy\u003c/a\u003e to this operation. You can pass a single JSON policy document to use as an inline session policy. You can also specify up to 10 managed policies to use as managed session policies.\u003c/p\u003e \u003cp\u003eThis parameter is optional. However, if you do not pass any session policies, then the resulting federated user session has no permissions.\u003c/p\u003e \u003cp\u003eWhen you pass session policies, the session permissions are the intersection of the IAM user policies and the session policies that you pass. This gives you a way to further restrict the permissions for a federated user. You cannot use session policies to grant more permissions than those that are defined in the permissions policy of the IAM user. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\\\"\u003eSession Policies\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eThe resulting credentials can be used to access a resource that has a resource-based policy. If that policy specifically references the federated user session in the \u003ccode\u003ePrincipal\u003c/code\u003e element of the policy, the session has the permissions allowed by the policy. These permissions are granted in addition to the permissions that are granted by the session policies.\u003c/p\u003e \u003cp\u003eThe plain text that you use for both inline and managed session policies can't exceed 2,048 characters. The JSON policy characters can be any ASCII character from the space character to the end of the valid character list (\\\\u0020 through \\\\u00FF). It can also include the tab (\\\\u0009), linefeed (\\\\u000A), and carriage return (\\\\u000D) characters.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eAn AWS conversion compresses the passed session policies and session tags into a packed binary format that has a separate limit. Your request can fail for this limit even if your plain text meets the other requirements. The \u003ccode\u003ePackedPolicySize\u003c/code\u003e response element indicates by percentage how close the policies and tags for your request are to the upper size limit. \u003c/p\u003e \u003c/note\u003e\"\n              }\n            ]\n          },\n          \"PolicyArns\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/policyDescriptorListType\" },\n              {\n                \"description\": \"\u003cp\u003eThe Amazon Resource Names (ARNs) of the IAM managed policies that you want to use as a managed session policy. The policies must exist in the same account as the IAM user that is requesting federated access.\u003c/p\u003e \u003cp\u003eYou must pass an inline or managed \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\\\"\u003esession policy\u003c/a\u003e to this operation. You can pass a single JSON policy document to use as an inline session policy. You can also specify up to 10 managed policies to use as managed session policies. The plain text that you use for both inline and managed session policies can't exceed 2,048 characters. You can provide up to 10 managed policy ARNs. For more information about ARNs, see \u003ca href=\\\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\\\"\u003eAmazon Resource Names (ARNs) and AWS Service Namespaces\u003c/a\u003e in the AWS General Reference.\u003c/p\u003e \u003cp\u003eThis parameter is optional. However, if you do not pass any session policies, then the resulting federated user session has no permissions.\u003c/p\u003e \u003cp\u003eWhen you pass session policies, the session permissions are the intersection of the IAM user policies and the session policies that you pass. This gives you a way to further restrict the permissions for a federated user. You cannot use session policies to grant more permissions than those that are defined in the permissions policy of the IAM user. For more information, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\\\"\u003eSession Policies\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eThe resulting credentials can be used to access a resource that has a resource-based policy. If that policy specifically references the federated user session in the \u003ccode\u003ePrincipal\u003c/code\u003e element of the policy, the session has the permissions allowed by the policy. These permissions are granted in addition to the permissions that are granted by the session policies.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eAn AWS conversion compresses the passed session policies and session tags into a packed binary format that has a separate limit. Your request can fail for this limit even if your plain text meets the other requirements. The \u003ccode\u003ePackedPolicySize\u003c/code\u003e response element indicates by percentage how close the policies and tags for your request are to the upper size limit. \u003c/p\u003e \u003c/note\u003e\"\n              }\n            ]\n          },\n          \"DurationSeconds\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/durationSecondsType\" },\n              {\n                \"description\": \"The duration, in seconds, that the session should last. Acceptable durations for federation sessions range from 900 seconds (15 minutes) to 129,600 seconds (36 hours), with 43,200 seconds (12 hours) as the default. Sessions obtained using AWS account root user credentials are restricted to a maximum of 3,600 seconds (one hour). If the specified duration is longer than one hour, the session obtained by using root user credentials defaults to one hour.\"\n              }\n            ]\n          },\n          \"Tags\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/tagListType\" },\n              {\n                \"description\": \"\u003cp\u003eA list of session tags. Each session tag consists of a key name and an associated value. For more information about session tags, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html\\\"\u003ePassing Session Tags in STS\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eThis parameter is optional. You can pass up to 50 session tags. The plain text session tag keys can’t exceed 128 characters and the values can’t exceed 256 characters. For these and additional limits, see \u003ca href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-limits.html#reference_iam-limits-entity-length\\\"\u003eIAM and STS Character Limits\u003c/a\u003e in the \u003ci\u003eIAM User Guide\u003c/i\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eAn AWS conversion compresses the passed session policies and session tags into a packed binary format that has a separate limit. Your request can fail for this limit even if your plain text meets the other requirements. The \u003ccode\u003ePackedPolicySize\u003c/code\u003e response element indicates by percentage how close the policies and tags for your request are to the upper size limit. \u003c/p\u003e \u003c/note\u003e \u003cp\u003eYou can pass a session tag with the same key as a tag that is already attached to the user you are federating. When you do, session tags override a user tag with the same key. \u003c/p\u003e \u003cp\u003eTag key–value pairs are not case sensitive, but case is preserved. This means that you cannot have separate \u003ccode\u003eDepartment\u003c/code\u003e and \u003ccode\u003edepartment\u003c/code\u003e tag keys. Assume that the role has the \u003ccode\u003eDepartment\u003c/code\u003e=\u003ccode\u003eMarketing\u003c/code\u003e tag and you pass the \u003ccode\u003edepartment\u003c/code\u003e=\u003ccode\u003eengineering\u003c/code\u003e session tag. \u003ccode\u003eDepartment\u003c/code\u003e and \u003ccode\u003edepartment\u003c/code\u003e are not saved as separate tags, and the session tag passed in the request takes precedence over the role tag.\u003c/p\u003e\"\n              }\n            ]\n          }\n        }\n      },\n      \"GetSessionTokenRequest\": {\n        \"type\": \"object\",\n        \"title\": \"GetSessionTokenRequest\",\n        \"properties\": {\n          \"DurationSeconds\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/durationSecondsType\" },\n              {\n                \"description\": \"The duration, in seconds, that the credentials should remain valid. Acceptable durations for IAM user sessions range from 900 seconds (15 minutes) to 129,600 seconds (36 hours), with 43,200 seconds (12 hours) as the default. Sessions for AWS account owners are restricted to a maximum of 3,600 seconds (one hour). If the duration is longer than one hour, the session for AWS account owners defaults to one hour.\"\n              }\n            ]\n          },\n          \"SerialNumber\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/serialNumberType\" },\n              {\n                \"description\": \"\u003cp\u003eThe identification number of the MFA device that is associated with the IAM user who is making the \u003ccode\u003eGetSessionToken\u003c/code\u003e call. Specify this value if the IAM user has a policy that requires MFA authentication. The value is either the serial number for a hardware device (such as \u003ccode\u003eGAHT12345678\u003c/code\u003e) or an Amazon Resource Name (ARN) for a virtual device (such as \u003ccode\u003earn:aws:iam::123456789012:mfa/user\u003c/code\u003e). You can find the device for an IAM user by going to the AWS Management Console and viewing the user's security credentials. \u003c/p\u003e \u003cp\u003eThe regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@:/-\u003c/p\u003e\"\n              }\n            ]\n          },\n          \"TokenCode\": {\n            \"allOf\": [\n              { \"$ref\": \"#/components/schemas/tokenCodeType\" },\n              {\n                \"description\": \"\u003cp\u003eThe value provided by the MFA device, if MFA is required. If any policy requires the IAM user to submit an MFA code, specify this value. If MFA authentication is required, the user must provide a code when requesting a set of temporary security credentials. A user who fails to provide the code receives an \\\"access denied\\\" response when requesting resources that require MFA authentication.\u003c/p\u003e \u003cp\u003eThe format for this parameter, as described by its regex pattern, is a sequence of six numeric digits.\u003c/p\u003e\"\n              }\n            ]\n          }\n        }\n      },\n      \"tagValueType\": {\n        \"type\": \"string\",\n        \"pattern\": \"[\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-@]*\",\n        \"minLength\": 0,\n        \"maxLength\": 256\n      },\n      \"sourceIdentityType\": {\n        \"type\": \"string\",\n        \"pattern\": \"[\\\\w+=,.@-]*\",\n        \"minLength\": 2,\n        \"maxLength\": 64\n      }\n    }\n  },\n  \"security\": [{ \"hmac\": [] }],\n  \"x-metadata\": {\n    \"apiVersion\": \"2011-06-15\",\n    \"endpointPrefix\": \"sts\",\n    \"globalEndpoint\": \"sts.amazonaws.com\",\n    \"protocol\": \"query\",\n    \"serviceAbbreviation\": \"AWS STS\",\n    \"serviceFullName\": \"AWS Security Token Service\",\n    \"serviceId\": \"STS\",\n    \"signatureVersion\": \"v4\",\n    \"uid\": \"sts-2011-06-15\",\n    \"xmlNamespace\": \"https://sts.amazonaws.com/doc/2011-06-15/\",\n    \"targetPrefix\": \"AWSSecurityTokenServiceV20110615\"\n  }\n}\n",
			"canonicalURL": "/github.com/chainjet/platform@e2f11798433d537a6d63c18ac444f6b6e5360bb2/-/blob/schemas/openapi3/aws-sts-2011-06-15.json",
			"externalURLs": [
				{
					"url": "https://github.com/chainjet/platform/blob/e2f11798433d537a6d63c18ac444f6b6e5360bb2/schemas/openapi3/aws-sts-2011-06-15.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: at 183:5: duplicate path: \"/#Action=AssumeRoleWithSAML\""
}