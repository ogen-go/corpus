{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/apideck.lead/openapi.yaml",
			"byteSize": 44090,
			"content": "openapi: 3.0.3\ninfo:\n  x-ballerina-display:\n    label: Apideck Lead\n    iconPath: \"icon.png\"\n  version: 5.3.0\n  title: Lead API\n  description: \n    This is a generated connector from [Apideck Lead API v5.3.0](https://www.apideck.com/lead-api) OpenAPI specification.\n\n    You can use this API to access all Lead API endpoints.\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials.\n\n    Unify API accounts have sandbox mode and live mode API keys. To change modes just use the appropriate key to get a live or test object. \n\n    You can find your API keys on the unify settings of your Apideck app.Your Apideck application_id can also be found on the same page.\n\n    Obtain API keys following [this guide](https://developers.apideck.com/apis/lead/reference#section/Authorization).\n  contact:\n    email: hello@apideck.com\n    url: 'https://developers.apideck.com'\n  x-logo:\n    url: 'https://developers.apideck.com/icon.png'\n  x-apideck-api: lead\n  x-apideck-sdk-support: true\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\nexternalDocs:\n  description: Apideck Developer Docs\n  url: 'https://developers.apideck.com'\nservers:\n  - url: 'https://unify.apideck.com'\n    description: Production\nsecurity:\n  - apiKey: []\n    applicationId: []\n    consumerId: []\ntags:\n  - name: Leads\n    description: ''\n    x-apideck-model:\n      $ref: '#/components/schemas/Lead'\ncomponents:\n  schemas:\n    UnifiedId:\n      title: UnifiedId\n      required:\n        - id\n      properties:\n        id:\n          description: Unified ID\n          type: string\n          readOnly: true\n          example: '12345'\n    Lead:\n      required:\n        - name\n        - company_name\n      x-pii:\n        - name\n        - email\n        - first_name\n        - last_name\n      additionalProperties: false\n      properties:\n        id:\n          description: Lead ID\n          type: string\n          example: '12345'\n          readOnly: true\n        name:\n          description: Lead name\n          type: string\n          example: Elon Musk\n          minLength: 1\n        company_name:\n          description: Company name\n          type: string\n          example: Spacex\n          nullable: true\n        owner_id:\n          description: Owner ID\n          type: string\n          example: '54321'\n        company_id:\n          description: Company ID\n          type: string\n          example: '2'\n          nullable: true\n        contact_id:\n          description: Contact ID\n          type: string\n          example: '2'\n          nullable: true\n        lead_source:\n          description: Lead source\n          type: string\n          example: Cold Call\n          nullable: true\n        first_name:\n          description: First name\n          type: string\n          example: Elon\n          nullable: true\n        last_name:\n          description: Last name\n          type: string\n          example: Musk\n          nullable: true\n        description:\n          description: Lead description\n          type: string\n          example: A thinker\n          nullable: true\n        prefix:\n          description: Salutation\n          type: string\n          example: Sir\n          nullable: true\n        title:\n          description: Title\n          type: string\n          example: CEO\n          nullable: true\n        language:\n          type: string\n          example: EN\n          description: language code according to ISO 639-1. For the United States - EN\n          nullable: true\n        status:\n          description: Comapny status\n          type: string\n          example: New\n          nullable: true\n        monetary_amount:\n          description: Monetory amount\n          type: number\n          example: 75000\n          nullable: true\n        currency:\n          description: Currency\n          type: string\n          example: USD\n          nullable: true\n        fax:\n          description: Fax number\n          type: string\n          example: '+12129876543'\n          nullable: true\n        websites:\n          description: Company websites\n          type: array\n          items:\n            $ref: '#/components/schemas/Website'\n        addresses:\n          description: Company addresses\n          type: array\n          items:\n            $ref: '#/components/schemas/Address'\n        social_links:\n          description: Social links\n          type: array\n          items:\n            $ref: '#/components/schemas/SocialLink'\n        phone_numbers:\n          description: Phone numbers\n          type: array\n          items:\n            $ref: '#/components/schemas/PhoneNumber'\n        emails:\n          description: Emails\n          type: array\n          items:\n            $ref: '#/components/schemas/Email'\n        custom_fields:\n          description: Custom fields\n          type: array\n          items:\n            $ref: '#/components/schemas/CustomField'\n        tags:\n          $ref: '#/components/schemas/Tags'\n        updated_at:\n          description: Updated date\n          type: string\n          example: '2020-09-30T07:43:32.000Z'\n          readOnly: true\n        created_at:\n          description: Created date\n          type: string\n          example: '2020-09-30T07:43:32.000Z'\n          readOnly: true\n    BankAccount:\n      type: object\n      properties:\n        iban:\n          type: string\n          example: CH2989144532982975332\n          nullable: true\n        bic:\n          type: string\n          example: AUDSCHGGXXX\n          nullable: true\n        bsb_number:\n          type: string\n          title: BSB Number\n          description: A BSB is a 6 digit numeric code used for identifying the branch of an Australian or New Zealand bank or financial institution.\n          example: 062-001\n          nullable: true\n        bank_code:\n          type: string\n          title: Bank Code\n          description: 'A bank code is a code assigned by a central bank, a bank supervisory body or a Bankers Association in a country to all its licensed member banks or financial institutions.'\n          example: BNH\n          nullable: true\n        account_number:\n          type: string\n          title: Bank Account Number\n          description: 'A bank account number is a number that is tied to your bank account. If you have several bank accounts, such as personal, joint, business (and so on), each account will have a different account number.'\n          example: '123456789'\n          nullable: true\n        account_name:\n          type: string\n          title: Bank Account Name\n          description: The name which you used in opening your bank account.\n          example: SPACEX LLC\n          nullable: true\n    Website:\n      type: object\n      required:\n        - url\n      properties:\n        id:\n          description: ID\n          type: string\n          example: '12345'\n          nullable: true\n        url:\n          description: Website URL\n          type: string\n          example: 'http://example.com'\n          minLength: 1\n        type:\n          description: Type\n          type: string\n          x-graphql-type-name: WebsiteType\n          enum:\n            - primary\n            - secondary\n            - work\n            - personal\n            - other\n          example: primary\n    Address:\n      type: object\n      properties:\n        id:\n          description: ID\n          type: string\n          example: '123'\n          nullable: true\n        type:\n          description: Address type\n          type: string\n          x-graphql-type-name: AddressType\n          enum:\n            - primary\n            - secondary\n            - home\n            - office\n            - shipping\n            - billing\n            - other\n          example: primary\n        string:\n          type: string\n          description: The address string. Some APIs don't provide structured address data.\n          example: '25 Spring Street, Blackburn, VIC 3130'\n          nullable: true\n        name:\n          description: Name\n          type: string\n          example: HQ US\n          nullable: true\n        line1:\n          type: string\n          example: Main street\n          description: 'Line 1 of the address e.g. number, street, suite, apt #, etc.'\n          nullable: true\n        line2:\n          type: string\n          example: 'apt #'\n          description: Line 2 of the address\n          nullable: true\n        city:\n          type: string\n          example: San Francisco\n          description: Name of city.\n          nullable: true\n        state:\n          type: string\n          example: CA\n          description: Name of state\n          nullable: true\n        postal_code:\n          type: string\n          example: '94104'\n          description: Zip code or equivalent.\n          nullable: true\n        country:\n          type: string\n          example: US\n          description: country code according to ISO 3166-1 alpha-2.\n          nullable: true\n        latitude:\n          description: Latitude\n          type: string\n          example: '40.759211'\n          nullable: true\n        longitude:\n          description: Longitude\n          type: string\n          example: '-73.984638'\n          nullable: true\n    SocialLink:\n      required:\n        - url\n      type: object\n      properties:\n        id:\n          description: ID\n          type: string\n          example: '12345'\n          nullable: true\n        url:\n          description: Social link\n          type: string\n          example: 'https://www.twitter.com/apideck-io'\n          minLength: 1\n        type:\n          description: Type\n          type: string\n          example: twitter\n          nullable: true\n    PhoneNumber:\n      required:\n        - number\n      type: object\n      properties:\n        id:\n          description: ID\n          type: string\n          example: '12345'\n          nullable: true\n        number:\n          description: Phone number\n          type: string\n          example: 111-111-1111\n          minLength: 1\n        type:\n          description: Type\n          type: string\n          x-graphql-type-name: PhoneType\n          enum:\n            - primary\n            - secondary\n            - home\n            - office\n            - mobile\n            - assistant\n            - fax\n            - other\n          example: primary\n    Email:\n      required:\n        - email\n      type: object\n      properties:\n        id:\n          description: ID\n          type: string\n          example: '123'\n        email:\n          description: Email address\n          type: string\n          format: email\n          example: elon@musk.com\n          minLength: 1\n        type:\n          description: Email type\n          type: string\n          x-graphql-type-name: EmailType\n          enum:\n            - primary\n            - secondary\n            - work\n            - personal\n            - billing\n            - other\n          example: primary\n    CustomField:\n      type: object\n      required:\n        - id\n      additionalProperties: false\n      properties:\n        id:\n          description: ID\n          type: string\n          example: custom_technologies\n        value:\n          description: Custom value\n          anyOf:\n            - type: string\n              example: Uses Salesforce and Marketo\n              nullable: true\n            - type: number\n              example: 10\n              nullable: true\n            - type: boolean\n              example: true\n              nullable: true\n            - type: array\n              items:\n                type: string\n    Tags:\n      type: array\n      items:\n        type: string\n      example:\n        - New\n    Meta:\n      type: object\n      description: Reponse metadata\n      properties:\n        items_on_page:\n          type: integer\n          description: Number of items returned in the data property of the response\n          example: 50\n        cursors:\n          type: object\n          description: Cursors to navigate to previous or next pages through the API\n          properties:\n            previous:\n              type: string\n              description: Cursor to navigate to the previous page of results through the API\n              example: em9oby1jcm06OnBhZ2U6OjE=\n              nullable: true\n            current:\n              type: string\n              description: Cursor to navigate to the current page of results through the API\n              example: em9oby1jcm06OnBhZ2U6OjI=\n              nullable: true\n            next:\n              type: string\n              description: Cursor to navigate to the next page of results through the API\n              example: em9oby1jcm06OnBhZ2U6OjM=\n              nullable: true\n    Links:\n      type: object\n      description: Links to navigate to previous or next pages through the API\n      properties:\n        previous:\n          type: string\n          description: Link to navigate to the previous page through the API\n          example: 'https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D'\n          nullable: true\n        current:\n          type: string\n          description: Link to navigate to the current page through the API\n          example: 'https://unify.apideck.com/crm/companies'\n        next:\n          type: string\n          description: Link to navigate to the previous page through the API\n          example: 'https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM'\n          nullable: true\n    NotFoundResponse:\n      properties:\n        status_code:\n          type: number\n          description: HTTP status code\n          example: 404\n        error:\n          type: string\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Not Found\n        type_name:\n          type: string\n          description: The type of error returned\n          example: EntityNotFoundError\n        message:\n          type: string\n          description: A human-readable message providing more details about the error.\n          example: Unknown Widget\n        detail:\n          anyOf:\n            - type: string\n              example: \"Could not find widget with id: '123'\"\n            - type: object\n              example:\n                not_found:\n                  entity: widget\n                  id: '123'\n          description: Contains parameter or domain specific information related to the error and why it occured.\n        ref:\n          type: string\n          description: Link to documentation of error type\n          example: 'https://developers.apideck.com/errors#entitynotfounderror'\n    Unauthorized:\n      properties:\n        status_code:\n          type: number\n          description: HTTP status code\n          example: 401\n        error:\n          type: string\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Unauthorized\n        type_name:\n          type: string\n          description: The type of error returned\n          example: UnauthorizedError\n        message:\n          type: string\n          description: A human-readable message providing more details about the error.\n          example: Unauthorized Request\n        detail:\n          type: string\n          description: Contains parameter or domain specific information related to the error and why it occured.\n          example: Failed to generate valid JWT Session. Verify applicationId is correct\n        ref:\n          type: string\n          description: Link to documentation of error type\n          example: 'https://developers.apideck.com/errors#unauthorizederror'\n    Unprocessable:\n      properties:\n        status_code:\n          type: number\n          description: HTTP status code\n          example: 422\n        error:\n          type: string\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Unprocessable Entity\n        type_name:\n          type: string\n          description: The type of error returned\n          example: InvalidStateError\n        message:\n          type: string\n          description: A human-readable message providing more details about the error.\n          example: Invalid State\n        detail:\n          type: string\n          description: Contains parameter or domain specific information related to the error and why it occured.\n          example: State did not include unified_api\n        ref:\n          type: string\n          description: Link to documentation of error type\n          example: 'https://developers.apideck.com/errors#invalidstateerror'\n    BadRequest:\n      properties:\n        status_code:\n          type: number\n          description: HTTP status code\n          example: 400\n        error:\n          type: string\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Bad Request\n        type_name:\n          type: string\n          description: The type of error returned\n          example: RequestHeadersValidationError\n        message:\n          type: string\n          description: A human-readable message providing more details about the error.\n          example: Invalid Params\n        detail:\n          anyOf:\n            - type: string\n              example: Missing property foobar\n            - type: object\n              example:\n                missing:\n                  - foobar: required\n          description: Contains parameter or domain specific information related to the error and why it occured.\n        ref:\n          type: string\n          description: Link to documentation of error type\n          example: 'https://developers.apideck.com/errors#requestbodyvalidationerror'\n    PaymentRequired:\n      properties:\n        status_code:\n          type: number\n          description: HTTP status code\n          example: 402\n        error:\n          type: string\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Payment Required\n        type_name:\n          type: string\n          description: The type of error returned\n          example: RequestLimitError\n        message:\n          type: string\n          description: A human-readable message providing more details about the error.\n          example: Request Limit Reached\n        detail:\n          type: string\n          description: Contains parameter or domain specific information related to the error and why it occured.\n          example: You have reached your limit of 2000\n        ref:\n          type: string\n          description: Link to documentation of error type\n          example: 'https://developers.apideck.com/errors#requestlimiterror'\n    NotImplemented:\n      properties:\n        status_code:\n          type: number\n          description: HTTP status code\n          example: 501\n        error:\n          type: string\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Not Implemented\n        type_name:\n          type: string\n          description: The type of error returned\n          example: MappingError\n        message:\n          type: string\n          description: A human-readable message providing more details about the error.\n          example: Unmapped Attribute\n        detail:\n          anyOf:\n            - type: string\n              example: Failed to retrieve Widget tokenUrl from 'components.securitySchemes.oauth2.flows'\n            - type: object\n          description: Contains parameter or domain specific information related to the error and why it occured.\n        ref:\n          type: string\n          description: Link to documentation of error type\n          example: 'https://developers.apideck.com/errors#mappingerror'\n    UnexpectedError:\n      properties:\n        status_code:\n          type: number\n          description: HTTP status code\n          example: 400\n        error:\n          type: string\n          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)\n          example: Bad Request\n        type_name:\n          type: string\n          description: The type of error returned\n          example: RequestHeadersValidationError\n        message:\n          type: string\n          description: A human-readable message providing more details about the error.\n          example: Invalid Params\n        detail:\n          anyOf:\n            - type: string\n              example: 'Missing Header: x-apideck-consumer-id'\n            - type: object\n              example:\n                missing:\n                  - x-apideck-consumer-id: required\n          description: Contains parameter or domain specific information related to the error and why it occured.\n        ref:\n          type: string\n          description: Link to documentation of error type\n          example: 'https://developers.apideck.com/errors#unauthorizederror'\n  parameters:\n    id:\n      in: path\n      name: id\n      schema:\n        type: string\n      required: true\n      description: ID of the record you are acting upon.\n    x-apideck-app-id:\n      name: x-apideck-app-id\n      in: header\n      required: true\n      description: The ID of your Unify application\n      schema:\n        type: string\n    x-apideck-service-id:\n      name: x-apideck-service-id\n      in: header\n      description: 'Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.'\n      schema:\n        type: string\n    x-apideck-consumer-id:\n      name: x-apideck-consumer-id\n      in: header\n      required: true\n      description: ID of the consumer which you want to get or push data from\n      schema:\n        type: string\n    raw:\n      name: raw\n      in: query\n      description: Include raw response. Mostly used for debugging purposes\n      schema:\n        type: boolean\n        default: true\n    cursor:\n      name: cursor\n      in: query\n      description: Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.\n      schema:\n        type: string\n        nullable: true\n    limit:\n      name: limit\n      in: query\n      description: Number of records to return\n      schema:\n        type: integer\n        minimum: 1\n        maximum: 200\n        default: 20\n  responses:\n    GetLeads:\n      description: Leads\n      content:\n        application/json:\n          schema:\n            x-graphql-type-name: LeadList\n            type: object\n            required:\n              - status_code\n              - status\n              - service\n              - resource\n              - operation\n              - data\n            properties:\n              status_code:\n                type: integer\n                description: HTTP Response Status Code\n                example: 200\n              status:\n                type: string\n                description: HTTP Response Status\n                example: OK\n              service:\n                type: string\n                description: Apideck ID of service provider\n                example: zoho-crm\n              resource:\n                type: string\n                description: Unified API resource name\n                example: companies\n              operation:\n                type: string\n                description: Operation performed\n                example: one\n              data:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Lead'\n              meta:\n                $ref: '#/components/schemas/Meta'\n              links:\n                $ref: '#/components/schemas/Links'\n    GetLead:\n      description: Lead\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - status_code\n              - status\n              - service\n              - resource\n              - operation\n              - data\n            properties:\n              status_code:\n                type: integer\n                description: HTTP Response Status Code\n                example: 200\n              status:\n                type: string\n                description: HTTP Response Status\n                example: OK\n              service:\n                type: string\n                description: Apideck ID of service provider\n                example: zoho-crm\n              resource:\n                type: string\n                description: Unified API resource name\n                example: companies\n              operation:\n                type: string\n                description: Operation performed\n                example: one\n              data:\n                $ref: '#/components/schemas/Lead'\n    CreateLead:\n      description: Lead created\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - status_code\n              - status\n              - service\n              - resource\n              - operation\n              - data\n            properties:\n              status_code:\n                type: integer\n                description: HTTP Response Status Code\n                example: 200\n              status:\n                type: string\n                description: HTTP Response Status\n                example: OK\n              service:\n                type: string\n                description: Apideck ID of service provider\n                example: zoho-crm\n              resource:\n                type: string\n                description: Unified API resource name\n                example: companies\n              operation:\n                type: string\n                description: Operation performed\n                example: one\n              data:\n                $ref: '#/components/schemas/UnifiedId'\n    UpdateLead:\n      description: Lead updated\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - status_code\n              - status\n              - service\n              - resource\n              - operation\n              - data\n            properties:\n              status_code:\n                type: integer\n                description: HTTP Response Status Code\n                example: 200\n              status:\n                type: string\n                description: HTTP Response Status\n                example: OK\n              service:\n                type: string\n                description: Apideck ID of service provider\n                example: zoho-crm\n              resource:\n                type: string\n                description: Unified API resource name\n                example: companies\n              operation:\n                type: string\n                description: Operation performed\n                example: one\n              data:\n                $ref: '#/components/schemas/UnifiedId'\n    DeleteLead:\n      description: Lead deleted\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - status_code\n              - status\n              - service\n              - resource\n              - operation\n              - data\n            properties:\n              status_code:\n                type: integer\n                description: HTTP Response Status Code\n                example: 200\n              status:\n                type: string\n                description: HTTP Response Status\n                example: OK\n              service:\n                type: string\n                description: Apideck ID of service provider\n                example: zoho-crm\n              resource:\n                type: string\n                description: Unified API resource name\n                example: companies\n              operation:\n                type: string\n                description: Operation performed\n                example: one\n              data:\n                $ref: '#/components/schemas/UnifiedId'\n    NotFound:\n      description: The specified resource was not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/NotFoundResponse'\n    Unauthorized:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Unauthorized'\n    Unprocessable:\n      description: Unprocessable\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Unprocessable'\n    BadRequest:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/BadRequest'\n    PaymentRequired:\n      description: Payment Required\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/PaymentRequired'\n    NotImplemented:\n      description: Not Implemented\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/NotImplemented'\n    UnexpectedError:\n      description: Unexpected error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UnexpectedError'\n  securitySchemes:\n    apiKey:\n      type: apiKey\n      in: header\n      name: Authorization\n      x-ballerina-apikey-description: \"Provide your API key as `Authorization`. Eg: `{\\\"Authorization\\\" : \\\"\u003cAPI key\u003e\\\"}`\"\n      description: |\n        To use API you have to sign up and get your own API key. Unify API accounts have sandbox mode and live mode API keys. \n        To change modes just use the appropriate key to get a live or test object. You can find your API keys on the unify settings of your Apideck app.\n        Your Apideck application_id can also be found on the same page.\n\n        Authenticate your API requests by including your test or live secret API key in the request header. \n\n        - Bearer authorization header: `Authorization: Bearer \u003cyour-apideck-api-key\u003e`\n        - Application id header: `x-apideck-app-id: \u003cyour-apideck-app-id\u003e`\n\n        You should use the public keys on the SDKs and the secret keys to authenticate API requests.\n\n        **Do not share or include your secret API keys on client side code.** Your API keys carry significant privileges. Please ensure to keep them 100% secure and be sure to not share your secret API keys in areas that are publicly accessible like GitHub.\n\n        Learn how to set the Authorization header inside Postman https://learning.postman.com/docs/postman/sending-api-requests/authorization/#api-key\n\n        Go to Unify to grab your API KEY https://app.apideck.com/unify/api-keys\n    # applicationId:\n    #   type: apiKey\n    #   in: header\n    #   name: x-apideck-app-id\n    #   description: The ID of your Unify application\n    # consumerId:\n    #   type: apiKey\n    #   in: header\n    #   name: x-apideck-consumer-id\n    #   description: The ID of the consumer which you want to get or push data from\npaths:\n  /lead/leads:\n    get:\n      tags:\n        - Leads\n      operationId: leadsAll\n      x-graphql-field-name: leads\n      summary: List leads\n      description: List leads\n      parameters:\n        - $ref: '#/components/parameters/raw'\n        - $ref: '#/components/parameters/x-apideck-consumer-id'\n        - $ref: '#/components/parameters/x-apideck-app-id'\n        - $ref: '#/components/parameters/x-apideck-service-id'\n        - $ref: '#/components/parameters/cursor'\n        - $ref: '#/components/parameters/limit'\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          $ref: '#/components/responses/GetLeads'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      x-apideck-api: lead\n      x-codeSamples:\n        - lang: TypeScript\n          label: Node\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.lead.leadsAll({})\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n    post:\n      tags:\n        - Leads\n      operationId: leadsAdd\n      summary: Create lead\n      description: Create lead\n      parameters:\n        - $ref: '#/components/parameters/raw'\n        - $ref: '#/components/parameters/x-apideck-consumer-id'\n        - $ref: '#/components/parameters/x-apideck-app-id'\n        - $ref: '#/components/parameters/x-apideck-service-id'\n      security:\n        - apiKey: []\n      requestBody:\n        description: Lead information\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Lead'\n      responses:\n        '201':\n          $ref: '#/components/responses/CreateLead'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      x-apideck-api: lead\n      x-codeSamples:\n        - lang: TypeScript\n          label: Node\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              lead: {\n                name: 'Elon Musk',\n                company_name: 'Spacex',\n                owner_id: '54321',\n                company_id: '2',\n                contact_id: '2',\n                lead_source: 'Cold Call',\n                first_name: 'Elon',\n                last_name: 'Musk',\n                description: 'A thinker',\n                prefix: 'Sir',\n                title: 'CEO',\n                language: 'EN',\n                status: 'New',\n                monetary_amount: 75000,\n                currency: 'USD',\n                fax: '+12129876543',\n                websites: [\n                  {\n                    id: '12345',\n                    url: 'http://example.com',\n                    type: 'primary'\n                  }\n                ],\n                addresses: [\n                  {\n                    id: '123',\n                    type: 'primary',\n                    string: '25 Spring Street, Blackburn, VIC 3130',\n                    name: 'HQ US',\n                    line1: 'Main street',\n                    line2: 'apt #',\n                    city: 'San Francisco',\n                    state: 'CA',\n                    postal_code: '94104',\n                    country: 'US',\n                    latitude: '40.759211',\n                    longitude: '-73.984638'\n                  }\n                ],\n                social_links: [\n                  {\n                    id: '12345',\n                    url: 'https://www.twitter.com/apideck-io',\n                    type: 'twitter'\n                  }\n                ],\n                phone_numbers: [\n                  {\n                    id: '12345',\n                    number: '111-111-1111',\n                    type: 'primary'\n                  }\n                ],\n                emails: [\n                  {\n                    id: '123',\n                    email: 'elon@musk.com',\n                    type: 'primary'\n                  }\n                ],\n                custom_fields: [\n                  {\n                    id: 'custom_technologies',\n                    value: 'Uses Salesforce and Marketo'\n                  }\n                ],\n                tags: ['New']\n              }\n            }\n\n            try {\n              const { data } = await apideck.lead.leadsAdd(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n  '/lead/leads/{id}':\n    get:\n      tags:\n        - Leads\n      operationId: leadsOne\n      summary: Get lead\n      description: Get lead\n      parameters:\n        - $ref: '#/components/parameters/id'\n        - $ref: '#/components/parameters/x-apideck-consumer-id'\n        - $ref: '#/components/parameters/x-apideck-app-id'\n        - $ref: '#/components/parameters/x-apideck-service-id'\n        - $ref: '#/components/parameters/raw'\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          $ref: '#/components/responses/GetLead'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      x-apideck-api: lead\n      x-codeSamples:\n        - lang: TypeScript\n          label: Node\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.lead.leadsOne({\n                id: 'id_example'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n    patch:\n      tags:\n        - Leads\n      operationId: leadsUpdate\n      summary: Update lead\n      description: Update lead\n      parameters:\n        - $ref: '#/components/parameters/id'\n        - $ref: '#/components/parameters/x-apideck-consumer-id'\n        - $ref: '#/components/parameters/x-apideck-app-id'\n        - $ref: '#/components/parameters/x-apideck-service-id'\n        - $ref: '#/components/parameters/raw'\n      security:\n        - apiKey: []\n      requestBody:\n        description: Lead information\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Lead'\n      responses:\n        '200':\n          $ref: '#/components/responses/UpdateLead'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      x-apideck-api: lead\n      x-codeSamples:\n        - lang: TypeScript\n          label: Node\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            const params = {\n              id: 'id_example',\n              lead: {\n                name: 'Elon Musk',\n                company_name: 'Spacex',\n                owner_id: '54321',\n                company_id: '2',\n                contact_id: '2',\n                lead_source: 'Cold Call',\n                first_name: 'Elon',\n                last_name: 'Musk',\n                description: 'A thinker',\n                prefix: 'Sir',\n                title: 'CEO',\n                language: 'EN',\n                status: 'New',\n                monetary_amount: 75000,\n                currency: 'USD',\n                fax: '+12129876543',\n                websites: [\n                  {\n                    id: '12345',\n                    url: 'http://example.com',\n                    type: 'primary'\n                  }\n                ],\n                addresses: [\n                  {\n                    id: '123',\n                    type: 'primary',\n                    string: '25 Spring Street, Blackburn, VIC 3130',\n                    name: 'HQ US',\n                    line1: 'Main street',\n                    line2: 'apt #',\n                    city: 'San Francisco',\n                    state: 'CA',\n                    postal_code: '94104',\n                    country: 'US',\n                    latitude: '40.759211',\n                    longitude: '-73.984638'\n                  }\n                ],\n                social_links: [\n                  {\n                    id: '12345',\n                    url: 'https://www.twitter.com/apideck-io',\n                    type: 'twitter'\n                  }\n                ],\n                phone_numbers: [\n                  {\n                    id: '12345',\n                    number: '111-111-1111',\n                    type: 'primary'\n                  }\n                ],\n                emails: [\n                  {\n                    id: '123',\n                    email: 'elon@musk.com',\n                    type: 'primary'\n                  }\n                ],\n                custom_fields: [\n                  {\n                    id: 'custom_technologies',\n                    value: 'Uses Salesforce and Marketo'\n                  }\n                ],\n                tags: ['New']\n              }\n            }\n\n            try {\n              const { data } = await apideck.lead.leadsUpdate(params)\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n    delete:\n      tags:\n        - Leads\n      operationId: leadsDelete\n      summary: Delete lead\n      description: Delete lead\n      parameters:\n        - $ref: '#/components/parameters/id'\n        - $ref: '#/components/parameters/x-apideck-consumer-id'\n        - $ref: '#/components/parameters/x-apideck-app-id'\n        - $ref: '#/components/parameters/x-apideck-service-id'\n        - $ref: '#/components/parameters/raw'\n      security:\n        - apiKey: []\n      responses:\n        '200':\n          $ref: '#/components/responses/DeleteLead'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '402':\n          $ref: '#/components/responses/PaymentRequired'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '422':\n          $ref: '#/components/responses/Unprocessable'\n        default:\n          $ref: '#/components/responses/UnexpectedError'\n      x-apideck-api: lead\n      x-codeSamples:\n        - lang: TypeScript\n          label: Node\n          source: |\n            import { Apideck } from '@apideck/node'\n\n            const apideck = new Apideck({\n              apiKey: 'REPLACE_WITH_API_KEY',\n              appId: 'REPLACE_WITH_APP_ID',\n              consumerId: 'REPLACE_WITH_CONSUMER_ID'\n            })\n\n            try {\n              const { data } = await apideck.lead.leadsDelete({\n                id: 'id_example'\n              })\n              console.log('API called successfully', data)\n            } catch (error) {\n              console.error(error)\n            }\n"
		}
	},
	"Error": "parse: parse spec: paths: /lead/leads: get: operation \"leadsAll\": security: parse global security: unknown security schema \"consumerId\""
}