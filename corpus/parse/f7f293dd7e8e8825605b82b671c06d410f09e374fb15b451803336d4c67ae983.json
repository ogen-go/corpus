{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/fabiantax87/technovium-unlimited-api"
		},
		"file": {
			"name": "openAPI.yaml",
			"size": 0,
			"path": "openAPI.yaml",
			"byteSize": 17053,
			"content": "openapi: 3.0.0\n# some good links to learn\n# https://shashankvivek-7.medium.com/go-swagger-user-authentication-securing-api-using-jwt-part-2-c80fdc1a020a\ninfo: \n    title: Technovium Unlimited API version 1.0.0\n    description: TU API version to connect to Unity3D of any other client\n    version: 0.1.0\n\nservers:\n    - url: 'http://localhost:5000/api/v1'\n\nsecurity:\n  - bearerAuth: []\n\npaths:\n    ##\n    # Admin can see all information of the users -\u003e except password\n    # add roles: user, creator and admin\n    ##\n    /users:\n        get:\n            summary: Get all users\n            description: Get all users of the game\n            operationId: getUsers\n            requestBody:\n                description: get all users\n                content:\n                    'application/json':\n                        schema:\n                            $ref: '#/components/schemas/Users'   \n            security:\n                - basicAuth: []\n            responses:\n                200:\n                    description: 'Authenticated, you can browse all users TODO: ONLY ADMIN can access this information; can authanticated user get information of all users????'\n                403: \n                    description: 'You do not have necessary permissions for the resource'\n\n\n    ##\n    # Admin can see all information of the user\n    # user or creator can see own information\n    ##\n                \n    /users/{id}:\n        get:\n            summary: Get user with {user_id}\n            description: Get user with parameter of {user_id}\n            operationId: getOneUser\n            # gave me error with {id} https://oai.github.io/Documentation/specification-parameters.html\n            parameters:\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                        $ref: '#/components/schemas/User'\n            requestBody:\n                description: get only one user TODO what information should be visible\n                content:\n                    'application/json':\n                        schema:\n                            $ref: '#/components/schemas/User'\n            security:\n                - basicAuth: []   \n            responses:\n                200:\n                    description: user results\n                403: \n                    description: 'You do not have necessary permissions for the resource'\n                \n    /users/signup:\n        post:\n            summary: Signup user\n            description: Signup for new account\n            operationId: signUpUser\n            requestBody:\n                description: Add user to database\n                content:\n                    'application/json':\n                        schema:\n                            $ref: '#/components/schemas/User'   \n            responses:\n                '201':\n                    description: User Created\n    /users/login: #add JWT security\n        post:\n            summary: Loggin User\n            description: Returns token for authorized User\n            operationId: LogginUser\n            requestBody:\n                description: Loggin user\n                content:\n                    'application/json':\n                        schema:\n                            $ref: '#/components/schemas/User'   \n            responses:\n                '200':\n                    description: LoggedIn\n    /users/resetpassword: #add JWT security\n        post:\n            summary: Reset password\n            description: With this request you can send a link to email to reset password\n            operationId: ResetPassword\n            security:\n                - Bearer: []\n            requestBody:\n                description: With this request you can send a link to email to reset password\n                content:\n                    'application/json':\n                        schema:\n                            $ref: '#/components/schemas/User'   \n            responses:\n                '201':\n                    description: email with an resetlink has been sennt to the user email address\n    \n    ##\n    # Admin can see all information of the users -\u003e except password\n    # user or creatr can access his/her information\n    ##\n\n    /users/settings: #add JWT security\n        put:\n            summary: User settings (email, pass etc.)\n            description: You can update all settings of the user\n            operationId: Settings\n            security:\n                - Bearer: []\n            requestBody:\n                description: You can update all settings of the user\n                content:\n                    'application/json':\n                        schema:\n                            $ref: '#/components/schemas/User'   \n            responses:\n                204:\n                    description: User Updated\n                400:\n                    description: Bad Request\n                404:\n                    description: Item Not Found\n                500:\n                    description: Server error\n                403: \n                    description: 'You do not have necessary permissions for the resource'\n        get:\n            summary: Get user settings\n            description: Get user settings\n            operationId: getUserSettings\n            security:\n                - Bearer: []\n            requestBody:\n                description: get user settings\n                content:\n                    'application/json':\n                        schema:\n                            $ref: '#/components/schemas/User'   \n            responses:\n                '200':\n                    description: user settings recieved\n                '403': \n                    description: 'You do not have necessary permissions for the resource' \n\n    ##\n    # user or creator can access and update his/her information\n    ##\n\n    /users/game/latestLocation/{user_id}:\n        post:\n            summary: Add latest user location\n            description: This allows to add latest location of the user \n            operationId: addLatestUserLocation\n            security:\n                - Bearer: []\n            parameters:\n                - name: user_id\n                  in: path\n                  required: true\n                  schema:\n                        $ref: '#/components/schemas/UserLocation'\n            requestBody:\n                description: This allows to add latest location of the user\n                content:\n                    'application/json':\n                        schema:\n                            $ref: '#/components/schemas/UserLocation'\n                        \n            responses:\n                201:\n                    description: created\n                40: \n                    description: 'You do not have necessary permissions for the resource'\n        get:\n            summary: Get user latest game location\n            description: Get user latest game location\n            operationId: getUserGameLocation\n            security:\n                - Bearer: []\n            parameters:\n                - name: user_id\n                  in: path\n                  required: true\n                  schema:\n                        $ref: '#/components/schemas/UserLocation'\n            requestBody:\n                description: get user location\n                content:\n                    'application/json':\n                        schema:\n                            $ref: '#/components/schemas/UserLocation'   \n            responses:\n                200:\n                    description: recieved\n                403: \n                    description: 'You do not have necessary permissions for the resource'\n    ##\n    # user or creator can access and update his/her information\n    ##\n    /users/game/score/{user_id}:\n        get:\n            summary: Get all scores of the user\n            description: Get all scores of the use \n            operationId: getAllAchievements\n            security:\n                - Bearer: []\n            # gave me error with {id} https://oai.github.io/Documentation/specification-parameters.html\n            parameters:\n                - name: user_id\n                  in: path\n                  required: true\n                  schema:\n                        $ref: '#/components/schemas/Achievement'\n            requestBody:\n                description: get all scores of the use\n                content:\n                    'application/json':\n                        schema:\n                            $ref: '#/components/schemas/Achievement'\n                        \n            responses:\n                201:\n                    description: created\n                403: \n                    description: 'You do not have necessary permissions for the resource'\n    ##\n    # user or creator can access and update his/her information\n    ##\n    /users/game/level/{level_id}/success:\n        post:\n            summary: add achievement of the user -\u003e see the schema of game and level -\u003e game_id and level_id\n            description: add achievement of the user -\u003e see the schema of game and level -\u003e game_id and level_id\n            operationId: postAchievementOfUser\n            security:\n                - Bearer: []\n            parameters:\n                - name: level_id\n                  in: path\n                  required: true\n                  schema:\n                        $ref: '#/components/schemas/Score'\n            requestBody:\n                description: post add achievement of the user\n                content:\n                    'application/json':\n                        schema:\n                            $ref: '#/components/schemas/Score'   \n            responses:\n                201:\n                    description: score created\n                403: \n                    description: 'You do not have necessary permissions for the resource'\n    ##\n    # user or creator can access and update his/her information\n    ##\n    /users/game/level/{level_id}/started:\n        post:\n            summary: Log started level\n            description: Log started level of the user -\u003e see the schema of game and level -\u003e game_id and level_id. Every time user starts a level we add new record. We want to log all actions ot that user to see in how much time user finished the level.\n            operationId: addStartedLevelOfUser\n            security:\n                - Bearer: []\n            parameters:\n                - name: level_id\n                  in: path\n                  required: true\n                  schema:\n                        $ref: '#/components/schemas/Score'\n            requestBody:\n                description: post add achievement of the user\n                content:\n                    'application/json':\n                        schema:\n                            $ref: '#/components/schemas/Score'   \n            responses:\n                201:\n                    description: score updated to started\n                403: \n                    description: 'You do not have necessary permissions for the resource'\n    /games:\n        get:\n            summary: Get all games\n            description: Get all games\n            operationId: getGames\n            requestBody:\n                description: get all games\n                content:\n                    'application/json':\n                        schema:\n                            $ref: '#/components/schemas/Games'\n            responses:\n                '200':\n                    description: recieved\n    /games/{id}:\n        get:\n            summary: Get all games\n            description: Get all games\n            operationId: getGames\n            parameters:\n                - name: id\n                  in: path\n                  required: true\n                  schema:\n                        $ref: '#/components/schemas/Game'\n            requestBody:\n                description: Get all games\n                content:\n                    'application/json':\n                        schema:\n                            $ref: '#/components/schemas/Game'\n            responses:\n                '200':\n                    description: recieved \n    /levels:\n        get:\n            summary: Get all levels\n            description: Get all levels\n            operationId: getAllLevels\n            requestBody:\n                description: Get all levels\n                content:\n                    'application/json':\n                        schema:\n                            $ref: '#/components/schemas/Levels'\n            responses:\n                200:\n                    description: recieved\n    /levels/{game_id}:\n        get:\n            summary: Get all levels of the game\n            description: Get all levels of the game\n            operationId: getAllLevelsOfGame\n            parameters:\n                - name: game_id\n                  in: path\n                  required: true\n                  schema:\n                        $ref: '#/components/schemas/Level'\n            requestBody:\n                description: Get all levels of one game\n                content:\n                    'application/json':\n                        schema:\n                            $ref: '#/components/schemas/Level'\n            responses:\n                '200':\n                    description: recieved\n    \ncomponents:\n    schemas:\n        Users:\n            type: array\n            items:\n                $ref: '#/components/schemas/User'\n        User:\n           type: object\n           required:\n               - id\n               - username\n               - email\n               - password\n               - date_of_birth\n               - gender\n           properties:\n                id:\n                    type: string\n                username:\n                    type: string\n                email:\n                    type: string\n                password:\n                    type: string\n                date_of_birth:\n                    type: string \n                gender:\n                    type: string\n                status:\n                    type: string\n                    enum: \n                        - Live\n                        - Deleted\n        UserLocation:\n           type: object\n           required:\n               - id\n               - user_id\n               - game_id\n               - level_id\n               - location_coordination #maybe not neded\n               - created\n\n           properties:\n                id:\n                    type: string\n                user_id:\n                    type: string\n                game_id:\n                    type: string\n                level_id:\n                    type: string\n                location_coordination: #maybe not needed\n                    type: string \n                created:\n                    type: string\n        Scores:\n            type: array\n            items:\n                $ref: '#/components/schemas/Score'\n        Score:\n           type: object\n           required:\n               - id\n               - user_id\n               - game_id\n               - level_id\n               - status\n               - created\n           properties:\n                id:\n                    type: string\n                user_id:\n                    type: string\n                game_id:\n                    type: string\n                level_id:\n                    type: string\n                status: #success, started\n                    type: string \n                    enum: \n                        - success\n                        - started\n                created:\n                    type: string\n        Games:\n            type: array\n            items:\n                $ref: '#/components/schemas/Game'\n        Game:       \n            type: object\n            required:\n                - id\n                - name\n                - description\n                - category\n                - created\n                - created_by\n            properties:\n                id:\n                    type: string\n                name:\n                    type: string\n                category:\n                    type: string\n                created:\n                    type: string\n                created_by:\n                    type: string\n        Levels:\n            type: array\n            items:\n                $ref: '#/components/schemas/Level'   \n        Level:\n            type: object\n            required: \n                - id\n                - game_id\n                - level\n                - created\n                - created_by\n            properties:\n                id:\n                    type: string\n                game_id:\n                    type: string\n                level:\n                    type: integer\n                created:\n                    type: string \n                created_by:\n                    type: string\n\n    securitySchemes:\n        bearerAuth:\n            type: http\n            scheme: bearer\n            bearerFormat: JWT\n",
			"canonicalURL": "/github.com/fabiantax87/technovium-unlimited-api@fd3ade01820280c027dcc5a0b01fef61004060cb/-/blob/openAPI.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/fabiantax87/technovium-unlimited-api/blob/fd3ade01820280c027dcc5a0b01fef61004060cb/openAPI.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/games/{id}\": get: at openAPI.yaml:316:26: duplicate operationId: \"getGames\""
}