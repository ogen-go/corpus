{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/benjsicam/nestjs-rest-microservices"
		},
		"file": {
			"name": "openapi-spec.yaml",
			"size": 0,
			"path": "docs/openapi-spec.yaml",
			"byteSize": 24192,
			"content": "openapi: \"3.0.2\"\ninfo:\n  title: \"REST API Gateway\"\n  description: \"REST API Gateway Documentation\"\n  version: \"1.0.0\"\nservers:\n  - url: \"http://localhost:3000\"\n    description: \"Local Server\"\npaths:\n  /orgs:\n    get:\n      tags:\n        - \"organizations\"\n      summary: \"Query or search organizations\"\n      description: \"Retrieves a collection of organizations\"\n      operationId: \"findOrganizations\"\n      parameters:\n        - name: \"q\"\n          in: \"query\"\n          description: \"The parameter to filter the query results using the name of the organization\"\n          schema:\n            type: \"string\"\n            default: \"\"\n            nullable: true\n          example: \"acme\"\n        - name: \"select\"\n          in: \"query\"\n          description: \"The parameter to control the projection of query results. Can be a comma delimited set of model attributes\"\n          schema:\n            type: \"string\"\n            default: \"\"\n            nullable: true\n          example: \"id,name\"\n        - name: \"orderBy\"\n          in: \"query\"\n          description: \"The parameter to control the sorting for the query results. Can be a comma delimited set of model attributes. Default sort order is ascending. Use the minus (-) sign before the field to change sort order\"\n          schema:\n            type: \"string\"\n            nullable: true\n          example: \"name,-createdAt\"\n        - name: \"page\"\n          in: \"query\"\n          description: \"The pagination parameter to control the page number\"\n          schema:\n            type: \"integer\"\n            default: 1\n            nullable: true\n        - name: \"limit\"\n          in: \"query\"\n          description: \"The pagination parameter to control the number of returned records per page\"\n          schema:\n            type: \"integer\"\n            default: 25\n            nullable: true\n      responses:\n        200:\n          description: \"Successfully queried resources\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/responses/OrganizationQueryResponse\"\n              example:\n                totalRecords: 2\n                totalPages: 1\n                page: 1\n                limit: 25\n                data:\n                  - id: \"7fe5b86f-b30d-40ee-9b8b-8619edf0fb18\"\n                    name: \"acme\"\n                    createdAt: \"2019-08-05T10:02:18.047Z\"\n                    updatedAt: \"2020-01-05T15:22:03.020Z\"\n                    version: 2\n                  - id: \"6696c3fa-ff8a-4b23-9997-27b434352d32\"\n                    name: \"acme2\"\n                    createdAt: \"2019-08-05T10:02:18.047Z\"\n                    updatedAt: \"2020-01-05T15:22:03.020Z\"\n                    version: 9\n        400:\n          $ref: \"#/components/responses/BadRequestError\"\n        401:\n          $ref: \"#/components/responses/InvalidCredentialsError\"\n        403:\n          $ref: \"#/components/responses/NotAuthorizedError\"\n        500:\n          $ref: \"#/components/responses/InternalError\"\n      security:\n        - bearerAuth: []\n  /orgs/{name}/comments:\n    get:\n      tags:\n        - \"organizations\"\n      summary: \"Query or search comments associated to an organization\"\n      description: \"Retrieves a collection of comments associated to an organization\"\n      operationId: \"findOrganizationComments\"\n      parameters:\n        - name: \"name\"\n          in: \"path\"\n          description: \"The name of the organization\"\n          required: true\n          schema:\n            type: \"string\"\n            default: \"\"\n        - name: \"q\"\n          in: \"query\"\n          description: \"The parameter to filter the query results using the contents of a comment\"\n          schema:\n            type: \"string\"\n            default: \"\"\n            nullable: true\n          example: \"Lorem Ipsum\"\n        - name: \"select\"\n          in: \"query\"\n          description: \"The parameter to control the projection of query results. Can be a comma delimited set of model attributes\"\n          schema:\n            type: \"string\"\n            default: \"\"\n            nullable: true\n          example: \"id,comment\"\n        - name: \"orderBy\"\n          in: \"query\"\n          description: \"The parameter to control the sorting for the query results. Can be a comma delimited set of model attributes. Default sort order is ascending. Use the minus (-) sign before the field to change sort order\"\n          schema:\n            type: \"string\"\n            nullable: true\n          example: \"organization,-createdAt\"\n        - name: \"page\"\n          in: \"query\"\n          description: \"The pagination parameter to control the page number\"\n          schema:\n            type: \"integer\"\n            default: 1\n            nullable: true\n        - name: \"limit\"\n          in: \"query\"\n          description: \"The pagination parameter to control the number of returned records per page\"\n          schema:\n            type: \"integer\"\n            default: 25\n            nullable: true\n      responses:\n        200:\n          description: \"Successfully queried resources\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/responses/CommentQueryResponse\"\n              example:\n                totalRecords: 2\n                totalPages: 1\n                page: 1\n                limit: 25\n                data:\n                  - id: \"a64b3121-8d27-43f9-9138-2e4121972720\"\n                    organization: \"7fe5b86f-b30d-40ee-9b8b-8619edf0fb18\"\n                    comment: \"Nulla condimentum ornare nisi auctor euismod. Phasellus vel tincidunt lectus. Nulla porttitor consequat augue, ut molestie mauris ultricies vel.\"\n                    createdAt: \"2019-08-05T10:02:18.047Z\"\n                    updatedAt: \"2020-01-05T15:22:03.020Z\"\n                    version: 2\n                  - id: \"9607a6a4-db32-4f6e-b600-78f6b7f67799\"\n                    organization: \"7fe5b86f-b30d-40ee-9b8b-8619edf0fb18\"\n                    comment: \"Interdum et malesuada fames ac ante ipsum primis in faucibus. Phasellus molestie, arcu in rutrum euismod, leo justo aliquam ante, molestie gravida odio quam nec urna.\"\n                    createdAt: \"2019-08-05T10:02:18.047Z\"\n                    updatedAt: \"2020-01-05T15:22:03.020Z\"\n                    version: 8\n        400:\n          $ref: \"#/components/responses/BadRequestError\"\n        401:\n          $ref: \"#/components/responses/InvalidCredentialsError\"\n        403:\n          $ref: \"#/components/responses/NotAuthorizedError\"\n        500:\n          $ref: \"#/components/responses/InternalError\"\n      security:\n        - bearerAuth: []\n    post:\n      tags:\n        - \"organizations\"\n      summary: \"Post a new comment for an organization\"\n      description: \"Post a new comment for an organization\"\n      operationId: \"createOrganizationComment\"\n      parameters:\n        - name: \"name\"\n          in: \"path\"\n          description: \"The name of the organization\"\n          required: true\n          schema:\n            type: \"string\"\n            default: \"\"\n          example: \"acme\"\n      requestBody:\n        description: \"New comment to create\"\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              required:\n                - \"comment\"\n              properties:\n                comment:\n                  type: \"string\"\n                  description: \"The comment text\"\n            example:\n              comment: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas gravida velit nec semper congue. Etiam in orci nec lorem laoreet sodales id eget magna.\"\n      responses:\n        201:\n          description: \"Successfully created comment\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Comment\"\n        400:\n          $ref: \"#/components/responses/BadRequestError\"\n        401:\n          $ref: \"#/components/responses/InvalidCredentialsError\"\n        403:\n          $ref: \"#/components/responses/NotAuthorizedError\"\n        409:\n          $ref: \"#/components/responses/ConflictError\"\n        500:\n          $ref: \"#/components/responses/InternalError\"\n      security:\n        - bearerAuth: []\n    delete:\n      tags:\n        - \"organizations\"\n      summary: \"Soft deletes all comments associated to an organization\"\n      description: \"Soft deletes all comments associated to an organization\"\n      operationId: \"deleteOrganizationComments\"\n      parameters:\n        - name: \"name\"\n          in: \"path\"\n          description: \"The name of the organization\"\n          required: true\n          schema:\n            type: \"string\"\n            default: \"\"\n          example: \"acme\"\n      responses:\n        200:\n          $ref: \"#/components/responses/DeleteResponse\"\n        400:\n          $ref: \"#/components/responses/BadRequestError\"\n        401:\n          $ref: \"#/components/responses/InvalidCredentialsError\"\n        403:\n          $ref: \"#/components/responses/NotAuthorizedError\"\n        404:\n          $ref: \"#/components/responses/ResourceNotFoundError\"\n        500:\n          $ref: \"#/components/responses/InternalError\"\n      security:\n        - bearerAuth: []\n  /orgs/{name}/members:\n    get:\n      tags:\n        - \"organizations\"\n      summary: \"Query or search the members of the organization\"\n      description: \"Query or search the members of the organization\"\n      operationId: \"findOrganizationMembers\"\n      parameters:\n        - name: \"name\"\n          in: \"path\"\n          description: \"The name of the organization\"\n          required: true\n          schema:\n            type: \"string\"\n            default: \"\"\n          example: \"acme\"\n        - name: \"q\"\n          in: \"query\"\n          description: \"The parameter to filter the query results using the member's name\"\n          schema:\n            type: \"string\"\n            default: \"\"\n            nullable: true\n          example: \"user1\"\n        - name: \"select\"\n          in: \"query\"\n          description: \"The parameter to control the projection of query results. Can be a comma delimited set of model attributes\"\n          schema:\n            type: \"string\"\n            default: \"\"\n            nullable: true\n          example: \"id,loginId\"\n        - name: \"orderBy\"\n          in: \"query\"\n          description: \"The parameter to control the sorting for the query results. Can be a comma delimited set of model attributes. Default sort order is ascending. Use the minus (-) sign before the field to change sort order\"\n          schema:\n            type: \"string\"\n            nullable: true\n          example: \"-followers\"\n        - name: \"page\"\n          in: \"query\"\n          description: \"The pagination parameter to control the page number\"\n          schema:\n            type: \"integer\"\n            default: 1\n            nullable: true\n        - name: \"limit\"\n          in: \"query\"\n          description: \"The pagination parameter to control the number of returned records per page\"\n          schema:\n            type: \"integer\"\n            default: 25\n            nullable: true\n      responses:\n        200:\n          description: \"Successfully queried members\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/responses/UserQueryResponse\"\n              example:\n                totalRecords: 2\n                totalPages: 1\n                page: 1\n                limit: 25\n                data:\n                  - id: \"331fe8f5-7c1c-48d2-8890-b1df8a1853a1\"\n                    organization: \"7fe5b86f-b30d-40ee-9b8b-8619edf0fb18\"\n                    loginId: \"user1\"\n                    avatar: \"https://gravatar.com/avatar/d044a58b427b7d3845dc59e131634a91\"\n                    followers: 2\n                    following: 5\n                    createdAt: \"2019-08-05T10:02:18.047Z\"\n                    updatedAt: \"2020-01-05T15:22:03.020Z\"\n                    version: 2\n                  - id: \"1129438e-0d15-42eb-a7e8-1b7c1ed258c0\"\n                    organization: \"7fe5b86f-b30d-40ee-9b8b-8619edf0fb18\"\n                    loginId: \"user1\"\n                    avatar: \"https://gravatar.com/avatar/3d8fd0ddb69827ce84ff637889ff7cd0\"\n                    followers: 6\n                    following: 38\n                    createdAt: \"2019-08-05T10:02:18.047Z\"\n                    updatedAt: \"2020-01-05T15:22:03.020Z\"\n                    version: 7\n        400:\n          $ref: \"#/components/responses/BadRequestError\"\n        401:\n          $ref: \"#/components/responses/InvalidCredentialsError\"\n        403:\n          $ref: \"#/components/responses/NotAuthorizedError\"\n        500:\n          $ref: \"#/components/responses/InternalError\"\n      security:\n        - bearerAuth: []\ncomponents:\n  schemas:\n    User:\n      type: \"object\"\n      description: \"User model\"\n      properties:\n        id:\n          description: \"The identifier for the user record\"\n          type: \"string\"\n          format: \"uuid\"\n          readOnly: true\n        organization:\n          description: \"Ref: Organization. The organization the user is associated with.\"\n          type: \"string\"\n          format: \"uuid\"\n        loginId:\n          description: \"The login id of the user\"\n          type: \"string\"\n        avatar:\n          description: \"The avatar url of the user\"\n          type: \"string\"\n          format: \"uri\"\n        followers:\n          description: \"The number of followers of the user.\"\n          type: \"integer\"\n          format: \"int32\"\n          default: 0\n        following:\n          description: \"The number of people being followed by the user.\"\n          type: \"integer\"\n          format: \"int32\"\n          default: 0\n        createdAt:\n          description: \"The timestamp for when the record has been created. For auditing purposes only\"\n          type: \"string\"\n          format: \"date-time\"\n          readOnly: true\n        updatedAt:\n          description: \"The timestamp for when the record has been last updated. For auditing purposes only\"\n          type: \"string\"\n          format: \"date-time\"\n          readOnly: true\n        version:\n          description: \"The record's version in the database.\"\n          type: \"integer\"\n          format: \"int32\"\n          readOnly: true\n      example:\n        id: \"331fe8f5-7c1c-48d2-8890-b1df8a1853a1\"\n        organization: \"7fe5b86f-b30d-40ee-9b8b-8619edf0fb18\"\n        loginId: \"user1\"\n        avatar: \"https://gravatar.com/avatar/d044a58b427b7d3845dc59e131634a91\"\n        followers: 2\n        following: 5\n        createdAt: \"2019-08-05T10:02:18.047Z\"\n        updatedAt: \"2020-01-05T15:22:03.020Z\"\n        version: 2\n    Comment:\n      type: \"object\"\n      description: \"Comment model\"\n      required:\n        - \"comment\"\n      properties:\n        id:\n          description: \"The identifier for the comment record\"\n          type: \"string\"\n          format: \"uuid\"\n          readOnly: true\n        organization:\n          description: \"Ref: Organization. The organization the comment is associated with.\"\n          type: \"string\"\n          format: \"uuid\"\n        comment:\n          description: \"The comment text\"\n          type: \"string\"\n        createdAt:\n          description: \"The timestamp for when the record has been created. For auditing purposes only\"\n          type: \"string\"\n          format: \"date-time\"\n          readOnly: true\n        updatedAt:\n          description: \"The timestamp for when the record has been last updated. For auditing purposes only\"\n          type: \"string\"\n          format: \"date-time\"\n          readOnly: true\n        version:\n          description: \"The record's version in the database.\"\n          type: \"integer\"\n          format: \"int32\"\n          readOnly: true\n      example:\n        id: \"74d0f515-6b4d-4112-9439-ed10752d0bc9\"\n        organization: \"7fe5b86f-b30d-40ee-9b8b-8619edf0fb18\"\n        comment: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras vel consequat ipsum, et posuere lorem.\"\n        createdAt: \"2019-08-05T10:02:18.047Z\"\n        updatedAt: \"2020-01-05T15:22:03.020Z\"\n        version: 2\n    Organization:\n      type: \"object\"\n      description: \"Organization model\"\n      properties:\n        id:\n          description: \"The identifier for the organization record\"\n          type: \"string\"\n          format: \"uuid\"\n          readOnly: true\n        name:\n          description: \"The name of the organization\"\n          type: \"string\"\n        createdAt:\n          description: \"The timestamp for when the record has been created. For auditing purposes only\"\n          type: \"string\"\n          format: \"date-time\"\n          readOnly: true\n        updatedAt:\n          description: \"The timestamp for when the record has been last updated. For auditing purposes only\"\n          type: \"string\"\n          format: \"date-time\"\n          readOnly: true\n        version:\n          description: \"The record's version in the database.\"\n          type: \"integer\"\n          format: \"int32\"\n          readOnly: true\n      example:\n        id: \"7fe5b86f-b30d-40ee-9b8b-8619edf0fb18\"\n        name: \"acme\"\n        createdAt: \"2019-08-05T10:02:18.047Z\"\n        updatedAt: \"2020-01-05T15:22:03.020Z\"\n        version: 2\n  responses:\n    UserQueryResponse:\n      description: \"Successfully queried user\"\n      content:\n        application/json:\n          schema:\n            allOf:\n            - $ref: \"#/components/responses/QueryResponse\"\n            - type: \"object\"\n              properties:\n                data:\n                  type: \"array\"\n                  items:\n                    $ref: \"#/components/schemas/User\"\n    CommentQueryResponse:\n      description: \"Successfully queried comments\"\n      content:\n        application/json:\n          schema:\n            allOf:\n            - $ref: \"#/components/responses/QueryResponse\"\n            - type: \"object\"\n              properties:\n                data:\n                  type: \"array\"\n                  items:\n                    $ref: \"#/components/schemas/Comment\"\n    OrganizationQueryResponse:\n      description: \"Successfully queried organizations\"\n      content:\n        application/json:\n          schema:\n            allOf:\n            - $ref: \"#/components/responses/QueryResponse\"\n            - type: \"object\"\n              properties:\n                data:\n                  type: \"array\"\n                  items:\n                    $ref: \"#/components/schemas/Organization\"\n    QueryResponse:\n      description: \"Successfully queried resources\"\n      content:\n        application/json:\n          schema:\n            type: \"object\"\n            description: \"Generic response schema for queries or search\"\n            properties:\n              totalRecords:\n                description: \"The total number of records or records returned by the query\"\n                type: \"integer\"\n                default: 0\n                readOnly: true\n              totalPages:\n                description: \"The total number of pages returned by the query\"\n                type: \"integer\"\n                default: 0\n                readOnly: true\n              page:\n                description: \"The current page when navigating the query results\"\n                type: \"integer\"\n                default: 1\n                readOnly: true\n              limit:\n                description: \"The limit, size or number of records returned per page by the query\"\n                type: \"integer\"\n                default: 25\n                readOnly: true\n              data:\n                  type: \"array\"\n                  items:\n                    default: []\n    GenericResponse:\n      description: \"Generic response\"\n      content:\n        application/json:\n          schema:\n            type: \"object\"\n            description: \"Generic response message\"\n            required:\n              - \"message\"\n            properties:\n              message:\n                description: \"A descriptive message for the response\"\n                type: \"string\"\n          example:\n            message: \"Generic message\"\n    DeleteResponse:\n      description: \"Successfully deleted resource/s\"\n      content:\n        application/json:\n          schema:\n            type: \"object\"\n            properties:\n              count:\n                description: \"The number of records deleted from the database\"\n                type: \"integer\"\n                format: \"int32\"\n          example:\n            count: 8\n    ErrorResponse:\n      description: \"Error response\"\n      content:\n        application/json:\n          schema:\n            type: \"object\"\n            properties:\n              code:\n                description: \"The error or response code\"\n                type: \"integer\"\n                format: \"int32\"\n                readOnly: true\n              type:\n                description: \"The error name or type\"\n                type: \"string\"\n                readOnly: true\n              message:\n                description: \"A high level descriptive message for the error\"\n                type: \"string\"\n                readOnly: true\n              data:\n                description: \"Detailed description of the errors in the request\"\n                type: \"array\"\n                readOnly: true\n                items:\n                  type: \"object\"\n                  properties:\n                    type:\n                      description: \"The error name or type\"\n                      type: \"string\"\n                      default: \"\"\n                    field:\n                      description: \"The name of the field with the error\"\n                      type: \"string\"\n                      default: \"\"\n                    message:\n                      description: \"The detailed error message\"\n                      type: \"string\"\n                      default: \"\"\n          example:\n            code: 404\n            type: \"NOT_FOUND\"\n            message: \"Resource not found\"\n            data: []\n    BadRequestError:\n      description: \"Invalid input or validation error\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/responses/ErrorResponse\"\n          example:\n            code: 400\n            type: \"VALIDATION_ERROR\"\n            message: \"Validation has failed\"\n            data:\n              - type: \"VALIDATION_ERROR\"\n                field: \"url\"\n                message: \"URL must be a valid URL\"\n    ConflictError:\n      description: \"Unique constraint validation error\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/responses/ErrorResponse\"\n          example:\n            code: 409\n            type: \"CONFLICT_ERROR\"\n            message: \"A record with the same name exists\"\n            data: []\n    InvalidCredentialsError:\n      description: \"Authentication has failed\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/responses/ErrorResponse\"\n          example:\n            code: 401\n            type: \"AUTHENTICATION_REQUIRED\"\n            message: \"Authentication is required\"\n            data: []\n    NotAuthorizedError:\n      description: \"Method is not allowed or access has been denied\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/responses/ErrorResponse\"\n          example:\n            code: 403\n            type: \"FORBIDDEN\"\n            message: \"Access denied\"\n            data: []\n    ResourceNotFoundError:\n      description: \"Resource not found error\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/responses/ErrorResponse\"\n          example:\n            code: 404\n            type: \"NOT_FOUND\"\n            message: \"Resource not found\"\n            data: []\n    InternalError:\n      description: \"Unexpected Error\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/responses/ErrorResponse\"\n          example:\n            code: 500\n            type: \"INTERNAL_SERVER_ERROR\"\n            message: \"An unexpected error has occurred\"\n            data: []\n  securitySchemes:\n    bearerAuth:\n      type: \"http\"\n      scheme: \"bearer\"\n      bearerFormat: \"JWT\"\n",
			"canonicalURL": "/github.com/benjsicam/nestjs-rest-microservices@3ab9494556bc8f7e4fffd07aa41671965037d6b6/-/blob/docs/openapi-spec.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/benjsicam/nestjs-rest-microservices/blob/3ab9494556bc8f7e4fffd07aa41671965037d6b6/docs/openapi-spec.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: responses: \"QueryResponse\": at 1:3462: content: application/json: at 1:3493: schema: at 1:3503: parse schema: property \"data\": at 1:3587: parse schema: item: at 1:3596: parse schema: infer default type: invalid value \"[]\""
}