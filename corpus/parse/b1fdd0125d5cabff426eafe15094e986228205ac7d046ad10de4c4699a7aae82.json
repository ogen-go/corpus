{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/SAP/application-support-center"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "server/resources/swagger.yaml",
			"byteSize": 37234,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Application Service Center API\n  description: Application Service Center API\n  externalDocs:\n    description: Find out more\n    url: https://github.wdf.sap.corp/ApplicationServices/admin_v2\nservers:\n  - url: /api/v1\npaths:\n  # User\n  /users/me:\n    get:\n      summary: Get the logged in user and associated role assigned\n      tags:\n        - Users\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  # Apps\n  /myapps:\n    get:\n      summary: List all apps I am an appOwner or appDeveloper of\n      tags:\n        - Apps\n      responses:\n        '200':\n          description: A array of Apps\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/Apps\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /apps:\n    get:\n      summary: List all apps\n      tags:\n        - Apps\n      parameters:\n        - in: query\n          name: category\n          schema:\n            type: string\n          required: false\n          description: The category of apps to return\n      responses:\n        '200':\n          description: A array of Apps\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/Apps\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Create a App\n      tags:\n        - Apps\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/App'\n      responses:\n        '201':\n          description: Standard create response\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/Standard\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /apps/{app_id}:\n    parameters:\n      - name: app_id\n        in: path\n        required: true\n        description: The id of the app to retrieve\n        schema:\n          type: integer\n    get:\n      summary: Info for a specific app\n      tags:\n        - Apps\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/App\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    put:\n      summary: Update a specific app\n      tags:\n        - Apps\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/App'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Standard\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    delete:\n      summary: Delete a specific app\n      tags:\n        - Apps\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Standard\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\n  # App Bulk Data\n  /apps/{app_id}/bulkdata:\n    parameters:\n      - name: app_id\n        in: path\n        required: true\n        description: The id of the app\n        schema:\n          type: integer\n    get:\n      summary: All Data Help Release Notes Contacts and Announcements intended for integration scenarios to reduce the amount of API calls\n      tags:\n        - Apps\n      responses:\n        '200':\n          description: An array of the apps relevant data\n          content: \n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/Standard\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\n  # App Secure Token\n  /apps/{app_id}/token:\n    parameters:\n      - name: app_id\n        in: path\n        required: true\n        description: The id of the app\n        schema:\n          type: integer\n    get:\n      summary: Get the secure token for a specific app\n      tags:\n        - Apps\n      responses:\n        '200':\n          description: The token for a specific app\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/definitions/inBody\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\n\n  # App Help\n  /apps/{app_id}/help:\n    parameters:\n      - name: app_id\n        in: path\n        required: true\n        description: The id of the app\n        schema:\n          type: integer\n    get:\n      summary: Get all help for a specific app\n      tags:\n        - App Help\n      responses:\n        '200':\n          description: A array of Help articles for a specific app\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/HelpList\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Create a help article for a app\n      tags:\n        - App Help\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Help'\n      responses:\n        '201':\n          description: Standard create response\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/Standard\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /apps/{app_id}/help/{help_id}:\n    parameters:\n      - name: app_id\n        in: path\n        required: true\n        description: The id of the app\n        schema:\n          type: integer\n      - name: help_id\n        in: path\n        required: true\n        description: The id of the article to delete\n        schema:\n          type: integer\n    get:\n      summary: Get a specific help article\n      tags:\n        - App Help\n      responses:\n        '200':\n          description: A Help article for a specific app\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/HelpList\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    put:\n      summary: Update a specific help article\n      tags:\n        - App Help\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Help'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Standard\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    delete:\n      summary: Delete a specific help article\n      tags:\n        - App Help\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Standard\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\n\n  # App Keywords\n  /apps/{app_id}/keywords:\n      parameters:\n        - name: app_id\n          in: path\n          required: true\n          description: The id of the app\n          schema:\n            type: integer\n      get:\n        summary: Get all keywords for a specific app\n        tags:\n          - App Keywords\n        responses:\n          '200':\n            description: A array of keywords for a specific app\n            content:\n              application/json:    \n                schema:\n                  $ref: \"#/components/schemas/KeywordsList\"\n          default:\n            description: unexpected error\n            content:\n              application/json:\n                schema:\n                  $ref: \"#/components/schemas/Error\"\n      post:\n        summary: Create a app keyword\n        tags:\n          - App Keywords\n        requestBody:\n          required: true\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Keywords'\n        responses:\n          '201':\n            description: Standard create response\n            content:\n              application/json:    \n                schema:\n                  $ref: \"#/components/schemas/Standard\"\n          default:\n            description: Error\n            content:\n              application/json:\n                schema:\n                  $ref: \"#/components/schemas/Error\"\n      \n  /apps/{app_id}/keyword/{keyword_id}:\n      parameters:\n        - name: app_id\n          in: path\n          required: true\n          description: The id of the app\n          schema:\n            type: integer\n        - name: keyword_id\n          in: path\n          required: true\n          description: The id of the keyword\n          schema:\n            type: integer\n      put:\n        summary: Update a specific keyword\n        tags:\n          - App Keywords\n        requestBody:\n          required: true\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Keywords'\n        responses:\n          '200':\n            description: Expected response to a valid request\n            content:\n              application/json:\n                schema:\n                  $ref: \"#/components/schemas/Standard\"\n          default:\n            description: Error\n            content:\n              application/json:\n                schema:\n                  $ref: \"#/components/schemas/Error\"\n      delete:\n        summary: Delete a specific keyword\n        tags:\n          - App Keywords\n        responses:\n          '200':\n            description: Expected response to a valid request\n            content:\n              application/json:\n                schema:\n                  $ref: \"#/components/schemas/Standard\"\n          default:\n            description: Error\n            content:\n              application/json:\n                schema:\n                  $ref: \"#/components/schemas/Error\"\n\n\n  # App Announcements\n  /apps/{app_id}/announcements:\n    parameters:\n      - name: app_id\n        in: path\n        required: true\n        description: The id of the app\n        schema:\n          type: integer\n    get:\n      summary: Get all announcements for a specific app\n      tags:\n        - App Announcements\n      responses:\n        '200':\n          description: A array of announcements articles for a specific app\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/AnnouncementsList\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Create a announcements article for a app\n      tags:\n        - App Announcements\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Announcements'\n      responses:\n        '201':\n          description: Standard create response\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/Standard\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /apps/{app_id}/announcements/{announcement_id}:\n    parameters:\n      - name: app_id\n        in: path\n        required: true\n        description: The id of the app\n        schema:\n          type: integer\n      - name: announcement_id\n        in: path\n        required: true\n        description: The id of the announcements article to delete\n        schema:\n          type: integer\n    get:\n      summary: Get a a specific announcement for a app\n      tags:\n        - App Announcements\n      responses:\n        '200':\n          description: A announcement for a specific app\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/AnnouncementsList\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    put:\n      summary: Update a specific announcements article\n      tags:\n        - App Announcements\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Announcements'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Standard\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    delete:\n      summary: Delete a specific announcements article\n      tags:\n        - App Announcements\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Standard\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\n\n  # App Contacts\n  /apps/{app_id}/contacts:\n    parameters:\n      - name: app_id\n        in: path\n        required: true\n        description: The id of the app\n        schema:\n          type: integer\n    get:\n      summary: Get all contacts for a specific app\n      tags:\n        - App Contacts\n      responses:\n        '200':\n          description: A array of contacts for a specific app\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/Contacts\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Add a contact to a app\n      tags:\n        - App Contacts\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppContact'\n      responses:\n        '201':\n          description: Standard create response\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/Standard\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /apps/{app_id}/contacts/{contact_id}:\n    parameters:\n      - name: app_id\n        in: path\n        required: true\n        description: The id of the app\n        schema:\n          type: integer\n      - name: contact_id\n        in: path\n        required: true\n        description: The id of the contact to remove\n        schema:\n          type: integer\n    delete:\n      summary: Remove a contact from a app\n      tags:\n        - App Contacts\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Standard\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /download/contacts:\n    parameters:\n      - name: role\n        in: query\n        required: true\n        description: The role of the contacts to download (AppOwner or Developer)\n        schema:\n          type: string\n    get:\n      summary: Get all contacts\n      tags:\n        - App Contacts\n      responses:\n        '200':\n          description: A array of contacts\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/Contacts\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /download/app/contacts:\n    get:\n      summary: Get all apps and the associated contacts\n      tags:\n        - App Contacts\n      responses:\n        '200':\n          description: A array of apps\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/App\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\n  #App Releases\n  /apps/{app_id}/releases:\n    parameters:\n      - name: app_id\n        in: path\n        required: true\n        description: The id of the app\n        schema:\n          type: integer\n    get:\n      summary: Get all releases for a specific app\n      tags:\n        - App Releases\n      responses:\n        '200':\n          description: A array of releases for a specific app\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/Releases\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Create a release for a app\n      tags:\n        - App Releases\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Release'\n      responses:\n        '201':\n          description: Standard create response\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/Standard\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /apps/{app_id}/releases/{release_id}:\n    parameters:\n      - name: app_id\n        in: path\n        required: true\n        description: The id of the app\n        schema:\n          type: integer\n      - name: release_id\n        in: path\n        required: true\n        description: The id of the release to delete\n        schema:\n          type: integer\n    get:\n      summary: Get a specific release for a specific app\n      tags:\n        - App Releases\n      responses:\n        '200':\n          description: A specific release for a specific app\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/Release\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    put:\n      summary: Update a specific release\n      tags:\n        - App Releases\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Release'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Standard\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    delete:\n      summary: Delete a release\n      tags:\n        - App Releases\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Standard\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\n                \n  # Contacts\n  /contacts:\n    get:\n      summary: List all contacts\n      tags:\n        - Contacts\n      responses:\n        '200':\n          description: A array of Contact\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/Contacts\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Create a contact\n      tags:\n        - Contacts\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Contact'\n      responses:\n        '201':\n          description: Standard create response\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/Standard\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n                \n  /contacts/{contact_id}:\n    parameters:\n      - name: contact_id\n        in: path\n        required: true\n        description: The id of the contact to be updated\n        schema:\n          type: integer\n    put:\n      summary: Update a specific contact\n      tags:\n        - Contacts\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Contact'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Standard\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    delete:\n      summary: Delete a specific contact\n      tags:\n        - Contacts\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Standard\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /contacts/{contact_id}/apps:\n    parameters:\n      - name: contact_id\n        in: path\n        required: true\n        description: The id of the contact\n        schema:\n          type: integer\n    get:\n      summary: Get all apps for a specific contact\n      tags:\n        - Contacts\n      responses:\n        '200':\n          description: A array of apps for a specific contact\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/Apps\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  # Settings\n  /settings:\n    get:\n      summary: List all app settings\n      tags:\n        - Settings\n      responses:\n        '200':\n          description: A array of settings\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/Settings\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /settings/{setting_name}:\n    get:\n      summary: Info for a specific setting\n      tags:\n        - Settings\n      parameters:\n        - name: setting_name\n          in: path\n          required: true\n          description: The name of the setting to retrieve\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Setting\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\n\n  # User Settings\n  /user_settings:\n    post:\n      summary: Create a user setting\n      tags:\n        - User Settings\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserSetting'\n      responses:\n        '201':\n          description: Standard create response\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/Standard\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /user_settings/{external_id}:\n    get:\n      summary: List all user settings\n      tags:\n        - User Settings\n      parameters:\n        - name: external_id\n          in: path\n          required: true\n          description: The id of the application user\n          schema:\n            type: string\n      responses:\n        '200':\n          description: A array of users settings\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/UserSettings\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /user_settings/{external_id}/{setting_name}:\n    parameters:\n      - name: external_id\n        in: path\n        required: true\n        description: The id of the application user to be updated\n        schema:\n          type: string\n      - name: setting_name\n        in: path\n        required: true\n        description: The setting name to be updated\n        schema:\n          type: string\n    put:\n      summary: Update a specific user setting\n      tags:\n        - User Settings\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserSetting'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Standard\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    delete:\n      summary: Delete a specific user setting\n      tags:\n        - User Settings\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Standard\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\n  # Notifications\n  /notifications:\n    get:\n      summary: List all application notifications\n      tags:\n        - Notifications\n      responses:\n        '200':\n          description: A array of Notifications\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/Notifications\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Create a notification\n      tags:\n        - Notifications\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Notification'\n      responses:\n        '201':\n          description: Standard create response\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/Standard\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /notifications/{notification_id}:\n    delete:\n      summary: Delete a specific notification\n      tags:\n        - Notifications\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Standard\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /dashboard:\n    get:\n      summary: Get all relevant stats for dashboard screen\n      tags:\n        - Dashboard\n      responses:\n        '200':\n          description: A array of datasets\n          content:\n            application/json:    \n              schema:\n                $ref: \"#/components/schemas/App\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\n#This will require that all API's use the key\nsecurity:\n  - ApiKeyAuth: []\n\n# Components/Schemas\ncomponents:\n  #API Key Configuration\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      in: query\n      name: access_token\n\n  schemas:\n    Error:\n      type: object\n      properties:\n        error:\n          type: string\n    \n    User:\n      type: object\n      properties:\n        email:\n          type: string\n        firstname:\n          type: string\n        lastname:\n          type: string\n        role:\n          type: string\n        userId:\n          type: string\n\n    App:\n      type: object\n      required:\n        - app_name\n      properties:\n        app_id:\n          type: integer\n          format: int64\n        app_name:\n          type: string\n        category:\n          type: string\n        etag:\n          type: string\n        status:\n          type: string\n        created:\n          type: string\n          format: date-time\n        modified:\n          type: string\n          format: date-time\n        notes:\n          type: string\n        monitoring_url:\n          type: string\n        go_live:\n          type: string\n          format: date-time\n        retired:\n          type: string\n          format: date-time\n      example:\n        app_name: 'SAP Relay'\n        category: 'iOS'\n        status: 'Active'\n        notes: 'v2 of our popular messaging app'\n        monitoring_url: 'https://'\n        go_live: '2019-01-01 00:00:10'\n    Apps:\n      type: array\n      items:\n        $ref: \"#/components/schemas/App\"\n\n    AppContact:\n      type: object\n      required:\n        - contact_id\n        - role\n      properties:\n        app_id:\n          type: integer\n          format: int64\n        contact_id:\n          type: integer\n          format: int64\n        role:\n          type: string\n      example:\n        contact_id: 1\n        role: 'App Contact'\n    AppContactList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/AppContact\"\n        \n    Keywords:\n      type: object\n      required:\n        - keyword\n        - description\n      properties:\n        app_id:\n          type: integer\n          format: int64\n        keyword:\n          type: string\n        description:\n          type: string\n        created:\n          type: string\n          format: date-time\n      example:\n        keyword: 'Jamf Version'\n        description: 'v1.0.3'\n    KeywordsList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Keywords\"\n\n    Help:\n      type: object\n      required:\n        - title\n        - description\n      properties:\n        app_id:\n          type: integer\n          format: int64\n        title:\n          type: string\n        description:\n          type: string\n        created:\n          type: string\n          format: date-time\n      example:\n        title: 'How to create a new direct chat in Relay'\n        description: '1. Click on the New Chat icon\\n2. Enter the chat name\\n3. Enter a chat description'\n    HelpList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Help\"\n\n    Announcements:\n      type: object\n      required:\n        - title\n        - description\n      properties:\n        app_id:\n          type: integer\n          format: int64\n        title:\n          type: string\n        description:\n          type: string\n        created:\n          type: string\n          format: date-time\n      example:\n        title: Relay will be in maintenance mode on 10th December\n        description: Due to some infrastructure changes, Relay will be unavailable for +- 3 hours on 10th December at 3:00pm CET until 6:00pm CET.\n    AnnouncementsList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Announcements\"\n\n    Release:\n      type: object\n      required:\n        - title\n        - description\n      properties:\n        app_id:\n          type: integer\n          format: int64\n        title:\n          type: string\n        description:\n          type: string\n        created:\n          type: string\n          format: date-time\n      example:\n        title: 'v1.0.2 Released'\n        description: 'We have just released v1.0.2 of SAP Relay.\\n This new version includes ....'\n    Releases:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Release\"\n\n    Contact:\n      type: object\n      required:\n        - first_name\n        - last_name\n        - external_id\n      properties:\n        contact_id:\n          type: integer\n          format: int64\n        first_name:\n          type: string\n        last_name:\n          type: string\n        external_id:\n          type: string\n      example:\n        first_name: 'Mike'\n        last_name: 'Smith'\n        external_id: 'i847772'\n    Contacts:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Contact\"\n\n    Setting:\n      type: object\n      properties:\n        setting_id:\n          type: integer\n          format: int64\n        setting_name:\n          type: string\n        setting_value:\n          type: string\n    Settings:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Setting\"\n    \n    UserSetting:\n      type: object\n      properties:\n        external_id:\n          type: string\n        setting_name:\n          type: string\n        setting_value:\n          type: string\n    UserSettings:\n      type: array\n      items:\n        $ref: \"#/components/schemas/UserSetting\"\n    \n    Notification:\n      type: object\n      required:\n        - notification_date\n        - notification_text        \n      properties:\n        notification_date:\n          type: date-time\n        notification_text:\n          type: string\n    Notifications:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Notification\"\n\n    #Defaults\n    Standard:\n      type: object\n      required:\n        - status\n        - message\n      properties:\n        status:\n          type: string\n        message:\n          type: string\n    Error:\n      type: object\n      required:\n        - data\n      properties:\n        data:\n          type: string",
			"canonicalURL": "/github.com/SAP/application-support-center@1688479e7e2bd16bbe6eff0d1cc4bd7e7a6f547d/-/blob/server/resources/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/SAP/application-support-center/blob/1688479e7e2bd16bbe6eff0d1cc4bd7e7a6f547d/server/resources/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: schemas: \"Notification\": parse schema: property \"notification_date\": at 1:2981: parse schema: unexpected schema type: \"date-time\""
}