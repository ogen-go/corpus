{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/DataJunction/dj"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "openapi.json",
			"byteSize": 34516,
			"content": "{\n    \"openapi\": \"3.0.2\",\n    \"info\": {\n        \"title\": \"DJ server\",\n        \"description\": \"A DataJunction metrics repository\",\n        \"license\": {\n            \"name\": \"MIT License\",\n            \"url\": \"https://mit-license.org/\"\n        },\n        \"version\": \"0.0.post1.dev1+g2c5d4fa\"\n    },\n    \"paths\": {\n        \"/databases/\": {\n            \"get\": {\n                \"summary\": \"Read Databases\",\n                \"description\": \"List the available databases.\",\n                \"operationId\": \"read_databases_databases__get\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful Response\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"title\": \"Response Read Databases Databases  Get\",\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Database\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/queries/\": {\n            \"post\": {\n                \"summary\": \"Submit Query\",\n                \"description\": \"Run or schedule a query.\\n\\nThis endpoint is different from others in that it accepts both JSON and msgpack, and\\ncan also return JSON or msgpack, depending on HTTP headers.\",\n                \"operationId\": \"submit_query_queries__post\",\n                \"parameters\": [\n                    {\n                        \"required\": false,\n                        \"schema\": {\n                            \"title\": \"Accept\",\n                            \"type\": \"string\"\n                        },\n                        \"name\": \"accept\",\n                        \"in\": \"header\"\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"title\": \"QueryCreate\",\n                                \"required\": [\n                                    \"database_id\",\n                                    \"submitted_query\"\n                                ],\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"database_id\": {\n                                        \"title\": \"Database Id\",\n                                        \"type\": \"integer\"\n                                    },\n                                    \"catalog\": {\n                                        \"title\": \"Catalog\",\n                                        \"type\": \"string\"\n                                    },\n                                    \"schema\": {\n                                        \"title\": \"Schema\",\n                                        \"type\": \"string\"\n                                    },\n                                    \"submitted_query\": {\n                                        \"title\": \"Submitted Query\",\n                                        \"type\": \"string\"\n                                    }\n                                },\n                                \"description\": \"Model for submitted queries.\"\n                            }\n                        },\n                        \"application/msgpack\": {\n                            \"schema\": {\n                                \"title\": \"QueryCreate\",\n                                \"required\": [\n                                    \"database_id\",\n                                    \"submitted_query\"\n                                ],\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"database_id\": {\n                                        \"title\": \"Database Id\",\n                                        \"type\": \"integer\"\n                                    },\n                                    \"catalog\": {\n                                        \"title\": \"Catalog\",\n                                        \"type\": \"string\"\n                                    },\n                                    \"schema\": {\n                                        \"title\": \"Schema\",\n                                        \"type\": \"string\"\n                                    },\n                                    \"submitted_query\": {\n                                        \"title\": \"Submitted Query\",\n                                        \"type\": \"string\"\n                                    }\n                                },\n                                \"description\": \"Model for submitted queries.\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Return results as JSON or msgpack\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/QueryWithResults\"\n                                }\n                            },\n                            \"application/msgpack\": {}\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation Error\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/queries/{query_id}/\": {\n            \"get\": {\n                \"summary\": \"Read Query\",\n                \"description\": \"Fetch information about a query.\\n\\nFor paginated queries we move the data from the results backend to the cache for a\\nshort period, anticipating additional requests.\",\n                \"operationId\": \"read_query_queries__query_id___get\",\n                \"parameters\": [\n                    {\n                        \"required\": true,\n                        \"schema\": {\n                            \"title\": \"Query Id\",\n                            \"type\": \"string\",\n                            \"format\": \"uuid\"\n                        },\n                        \"name\": \"query_id\",\n                        \"in\": \"path\"\n                    },\n                    {\n                        \"required\": false,\n                        \"schema\": {\n                            \"title\": \"Limit\",\n                            \"type\": \"integer\",\n                            \"default\": 0\n                        },\n                        \"name\": \"limit\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"required\": false,\n                        \"schema\": {\n                            \"title\": \"Offset\",\n                            \"type\": \"integer\",\n                            \"default\": 0\n                        },\n                        \"name\": \"offset\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful Response\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/QueryWithResults\"\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation Error\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/metrics/\": {\n            \"get\": {\n                \"summary\": \"Read Metrics\",\n                \"description\": \"List all available metrics.\",\n                \"operationId\": \"read_metrics_metrics__get\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful Response\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"title\": \"Response Read Metrics Metrics  Get\",\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Metric\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/metrics/{node_id}/\": {\n            \"get\": {\n                \"summary\": \"Read Metric\",\n                \"description\": \"Return a metric by ID.\",\n                \"operationId\": \"read_metric_metrics__node_id___get\",\n                \"parameters\": [\n                    {\n                        \"required\": true,\n                        \"schema\": {\n                            \"title\": \"Node Id\",\n                            \"type\": \"integer\"\n                        },\n                        \"name\": \"node_id\",\n                        \"in\": \"path\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful Response\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Metric\"\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation Error\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/metrics/{node_id}/data/\": {\n            \"get\": {\n                \"summary\": \"Read Metrics Data\",\n                \"description\": \"Return data for a metric.\",\n                \"operationId\": \"read_metrics_data_metrics__node_id__data__get\",\n                \"parameters\": [\n                    {\n                        \"required\": true,\n                        \"schema\": {\n                            \"title\": \"Node Id\",\n                            \"type\": \"integer\"\n                        },\n                        \"name\": \"node_id\",\n                        \"in\": \"path\"\n                    },\n                    {\n                        \"required\": false,\n                        \"schema\": {\n                            \"title\": \"Database Id\",\n                            \"type\": \"integer\"\n                        },\n                        \"name\": \"database_id\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"required\": false,\n                        \"schema\": {\n                            \"title\": \"D\",\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            },\n                            \"default\": []\n                        },\n                        \"name\": \"d\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"required\": false,\n                        \"schema\": {\n                            \"title\": \"F\",\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            },\n                            \"default\": []\n                        },\n                        \"name\": \"f\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful Response\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/QueryWithResults\"\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation Error\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/metrics/{node_id}/sql/\": {\n            \"get\": {\n                \"summary\": \"Read Metrics Sql\",\n                \"description\": \"Return SQL for a metric.\\n\\nA database can be optionally specified. If no database is specified the optimal one\\nwill be used.\",\n                \"operationId\": \"read_metrics_sql_metrics__node_id__sql__get\",\n                \"parameters\": [\n                    {\n                        \"required\": true,\n                        \"schema\": {\n                            \"title\": \"Node Id\",\n                            \"type\": \"integer\"\n                        },\n                        \"name\": \"node_id\",\n                        \"in\": \"path\"\n                    },\n                    {\n                        \"required\": false,\n                        \"schema\": {\n                            \"title\": \"Database Id\",\n                            \"type\": \"integer\"\n                        },\n                        \"name\": \"database_id\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"required\": false,\n                        \"schema\": {\n                            \"title\": \"D\",\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            },\n                            \"default\": []\n                        },\n                        \"name\": \"d\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"required\": false,\n                        \"schema\": {\n                            \"title\": \"F\",\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            },\n                            \"default\": []\n                        },\n                        \"name\": \"f\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful Response\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/TranslatedSQL\"\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation Error\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/nodes/\": {\n            \"get\": {\n                \"summary\": \"Read Nodes\",\n                \"description\": \"List the available nodes.\",\n                \"operationId\": \"read_nodes_nodes__get\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful Response\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"title\": \"Response Read Nodes Nodes  Get\",\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/NodeMetadata\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/graphql\": {\n            \"get\": {\n                \"summary\": \"Handle Http Get\",\n                \"operationId\": \"handle_http_get_graphql_get\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"The GraphiQL integrated development environment.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Not found if GraphiQL is not enabled.\"\n                    }\n                }\n            },\n            \"post\": {\n                \"summary\": \"Handle Http Post\",\n                \"operationId\": \"handle_http_post_graphql_post\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful Response\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {}\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    },\n    \"components\": {\n        \"schemas\": {\n            \"ColumnMetadata\": {\n                \"title\": \"ColumnMetadata\",\n                \"required\": [\n                    \"name\",\n                    \"type\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"name\": {\n                        \"title\": \"Name\",\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/ColumnType\"\n                    }\n                },\n                \"description\": \"A simple model for column metadata.\"\n            },\n            \"ColumnType\": {\n                \"title\": \"ColumnType\",\n                \"enum\": [\n                    \"BYTES\",\n                    \"STR\",\n                    \"FLOAT\",\n                    \"INT\",\n                    \"DECIMAL\",\n                    \"BOOL\",\n                    \"DATETIME\",\n                    \"DATE\",\n                    \"TIME\",\n                    \"TIMEDELTA\",\n                    \"LIST\",\n                    \"DICT\"\n                ],\n                \"type\": \"string\",\n                \"description\": \"\\n    Types for columns.\\n\\n    These represent the values from the ``python_type`` attribute in SQLAlchemy columns.\\n    \"\n            },\n            \"Database\": {\n                \"title\": \"Database\",\n                \"required\": [\n                    \"name\",\n                    \"URI\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"title\": \"Id\",\n                        \"type\": \"integer\"\n                    },\n                    \"uuid\": {\n                        \"title\": \"Uuid\",\n                        \"type\": \"string\",\n                        \"format\": \"uuid\"\n                    },\n                    \"name\": {\n                        \"title\": \"Name\",\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"title\": \"Description\",\n                        \"type\": \"string\",\n                        \"default\": \"\"\n                    },\n                    \"URI\": {\n                        \"title\": \"Uri\",\n                        \"type\": \"string\"\n                    },\n                    \"extra_params\": {\n                        \"title\": \"Extra Params\",\n                        \"type\": \"object\",\n                        \"default\": {}\n                    },\n                    \"read_only\": {\n                        \"title\": \"Read Only\",\n                        \"type\": \"boolean\",\n                        \"default\": true\n                    },\n                    \"async_\": {\n                        \"title\": \"Async \",\n                        \"type\": \"boolean\",\n                        \"default\": false\n                    },\n                    \"cost\": {\n                        \"title\": \"Cost\",\n                        \"type\": \"number\",\n                        \"default\": 1.0\n                    },\n                    \"created_at\": {\n                        \"title\": \"Created At\",\n                        \"type\": \"string\",\n                        \"format\": \"date-time\"\n                    },\n                    \"updated_at\": {\n                        \"title\": \"Updated At\",\n                        \"type\": \"string\",\n                        \"format\": \"date-time\"\n                    }\n                },\n                \"description\": \"A database.\\n\\nA simple example:\\n\\n    name: druid\\n    description: An Apache Druid database\\n    URI: druid://localhost:8082/druid/v2/sql/\\n    read-only: true\\n    async_: false\\n    cost: 1.0\"\n            },\n            \"HTTPValidationError\": {\n                \"title\": \"HTTPValidationError\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"detail\": {\n                        \"title\": \"Detail\",\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ValidationError\"\n                        }\n                    }\n                }\n            },\n            \"Metric\": {\n                \"title\": \"Metric\",\n                \"required\": [\n                    \"id\",\n                    \"name\",\n                    \"created_at\",\n                    \"updated_at\",\n                    \"query\",\n                    \"dimensions\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"title\": \"Id\",\n                        \"type\": \"integer\"\n                    },\n                    \"name\": {\n                        \"title\": \"Name\",\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"title\": \"Description\",\n                        \"type\": \"string\",\n                        \"default\": \"\"\n                    },\n                    \"created_at\": {\n                        \"title\": \"Created At\",\n                        \"type\": \"string\",\n                        \"format\": \"date-time\"\n                    },\n                    \"updated_at\": {\n                        \"title\": \"Updated At\",\n                        \"type\": \"string\",\n                        \"format\": \"date-time\"\n                    },\n                    \"query\": {\n                        \"title\": \"Query\",\n                        \"type\": \"string\"\n                    },\n                    \"dimensions\": {\n                        \"title\": \"Dimensions\",\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"description\": \"Class for a metric.\"\n            },\n            \"NodeMetadata\": {\n                \"title\": \"NodeMetadata\",\n                \"required\": [\n                    \"id\",\n                    \"name\",\n                    \"created_at\",\n                    \"updated_at\",\n                    \"type\",\n                    \"columns\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"title\": \"Id\",\n                        \"type\": \"integer\"\n                    },\n                    \"name\": {\n                        \"title\": \"Name\",\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"title\": \"Description\",\n                        \"type\": \"string\",\n                        \"default\": \"\"\n                    },\n                    \"created_at\": {\n                        \"title\": \"Created At\",\n                        \"type\": \"string\",\n                        \"format\": \"date-time\"\n                    },\n                    \"updated_at\": {\n                        \"title\": \"Updated At\",\n                        \"type\": \"string\",\n                        \"format\": \"date-time\"\n                    },\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/NodeType\"\n                    },\n                    \"query\": {\n                        \"title\": \"Query\",\n                        \"type\": \"string\"\n                    },\n                    \"columns\": {\n                        \"title\": \"Columns\",\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/SimpleColumn\"\n                        }\n                    }\n                },\n                \"description\": \"A node with information about columns and if it is a metric.\"\n            },\n            \"NodeType\": {\n                \"title\": \"NodeType\",\n                \"enum\": [\n                    \"source\",\n                    \"transform\",\n                    \"metric\",\n                    \"dimension\"\n                ],\n                \"type\": \"string\",\n                \"description\": \"\\n    Node type.\\n\\n    A node can have 4 types, currently:\\n\\n    1. SOURCE nodes are root nodes in the DAG, and point to tables or views in a DB.\\n    2. TRANSFORM nodes are SQL transformations, reading from SOURCE/TRANSFORM nodes.\\n    3. METRIC nodes are leaves in the DAG, and have a single aggregation query.\\n    4. DIMENSION nodes are special SOURCE nodes that can be auto-joined with METRICS.\\n    \"\n            },\n            \"QueryResults\": {\n                \"title\": \"QueryResults\",\n                \"type\": \"array\",\n                \"items\": {\n                    \"$ref\": \"#/components/schemas/StatementResults\"\n                },\n                \"description\": \"Results for a given query.\"\n            },\n            \"QueryState\": {\n                \"title\": \"QueryState\",\n                \"enum\": [\n                    \"UNKNOWN\",\n                    \"ACCEPTED\",\n                    \"SCHEDULED\",\n                    \"RUNNING\",\n                    \"FINISHED\",\n                    \"CANCELED\",\n                    \"FAILED\"\n                ],\n                \"type\": \"string\",\n                \"description\": \"\\n    Different states of a query.\\n    \"\n            },\n            \"QueryWithResults\": {\n                \"title\": \"QueryWithResults\",\n                \"required\": [\n                    \"database_id\",\n                    \"id\",\n                    \"submitted_query\",\n                    \"results\",\n                    \"errors\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"database_id\": {\n                        \"title\": \"Database Id\",\n                        \"type\": \"integer\"\n                    },\n                    \"catalog\": {\n                        \"title\": \"Catalog\",\n                        \"type\": \"string\"\n                    },\n                    \"schema\": {\n                        \"title\": \"Schema\",\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"title\": \"Id\",\n                        \"type\": \"string\",\n                        \"format\": \"uuid\"\n                    },\n                    \"submitted_query\": {\n                        \"title\": \"Submitted Query\",\n                        \"type\": \"string\"\n                    },\n                    \"executed_query\": {\n                        \"title\": \"Executed Query\",\n                        \"type\": \"string\"\n                    },\n                    \"scheduled\": {\n                        \"title\": \"Scheduled\",\n                        \"type\": \"string\",\n                        \"format\": \"date-time\"\n                    },\n                    \"started\": {\n                        \"title\": \"Started\",\n                        \"type\": \"string\",\n                        \"format\": \"date-time\"\n                    },\n                    \"finished\": {\n                        \"title\": \"Finished\",\n                        \"type\": \"string\",\n                        \"format\": \"date-time\"\n                    },\n                    \"state\": {\n                        \"allOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/QueryState\"\n                            }\n                        ],\n                        \"default\": \"UNKNOWN\"\n                    },\n                    \"progress\": {\n                        \"title\": \"Progress\",\n                        \"type\": \"number\",\n                        \"default\": 0.0\n                    },\n                    \"results\": {\n                        \"$ref\": \"#/components/schemas/QueryResults\"\n                    },\n                    \"next\": {\n                        \"title\": \"Next\",\n                        \"maxLength\": 65536,\n                        \"minLength\": 1,\n                        \"type\": \"string\",\n                        \"format\": \"uri\"\n                    },\n                    \"previous\": {\n                        \"title\": \"Previous\",\n                        \"maxLength\": 65536,\n                        \"minLength\": 1,\n                        \"type\": \"string\",\n                        \"format\": \"uri\"\n                    },\n                    \"errors\": {\n                        \"title\": \"Errors\",\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"description\": \"Model for query with results.\"\n            },\n            \"SimpleColumn\": {\n                \"title\": \"SimpleColumn\",\n                \"required\": [\n                    \"name\",\n                    \"type\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"name\": {\n                        \"title\": \"Name\",\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/ColumnType\"\n                    }\n                },\n                \"description\": \"A simplified column schema, without ID or dimensions.\"\n            },\n            \"StatementResults\": {\n                \"title\": \"StatementResults\",\n                \"required\": [\n                    \"sql\",\n                    \"columns\",\n                    \"rows\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"sql\": {\n                        \"title\": \"Sql\",\n                        \"type\": \"string\"\n                    },\n                    \"columns\": {\n                        \"title\": \"Columns\",\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ColumnMetadata\"\n                        }\n                    },\n                    \"rows\": {\n                        \"title\": \"Rows\",\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"array\",\n                            \"items\": {}\n                        }\n                    },\n                    \"row_count\": {\n                        \"title\": \"Row Count\",\n                        \"type\": \"integer\",\n                        \"default\": 0\n                    }\n                },\n                \"description\": \"Results for a given statement.\\n\\nThis contains the SQL, column names and types, and rows\"\n            },\n            \"TranslatedSQL\": {\n                \"title\": \"TranslatedSQL\",\n                \"required\": [\n                    \"database_id\",\n                    \"sql\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"database_id\": {\n                        \"title\": \"Database Id\",\n                        \"type\": \"integer\"\n                    },\n                    \"sql\": {\n                        \"title\": \"Sql\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"description\": \"Class for SQL generated from a given metric.\"\n            },\n            \"ValidationError\": {\n                \"title\": \"ValidationError\",\n                \"required\": [\n                    \"loc\",\n                    \"msg\",\n                    \"type\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"loc\": {\n                        \"title\": \"Location\",\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"msg\": {\n                        \"title\": \"Message\",\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"title\": \"Error Type\",\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}",
			"canonicalURL": "/github.com/DataJunction/dj@63f3a538a10306d74f1b812273f19963eaa85c28/-/blob/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/DataJunction/dj/blob/63f3a538a10306d74f1b812273f19963eaa85c28/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"QueryWithResults\": resolve \"#/components/schemas/QueryWithResults\": property \"state\": at openapi.json:777:36: parse default: unexpected type: \"\""
}