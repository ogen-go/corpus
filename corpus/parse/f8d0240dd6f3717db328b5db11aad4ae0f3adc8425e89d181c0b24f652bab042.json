{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/featurehub-io/featurehub"
		},
		"file": {
			"name": "dacha-api.yaml",
			"size": 0,
			"path": "backend/dacha-api/dacha-api.yaml",
			"byteSize": 6349,
			"content": "openapi: 3.0.1\ninfo:\n  title: Cache (Dache) API\n  description: This is used by the Edge servers to access features and environments quickly.\n  version: \"1.1.1\"\npaths:\n  /v2/environment/{eId}/{serviceAccountKey}:\n    parameters:\n      - name: eId\n        description: \"id of environment\"\n        in: path\n        schema:\n          type: string\n          format: uuid\n        required: true\n      - name: serviceAccountKey\n        description: \"serviceAccountKey of service account\"\n        in: path\n        schema:\n          type: string\n        required: true\n      - name: excludeRetired\n        description: \"exclude retired features\"\n        in: query\n        schema:\n          type: boolean\n        required: false\n    get:\n      operationId: getApiKeyDetails\n      tags:\n        - DachaApiKeyService\n      responses:\n        200:\n          description: \"All feature values for this environment\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DachaKeyDetailsResponse\"\n        404:\n          description: \"No such environment/account combo has read access\"\n  /v2/environment/{eId}/{serviceAccountKey}/permissions/{featureKey}:\n    parameters:\n      - name: eId\n        description: \"id of environment\"\n        in: path\n        schema:\n          type: string\n          format: uuid\n      - name: serviceAccountKey\n        description: \"id of service account\"\n        in: path\n        schema:\n          type: string\n      - name: featureKey\n        in: path\n        description: \"The key that we want\"\n        schema:\n          type: string\n    get:\n      operationId: getApiKeyPermissions\n      tags:\n        - DachaApiKeyService\n      responses:\n        200:\n          description: \"All permissions and feature values for this environment\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DachaPermissionResponse\"\n        404:\n          description: \"No such environment/account combo has read access\"\n  /v2/environment/{eId}/structure:\n    parameters:\n      - name: eId\n        description: \"id of environment\"\n        in: path\n        schema:\n          type: string\n          format: uuid\n    get:\n      operationId: getEnvironmentStructure\n      tags:\n        - DachaEnvironmentService\n      responses:\n        200:\n          description: \"The parent structure for this environment\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DachaStructureResponse\"\n        404:\n          description: \"No such environment/account combo has read access\"\ncomponents:\n  schemas:\n    DachaNATSRequest:\n      type: object\n      properties:\n        featuresRequest:\n          $ref: \"#/components/schemas/DachaKeyDetailsRequest\"\n        permissionRequest:\n          $ref: \"#/components/schemas/DachaPermissionRequest\"\n    DachaNATSResponse:\n      type: object\n      required:\n        - status\n      properties:\n        status:\n          type: integer\n          format: int32\n        featuresResponse:\n          $ref: \"#/components/schemas/DachaKeyDetailsResponse\"\n        permissionResponse:\n          $ref: \"#/components/schemas/DachaPermissionResponse\"\n    DachaKeyDetailsRequest:\n      description: \"Used when communication is via NATS for getApiKeyDetails request\"\n      required:\n        - eId\n        - serviceAccountKey\n      properties:\n        eId:\n          type: string\n          format: uuid\n        serviceAccountKey:\n          type: string\n        excludeRetired:\n          type: boolean\n    DachaPermissionRequest:\n      description: \"Used for permission request when communication is via NATS from Edge for getApiKeyPermissions\"\n      allOf:\n        - $ref: \"#/components/schemas/DachaKeyDetailsRequest\"\n        - type: object\n          required:\n            - featureKey\n            - eId\n            - serviceAccountKey\n          properties:\n            featureKey:\n              type: string\n\n    DachaStructureResponse:\n      x-package: io.featurehub.dacha.model\n      type: object\n      required:\n        - organizationId\n        - portfolioId\n        - applicationId\n      properties:\n        organizationId:\n          x-basename: oId\n          type: string\n          format: uuid\n        portfolioId:\n          x-basename: pId\n          type: string\n          format: uuid\n        applicationId:\n          x-basename: aId\n          type: string\n          format: uuid\n    DachaPermissionResponse:\n      x-package: io.featurehub.dacha.model\n      type: object\n      required:\n        - roles\n        - feature\n      properties:\n        organizationId:\n          x-basename: oId\n          type: string\n          format: uuid\n        portfolioId:\n          x-basename: pId\n          type: string\n          format: uuid\n        applicationId:\n          x-basename: aId\n          type: string\n          format: uuid\n        serviceKeyId:\n          description: \"The actual service key id rather than the key\"\n          x-basename: sId\n          type: string\n          format: uuid\n        environmentInfo:\n          description: \"Allows extensibility for the environment\"\n          x-basename: eInf\n          additionalProperties:\n            type: string\n        roles:\n          type: array\n          items:\n            $ref: \"#/components/schemas/RoleType\"\n        feature:\n          $ref: \"#/components/schemas/CacheEnvironmentFeature\"\n    DachaKeyDetailsResponse:\n      x-package: io.featurehub.dacha.model\n      properties:\n        etag:\n          x-basename: etag\n          type: string\n        organizationId:\n          x-basename: oId\n          type: string\n          format: uuid\n        portfolioId:\n          x-basename: pId\n          type: string\n          format: uuid\n        applicationId:\n          x-basename: aId\n          type: string\n          format: uuid\n        serviceKeyId:\n          description: \"The actual service key id rather than the key\"\n          x-basename: sId\n          type: string\n          format: uuid\n        environmentInfo:\n          description: \"Allows extensibility for the environment\"\n          x-basename: eInf\n          additionalProperties:\n            type: string\n        features:\n          type: array\n          items:\n            $ref: \"#/components/schemas/CacheEnvironmentFeature\"\n\n",
			"canonicalURL": "/github.com/featurehub-io/featurehub@7534670e2ea274d2f60d4739f98aad2b3b1d326a/-/blob/backend/dacha-api/dacha-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/featurehub-io/featurehub/blob/7534670e2ea274d2f60d4739f98aad2b3b1d326a/backend/dacha-api/dacha-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"DachaKeyDetailsResponse\": parse schema: property \"features\": parse schema: parse schema: at 1:624: find schema: resolve: can't find value for \"components/schemas/CacheEnvironmentFeature\""
}