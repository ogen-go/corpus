{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/oas-tools/oas-tools"
		},
		"file": {
			"name": "3.0.yaml",
			"size": 0,
			"path": "tests/testServer/api/3.0.yaml",
			"byteSize": 6375,
			"content": "openapi: 3.0.0\ninfo:\n  version: 0.1.0\n  title: Test server\n  description: Server for OAS-Tools Testing\npaths:\n  # OAS PARAMS TEST ENDPOINTS\n  /api/v1/oasParams:\n    x-router-controller: oasParamsTestController\n    get:\n      operationId: getRequest\n      parameters:\n        - $ref: 'subschemas/oasparams.yaml#/noexplode/queryparams/0'\n        - $ref: 'subschemas/oasparams.yaml#/noexplode/queryparams/1'\n        - $ref: 'subschemas/oasparams.yaml#/noexplode/queryparams/2'\n        - $ref: 'subschemas/oasparams.yaml#/noexplode/headerparams/0'\n        - $ref: 'subschemas/oasparams.yaml#/noexplode/cookieparams/0'\n      responses:\n        '200': {$ref: 'subschemas/responses.yaml#/200'}\n  /api/v1/oasParams/explode:\n    x-router-controller: oasParamsTestController\n    get:\n      operationId: getRequest\n      parameters:\n        - $ref: 'subschemas/oasparams.yaml#/explode/queryparams/0'\n        - $ref: 'subschemas/oasparams.yaml#/explode/queryparams/1'\n        - $ref: 'subschemas/oasparams.yaml#/explode/queryparams/2'\n        - $ref: 'subschemas/oasparams.yaml#/explode/queryparams/3'\n        - $ref: 'subschemas/oasparams.yaml#/explode/headerparams/0'\n        - $ref: 'subschemas/oasparams.yaml#/explode/cookieparams/0'\n      responses:\n        '200': {$ref: 'subschemas/responses.yaml#/200'}\n  /api/v1/oasParams/{testparamsimple}/{testparamslabel}/{testparamsmatrix}:\n    x-router-controller: oasParamsTestController\n    get:\n      operationId: getRequest\n      parameters:\n        - $ref: 'subschemas/oasparams.yaml#/noexplode/pathparams/0'\n        - $ref: 'subschemas/oasparams.yaml#/noexplode/pathparams/1'\n        - $ref: 'subschemas/oasparams.yaml#/noexplode/pathparams/2'\n\n      responses:\n        '200': {$ref: 'subschemas/responses.yaml#/200'}\n  /api/v1/oasParams/explode/{testparamsimple}/{testparamslabel}/{testparamsmatrix}:\n    x-router-controller: oasParamsTestController\n    get:\n      operationId: getRequest\n      parameters:\n        - $ref: 'subschemas/oasparams.yaml#/explode/pathparams/0'\n        - $ref: 'subschemas/oasparams.yaml#/explode/pathparams/1'\n        - $ref: 'subschemas/oasparams.yaml#/explode/pathparams/2'\n      responses:\n        '200': {$ref: 'subschemas/responses.yaml#/200'}\n\n  # OAS SECURITY TEST ENDPOINT\n  /api/v1/oasSecurity:\n    x-router-controller: oasSecurityTestController\n    get:\n      operationId: getRequest\n      security: # basicAuth AND openID OR apiKey(all three)\n        - basicAuth: []\n          openID: [read, write]\n        - apiKeyQuery: []\n          apiKeyHeader: []\n          apiKeyCookie: []\n      responses:\n        '200': {$ref: 'subschemas/responses.yaml#/200'}\n        \n  /api/v1/oasSecurity/bearer:\n    x-router-controller: oasSecurityTestController\n    get:\n      operationId: getRequest\n      security:\n        - bearerAuth: []\n      responses:\n        '200': {$ref: 'subschemas/responses.yaml#/200'}\n  \n  /api/v1/oasSecurity/invalid:\n    x-router-controller: oasSecurityTestController\n    get:\n      operationId: getRequest\n      security:\n        - undeclaredScheme: []\n      responses:\n        '500': {$ref: 'subschemas/responses.yaml#/500'}\n\n  # OAS REQUEST VALIDATOR TEST ENDPOINT\n  /api/v1/oasRequestValidator:\n    x-router-controller: oasRequestValidatorTestController\n    post:\n      operationId: postRequest\n      parameters:\n        - name: queryparamform\n          required: true\n          explode: false\n          style: form\n          in: query\n          schema:\n            type: boolean\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - test\n              properties:\n                test:\n                  type: string\n      responses:\n        '200': {$ref: 'subschemas/responses.yaml#/200'}\n        '400': {$ref: 'subschemas/responses.yaml#/400'}\n  /api/v1/oasRequestValidator/missingBody:\n    x-router-controller: oasRequestValidatorTestController\n    post:\n      operationId: postRequest\n      responses:\n        '400': {$ref: 'subschemas/responses.yaml#/400'}\n\n  # OAS ROUTER TEST ENDPOINT\n  /api/v1/oasRouter:\n    get:\n      operationId: getRequest\n      x-router-controller: oasRouterTestController\n      responses:\n        '200': {$ref: 'subschemas/responses.yaml#/200'}\n  /api/v1/oasRouter/async: \n    get:\n      operationId: getRequestAsync\n      x-router-controller: oasRouterTestController\n      responses:\n        '200': {$ref: 'subschemas/responses.yaml#/200'}\n\n  # OAS RESPONSE VALIDATOR TEST ENDPOINT\n  /api/v1/oasResponseValidator:\n    x-router-controller: oasResponseValidatorTestController\n    get:\n      operationId: getRequest\n      responses:\n        '200': {$ref: 'subschemas/responses.yaml#/200'}\n    delete:\n      operationId: deleteRequest\n      responses:\n        '204': {$ref: 'subschemas/responses.yaml#/204'}\n  \n  /api/v1/oasResponseValidator/unexpectedResponse:\n    x-router-controller: oasResponseValidatorTestController\n    get:\n      operationId: getRequestUnexpected\n      responses:\n        '200': {$ref: 'subschemas/responses.yaml#/200'}\n\n  /api/v1/oasResponseValidator/wrongData:\n    x-router-controller: oasResponseValidatorTestController\n    get:\n      operationId: getRequestWrongData\n      responses:\n        '200': {$ref: 'subschemas/responses.yaml#/200'}\n\n # OAS ERROR HANDLER TEST ENDPOINT\n  /api/v1/oasErrorHandler/{error}:\n    get:\n      operationId: getRequest\n      x-router-controller: oasErrorHandlerTestController\n      parameters:\n        - name: error\n          required: true\n          in: path\n          schema:\n            type: string\n      responses:\n        '400': {$ref: 'subschemas/responses.yaml#/400'}\n        '401': {$ref: 'subschemas/responses.yaml#/401'}\n        '403': {$ref: 'subschemas/responses.yaml#/403'}\n        '406': {$ref: 'subschemas/responses.yaml#/406'}\n        '500': {$ref: 'subschemas/responses.yaml#/500'}\ncomponents:\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n    bearerAuth:\n      type: http\n      scheme: bearer\n    apiKeyHeader:\n      name: apiKeyHeader\n      type: apiKey\n      in: header\n    apiKeyCookie:\n      name: apiKeyCookie\n      type: apiKey\n      in: cookie\n    apiKeyQuery:\n      name: apiKeyQuery\n      type: apiKey\n      in: query\n    openID:\n      type: openIdConnect\n      openIdConnectUrl: https://test.com/openid/connect   ",
			"canonicalURL": "/github.com/oas-tools/oas-tools@f82c121b9e91e04c95749fbad1f6a4f83c78f90a/-/blob/tests/testServer/api/3.0.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/oas-tools/oas-tools/blob/f82c121b9e91e04c95749fbad1f6a4f83c78f90a/tests/testServer/api/3.0.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/api/v1/oasErrorHandler/{error}\": get: operation \"getRequest\": responses: 403: at 1:820: external \"subschemas/responses.yaml\": get: file: local file reference is not allowed"
}