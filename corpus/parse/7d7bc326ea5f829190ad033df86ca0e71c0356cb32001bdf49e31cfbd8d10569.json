{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/sailpoint-oss/developer.sailpoint.com"
		},
		"file": {
			"name": "sailpoint-api.beta.yaml",
			"size": 0,
			"path": "static/api-specs/idn/sailpoint-api.beta.yaml",
			"byteSize": 97089,
			"content": "openapi: 3.0.1\ninfo:\n  title: IdentityNow Beta API\n  description: \"Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.\"\n  termsOfService: https://developer.sailpoint.com/discuss/tos\n  contact:\n    name: Developer Relations\n    url: https://developer.sailpoint.com/discuss/api-help\n  license: \n    name: MIT\n    url: https://opensource.org/licenses/MIT \n  version: 3.1.0-beta\nservers:\n  - url: https://{tenant}.api.identitynow.com/beta\n    description: This is the beta API server.\n    variables:\n      tenant:\n        default: sailpoint\n        description: This is the name of your tenant, typically your company's name.\ntags:\n  - name: Access Profiles\n    description: |\n      Use this API to implement and customize access profile functionality. \n      With this functionality in place, administrators can create access profiles and configure them for use throughout IdentityNow, enabling users to get the access they need quickly and securely.\n      \n      Access profiles group entitlements, which represent access rights on sources. \n\n      For example, an Active Directory source in IdentityNow can have multiple entitlements: the first, 'Employees,' may represent the access all employees have at the organization, and a second, 'Developers,' may represent the access all developers have at the organization.\n      \n      An administrator can then create a broader set of access in the form of an access profile, 'AD Developers' grouping the 'Employees' entitlement with the 'Developers' entitlement.\n      \n      When users only need Active Directory employee access, they can request access to the 'Employees' entitlement.\n      \n      When users need both Active Directory employee and developer access, they can request access to the 'AD Developers' access profile.\n      \n      Access profiles are the most important units of access in IdentityNow. IdentityNow uses access profiles in many features, including the following:\n      \n      - Provisioning: When you use the Provisioning Service, lifecycle states and roles both grant access to users in the form of access profiles.\n      \n      - Certifications: You can approve or revoke access profiles in certification campaigns, just like entitlements. \n      \n      - Access Requests: You can assign access profiles to applications, and when a user requests access to the app associated with an access profile and someone approves the request, access is granted to both the application and its associated access profile.\n\n      - Roles: You can group one or more access profiles into a role to quickly assign access items based on an identity's role. \n      \n      In IdentityNow, administrators can use the Access drop-down menu and select Access Profiles to view, configure, and delete existing access profiles, as well as create new ones. \n      Administrators can enable and disable an access profile, and they can also make the following configurations: \n      \n      - Manage Entitlements: Manage the profile's access by adding and removing entitlements. \n      \n      - Access Requests: Configure access profiles to be requestable and establish an approval process for any requests that the access profile be granted or revoked. \n      Do not configure an access profile to be requestable without first establishing a secure access request approval process for the access profile.\n      \n      - Multiple Account Options: Define the logic IdentityNow uses to provision access to an identity with multiple accounts on the source. \n\n      Refer to [Managing Access Profiles](https://documentation.sailpoint.com/saas/help/access/access-profiles.html) for more information about access profiles.  \n  - name: Access Request Approvals\n    description: |\n      Use this API to implement and customize access request approval functionality. \n      With this functionality in place, administrators can delegate qualified users to review users' requests for access or managers' requests to revoke team members' access to applications, entitlements, or roles.      \n      This enables more qualified users to review access requests and the others to spend their time on other tasks.  \n      \n      In IdentityNow, users can request access to applications, entitlements, and roles, and managers can request that team members' access be revoked.   \n      For applications and entitlements, administrators can set access profiles to require approval from the access profile owner, the application owner, the source owner, the requesting user's manager, or a governance group for access to be granted or revoked.   \n      For roles, administrators can also set roles to allow access requests and require approval from the role owner, the requesting user's manager, or a governance group for access to be granted or revoked.   \n      If the administrator designates a governance group as the required approver, any governance group member can approve the requests.\n         \n      When a user submits an access request, IdentityNow sends the first required approver in the queue an email notification, based on the access request configuration's approval and reminder escalation configuration.\n\n      In Approvals in IdentityNow, required approvers can view pending access requests under the Requested tab and approve or deny them, or the approvers can reassign the requests to different reviewers for approval.   \n      If the required approver approves the request and is the only reviewer required, IdentityNow grants or revokes access, based on the request.   \n      If multiple reviewers are required, IdentityNow sends the request to the next reviewer in the queue, based on the access request configuration's approval reminder and escalation configuration.   \n      The required approver can then view any completed access requests under the Reviewed tab.     \n      \n      Refer to [Access Requests](https://documentation.sailpoint.com/saas/help/requests/index.html) for more information about access request approvals.\n  - name: Access Requests\n    description: |\n      Use this API to implement and customize access request functionality. \n      With this functionality in place, users can request access to applications, entitlements, or roles, and managers can request that team members' access be revoked.\n      This allows users to get access to the tools they need quickly and securely, and it allows managers to take away access to those tools. \n      \n      IdentityNow's Access Request service allows end users to request access that requires approval before it can be granted to users and enables qualified users to review those requests and approve or deny them.\n      \n      In the Request Center in IdentityNow, users can view available applications, roles, and entitlements and request access to them. \n      If the requested tools requires approval, the requests appear as 'Pending' under the My Requests tab until the required approver approves, rejects, or cancels them. \n\n      Users can use My Requests to track and/or cancel the requests.\n\n      In My Team on the IdentityNow Home, managers can submit requests to revoke their team members' access. \n      They can use the My Requests tab under Request Center to track and/or cancel the requests.\n      \n      Refer to [Requesting Access](https://documentation.sailpoint.com/saas/user-help/requests/requesting_access.html) for more information about access requests.\n  - name: Account Activities\n    description: |\n      Use this API to implement account activity tracking functionality.\n      With this functionality in place, users can track source account activity in IdentityNow, which greatly improves traceability in the system. \n\n      An account activity refers to a log of each action performed on a source account. This is useful for auditing the changes that occur on an account throughout its life. \n      In IdentityNow's Search, users can search for account activities and select the activity's row to get an overview of the activity's account action and view its progress, its involved sources, and its most basic metadata, such as the identity requesting the option and the recipient. \n\n      Account activity includes most actions IdentityNow completes on source accounts. Users can search in IdentityNow for the following account action types: \n\n      - Access Request: These include any access requests the source account is involved in. \n\n      - Account Attribute Updates: These include updates to a single attribute on an account on a source. \n\n      - Account State Update: These include locking or unlocking actions on an account on a source. \n\n      - Certification: These include actions removing an entitlement from an account on a source as a result of the entitlement's revocation during a certification.\n\n      - Cloud Automated `Lifecyclestate`: These include automated lifecycle state changes that result in a source account's correlated identity being assigned to a different lifecycle state. \n      IdentityNow replaces the `Lifecyclestate` variable with the name of the lifecycle state it has moved the account's identity to. \n\n      - Identity Attribute Update: These include updates to a source account's correlated identity attributes as the result of a provisioning action. \n      When you update an identity attribute that also updates an identity's lifecycle state, the cloud automated `Lifecyclestate` event also displays.\n      Account Activity does not include attribute updates that occur as a result of aggregation.\n\n      - Identity Refresh: These include correlated identity refreshes that occur for an account on a source whenever the account's correlated identity profile gets a new role or updates. \n      These also include refreshes that occur whenever IdentityNow assigns an application to the account's correlated identity based on the application's being assigned to All Users From Source or Specific Users From Source. \n\n      - Lifecycle State Refresh: These include the actions that took place when a lifecycle state changed. This event only occurs after a cloud automated `Lifecyclestate` change or a lifecycle state change. \n\n      - Lifecycle State Change: These include the account activities that result from an identity's manual assignment to a null lifecycle state.\n\n      - Password Change: These include password changes on sources.\n\n      Refer to [Account Activity](https://documentation.sailpoint.com/saas/help/search/index.html#account-activity) for more information about account activities.\n  - name: Account Aggregations\n    description: |\n      Use this API to implement account aggregation progress tracking functionality. \n      With this functionality in place, administrators can view in-progress account aggregations, their statuses, and their relevant details. \n      \n      An account aggregation refers to the process IdentityNow uses to gather and load account data from a source into IdentityNow.\n\n      Whenever IdentityNow is in the process of aggregating a source, it adds an entry to the Aggregation Activity Log, along with its relevant details. \n      To view aggregation activity, administrators can select the Connections drop-down menu, select Sources, and select the relevant source, select its Import Data tab, and select Account Aggregation. \n      In Account Aggregation, administrators can view the account aggregations' statuses and details in the Account Activity Log.\n\n      Refer to [Loading Account Data](https://documentation.sailpoint.com/saas/help/accounts/loading_data.html) for more information about account aggregations.\n  - name: Accounts\n    description: |\n      Use this API to implement and customize account functionality.\n      With this functionality in place, administrators can manage users' access across sources in IdentityNow. \n\n      In IdentityNow, an account refers to a user's account on a supported source.\n      This typically includes a unique identifier for the user, a unique password, a set of permissions associated with the source and a set of attributes. IdentityNow loads accounts through the creation of sources in IdentityNow.\n\n      Administrators can correlate users' identities with the users' accounts on the different sources they use. \n      This allows IdentityNow to govern the access of identities and all their correlated accounts securely and cohesively. \n\n      To view the accounts on a source and their correlated identities, administrators can use the Connections drop-down menu, select Sources, select the relevant source, and select its Account tab. \n\n      To view and edit source account statuses for an identity in IdentityNow, administrators can use the Identities drop-down menu, select Identity List, select the relevant identity, and select its Accounts tab. \n      Administrators can toggle an account's Actions to aggregate the account, enable/disable it, unlock it, or remove it from the identity. \n      \n      Accounts can have the following statuses: \n\n      - Enabled: The account is enabled. The user can access it.\n\n      - Disabled: The account is disabled, and the user cannot access it, but the identity is not disabled in IdentityNow. This can occur when an administrator disables the account or when the user's lifecycle state changes. \n\n      - Locked: The account is locked. This may occur when someone has entered an incorrect password for the account too many times.\n\n      - Pending: The account is currently updating. This status typically lasts seconds. \n\n      Administrators can select the source account to view its attributes, entitlements, and the last time the account's password was changed.\n\n      Refer to [Managing User Accounts](https://documentation.sailpoint.com/saas/help/common/users/user_access.html#managing-user-accounts) for more information about accounts.\n  - name: Certification Campaigns\n  - name: Certifications\n    description: |\n      Use this API to implement certification functionality.\n      This API provides specific functionality that improves an organization's ability to manage its certification process. \n\n      A certification refers to IdentityNow's mechanism for reviewing a user's access to entitlements (sets of permissions) and approving or removing that access. \n      These certifications serve as a way of showing that a user's access has been reviewed and approved. \n      Multiple certifications by different reviewers are often required to approve a user's access. \n      A set of multiple certifications is called a certification campaign. \n\n      For example, an organization may use a Manager Certification as a way of showing that a user's access has been reviewed and approved by their manager, or if the certification is part of a campaign, that the user's access has been reviewed and approved by multiple managers. \n      Once this certification has been completed, IdentityNow  would provision all the access the user needs, nothing more. \n\n      This API enables administrators and reviewers to get useful information about certifications at a high level, such as the reviewers involved, and at a more granular level, such as the permissions affected by changes to entitlements within those certifications. \n      It also provides the useful ability to reassign identities and items within certifications to other reviewers, rather than [reassigning the entire certifications themselves](https://developer.sailpoint.com/idn/api/beta/admin-reassign). \n  - name: Connector Rule Management\n  - name: Connectors\n    description: |\n      Use this API to implement connector functionality. \n      With this functionality in place, administrators can view available connectors.\n\n      Connectors are the bridges IdentityNow uses to communicate with and aggregate data from sources. \n      For example, if it is necessary to set up a connection between IdentityNow and the Active Directory source, a connector can bridge the two and enable IdentityNow to synchronize data between the systems. \n      This ensures account entitlements and states are correct throughout the organization. \n\n      In IdentityNow, administrators can use the Connections drop-down menu and select Sources to view the available source connectors. \n\n      Refer to [IdentityNow Connectors](https://documentation.sailpoint.com/connectors/identitynow/landingpages/help/landingpages/identitynow_connectivity_landing.html) for more information about the connectors available in IdentityNow. \n\n      Refer to [SaaS Connectivity](https://developer.sailpoint.com/idn/docs/saas-connectivity) for more information about the SaaS custom connectors that do not need VAs (virtual appliances) to communicate with their sources. \n\n      Refer to [Managing Sources](https://documentation.sailpoint.com/saas/help/sources/managing_sources.html) for more information about using connectors in IdentityNow.\n  - name: Custom Password Instructions\n    description: |\n      Use this API to implement custom password instruction functionality.\n      With this functionality in place, administrators can create custom password instructions to help users reset their passwords, change them, unlock their accounts, or recover their usernames. \n      This allows administrators to emphasize password policies or provide organization-specific instructions.\n\n      Administrators must first use [Update Password Org Config](https://developer.sailpoint.com/idn/api/beta/update-password-org-config) to set `customInstructionsEnabled` to `true`. \n\n      Once they have enabled custom instructions, they can use [Create Custom Password Instructions](https://developer.sailpoint.com/idn/api/beta/create-custom-password-instructions) to create custom page content for the specific pageId they select. \n\n      For example, an administrator can use the pageId forget-username:user-email to set the custom text for the case when users forget their usernames and must enter their emails. \n\n      Refer to [Creating Custom Instruction Text](https://documentation.sailpoint.com/saas/help/pwd/pwd_reset.html#creating-custom-instruction-text) for more information about creating custom password instructions.\n  - name: Entitlements\n    description: |\n      Use this API to implement and customize entitlement functionality. \n      With this functionality in place, administrators can view entitlements and configure them for use throughout IdentityNow in certifications, access profiles, and roles. \n      Administrators in IdentityNow can then grant users access to the entitlements or configure them so users themselves can request access to the entitlements whenever they need them. \n      With a good approval process, this entitlement functionality allows users to gain the specific access they need on sources quickly and securely. \n\n      Entitlements represent access rights on sources. \n      Entitlements are the most granular form of access in IdentityNow. \n      Entitlements are often grouped into access profiles, and access profiles themselves are often grouped into roles, the broadest form of access in IdentityNow. \n\n      For example, an Active Directory source in IdentityNow can have multiple entitlements: the first, 'Employees,' may represent the access all employees have at the organization, and a second, 'Developers,' may represent the access all developers have at the organization.\n      \n      An administrator can then create a broader set of access in the form of an access profile, 'AD Developers' grouping the 'Employees' entitlement with the 'Developers' entitlement.\n      \n      An administrator can then create an even broader set of access in the form of a role grouping the 'AD Developers' access profile with another profile, 'GitHub Developers,' grouping entitlements for the GitHub source.\n      \n      When users only need Active Directory employee access, they can request access to the 'Employees' entitlement.\n      \n      When users need both Active Directory employee and developer access, they can request access to the 'AD Developers' access profile.\n      \n      When users need both the 'AD Developers' access profile and the 'GitHub Developers' access profile, they can request access to the role grouping both. \n\n      Administrators often use roles and access profiles within those roles to manage access so that users can gain access more quickly, but the hierarchy of access all starts with entitlements. \n\n      Anywhere entitlements appear, you can select them to find more information about the following: \n      \n      - Cloud Access Details: These provide details about the cloud access entitlements on cloud-enabled sources. \n      \n      - Permissions: Permissions represent individual units of read/write/admin access to a system.\n      \n      - Relationships: These list each entitlement's parent and child relationships.\n      \n      - Type: This is the entitlement's type. Some sources support multiple types, each with a different attribute schema.\n      \n      IdentityNow uses entitlements in many features, including the following: \n      \n      - Certifications: Entitlements can be revoked from an identity that no longer needs them.\n\n      - Roles: Roles can group access profiles which themselves group entitlements. You can grant and revoke access on a broad level with roles. Role membership criteria can grant roles to identities based on whether they have certain entitlements or attributes.\n      \n      - Access Profiles: Access profiles group entitlements.\n      They are the most important units of access in IdentityNow. \n      IdentityNow uses them in provisioning, certifications, and access requests, and administrators can configure them to grant very broad or very granular access. \n\n      You cannot delete entitlements directly from IdentityNow. \n      Entitlements are deleted based on their inclusion in aggregations. \n      \n      Refer to [Deleting Entitlements](https://documentation.sailpoint.com/saas/help/access/entitlements.html#deleting-entitlements) more information about deleting entitlements.\n      \n      Refer to [Entitlements](https://documentation.sailpoint.com/saas/help/access/entitlements.html) for more information about entitlements.\n  - name: IAI Access Request Recommendations\n  - name: IAI Common Access\n  - name: IAI Outliers\n  - name: IAI Peer Group Strategies\n  - name: IAI Recommendations\n  - name: IAI Role Mining\n  - name: Identities\n    description: |\n      Use this API to implement identity functionality. \n      With this functionality in place, administrators can synchronize an identity's attributes with its various source attributes. \n\n      IdentityNow uses identities as users' authoritative accounts. Identities can own other accounts, entitlements, and attributes. \n      \n      An identity has a variety of attributes, such as an account name, an email address, a job title, and more. \n      These identity attributes can be correlated with different attributes on different sources. \n      For example, the identity John.Smith can own an account in the GitHub source with the account name John-Smith-Org, and IdentityNow knows they are the same person with the same access and attributes. \n\n      In IdentityNow, administrators often set up these synchronizations to get triggered automatically with a change or to run on a schedule. \n      To manually synchronize attributes for an identity, administrators can use the Identities drop-down menu and select Identity List to view the list of identities.\n      They can then select the identity they want to manually synchronize and use the hamburger menu to select 'Synchronize Attributes.' \n      Doing so immediately begins the attribute synchronization and analyzes all accounts for the selected identity.\n\n      Refer to [Synchronizing Attributes](https://documentation.sailpoint.com/saas/help/provisioning/attr_sync.html) for more information about synchronizing attributes.\n  - name: Identity History\n  - name: Identity Profiles\n    description: |\n      Use this API to implement and customize identity profile functionality. \n      With this functionality in place, administrators can manage identity profiles and configure them for use by identities throughout IdentityNow. \n\n      Identity profiles represent the configurations that can be applied to identities as a way of granting them a set of security and access, as well as defining the mappings between their identity attributes and their source attributes. \n      This allows administrators to save time by applying identity profiles to any number of similar identities rather than configuring each one individually.\n\n      In IdentityNow, administrators can use the Identities drop-down menu and select Identity Profiles to view the list of identity profiles. \n      This list shows some details about each identity profile, along with its status. They can select an identity profile to view and modify its settings, its mappings between identity attributes and correlating source account attributes, and its provisioning settings. \n      Administrators can also use this page to create new identity profiles or delete existing ones. \n      \n      Refer to [Creating Identity Profiles](https://documentation.sailpoint.com/saas/help/setup/identity_profiles.html) for more information about identity profiles.\n  - name: Lifecycle States\n    description: |\n      Use this API to implement and customize lifecycle state functionality.\n      With this functionality in place, administrators can view and configure custom lifecycle states for use across their organizations, which is key to controlling which users have access, when they have access, and the access they have.\n\n      A lifecycle state describes a user's status in a company. For example, two lifecycle states come by default with IdentityNow: 'Active' and 'Inactive.' \n      When an active employee takes an extended leave of absence from a company, his or her lifecycle state may change to 'Inactive,' for security purposes. \n      The inactive employee would lose access to all the applications, sources, and sensitive data during the leave of absence, but when the employee returns and becomes active again, all that access would be restored. \n      This saves administrators the time that would otherwise be spent provisioning the employee's access to each individual tool, reviewing the employee's certification history, etc. \n\n      Administrators must define the criteria for being in each lifecycle state, and they must define how IdentityNow manages users' access to apps and sources for each lifecycle state.\n\n      In IdentityNow, administrators can manage lifecycle states by going to Admin \u003e Identities \u003e Identity Profile, selecting the identity profile whose lifecycle states they want to manage, selecting the 'Provisioning' tab, and using the left panel to select the lifecycle state they want to modify. \n\n      In the 'Provisioning' tab, administrators can make the following access changes to an identity profile's lifecycle state: \n\n      - Enable/disable the lifecycle state for the identity profile.\n\n      - Enable/disable source accounts for the identity profile's lifecycle state.\n\n      - Add existing access profiles to grant to the identity profiles in that lifecycle state.\n\n      - Create a new access profile to grant to the identity profile in that lifecycle state.\n\n      Access profiles granted in a previous lifecycle state are automatically revoked when the identity moves to a new lifecycle state. \n      To maintain access across multiple lifecycle states, administrators must grant the access profiles in each lifecycle state. \n      For example, if an administrator wants users with the 'HR Employee' identity profile to maintain their building access in both the 'Active' and 'Leave of Absence' lifecycle states, the administrator must grant the access profile for that building access to both lifecycle states.\n\n      During scheduled refreshes, IdentityNow evaluates lifecycle states to determine whether their assigned identities have the access defined in the lifecycle states' access profiles. \n      If the identities are missing access, IdentityNow provisions that access. \n\n      Administrators can also use the 'Provisioning' tab to configure email notifications for IdentityNow to send whenever an identity with that identity profile has a lifecycle state change. \n      Refer to [Configuring Lifecycle State Notifications](https://documentation.sailpoint.com/saas/help/provisioning/lifecycle.html#configuring-lifecycle-state-notifications) for more information on how to do so.\n\n      An identity's lifecycle state can have four different statuses: the lifecycle state's status can be 'Active,' it can be 'Not Set,' it can be 'Not Valid,' or it 'Does Not Match Technical Name Case.' \n      Refer to [Moving Identities into Lifecycle States](https://documentation.sailpoint.com/saas/help/provisioning/lifecycle.html#moving-identities-into-lifecycle-states) for more information about these different lifecycle state statuses. \n\n      Refer to [Setting Up Lifecycle States](https://documentation.sailpoint.com/saas/help/provisioning/lifecycle.html) for more information about lifecycle states.\n  - name: Managed Clients\n    description: Read and write operations for managing client data and statuses\n  - name: Managed Clusters\n    description: Operations for accessing and managing client Clusters, including Log Configuration\n  - name: MFA Configuration\n    description: Configure and test multifactor authentication (MFA) methods\n  - name: Non-Employee Lifecycle Management\n    description: |\n      Use this API to implement non-employee lifecycle management functionality. \n      With this functionality in place, administrators can create non-employee records and configure them for use in their organizations. \n      This allows organizations to provide secure access to non-employees and control that access. \n\n      The 'non-employee' term refers to any consultant, contractor, intern, or other user in an organization who is not a full-time permanent employee. \n      Organizations can track non-employees' access and activity in IdentityNow by creating and maintaining non-employee sources. \n      Organizations can have a maximum of 50 non-employee sources. \n\n      By using SailPoint's Non-Employee Lifecycle Management functionality, you agree to the following:\n\n      - SailPoint is not responsible for storing sensitive data. \n      You may only add account attributes to non-employee identities that are necessary for business operations and are consistent with your contractual limitations on data that may be sent or stored in IdentityNow.\n\n      - You are responsible for regularly downloading your list of non-employee accounts for all the sources you create and storing this list of accounts in a managed location to maintain an authoritative system of record and backup data for these accounts.\n\n      To manage non-employees in IdentityNow, administrators must create a non-employee source and add accounts to the source. \n\n      To create a non-employee source in IdentityNow, administrators must use the Admin panel to go to Connections \u003e Sources.\n      They must then specify 'Non-Employee' in the 'Source Type' field. \n      Refer to [Creating a Non-Employee Source](https://documentation.sailpoint.com/saas/help/common/non-employee-mgmt.html#creating-a-non-employee-source) for more details about how to create non-employee sources.\n\n      To add accounts to a non-employee source in IdentityNow, administrators can select the non-employee source and add the accounts. \n      They can also use the 'Manage Non-Employees' widget on their user dashboards to reach the list of sources and then select the non-employee source they want to add the accounts to. \n\n      Administrators can either add accounts individually or in bulk. Each non-employee source can have a maximum of 20,000 accounts. \n      To add accounts in bulk, they must select the 'Bulk Upload' option and upload a CSV file. \n      Refer to [Adding Accounts](https://documentation.sailpoint.com/saas/help/common/non-employee-mgmt.html#adding-accounts) for more details about how to add accounts to non-employee sources.\n\n      Once administrators have created the non-employee source and added accounts to it, they can create identity profiles to generate identities for the non-employee accounts and manage the non-employee identities the same way they would any other identities. \n\n      Refer to [Managing Non-Employee Sources and Accounts](https://documentation.sailpoint.com/saas/help/common/non-employee-mgmt.html) for more information about non-employee lifecycle management.\n  - name: Notifications\n  - name: OAuth Clients\n    description: |\n      Use this API to implement OAuth client functionality.   \n      With this functionality in place, users with the appropriate security scopes can create and configure OAuth clients to use as a way to obtain authorization to use the IdentityNow REST API.\n      Refer to [Authentication](https://developer.sailpoint.com/idn/api/authentication) for more information about OAuth and how it works with the IdentityNow REST API. \n  - name: Org Config\n    description: Operations for managing org configuration settings (eg. time zone)\n  - name: Password Configuration\n    description: |\n      Use this API to implement organization password configuration functionality. \n      With this functionality in place, organization administrators can create organization-specific password configurations. \n\n      These configurations include details like custom password instructions, as well as digit token length and duration. \n\n      Refer to [Configuring User Authentication for Password Resets](https://documentation.sailpoint.com/saas/help/pwd/pwd_reset.html) for more information about organization password configuration functionality.\n  - name: Password Dictionary\n    description: |\n      Use this API to implement password dictionary functionality.  \n      With this functionality in place, administrators can create password dictionaries to prevent users from using certain words or characters in their passwords. \n\n      A password dictionary is a list of words or characters that users are prevented from including in their passwords. \n      This can help protect users from themselves and force them to create passwords that are not easy to break. \n\n      A password dictionary must meet the following requirements to for the API to handle them correctly: \n\n      - It must be in .txt format.\n\n      - All characters must be UTF-8 characters. \n\n      - Each line must contain a single word or character with no spaces or whitespace characters.\n\n      - It must contain at least one line other than the locale string.\n\n      - Each line must not exceed 128 characters.\n\n      - The file must not exceed 2500 lines. \n\n      Administrators should also consider the following when they create their dictionaries: \n\n      - Lines starting with a # represent comments.\n\n      - All words in the password dictionary are case-insensitive. \n      For example, adding the word \"password\" to the dictionary also disallows the following: PASSWORD, Password, and PassWord.\n\n      - The dictionary uses substring matching. \n      For example, adding the word \"spring\" to the dictionary also disallows the following: Spring124, 345SprinG, and 8spring.\n      Users can then select 'Change Password' to update their passwords. \n\n      Administrators must do the following to create a password dictionary: \n\n      - Create the text file that will contain the prohibited password values.\n\n      - If the dictionary is not in English, they must add a locale string to the top line: locale:`languageCode`_`countryCode`\n\n      The languageCode value refers to the language's 2-letter ISO 639-1 code.\n      The countryCode value refers to the country's 2-letter ISO 3166-1 code.\n      \n      Refer to this list https://docs.oracle.com/cd/E13214_01/wli/docs92/xref/xqisocodes.html to see all the available ISO 639-1 language codes and ISO 3166-1 country codes.\n\n      - Upload the .txt file to IdentityNow with [Update Password Dictionary](https://developer.sailpoint.com/idn/api/beta/update-password-dictionary). Uploading a new file always overwrites the previous dictionary file.\n\n      Administrators can then specify which password policies check new passwords against the password dictionary by doing the following: In the Admin panel, they can use the Password Mgmt dropdown menu to select Policies, select the policy, and select the 'Prevent use of words in this site's password dictionary' checkbox beside it.\n\n      Refer to [Configuring Advanced Password Management Options](https://documentation.sailpoint.com/saas/help/pwd/adv_config.html) for more information about password dictionaries.\n  - name: Password Management\n    description: |\n      Use this API to implement password management functionality.  \n      With this functionality in place, users can manage their identity passwords for all their applications.\n\n      In IdentityNow, users can select their names in the upper right corner of the page and use the drop-down menu to select Password Manager. \n      Password Manager lists the user's identity's applications, possibly grouped to share passwords. \n      Users can then select 'Change Password' to update their passwords. \n\n      Grouping passwords allows users to update their passwords more broadly, rather than requiring them to update each password individually. \n      Password Manager may list the applications and sources in the following groups:\n\n      - Password Group: This refers to a group of applications that share a password. \n      For example, a user can use the same password for Google Drive, Google Mail, and YouTube. \n      Updating the password for the password group updates the password for all its included applications.\n\n      - Multi-Application Source: This refers to a source with multiple applications that share a password. \n      For example, a user can have a source, G Suite, that includes the Google Calendar, Google Drive, and Google Mail applications. \n      Updating the password for the multi-application source updates the password for all its included applications. \n\n      - Applications: These are applications that do not share passwords with other applications.\n\n      An organization may require some authentication for users to update their passwords. \n      Users may be required to answer security questions or use a third-party authenticator before they can confirm their updates. \n\n      Refer to [Managing Passwords](https://documentation.sailpoint.com/saas/user-help/accounts/passwords.html) for more information about password management.\n  - name: Password Sync Groups\n    description: |\n      Use this API to implement password sync group functionality. \n      With this functionality in place, administrators can group sources into password sync groups so that all their applications share the same password. \n      This allows users to update the password for all the applications in a sync group if they want, rather than updating each password individually. \n\n      A password sync group is a group of applications that shares a password. \n      Administrators create these groups by grouping the applications' sources. \n      For example, an administrator can group the ActiveDirectory, GitHub, and G Suite sources together so that all those sources' applications can also be grouped to share a password. \n      A user can then update his or her password for ActiveDirectory, GitHub, Gmail, Google Drive, and Google Calendar all at once, rather then updating each one individually.\n\n      The following are required for administrators to create a password sync group in IdentityNow: \n\n      - At least two direct connect sources connected to IdentityNow and configured for Password Management.\n\n      - Each authentication source in a sync group must have at least one application. Refer to [Adding and Resetting Application Passwords](https://documentation.sailpoint.com/saas/help/pwd/adv_config.html#adding-and-resetting-application-passwords) for more information about adding applications to sources.\n\n      - At least one password policy. Refer to [Managing Password Policies](https://documentation.sailpoint.com/saas/help/pwd/policies.html) for more information about password policies. \n\n      In the Admin panel in IdentityNow, administrators can use the Password Mgmt dropdown menu to select Sync Groups. \n      To create a sync group, administrators must provide a name, choose a password policy to be enforced across the sources in the sync group, and select the sources to include in the sync group. \n\n      Administrators can also delete sync groups in IdentityNow, but they should know the following before they do: \n\n      - Passwords related to the associated sources will become independent, so changing one will not change the others anymore. \n\n      - Passwords for the sources' connected applications will also become independent. \n\n      - Password policies assigned to the sync group are then assigned directly to the associated sources. \n      To change the password policy for a source, administrators must edit it directly. \n\n      Once the password sync group has been created, users can update the password for the group in Password Manager.\n\n      Refer to [Managing Password Sync Groups](https://documentation.sailpoint.com/saas/help/pwd/sync_grps.html) for more information about password sync groups.\n  - name: Personal Access Tokens  \n    description: |\n      Use this API to implement personal access token (PAT) functionality. \n      With this functionality in place, users can use PATs as an alternative to passwords for authentication in IdentityNow. \n\n      PATs embed user information into the client ID and secret. \n      This replaces the API clients' need to store and provide a username and password to establish a connection, improving IdentityNow organizations' integration security. \n\n      In IdentityNow, users can do the following to create and manage their PATs: Select the dropdown menu under their names, select Preferences, and then select Personal Access Tokens. \n      They must then provide a description about the token's purpose. \n      They can then select 'Create Token' at the bottom of the page to generate and view the Secret and Client ID. \n\n      Refer to [Managing Personal Access Tokens](https://documentation.sailpoint.com/saas/help/common/generate_tokens.html) for more information about PATs.\n  - name: Public Identities Config\n    description: |\n      Use this API to implement public identity configuration functionality. \n      With this functionality in place, administrators can make up to 5 identity attributes publicly visible so other non-administrator users can see the relevant information they need to make decisions. \n      This can be helpful for access approvers, certification reviewers, managers viewing their direct reports' access, and source owners viewing their tasks.\n\n      By default, non-administrators can select an identity and view the following attributes: email, lifecycle state, and manager. \n      However, it may be helpful for a non-administrator reviewer to see other identity attributes like department, region, title, etc.\n      Administrators can use this API to make those necessary identity attributes public to non-administrators. \n\n      For example, a non-administrator deciding whether to approve another identity's request for access to the Workday application, whose access may be restricted to members of the HR department, would want to know whether the identity is a member of the HR department. \n      If an administrator has used [Update Public Identity Config](https://developer.sailpoint.com/idn/api/beta/update-public-identity-config) to make the \"department\" attribute public, the approver can see the department and make a decision without requesting any more information. \n  - name: Requestable Objects\n    description: |\n      Use this API to implement requestable object functionality. \n      With this functionality in place, administrators can determine which access items can be requested with the [Access Request APIs](https://developer.sailpoint.com/idn/api/beta/access-requests), along with their statuses. \n      This can be helpful for administrators who are implementing and customizing access request functionality as a way of checking which items are requestable as they are created, assigned, and made available. \n  - name: Role Insights\n  - name: Roles\n    description: |\n      Use this API to implement and customize role functionality.\n      With this functionality in place, administrators can create roles and configure them for use throughout IdentityNow. \n      IdentityNow can use established criteria to automatically assign the roles to qualified users. This enables users to get all the access they need quickly and securely and administrators to spend their time on other tasks.\n\n      Entitlements represent the most granular level of access in IdentityNow. \n      Access profiles represent the next level and often group entitlements. \n      Roles represent the broadest level of access and often group access profiles. \n\n      For example, an Active Directory source in IdentityNow can have multiple entitlements: the first, 'Employees,' may represent the access all employees have at the organization, and a second, 'Developers,' may represent the access all developers have at the organization.\n      \n      An administrator can then create a broader set of access in the form of an access profile, 'AD Developers' grouping the 'Employees' entitlement with the 'Developers' entitlement.\n      \n      An administrator can then create an even broader set of access in the form of a role grouping the 'AD Developers' access profile with another profile, 'GitHub Developers,' grouping entitlements for the GitHub source.\n      \n      When users only need Active Directory employee access, they can request access to the 'Employees' entitlement.\n      \n      When users need both Active Directory employee and developer access, they can request access to the 'AD Developers' access profile.\n      \n      When users need both the 'AD Developers' access profile and the 'GitHub Developers' access profile, they can request access to the role grouping both. \n      \n      Roles often represent positions within organizations. \n      For example, an organization's accountant can access all the tools the organization's accountants need with the 'Accountant' role. \n      If the accountant switches to engineering, a qualified member of the organization can quickly revoke the accountant's 'Accountant' access and grant access to the 'Engineer' role instead, granting access to all the tools the organization's engineers need.\n\n      In IdentityNow, adminstrators can use the Access drop-down menu and select Roles to view, configure, and delete existing roles, as well as create new ones. \n      Administrators can enable and disable the role, and they can also make the following configurations: \n\n      - Manage Access: Manage the role's access by adding or removing access profiles.\n\n      - Define Assignment: Define the criteria IdentityNow uses to assign the role to identities. \n      Use the first option, 'Standard Criteria,' to provide specific criteria for assignment like specific account attributes, entitlements, or identity attributes. \n      Use the second, 'Identity List,' to specify the identities for assignment.\n\n      - Access Requests: Configure roles to be requestable and establish an approval process for any requests that the role be granted or revoked. \n      Do not configure a role to be requestable without establishing a secure access request approval process for that role first. \n\n      Refer to [Working with Roles](https://documentation.sailpoint.com/saas/help/provisioning/roles.html) for more information about roles.\n  - name: Search Attribute Configuration\n  - name: Segments\n  - name: Service Desk Integration\n    description: |\n      Use this API to build an integration between IdentityNow and a service desk ITSM (IT service management) solution. \n      Once an administrator builds this integration between IdentityNow and a service desk, users can use IdentityNow to raise and track tickets that are synchronized between IdentityNow and the service desk. \n      \n      In IdentityNow, administrators can create a service desk integration (sometimes also called an SDIM, or Service Desk Integration Module) by going to Admin \u003e Connections \u003e Service Desk and selecting 'Create.'\n\n      To create a Generic Service Desk integration, for example, administrators must provide the required information on the General Settings page, the Connectivity and Authentication information, Ticket Creation information, Status Mapping information, and Requester Source information on the Configure page. \n      Refer to [Integrating SailPoint with Generic Service Desk](https://documentation.sailpoint.com/connectors/generic_sd/help/integrating_generic_service_desk/intro.html) for more information about the process of setting up a Generic Service Desk in IdentityNow.\n\n      Administrators can create various service desk integrations, all with their own nuances. \n      The following service desk integrations are available: \n\n      - [Atlassian Cloud Jira Service Management](https://documentation.sailpoint.com/connectors/atlassian/jira_cloud/help/integrating_jira_cloud/introduction.html)\n\n      - [Atlassian Server Jira Service Management](https://documentation.sailpoint.com/connectors/atlassian/jira_server/help/integrating_jira_server/introduction.html)\n\n      - [BMC Helix ITSM Service Desk](https://documentation.sailpoint.com/connectors/bmc/helix_ITSM_sd/help/integrating_bmc_helix_itsm_sd/intro.html)\n\n      - [BMC Helix Remedyforce Service Desk](https://documentation.sailpoint.com/connectors/bmc/helix_remedyforce_sd/help/integrating_bmc_helix_remedyforce_sd/intro.html)\n\n      - [Generic Service Desk](https://documentation.sailpoint.com/connectors/generic_sd/help/integrating_generic_service_desk/intro.html)\n\n      - [ServiceNow Service Desk](https://documentation.sailpoint.com/connectors/servicenow/sdim/help/integrating_servicenow_sdim/intro.html)\n\n      - [Zendesk Service Desk](https://documentation.sailpoint.com/connectors/zendesk/help/integrating_zendesk_sd/introduction.html)\n  - name: SOD Policy\n    description: Operations for Creating \u0026 Executing SOD (Seperation of Duties) policies\n  - name: SOD Violations\n    description: Operations for Predicting SOD (Seperation of Duties) violations\n  - name: Sources\n  - name: SP-Config\n    description: Import and export configuration for some objects between tenants.\n  - name: Tagged Objects\n  - name: Transforms\n    description: Operations for creating, managing, and deleting transforms\n  - name: Triggers\n    description: |\n      Event Triggers provide real-time updates to changes in IdentityNow so you can take action as soon as an event occurs, rather than poll an API endpoint for updates. IdentityNow provides a user interface within the admin console to create and manage trigger subscriptions.  These endpoints allow for programatically creating and managing trigger subscriptions.\n      \n      There are two types of event triggers:\n        * `FIRE_AND_FORGET`: This trigger type will send a payload to each subscriber without needing a response.  Each trigger of this type has a limit of **50 subscriptions**.\n        * `REQUEST_RESPONSE`: This trigger type will send a payload to a subscriber and expect a response back.  Each trigger of this type may only have **one subscription**.\n\n      ## Available Event Triggers\n      Production ready event triggers that are available in all tenants.\n\n      | Name | ID | Type | Trigger condition | Schema(s) |\n      |-|-|-|-|-|\n      | [Access Request Dynamic Approval](https://developer.sailpoint.com/idn/docs/event-triggers/triggers/access-request-dynamic-approval) | idn:access-request-dynamic-approver | REQUEST_RESPONSE |After an access request is submitted. Expects the subscriber to respond with the ID of an identity or workgroup to add to the approval workflow. | [Input Schema](#section/Access-Request-Dynamic-Approver-Event-Trigger-Input) - [Output Schema](#section/Access-Request-Dynamic-Approver-Event-Trigger-Output) |\n      | [Access Request Postapproval](https://developer.sailpoint.com/idn/docs/event-triggers/triggers/access-request-postapproval) | idn:access-request-post-approval | FIRE_AND_FORGET | After an access request is approved. |[Input Schema](#section/Access-Request-Post-Approval-Event-Trigger-Input)|\n      | [Access Request Preapproval](https://developer.sailpoint.com/idn/docs/event-triggers/triggers/access-request-preapproval) | idn:access-request-pre-approval | REQUEST_RESPONSE | After an access request is submitted. Expects the subscriber to respond with an approval decision. | [Input Schema](#section/Access-Request-Pre-Approval-Event-Trigger-Input) - [Output Schema](#section/Access-Request-Pre-Approval-Event-Trigger-Output) |\n      | [Account Aggregation Completed](https://developer.sailpoint.com/idn/docs/event-triggers/triggers/account-aggregation-completed) | idn:account-aggregation-completed | FIRE_AND_FORGET | After an account aggregation completed, terminated, failed. | [Input Schema](#section/Account-Aggregation-Completed-Event-Trigger-Input) |\n      | Account Attributes Changed | idn:account-attributes-changed | FIRE_AND_FORGET | After an account aggregation, and one or more account attributes have changed. | [Input Schema](#section/Account-Attributes-Changed-Event-Trigger-Input) |\n      | Account Correlated | idn:account-correlated | FIRE_AND_FORGET | After an account is added to an identity. | [Input Schema](#section/Account-Correlated-Event-Trigger-Input) |\n      | Accounts Collected for Aggregation |  idn:aggregation-accounts-collected | FIRE_AND_FORGET | New, changed, and deleted accounts have been gathered during an aggregation and are being processed. | [Input Schema](#section/Accounts-Collected-for-Aggregation-Event-Trigger-Input) |\n      | Account Uncorrelated | idn:account-uncorrelated | FIRE_AND_FORGET | After an account is removed from an identity. | [Input Schema](#section/Account-Uncorrelated-Event-Trigger-Input)  |\n      | Campaign Activated | idn:campaign-activated | FIRE_AND_FORGET | After a campaign is activated. | [Input Schema](#section/Campaign-Activated-Event-Trigger-Input) |\n      | Campaign Ended | idn:campaign-ended | FIRE_AND_FORGET | After a campaign ends. | [Input Schema](#section/Campaign-Ended-Event-Trigger-Input) |\n      | Campaign Generated | idn:campaign-generated | FIRE_AND_FORGET | After a campaign finishes generating. | [Input Schema](#section/Campaign-Generated-Event-Trigger-Input) |\n      | Certification Signed Off | idn:certification-signed-off | FIRE_AND_FORGET | After a certification is signed off by its reviewer. | [Input Schema](#section/Certification-Signed-Off-Event-Trigger-Input) |\n      | [Identity Attributes Changed](https://developer.sailpoint.com/idn/docs/event-triggers/triggers/account-aggregation-completed) | idn:identity-attributes-changed | FIRE_AND_FORGET | After One or more identity attributes changed. | [Input Schema](#section/Identity-Attributes-Changed-Event-Trigger-Input) |\n      | [Identity Created](https://developer.sailpoint.com/idn/docs/event-triggers/triggers/identity-created) | idn:identity-created | FIRE_AND_FORGET | After an identity is created. | [Input Schema](#section/Identity-Created-Event-Trigger-Input) |\n      | [Provisioning Action Completed](https://developer.sailpoint.com/idn/docs/event-triggers/triggers/provisioning-action-completed) |  idn:post-provisioning | FIRE_AND_FORGET | After a provisioning action completed on a source. | [Input Schema](#section/Provisioning-Completed-Event-Trigger-Input) |\n      | [Saved Search Complete](https://developer.sailpoint.com/idn/docs/event-triggers/triggers/saved-search-completed) |  idn:saved-search-complete | FIRE_AND_FORGET | After a scheduled search completed. | [Input Schema](#section/Saved-Search-Complete-Event-Trigger-Input) |\n      | [Source Created](https://developer.sailpoint.com/idn/docs/event-triggers/triggers/source-created) | idn:source-created | FIRE_AND_FORGET | After a source is created. | [Input Schema](#section/Source-Created-Event-Trigger-Input) |\n      | [Source Deleted](https://developer.sailpoint.com/idn/docs/event-triggers/triggers/source-deleted) | idn:source-deleted | FIRE_AND_FORGET | After a source is deleted. | [Input Schema](#section/Source-Deleted-Event-Trigger-Input) |\n      | [Source Updated](https://developer.sailpoint.com/idn/docs/event-triggers/triggers/source-updated) | idn:source-updated | FIRE_AND_FORGET | After configuration changes have been made to a source. | [Input Schema](#section/Source-Updated-Event-Trigger-Input) |\n      | [VA Cluster Status Change](https://developer.sailpoint.com/idn/docs/event-triggers/triggers/va-cluster-status-change) | idn:va-cluster-status-change | FIRE_AND_FORGET | After the status of a VA cluster has changed. | [Input Schema](#section/VA-Cluster-Status-Change-Event-Event-Trigger-Input) |\n\n      ## Early Access Event Triggers\n      Triggers that are in-development and not ready for production use.  Please contact support to enable these triggers in your tenant.\n\n      | Name | ID | Type | Trigger condition | Schema(s) |\n      |-|-|-|-|-|\n      | [Identity Deleted](https://developer.sailpoint.com/idn/docs/event-triggers/triggers/identity-deleted) | idn:identity-deleted | FIRE_AND_FORGET | After an identity is deleted. | [Input Schema](#section/Identity-Deleted-Event-Trigger-Input) |\n      | [Source Account Created](https://developer.sailpoint.com/idn/docs/event-triggers/triggers/source-account-created) | idn:source-account-created | FIRE_AND_FORGET | After a source account is created. | [Input Schema](#section/Source-Account-Created-Event-Trigger-Input) |\n      | [Source Account Deleted](https://developer.sailpoint.com/idn/docs/event-triggers/triggers/source-account-deleted) | idn:source-account-deleted | FIRE_AND_FORGET | After a source account is deleted. | [Input Schema](#section/Source-Account-Deleted-Event-Trigger-Input) |\n      | [Source Account Updated](https://developer.sailpoint.com/idn/docs/event-triggers/triggers/source-account-updated) | idn:source-account-updated | FIRE_AND_FORGET | After a source account is changed. | [Input Schema](#section/Source-Account-Updated-Event-Trigger-Input) |\n\n      Refer to [Event Triggers](https://developer.sailpoint.com/idn/docs/event-triggers/) for more information about event triggers.\n  - name: Work Items\n    description: |\n      Use this API to implement work item functionality. \n      With this functionality in place, users can manage their work items (tasks). \n\n      Work items refer to the tasks users see in IdentityNow's Task Manager. \n      They can see the pending work items they need to complete, as well as the work items they have already completed. \n      Task Manager lists the work items along with the involved sources, identities, accounts, and the timestamp when the work item was created. \n      For example, a user may see a pending 'Create an Account' work item for the identity Fred.Astaire in GitHub for Fred's GitHub account, fred-astaire-sp. \n      Once the user completes the work item, the work item will be listed with his or her other completed work items. \n\n      To complete work items, users can use their dashboards and select the 'My Tasks' widget. \n      The widget will list any work items they need to complete, and they can select the work item from the list to review its details. \n      When they complete the work item, they can select 'Mark Complete' to add it to their list of completed work items. \n\n      Refer to [Task Manager](https://documentation.sailpoint.com/saas/user-help/task_manager.html) for more information about work items, including the different types of work items users may need to complete.\n  - name: Workflows\n    description: |\n      Workflows allow administrators to create custom automation scripts directly within IdentityNow.  These automation scripts respond to [event triggers](https://developer.sailpoint.com/idn/docs/event-triggers#how-to-get-started-with-event-triggers) and perform a series of actions to perform tasks that are either too cumbersome or not available in the IdentityNow UI.  Workflows can be configured via a graphical user interface within IdentityNow, or by creating and uploading a JSON formatted script to the Workflow service.  The Workflows API collection provides the necessary functionality to create, manage, and test your workflows via REST.\n      \n      Workflows is currently in Beta, and is not generally available to all customer tenants.  If you would like to participate in the beta program, please [submit an application](https://app.smartsheet.com/b/form/e758ab109dc649589f57b4b5c41d4373).  You must be a customer or partner to participate.\n\n      Refer to [Creating and Managing Workflows] for more information about how to build workflows in the visual builder in the IdentityNow UI.\n  - name: Event Trigger Models\n    x-displayName: Trigger Models\n    description: |\n      ## Access Request Dynamic Approver Event Trigger Input\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Trigger-Input-AccessRequestDynamicApprover\" /\u003e\n\n      ## Access Request Dynamic Approver Event Trigger Output\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Trigger-Output-AccessRequestDynamicApprover\" /\u003e\n\n      ## Access Request Post Approval Event Trigger Input\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Trigger-Input-AccessRequestPostApproval\" /\u003e\n\n      ## Access Request Pre Approval Event Trigger Input\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Trigger-Input-AccessRequestPreApproval\" /\u003e\n\n      ## Access Request Pre Approval Event Trigger Output\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Trigger-Output-AccessRequestPreApproval\" /\u003e\n\n      ## Account Aggregation Completed Event Trigger Input\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Trigger-Input-AccountAggregationCompleted\" /\u003e\n\n      ## Account Attributes Changed Event Trigger Input\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Trigger-Input-AccountAttributesChanged\" /\u003e\n\n      ## Account Correlated Event Trigger Input\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Trigger-Input-AccountCorrelated\" /\u003e\n\n      ## Accounts Collected for Aggregation Event Trigger Input\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Trigger-Input-AccountsCollectedForAggregation\" /\u003e\n\n      ## Account Uncorrelated Event Trigger Input\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Trigger-Input-AccountUncorrelated\" /\u003e\n\n      ## Campaign Activated Event Trigger Input\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Trigger-Input-CampaignActivated\" /\u003e\n\n      ## Campaign Ended Event Trigger Input\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Trigger-Input-CampaignEnded\" /\u003e\n\n      ## Campaign Generated Event Trigger Input\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Trigger-Input-CampaignGenerated\" /\u003e\n\n      ## Certification Signed Off Event Trigger Input\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Trigger-Input-CertificationSignedOff\" /\u003e\n\n      ## Identity Attributes Changed Event Trigger Input\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Trigger-Input-IdentityAttributesChanged\" /\u003e\n\n      ## Identity Created Event Trigger Input\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Trigger-Input-IdentityCreated\" /\u003e\n\n      ## Identity Deleted Event Trigger Input\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Trigger-Input-IdentityDeleted\" /\u003e\n\n      ## Provisioning Completed Event Trigger Input\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Trigger-Input-ProvisioningCompleted\" /\u003e\n\n      ## Saved Search Complete Event Trigger Input\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Trigger-Input-SavedSearchComplete\" /\u003e\n\n      ## Source Account Created Event Trigger Input\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Trigger-Input-SourceAccountCreated\" /\u003e\n\n      ## Source Account Deleted Event Trigger Input\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Trigger-Input-SourceAccountDeleted\" /\u003e\n\n      ## Source Account Updated Event Trigger Input\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Trigger-Input-SourceAccountUpdated\" /\u003e\n\n      ## Source Created Event Trigger Input\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Trigger-Input-SourceCreated\" /\u003e\n\n      ## Source Deleted Event Trigger Input\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Trigger-Input-SourceDeleted\" /\u003e\n\n      ## Source Updated Event Trigger Input\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Trigger-Input-SourceUpdated\" /\u003e\n\n      ## VA Cluster Status Change Event Event Trigger Input\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Trigger-Input-VAClusterStatusChangeEvent\" /\u003e\n\n\n# x-tagGroups:\n#   - name: Access\n#     tags:\n#       - Access Profiles\n#       - Access Request Approvals\n#       - Access Requests\n#       - Entitlements\n#       - Requestable Objects\n#       - Roles\n#       - Segments\n#   - name: Accounts\n#     tags:\n#       - Account Activities\n#       - Account Aggregations\n#       - Accounts\n#   - name: Certification Campaigns\n#     tags:\n#       - Certification Campaigns\n#       - Certifications\n#       - Work Items\n#   - name: Connections\n#     tags:\n#       - Connector Rule Management\n#       - Connectors\n#       - Managed Clients\n#       - Managed Clusters\n#       - Service Desk Integration\n#       - Sources\n#   - name: Event Triggers\n#     tags:\n#       - Triggers\n#       - Event Trigger Models\n#   - name: Global Settings\n#     tags:\n#       - MFA Configuration\n#       - Notifications\n#       - OAuth Clients\n#       - Personal Access Tokens\n#       - SP-Config\n#   - name: IdentityAI\n#     tags:\n#       - IAI Access Request Recommendations\n#       - IAI Common Access\n#       - IAI Outliers\n#       - IAI Peer Group Strategies\n#       - IAI Recommendations\n#       - IAI Role Mining\n#       - Role Insights\n#   - name: Identities\n#     tags:\n#       - Identity History\n#       - Identity Profiles\n#       - Public Identity Config\n#       - Transforms\n#   - name: Lifecycles\n#     tags:\n#       - Lifecycle States\n#       - Non-Employee Lifecycle Management\n#   - name: Password Management\n#     tags:\n#       - Custom Password Instructions\n#       - Password Configuration\n#       - Password Dictionary\n#       - Password Management\n#       - Password Sync Groups\n#   - name: Search\n#     tags:\n#       - Search Attribute Configuration\n#   - name: Separation of Duties (SOD)\n#     tags:\n#       - SOD Policy\n#       - SOD Violations\n#       - Tagged Objects\n#   - name: Workflows\n#     tags:      \n#       - Workflows\n\nsecurity:\n  - oauth2: []\n\ncomponents:\n  securitySchemes:\n    oauth2:\n      type: oauth2\n      description: |\n        OAuth2 Bearer token (JWT). See [IdentityNow REST API Authentication](https://developer.sailpoint.com/idn/api/authentication) for more information.\n        - Directions for generating a [personal access token](https://developer.sailpoint.com/idn/api/authentication#personal-access-tokens)\n        - Directions using [client credentials flow](https://developer.sailpoint.com/idn/api/authentication#client-credentials-grant-flow)\n        - Directions for using [authorization code flow](https://developer.sailpoint.com/idn/api/authentication#authorization-code-grant-flow)\n\n        Which authentication method should I choose?  See our [guide](https://developer.sailpoint.com/idn/api/authentication#which-oauth-20-grant-flow-should-i-use)\n      \n        Learn more about how to find your `tokenUrl` and `authorizationUrl` [in our docs](https://developer.sailpoint.com/idn/api/authentication#find-your-tenants-oauth-details)\n      flows:\n        clientCredentials:\n          tokenUrl: https://tenant.api.identitynow.com/oauth/token\n          scopes: \n            'sp:scopes:default': 'default scope'\n            'sp:scopes:all': 'access to all scopes'\n        authorizationCode:\n          authorizationUrl: https://tenant.identitynow.com/oauth/authorize\n          tokenUrl: https://tenant.api.identitynow.com/oauth/token\n          scopes: \n            'sp:scopes:default': 'default scope'\n            'sp:scopes:all': 'access to all scopes'\n  schemas:\n    AccountAggregation:\n      $ref: './beta/schemas/AccountAggregationStatus.yaml'\n    ApprovalItems:\n      $ref: './beta/schemas/ApprovalItemDetails.yaml'\n    slimcampaign:\n      $ref: './beta/schemas/SlimCampaign.yaml'\n    fullcampaign:\n      $ref: './beta/schemas/Campaign.yaml'\n    IdentityProfile:\n      $ref: './beta/schemas/IdentityProfile.yaml'\n    ManagedClient:\n      $ref: './beta/schemas/ManagedClient.yaml'\n    ManagedClientStatus:\n      $ref: './beta/schemas/ManagedClientStatus.yaml'\n    MessageCatalogDto:\n      $ref: './beta/schemas/MessageCatalogDto.yaml'\n    PeerGroupMember:\n      $ref: './beta/schemas/PeerGroupMember.yaml'\n    RecommendationRequestDto:\n      $ref: './beta/schemas/RecommendationRequestDto.yaml'\n    RecommendationResponseDto:\n      $ref: './beta/schemas/RecommendationResponseDto.yaml'\n    RemediationItems:\n      $ref: './beta/schemas/RemediationItemDetails.yaml'\n    SearchAttributeConfig:\n      $ref: './beta/schemas/SearchAttributeConfig.yaml'\n    WorkItems:\n      $ref: './beta/schemas/WorkItems.yaml'\n    WorkItemsCount:\n      $ref: './beta/schemas/WorkItemsCount.yaml'\n    WorkItemsSummary:\n      $ref: './beta/schemas/WorkItemsSummary.yaml'\n    Form:\n      $ref: './beta/schemas/FormDetails.yaml'\n    FormItem:\n      $ref: './beta/schemas/FormItemDetails.yaml'\n    Section:\n      $ref: './beta/schemas/SectionDetails.yaml'\n    Field:\n      $ref: './beta/schemas/FieldDetails.yaml'\n    Trigger-Input-AccessRequestDynamicApprover:\n      $ref: './beta/schemas/trigger/example-input/AccessRequestDynamicApprover.yaml'\n    Trigger-Input-AccessRequestPostApproval:\n      $ref: './beta/schemas/trigger/example-input/AccessRequestPostApproval.yaml'\n    Trigger-Input-AccessRequestPreApproval:\n      $ref: './beta/schemas/trigger/example-input/AccessRequestPreApproval.yaml'\n    Trigger-Input-AccountAggregationCompleted:\n      $ref: './beta/schemas/trigger/example-input/AccountAggregationCompleted.yaml'\n    Trigger-Input-AccountAttributesChanged:\n      $ref: './beta/schemas/trigger/example-input/AccountAttributesChanged.yaml'\n    Trigger-Input-AccountCorrelated:\n      $ref: './beta/schemas/trigger/example-input/AccountCorrelated.yaml'\n    Trigger-Input-AccountsCollectedForAggregation:\n      $ref: './beta/schemas/trigger/example-input/AccountsCollectedForAggregation.yaml'\n    Trigger-Input-AccountUncorrelated:\n      $ref: './beta/schemas/trigger/example-input/AccountUncorrelated.yaml'\n    Trigger-Input-CampaignActivated:\n      $ref: './beta/schemas/trigger/example-input/CampaignActivated.yaml'\n    Trigger-Input-CampaignEnded:\n      $ref: './beta/schemas/trigger/example-input/CampaignEnded.yaml'\n    Trigger-Input-CampaignGenerated:\n      $ref: './beta/schemas/trigger/example-input/CampaignGenerated.yaml'\n    Trigger-Input-CertificationSignedOff:\n      $ref: './beta/schemas/trigger/example-input/CertificationSignedOff.yaml'\n    Trigger-Input-IdentityAttributesChanged:\n      $ref: './beta/schemas/trigger/example-input/IdentityAttributesChanged.yaml'\n    Trigger-Input-IdentityCreated:\n      $ref: './beta/schemas/trigger/example-input/IdentityCreated.yaml'\n    Trigger-Input-IdentityDeleted:\n      $ref: './beta/schemas/trigger/example-input/IdentityDeleted.yaml'\n    Trigger-Input-ProvisioningCompleted:\n      $ref: './beta/schemas/trigger/example-input/ProvisioningCompleted.yaml'\n    Trigger-Input-SavedSearchComplete:\n      $ref: './beta/schemas/trigger/example-input/SavedSearchComplete.yaml'\n    Trigger-Input-SourceAccountCreated:\n      $ref: './beta/schemas/trigger/example-input/SourceAccount.yaml'\n    Trigger-Input-SourceAccountDeleted:\n      $ref: './beta/schemas/trigger/example-input/SourceAccount.yaml'\n    Trigger-Input-SourceAccountUpdated:\n      $ref: './beta/schemas/trigger/example-input/SourceAccount.yaml'\n    Trigger-Input-SourceCreated:\n      $ref: './beta/schemas/trigger/example-input/SourceCreated.yaml'\n    Trigger-Input-SourceDeleted:\n      $ref: './beta/schemas/trigger/example-input/SourceDeleted.yaml'\n    Trigger-Input-SourceUpdated:\n      $ref: './beta/schemas/trigger/example-input/SourceUpdated.yaml'\n    Trigger-Input-VAClusterStatusChangeEvent:\n      $ref: './beta/schemas/trigger/example-input/VAClusterStatusChangeEvent.yaml'\n    Trigger-Output-AccessRequestDynamicApprover:\n      $ref: './beta/schemas/trigger/example-output/AccessRequestDynamicApprover.yaml'\n    Trigger-Output-AccessRequestPreApproval:\n      $ref: './beta/schemas/trigger/example-output/AccessRequestPreApproval.yaml'\n\npaths:\n  /access-profiles:\n    $ref: './beta/paths/access-profiles.yaml'\n  /access-profiles/{id}:\n    $ref: './beta/paths/access-profile.yaml'\n  /access-profiles/bulk-delete:\n    $ref: './beta/paths/access-profile-bulk-delete.yaml'\n  /access-profiles/{id}/entitlements:\n    $ref: './beta/paths/access-profile-entitlements.yaml'\n  /access-requests:\n    $ref: './v3/paths/access-requests.yaml'\n  /access-requests/cancel:\n    $ref: './v3/paths/access-request-cancel.yaml'\n  /access-requests/close:\n    $ref: './v3/paths/access-request-close.yaml'\n  /access-request-config:\n    $ref: './v3/paths/access-request-config.yaml'\n  /access-request-status:\n    $ref: './v3/paths/access-request-status.yaml'\n  /access-request-approvals/pending:\n    $ref: './beta/paths/pending-access-request-approvals.yaml'\n  /access-request-approvals/completed:\n    $ref: './beta/paths/completed-access-request-approvals.yaml'\n  /access-request-approvals/{approvalId}/approve:\n    $ref: './beta/paths/approve-access-request-approval.yaml'\n  /access-request-approvals/{approvalId}/reject:\n    $ref: './beta/paths/reject-access-request-approval.yaml'\n  /access-request-approvals/{approvalId}/forward:\n    $ref: './beta/paths/forward-access-request-approval.yaml'\n  /access-request-approvals/approval-summary:\n    $ref: './beta/paths/access-request-approval-summary.yaml'\n  /ai-access-request-recommendations:\n    $ref: './beta/paths/ai-access-request-recommendations.yaml'\n  /ai-access-request-recommendations/ignored-items:\n    $ref: './beta/paths/ai-access-request-recommendations-ignored.yaml'\n  /ai-access-request-recommendations/requested-items:\n    $ref: './beta/paths/ai-access-request-recommendations-requested.yaml'\n  /ai-access-request-recommendations/viewed-items:\n    $ref: './beta/paths/ai-access-request-recommendations-viewed.yaml'\n  /ai-access-request-recommendations/viewed-items/bulk-create:\n    $ref: './beta/paths/ai-access-request-recommendations-viewed-bulk-create.yaml'\n  /accounts:\n    $ref: './beta/paths/accounts.yaml'\n  /accounts/{id}:\n    $ref: './beta/paths/account.yaml'\n  /accounts/{id}/entitlements:\n    $ref: './beta/paths/accounts-id-entitlements.yaml'\n  /accounts/{id}/reload:\n    $ref: './beta/paths/accounts-id-reload.yaml'\n  /accounts/{id}/enable:\n    $ref: './beta/paths/accounts-id-enable.yaml'\n  /accounts/{id}/disable:\n    $ref: './beta/paths/accounts-id-disable.yaml'\n  /accounts/{id}/unlock:\n    $ref: './beta/paths/accounts-id-unlock.yaml'\n  /accounts/search-attribute-config:\n    $ref: './beta/paths/searchAttributeConfig.yaml'\n  /accounts/search-attribute-config/{name}:\n    $ref: './beta/paths/searchAttributeConfig-get-patch-delete.yaml'\n  /account-activities:\n    $ref: './beta/paths/account-activities.yaml'\n  /account-activities/{id}:\n    $ref: './beta/paths/account-activity.yaml'\n  /account-aggregations/{id}/status:\n    $ref: './beta/paths/account-aggregation-status.yaml'\n  /campaigns:\n    $ref: './beta/paths/campaigns.yaml'\n  /campaigns/delete:\n    $ref: './beta/paths/campaigns-delete.yaml'\n  /campaigns/{id}:\n    $ref: './beta/paths/campaign.yaml'\n  /campaigns/{id}/activate:\n    $ref: './beta/paths/campaign-activate.yaml'\n  /campaigns/{id}/complete:\n    $ref: './beta/paths/campaign-complete.yaml'\n  /campaigns/{id}/run-remediation-scan:\n    $ref: './beta/paths/campaign-run-remediation-scan.yaml'\n  /campaigns/{id}/reassign:\n    $ref: './beta/paths/campaign-admin-cert-reassign.yaml'\n  /campaigns/{id}/reports:\n    $ref: './beta/paths/campaign-reports.yaml'\n  /campaigns/{id}/run-report/{type}:\n    $ref: './beta/paths/campaign-run-report.yaml'\n  /campaigns/reports-configuration:\n    $ref: './beta/paths/campaign-reports-configuration.yaml'\n  /campaign-templates:\n    $ref: './beta/paths/campaign-templates.yaml'\n  /campaign-templates/{id}:\n    $ref: './beta/paths/campaign-template.yaml'\n  /campaign-templates/{id}/generate:\n    $ref: './beta/paths/campaign-template-generate.yaml'\n  /campaign-templates/{id}/schedule:\n    $ref: './beta/paths/campaign-template-schedule.yaml'\n  /certifications/{id}/reassign-async:\n    $ref: './beta/paths/identity-certifications-reassign-async.yaml'\n  /certifications/{id}/tasks/{taskId}:\n    $ref: './beta/paths/identity-certifications-task-status.yaml'\n  /certifications/{id}/tasks-pending:\n    $ref: './beta/paths/identity-certifications-tasks-pending.yaml'\n  /certifications/{certificationId}/access-review-items/{itemId}/permissions:\n    $ref: './beta/paths/identity-certifications-item-permissions.yaml'\n  /certifications/{id}/reviewers:\n    $ref: './beta/paths/certifications-reviewers.yaml'\n  /connector-rules:\n    $ref: './beta/paths/connector-rules.yaml'\n  /connector-rules/{id}:\n    $ref: './beta/paths/connector-rule.yaml'\n  /connector-rules/validate:\n    $ref: './beta/paths/connector-rule-validate.yaml'\n  /connectors:\n    $ref: './beta/paths/connectors.yaml'\n  /custom-password-instructions:\n    $ref: './beta/paths/custom-password-instructions.yaml'\n  /custom-password-instructions/{pageId}:\n    $ref: './beta/paths/custom-password-instruction.yaml'\n  /entitlements:\n    $ref: './beta/paths/entitlements.yaml'\n  /entitlements/{id}:\n    $ref: './beta/paths/ears-entitlement.yaml'\n  /entitlements/{id}/parents:\n    $ref: './beta/paths/ears-entitlement-parents.yaml'\n  /entitlements/{id}/children:\n    $ref: './beta/paths/ears-entitlement-children.yaml'\n  /entitlements/bulk-update:\n    $ref: './beta/paths/ears-entitlement-bulk-update.yaml'\n  /generate-password-reset-token/digit:\n    $ref: './beta/paths/password-reset-digit-token.yaml'\n  /historical-identities:\n    $ref: './beta/paths/historical-identities.yaml'\n  /historical-identities/{id}:\n    $ref: './beta/paths/historical-identity.yaml'\n  /historical-identities/{id}/access-items:\n    $ref: './beta/paths/historical-identity-access-items.yaml'\n  /historical-identities/{id}/snapshots:\n    $ref: './beta/paths/historical-identity-snapshots.yaml'\n  /historical-identities/{id}/snapshot-summary:\n    $ref: './beta/paths/historical-identity-snapshot-summary.yaml'\n  /historical-identities/{id}/snapshots/{date}:\n    $ref: './beta/paths/historical-identity-snapshot-date.yaml'\n  /historical-identities/{id}/snapshots/{date}/access-items:\n    $ref: './beta/paths/historical-identity-snapshot-date-access-items.yaml'\n  /common-access:\n    $ref: './beta/paths/common-access.yaml'\n  /common-access/update-status:\n    $ref: './beta/paths/common-access-update-status.yaml'\n  /historical-identities/{id}/events:\n    $ref: './beta/paths/historical-identity-events.yaml'\n  /historical-identities/{id}/start-date:\n    $ref: './beta/paths/historical-identity-start-date.yaml'\n  /historical-identities/{id}/compare:\n    $ref: './beta/paths/historical-identity-compare.yaml'\n  /historical-identities/{id}/compare/{access-type}:\n    $ref: './beta/paths/historical-identity-compare-type.yaml'\n  /identities/{identityId}/synchronize-attributes:\n    $ref: './beta/paths/identity-synchronize-attributes.yaml'\n  /identity-profiles:\n    $ref: './beta/paths/identity-profiles.yaml'\n  /identity-profiles/bulk-delete:\n    $ref: './beta/paths/identity-profiles-bulk-delete.yaml'\n  /identity-profiles/export:\n    $ref: './beta/paths/identity-profiles-export.yaml'\n  /identity-profiles/import:\n    $ref: './beta/paths/identity-profiles-import.yaml'\n  /identity-profiles/identity-preview:\n    $ref: './beta/paths/identity-profiles-identity-preview.yaml'\n  /identity-profiles/{identity-profile-id}:\n    $ref: './beta/paths/identity-profile.yaml'\n  /identity-profiles/{identity-profile-id}/default-identity-attribute-config:\n    $ref: './beta/paths/identity-profile-default-config.yaml'\n  /identity-profiles/{identity-profile-id}/refresh-identities:\n    $ref: './beta/paths/identity-profile-refresh-identities.yaml'\n  /identity-profiles/{identity-profile-id}/lifecycle-states/{lifecycle-state-id}:\n    $ref: './beta/paths/identity-profile-lifecycle-state.yaml'\n  /non-employee-records:\n    $ref: './beta/paths/non-employee-records.yaml'\n  /non-employee-records/{id}:\n    $ref: './beta/paths/non-employee-record.yaml'\n  /non-employee-records/bulk-delete:\n    $ref: './beta/paths/non-employee-records-bulk-delete.yaml'\n  /non-employee-requests:\n    $ref: './beta/paths/non-employee-requests.yaml'\n  /non-employee-requests/{id}:\n    $ref: './beta/paths/non-employee-request.yaml'\n  /non-employee-requests/summary/{requested-for}:\n    $ref: './beta/paths/non-employee-request-summary-get.yaml'\n  /non-employee-sources:\n    $ref: './beta/paths/non-employee-sources.yaml'\n  /non-employee-sources/{sourceId}:\n    $ref: './beta/paths/non-employee-source.yaml'\n  /non-employee-sources/{id}/non-employees/download:\n    $ref: './beta/paths/non-employee-sources-export-non-employees.yaml'\n  /non-employee-sources/{id}/non-employee-bulk-upload:\n    $ref: './beta/paths/non-employee-sources-bulk-upload-non-employees.yaml'\n  /non-employee-sources/{id}/non-employee-bulk-upload/status:\n    $ref: './beta/paths/non-employee-sources-bulk-upload-status.yaml'\n  /non-employee-sources/{id}/schema-attributes-template/download:\n    $ref: './beta/paths/non-employee-sources-export-schema-attributes-template.yaml'\n  /non-employee-approvals:\n    $ref: './beta/paths/non-employee-approval-list.yaml'\n  /non-employee-approvals/{id}:\n    $ref: './beta/paths/non-employee-approve-get.yaml'\n  /non-employee-approvals/{id}/approve:\n    $ref: './beta/paths/non-employee-approve-request.yaml'\n  /non-employee-approvals/{id}/reject:\n    $ref: './beta/paths/non-employee-reject-request.yaml'\n  /non-employee-approvals/summary/{requested-for}:\n    $ref: './beta/paths/non-employee-approval-summary.yaml'\n  /non-employee-sources/{sourceId}/schema-attributes:\n    $ref: './beta/paths/non-employee-sources-schema-attributes.yaml'\n  /non-employee-sources/{sourceId}/schema-attributes/{attributeId}:\n    $ref: './beta/paths/non-employee-sources-schema-attribute.yaml'\n  /managed-clients/{id}/status:\n    $ref: './beta/paths/managed-client-status.yaml'\n  /managed-clusters/{id}:\n    $ref: './beta/paths/managed-cluster-path.yaml'\n  /managed-clusters/{id}/log-config:\n    $ref: './beta/paths/managed-cluster-log-config.yaml'\n  /managed-clusters:\n    $ref: './beta/paths/managed-clusters.yaml'\n  /mfa/{method}/config:\n    $ref: './beta/paths/mfa-config.yaml'\n  /mfa/{method}/test:\n    $ref: './beta/paths/mfa-config-test.yaml'\n  /notification-template-defaults:\n    $ref: './beta/paths/notification-template-defaults.yaml'\n  /notification-templates:\n    $ref: './beta/paths/notification-templates.yaml'\n  /notification-templates/{id}:\n    $ref: './beta/paths/notification-template.yaml'\n  /notification-templates/bulk-delete:\n    $ref: './beta/paths/notification-templates-bulk-delete.yaml'\n  /oauth-clients:\n    $ref: './beta/paths/oauth-clients.yaml'\n  /oauth-clients/{id}:\n    $ref: './beta/paths/oauth-client.yaml'\n  /org-config:\n    $ref: './beta/paths/org-config.yaml'\n  /org-config/valid-time-zones:\n    $ref: './beta/paths/org-config-valid-time-zones.yaml'\n  /outlier-summaries:\n    $ref: './beta/paths/outlier-summaries.yaml'\n  /outlier-summaries/latest:\n    $ref: './beta/paths/outlier-summaries-latest.yaml'\n  /outliers:\n    $ref: './beta/paths/outliers.yaml'\n  /outliers/{outlierId}/contributing-features:\n    $ref: './beta/paths/outliers-contributing-features.yaml'\n  /outliers/ignore:\n    $ref: './beta/paths/outliers-ignore.yaml'\n  /outliers/unignore:\n    $ref: './beta/paths/outliers-unignore.yaml'\n  /outliers/export:\n    $ref: './beta/paths/outliers-export.yaml'\n  /password-dictionary:\n    $ref: './beta/paths/password-dictionary.yaml'\n  /query-password-info:\n    $ref: './beta/paths/query-password-info.yaml'\n  /set-password:\n    $ref: './beta/paths/set-password.yaml'\n  /password-change-status/{id}:\n    $ref: './beta/paths/password-change-status.yaml'\n  /password-sync-groups:\n    $ref: './beta/paths/password-sync-groups.yaml'\n  /password-sync-groups/{id}:\n    $ref: './beta/paths/password-sync-group.yaml'\n  /password-org-config:\n    $ref: './beta/paths/password-org-config.yaml'\n  /peer-group-strategies/{strategy}/identity-outliers:\n    $ref: './beta/paths/peer-group-strategies.yaml'\n  /personal-access-tokens:\n    $ref: './beta/paths/personal-access-tokens.yaml'\n  /personal-access-tokens/{id}:\n    $ref: './beta/paths/personal-access-token.yaml'\n  /public-identities-config:\n    $ref: './beta/paths/public-identities-config.yaml'\n  /notification-template-context:\n    $ref: './beta/paths/notification-template-context.yaml'\n  /notification-preferences/{key}:\n    $ref: './beta/paths/notification-preferences.yaml'\n  /recommendations/request:\n    $ref: './beta/paths/recommendations-request.yaml'\n  /recommendations/config:\n    $ref: './beta/paths/recommendations-config.yaml'\n  /requestable-objects:\n    $ref: './v3/paths/requestable-object-list.yaml'\n  /role-insights/requests:\n    $ref: './beta/paths/role-insights-requests.yaml'\n  /role-insights/requests/{id}:\n    $ref: './beta/paths/role-insights-request.yaml'\n  /role-insights/summary:\n    $ref: './beta/paths/role-insights-summary.yaml'\n  /role-insights:\n    $ref: './beta/paths/role-insights.yaml'\n  /role-insights/{insightId}:\n    $ref: './beta/paths/role-insight.yaml'\n  /role-insights/{insightId}/entitlement-changes:\n    $ref: './beta/paths/role-insights-entitlement-changes.yaml'\n  /role-insights/{insightId}/entitlement-changes/download:\n    $ref: './beta/paths/role-insights-entitlement-changes-download.yaml'\n  /role-insights/{insightId}/current-entitlements:\n    $ref: './beta/paths/role-insights-current-entitlements.yaml'\n  /role-insights/{insightId}/entitlement-changes/{entitlementId}/identities:\n    $ref: './beta/paths/role-insights-entitlement-changes-identities.yaml'\n  /role-mining-sessions:\n    $ref: './beta/paths/role-mining-sessions.yaml'\n  /role-mining-sessions/{sessionId}:\n    $ref: './beta/paths/role-mining-session.yaml'\n  /role-mining-sessions/{sessionId}/status:\n    $ref: './beta/paths/role-mining-session-status.yaml'\n  /role-mining-sessions/{sessionId}/potential-role-summaries:\n    $ref: './beta/paths/role-mining-session-potential-role-summaries.yaml'\n  /role-mining-sessions/{sessionId}/potential-role-summaries/{potentialRoleId}:\n    $ref: './beta/paths/role-mining-session-potential-role-summary.yaml'\n  /role-mining-sessions/{sessionId}/potential-role-summaries/{potentialRoleId}/applications:\n    $ref: './beta/paths/role-mining-session-potential-role-applications.yaml'\n  /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/entitlement-popularities:\n    $ref: './beta/paths/role-mining-potential-role-entitlement-popularities.yaml'\n  /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/entitlement-popularity-distribution:\n    $ref: './beta/paths/role-mining-potential-role-entitlement-popularity-distribution.yaml'\n  /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/edit-entitlements:\n    $ref: './beta/paths/role-mining-potential-role-edit-entitlements.yaml'\n  /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/identities:\n    $ref: './beta/paths/role-mining-potential-role-identities.yaml'\n  /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/export:\n    $ref: './beta/paths/role-mining-session-potential-role-export.yaml'\n  /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/export-async:\n    $ref: './beta/paths/role-mining-session-potential-role-export-async.yaml'\n  /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/export-async/{exportId}:\n    $ref: './beta/paths/role-mining-session-potential-role-export-status.yaml'\n  /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/export-async/{exportId}/download:\n    $ref: './beta/paths/role-mining-session-potential-role-export-download.yaml'\n  /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/provision:\n    $ref: './beta/paths/role-mining-potential-role-provision.yaml'\n  /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/excluded-entitlements:\n    $ref: './beta/paths/role-mining-potential-role-excluded-entitlements.yaml'\n  /roles:\n    $ref: './beta/paths/roles.yaml'\n  /roles/{id}:\n    $ref: './beta/paths/role.yaml'\n  /roles/{id}/assigned-identities:\n    $ref: './beta/paths/role-assigned-identities.yaml'\n  /segments:\n    $ref: './beta/paths/segments.yaml'\n  /segments/{id}:\n    $ref: './beta/paths/segment.yaml'\n  /send-test-notification:\n    $ref: './beta/paths/send-test-notification.yaml'\n  /service-desk-integrations:\n    $ref: './beta/paths/service-desk-integrations.yaml'\n  /service-desk-integrations/{id}:\n    $ref: './beta/paths/service-desk-integration.yaml'\n  /service-desk-integrations/types:\n    $ref: './beta/paths/service-desk-integration-types.yaml'\n  /service-desk-integrations/templates/{scriptName}:\n    $ref: './beta/paths/service-desk-integration-template.yaml'\n  /service-desk-integrations/status-check-configuration:\n    $ref: './beta/paths/service-desk-integration-configuration.yaml'\n  /sp-config/export:\n    $ref: './beta/paths/sp-config-export.yaml'\n  /sp-config/export/{id}:\n    $ref: './beta/paths/sp-config-export-status.yaml'\n  /sp-config/export/{id}/download:\n    $ref: './beta/paths/sp-config-export-download.yaml'\n  /sp-config/import:\n    $ref: './beta/paths/sp-config-import.yaml'\n  /sp-config/import/{id}:\n    $ref: './beta/paths/sp-config-import-status.yaml'\n  /sp-config/import/{id}/download:\n    $ref: './beta/paths/sp-config-import-download.yaml'\n  /sp-config/config-objects:\n    $ref: './beta/paths/sp-config-objects.yaml'\n  /sources:\n    $ref: './beta/paths/sources.yaml'\n  /sources/{id}:\n    $ref: './beta/paths/source.yaml'\n  /sources/{id}/attribute-sync-config:\n    $ref: './beta/paths/attr-sync-config-source.yaml'\n  /sources/{sourceId}/connector/check-connection:\n    $ref: './beta/paths/source-connector-check-connection.yaml'\n  /sources/{sourceId}/connector/peek-resource-objects:\n    $ref: './beta/paths/source-connector-peek-resource-objects.yaml'\n  /sources/{sourceId}/connector/ping-cluster:\n    $ref: './beta/paths/source-connector-ping-cluster.yaml'\n  /sources/{sourceId}/connector/test-configuration:\n    $ref: './beta/paths/source-connector-test-configuration.yaml'\n  /sources/{id}/connectors/source-config:\n    $ref: './beta/paths/source-connectors-source-config.yaml'\n  /sources/{sourceId}/provisioning-policies:\n    $ref: './v3/paths/provisioning-policies.yaml'\n  /sources/{sourceId}/provisioning-policies/{usageType}:\n    $ref: './v3/paths/provisioning-policy.yaml'\n  /sources/{sourceId}/provisioning-policies/bulk-update:\n    $ref: './v3/paths/provisioning-policies-bulk-update.yaml'\n  /sources/{sourceId}/schemas:\n    $ref: './beta/paths/schemas.yaml'\n  /sources/{sourceId}/schemas/{schemaId}:\n    $ref: './beta/paths/schema.yaml'\n  /sources/{id}/schemas/accounts:\n    $ref: './beta/paths/source-accounts-schema.yaml'\n  /sources/{id}/schemas/entitlements:\n    $ref: './beta/paths/source-entitlements-schema.yaml'\n  /sources/{sourceId}/upload-connector-file:\n    $ref: './beta/paths/source-upload-connector-file.yaml'\n  /sources/{id}/synchronize-attributes:\n    $ref: './beta/paths/source-synchronize-attributes.yaml'\n  /tagged-objects:\n    $ref: './beta/paths/tagged-objects.yaml'\n  /tagged-objects/{type}:\n    $ref: './beta/paths/tagged-objects-type.yaml'\n  /tagged-objects/{type}/{id}:\n    $ref: './beta/paths/tagged-object.yaml'\n  /tagged-objects/bulk-add:\n    $ref: './beta/paths/bulk-add-tagged-objects.yaml'\n  /tagged-objects/bulk-remove:\n    $ref: './beta/paths/bulk-remove-tagged-objects.yaml'\n  /transforms:\n    $ref: './beta/paths/transforms.yaml'\n  /transforms/{id}:\n    $ref: './beta/paths/transform.yaml'\n  /translation-catalogs/{catalog-id}:\n    $ref: './beta/paths/message-catalog.yaml'\n  /triggers:\n    $ref: './beta/paths/triggers.yaml'\n  /trigger-subscriptions:\n    $ref: './beta/paths/trigger-subscriptions.yaml'\n  /trigger-subscriptions/{id}:\n    $ref: './beta/paths/trigger-subscription.yaml'\n  /trigger-subscriptions/validate-filter:\n    $ref: './beta/paths/trigger-subscriptions-validate-filter.yaml'\n  /trigger-invocations/status:\n    $ref: './beta/paths/trigger-invocations-status.yaml'\n  /trigger-invocations/{id}/complete:\n    $ref: './beta/paths/trigger-invocations-complete.yaml'\n  /trigger-invocations/test:\n    $ref: './beta/paths/trigger-invocations-test.yaml'\n  /verified-from-addresses:\n    $ref: './beta/paths/verified-from-addresses.yaml'\n  /verified-from-addresses/{id}:\n    $ref: './beta/paths/verified-from-address.yaml'\n  /dkim-attributes/{identities}:\n    $ref: './beta/paths/dkim-attributes.yaml'\n  /verify-domain-dkim:\n    $ref: './beta/paths/verify-domain-dkim.yaml'\n  /sod-policies:\n    $ref: './beta/paths/sod-policies.yaml'\n  /sod-policies/{id}:\n    $ref: './beta/paths/sod-policy.yaml'\n  /sod-policies/{id}/schedule:\n    $ref: './beta/paths/sod-schedule.yaml'\n  /sod-policies/{id}/violation-report/run:\n    $ref: './beta/paths/sod-report-run.yaml'\n  /sod-policies/{id}/violation-report:\n    $ref: './beta/paths/sod-violation-report.yaml'\n  /sod-violations/predict:\n    $ref: './beta/paths/sod/predict-violations.yaml'\n  /sod-violation-report-status/{reportResultId}:\n    $ref: './beta/paths/sod-violation-report-status.yaml'\n  /sod-violation-report/run:\n    $ref: './beta/paths/sod-all-report-run.yaml'\n  /sod-violation-report:\n    $ref: './beta/paths/sod-all-report-status.yaml'\n  /sod-violation-report/{reportResultId}/download:\n    $ref: './beta/paths/sod-download-default-report.yaml'\n  /sod-violation-report/{reportResultId}/download/{fileName}:\n    $ref: './beta/paths/sod-download-custom-report.yaml'\n  /work-items:\n    $ref: './beta/paths/work-items.yaml'\n  /work-items/completed:\n    $ref: './beta/paths/work-items-completed.yaml'\n  /work-items/count:\n    $ref: './beta/paths/work-items-count.yaml'\n  /work-items/count/completed:\n    $ref: './beta/paths/work-items-completed-count.yaml'\n  /work-items/summary:\n    $ref: './beta/paths/work-items-summary.yaml'\n  /work-items/{id}:\n    $ref: './beta/paths/work-item.yaml'\n  /work-items/{id}/approve/{approvalItemId}:\n    $ref: './beta/paths/work-items-approve-approval-item.yaml'\n  /work-items/{id}/reject/{approvalItemId}:\n    $ref: './beta/paths/work-items-reject-approval-item.yaml'\n  /work-items/bulk-approve/{id}:\n    $ref: './beta/paths/work-items-bulk-approve-approval-item.yaml'\n  /work-items/bulk-reject/{id}:\n    $ref: './beta/paths/work-items-bulk-reject-approval-item.yaml'\n  /work-items/{id}/submit-account-selection:\n    $ref: './beta/paths/work-items-account-selection.yaml'\n  /workflows:\n    $ref: './beta/paths/workflows.yaml'\n  /workflows/{id}:\n    $ref: './beta/paths/workflow.yaml'\n  /workflows/{id}/test:\n    $ref: './beta/paths/workflow-test.yaml'\n  /workflows/{id}/executions:\n    $ref: './beta/paths/workflow-executions.yaml'\n  /workflow-executions/{id}:\n    $ref: './beta/paths/workflow-execution.yaml'\n  /workflow-executions/{id}/history:\n    $ref: './beta/paths/workflow-execution-history.yaml'\n  /workflow-executions/{id}/cancel:\n    $ref: './beta/paths/workflow-execution-cancel.yaml'\n  /workflow-library:\n    $ref: './beta/paths/workflow-library.yaml'\n  /workflow-library/actions:\n    $ref: './beta/paths/workflow-library-actions.yaml'\n  /workflow-library/triggers:\n    $ref: './beta/paths/workflow-library-triggers.yaml'\n  /workflow-library/operators:\n    $ref: './beta/paths/workflow-library-operators.yaml'\n  /workflows/{id}/external/oauth-clients:\n    $ref: './beta/paths/workflow-external-oauth-client.yaml'\n  /workflows/execute/external/{id}:\n    $ref: './beta/paths/workflow-external-execute.yaml'\n  /workflows/execute/external/{id}/test:\n    $ref: './beta/paths/workflow-external-execute-test.yaml'",
			"canonicalURL": "/github.com/sailpoint-oss/developer.sailpoint.com@cd63498af255957541a3d47c113d00d8ed641df8/-/blob/static/api-specs/idn/sailpoint-api.beta.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/sailpoint-oss/developer.sailpoint.com/blob/cd63498af255957541a3d47c113d00d8ed641df8/static/api-specs/idn/sailpoint-api.beta.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"RecommendationRequestDto\": resolve \"#/components/schemas/RecommendationRequestDto\": $ref: resolve \"./beta/schemas/RecommendationRequestDto.yaml\": property \"excludeInterpretations\": at https://raw.githubusercontent.com/sailpoint-oss/developer.sailpoint.com/cd63498af255957541a3d47c113d00d8ed641df8/static/api-specs/idn/beta/schemas/RecommendationRequestDto.yaml:11:14: parse default: expected type \"boolean\", got \"string\""
}