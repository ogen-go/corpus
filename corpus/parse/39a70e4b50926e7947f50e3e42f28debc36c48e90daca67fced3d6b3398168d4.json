{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/influxdata/openapi"
		},
		"file": {
			"name": "oss.yml",
			"size": 0,
			"path": "src/oss.yml",
			"byteSize": 9100,
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: InfluxDB OSS API Service\n  version: 2.0.0\n  description: |\n    The InfluxDB v2 API provides a programmatic interface for all interactions with InfluxDB. Access the InfluxDB API using the `/api/v2/` endpoint.\nservers:\n  - url: /api/v2\n#REF_OSS_TAGS\n#REF_OSS_TAG_GROUPS\npaths:\n#REF_COMMON_PATHS\n  /debug/pprof/all:\n    $ref: \"./oss/paths/debug_pprof_all.yml\"\n  /debug/pprof/allocs:\n    $ref: \"./oss/paths/debug_pprof_allocs.yml\"\n  /debug/pprof/block:\n    $ref: \"./oss/paths/debug_pprof_block.yml\"\n  /debug/pprof/cmdline:\n    $ref: \"./oss/paths/debug_pprof_cmdline.yml\"\n  /debug/pprof/goroutine:\n    $ref: \"./oss/paths/debug_pprof_goroutine.yml\"\n  /debug/pprof/heap:\n    $ref: \"./oss/paths/debug_pprof_heap.yml\"\n  /debug/pprof/mutex:\n    $ref: \"./oss/paths/debug_pprof_mutex.yml\"\n  /debug/pprof/profile:\n    $ref: \"./oss/paths/debug_pprof_profile.yml\"\n  /debug/pprof/threadcreate:\n    $ref: \"./oss/paths/debug_pprof_threadcreate.yml\"\n  /debug/pprof/trace:\n    $ref: \"./oss/paths/debug_pprof_trace.yml\"\n  /health:\n    $ref: \"./oss/paths/health.yml\"\n  /metrics:\n    $ref: \"./oss/paths/metrics.yml\"\n  /ready:\n    $ref: \"./oss/paths/ready.yml\"\n  /users:\n    $ref: \"./common/paths/users.yml\"\n  \"/users/{userID}\":\n    $ref: \"./common/paths/users_userID.yml\"\n  /setup:\n    $ref: \"./common/paths/setup.yml\"\n  /authorizations:\n    $ref: \"./common/paths/authorizations.yml\"\n  /authorizations/{authID}:\n    $ref: \"./common/paths/authorizations_authID.yml\"\n  /variables:\n    $ref: \"./common/paths/variables.yml\"\n  \"/variables/{variableID}\":\n    $ref: \"./common/paths/variables_variableID.yml\"\n  /sources:\n    $ref: \"./common/paths/sources.yml\"\n  /sources/{sourceID}:\n    $ref: \"./common/paths/sources_sourceID.yml\"\n  /sources/{sourceID}/health:\n    $ref: \"./common/paths/sources_sourceID_health.yml\"\n  /sources/{sourceID}/buckets:\n    $ref: \"./common/paths/sources_sourceID_buckets.yml\"\n  /scrapers:\n    $ref: \"./common/paths/scrapers.yml\"\n  \"/scrapers/{scraperTargetID}\":\n    $ref: \"./common/paths/scrapers_scraperTargetID.yml\"\n  \"/scrapers/{scraperTargetID}/labels\":\n    $ref: \"./common/paths/scrapers_scraperTargetID_labels.yml\"\n  \"/scrapers/{scraperTargetID}/labels/{labelID}\":\n    $ref: \"./common/paths/scrapers_scraperTargetID_labels_labelID.yml\"\n  \"/scrapers/{scraperTargetID}/members\":\n    $ref: \"./common/paths/scrapers_scraperTargetID_members.yml\"\n  \"/scrapers/{scraperTargetID}/members/{userID}\":\n    $ref: \"./common/paths/scrapers_scraperTargetID_members_userID.yml\"\n  \"/scrapers/{scraperTargetID}/owners\":\n    $ref: \"./common/paths/scrapers_scraperTargetID_owners.yml\"\n  \"/scrapers/{scraperTargetID}/owners/{userID}\":\n    $ref: \"./common/paths/scrapers_scraperTargetID_owners_userID.yml\"\n  \"/backup/kv\":\n    $ref: \"./oss/paths/backup_kv.yml\"\n  \"/backup/metadata\":\n    $ref: \"./oss/paths/backup_metadata.yml\"\n  \"/backup/shards/{shardID}\":\n    $ref: \"./oss/paths/backup_shards_shardID.yml\"\n  \"/restore/kv\":\n    $ref: \"./oss/paths/restore_kv.yml\"\n  \"/restore/sql\":\n    $ref: \"./oss/paths/restore_sql.yml\"\n  \"/restore/bucket/{bucketID}\":\n    $ref: \"./oss/paths/restore_bucket_bucketID.yml\"\n  \"/restore/bucketMetadata\":\n    $ref: \"./oss/paths/restore_bucketMetadata.yml\"\n  \"/restore/shards/{shardID}\":\n    $ref: \"./oss/paths/restore_shards_shardID.yml\"\n  \"/config\":\n    $ref: \"./oss/paths/config.yml\"\n  /remotes:\n    $ref: \"./oss/paths/remotes.yml\"\n  /remotes/{remoteID}:\n    $ref: \"./oss/paths/remotes_remoteID.yml\"\n  /replications:\n    $ref: \"./oss/paths/replications.yml\"\n  /replications/{replicationID}:\n    $ref: \"./oss/paths/replications_replicationID.yml\"\n  /replications/{replicationID}/validate:\n    $ref: \"./oss/paths/replications_replicationID_validate.yml\"\n  /dashboards:\n    $ref: \"./common/paths/dashboards.yml\"\n  /tasks:\n    $ref: \"./common/paths/tasks.yml\"\ncomponents:\n  parameters:\n  #REF_COMMON_PARAMETERS\n  schemas:\n  #REF_COMMON_SCHEMAS\n    Authorization:\n      $ref: \"./common/schemas/Authorization.yml\"\n    Authorizations:\n      $ref: \"./common/schemas/Authorizations.yml\"\n    AuthorizationPostRequest:\n      $ref: \"./common/schemas/AuthorizationPostRequest.yml\"\n    Permission:\n      $ref: \"./common/schemas/Permission.yml\"\n    Resource:\n      $ref: \"./common/schemas/Resource.yml\"\n    User:\n      $ref: \"./common/schemas/User.yml\"\n    Users:\n      $ref: \"./common/schemas/Users.yml\"\n    OnboardingRequest:\n      $ref: \"./common/schemas/OnboardingRequest.yml\"\n    OnboardingResponse:\n      $ref: \"./common/schemas/OnboardingResponse.yml\"\n    Variable:\n      $ref: \"./common/schemas/Variable.yml\"\n    Variables:\n      $ref: \"./common/schemas/Variables.yml\"\n    Source:\n      $ref: \"./common/schemas/Source.yml\"\n    Sources:\n      $ref: \"./common/schemas/Sources.yml\"\n    ScraperTargetRequest:\n      $ref: \"./common/schemas/ScraperTargetRequest.yml\"\n    ScraperTargetResponse:\n      $ref: \"./common/schemas/ScraperTargetResponse.yml\"\n    ScraperTargetResponses:\n      $ref: \"./common/schemas/ScraperTargetResponses.yml\"\n    MetadataBackup:\n      $ref: \"./oss/schemas/MetadataBackup.yml\"\n    BucketMetadataManifests:\n      $ref: \"./oss/schemas/BucketMetadataManifests.yml\"\n    BucketMetadataManifest:\n      $ref: \"./oss/schemas/BucketMetadataManifest.yml\"\n    RetentionPolicyManifests:\n      $ref: \"./oss/schemas/RetentionPolicyManifests.yml\"\n    RetentionPolicyManifest:\n      $ref: \"./oss/schemas/RetentionPolicyManifest.yml\"\n    ShardGroupManifests:\n      $ref: \"./oss/schemas/ShardGroupManifests.yml\"\n    ShardGroupManifest:\n      $ref: \"./oss/schemas/ShardGroupManifest.yml\"\n    ShardManifests:\n      $ref: \"./oss/schemas/ShardManifests.yml\"\n    ShardManifest:\n      $ref: \"./oss/schemas/ShardManifest.yml\"\n    ShardOwners:\n      $ref: \"./oss/schemas/ShardOwners.yml\"\n    ShardOwner:\n      $ref: \"./oss/schemas/ShardOwner.yml\"\n    SubscriptionManifests:\n      $ref: \"./oss/schemas/SubscriptionManifests.yml\"\n    SubscriptionManifest:\n      $ref: \"./oss/schemas/SubscriptionManifest.yml\"\n    RestoredBucketMappings:\n      $ref: \"./oss/schemas/RestoredBucketMappings.yml\"\n    BucketShardMappings:\n      $ref: \"./oss/schemas/BucketShardMappings.yml\"\n    BucketShardMapping:\n      $ref: \"./oss/schemas/BucketShardMapping.yml\"\n    Config:\n      $ref: \"./oss/schemas/Config.yml\"\n    RemoteConnection:\n      $ref: \"./oss/schemas/RemoteConnection.yml\"\n    RemoteConnections:\n      $ref: \"./oss/schemas/RemoteConnections.yml\"\n    RemoteConnectionCreationRequest:\n      $ref: \"./oss/schemas/RemoteConnectionCreationRequest.yml\"\n    RemoteConnectionUpdateRequest:\n      $ref: \"./oss/schemas/RemoteConnectionUpdateRequest.yml\"\n    Replication:\n      $ref: \"./oss/schemas/Replication.yml\"\n    Replications:\n      $ref: \"./oss/schemas/Replications.yml\"\n    ReplicationCreationRequest:\n      $ref: \"./oss/schemas/ReplicationCreationRequest.yml\"\n    ReplicationUpdateRequest:\n      $ref: \"./oss/schemas/ReplicationUpdateRequest.yml\"\n  responses:\n    #REF_COMMON_RESPONSES\n  securitySchemes:\n    # TODO: Uncomment when Bearer auth is also available in Cloud:\n    # BearerAuthentication:\n    #   type: http\n    #   scheme: \"bearer\"\n    #   description: |\n    #     Use the [Bearer authentication](#section/Authentication/BearerAuthentication)\n    #     scheme to authenticate to the InfluxDB API.\n    #\n    #\n    #     In your API requests, send an `Authorization` header.\n    #     For the header value, provide the word `Bearer` followed by a space and an InfluxDB API token.\n    #\n    #\n    #     ### Syntax\n    #\n    #     `Authorization: Bearer YOUR_INFLUX_TOKEN`\n    #\n    #\n    #     For more information and examples, see the following:\n    #       - [`/authorizations`](#tag/Authorizations) endpoint.\n    #       - [Authorize API requests]({{% INFLUXDB_DOCS_URL %}}/api-guide/api_intro/#authentication).\n    #       - [Manage API tokens]({{% INFLUXDB_DOCS_URL %}}/security/tokens/).\n    TokenAuthentication:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: |\n        Use the [Token authentication](#section/Authentication/TokenAuthentication)\n        scheme to authenticate to the InfluxDB API.\n\n\n        In your API requests, send an `Authorization` header.\n        For the header value, provide the word `Token` followed by a space and an InfluxDB API token.\n        The word `Token` is case-sensitive.\n\n\n        ### Syntax\n\n        `Authorization: Token YOUR_INFLUX_TOKEN`\n\n\n        For more information and examples, see the following:\n          - [`/authorizations`](#tag/Authorizations) endpoint.\n          - [Authorize API requests]({{% INFLUXDB_DOCS_URL %}}/api-guide/api_intro/#authentication).\n          - [Manage API tokens]({{% INFLUXDB_DOCS_URL %}}/security/tokens/).\n    BasicAuthentication:\n      type: http\n      scheme: basic\n      description: |\n        Use the HTTP Basic authentication scheme for InfluxDB `/api/v2` API operations that support it.\n\n        Username and password schemes require the following credentials:\n          - **username**\n          - **password**\n\nsecurity:\n  - TokenAuthentication: []\n  # TODO: Uncomment when Bearer auth is also available in Cloud:\n  # - BearerAuthentication: []\n",
			"canonicalURL": "/github.com/influxdata/openapi@efe6a6f2a6195ea85f43c517ec9b8315bdd7eee7/-/blob/src/oss.yml",
			"externalURLs": [
				{
					"url": "https://github.com/influxdata/openapi/blob/efe6a6f2a6195ea85f43c517ec9b8315bdd7eee7/src/oss.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: schemas: \"Permission\": parse schema: resolve \"./common/schemas/Permission.yml\": external \"./common/schemas/Permission.yml\": file: local file reference is not allowed"
}