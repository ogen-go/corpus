{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/UnitedEffects/ueauth"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "swagger.yaml",
			"byteSize": 344326,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: Boilerplate Service\n  description: \"UEAuth is provided by \u003ca href='https://unitedeffects.com'\u003eUnited Effects LLC\u003c/a\u003e. Copyright \u0026#169; 2022, all rights reserved.\u003cbr\u003e\u003cbr\u003e\n  UE Auth is a multi-tenant OIDC Provider, User Management, B2B Product Access, and Roles/Permissions Management system intended to create a single hybrid solution to serve as Identity and Access for both self-registered B2C Apps and Enterprise B2B Solutions. The feature set combines similar functionality you find in Commercial SaaS providers for Identity Management at far less cost, and provides all of the missing pieces enterprises typically end up having to develop on their own in a single package available to your organization through an \u003ca href='https://github.com/UnitedEffects/ueauth/blob/master/LICENSE.md'\u003eApache 2.0 license\u003c/a\u003e. You can find the project \u003ca href='https://github.com/UnitedEffects/ueauth'\u003ehere\u003c/a\u003e.\u003cbr\u003e\u003cbr\u003eUE Auth can be thought of in three parts:\u003cul\u003e\u003cli\u003e\u003cstrong\u003eThe OIDC Provider\u003c/strong\u003e - Built on the only node.js \u003ca href='https://github.com/panva/node-oidc-provider'\u003ecertified OIDC provider library\u003c/a\u003e currently available by \u003ca href='https://github.com/panva'\u003eFilip Skokan (Panva)\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eUE Auth General\u003c/strong\u003e - Our implementation of Auth Groups as unique pools of users, accounts, notification plugins, and other operations, all documented in this API\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eUE Auth Access\u003c/strong\u003e - Our implementation of b2b models to organize customers or departments (Organizations), products, roles, permissions and the application of these concepts to users to define access\u003c/li\u003e\u003c/ul\u003eThis OpenAPI specification does not detail the entirety of the OIDC API. Instead, you can reference the official Open ID Connect documentation for the API (\u003ca href='https://openid.net/developers/specs/'\u003eOIDC API DOCUMENTATION\u003c/a\u003e) or Panva's amazingly detailed documentation in \u003ca href='https://github.com/panva/node-oidc-provider'\u003eGitHub\u003c/a\u003e. Within UE Auth, the OIDC endpoints are distinguished by being available directly from the root domain with the Auth Group context: e.g. \u003ccode\u003e/{group}/token\u003c/code\u003e. As a general reference, this provider implements the following OIDC endpoints, which you will find specific contract documentation for in the above mentioned \u003ca href='https://openid.net/developers/specs/'\u003eOIDC API DOCUMENTATION\u003c/a\u003e.\u003cbr\u003e\u003ccode\u003e\u003cbr\u003eauthorization: '/{group}/auth',\u003cbr\u003e\n  check_session: '/{group}/session/check',\u003cbr\u003e\n  code_verification: '/{group}/device',\u003cbr\u003e\n  device_authorization: '/{group}/device/auth',\u003cbr\u003e\n  end_session: '/{group}/session/end',\u003cbr\u003e\n  introspection: '/{group}/token/introspection',\u003cbr\u003e\n  initial_access: '/{group}/token/initial_access',\u003cbr\u003e\n  jwks: '/{group}/jwks',\u003cbr\u003e\n  pushed_authorization_request: '/{group}/request',\u003cbr\u003e\n  registration: '/{group}/reg',\u003cbr\u003e\n  revocation: '/{group}/token/revocation',\u003cbr\u003e\n  token: '/{group}/token',\u003cbr\u003e\n  userinfo: '/{group}/me'\u003c/code\u003e\u003cbr\u003e\u003cbr\u003e\n  \u003csmall\u003eWhile the OIDC API is not fully detailed, a few of the endpoints are defined below to aid in debug or testing.\u003c/small\u003e\u003cbr\u003e\u003cbr\u003e\n  UE Auth General and Access APIs are completely defined and documented below for your convenience. These APIs are distinguished in the service with prefix \u003ccode\u003e/api\u003c/code\u003e.\n  \u003ch2\u003eQuery and Patch Standards\u003c/h2\u003eThis API uses \u003ca href='https://www.odata.org/documentation/'\u003eoData\u003c/a\u003e and \u003ca href='http://jsonpatch.com/'\u003eJSON Patch\u003c/a\u003e as standards for most paginated GET and PATCH methods. You may wish to review these standards.\n  \u003ch2\u003eGetting Started\u003c/h2\u003e\u003ci\u003eIf you are the service owner and deploying it for the first time, see the github wiki for \u003ca href='https://github.com/UnitedEffects/ueauth/wiki/Local-Setup'\u003einitial setup instructions.\u003c/a\u003e\u003c/i\u003e\u003cbr\u003e\u003cbr\u003eFirst, please familiarize yourself with the concepts these resources (AuthGroup, Organization, etc...) represent by reading about them \u003ca href='https://github.com/UnitedEffects/ueauth/wiki'\u003ehere\u003c/a\u003e.\u003cbr\u003e\u003cbr\u003eSecond, please review the overview of how permissions manage access to this API \u003ca href='https://github.com/UnitedEffects/ueauth/wiki/UE-Auth-Permissions'\u003ehere\u003c/a\u003e.\u003cbr\u003e\u003cbr\u003eFinally, you'll need an Auth Group to utilize the service.\u003cul\u003e\u003cli\u003ePOST a new Auth Group making sure to save the Initial Access Token provided upon creation.\u003c/li\u003e\u003cli\u003eOnce you have it, POST a new user account to the same auth group, making sure to use the same email address and the initial access token as a bearer token.\u003c/li\u003e\u003cli\u003eThis will activate your auth group, create the account, and provide you with a client_id and secret to use for all interactions with this API.\u003c/li\u003e\u003cli\u003eAccess the wellknown using your group ID or group 'pretty name': https://qa.ueauth.io/{group}/.well-known/openid-configuration\u003c/li\u003e\u003c/ul\u003e\"\n  x-logo:\n    url: https://ue-platform-content.s3.amazonaws.com/0f8aeec8-8e9b-4629-b06c-6672b4a2e9ad\ntags:\n  - name: Auth Groups\n    description: Auth Groups are a pool of globally unique users\n  - name: OIDC\n    description: Some Key OIDC endpoints (not all) - see \u003ca href='https://openid.net/developers/specs/'\u003eOIDC API DOCUMENTATION\u003c/a\u003e\n  - name: Users\n    description: User Accounts unique to the Auth Group. Email must be unique\n  - name: Profiles\n    description: Secured Account Profiles\n  - name: Profile Requests\n    description: Request access to someone's profile data\n  - name: Profile Access\n    description: View access you have or have granted to secured profiles\n  - name: Clients\n    description: Reading or Deleting Clients in your Auth Group. User OIDC /reg for Create or Updates\n  - name: Account Dashboard\n    description: Manage personal account notifications, organizations, products, and more\n  - name: Client Access\n    description: Clients can be supplied with a single product reference and multiple roles to empower them with permissions\n  - name: Validate Access\n    description: Use this endpoint to return the access associated to an accessToken or clientCredential\n  - name: Products\n    description: Manage Products within your Auth Group\n  - name: Roles\n    description: Manage Roles globally for all Products and all Organizations\n  - name: Permissions\n    description: Manage Permissinos for one Product at a time.\n  - name: Notification\n    description: Manage notifications sent to the http notification plugin. Requires the plugin to be enabled.\n  - name: MFA Challenge\n    description: Manage MFA interactions when the plugin is enabled\n  - name: Operations\n    description: Commands for Artifact or Security Updates\n  - name: Plugins\n    description: Plugin configurations for the service tied to the Root AuthGroup (e.g. Notifications)\n  - name: General Functional\n    description: General APIs to aid data updates or UI functionality\n  - name: Organizations\n    description: Manage subsets of the Auth Group data to represent customers, departments, etc. Apply Products to indicate licensed software\n  - name: Organization Users \u0026 Access\n    description: Manageing enterprise access being applied to users\n  - name: Organization User Profiles\n    description: Personal information (name, address, number) added and only accessible by the Organization and referenced Account\n  - name: Organization Notification\n    description: Manage notifications within the context of an Organization. Requires the plugin to be enabled.\n  - name: Organization Domains\n    description: Seperate an Organization into smaller subsets to which product access can be assigned\n  - name: Organization Products\n    description: Access products associated to your Organization\n  - name: Organization Permissions\n    description: Access permissions of products associated to your Organization\n  - name: Organization Roles\n    description: Manage Roles specific to a single organization. Sometimes referred to as \"Custom Roles\"\n  - name: Health\n\npaths:\n  # Functional APIs\n  /api/group-info/{group}:\n    get:\n      tags:\n        - General Functional\n      summary: Return a clientId for UE Auth UI from the AuthGroup.\n      description: This API can be used by a caller to return the clientId associated to an AuthGroup so that the appropriate OIDC login link can be generated (i.e. /{group}/auth?client_id={client_id}). This endpoint is secured be ensuring https and a UI host whitelist.\n      parameters:\n        - name: group\n          in: path\n          description: id, prettyName, or aliasDnsUI value for the AuthGroup\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                  data:\n                    type: object\n                    properties:\n                      group:\n                        type: string\n                        example: V1StGXR8_Z5jdHi6B-myT\n                      name:\n                        type: string\n                        description: the name of the authgroup\n                      searched:\n                        type: string\n                        description: the authgroup searched\n                      id:\n                        type: string\n                        description: the client_id of the AuthGroup\n                      preferredHost:\n                        type: string\n                        description: custom domain for UI if present\n                      preferredOP:\n                        type: string\n                        description: custom domain for OIDC provider if present\n                      core:\n                        type: object\n                        description: information about AuthGroup primary products - only sent when logged in and authorized\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: [ ]\n        - openId: [ ]\n  /api/{group}/checkforupdates:\n    get:\n      tags:\n        - General Functional\n      summary: This API informs you if it is advisable to trigger a system update via /api/group/updatecore\n      description: As roles and permissions data for the UE Auth application is periodically updated, this endpoint will let you know if you should update and whether or not that update is required or can wait.\n      parameters:\n        - name: group\n          in: path\n          description: id or prettyName of the authgroup\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                  data:\n                    $ref: '#/components/schemas/checkForUpdate'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: [ ]\n        - openId: [ ]\n  /api/{group}/updatecore:\n    put:\n      tags:\n        - General Functional\n      summary: Update the permissions and roles of UEAuth to the latest available\n      description: This API will attempt to update the permissions and roles associated to UEAuth and the auto generated products of your AuthGroup.\n      parameters:\n        - name: group\n          in: path\n          description: id or prettyName of the authgroup\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                  data:\n                    $ref: '#/components/schemas/updateCore'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: [ ]\n        - openId: [ ]\n\n  # Auth Group APIS\n  /api/groupcheck/{prettyName}:\n    get:\n      tags:\n        - Auth Groups\n      summary: Check if a pretty name is available to save to a group\n      description: Pretty names, a.k.a. a url slug or tenant alias, are url safe unique strings that can be used as an alias in place of an ID when referencing an AuthGroup.\n      parameters:\n        - name: prettyName\n          in: path\n          description: check to see if this prettyName is available\n          required: true\n          schema:\n            type: string\n      responses:\n        '202':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  type:\n                    type: string\n                    enum:\n                      - Auth Group\n                  data:\n                    type: object\n                    properties:\n                      available:\n                        type: boolean\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n  /api/group:\n    post:\n      tags:\n        - Auth Groups\n      summary: Register a new auth group\n      description: Create your AuthGroup and hold on to the Initial Access Token that will be generated and returned upon creation. You will need it to create your Account user (POST /api/{group}/account) with the same email address you used to create your AuthGroup (owner). The AuthGroup will be inactive until you create your owner Account, at which point it will activate and all necassary data will be generated. NOTE - You are not able to create an authGroup with the externalStreaming setting enabled. You must update it after.\n      responses:\n        '201':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Auth Group\n                  data:\n                    $ref: '#/components/schemas/authGroupInitial'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/writeAuthGroup'\n        description: Account data to be written\n        required: true\n  /api/groups:\n    get:\n      tags:\n        - Auth Groups\n      summary: Retrieve all auth groups\n      description: This will return all Auth Groups within a given instance of this sofware. No permission for this endpoint is defined. Instead, you must be part of the Root AuthGroup to access.\n      parameters:\n        - name: $filter\n          in: query\n          description: oData filter Query\n          required: false\n          schema:\n            type: string\n        - name: $select\n          in: query\n          description: oData select Query\n          required: false\n          schema:\n            type: string\n        - name: $orderby\n          in: query\n          description: oData orderby Query\n          required: false\n          schema:\n            type: string\n        - name: $skip\n          in: query\n          description: oData skip Query\n          required: false\n          schema:\n            type: string\n        - name: $top\n          in: query\n          description: oData top Query\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getGroups'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n  '/api/group/{id}':\n    get:\n      tags:\n        - Auth Groups\n      summary: Find an Auth Group with ID\n      description: Identify a single Auth Group by its ID or prettyName\n      parameters:\n        - name: id\n          in: path\n          description: id of group type to return\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getGroup'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n\n    patch:\n      tags:\n        - Auth Groups\n      summary: Patch an existing Auth Group\n      description: Patch an existing Auth Group. You must use the ID for this as a precaution, prettyName will not work to identify the record being updated.\n      parameters:\n        - name: id\n          in: path\n          description: id of group to update\n          required: true\n          schema:\n            type: string\n      responses:\n        '201':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getGroup'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/jsonPatch'\n        description: JSON Patch specific to your account object\n        required: true\n\n  /api/group/{id}/alias-dns:\n    post:\n      tags:\n        - Auth Groups\n      summary: Add an alias DNS for UI access to the AuthGroup\n      description: Typically, this API should only be accessed by a Root user or client. This allows you to set unique DNS aliases for the AuthGroup. Keep in mind that this means that every DNS entry can only be used once, so you will want to impliment functionality externally to this system to validate ownership of a DNS domain. The API only writes and overwrites, it does not remove existing values. Use DELETE to remove values. Additionally, this API does not do any validation or DNS mapping directly. This is just a record to associate the DNS to the AuthGroup.\n      parameters:\n        - name: id\n          in: path\n          description: ID of group to update. Must be the ID, prettyName is not sufficient for this request.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Auth Group\n                  data:\n                    $ref: '#/components/schemas/authGroup'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/agAliasDns'\n        description: DNS domains to be written\n        required: true\n  /api/group/{id}/alias-dns/{target}:\n    delete:\n      tags:\n        - Auth Groups\n      summary: Remove alias DNS for UI access to the AuthGroup\n      description: Typically, this API should only be accessed by a Root user or client. This allows you to remove unique DNS aliases for the AuthGroup.\n      parameters:\n        - name: id\n          in: path\n          description: ID of group to update. Must be the ID, prettyName is not sufficient for this request.\n          required: true\n          schema:\n            type: string\n        - name: target\n          in: path\n          description: ui or oidc alias\n          required: true\n          schema:\n            type: string\n            enum:\n              - ui\n              - oidc\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Auth Group\n                  data:\n                    $ref: '#/components/schemas/authGroup'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n\n  # Plugins\n  /api/plugins/global/audit:\n    get:\n      tags:\n        - Plugins\n      summary: Retrieves an audit of all plugin updates made and by who sorted from current/latest on back\n      description: Retrieves an audit of all plugin updates made and by who sorted from current/latest on back\n      operationId: auditPluginOptions\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/globalPlugins'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: [ ]\n        - openId: []\n  /api/plugins/global:\n    get:\n      tags:\n        - Plugins\n      summary: Retrieve all global plugin configurations\n      description: Retrieve all global plugin configurations\n      operationId: getLatestPluginOptions\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/globalPlugins'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: [ ]\n        - openId: []\n  /api/plugins/global/notifications:\n    post:\n      tags:\n        - Plugins\n      summary: Configure Global Notifications Plugins as Service Owner\n      description: Configure Global Notifications Plugins as Service Owner\n      responses:\n        '201':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  enabled:\n                    type: boolean\n                  notificationServiceClientId:\n                    type: string\n                  notificationServiceClientName:\n                    type: string\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                enabled:\n                  type: boolean\n                notificationServiceUri:\n                  type: string\n                  description: the url to the endpoint that will recieve http notification POST requests\n                  example: \"https://youremailortextservice.com/path\"\n                currentVersion:\n                  type: number\n                  description: the current global plugin version. this will autoincrement if successful\n        description: Setting for notification desired\n        required: true\n\n  /api/plugins/global/event-stream:\n    post:\n      tags:\n        - Plugins\n      summary: Configure Global Event Stream Plugin as Service Owner\n      description: Configure Global Event Stream Plugin as Service Owner\n      responses:\n        '201':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/globalPlugins'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/writeEventStream'\n        description: Setting for mfa challenge desired\n        required: true\n\n  /api/plugins/global/mfa-challenge:\n    post:\n      tags:\n        - Plugins\n      summary: Configure Global Mfa Challenge Plugin as Service Owner\n      description: Configure Global Mfa Challenge Plugins as Service Owner\n      responses:\n        '201':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/globalPlugins'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/writeMfaChallenge'\n        description: Setting for mfa challenge desired\n        required: true\n\n  /api/{group}/mfa/callback:\n    post:\n      tags:\n        - MFA Challenge\n      summary: Callback used by provider to communicate user approval or denial of challenge\n      description: When configuring an MFA provider, you will likely need to provide a callback uri.\n      operationId: mfaCallback\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n      responses:\n        '204':\n          description: callback accepted\n        '400':\n          $ref: '#/components/responses/BadRequest'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/callbackRequest'\n\n  /api/{group}/mfa/{key}/account/{account}/interaction/{uid}/status:\n    get:\n      tags:\n        - MFA Challenge\n      summary: Poll UE Auth for a response to a challenge.\n      description: You can poll UE Auth for the response to a challenge sent to a user.\n      operationId: mfaStatus\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: key\n          in: path\n          description: the providerKey (id) returned by the challenge request\n          schema:\n            type: string\n          required: true\n        - name: account\n          in: path\n          description: the account Id being challenged\n          schema:\n            type: string\n          required: true\n        - name: uid\n          in: path\n          description: the interaction Id or state used to ensure secure interaction\n          schema:\n            type: string\n          required: true\n      responses:\n        '204':\n          description: approved\n        '206':\n          description: not yet approved\n        '400':\n          $ref: '#/components/responses/BadRequest'\n\n  /api/{group}/mfa/instructions:\n    post:\n      tags:\n        - MFA Challenge\n      summary: Request an account be bound and instructions for device setup be provided\n      description: This API is multi-purpose, responding to a request based on which properties have been provided. See request object for details.\n      operationId: mfaInstructions\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/mfaInstructions'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '427':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - basic: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/mfaRequestBind'\n        required: true\n\n  /api/{group}/mfa/safe-recovery:\n    post:\n      tags:\n        - MFA Challenge\n      summary: Request to verify your identity via email or an existing MFA device\n      description: This API allows a user to validate who they are through email or a challenge. This is used as part of MFA recovery when the user wants to bind to a new device. Security on this is an initial access token as provided by the instructions endpoint.\n      operationId: mfaSafeRecovery\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/mfaSafeRecovery'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '427':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: [ ]\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/sendMfaSafeRecovery'\n        required: true\n\n  # Account APIs\n  /api/{group}/account:\n    post:\n      tags:\n        - Users\n      summary: Register a new user\n      description: Register a new user to an Auth Group independant of any organization or other access considerations. Self-registration is possible if the Auth Group has defined locked=false. Otherwise, an appropriately permissioned member of the Auth Group must create the user. Please note that the only data provided by this endpoint (or any Account API) is the id, username, and email (and creat/modify/active meta data) of the user within this AuthGroup. The Account record holds no personal information aside from this email address and an optional phone number which is only visible to that Account owner; however, if you supply profile information, a secured profile record will be generated which the account holder can administrate later.\n      operationId: writeAccount\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n      responses:\n        '201':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/getAccount'\n                  - $ref: '#/components/schemas/firstAccountWrite'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/writeAccount'\n        description: Account data to be written\n        required: true\n  /api/{group}/organization/{org}/accounts/search:\n    get:\n      tags:\n        - Organization Users \u0026 Access\n      summary: Search Accounts in the authGroup with an org context\n      description: Allows you to search accounts in the authgroup using a text search\n      operationId: searchAccountsFromOrg\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: org\n          in: path\n          description: the organization context\n          schema:\n            type: string\n          required: true\n        - name: q\n          in: query\n          description: keyword search\n          required: true\n          schema:\n            type: string\n        - name: restrictEmail\n          in: query\n          description: restrict the search to specific email domains. comma dilimited\n          example: example.com,google.com,test.com\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Account\n                  data:\n                    $ref: '#/components/schemas/searchAccounts'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n  /api/{group}/accounts/search:\n    get:\n      tags:\n        - Users\n      summary: Search Accounts in the authGroup\n      description: Allows you to search accounts in the authgroup using a text search\n      operationId: searchAccounts\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: q\n          in: query\n          description: keyword search\n          required: true\n          schema:\n            type: string\n        - name: restrictEmail\n          in: query\n          description: restrict the search to specific email domains. comma dilimited\n          example: example.com,google.com,test.com\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Account\n                  data:\n                    $ref: '#/components/schemas/searchAccounts'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n  /api/{group}/accounts:\n    post:\n      tags:\n        - Users\n      summary: Import users to the Auth Group\n      description: This API allows you to import an array of users to the Auth Group independant of any organization or other access considerations. This API cannot be used for self-registration. Passwords are automatically generated and all users must claim their accounts. No profile data can be added with this API.\n      operationId: importAccounts\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n      responses:\n        '201':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: 'Accounts'\n                  data:\n                    type: object\n                    properties:\n                      attempted:\n                        type: number\n                        description: how many attempted\n                      ok:\n                        type: number\n                        description: how many successfully written?\n                      failed:\n                        type: array\n                        items:\n                          type: object\n                        description: which accounts failed and why\n                      success:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/getAccount'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: [ ]\n        - openId: [ ]\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/importAccount'\n        description: Account data to be written\n        required: true\n    get:\n      tags:\n        - Users\n      summary: Retrieve all users in the Auth Group\n      description: This will return every Account (user) associated to the Auth Group.\n      operationId: getAccounts\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: $filter\n          in: query\n          description: oData filter Query\n          required: false\n          schema:\n            type: string\n        - name: $select\n          in: query\n          description: oData select Query\n          required: false\n          schema:\n            type: string\n        - name: $orderby\n          in: query\n          description: oData orderby Query\n          required: false\n          schema:\n            type: string\n        - name: $skip\n          in: query\n          description: oData skip Query\n          required: false\n          schema:\n            type: string\n        - name: $top\n          in: query\n          description: oData top Query\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getAccounts'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n  '/api/{group}/account/{id}':\n    get:\n      tags:\n        - Users\n      summary: Find a User with ID\n      description: Identify a single user by their user ID. If you enter \"me\" in the ID field, it will return your own information.\n      operationId: getAccount\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: id\n          in: path\n          description: id of account type to return\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getAccount'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n    delete:\n      tags:\n        - Users\n      summary: Hard delete a user\n      description: This request will completely remove the unique Account from the AuthGroup. You should be careful with this method as it may lead to unforeseen data states such as orphaned records if you have tightly integrated with this API.\n      operationId: deleteAccount\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: id\n          in: path\n          description: id of account type to delete\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getAccount'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n    patch:\n      tags:\n        - Users\n      summary: Patch an existing User\n      description: This allows you to update an Account record. While there is a permission to allow administrators of the AuthGroup to do this, it is recommended that you typically allow users themselves to manage their information unless they request assistance.\n      operationId: patchAccount\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: id\n          in: path\n          description: id of account to update\n          required: true\n          schema:\n            type: string\n      responses:\n        '201':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getAccount'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/jsonPatch'\n        description: JSON Patch specific to your account object\n        required: true\n\n  /api/{group}/account/codes:\n    put:\n      tags:\n        - Users\n      summary: Create Account Recovery Codes\n      description: Recovery codes are 10 hashed strings that are only ever displayed when the user generates them. In the event of an account lockout, they can be used to restore access and reset password should no other option be available. If lost, they must be reset. They cannot be updated and hitting this endpoint more than once will reset them.\n      operationId: writeRecoveryCodes\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  type:\n                    type: string\n                    example: Accounts\n                  data:\n                    type: array\n                    items:\n                      type: string\n                      description: the codes\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n\n  /api/{group}/account/panic:\n    put:\n      tags:\n        - Users\n      summary: Immediately Lock an Account\n      description: If a user notices unusual activity, they can immediately lock their account. This action requires recovery codes to undo. If the user has not generated recovery codes, they will need to contact an administrator for assistance. This action will also kill all active sessions for the user. PLEASE NOTE, if JWT tokens have been issued for the account, this will not disable them. Always ensure that Access Tokens have reasonable expiration times to avoid issues with locked accounts and live active JWT tokens.\n      operationId: lockMyAccount\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n      responses:\n        '204':\n          description: successful operation\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - email\n              properties:\n                email:\n                  type: string\n                  format: email\n      security:\n        - bearer: []\n        - openId: []\n\n  /api/{group}/account/start-recovery:\n    post:\n      tags:\n        - Users\n      summary: Initiate Recovery of Locked Account\n      description: This API will allow a user to recovery their account after locking using their recovery codes. If the request is successful, this API returns a bearer token to be used in the actual recovery. The API will also set a state cookie as part of the response to ensure the second recovery request is from the same device.\n      operationId: startRecovery\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  token:\n                    type: string\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/recoveryRequestObject'\n\n  /api/{group}/account/recover:\n    put:\n      tags:\n        - Users\n      summary: Unlock an Account and Reset Password\n      description: Using the token from \"start-recovery\", you can unlock the account and set a new password. Optionally, you can set a random strong password.\n      operationId: recoverAccount\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/recoverAccountResponse'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/recoverAccountRequest'\n\n  # Secured Account Profiles\n  /api/{group}/profile:\n    post:\n      tags:\n        - Profiles\n      summary: Create a secured profile that only you (the account holder) can access or govern access to.\n      description: \"While Accounts themselves do not carry personal information, two concepts in UE Auth do: Secured Profiles and Organization User Profiles (as described here). Secured Profiles are entirely controlled by the Account holder (user) and not accessible by anyone other than that user. Secured Profile data can be requested but must always be actively approved and provided or denied by the User.\"\n      operationId: writeProfile\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n      responses:\n        '201':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: 'Secured Profile'\n                  data:\n                    $ref: '#/components/schemas/securedProfile'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/securedProfileWrite'\n        description: Profile data to be written\n        required: true\n    patch:\n      tags:\n        - Profiles\n      summary: Update your secured profile\n      description: Update your secured profile tied to your account id.\n      operationId: updateProfile\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: 'Secured Profile'\n                  data:\n                    $ref: '#/components/schemas/securedProfile'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/jsonPatch'\n        description: Profile data to be updated\n        required: true\n    get:\n      tags:\n        - Profiles\n      summary: Retrieve your secured profile\n      description: This will return only your profile tied to your account id\n      operationId: getProfile\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: 'Secured Profile'\n                  data:\n                    $ref: '#/components/schemas/securedProfile'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n    delete:\n      tags:\n        - Profiles\n      summary: Delete your secured profile\n      description: This will delete only your secured profile tied to your account id\n      operationId: removeProfile\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: 'Secured Profile'\n                  data:\n                    $ref: '#/components/schemas/securedProfile'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n  /api/{group}/profiles/{id}:\n    get:\n      tags:\n        - Profiles\n      summary: Retrieve a secured profile by ID\n      description: You can retrieve your profile or one you have view access to\n      operationId: getProfileById\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: id\n          in: path\n          description: account id of the profile owner\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: 'Secured Profile'\n                  data:\n                    $ref: '#/components/schemas/securedProfile'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n\n  # Request Account Profile Access\n  /api/{group}/profile/request/{account_id}:\n    post:\n      tags:\n        - Profile Requests\n      summary: Create a request to access someone's profile information\n      description: Requests are async mechanisms to access profile data. The Account holder may approve or deny the request. Requests automatically expire after 7 days.\n      operationId: createRequest\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: account_id\n          in: path\n          description: the account Id to whom you are making the request\n          schema:\n            type: string\n          required: true\n      responses:\n        '201':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: 'Secured Profile'\n                  data:\n                    $ref: '#/components/schemas/profileRequest'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/writeProfileRequest'\n        description: Profile data to be written\n        required: true\n\n  /api/{group}/profile/requests/{sor}:\n    get:\n      tags:\n        - Profile Requests\n      summary: Retrieve your profile requests\n      description: Specify requests to you or from you and retrieve the list\n      operationId: getRequests\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: sor\n          in: path\n          description: specify sent or received\n          schema:\n            type: string\n            default: received\n            enum:\n              - sent\n              - received\n          required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: 'Secured Profile'\n                  data:\n                    $ref: '#/components/schemas/profileRequest'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: [ ]\n        - openId: [ ]\n\n  /api/{group}/profile/request/{id}:\n    patch:\n      tags:\n        - Profile Requests\n      summary: Approve or deny a request to access your profile data\n      description: Approve or deny a request to access your profile data. Only the recipient can make this change.\n      operationId: updateRequest\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: id\n          in: path\n          description: the request id\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: 'Secured Profile'\n                  data:\n                    $ref: '#/components/schemas/profileRequest'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/profileRequestUpdate'\n        description: Profile data to be updated\n        required: true\n    get:\n      tags:\n        - Profile Requests\n      summary: Get a profile request\n      description: Get a profile request. You must be either the recipient or sender.\n      operationId: getRequest\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: id\n          in: path\n          description: the request id\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: 'Secured Profile'\n                  data:\n                    $ref: '#/components/schemas/profileRequest'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n    delete:\n      tags:\n        - Profile Requests\n      summary: Delete a profile request\n      description: Delete a profile request. You must be either the recipient or sender.\n      operationId: removeRequest\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: id\n          in: path\n          description: the request id\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: 'Secured Profile'\n                  data:\n                    $ref: '#/components/schemas/profileRequest'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n\n  # Secured Profile View Access\n\n  /api/{group}/profile/accesses/{gor}:\n    get:\n      tags:\n        - Profile Access\n      summary: Retrieve secured profile access records\n      description: Retrieve secured profile access records of those profiles you have been cleared to access or of people who have access to your profile\n      operationId: getAllAccess\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: gor\n          in: path\n          description: access given or received\n          schema:\n            type: string\n            default: given\n            enum:\n              - given\n              - received\n          required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: 'Secured Profile'\n                  data:\n                    $ref: '#/components/schemas/viewAccessObject'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: [ ]\n        - openId: [ ]\n\n  /api/{group}/profile/access/{id}:\n    get:\n      tags:\n        - Profile Access\n      summary: Get a profile access record\n      description: Get a profile access record. You must be either the target or person being granted access.\n      operationId: getViewAccess\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: id\n          in: path\n          description: the view access id\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: 'Secured Profile'\n                  data:\n                    $ref: '#/components/schemas/viewAccessObject'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n    delete:\n      tags:\n        - Profile Access\n      summary: Delete a profile access record\n      description: Delete a profile access record. You must be either the target or person being granted access.\n      operationId: removeAccess\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: id\n          in: path\n          description: the access id\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: 'Secured Profile'\n                  data:\n                    $ref: '#/components/schemas/viewAccessObject'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n\n  # SNAPSHOTS of Profiles\n  /api/{group}/profile/snapshot/{id}:\n    get:\n      tags:\n        - Profile Access\n      summary: Get an approved snapshot of a profile using the request id\n      description: Get an approved snapshot of a profile using the request id. You must be the requesting party or the profile owner.\n      operationId: getSnapShot\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: id\n          in: path\n          description: the request id\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: 'Secured Profile'\n                  data:\n                    $ref: '#/components/schemas/securedProfile'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n    delete:\n      tags:\n        - Profile Access\n      summary: Remove a snapshot of a profile using the request id.\n      description: Remove a snapshot of a profile using the request id. You must be the requesting party or the owner of the profile.\n      operationId: deleteSnapShot\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: id\n          in: path\n          description: the request id\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: 'Secured Profile'\n                  data:\n                    $ref: '#/components/schemas/securedProfile'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n\n  # Organization User Profiles\n  /api/{group}/organization/{org}/profiles:\n    post:\n      tags:\n        - Organization User Profiles\n      summary: Create an Organization User Profile (name, contact info, bio, etc.) for an Account associated to this Organization\n      description: \"While Accounts themselves do not carry personal information, two concepts in UE Auth do: Secured Profiles and Organization User Profiles (as described here). Organizations may need to define information about their users such as first and last name, address, or other data over which they wish to have a measure of control. This data is limited in scope to the Organization itself and access is limited to Organization administrators or the Account holder. As such, Organization User Profiles are unique only to the Organization but reference a single unique Account in the AuthGroup. One Account could have as many Organization User Profiles as there are Organizations to which the Account has been given access. In contrast, Secured Profiles are entirely controlled by the Account holder (user) and not accessible by anyone other than that user. Secured Profile data can be requested but must always be actively approved and provided or denied by the User. In future iterations, it will be possible to request an Organization User Profile be seeded from a Secured Profile.\"\n      operationId: writeOrgProfile\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: org\n          in: path\n          description: the organization ID\n          schema:\n            type: string\n          required: true\n      responses:\n        '201':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: 'Organization User Profile'\n                  data:\n                    $ref: '#/components/schemas/orgUserProfile'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/writeOrgUserProfile'\n        description: Profile data to be written\n        required: true\n    get:\n      tags:\n        - Organization User Profiles\n      summary: Query all of the Organization User Profiles in an Organization\n      description: Return and/or filter every Organization specific User Profile defined for this Organization.\n      operationId: getOrgProfiles\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: org\n          in: path\n          description: the organization ID\n          schema:\n            type: string\n          required: true\n        - name: $filter\n          in: query\n          description: oData filter Query\n          required: false\n          schema:\n            type: string\n        - name: $select\n          in: query\n          description: oData select Query\n          required: false\n          schema:\n            type: string\n        - name: $orderby\n          in: query\n          description: oData orderby Query\n          required: false\n          schema:\n            type: string\n        - name: $skip\n          in: query\n          description: oData skip Query\n          required: false\n          schema:\n            type: string\n        - name: $top\n          in: query\n          description: oData top Query\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: 'Organization User Profile'\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/orgUserProfile'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n\n  /api/{group}/organization/{org}/profile/{id}:\n    patch:\n      tags:\n        - Organization User Profiles\n      summary: Update an Organization User Profile (name, contact info, bio, etc.) for an Account associated to this Organization\n      description: This will change values of the Organization User Profile assocaited to the Account within a specified Organization. This will not update any information on the Account's Secured Profile.\n      operationId: updateOrgProfile\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: org\n          in: path\n          description: the organization ID\n          schema:\n            type: string\n          required: true\n        - name: id\n          in: path\n          description: the organization user profile ID OR the Account ID of the User\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: 'Organization User Profile'\n                  data:\n                    $ref: '#/components/schemas/orgUserProfile'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/jsonPatch'\n        description: Profile data to be written\n        required: true\n    get:\n      tags:\n        - Organization User Profiles\n      summary: Retrieve an Organization User Profile\n      description: This will return only the Profile information and not any Account information associated to the record except the Account ID or other information mirrored.\n      operationId: getOrgProfile\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: org\n          in: path\n          description: the organization ID\n          schema:\n            type: string\n          required: true\n        - name: id\n          in: path\n          description: the organization user profile ID OR the Account ID of the User\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: 'Organization User Profile'\n                  data:\n                    $ref: '#/components/schemas/orgUserProfile'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n    delete:\n      tags:\n        - Organization User Profiles\n      summary: Completel remove an Organization User Profile\n      description: This will delete the Organization User Profile but not change or update either the Account or Secured Profile (pending) in any way.\n      operationId: removeOrgProfile\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: org\n          in: path\n          description: the organization ID\n          schema:\n            type: string\n          required: true\n        - name: id\n          in: path\n          description: the organization user profile ID OR the Account ID of the User\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: 'Organization User Profile'\n                  data:\n                    $ref: '#/components/schemas/orgUserProfile'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n\n  /api/{group}/organizations/profiles/account/{id}:\n    get:\n      tags:\n        - Account Dashboard\n      summary: As an Account holder, you can view all Org Profiles tied to your Account, regardless of Org Access\n      description: Even though the Organization Account Profile is controlled by the Org, Accounts can still see that the org has their data and request that data be removed at any time. Use this API to see which Organizations have an Org Account Profile tied to you and the status of any requests you've made.\n      operationId: getAllOrgProfiles\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: id\n          in: path\n          description: your Account ID\n          schema:\n            type: string\n            default: me\n          required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: 'Organization User Profile'\n                  data:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        organizationId:\n                          type: string\n                          format: uuid\n                        organizationName:\n                          type: string\n                        organizationProfileId:\n                          type: string\n                          format: uuid\n                        contactEmail:\n                          type: string\n                          format: email\n                        deleteRequested:\n                          type: boolean\n                        deleteRequestedDate:\n                          type: string\n                          format: date-time\n\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n\n  /api/{group}/organizations/{org}/profiles/account/{id}:\n    post:\n      tags:\n        - Account Dashboard\n      summary: As an Account holder, request that an Organization delete your Org Profile, regardless of your access\n      description: Even though the Organization Account Profile is controlled by the Org, Accounts can still see that the org has their data and request that data be removed at any time. Use this API to request the removal or clear the request. You can reference yourself with 'me' or if you have permissions, any Account ID.\n      operationId: requestToOrgProfile\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: org\n          in: path\n          description: the organization ID\n          schema:\n            type: string\n          required: true\n        - name: id\n          in: path\n          description: your Account ID\n          schema:\n            type: string\n            default: me\n          required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: 'Organization User Profile'\n                  data:\n                    type: object\n                    properties:\n                      request:\n                        type: string\n                        example: remove\n                      verified:\n                        type: boolean\n                        example: true\n                      date:\n                        type: string\n                        format: date-time\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              additionalProperties: false\n              properties:\n                request:\n                  type: string\n                  enum:\n                    - remove\n                    - remain\n        description: Profile data request to the Organization\n        required: true\n\n  # User Account API restricted to Organizations\n  /api/{group}/organization/{org}/account:\n    put:\n      tags:\n        - Organization Users \u0026 Access\n      summary: Register a new or existing user as part of an organization\n      description: If you intend to add or create a user specific to your organization, this is the correct API. You may want to use the account/search API first. This method will check to see if a user with the email specified exists. If the user exists, an organization access record will be added to that user's account, otherwise, the user is first created and then the access record added. This API does not allow you to set a password, one will be generated. If notifications are enabled (recommended), the caller will never see the password and a notification will be sent to the user or they can simply trigger a password reset to claim the account. If notifications are not enabled, the generated password will be returned with this call and include a warning that notifications are disabled. Please note that the only data provided by this endpoint (or any Account API) is the id, username, and email of the user within this AuthGroup. The Account record holds no personal information aside from this email address and an optional phone number which is only visible to that Account owner.\n      operationId: writeAccountToOrg\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: org\n          in: path\n          description: the organization ID\n          schema:\n            type: string\n          required: true\n      responses:\n        '201':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/getAccount'\n                  - $ref: '#/components/schemas/firstAccountWrite'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/writeAccountByOrg'\n        description: Account data to be written\n        required: true\n  /api/{group}/organization/{org}/accounts:\n    put:\n      tags:\n        - Organization Users \u0026 Access\n      summary: Register multiple existing Auth Group accounts to the organization.\n      description: This will register multiple accounts to the organization. This API takes account Ids not email addresses. Unlike individual additions to an organization, this bulk endpoint will not create the accounts in the AuthGroup if they do not exist.\n      operationId: bulkWriteAccountsToOrg\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: org\n          in: path\n          description: the organization ID\n          schema:\n            type: string\n          required: true\n      responses:\n        '201':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/getAccount'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uuid\n        description: Array of Account Ids to be added\n        required: true\n    delete:\n      tags:\n        - Organization Users \u0026 Access\n      summary: Remove multiple accounts from an organization.\n      description: This will bulk remove accounts from an organization. This API requires a body to be passed with a DELETE method.\n      operationId: bulkRemoveAccountsFromOrg\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: org\n          in: path\n          description: the organization ID\n          schema:\n            type: string\n          required: true\n      responses:\n        '201':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/getAccount'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uuid\n        description: Array of Account Ids to be removed\n        required: true\n    get:\n      tags:\n        - Organization Users \u0026 Access\n      summary: Retrieve all users associated to an organization\n      description: This API allows you to browse the email and id of every user that has been added to your organization.\n      operationId: getAccountsByOrg\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: org\n          in: path\n          description: the organization ID\n          schema:\n            type: string\n          required: true\n        - name: $filter\n          in: query\n          description: oData filter Query\n          required: false\n          schema:\n            type: string\n        - name: $select\n          in: query\n          description: oData select Query\n          required: false\n          schema:\n            type: string\n        - name: $orderby\n          in: query\n          description: oData orderby Query\n          required: false\n          schema:\n            type: string\n        - name: $skip\n          in: query\n          description: oData skip Query\n          required: false\n          schema:\n            type: string\n        - name: $top\n          in: query\n          description: oData top Query\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getAccounts'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n  '/api/{group}/organization/{org}/account/{id}':\n    get:\n      tags:\n        - Organization Users \u0026 Access\n      summary: Find a User with ID\n      description: Identify a single user associated to an organization. Remember that Account records only return create/modified/active metadata, an email and an id.\n      operationId: getAccountByOrg\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: org\n          in: path\n          description: the organization ID\n          schema:\n            type: string\n          required: true\n        - name: id\n          in: path\n          description: id of account type to return\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getAccount'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n\n  /api/{group}/access/organization/{org}/account/{id}:\n    delete:\n      tags:\n        - Organization Users \u0026 Access\n      summary: Remove an organization from user's access\n      description: This endpoint removes a user form an organization and cuts off all access immediately. Please be advised, if a user obtained access records as part ofa  JWT token, that token may still show access until it expires.\n      operationId: remove Org from access\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: org\n          in: path\n          description: Organization id access is being applied to\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: id that need to be updated\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/userAccessAction'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n    get:\n      tags:\n        - Organization Users \u0026 Access\n      summary: Get defined user access in order to make edits with PUT\n      description: Get the specific record of domains and roles within the context of an organization. You can update and send back this record as part of the associated PUT endpoint to make changes.\n      operationId: getDefinedUserAccess\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: org\n          in: path\n          description: Organization id access is being applied to\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: id that need to be updated\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/writeAccess'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n    put:\n      tags:\n        - Organization Users \u0026 Access\n      summary: Overwrite defined user access of an Account in the context of a single Organization\n      description: This endpoint allows you to change the domains and roles associated to an Account within the context of an Organization. Remember that this will overwrite the record not patch it.\n      operationId: defineUserAccess\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: org\n          in: path\n          description: Organization id access is being applied to\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: id that need to be updated\n          required: true\n          schema:\n            type: string\n        - name: notify\n          in: query\n          description: if notifications are enabled, you can override and skip them by setting this to false\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/updateUserAccess'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/writeAccess'\n        description: Updated access object\n        required: true\n\n  /api/{group}/access/organization/{org}/accounts:\n    put:\n      tags:\n        - Organization Users \u0026 Access\n      summary: Add multiple user accounts to multiple domains and roles\n      description: Add multiple user accounts to multiple domains and roles. This is only an addition API and will not remove any roles or domains.\n      operationId: defineBulkUserAccessAdd\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: org\n          in: path\n          description: Organization id access is being applied to\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  domains:\n                    type: object\n                    properties:\n                      matching:\n                        type: number\n                        description: how many records matched the account ids given\n                      modified:\n                        type: number\n                        description: how many records were updated\n                      operationRan:\n                        type: boolean\n                        description: did the update run as expected\n                  roles:\n                    type: object\n                    properties:\n                      matching:\n                        type: number\n                        description: how many records matched the account ids given\n                      modified:\n                        type: number\n                        description: how many records were updated\n                      operationRan:\n                        type: boolean\n                        description: did the update run as expected\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - accounts\n              allOf:\n                - $ref: '#/components/schemas/writeAccess'\n              properties:\n                accounts:\n                  type: array\n                  items:\n                    type: string\n                    format: uuid\n        description: Updated access object\n        required: true\n    delete:\n      tags:\n        - Organization Users \u0026 Access\n      summary: Remove multiple user accounts from multiple domains and roles\n      description: Remove multiple user accounts from multiple domains and roles. This is only a remove API and will not add any roles or domains.\n      operationId: defineBulkUserAccessRemove\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: org\n          in: path\n          description: Organization id access is being applied to\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  domains:\n                    type: object\n                    properties:\n                      matching:\n                        type: number\n                        description: how many records matched the account ids given\n                      modified:\n                        type: number\n                        description: how many records were updated\n                      operationRan:\n                        type: boolean\n                        description: did the update run as expected\n                  roles:\n                    type: object\n                    properties:\n                      matching:\n                        type: number\n                        description: how many records matched the account ids given\n                      modified:\n                        type: number\n                        description: how many records were updated\n                      operationRan:\n                        type: boolean\n                        description: did the update run as expected\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - accounts\n              allOf:\n                - $ref: '#/components/schemas/writeAccess'\n              properties:\n                accounts:\n                  type: array\n                  items:\n                    type: string\n                    format: uuid\n        description: Updated access object\n        required: true\n\n  # Account Dashboard\n  /api/{group}/access/account/{id}:\n    get:\n      tags:\n        - Account Dashboard\n      summary: Query the organizations, products, roles and permissions of a user\n      description: This API will return all of the access information available for a specific user. It is not recommended that anyone other than AuthGroup administrators be given permissions to this endpoint.\n      operationId: getUserAccess\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: \u003e-\n            Unique user identifier\n          required: true\n          schema:\n            type: string\n        - name: org\n          in: query\n          description: allows a AuthGroup Admin to query a specific organization context. Otherwise, orgId is restricted to the domainId and token context\n          required: false\n          schema:\n            type: string\n        - name: domain\n          in: query\n          description: if ID provided, it restricts the response to this domain\n          required: false\n          schema:\n            type: string\n        - name: product\n          in: query\n          description: if ID provided, it restricts the response to this product\n          required: false\n          schema:\n            type: string\n        - name: includeMiscRoles\n          in: query\n          description: these are roles attributed to the user that do not correlate to the domains or products provided access\n          required: false\n          schema:\n            type: boolean\n        - name: excludePermissions\n          in: query\n          description: flag to let us know to return both roles and permissions, or just roles\n          required: false\n          schema:\n            type: boolean\n        - name: minimized\n          in: query\n          description: if true, this creates arrays of ids in string form to reduce the size of the data\n          required: false\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: User Access\n                  data:\n                    $ref: '#/components/schemas/userAccess'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n  /api/{group}/access/validate:\n    get:\n      tags:\n        - Validate Access\n      summary: Query your token's access to organizations, domains, products, roles, and permissions\n      description: This AIP returns the caller's specific access data as defined by the caller's token. This endpoint is unique in the API in that it is not specific to the associated client and audience of the API itself. You can use this endpoint to validate access information for any user or client (client_credential). Please note that if the token is a Client Credential token, only the minmized=true version will be dispalyed and the other query parameters will have no effect.\n      operationId: validateToken\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: org\n          in: query\n          description: allows a AuthGroup Admin to query a specific organization context. Otherwise, orgId is restricted to the domainId and token context. Access Token only\n          required: false\n          schema:\n            type: string\n        - name: domain\n          in: query\n          description: if ID provided, it restricts the response to this domain. Access Token only\n          required: false\n          schema:\n            type: string\n        - name: product\n          in: query\n          description: if ID provided, it restricts the response to this product. Access Token only\n          required: false\n          schema:\n            type: string\n        - name: includeMiscRoles\n          in: query\n          description: these are roles attributed to the user that do not correlate to the domains or products provided access. Access Token only\n          required: false\n          schema:\n            type: boolean\n        - name: excludePermissions\n          in: query\n          description: flag to let us know to return both roles and permissions, or just roles. Access Token only\n          required: false\n          schema:\n            type: boolean\n        - name: minimized\n          in: query\n          description: if true, this creates arrays of ids in string form to reduce the size of the data. Access Token only, Client Credential responses are always minimized.\n          required: false\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: User Access\n                  data:\n                    $ref: '#/components/schemas/userAccess'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n  /api/{group}/access/organizations:\n    get:\n      tags:\n        - Account Dashboard\n      summary: Allows a user to view their account organizations and the state of those organizations\n      description: When an organization is applied to a user, it may be fully functional immediately (providing full access) or it may require the user to accept Terms of Access. This API allows the user to view the state of those organizations so the user can accept, decline or otherwise take action with regards to their account and information relative to organizations.\n      operationId: getMyOrgs\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: User Access\n                  data:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        terms:\n                          type: object\n                          description: the terms that the user has recieved and or accepted\n                        domains:\n                          type: array\n                          description: domain information including name and description\n                          items:\n                            type: object\n                        roles:\n                          type: array\n                          items:\n                            type: string\n                            format: uuid\n                        organization:\n                          type: object\n                          description: details about the organization context of these domains, roles, and terms. This will also include the latest terms of the orgnaization\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n  /api/{group}/access/organizations/{org}/terms:\n    put:\n      tags:\n        - Account Dashboard\n      summary: Accept or decline terms of access for an organization. Declining will remove you from the organization.\n      description: This API allows a user to agree to the terms of access imposed by an organization, or decline and remove all access from that organization.\n      operationId: acceptOrDeclineOrg\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: org\n          in: path\n          description: Organization id access is being applied to\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: User Access\n                  data:\n                    $ref: '#/components/schemas/userAccessAction'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              additionalProperties: false\n              required:\n                - action\n              properties:\n                action:\n                  type: string\n                  enum:\n                    - 'accept'\n                    - 'decline'\n        required: true\n\n  /api/{group}/access/my/organizations/{org}/products:\n    get:\n      tags:\n        - Account Dashboard\n      summary: Allows a user to view all products within the context of one org to which they have access and can be linked\n      description: This will return an object array of all the b2c products the Auth Group has and all of the b2b products within the context of the organization. The data is derived from the token only.\n      operationId: getMyProducts\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: org\n          in: path\n          description: Organization context\n          required: true\n          schema:\n            type: string\n        - name: includeCore\n          in: query\n          description: Include Core B2B products in returned list\n          required: false\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Products\n                  data:\n                    type: object\n                    properties:\n                      sub:\n                        type: string\n                        format: uuid\n                      authGroup:\n                        type: string\n                      b2c:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/myProducts'\n                      b2b:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/myProducts'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n  /api/{group}/access/my/organizations:\n    get:\n      tags:\n        - Account Dashboard\n      summary: Allows a user to view detailed information about any organizations on their token\n      description: \"Query details about the organizations you have access to. They must be present on your token for this to work, which means the token was requested with the scope access or access::organization\"\n      operationId: getMyOrgDetails\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Organizations\n                  data:\n                    type: object\n                    properties:\n                      sub:\n                        type: string\n                        format: uuid\n                      organizations:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/organization'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n  /api/{group}/access/my/notifications:\n    get:\n      tags:\n        - Account Dashboard\n      summary: Allows a user to request any notifications sent to them\n      description: View all notifications not yet expired (ttl) with your user Id as the recipient\n      operationId: getMyNotifications\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Notification\n                  data:\n                    type: object\n                    properties:\n                      sub:\n                        type: string\n                        format: uuid\n                      notifications:\n                        type: array\n                        items:\n                          $ref: '#/components/schemas/notification'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n  /api/{group}/access/my/notification/{id}:\n    get:\n      tags:\n        - Account Dashboard\n      summary: Allows a user to view a single notification that was sent to them only\n      description: Allows a user to view a notification by id if the recipientUserId is their own user id\n      operationId: getMyNotification\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: Id of the notification\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Notification\n                  data:\n                    $ref: '#/components/schemas/notification'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n\n  # Client Access\n  /api/{group}/access/client/{id}:\n    get:\n      tags:\n        - Client Access\n      summary: Return the product and roles associated to a client\n      description: Clients can be associated with a single Product and assigned roles from that product. This API returns the defined access of a specified client and product combination.\n      operationId: getClientAccess\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: client_id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: User Access\n                  data:\n                    $ref: '#/components/schemas/clientAccess'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n  /api/{group}/access/client/{id}/product/{product}:\n    delete:\n      tags:\n        - Client Access\n      summary: Completely dissassociate a product from the client and remove the attributed roles\n      description: Clients can be associated with a single Product and assigned roles from that product. This API removes that access by deleting the product and associated roles form the Client's access object. This will NOT remove the client ID from the associatedClients array of the product object.\n      operationId: removeClientAccess\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: client_id\n          required: true\n          schema:\n            type: string\n        - name: product\n          in: path\n          description: the id of the product associated\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: User Access\n                  data:\n                    $ref: '#/components/schemas/clientAccess'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n    put:\n      tags:\n        - Client Access\n      summary: Add a Product and Roles to a Client so that it can act with permissions using a client_credential token\n      description: Clients can be associated with a single Product and assigned roles from that product. This API associates a Product and Roles to the client. It will also update the associatedClients object of the Product in question.\n      operationId: applyClientAccess\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: client_id\n          required: true\n          schema:\n            type: string\n        - name: product\n          in: path\n          description: the id of the product associated\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: User Access\n                  data:\n                    $ref: '#/components/schemas/clientAccess'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/writeClientAccess'\n        description: Account data to be written\n        required: true\n\n  # Non-OIDC Specific Client APIs\n  /api/{group}/clients:\n    get:\n      tags:\n        - Clients\n      summary: Retrieve all clients in your AuthGroup\n      description: Allows the caller to get a list of every registered Client in the AuthGroup. Sensative information like the client_secret is ommitted.\n      operationId: getClients\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: search\n          in: query\n          description: additional search key - not part of oData\n          required: false\n          schema:\n            type: string\n        - name: $filter\n          in: query\n          description: oData filter Query\n          required: false\n          schema:\n            type: string\n        - name: $select\n          in: query\n          description: oData select Query\n          required: false\n          schema:\n            type: string\n        - name: $orderby\n          in: query\n          description: oData orderby Query\n          required: false\n          schema:\n            type: string\n        - name: $skip\n          in: query\n          description: oData skip Query\n          required: false\n          schema:\n            type: string\n        - name: $top\n          in: query\n          description: oData top Query\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getClients'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n  '/api/{group}/client/{id}':\n    get:\n      tags:\n        - Clients\n      summary: Returns a single Client from within the AuthGroup\n      description: This will bypass the normally protected GET /reg/{id} as long as the caller has the correct permissions. This is a convenience API and not the same as the OIDC call on the /reg endpoint which may require a registration access token. This API will sanitize the response.\n      operationId: getOneClient\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: id\n          in: path\n          description: id of account type to return\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getClient'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n    delete:\n      tags:\n        - Clients\n      summary: This will delete a Client\n      description: This API will bypass the OIDC /reg endpoint and allow an authorized caller from the AuthGroup to delete a Client.\n      operationId: deleteOneClient\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: id\n          in: path\n          description: id of account type to return\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getClient'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n\n  # Operation APIs for security update commands\n  /api/{group}/operations:\n    post:\n      tags:\n        - Operations\n      summary: Execute operations against a auth group (only rotate_keys and rotate_cookie_keys are currently supported)\n      description: Execute operations against a auth group (only rotate_keys and rotate_cookie_keys are currently supported)\n      operationId: groupOperations\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getGroup'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/operations'\n        description: Account data to be written\n        required: true\n\n  /api/{group}/operations/resend-verify-email:\n    post:\n      tags:\n        - Operations\n      summary: Resends a verification email to the user. API does not return anything. Requires Notification Plugin to be working.\n      description: Resends a verification email to the user. Requires that the account have a valid matching email or phone number associated. API does not return anything on success. Requires Notification Plugin to be working. Token not required for this endpoint.\n      operationId: userVerifyEmail\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n      responses:\n        '204':\n          description: successful operation\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/verifyEmail'\n        description: Account data to be written\n\n  /api/{group}/operations/reset-user-password:\n    post:\n      tags:\n        - Operations\n      summary: Initiate password reset for an account. API does not return anything. Requires Notification Plugin to be working.\n      description: Initiate password reset for an account. Requires that the account have a valid matching email or phone number associated. API does not return anything on success. Requires Notification Plugin to be working. Token not required for this endpoint.\n      operationId: userPasswordReset\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n      responses:\n        '204':\n          description: successful operation\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/passwordReset'\n        description: Account data to be written\n        required: true\n\n  /api/{group}/operations/organization/{org}/user/{id}:\n    post:\n      tags:\n        - Operations\n      summary: Execute operations against a user within an organization\n      description: Execute operations against a user within an organization. Currently supports - verify_account, reset_password\n      operationId: userOperationsByOrg\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: org\n          in: path\n          description: the organization id\n          schema:\n            type: string\n          required: true\n        - name: id\n          in: path\n          description: the user/account id\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: successful update operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getAccount'\n        '204':\n          description: successful operation\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/userOperations'\n        description: Account data to be written\n        required: true\n\n  /api/{group}/operations/user/{id}:\n    post:\n      tags:\n        - Operations\n      summary: Execute operations against a user\n      description: Execute operations against a user. Currently supports - verify_account, reset_password, generate_password\n      operationId: userOperations\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: id\n          in: path\n          description: the user/account id\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: successful update operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getAccount'\n        '204':\n          description: successful operation\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/userOperations'\n        description: Account data to be written\n        required: true\n\n  /api/{group}/operations/client/{id}:\n    post:\n      tags:\n        - Operations\n      summary: Execute operations against a client\n      description: Execute operations against a client. Currently supports - rotate_secret \u0026 rotate_registration_access_token\n      operationId: clientOperations\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: id\n          in: path\n          description: the client id\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/getClient'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/operations'\n        description: Account data to be written\n        required: true\n\n\n  # Notifications APIs\n  /api/{group}/notification/process:\n    post:\n      tags:\n        - Notification\n      summary: Process up to 25 currently unprocessed notifications\n      description: This is a stateless way to processes old notifications that may not be processed yet. You should build a cronjob to make this requet on a cadence of your choosing.\n      operationId: processBulkNotifications\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Plugins\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/notification'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n\n  '/api/{group}/notification/{id}/process':\n    put:\n      tags:\n        - Notification\n      summary: Process a specific notification that is currently not processed.\n      description: Process a specific notification that is currently not processed. If the notification is already processed, it will simply return that notification but take no action. Keep in mind notifications have a 30 day TTL\n      operationId: processNotification\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: id\n          in: path\n          description: id of notification to process\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Plugins\n                  data:\n                    $ref: '#/components/schemas/notification'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n\n  /api/{group}/notification:\n    post:\n      tags:\n        - Notification\n      summary: Define a new notification\n      description: Define a new notification to be processed. Only possible if global \u0026 auth group notifications are enabled\n      operationId: writeNotification\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n      responses:\n        '201':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Plugins\n                  data:\n                    $ref: '#/components/schemas/notification'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/writeNotification'\n        description: the notification as stored in ue auth system\n        required: true\n\n  /api/{group}/notifications:\n    get:\n      tags:\n        - Notification\n      summary: Retrieve all notifications in the group\n      description: Retrieve all notifications in the group. Keep in mind notifications have a 30 day TTL\n      operationId: getNotifications\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: $filter\n          in: query\n          description: oData filter Query\n          required: false\n          schema:\n            type: string\n        - name: $select\n          in: query\n          description: oData select Query\n          required: false\n          schema:\n            type: string\n        - name: $orderby\n          in: query\n          description: oData orderby Query\n          required: false\n          schema:\n            type: string\n        - name: $skip\n          in: query\n          description: oData skip Query\n          required: false\n          schema:\n            type: string\n        - name: $top\n          in: query\n          description: oData top Query\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Plugins\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/notification'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n\n  '/api/{group}/notification/{id}':\n    get:\n      tags:\n        - Notification\n      summary: Return a specific notification\n      description: Return a specific notification. Keep in mind notification records only have a 30 day TTL\n      operationId: getNotification\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: id\n          in: path\n          description: id of notification to return\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Plugins\n                  data:\n                    $ref: '#/components/schemas/notification'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n    delete:\n      tags:\n        - Notification\n      summary: Hard delete a notification\n      description: Hard delete a notification. Notifications can not be updated once created, they can only be deleted. Keep in mind that if the notification was already processed, this will not change how that processing communicated the notification to the recipient.\n      operationId: deleteNotification\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: id\n          in: path\n          description: id of notification to delete\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Plugins\n                  data:\n                    $ref: '#/components/schemas/notification'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n\n  # Organization Context Notifications\n  /api/{group}/organization/{org}/notification:\n    post:\n      tags:\n        - Organization Notification\n      summary: Define a new notification within the context of an Organization\n      description: Define a new notification to be processed. Only possible if global \u0026 auth group notifications are enabled\n      operationId: writeOrgNotification\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: org\n          in: path\n          description: the organization context\n          schema:\n            type: string\n          required: true\n      responses:\n        '201':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Plugins\n                  data:\n                    $ref: '#/components/schemas/notification'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/writeNotification'\n        description: the notification as stored in ue auth system\n        required: true\n\n  /api/{group}/organization/{org}/notifications:\n    get:\n      tags:\n        - Organization Notification\n      summary: Retrieve all notifications in the Organization\n      description: Retrieve all notifications in the group. Keep in mind notifications have a 30 day TTL\n      operationId: getOrgNotifications\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: org\n          in: path\n          description: the organization context\n          schema:\n            type: string\n          required: true\n        - name: $filter\n          in: query\n          description: oData filter Query\n          required: false\n          schema:\n            type: string\n        - name: $select\n          in: query\n          description: oData select Query\n          required: false\n          schema:\n            type: string\n        - name: $orderby\n          in: query\n          description: oData orderby Query\n          required: false\n          schema:\n            type: string\n        - name: $skip\n          in: query\n          description: oData skip Query\n          required: false\n          schema:\n            type: string\n        - name: $top\n          in: query\n          description: oData top Query\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Plugins\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/notification'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n\n  '/api/{group}/organization/{org}/notification/{id}':\n    get:\n      tags:\n        - Organization Notification\n      summary: Return a specific notification from the Organization\n      description: Return a specific notification. Keep in mind notification records only have a 30 day TTL\n      operationId: getOrgNotification\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: org\n          in: path\n          description: the organization context\n          schema:\n            type: string\n          required: true\n        - name: id\n          in: path\n          description: id of notification to return\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Plugins\n                  data:\n                    $ref: '#/components/schemas/notification'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n    delete:\n      tags:\n        - Organization Notification\n      summary: Hard delete a notification from the Organization (and AuthGroup)\n      description: Hard delete a notification. Notifications can not be updated once created, they can only be deleted. Keep in mind that if the notification was already processed, this will not change how that processing communicated the notification to the recipient.\n      operationId: deleteOrgNotification\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: org\n          in: path\n          description: the organization context\n          schema:\n            type: string\n          required: true\n        - name: id\n          in: path\n          description: id of notification to delete\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Plugins\n                  data:\n                    $ref: '#/components/schemas/notification'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n\n  # A few of the OIDC specific API Endpoints\n  /{group}/token:\n    post:\n      tags:\n        - OIDC\n      summary: Request a token code provided via code authorization flow\n      description: Request a token code provided via code authorization flow\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/accessTokens'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/codeAuthorizationTokenRequest'\n            encoding:\n              grant_type:\n                style: form\n              client_secret:\n                style: form\n              redirect_uri:\n                style: form\n              format:\n                style: form\n              code:\n                style: form\n              client_id:\n                style: form\n              scope:\n                style: form\n              x_organization_context:\n                style: form\n              x_access_filter_organization:\n                style: form\n              x_access_filter_domain:\n                style: form\n              x_access_filter_product:\n                style: form\n        required: true\n\n  /{group}/token/initial-access:\n    post:\n      tags:\n        - OIDC\n      summary: Request an OIDC initial access token (IAT)\n      description: Request an OIDC initial access token (IAT). There are many uses for an IAT; however, one primary use in this API is to create new clients. Use this endpoint to request the IAT and then use that as your bearer token to create a new client. This only applies if open registration is disabled.\n      operationId: getInitialAccessToken\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/initialAccessToken'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/initialAccessTokenRequest'\n        required: false\n\n  /{group}/reg:\n    post:\n      tags:\n        - OIDC\n      summary: Register a new client - may require an initial access token depending on config\n      description: Register a new client - may require an initial access token depending on config\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/clientObject'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/writeClientObject'\n        required: true\n\n  /{group}/reg/{id}:\n    put:\n      tags:\n        - OIDC\n      summary: Update a new client - may require a registration access token\n      description: Update a new client - may require a registration access (RAI) token. If the RAI is required (configuration) it will rotate on each update and you will need to keep track of it. If you have lost your token, you can request a new one from the operations/client endpoint.\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: id\n          in: path\n          description: the client id\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/clientObject'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/clientObjectUpdate'\n        required: true\n    get:\n      tags:\n        - OIDC\n      summary: Get a registerd lient - may require a registration access token\n      description: Get a registered client - may require a registration access (RAI) token. If the RAI is required (configuration) it will rotate on each update and you will need to keep track of it. If you have lost your token, you can request a new one from the operations/client endpoint.\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n        - name: id\n          in: path\n          description: the client id\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/clientObject'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n  /{group}/me:\n    get:\n      tags:\n        - OIDC\n      summary: Standard OIDC UserInfo endpoint\n      description: UserInfo endpoint will not work with a JWT token. It must be opaque.\n      parameters:\n        - name: group\n          in: path\n          description: the auth group ID associated to your business account\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/userInfoObject'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n\n  # Organization Products\n  /api/{group}/organization/{org}/products:\n    get:\n      tags:\n        - Organization Products\n      summary: Get all Products associated to an Organization\n      description: Return all Products defined as part of your Organization\n      operationId: getOrgProducts\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: org\n          in: path\n          description: organization context\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Products\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/product'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n  /api/{group}/organization/{org}/products/{id}:\n    get:\n      tags:\n        - Organization Products\n      summary: Get an organization associated Product's Info\n      description: Query a single Product by ID within an Organization\n      operationId: getOrgProduct\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: org\n          in: path\n          description: organization context\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: \u003e-\n            Unique product identifier\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Products\n                  data:\n                    $ref: '#/components/schemas/product'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n\n  /api/{group}/organization/{org}/domain/{domain}/products:\n    get:\n      tags:\n        - Organization Products\n      summary: Get all Products associated to an Organization's Domain\n      description: Return all Products defined as part of an Organization's Domain\n      operationId: getOrgDomainProducts\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: org\n          in: path\n          description: organization context\n          required: true\n          schema:\n            type: string\n        - name: domain\n          in: path\n          description: domain context\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Products\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/product'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n  /api/{group}/organization/{org}/domain/{domain}/products/{id}:\n    get:\n      tags:\n        - Organization Products\n      summary: Get a domain associated Product's Info\n      description: Query a single Product by ID within a domain\n      operationId: getOrgDomainProduct\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: org\n          in: path\n          description: organization context\n          required: true\n          schema:\n            type: string\n        - name: domain\n          in: path\n          description: domain context\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: \u003e-\n            Unique product identifier\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Products\n                  data:\n                    $ref: '#/components/schemas/product'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n\n  # Product CRUD\n  /api/{group}/products:\n    get:\n      tags:\n        - Products\n      summary: Get all Products\n      description: Return all Products defined as part of your AuthGroup\n      operationId: getProducts\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: $filter\n          in: query\n          description: oData filter Query\n          required: false\n          schema:\n            type: string\n        - name: $select\n          in: query\n          description: oData select Query\n          required: false\n          schema:\n            type: string\n        - name: $orderby\n          in: query\n          description: oData orderby Query\n          required: false\n          schema:\n            type: string\n        - name: $skip\n          in: query\n          description: oData skip Query\n          required: false\n          schema:\n            type: integer\n        - name: $top\n          in: query\n          description: oData top Query\n          required: false\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Products\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/product'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n    post:\n      tags:\n        - Products\n      summary: Define a Products in your AuthGroup\n      description: In this API, the concept of a Product is a business level entity that represents software your company creates or otherwise manages to which access must be provided to Accounts, Organizations, and Domains. Products are not the same thing as an OIDC Client, but you may wish to have a one to many relationship between Products and OIDC Clients, something which can be managed on the Product object with the asssociatedClients array. This system does not enforce access to a Product in any way, we are simply recording and categorizing the relationship of the Product to the AuthGroup, Organizatin, Domains and ultimately Accounts (Users). It is the responsibility of the Product software itself (that is to say, not the responsibility of UE Auth or United Effects) to appropriately request tokens, scopes, and other information from this system (UE Auth) to then determine and enforce access.\n      operationId: createProduct\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n      responses:\n        '201':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Products\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/product'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/writeProduct'\n        description: Updated user object\n        required: true\n\n  /api/{group}/products/{id}:\n    get:\n      tags:\n        - Products\n      summary: Get a Product's Info\n      description: Query a single Product by ID\n      operationId: getProduct\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: \u003e-\n            Unique user identifier\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Products\n                  data:\n                    $ref: '#/components/schemas/product'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n    patch:\n      tags:\n        - Products\n      summary: Update a Product's information\n      description: Change information about your Product\n      operationId: updateProduct\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: \u003e-\n            Unique user identifier\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Products\n                  data:\n                    $ref: '#/components/schemas/product'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/jsonPatch'\n        description: Updated user object\n        required: true\n    delete:\n      tags:\n        - Products\n      summary: Delete a Product\n      description: This will completely delete a product. There are limits to deleting a Product if it associated to Organizations and Domains. You may need to dissassociate them first as those associations potentially represent internal (internal to your company) licenses or agreements. Once cleared of assocations, deleting a product will delete all associated permissions.\n      operationId: deleteProduct\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: \u003e-\n            Unique user identifier\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Products\n                  data:\n                    $ref: '#/components/schemas/product'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n\n  /api/{group}/products/{product}/reference-check/permissions:\n    get:\n      tags:\n        - Products\n      summary: Find out how many permissions reference this product\n      description: Find out how many permissions reference this product. Useful to run before a delete operation.\n      operationId: checkPermissionsForProduct\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: product\n          in: path\n          description: Product Id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Products\n                  data:\n                    properties:\n                      totalReferences:\n                        type: number\n                      permissionIds:\n                        type: array\n                        items:\n                          type: string\n                          format: uuid\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n\n  /api/{group}/roles:\n    get:\n      tags:\n        - Roles\n      summary: Get all Roles across Products in your AuthGroup\n      description: Scoped to an AuthGroup and available across Organizations and Products. This will return custom Role data specific to individual Organizations as well. Be very careful who has access to this API.\n      operationId: getAllRolesAcrossProducts\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: search\n          in: query\n          description: keyword search across roles - not part of oData\n          required: false\n          schema:\n            type: string\n        - name: $filter\n          in: query\n          description: oData filter Query\n          required: false\n          schema:\n            type: string\n        - name: $select\n          in: query\n          description: oData select Query\n          required: false\n          schema:\n            type: string\n        - name: $orderby\n          in: query\n          description: oData orderby Query\n          required: false\n          schema:\n            type: string\n        - name: $skip\n          in: query\n          description: oData skip Query\n          required: false\n          schema:\n            type: integer\n        - name: $top\n          in: query\n          description: oData top Query\n          required: false\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Role\n                  data:\n                    type: array\n                    items:\n                      oneOf:\n                        - $ref: '#/components/schemas/role'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n\n  /api/{group}/organization/{org}/roles:\n    get:\n      tags:\n        - Organization Roles\n      description: Scoped to this specific Organization - returns available global Roles along with Organization specific Roles across all associated Organization Products\n      summary: Get all roles across Products in your Organization\n      operationId: getAllRolesAcrossProductsByOrg\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: org\n          in: path\n          description: organization Id\n          required: true\n          schema:\n            type: string\n        - name: search\n          in: query\n          description: keyword search across roles - not part of oData\n          required: false\n          schema:\n            type: string\n        - name: $filter\n          in: query\n          description: oData filter Query\n          required: false\n          schema:\n            type: string\n        - name: $select\n          in: query\n          description: oData select Query\n          required: false\n          schema:\n            type: string\n        - name: $orderby\n          in: query\n          description: oData orderby Query\n          required: false\n          schema:\n            type: string\n        - name: $skip\n          in: query\n          description: oData skip Query\n          required: false\n          schema:\n            type: integer\n        - name: $top\n          in: query\n          description: oData top Query\n          required: false\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Role\n                  data:\n                    type: array\n                    items:\n                      oneOf:\n                        - $ref: '#/components/schemas/role'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n  /api/{group}/organizations/{org}/products/{product}/roles:\n    get:\n      tags:\n        - Organization Roles\n      description: Scoped to this specific Organization - returns global Roles and thos Roles specific to the provided organization for a given product. If the product requested is not associated to the Organization it will return a 404.\n      summary: Get Roles in a single Product\n      operationId: getProductRolesByOrg\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: org\n          in: path\n          description: organization Id\n          required: true\n          schema:\n            type: string\n        - name: product\n          in: path\n          description: \u003e-\n            Unique user identifier\n          required: true\n          schema:\n            type: string\n        - name: search\n          in: query\n          description: keyword search across roles - not part of oData\n          required: false\n          schema:\n            type: string\n        - name: $filter\n          in: query\n          description: oData filter Query\n          required: false\n          schema:\n            type: string\n        - name: $select\n          in: query\n          description: oData select Query\n          required: false\n          schema:\n            type: string\n        - name: $orderby\n          in: query\n          description: oData orderby Query\n          required: false\n          schema:\n            type: string\n        - name: $skip\n          in: query\n          description: oData skip Query\n          required: false\n          schema:\n            type: integer\n        - name: $top\n          in: query\n          description: oData top Query\n          required: false\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Role\n                  data:\n                    type: array\n                    items:\n                      oneOf:\n                        - $ref: '#/components/schemas/role'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n    put:\n      tags:\n        - Organization Roles\n      description: Scoped to this specific organization for a given Product, this API allows you to create custom Roles that only those in the Organization will be able to see. Be careful not to use this API when you intend to create a Global Role. If the specified product is not associated to the Organization, this returns a 404. There is a non-standard way of associating a permission to a Role. The property \"permissions\" takes an array of strings comprised of a concat of the Permission Ids and the Permission code. As an example, \"3fa85f64-5717-4562-b3fc-2c963f66afa6 user::read:own\" would be one string entry.\n      summary: Define new roles specific to this Organization.\n      operationId: createRoleByOrg\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: org\n          in: path\n          description: organization Id\n          required: true\n          schema:\n            type: string\n        - name: product\n          in: path\n          description: Unique product identifier\n          required: true\n          schema:\n            type: string\n      responses:\n        '201':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Role\n                  data:\n                    $ref: '#/components/schemas/role'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/roleWrite'\n        description: Create a new role\n        required: true\n      security:\n        - bearer: []\n        - openId: []\n\n  /api/{group}/organizations/{org}/products/{product}/roles/{id}:\n    delete:\n      tags:\n        - Organization Roles\n      description: Scoped to this specific organization - delete a Role specific to this Organization. If the Product specified is not associated to the Organization, you will get a 404.\n      summary: Remove a custom Role specific to this Organization and Product\n      operationId: deleteProductRoleByOrg\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: org\n          in: path\n          description: organization Id\n          required: true\n          schema:\n            type: string\n        - name: product\n          in: path\n          description: \u003e-\n            Unique user identifier\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: Unique role identifier\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Role\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/role'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n    get:\n      tags:\n        - Organization Roles\n      description: Scoped to this specific Organization - returns a Role, either globally available or specific to this Organization. If the product specified is not assocaited to the Organization, a 404 is returned.\n      summary: Get Role information for a Product in your Organization\n      operationId: getProductRoleByOrg\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: org\n          in: path\n          description: organization Id\n          required: true\n          schema:\n            type: string\n        - name: product\n          in: path\n          description: \u003e-\n            Unique user identifier\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: Unique role identifier\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Role\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/role'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n    patch:\n      tags:\n        - Organization Roles\n      description: Scoped to this specific Organization - updates a role specific to this Organization. This API is specific to custom roles (custom=true) created by the Organization. If you are an AuthGroup Admin and you wish to update a globally available Role, use the other PATCH Role endpoint. If the specified product is not associated to the Organization, you will recieve a 404. There is a non-standard way of associating a permission to a Role. The property \"permissions\" takes an array of strings comprised of a concat of the Permission Ids and the Permission code. As an example, \"3fa85f64-5717-4562-b3fc-2c963f66afa6 user::read:own\" would be one string entry.\n      summary: Update a Role specific to the Organization\n      operationId: updateRoleByOrg\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: org\n          in: path\n          description: organization Id\n          required: true\n          schema:\n            type: string\n        - name: product\n          in: path\n          description: Unique product identifier\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: Unique role identifier\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Role\n                  data:\n                    $ref: '#/components/schemas/role'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/jsonPatch'\n        description: Create a new role\n        required: true\n      security:\n        - bearer: []\n        - openId: []\n\n  /api/{group}/products/{product}/roles:\n    get:\n      tags:\n        - Roles\n      description: Scoped to authgroup - this API will return Roles data across Organizations including custom Role information scoped to single Organizations. Be very careful who has access to this API endpoint.\n      summary: Get all available Roles for a given Product in your AuthGroup\n      operationId: getProductRoles\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: product\n          in: path\n          description: \u003e-\n            Unique user identifier\n          required: true\n          schema:\n            type: string\n        - name: search\n          in: query\n          description: keyword search across roles - not part of oData\n          required: false\n          schema:\n            type: string\n        - name: $filter\n          in: query\n          description: oData filter Query\n          required: false\n          schema:\n            type: string\n        - name: $select\n          in: query\n          description: oData select Query\n          required: false\n          schema:\n            type: string\n        - name: $orderby\n          in: query\n          description: oData orderby Query\n          required: false\n          schema:\n            type: string\n        - name: $skip\n          in: query\n          description: oData skip Query\n          required: false\n          schema:\n            type: integer\n        - name: $top\n          in: query\n          description: oData top Query\n          required: false\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Role\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/role'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n    post:\n      tags:\n        - Roles\n      description: Scoped to AuthGroup and available across all organizations when the applicable Product is assocaited to them. In other words, all organizations will see this role in their list of product roles. Roles associate Permissions to Users. There is a non-standard way of associating a permission to a Role. The property \"permissions\" takes an array of strings comprised of a concat of the Permission Ids and the Permission code. As an example, \"3fa85f64-5717-4562-b3fc-2c963f66afa6 user::read:own\" would be one string entry.\n      summary: Create a new globally available Role\n      operationId: createRole\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: product\n          in: path\n          description: Unique product identifier\n          required: true\n          schema:\n            type: string\n      responses:\n        '201':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Role\n                  data:\n                    $ref: '#/components/schemas/role'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/roleWrite'\n        description: Create a new role\n        required: true\n      security:\n        - bearer: []\n        - openId: []\n  /api/{group}/products/{product}/roles/{id}:\n    get:\n      tags:\n        - Roles\n      description: Scoped to the AuthGroup and available across Organizations - it is possible to request any Role.\n      summary: Return any Role by ID\n      operationId: getRole\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: product\n          in: path\n          description: Id of the associated product\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: Id of the role in question\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Role\n                  data:\n                    $ref: '#/components/schemas/role'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n    patch:\n      tags:\n        - Roles\n      description: This API will let you update any Role, including its assocaited permissions. All organizations in the AuthGroup will be affected by this API, be careful. There is a non-standard way of associating a permission to a Role. The property \"permissions\" takes an array of strings comprised of a concat of the Permission Ids and the Permission code. As an example, \"3fa85f64-5717-4562-b3fc-2c963f66afa6 user::read:own\" would be one string entry.\n      summary: Update any Role regardless of scope (AuthGroup or Organization)\n      operationId: updateRole\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: product\n          in: path\n          description: Id of the associated product\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: Id of the role in question\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Role\n                  data:\n                    $ref: '#/components/schemas/role'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/jsonPatch'\n        description: Created user object\n        required: true\n      security:\n        - bearer: []\n        - openId: []\n    delete:\n      tags:\n        - Roles\n      description: This will allow you to delete any Role and will impact all Organizations in the AuthGroup, be careful. There are limits on Role deletions when the Accounts (users) have been assigned Roles. You may need to clear those assignments before you can delete.\n      summary: Delete any Role in your AuthGroup associated to a Product\n      operationId: deleteRole\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: product\n          in: path\n          description: Id of the associated product\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: Id of the role in question\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Role\n                  data:\n                    $ref: '#/components/schemas/role'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n\n  /api/{group}/organizations:\n    get:\n      tags:\n        - Organizations\n      summary: Get all Organizations\n      description: Returns all organizations (customers, departments, etc...) in an AuthGroup\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: search\n          in: query\n          description: keyword search across records - not part of oData\n          schema:\n            type: string\n          required: false\n        - name: $filter\n          in: query\n          description: oData filter Query\n          required: false\n          schema:\n            type: string\n        - name: $select\n          in: query\n          description: oData select Query\n          required: false\n          schema:\n            type: string\n        - name: $orderby\n          in: query\n          description: oData orderby Query\n          required: false\n          schema:\n            type: string\n        - name: $skip\n          in: query\n          description: oData skip Query\n          required: false\n          schema:\n            type: integer\n        - name: $top\n          in: query\n          description: oData top Query\n          required: false\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Organization\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/organization'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n    post:\n      tags:\n        - Organizations\n      summary: Create an Organization inside your AuthGroup\n      description: Organizations allow you to create subsets of the AuthGroup users for access to specific products and domains. The most common use case for an Organization would be to represent your Customers. You can also create Organizations to define subsets of users for internal departments or other groupings. Organizations represent the primary mechanism to determine product access. In the example of defining a Customer as an Organization, you can select which of your products that Customer has licensed and associate them to the Organization through the associatedProducts property. Every Organization automatically has an Administrative Domain created to allow access to the UEAuth product. It is not recommended that you (or the organizatino admin) add users to this Administrative Domain other than those who you wish to manage users, domains and roles for the Organization.\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n      responses:\n        '201':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Organization\n                  data:\n                    $ref: '#/components/schemas/organization'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/writeOrganization'\n        description: Create a new role\n        required: true\n      security:\n        - bearer: []\n        - openId: []\n  /api/{group}/organizations/{id}:\n    get:\n      tags:\n        - Organizations\n      summary: Get Organization by Id\n      description: Return a single Organization using its ID\n      operationId: getOrg\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: organization id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Organization\n                  data:\n                    $ref: '#/components/schemas/organization'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n    patch:\n      tags:\n        - Organizations\n      summary: Update an organization\n      description: Update an organization's information.\n      operationId: updateOrg\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: organization id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Organization\n                  data:\n                    $ref: '#/components/schemas/organization'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/jsonPatch'\n        description: JSON Patch specific to your account object\n        required: true\n      security:\n        - bearer: []\n        - openId: []\n    delete:\n      tags:\n        - Organizations\n      summary: Delete an Organization\n      description: There are limits on the ability to delete an organization that has already been assigned to users.\n      operationId: deleteOrg\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: organization id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Organization\n                  data:\n                    $ref: '#/components/schemas/organization'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n\n  /api/{group}/organizations/{org}/domains/{id}:\n    get:\n      tags:\n        - Organization Domains \n      summary: Get Domain by ID\n      description: Return a single Domain from within an Organization\n      operationId: getDomain\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: org\n          in: path\n          description: organization id guid\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: domain id guid\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Domain\n                  data:\n                    $ref: '#/components/schemas/domain'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n    patch:\n      tags:\n        - Organization Domains \n      summary: Update a Domain\n      description: Update a Domain's data\n      operationId: updateDomain\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: org\n          in: path\n          description: organization id guid\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: domain id guid\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Domain\n                  data:\n                    $ref: '#/components/schemas/domain'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/jsonPatch'\n        description: Create a new role\n        required: true\n      security:\n        - bearer: []\n        - openId: []\n    delete:\n      tags:\n        - Organization Domains \n      summary: Delete a Domain\n      description: This will hard delete your Domain. There are limits on delete when a domain has been associated to a user. You may need to remove users first.\n      operationId: deleteDomain\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: org\n          in: path\n          description: organization id guid\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: domain id guid\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Domain\n                  data:\n                    $ref: '#/components/schemas/domain'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n\n  /api/{group}/organizations/{org}/domains:\n    get:\n      tags:\n        - Organization Domains \n      summary: Get all Domains by Organizations Id\n      description: Returns all Domains within an Organization\n      operationId: getDomains\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: org\n          in: path\n          description: organization id\n          required: true\n          schema:\n            type: string\n        - name: $filter\n          in: query\n          description: oData filter Query\n          required: false\n          schema:\n            type: string\n        - name: $select\n          in: query\n          description: oData select Query\n          required: false\n          schema:\n            type: string\n        - name: $orderby\n          in: query\n          description: oData orderby Query\n          required: false\n          schema:\n            type: string\n        - name: $skip\n          in: query\n          description: oData skip Query\n          required: false\n          schema:\n            type: integer\n        - name: $top\n          in: query\n          description: oData top Query\n          required: false\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Domain\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/domain'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n    post:\n      tags:\n        - Organization Domains \n      summary: Create a Domain in a specified Organizations\n      description: Domains allow you to further refine access within the context of an Organization. Domains are used as the primary association mechanism of Products to Users. In other words, if you wish a User to have access to a product, that user must be added to a Domain which already has that Product associated (the property is called associatedOrgProducts). Only those Products associated to the parent Organization are available to be associated to a child Domain. Every Organization automatically has an Administrative Domain created to allow access to the UEAuth product. It is not recommended that you add users to this Domain other than those who you wish to manage users, domains and roles.\n      operationId: createDomain\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: org\n          in: path\n          description: organization id\n          required: true\n          schema:\n            type: string\n      responses:\n        '201':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Domain\n                  data:\n                    $ref: '#/components/schemas/domain'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/writeDomain'\n        description: Create a new role\n        required: true\n      security:\n        - bearer: []\n        - openId: []\n\n  # Organization Permissions\n  /api/{group}/organization/{org}/products/{product}/permissions:\n    get:\n      tags:\n        - Organization Permissions\n      summary: Get all Permissions for a Product which is associated to your Organization\n      description: Returns all of the Permissions assocaited to this Product\n      operationId: getOrgPermissions\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: org\n          in: path\n          description: Organization context\n          required: true\n          schema:\n            type: string\n        - name: product\n          in: path\n          description: Product Id\n          required: true\n          schema:\n            type: string\n        - name: $filter\n          in: query\n          description: oData filter Query\n          required: false\n          schema:\n            type: string\n        - name: $select\n          in: query\n          description: oData select Query\n          required: false\n          schema:\n            type: string\n        - name: $orderby\n          in: query\n          description: oData orderby Query\n          required: false\n          schema:\n            type: string\n        - name: $skip\n          in: query\n          description: oData skip Query\n          required: false\n          schema:\n            type: integer\n        - name: $top\n          in: query\n          description: oData top Query\n          required: false\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Permission\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/permission'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n  /api/{group}/organization/{org}/products/{product}/permissions/{id}:\n    get:\n      tags:\n        - Organization Permissions\n      summary: Get a permission by Id if the associated product is associated to your Organization\n      description: Query a single Permission for its description, code and other meta data\n      operationId: getOrgPermission\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: org\n          in: path\n          description: Organization context\n          required: true\n          schema:\n            type: string\n        - name: product\n          in: path\n          description: Product Id\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: permission id guid\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Permission\n                  data:\n                    $ref: '#/components/schemas/permission'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n  /api/{group}/organization/{org}/products/{product}/roles/{role}/permissions:\n    get:\n      tags:\n        - Organization Permissions\n      description: Query and search the permissions tied to a specific role within a product and organization context.\n      summary: Query and search the permissions tied to a specific role\n      operationId: getOrgRolePermissions\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: product\n          in: path\n          description: Unique product identifier\n          required: true\n          schema:\n            type: string\n        - name: org\n          in: path\n          description: Unique organization identifier\n          required: true\n          schema:\n            type: string\n        - name: role\n          in: path\n          description: Unique id of the role\n          required: true\n          schema:\n            type: string\n        - name: search\n          in: query\n          description: keyword search across roles - not part of oData\n          required: false\n          schema:\n            type: string\n        - name: $filter\n          in: query\n          description: oData filter Query\n          required: false\n          schema:\n            type: string\n        - name: $select\n          in: query\n          description: oData select Query\n          required: false\n          schema:\n            type: string\n        - name: $orderby\n          in: query\n          description: oData orderby Query\n          required: false\n          schema:\n            type: string\n        - name: $skip\n          in: query\n          description: oData skip Query\n          required: false\n          schema:\n            type: integer\n        - name: $top\n          in: query\n          description: oData top Query\n          required: false\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Role\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/permission'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n\n  # Permissions CRUD\n  /api/{group}/products/{product}/permission:\n    post:\n      tags:\n        - Permissions\n      summary: Create a permission.\n      description: Permissions have a many to one relationship to Products, meaning all Permissions must specify exactly one Product. Once created, a Permission can't be updated... you must delete it and create a new one. You will see references to a Permission's code in this and other UE Auth docs. This is refering to the shorthand and unique (within the AuthGroup and Product) encoding that UE Auth automatically creates for each permission object in the format of target::action:ownership. For a detailed explanation of Permissions in UE Auth, you may review this \u003ca href='https://github.com/UnitedEffects/ueauth/wiki/UE-Auth-Permissions'\u003eWiki Document\u003c/a\u003e.\n      operationId: createPermission\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: product\n          in: path\n          description: Product Id\n          required: true\n          schema:\n            type: string\n      responses:\n        '201':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Permission\n                  data:\n                    $ref: '#/components/schemas/permission'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/writePermission'\n        description: Create a new permission\n        required: true\n      security:\n        - bearer: [ ]\n        - openId: [ ]\n  /api/{group}/products/{product}/permissions:\n    get:\n      tags:\n        - Permissions\n      summary: Get all Permissions for a Product\n      description: Returns all of the Permissions assocaited to this Product\n      operationId: getPermissions\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: product\n          in: path\n          description: Product Id\n          required: true\n          schema:\n            type: string\n        - name: search\n          in: query\n          description: this performs a standard keyword search - not part of odata\n          required: false\n          schema:\n            type: string\n        - name: $filter\n          in: query\n          description: oData filter Query\n          required: false\n          schema:\n            type: string\n        - name: $select\n          in: query\n          description: oData select Query\n          required: false\n          schema:\n            type: string\n        - name: $orderby\n          in: query\n          description: oData orderby Query\n          required: false\n          schema:\n            type: string\n        - name: $skip\n          in: query\n          description: oData skip Query\n          required: false\n          schema:\n            type: integer\n        - name: $top\n          in: query\n          description: oData top Query\n          required: false\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Permission\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/permission'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n    post:\n      tags:\n        - Permissions\n      summary: Create many permissions.\n      description: Permissions have a many to one relationship to Products, meaning all Permissions must specify exactly one Product. Once created, a Permission can't be updated... you must delete it and create a new one. This API creates multiple permissions for a single product. For a detailed explanation of Permissions in UE Auth, you may review this \u003ca href='https://github.com/UnitedEffects/ueauth/wiki/UE-Auth-Permissions'\u003eWiki Document\u003c/a\u003e.\n      operationId: createManyPermission\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: product\n          in: path\n          description: Product Id\n          required: true\n          schema:\n            type: string\n      responses:\n        '201':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Permission\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/permission'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/writePermission'\n        description: Create new pemrissions\n        required: true\n      security:\n        - bearer: []\n        - openId: []\n    delete:\n      tags:\n        - Permissions\n      summary: Bulk Delete Permissions\n      description: Bulk delete permissions will remove all permissions identified by the array of UUIDs provided in the body as long as those permissions are not core=true (i.e. created by UE Auth itself). WARNING - this will not clear roles and can create orphan role references. This will be addressed in a future release but for now you must ensure this endpoint is not used on Ids with role references.\n      operationId: bulkDeletePermissions\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: product\n          in: path\n          description: Product Id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Permission\n                  data:\n                    $ref: '#/components/schemas/permission'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                format: uuid\n        description: Remove all permissions by id in the array\n        required: true\n\n  /api/{group}/products/{product}/permissions/{id}:\n    get:\n      tags:\n        - Permissions\n      summary: Get a permission by Id\n      description: Query a single Permission for its description, code and other meta data\n      operationId: getPermission\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: product\n          in: path\n          description: Product Id\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: permission id guid\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Permission\n                  data:\n                    $ref: '#/components/schemas/permission'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n    delete:\n      tags:\n        - Permissions\n      summary: Delete a Permission\n      description: Delete Permission will automatically clear all references from roles. Use /permissions/check/role to see which\n      operationId: deletePermission\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: product\n          in: path\n          description: Product Id\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: permission id guid\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Permission\n                  data:\n                    $ref: '#/components/schemas/permission'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n\n  /api/{group}/products/{product}/permissions/{id}/reference-check/role:\n    get:\n      tags:\n        - Permissions\n      summary: Find out how many roles reference this permission\n      description: Find out how many roles reference this permission. Useful to run before a delete operation.\n      operationId: checkRolesForPermission\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: product\n          in: path\n          description: Product Id\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: permission id guid\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Permission\n                  data:\n                    type: object\n                    properties:\n                      totalReferences:\n                        type: number\n                      roleIds:\n                        type: array\n                        items:\n                          type: string\n                          format: uuid\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n  /api/{group}/products/{product}/roles/{role}/permissions:\n    get:\n      tags:\n        - Permissions\n      description: Query and search the permissions tied to a specific role within a product context.\n      summary: Query and search the permissions tied to a specific role\n      operationId: getRolePermissions\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: product\n          in: path\n          description: Unique user identifier\n          required: true\n          schema:\n            type: string\n        - name: role\n          in: path\n          description: Unique id of the role\n          required: true\n          schema:\n            type: string\n        - name: search\n          in: query\n          description: keyword search across roles - not part of oData\n          required: false\n          schema:\n            type: string\n        - name: $filter\n          in: query\n          description: oData filter Query\n          required: false\n          schema:\n            type: string\n        - name: $select\n          in: query\n          description: oData select Query\n          required: false\n          schema:\n            type: string\n        - name: $orderby\n          in: query\n          description: oData orderby Query\n          required: false\n          schema:\n            type: string\n        - name: $skip\n          in: query\n          description: oData skip Query\n          required: false\n          schema:\n            type: integer\n        - name: $top\n          in: query\n          description: oData top Query\n          required: false\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Role\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/permission'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n\n  /api/{group}/products/{product}/permission/actions:\n    get:\n      tags:\n        - Permissions\n      summary: Get all of the available Permission Actions for a Product\n      description: Get all of the available Permission actions for a product. Note, there is no separate Actions table or collection. This API aggregates all Actions used across an AuthGroup and Product and returns them as a reference. To add new Actions, simply specify a previously unused Action when creating a Permission.\n      operationId: getPermissionActions\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: product\n          in: path\n          description: Product Id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Permission\n                  data:\n                    type: object\n                    properties:\n                      id:\n                        type: string\n                        default: 'actions'\n                      values:\n                        type: array\n                        items:\n                          type: string\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n  /api/{group}/products/{product}/permission/targets:\n    get:\n      tags:\n        - Permissions\n      summary: Get all of the available Permission Targets for a Product\n      description: Get all of the available Permission targets for a product. Note, there is no separate Targets table or collection. This API aggregates all Targets used across an AuthGroup and Product and returns them as a reference. To add new Targets, simply specify a previously unused Target when creating a Permission.\n      operationId: getPermissionTargets\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: product\n          in: path\n          description: Product Id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Permission\n                  data:\n                    type: object\n                    properties:\n                      id:\n                        type: string\n                        default: 'targets'\n                      values:\n                        type: array\n                        items:\n                          type: string\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n  /api/{group}/products/{product}/permission/tags:\n    get:\n      tags:\n        - Permissions\n      summary: Get all of the available Permission Tags for a Product\n      description: Get all of the available Permission Tags for a product. Note, there is no separate Tags table or collection. This API aggregates all Tags used across an AuthGroup and Product and returns them as a reference. To add new Tags, simply specify a previously unused Tag when creating a Permission.\n      operationId: getPermissionTags\n      parameters:\n        - name: group\n          in: path\n          description: Auth Group Id or name\n          required: true\n          schema:\n            type: string\n        - name: product\n          in: path\n          description: Product Id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                properties:\n                  type:\n                    type: string\n                    example: Permission\n                  data:\n                    type: object\n                    properties:\n                      id:\n                        type: string\n                        default: 'targets'\n                      values:\n                        type: array\n                        items:\n                          type: string\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/InvalidInput'\n        '417':\n          $ref: '#/components/responses/ExpectationFailed'\n      security:\n        - bearer: []\n        - openId: []\n\n  # Health Check Endpoint\n  /api/health:\n    get:\n      tags:\n        - Health\n      summary: Health check\n      description: Health check\n      responses:\n        '200':\n          description: GET successful\n        '500':\n          $ref: '#/components/responses/UnknownError'\n\n\nservers:\n  - url: http://localhost:3000\ncomponents:\n\n  responses:\n    Forbidden:\n      description: Request is forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/defaultError'\n    BadRequest:\n      description: Bad Request, try again\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/defaultError'\n    NotFound:\n      description: Requested object not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/defaultError'\n    InvalidInput:\n      description: Request is correct but one of your inputs is wrong\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/defaultError'\n    ExpectationFailed:\n      description: An expectation associated to the request failed\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/defaultError'\n    Unauthorized:\n      description: Unauthorized Access\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/defaultError'\n    UnknownError:\n      description: Unknown Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/defaultError'\n\n  securitySchemes:\n    basic:\n      type: http\n      description: email/username and password of the account\n      scheme: basic\n    bearer:\n      type: http\n      scheme: bearer\n      description: 'For Bearer based tokens, simply enter the token (prefixing with \"bearer\" is not required).'\n    openId:\n      type: openIdConnect\n      description: OIDC specific OAuth2 implementation. You should be accessing swagger or the api docs specific to your group to use this - /{group}/swagger or /{group}/api.\n      openIdConnectUrl: http://example.com/group/.well-known/openid-configuration\n\n  schemas:\n    defaultError:\n      required:\n        - error\n        - message\n        - id\n      properties:\n        error:\n          type: string\n          description: Type of error\n        message:\n          type: string\n          description: Additional information regarding the error\n        id:\n          type: string\n          format: uuid\n          description: Unique ID to help find the error in a logging stack\n\n    operations:\n      type: object\n      required:\n        - operation\n      properties:\n        operation:\n          type: string\n          enum:\n            - rotate_secret\n            - rotate_keys\n            - rotate_cookie_keys\n            - rotate_registration_access_token\n\n    userOperations:\n      type: object\n      required:\n        - operation\n      properties:\n        operation:\n          type: string\n          enum:\n            - verify_account\n            - password_reset\n            - generate_password\n\n    initialAccessTokenRequest:\n      properties:\n        email:\n          type: string\n          description: This adds an email address to the token, locking its use to a user with that email address only. useful when providing a token as part of an invite; however, this is not required in all cases. For example, you do not need this to use an IAT for OIDC client creation.\n        sub:\n          type: string\n          description: This adds a userId to the token, locking its use to a user with that id only.\n        expires:\n          type: number\n          description: Number of seconds after which this token expires. Default is 604800 (7 days).\n\n    initialAccessToken:\n      properties:\n        iat:\n          type: number\n          description: issue time\n        exp:\n          type: number\n          description: expiration time\n        kind:\n          type: string\n          default: \"InitialAccessToken\"\n        jti:\n          type: string\n          description: the token\n        email:\n          type: string\n          format: email\n          description: if provided, this is the locked user email\n        sub:\n          type: string\n          format: uuid\n          description: if provided, this is the locked user id\n\n    codeAuthorizationTokenRequest:\n      type: object\n      properties:\n        grant_type:\n          type: string\n          description: Type of grant being requested, of which authorization_code is an example\n          default: \"authorization_code\"\n        client_secret:\n          type: string\n        redirect_uri:\n          type: string\n          format: uri\n        code:\n          type: string\n          description: code recieved from authorization redirect\n        client_id:\n          type: string\n        scope:\n          type: string\n        audience:\n          type: string\n        code_verifier:\n          type: string\n        resource:\n          type: string\n        client_assertion:\n          type: string\n        client_assertion_type:\n          type: string\n        x_organization_context:\n          type: string\n          description: Explicitly state which org the user is logging into regardless of overall access using the organization ID or associated externalID. Not part of the OIDC specification - used for UEAuth\n        x_access_filter_organization:\n          type: string\n          description: Filter the response of the access scope to a single organization. Not part of the OIDC specification - used for UEAuth\n        x_access_filter_domain:\n          type: string\n          description: Filter the response of the access scope to a single domain. Not part of the OIDC specification - used for UEAuth\n        x_access_filter_product:\n          type: string\n          description: Filter the response of the access scope to a single product. Not part of the OIDC specification - used for UEAuth\n\n    accessTokens:\n      properties:\n        access_token:\n          type: string\n          description: this is an access_token and is primarily used for API access\n        expires_in:\n          type: number\n          description: when tokens expire\n        id_token:\n          type: string\n          description: this is an id_token and is primarily used to idenitify a user via claims, not for use with APIs\n        scope:\n          type: string\n          description: requested scopes delimited by spaces\n        token_type:\n          type: string\n\n    getAccounts:\n      properties:\n        type:\n          type: string\n          enum: ['Account']\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/accountObject'\n\n    firstAccountWrite:\n      description: the first account on a new auth group activates the group and creates a client\n      properties:\n        type:\n          type: string\n          enum: ['Account']\n        data:\n          $ref: '#/components/schemas/accountObject'\n        authGroup:\n          $ref: '#/components/schemas/authGroup'\n        client:\n          $ref: '#/components/schemas/clientObject'\n\n    recoverAccountResponse:\n      type: object\n      properties:\n        type:\n          type: string\n          enum: ['Account']\n        data:\n          $ref: '#/components/schemas/accountPlusCodes'\n\n\n    getAccount:\n      description: if the auth group is active, this is the response\n      properties:\n        type:\n          type: string\n          enum: ['Account']\n        data:\n          $ref: '#/components/schemas/accountObject'\n\n    getClients:\n      type: object\n      properties:\n        type:\n          type: string\n          enum: ['Client']\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/clientObject'\n\n    getClient:\n      type: object\n      properties:\n        type:\n          type: string\n          enum: ['Client']\n        data:\n          $ref: '#/components/schemas/clientObject'\n\n    writeClientObject:\n      type: object\n      required:\n      - grant_types\n      - response_types\n      - redirect_uris\n      properties:\n        application_type:\n          type: string\n          default: web\n          enum:\n            - web\n            - native\n        grant_types:\n          type: array\n          default: []\n          items:\n            type: string\n            enum:\n             - authorization_code\n             - implicit\n             - refresh_token\n             - client_credentials\n        id_token_signed_response_alg:\n          type: string\n        post_logout_redirect_uris:\n          type: array\n          default: []\n          items:\n            type: string\n            format: uri\n        require_auth_time:\n          type: boolean\n          default: false\n        response_types:\n          type: array\n          default: []\n          items:\n            type: string\n            default: code\n            enum:\n              - code\n              - id_token\n              - token\n        subject_type:\n          type: string\n        token_endpoint_auth_method:\n          type: string\n        introspection_endpoint_auth_method:\n          type: string\n        revocation_endpoint_auth_method:\n          type: string\n        client_name:\n          type: string\n          description: A name for the client that is unique within the authGroup\n        client_label:\n          type: string\n          enum:\n            - login\n            - api\n            - app\n            - custom\n        redirect_uris:\n          type: array\n          default: []\n          items:\n            type: string\n            format: uri\n        client_skip_consent:\n          type: boolean\n          default: false\n          description: only use this for first-party clients (those you control directly)\n        client_optional_skip_logout_prompt:\n          type: boolean\n          default: false\n          description: this will skip the logout prompt and immediately logout\n        associated_product:\n          type: string\n          format: uuid\n          description: the Product associated to this Client\n        register_url:\n          type: string\n          format: uri\n          description: used to populate the href for the register link on login using this client\n        tos_url:\n          type: string\n        policy_url:\n          type: string\n        client_federation_options:\n          type: array\n          items:\n            type: string\n            example: 'oidc.google.my_google_connection'\n            description: a representation of the AuthGroup federation option as specification.provider.name\n        client_allow_org_federation:\n          type: boolean\n          default: false\n          description: when enabled, this allows an organization to issue their own custom SSO to login\n        client_allow_org_self_identify:\n          type: boolean\n          default: false\n          description: when enabled, login starts with a form that asks the user to enter an org id or alias\n\n    clientObject:\n      type: object\n      required:\n        - application_type\n        - grant_types\n        - response_types\n        - client_id\n        - client_name\n        - client_secret\n        - redirect_uris\n        - auth_group\n      description: this may not be all inclusive, consult the most current oidc specification\n      allOf:\n        - $ref: '#/components/schemas/writeClientObject'\n      properties:\n        request_uris:\n          type: array\n          default: []\n          items:\n            type: string\n            format: uri\n        client_id_issued_at:\n          type: integer\n        client_id:\n          type: string\n          description: GUID\n        client_secret_expires_at:\n          type: integer\n          default: 0\n        client_secret:\n          type: string\n          format: password\n          description: Auto Generated Secret\n        auth_group:\n          type: string\n          description: the tenant ID (or prettyName) for the authorization group of clients, accounts and oidc configs\n        registration_client_uri:\n          type: string\n          description: the oidc spec client access url for api calls\n          format: uri\n        registration_access_token:\n          type: string\n          description: Required to POST or PUT updates to clients if not the authGroup owner. Rotates on each call.\n\n    clientObjectUpdate:\n      type: object\n      required:\n      - application_type\n      - grant_types\n      - response_types\n      - client_id\n      - client_name\n      - redirect_uris\n      - auth_group\n      description: this may not be all inclusive, consult the most current oidc specification\n      allOf:\n        - $ref: '#/components/schemas/writeClientObject'\n      properties:\n        request_uris:\n          type: array\n          default: []\n          items:\n            type: string\n            format: uri\n        client_id_issued_at:\n          type: integer\n        client_id:\n          type: string\n          description: GUID\n        client_secret_expires_at:\n          type: integer\n          default: 0\n        client_secret:\n          type: string\n          format: password\n          description: Auto Generated Secret\n        auth_group:\n          type: string\n          description: the tenant ID (or prettyName) for the authorization group of clients, accounts and oidc configs\n\n    userInfoObject:\n      type: object\n      additionalProperties: true\n      required:\n        - sub\n        - group\n        - email\n      properties:\n        sub:\n          type: string\n          description: the userId of the account\n        group:\n          type: string\n          description: the auth group id the account belongs to\n        email:\n          type: string\n          format: email\n        username:\n          type: string\n        verified:\n          type: boolean\n          description: if the account has been verified via external email or text message\n\n    minimalAccountsInfo:\n      type: array\n      items:\n        type: object\n        properties:\n          id:\n            type: string\n            format: uuid\n          email:\n            type: string\n            format: email\n\n    searchAccounts:\n      type: object\n      properties:\n        exact:\n          $ref: '#/components/schemas/minimalAccountsInfo'\n        like:\n          $ref: '#/components/schemas/minimalAccountsInfo'\n\n    accountPlusCodes:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/accountObject'\n      properties:\n        codes:\n          type: array\n          items:\n            type: string\n            description: these are your new recovery codes, do not lose them\n\n\n    accountObject:\n      type: object\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n          format: uuid\n          description: guid for this account\n        createdAt:\n          type: string\n          format: date-time\n          description: when the account was created\n        modifiedAt:\n          type: string\n          format: date-time\n          description: when was the account last modified\n        modifiedBy:\n          type: string\n          description: Id of last modifier\n        authGroup:\n          type: string\n          description: group ID for this account. email addresses are unique to auth groups.\n        verified:\n          type: boolean\n          description: whether or not the account was verified\n        blocked:\n          type: boolean\n          description: root level block of the user from access to the authGroup\n        mfa:\n          type: object\n          properties:\n            enabled:\n              type: boolean\n        acceptingProfileRequests:\n          type: boolean\n        myNotifications:\n          type: object\n          properties:\n            profileRequests:\n              type: boolean\n              description: You can silence device notifications for profile requests\n              default: true\n        active:\n          type: boolean\n          description: status of the account\n      allOf:\n        - $ref: '#/components/schemas/refWriteAccount'\n\n    refWriteAccount:\n      type: object\n      properties:\n        username:\n          type: string\n          description: optional identifier, must be unique in the authGroup. If not provided, set to email.\n        email:\n          type: string\n          description: email address\n        password:\n          type: string\n          description: this is a password\n        phone:\n          type: object\n          properties:\n            txt:\n              type: string\n              pattern: '\\+(9[976]\\d|8[987530]\\d|6[987]\\d|5[90]\\d|42\\d|3[875]\\d|2[98654321]\\d|9[8543210]|8[6421]|6[6543210]|5[87654321]|4[987654310]|3[9643210]|2[70]|7|1)\\d{1,14}$'\n              description: used for notifications. only visible to the user in question.\n        metadata:\n          type: object\n          description: additional context provided by the implementer.\n\n    writeAccountByOrg:\n      type: object\n      additionalProperties: false\n      required:\n        - email\n      properties:\n        email:\n          type: string\n          format: email\n        username:\n          type: string\n        profile:\n          description: you can use profile data to initilize an organization profile for this Account\n          allOf:\n            - $ref: '#/components/schemas/refSecuredProfileWrite'\n          properties:\n            externalId:\n              type: string\n              description: used to associate this Organization User to an internal record of the user in an HCM or other system\n\n    writeAccountProfile:\n      type: object\n      additionalProperties: false\n      properties:\n        profile:\n          type: object\n          description: These are used to initialize a secured profile. Access is restricted to the Account holder after creation.\n          properties:\n            givenName:\n              type: string\n            familyName:\n              type: string\n            displayName:\n              type: string\n            picture:\n              type: string\n              format: uri\n\n    importAccount:\n      type: object\n      additionalProperties: false\n      required:\n        - email\n      properties:\n        id:\n          type: string\n          format: uuid\n          description: if provided, the system will attempt to use this ID as long as it is unique.\n        username:\n          type: string\n          description: optional identifier, must be unique in the authGroup. If not provided, set to email.\n        email:\n          type: string\n          description: email address\n        phone:\n          type: object\n          properties:\n            txt:\n              type: string\n              pattern: '\\+(9[976]\\d|8[987530]\\d|6[987]\\d|5[90]\\d|42\\d|3[875]\\d|2[98654321]\\d|9[8543210]|8[6421]|6[6543210]|5[87654321]|4[987654310]|3[9643210]|2[70]|7|1)\\d{1,14}$'\n              description: used for notifications. only visible to the user in question.\n\n    writeAccount:\n      type: object\n      additionalProperties: false\n      required:\n        - email\n      allOf:\n        - $ref: '#/components/schemas/refWriteAccount'\n        - $ref: '#/components/schemas/writeAccountProfile'\n      properties:\n        generatePassword:\n          type: boolean\n          description: if false, password field is required; otherwise, a 32 char password is generated\n        profile:\n          type: object\n          description: These are used to initialize a secured profile. Access is restricted to the Account holder after creation.\n          properties:\n            givenName:\n              type: string\n            familyName:\n              type: string\n            displayName:\n              type: string\n            picture:\n              type: string\n              format: uri\n\n    writeAuthGroup:\n      type: object\n      additionalProperties: false\n      required:\n        - name\n        - owner\n        - prettyName\n        - primaryDomain\n        - primaryEmail\n      properties:\n        name:\n          type: string\n          description: name of the entity, org, or company creating this group\n        prettyName:\n          type: string\n          description: URL friendly alternative name that can be used instead of the id when referencing the group\n          pattern: '^[a-zA-Z0-9-_]*$'\n        owner:\n          type: string\n          format: email\n          description: Required to match to the first account added. Will be changed to account uuid after connection.\n        locked:\n          type: boolean\n          default: false\n          description: If true, no one can self register an account without an initial access code provided by an admin of the group.\n        metadata:\n          type: object\n          description: extend this with additional data if needed\n        config:\n          $ref: '#/components/schemas/agConfigOptions'\n        pluginOptions:\n          $ref: '#/components/schemas/agPluginOptions'\n        primaryDomain:\n          type: string\n          format: uri\n          description: primary domain url\n        primaryTOS:\n          type: string\n          format: uri\n          description: link to your company terms of service\n        primaryPrivacyPolicy:\n          type: string\n          format: uri\n          description: link to your company privacty policy\n        primaryEmail:\n          type: string\n          format: email\n          description: this should be a contact email for your authgroup for assistance or inquiry\n        registerUrl:\n          type: string\n          format: uri\n          description: link to your company primary registration link, if one exists. This will be overrided by client registration links.\n\n    agPluginOptions:\n      type: object\n      description: these are plugin configurations\n      additionalProperties: false\n      properties:\n        externalStreaming:\n          type: object\n          properties:\n            enabled:\n              type: boolean\n              default: false\n        notification:\n          type: object\n          properties:\n            enabled:\n              type: boolean\n              default: false\n              description: allows notifications to be sent from the authgroup\n            ackRequiredOnOptional:\n              type: boolean\n              default: false\n              description: some notifications are not absolutely required for functionality, if this is false, that functionality will continue and a warning will be sent on notificiation failure. If this is true, the functionality will fail on a notification fail.\n\n    agConfigOptions:\n      type: object\n      description: these configurations alter how OIDC is processed\n      additionalProperties: false\n      properties:\n        #keys:\n        #  type: array\n        #  description: These are the encryption keys of the authgroup. Manual entry is not recommended.\n        ttl:\n          type: object\n          description: milliseconds before expiration on all properties\n          properties:\n            accessToken:\n              type: number\n              default: 3600\n            authorizationCode:\n              type: number\n              default: 600\n            clientCredentials:\n              type: number\n              default: 3600\n            deviceCode:\n              type: number\n              default: 3600\n            idToken:\n              type: number\n              default: 3600\n            refreshToken:\n              type: number\n              default: 86400\n            interaction:\n              type: number\n              default: 3600\n            session:\n              type: number\n              default: 864000\n            grant:\n              type: number\n              default: 864000\n        requireVerified:\n          type: boolean\n          default: false\n          description: when true, this ensures that only verified accounts can complete a login\n        autoVerify:\n          type: boolean\n          default: false\n          description: when true, this sends a notification to a new account to verify automatically - MUST have notifications enabled first\n        passwordLessSupport:\n          type: boolean\n          default: false\n          description: when true, this allows magic link emails for login - MUST have notification enabled first\n        centralPasswordReset:\n          type: boolean\n          default: true\n          description: when true, this allows enables the centrally served password reset UI to be accessed publicaly\n        scopes:\n          type: array\n          description: these are scopes that will be availabl to all clients within your authgroup oidc provider\n          items:\n            type: string\n        acrValues:\n          type: array\n          items:\n            type: string\n        deviceFlow:\n          type: boolean\n          description: activates device flow for devices without browsers. EXPERIENCE NOT FULLY IMPLEMENTED\n        pkceRequired:\n          type: boolean\n          description: when this is true, only pkce logins are possible\n          example: false\n          default: false\n        mfaChallenge:\n          type: object\n          properties:\n            enable:\n              type: boolean\n              default: false\n              description: This enables MFA for the AuthGroup assuming it has been enabled for the Platform\n            required:\n              type: boolean\n              default: false\n              description: If this is true, all logins must have MFA enabled and will be onboarded at the first opportunity\n            type:\n              type: string\n              description: This is an indication of the MFA provider and must be the same as what is availble from global plugins\n              example: privakey\n              enum:\n                - http-proxy\n                - privakey\n            meta:\n              type: object\n              description: This is an area designated for metadata such as provider ids, secrets, etc. As an example, for the privakey integration, use meta to store 'privakeyLoginId', 'privakeyClient' and 'privakeySecret'.\n        federate:\n          type: object\n          properties:\n            oidc:\n              type: array\n              items:\n                $ref: '#/components/schemas/federatedOIDC'\n            oauth2:\n              type: array\n              items:\n                $ref: '#/components/schemas/federatedOAuth2'\n        ui:\n          type: object\n          properties:\n            meta:\n              type: object\n              description: this object can be used to define customization of any specific UI implementation\n            skin:\n              type: object\n              properties:\n                backgroundImage:\n                  type: string\n                  description: this is a placeholder for a UI backdrop but is not directly used by this library aside from providing the reference\n                  format: uri\n                splashImage:\n                  type: string\n                  description: this is the splash image used on login and authorization screens. there is a system default\n                  format: uri\n                logo:\n                  type: string\n                  description: a logo for the top of the login and authorize screens. best at 40x40 pixels\n                  format: uri\n                favicon:\n                  type: string\n                  description: a favicon to use with the portal specific to the AG brand. Must be square and no more than 500px\n                  format: uri\n                loginOrientation:\n                  type: string\n                  enum:\n                    - right\n                    - left\n                    - middle\n                  description: choose which way the screen inputs are oriented\n                bgGradientLow:\n                  type: string\n                  description: this is the background color lower end gradient color\n                bgGradientHigh:\n                  type: string\n                  description: this is the background color higher end gradient color\n\n    authGroup:\n      type: object\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n          example: V1StGXR8_Z5jdHi6B-myT\n          description: nanoid for this account\n        createdAt:\n          type: string\n          format: date-time\n          description: when the account was created\n        modifiedAt:\n          type: string\n          format: date-time\n          description: when was the account last modified\n        modifiedBy:\n          type: string\n          description: id of last modifier\n        active:\n          type: string\n      allOf:\n        - $ref: '#/components/schemas/writeAuthGroup'\n        - $ref: '#/components/schemas/agAliasDns'\n\n    authGroupInitial:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/authGroup'\n      properties:\n        securityExpiration:\n          type: string\n          format: date-time\n          description: when this auth group will expire if it is not connected to the owner account and activated\n        initialAccessToken:\n          type: string\n          description: bearer token to use when first connecting an account\n\n    agAliasDns:\n      type: object\n      additionalProperties: false\n      properties:\n        aliasDnsUi:\n          type: string\n          description: an alias DNS domain (example.com) that the authgroup may claim. This simply provides a record and does not actually implement custom domain check and dns registration functionality.\n          format: uri\n        aliasDnsOIDC:\n          type: string\n          description: an alias DNS domain other than the aliasDnsUi (oidc.example.com) that the authgrup may claim for centralized UI interactions of the OIDC provider. This alias only applies to UI interactions and centralized screens, API calls will not work. This simply provides a record and does not actually implement custom domain check and dns registration functionality.\n          format: uri\n\n\n    getGroup:\n      properties:\n        type:\n          type: string\n          enum:\n            - Auth Group\n        data:\n          $ref: '#/components/schemas/authGroup'\n\n    getGroups:\n      properties:\n        type:\n          type: string\n          enum:\n            - Auth Group\n        data:\n          $ref: '#/components/schemas/authGroup'\n\n    globalPlugins:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        createdAt:\n          type: string\n          format: date-time\n        createdBy:\n          type: string\n          description: User Id of the person who created latest update config\n        notifications:\n          type: object\n          properties:\n            enabled:\n              type: boolean\n            notificationServiceUri:\n              type: string\n              description: the url of your service to which we post\n            registeredClientId:\n              type: string\n        eventStream:\n          type: object\n          properties:\n            enabled:\n              type: boolean\n            provider:\n              type: object\n              properties:\n                type:\n                  type: string\n                  enum:\n                    - pulsar\n                restAuth:\n                  type: boolean\n                streamAuth:\n                  type: boolean\n                masterAuth:\n                  type: boolean\n                  default: false\n                  description: will you need auth to publish to the master stream?\n                masterStream:\n                  type: object\n                  description: the master stream is a data stream that UEAuth can write transaction information to that exists outside the context of any one authgroup. For example, when a new Auth Group is created, it would be published to this stream so that other systems can react to the creation.\n                  properties:\n                    enabled:\n                      type: boolean\n                      default: false\n                    streamPath:\n                      type: string\n                      description: this is the topic or stream address to publish master stream content\n                auth:\n                  type: object\n                  description: information about the oauth2 resource client generated for this plugin\n                adminUrl:\n                  type: string\n                  format: uri\n                streamUrl:\n                  type: string\n                  format: uri\n                lockStreamingOnceActive:\n                  type: boolean\n                  example: false\n                  description: when this is active, an AG admin can turn on event streaming but is unable to deactivate without a root user\n                enableValidation:\n                  type: boolean\n                  description: if active, every message sent is validated for correct schema\n                  default: false\n                externalEventBodySchemaUrl:\n                  type: string\n                  format: uri\n                  description: if you are using an external json schema provider to validate schema. only applicable if enableValidation is set to true\n                setupConfig:\n                  type: object\n                  description: the example is pulsar specific and for pulsar, clusterList is required\n                  example:\n                    adminRoles: []\n                    clusterList: ['dev-cluster']\n                clientConfig:\n                  type: object\n                  description: the example is pulsar specific - this is not a required input as defaults are present\n                  example:\n                    operationTimeoutSeconds: 30\n                    ioThreads: 1\n                    tlsTrustCertsFilePath: /my/path\n                    tlsValidateHostname: false\n                    tlsAllowInsecureConnection: false\n\n        mfaChallenge:\n          type: object\n          properties:\n            enabled:\n              type: boolean\n            providers:\n              type: array\n              items:\n                type: object\n                properties:\n                  name:\n                    type: string\n                    enum:\n                      - http-proxy\n                      - privakey\n                  api:\n                    type: object\n                    description: endpoints for the interface functions\n                    properties:\n                      domain:\n                        type: string\n                        format: uri\n                        description: This is the domain of your mfa provider proxy\n                        example: \"https://yourproviderendpoint.com\"\n                      challenge:\n                        type: string\n                        description: This is the endpoint path used to send the mfa challenge to the end user\n                        example: \"/challenge/path\"\n                      validate:\n                        type: string\n                        description: This is an endpoint path used to validate callback requests from the provider\n                        example: \"/validate/path\"\n                      bind:\n                        type: string\n                        description: This is an endpoint path used to map the account ID of the user to the MFA account/device\n                        example: \"/bind/path\"\n                      devices:\n                        type: string\n                        description: This is an endpoint path used to return all registered devices of the MFA account\n                        example: \"/devices/path\"\n                      revoke:\n                        type: string\n                        description: This is an endpoint path used to revoke a device identified by ID of the MFA account\n                        example: \"/revoke/path\"\n                  proxyClientId:\n                    type: string\n                    format: uuid\n                    description: this is only present if the configuration is http-proxy\n                  proxyEnableScreen:\n                    type: string\n                    format: uri\n                    description: If this is an http-proxy mfa setup, you will need to open a web page where you handle the device connection, through your proxy service. This is usually presented as instructions and a QR code. UE Auth will send the JSON results of the bind API call to this request via query parameters.\n                    example: 'https://example.com/complete/setup'\n                  proxyEnableScreenButtonText:\n                    type: string\n                    description: This is the text used on the button that links to the enablement screen\n                  proxyEnableInstructions:\n                    type: string\n                    description: UE Auth will display this text as instructions if desired. New lines can be represented with '--'\n\n    notification:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/writeNotification'\n      properties:\n        id:\n          type: string\n          format: uuid\n          description: system generated id of the notification\n        createdAt:\n          type: string\n          format: date-time\n          description: when the notification was created\n        createdBy:\n          type: string\n          description: userId of the creator\n        processed:\n          type: boolean\n          description: indicates whether or not this notification was successfully sent to the plugin service\n        iss:\n          type: string\n          description: a record of the UE Auth issuer address\n        authGroupId:\n          type: string\n          description: Auth Group ID (not prettyName) associated to the notification\n        destinationUri:\n          type: string\n          description: plugin service http address the request was sent to\n        organization:\n          type: string\n          description: the organization context that the notification was created\n\n    writeNotification:\n      type: object\n      additionalProperties: false\n      description: This will result in a request to an external notification processing service of your choice (see README for notification Plugin)\n      required:\n        - type\n      properties:\n        type:\n          type: string\n          description: supported notification types\n          enum:\n            - general\n            - forgotPassword\n            - passwordless\n            - verify\n        formats:\n          type: array\n          description: intended formats for this notification - sent to the plugin service\n          items:\n            type: string\n            enum:\n              - email\n              - sms\n        recipientUserId:\n          type: string\n          description: userId of the intended recipient\n        recipientEmail:\n          type: string\n          description: email address of the intended recipient\n        recipientSms:\n          type: string\n          description: mobile phone number of the intended recipient\n        screenUrl:\n          type: string\n          description: optional field to direct the recipient to a specific screen - automatically populated based on type if not provided\n          format: uri\n        subject:\n          type: string\n          description: a subject line for the recipient\n        message:\n          type: string\n          description: a message for the recipient\n        meta:\n          type: object\n          description: any addtional metadata that should go with this\n\n    verifyEmail:\n      additionalProperties: false\n      required:\n        - email\n      properties:\n        email:\n          type: string\n          format: email\n          description: the unique email address\n\n    passwordReset:\n      additionalProperties: false\n      description: Send a unique email address and choose email, sms or both for the reset link to be sent. Email must already be associated to the account. If no preference is picked, all associated data is used. This must be associated with the AuthGroup in the url.\n      required:\n        - email\n      properties:\n        email:\n          type: string\n          format: email\n          description: the unique email address\n        formats:\n          type: array\n          items:\n            type: string\n            enum: ['email', 'sms']\n\n    jsonPatch:\n      additionalProperties: false\n      description: Details for JSONPatch can be found at http://jsonpatch.com/\n      type: array\n      items:\n        type: object\n        description: Reference the update model for the full paths to update\n        oneOf:\n          - required:\n            - op\n            - path\n            - value\n            properties:\n              op:\n                type: string\n                enum: ['replace', 'add', 'remove', 'test']\n              path:\n                type: string\n                description: 'A path to the property in the data model. For example /name/firstName or /emails/-'\n              value:\n                type: object\n                description: 'The object to set the property at the above path to'\n          - required:\n              - op\n              - path\n              - value\n            properties:\n              op:\n                type: string\n                enum: [ 'replace', 'add', 'remove', 'test' ]\n              path:\n                type: string\n                description: 'A path to the property in the data model. For example /name/firstName or /emails/-'\n              value:\n                type: array\n                description: 'The array to set the property at the above path to'\n                items:\n                  oneOf:\n                    - type: string\n                    - type: object\n                    - type: number\n          - required:\n            - op\n            - path\n            - value\n            properties:\n              op:\n                type: string\n                enum: ['replace', 'add', 'remove', 'test']\n              path:\n                type: string\n                description: 'A path to the property in the data model. For example /name/firstName or /emails/-'\n              value:\n                type: string\n                description: 'The string, array or object to set the property at the above path to'\n          - required:\n            - op\n            - path\n            - value\n            properties:\n              op:\n                type: string\n                enum: ['replace', 'add', 'remove', 'test']\n              path:\n                type: string\n                description: 'A path to the property in the data model. For example /name/firstName or /emails/-'\n              value:\n                type: boolean\n          - required:\n            - op\n            - path\n            - value\n            properties:\n              op:\n                type: string\n                enum: ['replace', 'add', 'remove', 'test']\n              path:\n                type: string\n                description: 'A path to the property in the data model. For example /name/firstName or /emails/-'\n              value:\n                type: integer\n                description: 'The integer, array or object to set the property at the above path to'\n          - required:\n            - op\n            - path\n            properties:\n              op:\n                type: string\n                enum: ['remove']\n              path:\n                type: string\n                description: 'A path to the property in the data model. For example /name/firstName or /emails/-'\n          - required:\n            - op\n            - from\n            - path\n            properties:\n              op:\n                type: string\n                enum: ['copy', 'move']\n              from:\n                type: string\n                description: 'Path to copy or move from'\n              path:\n                type: string\n                description: 'Path to copy or move to'\n\n    writeOrgUserProfile:\n      type: object\n      additionalProperties: false\n      allOf:\n        - $ref: '#/components/schemas/securedProfileWrite'\n      properties:\n        externalId:\n          type: string\n          description: used to associate this Organization User to an internal record of the user in an HCM or other system\n\n    orgUserProfile:\n      type: object\n      description: Organization User Profiles are unique only to the Organization but reference a single unique Account in the AuthGroup. One Account could have as many Organization User Profiles as there are Organizations to which the Account has been given access.\n      allOf:\n        - $ref: '#/components/schemas/securedProfile'\n      properties:\n        externalId:\n          type: string\n          description: used to associate this Organization User to an internal record of the user in an HCM or other system\n        organization:\n          type: string\n          format: uuid\n          description: organization id this profile is associated to\n\n    refSecuredProfileWrite:\n      type: object\n      additionalProperties: false\n      properties:\n        givenName:\n          type: string\n          description: the User's given name\n        familyName:\n          type: string\n          description: often the last name or equivalent\n        displayName:\n          type: string\n          description: preferred display name of the user - sometimes a nickname\n        personalHeader:\n          type: string\n        bio:\n          type: string\n          description: optional block of text about the user\n        picture:\n          type: string\n          description: URI to an image for profile use\n          example: https://example-cdn.com/id-of-your-image.jpeg\n        address:\n          type: object\n          description: primary address of the account\n          properties:\n            street1:\n              type: string\n            street2:\n              type: string\n            city:\n              type: string\n            state:\n              type: string\n            postalCode:\n              type: string\n            country:\n              type: string\n        employer:\n          type: string\n        title:\n          type: string\n        position:\n          type: string\n        additionalEmails:\n          type: array\n          items:\n            type: object\n            properties:\n              label:\n                type: string\n              email:\n                type: string\n                format: email\n        contactNumbers:\n          type: array\n          items:\n            type: object\n            properties:\n              label:\n                type: string\n              number:\n                type: string\n\n    securedProfileWrite:\n      type: object\n      required:\n        - accountId\n      allOf:\n        - $ref: '#/components/schemas/refSecuredProfileWrite'\n      additionalProperties: false\n      properties:\n        accountId:\n          type: string\n          format: uuid\n          description: user ID\n\n    securedProfile:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/securedProfileWrite'\n      properties:\n        id:\n          type: string\n          format: uuid\n          description: id of the profile (NOT THE ACCOUNT)\n        authGroup:\n          type: string\n          description: reference to the UEAuth Auth Group\n        modifiedAt:\n          type: string\n          format: date-time\n        createdAt:\n          type: string\n          format: date-time\n        createdBy:\n          type: string\n        modifiedBy:\n          type: string\n\n    writeAccess:\n      type: object\n      properties:\n        domains:\n          type: array\n          items:\n            type: string\n            format: uuid\n        roles:\n          type: array\n          items:\n            type: string\n            format: uuid\n\n    access:\n      type: array\n      items:\n        type: object\n        properties:\n          organization:\n            type: object\n            allOf:\n              - $ref: '#/components/schemas/writeAccess'\n            properties:\n              id:\n                type: string\n                format: uuid\n\n    updateUserAccess:\n      properties:\n        id:\n          type: string\n          description: user/account id\n          format: uuid\n        access:\n          $ref: '#/components/schemas/access'\n\n    userAccessAction:\n      allOf:\n        - $ref: '#/components/schemas/updateUserAccess'\n      properties:\n        organization:\n          type: string\n          format: uuid\n          description: organization that action occurred against\n        action:\n          type: string\n          description: what happened\n\n    writeClientAccess:\n      type: object\n      description: array of roles to assocaite to the client\n      additionalProperties: false\n      properties:\n        roles:\n          type: array\n          items:\n            type: string\n            format: uuid\n\n\n    clientAccess:\n      properties:\n        id:\n          type: string\n          format: uuid\n          description: the ID fo the client\n        authGroup:\n          type: string\n          description: the ID of the AuthGroup\n        access:\n          type: object\n          properties:\n            product:\n              type: string\n              format: uuid\n              description: the associated product\n            roles:\n              type: array\n              items:\n                type: string\n                format: uuid\n                description: role ids\n\n    valClientAccess:\n      properties:\n        sub:\n          type: string\n          description: client Id\n          format: uuid\n        type:\n          type: string\n          example: client\n        authGroup:\n          type: object\n          properties:\n            id:\n              type: string\n            member:\n              type: boolean\n              example: true\n        access:\n          type: object\n\n    userAccess:\n      properties:\n        sub:\n          type: string\n          description: user/account id\n          format: uuid\n        type:\n          type: string\n          example: user\n        authGroup:\n          type: object\n          properties:\n            id:\n              type: string\n            owner:\n              type: boolean\n              example: false\n              description: if true, this person owns the authgroup\n            member:\n              type: boolean\n              example: true\n              description: if true, this person belongs to this authgroup - expect this to usually be true\n        access:\n          $ref: '#/components/schemas/access'\n\n    writeProduct:\n      type: object\n      additionalProperties: false\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          description: name of the product\n        description:\n          type: string\n          description: explain what the product does\n        associatedClients:\n          type: array\n          items:\n            type: string\n            format: uuid\n          description: array of OIDC client Ids that may be associated to this business definition of a product\n        b2c:\n          type: boolean\n          description: if this is true, the product is concidered b2c and it will show up on all user \"my products\" lists\n        url:\n          type: string\n          format: uri\n          description: the url of this product\n        type:\n          type: string\n          description: optional categorization of the product\n          enum:\n            - global\n            - app\n            - service\n            - module\n            - domain\n            - entity\n            - other\n\n    myProducts:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        codedId:\n          type: string\n        name:\n          type: string\n          description: the name of the product\n        description:\n          type: string\n          description: an overview of the product, if provided\n        url:\n          type: string\n          description: the url of the product\n\n    product:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/writeProduct'\n      properties:\n        id:\n          type: string\n          format: uuid\n          description: unique id of the product - globally unique\n        codedId:\n          type: string\n          description: this is a 10 character small id that is unique to the authgroup and can be used in place of id\n        modifiedAt:\n          type: string\n          format: date-time\n        createdAt:\n          type: string\n          format: date-time\n        createdBy:\n          type: string\n        modifiedBy:\n          type: string\n\n    role:\n      type: object\n      oneOf:\n        - $ref: '#/components/schemas/roleWrite'\n      properties:\n        id:\n          type: string\n          format: uuid\n        codedId:\n          type: string\n          description: this is a small 10 char id unique to authgroup/product that can be used in place of id\n        updateAt:\n          type: string\n          format: date-time\n        createdAt:\n          type: string\n          format: date-time\n        modifiedBy:\n          type: string\n        createdBy:\n          type: string\n        product:\n          type: string\n          format: uuid\n          description: product associated\n        productCodedId:\n          type: string\n          description: this is the codedId of the product\n        custom:\n          type: boolean\n          default: false\n        organization:\n          type: string\n          format: uuid\n          description: organization this role is associated to if this is custom\n        authGroup:\n          type: string\n\n    roleWrite:\n      type: object\n      additionalProperties: false\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          description: roles name\n        description:\n          type: string\n          description: roles description\n        permissions:\n          type: array\n          items:\n            type: string\n            example: \"3fa85f64-5717-4562-b3fc-2c963f66afa6 target::action:own\"\n            description: this is a concatenation of the permission ID and its code\n\n    organization:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/writeOrganization'\n      properties:\n        id:\n          type: string\n          format: uuid\n        modifiedAt:\n          type: string\n          format: date-time\n        createdAt:\n          type: string\n          format: date-time\n        modifiedBy:\n          type: string\n        createdBy:\n          type: string\n        authGroup:\n          type: string\n        active:\n          type: boolean\n        associatedProducts:\n          description: these are products for which the organization has purchased a license\n          type: array\n          items:\n            type: string\n            description: unique IDs of the product from the global list associated to the authgroup\n\n    writeOrganization:\n      type: object\n      additionalProperties: false\n      required:\n        - name\n        - description\n        - contactEmail\n      description: An organization is a tenant within an AuthGroup\n      properties:\n        externalId:\n          type: string\n          description: If an external system manages sales/billing of organizations, you can link with this\n        alias:\n          type: string\n          description: human readable word that represents the organization - e.g. slug\n        name:\n          type: string\n          description: organization name\n        description:\n          type: string\n          description: brief overview of the org in question\n        type:\n          type: string\n          description: what kind of organization is this?\n          default: customer\n          example: customer\n          enum:\n            - external\n            - customer\n            - internal\n            - other\n        contactName:\n          type: string\n          description: full name of the contact\n        contactAddress:\n          type: string\n        contactPhone:\n          type: string\n        contactEmail:\n          type: string\n          format: email\n        restrictEmailDomains:\n          type: boolean\n          description: toggle restrictions on email domains in emailDomain list\n        emailDomains:\n          type: array\n          items:\n            type: string\n            description: email domains that are allowed\n            example: example.com\n        access:\n          type: object\n          properties:\n            required:\n              type: boolean\n              default: false\n              description: if set to true, users which are added must agree to terms of access\n            terms:\n              type: string\n              description: the terms of access which must be accepted. this should be either a text block or a url\n            termsVersion:\n              type: string\n              description: optional method to version your terms. recommended if you want to update them later\n            disableAccessOnChange:\n              type: boolean\n              description: if this is true, everytime the termsVersion changes, everyone loses access until they accept. Otherwise, a simple notification is created.\n        profileNotifications:\n          type: boolean\n          description: When this is set to true, any Organization User Profile creation or update events result in a notification to the associated Account (user)\n          default: false\n        ssoLimit:\n          type: boolean\n          description: when true, all other login options are removed from the screen in favor of the sso option provided\n        ssoAddAccountToOrg:\n          type: boolean\n          description: when true, a user logging in to a product with org specified is automatically added to the organization, assuming email domain restrictions do not prevent the add\n        ssoEmailDomain:\n          type: string\n          example: example.com\n          description: this is a unique SSO email domain for the organization\n        sso:\n          type: object\n          description: while the API may define multiple options, you can only ever have one of these at a time on an organization\n          properties:\n            oidc:\n              $ref: '#/components/schemas/ssoOidcSpec'\n            oauth2:\n              $ref: '#/components/schemas/ssoOAuth2Spec'\n        meta:\n          type: string\n          description: additional custom structured information\n\n    domain:\n      type: object\n      additionalProperties: false\n      allOf:\n        - $ref: '#/components/schemas/writeDomain'\n      properties:\n        id:\n          type: string\n          format: uuid\n        modifiedAt:\n          type: string\n          format: date-time\n        createdAt:\n          type: string\n          format: date-time\n        modifiedBy:\n          type: string\n        createdBy:\n          type: string\n        authGroup:\n          type: string\n        organization:\n          type: string\n        active:\n          type: boolean\n          example: true\n        associatedOrgProducts:\n          type: array\n          items:\n            type: string\n            description: products associated to the org, now associated to the domain\n\n    writeDomain:\n      type: object\n      additionalProperties: false\n      required:\n        - name\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        externalId:\n          type: string\n          description: linking to external systems\n\n    permission:\n      type: object\n      additionalProperties: false\n      allOf:\n        - $ref: '#/components/schemas/writePermission'\n      properties:\n        id:\n          type: string\n          format: uuid\n        codedId:\n          type: string\n          description: small nano id for easy reference. unique to authgroup and product\n        product:\n          type: string\n          description: the id of the associated product\n          format: uuid\n        createdAt:\n          type: string\n          format: date-time\n        createdBy:\n          type: string\n\n    writePermission:\n      type: object\n      additionalProperties: false\n      required:\n        - target\n        - action\n      properties:\n        target:\n          type: string\n          description: the target in the system to which an action is attributed\n          example: user\n        action:\n          type: string\n          description: the action allowed by this permission\n          example: write\n        ownershipRequired:\n          type: boolean\n          description: if true, this means the action is only possible on the target if the target is owned by the user\n          example: false\n        description:\n          type: string\n          description: something to present on the screen explaining what this is for\n        tags:\n          type: array\n          description: descriptive labels to aid in search and general categorization\n          example:\n            - 'api'\n            - 'ui'\n          items:\n            type: string\n\n    checkForUpdate:\n      type: object\n      properties:\n        id:\n          type: string\n          example: V1StGXR8_Z5jdHi6B-myT\n        prettyName:\n          type: string\n        coreProducts:\n          type: array\n          items:\n            type: object\n        availableVersion:\n          type: string\n        updateRequired:\n          type: boolean\n        force:\n          type: boolean\n          description: if this is true, you should force the update ASAP\n\n    updateCore:\n      type: array\n      items:\n        type: object\n        properties:\n          UEAuthCoreProductName:\n            type: object\n            description: 'This is actually a dynamic property name which will represent your auto-generated Product: Organization Admin Portal'\n            properties:\n              id:\n                type: string\n                format: uuid\n                description: ID of the product\n              added:\n                type: array\n                description: permissions which were added to the product on this update\n                items:\n                  type: object\n              removed:\n                type: array\n                description: ids of the permissions that were removed\n                items:\n                  type: string\n                  format: uuid\n              roles:\n                type: array\n                description: the roles updated associated to the product\n                items:\n                  type: object\n\n    ssoOidcSpec:\n      type: object\n      additionalProperties: false\n      required:\n        - name\n        - client_id\n        - discovery_url\n      properties:\n        name:\n          type: string\n          description: unique name to label this federated OIDC connection\n        buttonText:\n          type: string\n        PKCE:\n          type: boolean\n          description: does this OIDC connection require PKCE? Some standard social connections have this and others do not. For example, for Google, this should be false\n          default: false\n        client_id:\n          type: string\n          description: this is the OIDC client id, sometimes referred to as an App ID depending on the platform\n        client_secret:\n          type: string\n          description: if you are not using PKCE, this is a required field\n        response_type:\n          type: string\n          example: code\n        grant_type:\n          type: string\n          example: authorization_code\n        discovery_url:\n          type: string\n          format: uri\n          description: this is the discovery oidc .well-known url usually ending in \"/.well-known/openid-configuration\"\n        scopes:\n          type: array\n          description: UE Auth will automatically request openid and email scopes. You can specificy additional scopes here if required for security\n          items:\n            type: string\n\n    federatedOAuth2:\n      type: object\n      required:\n        - name\n        - provider\n        - client_id\n        - accessTokenUri\n        - authorizationUri\n        - profileUri\n      allOf:\n        - $ref: '#/components/schemas/ssoOAuth2Spec'\n      properties:\n        provider:\n          type: string\n          enum:\n          - linkedin\n          - custom\n        buttonType:\n          type: string\n          enum:\n            - linkedin\n            - standard\n\n    ssoOAuth2Spec:\n      type: object\n      required:\n        - name\n        - client_id\n        - accessTokenUri\n        - authorizationUri\n        - profileUri\n      properties:\n        name:\n          type: string\n        buttonText:\n          type: string\n        PKCE:\n          type: boolean\n          default: false\n        client_id:\n          type: string\n        client_secret:\n          type: string\n        response_type:\n          type: string\n          default: code\n          enum:\n          - code\n          description: only authorization code is supported at this time\n        grant_type:\n          type: string\n          default: authorization_code\n          enum:\n          - authorization_code\n          description: only authorization code is supported at this time\n        scopes:\n          type: array\n          items:\n            type: string\n        accessTokenUri:\n          type: string\n          format: uri\n        authorizationUri:\n          type: string\n          format: uri\n        profileUri:\n          type: string\n          format: uri\n\n    federatedOIDC:\n      type: object\n      additionalProperties: false\n      allOf:\n        - $ref: '#/components/schemas/ssoOidcSpec'\n      required:\n        - name\n        - provider\n        - client_id\n        - discovery_url\n      properties:\n        provider:\n          type: string\n          description: is this a social provider like google or a custom OP you're connecting to?\n          enum: # as we add more standards, add them here...\n            - google\n            - custom\n        buttonType:\n          type: string\n          description: if this is a social connection, we can use that platform's logo if desired. standard means its a default system button with your text\n          default: standard\n          enum:\n            - google\n            - standard\n\n# Account Recovery\n    recoveryRequestObject:\n      type: object\n      required:\n        - codes\n        - email\n      properties:\n        email:\n          type: string\n          format: email\n          description: your email address\n        codes:\n          type: array\n          minItems: 10\n          maxItems: 10\n          items:\n            type: string\n            description: these are the recovery codes. All 10 must be input. 7 out of 10 must match - there is some room for error\n\n    recoverAccountRequest:\n      type: object\n      required:\n        - email\n      properties:\n        email:\n          type: string\n          format: email\n        password:\n          type: string\n          description: your new password. If left off the request, one will be generated for you\n\n# Event Stream Plugin\n    writeEventStream:\n      type: object\n      required:\n        - enabled\n      properties:\n        enabled:\n          type: boolean\n        currentVersion:\n          type: number\n        provider:\n          type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - pulsar\n            adminUrl:\n              type: string\n              format: uri\n            streamUrl:\n              type: string\n              format: uri\n            lockStreamingOnceActive:\n              type: boolean\n              example: false\n              description: when this is active, an AG admin can turn on event streaming but is unable to deactivate without a root user\n            enableValidation:\n              type: boolean\n              description: if active, every message sent is validated for correct schema\n              default: false\n            externalEventBodySchemaUrl:\n              type: string\n              format: uri\n              description: if you are using an external json schema provider to validate schema. only applicable if enableValidation is set to true\n            restAuth:\n              type: boolean\n              default: false\n              description: will calls to the REST API require a client_credential token?\n            streamAuth:\n              type: boolean\n              default: false\n              description: will publishing events require a client_credential token?\n            authScopes:\n              type: string\n              description: if specific scopes are required for the client credential authorizer add them here as space delimited strings\n            masterAuth:\n              type: boolean\n              default: false\n              description: will you need auth to publish to the master stream?\n            masterStream:\n              type: object\n              description: the master stream is a data stream that UEAuth can write transaction information to that exists outside the context of any one authgroup. For example, when a new Auth Group is created, it would be published to this stream so that other systems can react to the creation.\n              properties:\n                enabled:\n                  type: boolean\n                  default: false\n                streamPath:\n                  type: string\n                  description: this is the topic or stream address to publish master stream content\n            setupConfig:\n              type: object\n              example:\n                adminRoles: []\n                clusterList: ['dev-cluster']\n            clientConfig:\n              type: object\n              description: the example is pulsar specific - this is not a required input as defaults are present\n              example:\n                operationTimeoutSeconds: 30\n                ioThreads: 1\n                tlsTrustCertsFilePath: /my/path\n                tlsValidateHostname: false\n                tlsAllowInsecureConnection: false\n\n# MFA CHALLENGE\n    writeMfaChallenge:\n      type: object\n      required:\n        - enabled\n        - currentVersion\n      properties:\n        enabled:\n          type: boolean\n        currentVersion:\n          type: number\n        type:\n          type: string\n          description: must be either 'http-proxy' or 'privakey'. Other options will be added when they are supported.\n          enum:\n            - http-proxy\n            - privakey\n        api:\n          type: object\n          description: required for the proxy configuration. Do not include for privakey configuration.\n          properties:\n            domain:\n              type: string\n              format: uri\n              description: This is the endpoint domain used for your mfa proxy\n              example: \"https://yourproxyendpoint.com\"\n            challenge:\n              type: string\n              description: This is the endpoint path used to send the mfa challenge to the end user\n              example: \"/challenge/path\"\n            validate:\n              type: string\n              description: This is an endpoint path used to validate callback requests from the provider\n              example: \"/validate/path\"\n            bind:\n              type: string\n              description: This is an endpoint path used to map the account ID of the user to the MFA account/device\n              example: \"/bind/path\"\n            devices:\n              type: string\n              description: This is an endpoint path used to return all registered devices of the MFA account\n              example: \"/devices/path\"\n            revoke:\n              type: string\n              description: This is an endpoint path used to revoke a device identified by ID of the MFA account\n              example: \"/revoke/path\"\n        proxyEnableScreen:\n          type: string\n          format: uri\n          description: If this is an http-proxy mfa setup, you will need to open a web page where you handle the device connection, through your proxy service. This is usually presented as instructions and a QR code. UE Auth will send the JSON results of the bind API call to this request via query parameters.\n          example: 'https://example.com/complete/setup'\n        proxyEnableScreenButtonText:\n          type: string\n          description: This is the text used on the button that links to the enablement screen\n        proxyEnableInstructions:\n          type: string\n          description: UE Auth will display this text as instructions if desired. New lines can be represented with '--'\n\n    mfaSafeRecovery:\n      oneOf:\n        - type: object\n          properties:\n            selection:\n              type: string\n              enum:\n                - email\n              example: email\n            sent:\n              type: boolean\n        - type: object\n          properties:\n            selection:\n              type: string\n              enum:\n                - device\n              example: device\n            id:\n              type: string\n              format: uuid\n              description: the provider key returned by the MFA provider\n            provider:\n              type: string\n              description: i.e. privakey, http-proxy, etc.\n            response:\n              type: object\n              description: response from the provider\n\n    sendMfaSafeRecovery:\n      type: object\n      additionalProperties: false\n      properties:\n        selection:\n          type: string\n          description: selection determines where the notification will be sent to validate identity\n          enum:\n            - email\n            - device\n        state:\n          type: string\n          description: must match the state encoded in the access token\n\n    mfaRequestBind:\n      type: object\n      additionalProperties: false\n      description: This API is multi purpose and will usually be requested at least twice in an MFA recovery workflow. The first time you would just send state to initiate the process using basic auth or a logged in bearer token. This will respond with an Initial Access Token that can be used to request a device for validation of idenity (assuming it is required to validate identity). You would then call this API again with the results of the identity validation request to rebind the user and see instructions for MFA setup on a device. If on the first call of this API it is determined that the user is not currently MFA enabled, the system will do a protective revoke of all possible devices and immediately bind the user and respond with instructions.\n      properties:\n        state:\n          type: string\n          description: This is used to bind together a series of transactions. When beginning a recovery flow, you must send a unique and url safe generated string. All other requests pertaining to this recovery will need to include this state. When the user is recoverying MFA via the UI wizard, this state is auto generated by the server.\n        code:\n          type: string\n          description: Initial access token used when the mechanism for identity validation is email. Do not include if initiating the flow or if validating user with device rather than email.\n        method:\n          type: string\n          enum:\n            - device\n            - email\n          description: This would be used on a second call where identity has already been validated either by email or device challenge. On the second call you must explicitly state which method you used to validate identity so that this can be verified on the backend before rebinding the user.\n        providerKey:\n          type: string\n          description: This would be used on a second call where the identity has already been validated by a device. When creating the challenge, the provider should return an id for the transaction. This is the providerKey.\n\n    mfaInstructions:\n      oneOf:\n        - type: object\n          description: This response happens in the flow when the user is mfaEnabled but a reset is being requested. It allows the user to validate their identity and then make the request again.\n          additionalProperties: false\n          properties:\n            token:\n              type: string\n              description: an initial access token to be used for safe-recovery identity verification\n            uri:\n              type: string\n              format: uri\n              description: the API endpoint to send an identity validation request\n            requestInstructions:\n              type: string\n              description: brief instructions on what to do\n        - type: object\n          description: This response happens when the user identity is valid or the user was not perviously mfaEnabled.\n          additionalProperties: false\n          properties:\n            instructions:\n              type: array\n              items:\n                type: string\n                description: each line of a set of instructions to be displayed in a numbered list\n            qrCode:\n              type: string\n              description: if included, the uri to be encoded as a QR code on a UI. otherwise false is returned.\n            setupScreen:\n              type: string\n              description: if included, this is a url to an external UI page where setup instructions are provided\n            setupScreenButtonText:\n              type: string\n              description: if included, this is the button text that should be used for the external setupScreen UI page link\n            warnings:\n              type: array\n              items:\n                type: object\n                description: Any errors that prevented the system from revoking previous devices or similar\n\n    callbackRequest:\n      oneOf:\n        - type: object\n          description: for http-proxy callbacks, this would be the expected data.\n          properties:\n            id:\n              type: string\n              description: provider id for the challenge request\n            interactionDetails:\n              type: object\n              properties:\n                uid:\n                  type: string\n                  description: the interaction id provided by UE Auth - can be interchanged for a generated state as well\n                accountId:\n                  type: string\n                  description: the account being challenged\n            action:\n              type: number\n              description: Any number other than zero is approved\n        - type: object\n          description: For the privakey custom plugin, the following is the minimum equivalent data expected\n          properties:\n            guid:\n              type: string\n              description: privakey plugin specific - provider id for the challenge request\n            tranactionId:\n              type: object\n              description: privakey plugin specific. NOTE - this is stringified object containing the following\n              properties:\n                uid:\n                  type: string\n                  description: the interaction id provided by UE Auth - can be interchanged for a generated state as well\n                accountId:\n                  type: string\n                  description: the account being challenged\n            buttonSelected:\n              type: number\n              description: privakey plugin specific - Any number other than zero is approved\n\n    profileRequestUpdate:\n      type: object\n      additionalProperties: false\n      properties:\n        action:\n          type: string\n          example: approved\n          enum:\n            - new\n            - approved\n            - denied\n\n    profileRequest:\n      type: object\n      description: Requests expire after 7 days\n      additionalProperties: false\n      allOf:\n        - $ref: '#/components/schemas/writeProfileRequest'\n      properties:\n        id:\n          type: string\n          format: uuid\n        createdAt:\n          type: string\n          format: date-time\n        createdBy:\n          type: string\n        modifiedAt:\n          type: string\n          format: date-time\n        modifiedBy:\n          type: string\n        authGroup:\n          type: string\n        requestingAccountId:\n          type: string\n          format: uuid\n        requestingEmail:\n          type: string\n          format: email\n        targetAccountId:\n          type: string\n          format: uuid\n          description: the ID of the Account holder you are request profile data from\n        state:\n          type: string\n          default: new\n          example: new\n          enum:\n            - new\n            - approved\n            - denied\n\n    writeProfileRequest:\n      type: object\n      required:\n        - type\n        - requestDetails\n      additionalProperties: false\n      properties:\n        type:\n          type: string\n          default: copy\n          enum:\n            - copy\n            - sync\n            - access\n        requestDetails:\n          type: string\n          description: brief explanation of who is making the request and why\n        dataCallback:\n          type: string\n          format: uri\n          description: if this is a copy request, you can provide a callback url for the data to be sent to on approval\n        accessExpirationTime:\n          type: string\n          default: '30'\n          description: if this is an access request, how long would you like the access to last in days?\n          enum:\n            - '1'\n            - '7'\n            - '30'\n            - '90'\n            - '180'\n            - '360'\n            - 'unlimited'\n        orgId:\n          type: string\n          format: uuid\n          description: if this is a sync request, which organization?\n\n    viewAccessObject:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        createdAt:\n          type: string\n          format: date-time\n        createdBy:\n          type: string\n          format: uuid\n        expiresAt:\n          type: string\n          format: date-time\n        authGroup:\n          type: string\n        viewingAccountId:\n          type: string\n          description: the ID of the person able to view the targetAccountId Secured Profile\n          format: uuid\n        viewingEmail:\n          type: string\n          format: email\n          description: the email address of the person able to view the targetAccountId Secured Profile\n        accessDetails:\n          type: string\n          description: an explanation of why this access was requested\n        targetAccountId:\n          type: string\n          format: uuid\n          description: the account Id of the secured profile being shared",
			"canonicalURL": "/github.com/UnitedEffects/ueauth@b42d713fd70288cee169043e0007b60a768353aa/-/blob/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/UnitedEffects/ueauth/blob/b42d713fd70288cee169043e0007b60a768353aa/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: at 1:244673: duplicate path: \"/api/{group}/profile/request/{id}\""
}