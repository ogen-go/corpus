{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Motirck/NLW-Rocketseat-NodeJS"
		},
		"file": {
			"name": "swagger.json",
			"size": 0,
			"path": "easyCompliment/src/swagger.json",
			"byteSize": 16743,
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n        \"title\": \"EasyCompliment API\",\n        \"description\": \"This API aims to facilitate the registration and visualization of compliments among users based on a great jargon that goes like this: 'Kindness breeds kindness'\",\n        \"termsOfService\": \"http://localhost:3000/v1/terms\",\n        \"contact\": {\n            \"email\": \"ricardo.alves.p001@gmail.com\"\n        },\n        \"version\": \"1.0.0\"\n    },\n    \"servers\": [\n        {\n            \"url\": \"http://localhost:3000/v1\",\n            \"description\": \"API of test (development)\"\n        }\n    ],\n    \"paths\": {\n        \"/tags\": {\n            \"post\": {\n                \"summary\": \"Tag Registration\",\n                \"description\": \"This route will be able to register a new tag\",\n                \"tag\": [\n                    \"Tags\"\n                ],\n                \"security\": [\n                    {\n                        \"bearerAuth\": []\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/Tags\"\n                            },\n                            \"examples\": {\n                                \"tag\": {\n                                    \"value\": {\n                                        \"name\": \"inspirador(a)\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"400\": {\n                        \"description\": \"Name not informed\"\n                    },\n                    \"422\": {\n                        \"description\": \"Tag already exisits\"\n                    },\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type:\": \"object\",\n                                    \"$ref\": \"#/components/schemas/Tags\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"get\": {\n                \"description\": \"List all tags\",\n                \"summary\": \"List all tags in database\",\n                \"tag\": [\n                    \"Tags\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type:\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Tags\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/tags/{tagId}\": {\n            \"get\": {\n                \"description\": \"List specific tag\",\n                \"summary\": \"List specific tag in database\",\n                \"tag\": [\n                    \"Tags\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"tagId\",\n                        \"in\": \"path\",\n                        \"description\": \"Tag id for database query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type:\": \"object\",\n                                    \"$ref\": \"#/components/schemas/Tags\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/compliments\": {\n            \"post\": {\n                \"summary\": \"Compliment Registration\",\n                \"description\": \"This route will be able to register a new compliment\",\n                \"tag\": [\n                    \"Compliments\"\n                ],\n                \"security\": [\n                    {\n                        \"bearerAuth\": []\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/Compliments\"\n                            },\n                            \"examples\": {\n                                \"tag\": {\n                                    \"value\": {\n                                        \"tag_id\": \"a62cd254-21e1-41c9-bb27-fbce5aee6ad2\",\n                                        \"user_receiver\": \"0e54bc79-2351-4a2c-8901-0d3a091c3631\",\n                                        \"message\": \"Paty arrasa mesmooo!\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"400\": {\n                        \"description\": \"Is it easy to compliment ourselves, lets leave someone else do it\"\n                    },\n                    \"404\": {\n                        \"description\": \"User Receiver does not exists\"\n                    },\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type:\": \"object\",\n                                    \"$ref\": \"#/components/schemas/Compliments\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/compliments/receive\": {\n            \"get\": {\n                \"description\": \"List Compliments Receive By User\",\n                \"summary\": \"List Compliments Receive By User\",\n                \"tag\": [\n                    \"Compliments\"\n                ],\n                \"security\": [\n                    {\n                        \"bearerAuth\": []\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type:\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Compliments\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/compliments/sent\": {\n            \"get\": {\n                \"description\": \"List Compliments Submitted By User\",\n                \"summary\": \"List Compliments Submitted By User\",\n                \"tag\": [\n                    \"Compliments\"\n                ],\n                \"security\": [\n                    {\n                        \"bearerAuth\": []\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type:\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Compliments\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/users\": {\n            \"post\": {\n                \"summary\": \"User Registration\",\n                \"description\": \"This route will be able to register a new user\",\n                \"tag\": [\n                    \"Users\"\n                ],\n                \"security\": [\n                    {\n                        \"bearerAuth\": []\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/Users\"\n                            },\n                            \"examples\": {\n                                \"tag\": {\n                                    \"value\": {\n                                        \"name\": \"Joseph Mark\",\n                                        \"password\": \"12345\",\n                                        \"email\": \"joseph@joseph.com\",\n                                        \"admin\": true\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"400\": {\n                        \"description\": \"Email not informed\"\n                    },\n                    \"422\": {\n                        \"description\": \"User already exisits\"\n                    },\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type:\": \"object\",\n                                    \"$ref\": \"#/components/schemas/Users\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/users/all\": {\n            \"get\": {\n                \"description\": \"List all users\",\n                \"summary\": \"List all users in database\",\n                \"tag\": [\n                    \"Users\"\n                ],\n                \"security\": [\n                    {\n                        \"bearerAuth\": []\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type:\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Users\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/users/non-admin\": {\n            \"get\": {\n                \"description\": \"List all non-admin users\",\n                \"summary\": \"List all non-admin users in database\",\n                \"tag\": [\n                    \"Users\"\n                ],\n                \"security\": [\n                    {\n                        \"bearerAuth\": []\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type:\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Users\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/users/admin\": {\n            \"get\": {\n                \"description\": \"List all admin users\",\n                \"summary\": \"List all admin users in database\",\n                \"tag\": [\n                    \"Users\"\n                ],\n                \"security\": [\n                    {\n                        \"bearerAuth\": []\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type:\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Users\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/login\": {\n            \"post\": {\n                \"summary\": \"User Authentication\",\n                \"description\": \"This route will be able to authenticate teh user\",\n                \"tag\": [\n                    \"Login\"\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/Login\"\n                            },\n                            \"examples\": {\n                                \"tag\": {\n                                    \"value\": {\n                                        \"email\": \"marcos@marcos.com.br\",\n                                        \"password\": \"12345\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"400\": {\n                        \"description\": \"Email/Password incorrect\"\n                    },\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type:\": \"object\",\n                                    \"$ref\": \"#/components/schemas/Login\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    },\n    \"components\": {\n        \"schemas\": {\n            \"Tags\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"id\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"Compliments\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"tag_id\": {\n                        \"type\": \"string\"\n                    },\n                    \"user_receiver\": {\n                        \"type\": \"string\"\n                    },\n                    \"message\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"Users\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"password\": {\n                        \"type\": \"string\"\n                    },\n                    \"email\": {\n                        \"type\": \"string\"\n                    },\n                    \"admin\": {\n                        \"type\": \"boolean\"\n                    }\n                }\n            },\n            \"Login\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"email\": {\n                        \"type\": \"string\"\n                    },\n                    \"password\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        },\n        \"securitySchemes\": {\n            \"bearerAuth\": {\n                \"type\": \"http\",\n                \"scheme\": \"bearer\",\n                \"bearerFormat\": \"JWT\"\n            }\n        }\n    }\n}",
			"canonicalURL": "/github.com/Motirck/NLW-Rocketseat-NodeJS@a5b76b46f54594373a1ca6d2759f2a9dd91549f5/-/blob/easyCompliment/src/swagger.json",
			"externalURLs": [
				{
					"url": "https://github.com/Motirck/NLW-Rocketseat-NodeJS/blob/a5b76b46f54594373a1ca6d2759f2a9dd91549f5/easyCompliment/src/swagger.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/tags/{tagId}\": get: parameters: parse parameter \"tagId\": at 101:21: parameter MUST contain either a schema property, or a content property"
}