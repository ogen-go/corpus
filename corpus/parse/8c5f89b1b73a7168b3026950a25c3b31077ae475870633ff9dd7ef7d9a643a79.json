{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/newsapi/openapi.yml",
			"byteSize": 16761,
			"content": "openapi: 3.0.0\ninfo:\n  title: News API - News(articles, headlines and sources) across world.\n  description: |-\n    This is a generated connector for [News API v2.0.0](https://newsapi.org/docs) OpenAPI specification.\n    News API used to fetch news(articles, headlines and sources) from news sources and blogs across the web.\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials. \n\n    Create an [News API Account](https://newsapi.org/register) and obtain tokens following [this guide](https://newsapi.org/docs/get-started).\n  version: 2.0.0\n  x-ballerina-display:\n    label: News API\n    iconPath: \"icon.png\"\nservers:\n- url: https://newsapi.org/v2\npaths:\n  /sources:\n    get:\n      summary: Returns a list of news sources or blogs\n      description: This operation returns subset of news publishers that top headlines\n      operationId: listSources\n      x-ballerina-display:\n        label: \"List News Sources\"\n      parameters: \n        - in: query\n          name: language\n          description: 'Find sources that display news in a specific language. \n                        Possible options: ar de en es fr he it nl no pt ru se ud zh. Default: all languages'\n          schema: \n            type: string\n            enum: [ar,de,en,es,fr,he,it,nl,no,pt,ru,se,ud,zh]\n          x-ballerina-display: \n            label: \"Language\"\n        - in: query\n          name: country\n          description: 'Find sources that display news in a specific country. Default: all countries'\n          schema: \n            type: string\n            enum: [ae, ar, at, au, be, bg, br, ca, ch, cn, co, cu, cz, de, eg, es, fr, gb, gr, hk, hu, id, ie, il, in, it, is, jp, kr, lt, lv, ma, mx, my, ng, nl, no, nz, ph, pk, pl, pt, ro, rs, ru, sa, se, sg, si, sk, th, tr, tw, ua, us, ve, za, zh]\n          x-ballerina-display: \n            label: \"Country\"\n        - in: query\n          name: category\n          description: 'Find sources that display news of this category. Default: all categories'\n          schema: \n            type: string\n            enum: \n              - business\n              - entertainment\n              - general\n              - health\n              - science\n              - sports\n              - technology\n          x-ballerina-display: \n            label: \"Category\"\n      responses:\n        '200':\n          description: \"Record containing list of news sources\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WSNewsSourcesResponse'\n        '400':\n          description: \"Bad Request. Request was unacceptable, often due to a missing or misconfigured parameter\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WSNewsErrorResponse'\n        '401':\n          description: \"Unauthorized. Your API key was missing from request, or wasn't correct\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WSNewsErrorResponse'\n        '429':\n          description: \"Too Many Requests. You made too many requests within a window of time and have been rate limited\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WSNewsErrorResponse'\n        '500':\n          description: \"Server Error. Something went wrong on our side\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WSNewsErrorResponse'\n  /top-headlines:\n    get:\n      summary: Returns a list of top headlines\n      description: List of top headlines (articles)\n      operationId: listTopHeadlines\n      x-ballerina-display:\n        label: \"List Top Headlines\"\n      parameters:\n        - in: query\n          name: q\n          description: 'Keywords or a phrase to search for'\n          schema:\n            type: string\n            nullable: true\n          x-ballerina-display: \n            label: \"Keyword\"\n        - in: query\n          name: sources\n          description: \"Comma-seperated string of source identifiers for news sources or blogs\"\n          schema:\n            type: string\n            nullable: true\n          x-ballerina-display: \n            label: \"Sources\"\n        - in: query\n          name: country\n          description: 'Find sources that display news in a specific country. Default: all countries'\n          schema:\n            type: string\n            enum: [ae, ar, at, au, be, bg, br, ca, ch, cn, co, cu, cz, de, eg, es, fr, gb, gr, hk, hu, id, ie, il, in, it, is, jp, kr, lt, lv, ma, mx, my, ng, nl, no, nz, ph, pk, pl, pt, ro, rs, ru, sa, se, sg, si, sk, th, tr, tw, ua, us, ve, za, zh]\n          x-ballerina-display: \n            label: \"Country\"\n        - in: query\n          name: category\n          description: 'Find sources that display news of this category. Default: all categories'\n          schema: \n            type: string\n            enum: \n              - business\n              - entertainment\n              - general\n              - health\n              - science\n              - sports\n              - technology\n          x-ballerina-display: \n            label: \"Category\"\n        - in: query\n          name: page\n          description: \"Use this to page through results if total results found is greater than page size\"\n          schema:\n            type: integer\n            minimum: 0\n          x-ballerina-display: \n            label: \"Page Number\"\n        - in: query\n          name: pageSize\n          description: \"Number of results to return per page (request). 20 is default, 100 is maximum\"\n          schema:\n            type: integer\n            default: 20\n          x-ballerina-display: \n            label: \"Page Size\"\n      responses:\n        '200':\n          description: \"Record containing list of top headlines\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WSNewsTopHeadlineResponse'\n        '400':\n          description: \"Bad Request. Request was unacceptable, often due to a missing or misconfigured parameter\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WSNewsErrorResponse'\n        '401':\n          description: \"Unauthorized. Your API key was missing from request, or wasn't correct\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WSNewsErrorResponse'\n        '429':\n          description: \"Too Many Requests. You made too many requests within a window of time and have been rate limited\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WSNewsErrorResponse'\n        '500':\n          description: \"Server Error. Something went wrong on our side\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WSNewsErrorResponse'\n  /everything:\n    get:\n      summary: Returns list of articles\n      description: List of articles\n      operationId: listArticles\n      x-ballerina-display:\n        label: \"List Articles\"\n      parameters:\n        - in: query\n          name: q\n          description: \"Keywords or phrases to search for in article title and body. Complete value for query must be URL-encoded\"\n          schema:\n            type: string\n            nullable: true\n          x-ballerina-display: \n            label: \"Keyword\"\n        - in: query\n          name: qInTitle\n          description: \"Keywords or phrases to search for in article title only. Complete value for qInTitle must be URL-encoded\"\n          schema:\n            type: string\n            nullable: true\n          x-ballerina-display: \n            label: \"Title Keyword\"\n        - in: query\n          name: sources\n          description: \"Comma-seperated string of source identifiers (maximum 20) for news sources or blogs\"\n          schema:\n            type: string\n            nullable: true\n          x-ballerina-display: \n            label: \"Sources\"\n        - in: query\n          name: domains\n          description: \"Comma-seperated string of domains (eg bbc.co.uk, techcrunch.com, engadget.com) to restrict search\"\n          schema:\n            type: string\n            nullable: true\n          x-ballerina-display: \n            label: \"Domains To Include\"\n        - in: query\n          name: excludeDomains\n          description: \"Comma-seperated string of domains (eg bbc.co.uk, techcrunch.com, engadget.com) to remove from results\"\n          schema:\n            type: string\n            nullable: true\n          x-ballerina-display: \n            label: \"Domains To Exclude\"\n        - in: query\n          name: from\n          description: \"Date and optional time for oldest article allowed. This should be in ISO 8601 format (e.g. 2021-02-15 or 2021-02-15T19:07:40) Default: oldest according to pricing plan\"\n          schema:\n            type: string\n            format: date\n            nullable: true\n            example: \"2021-01-30\"\n          x-ballerina-display: \n            label: \"From\"\n        - in: query\n          name: to\n          description: \"Date and optional time for newest article allowed. This should be in ISO 8601 format (e.g. 2021-02-15 or 2021-02-15T19:07:40) Default: newest according to pricing plan\"\n          schema:\n            type: string\n            format: date\n            nullable: true\n            example: \"2021-01-30\"\n          x-ballerina-display: \n            label: \"To\"\n        - in: query\n          name: language\n          description: 'Find sources that display news in a specific language. Possible options: ar de en es fr he it nl no pt ru se ud zh .Default: all languages'\n          schema:\n            type: string\n            enum: [ar,de,en,es,fr,he,it,nl,no,pt,ru,se,ud,zh]\n          x-ballerina-display: \n            label: \"Language\"\n        - in: query\n          name: sortBy\n          description: 'Order to sort articles in. Possible options: relevancy, popularity, publishedAt'\n          schema:\n            type: string\n            enum: [relevancy, popularity, publishedAt]\n          x-ballerina-display: \n            label: \"Sort By\"\n        - in: query\n          name: page\n          description: \"Use this to page through results\"\n          required: true\n          schema:\n            type: integer\n            default: 0\n            nullable: false\n          x-ballerina-display: \n            label: \"Page Number\"\n        - in: query\n          description: \"Number of results to return per page. 20 is default, 100 is maximum\"\n          name: pageSize\n          required: true\n          schema:\n            type: integer\n            default: 20\n            nullable: false\n          x-ballerina-display: \n            label: \"Page Size\"\n      responses:\n        '200':\n          description: \"Record containing list of articles\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WSNewsTopHeadlineResponse'\n        '400':\n          description: \"Bad Request. Request was unacceptable, often due to a missing or misconfigured parameter\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WSNewsErrorResponse'\n        '401':\n          description: \"Unauthorized. Your API key was missing from request, or wasn't correct\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WSNewsErrorResponse'\n        '429':\n          description: \"Too Many Requests. You made too many requests within a window of time and have been rate limited\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WSNewsErrorResponse'\n        '500':\n          description: \"Server Error. Something went wrong on our side\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WSNewsErrorResponse'\nsecurity:\n  - api_key: []\ncomponents:\n  securitySchemes:\n    api_key:\n      description: All requests on the News API needs to include an API key. The API key can be provided as part of the query string or as a request header. The name of the API key needs to be `apiKey`\n      name: apiKey\n      type: apiKey\n      in: query\n  schemas:\n    WSNewsErrorResponse:\n      description: 'News API error response'\n      type: object\n      properties:\n        status: \n          type: string\n          description: 'If request was successful or not. Options: ok, error. In case of ok, below two properties will not be present'\n        code:\n          type: string\n          description: 'Short code identifying type of error returned'\n        message:\n          type: string\n          description: 'Fuller description of error, usually including how to fix it'\n    WSNewsTopHeadlineResponse:\n      type: object\n      description: 'Record representing top headlines'\n      properties:\n        status:\n          type: string\n          description: 'If request was successful or not. Options: ok, error. In case of error a code and message property will be populated'\n        totalResults:\n          type: integer\n          description: 'Total number of results available for request. Only a limited number are shown at a time though, so use page parameter in requests to page through them'\n        articles:\n          type: array\n          description: 'Results of request'\n          items:\n            $ref: '#/components/schemas/WSNewsArticle'\n    WSNewsSourcesResponse:\n      type: object\n      description: 'Record representing list sources'\n      properties:\n        status:\n          type: string\n          description: 'If request was successful or not. Options: ok, error. In case of ok, below two properties will not be present'\n        sources:\n          type: array\n          description: 'Results of request'\n          items:\n            $ref: '#/components/schemas/WSNewsSource'\n    WSNewsSource:\n      type: object\n      description: 'Record representing source of a news articles'\n      properties:\n        id:\n          type: string\n          description: 'Identifier of news source. You can use this with our other endpoints'\n          nullable: true\n        name:\n          type: string\n          description: 'Name of news source'\n        description:\n          type: string\n          description: 'Description of news source'\n        url:\n          type: string\n          format: url\n          description: 'URL of homepage'\n        category:\n          type: string\n          description: 'Find sources that display news of this category. Default: all categories'\n          enum: \n            - business\n            - entertainment\n            - general\n            - health\n            - science\n            - sports\n            - technology\n        language:\n          type: string\n          enum: [ar,de,en,es,fr,he,it,nl,no,pt,ru,se,ud,zh]\n          description: 'Find sources that display news in a specific language. Possible options: ar de en es fr he it nl no pt ru se ud zh .Default: all languages'\n        country:\n          type: string\n          description: 'Find sources that display news in a specific country. Default: all countries'\n          enum: [ae, ar, at, au, be, bg, br, ca, ch, cn, co, cu, cz, de, eg, es, fr, gb, gr, hk, hu, id, ie, il, in, it, is, jp, kr, lt, lv, ma, mx, my, ng, nl, no, nz, ph, pk, pl, pt, ro, rs, ru, sa, se, sg, si, sk, th, tr, tw, ua, us, ve, za, zh]\n    WSNewsArticle:\n      type: object\n      description: 'Record representing a news article'\n      properties:\n        source:\n          $ref: '#/components/schemas/WSNewsSource'\n        author:\n          type: string\n          description: 'Author of article'\n          nullable: true\n        title:\n          type: string\n          description: 'Headline or title of article'\n        description:\n          type: string\n          description: 'Description or snippet from article'\n          nullable: true\n        url:\n          type: string\n          format: url\n          description: 'Direct URL to article'\n          nullable: true\n        urlToImage:\n          type: string\n          format: url\n          description: 'URL to a relevant image for article'\n          nullable: true\n        publishedAt:\n          type: string\n          description: 'Date and time that article was published, in UTC (+000)'\n        content:\n          type: string\n          description: 'Unformatted content of article, where available. This is truncated to 200 chars'\n          nullable: true\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"WSNewsArticle\": parse schema: property \"source\": parse schema: resolve \"#/components/schemas/WSNewsSource\": parse schema: property \"country\": parse enum values: parse value \"false\": expected type \"string\", got \"bool\""
}