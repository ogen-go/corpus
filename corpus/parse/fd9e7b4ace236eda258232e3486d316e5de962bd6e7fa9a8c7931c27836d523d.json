{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/openHPI/poseidon"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "api/swagger.yaml",
			"byteSize": 17573,
			"content": "openapi: 3.0.0\ninfo:\n  title: Poseidon API\n  description: |\n    This API is used by CodeOcean to run code in runners.\n  version: '0.2.2'\n\ncomponents:\n  schemas:\n    ExecutionEnvironment:\n      type: object\n      properties:\n        id:\n          description: The id of the execution environment\n          type: integer\n          example: 6\n        image:\n          description: The name of the OCI image used for this execution environment\n          type: string\n          example: openhpi/co_execenv_python:latest\n        prewarmingPoolSize:\n          description: Number of runners with this configuration to prewarm\n          type: integer\n          example: 50\n        cpuLimit:\n          description: CPU limit for one runner in MHz\n          type: number\n          example: 100\n        memoryLimit:\n          description: Memory limit for one runner in MB. Exceeding the limit may result in termination of the runner.\n          type: integer\n          example: 256\n        networkAccess:\n          description: Whether the runner is allowed to access the network or not\n          type: boolean\n          example: true\n        exposedPorts:\n          description: A list of ports inside the runner to expose to the outside\n          type: array\n          items:\n            type: integer\n            minimum: 1\n            maximum: 65535\n          example: [80, 443]\n      required:\n        - id\n        - image\n        - prewarmingPoolSize\n        - cpuLimit\n        - memoryLimit\n        - networkAccess\n        - exposedPorts\n      additionalProperties: false\n\n  responses:\n    BadRequest:\n      description: Request is invalid. E.g. request body does not follow the json schema required by the given route or url parameters are invalid.\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              message:\n                description: Explanation on why the request is invalid\n                type: string\n    Unauthorized:\n      description: Client could not be authenticated\n    NotFound:\n      description: The entity with the given identifier does not exist.\n    InternalServerError:\n      description: Request could not be handled\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              message:\n                description: Explanation on why the request could not be handled\n                type: string\n                example: Nomad server unreachable\n              errorCode:\n                description: Machine readable error description\n                type: string\n                enum:\n                  - NOMAD_UNREACHABLE\n                  - NOMAD_OVERLOAD\n                  - NOMAD_INTERNAL_SERVER_ERROR\n                  - UNKNOWN\n                example: NOMAD_UNREACHABLE\n\ntags:\n  - name: runner\n    description: A unit of execution\n  - name: execution environment\n    description: A template for runners\n  - name: miscellaneous\n\npaths:\n  /health:\n    get:\n      summary: Check if the API is available\n      description: If this route does not return, the API is not available.\n      tags:\n        - miscellaneous\n      responses:\n        \"204\":\n          description: Everything okay\n\n  /version:\n    get:\n      summary: Retrieve the version of Poseidon\n      description: Return hash-like release information.\n      tags:\n        - miscellaneous\n      responses:\n        \"200\":\n          description: The release information could be returned.\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /statistics/execution-environments:\n    get:\n      summary: Retrieve the statistics about the execution environments of Poseidon\n      description: Return Return the current availability and usage of runners.\n      tags:\n        - miscellaneous\n      responses:\n        \"200\":\n          description: Success. Returns all execution environments\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  type: object\n                  properties:\n                    id:\n                      description: The id of the execution environment.\n                      type: integer\n                    prewarmingPoolSize:\n                      description: Number of runners with this configuration to prewarm.\n                      type: integer\n                      example: 50\n                    idleRunners:\n                      description: Number of runners currently prewarmed.\n                      type: number\n                      example: 45\n                    usedRunners:\n                      description: Number of runners currently in use.\n                      type: number\n                      example: 20\n                example:\n                  21:\n                    id: 21\n                    prewarmingPoolSize: 50\n                    idleRunners: 45\n                    usedRunners: 20\n                  42:\n                    id: 42\n                    prewarmingPoolSize: 50\n                    idleRunners: 45\n                    usedRunners: 20\n        \"500\":\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /runners:\n    post:\n      summary: Provide a runner\n      description: Provide a runner with the requested execution environment to the client (CodeOcean).\n      tags:\n        - runner\n      requestBody:\n        description: Runner attributes\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                inactivityTimeout:\n                  description: Specify how long the runner should be available when there is no activity (execution or file copy). Activity resets this timer. 0 means no timeout\n                  type: integer\n                  default: 0\n                  example: 60\n                executionEnvironmentId:\n                  description: Specifies the execution environment of the runner\n                  type: integer\n                  example: 6\n              required:\n                - executionEnvironmentId\n              additionalProperties: false\n      responses:\n        \"200\":\n          description: A runner was successfully reserved\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  runnerId:\n                    description: The UUID of the provided runner\n                    type: string\n                    example: 123e4567-e89b-12d3-a456-426614174000\n                  mappedPorts:\n                    description: Array containing the addresses of the mapped ports specified in the execution environment.\n                    type: array\n                    items:\n                      description: The exposedPort inside the container is reachable on the returned hostAddress.\n                      type: object\n                      properties:\n                        exposedPort:\n                          description: The port inside the container.\n                          type: integer\n                          minimum: 0\n                          maximum: 65535\n                          example: 80\n                        hostAddress:\n                          description: The address which can be contacted to reach the mapped port.\n                          type: string\n                          example: 10.224.6.18:23832\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /runners/{runnerId}:\n    delete:\n      summary: Destroy the runner\n      description: The runner is no longer in use and should be destroyed.\n      tags:\n        - runner\n      parameters:\n        - name: runnerId\n          in: path\n          schema:\n            description: The UUID of the runner that should be destroyed\n            type: string\n            example: 123e4567-e89b-12d3-a456-426614174000\n          required: true\n      responses:\n        \"204\":\n          description: Success\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /runners/{runnerId}/files:\n    patch:\n      summary: Manipulate runner file system\n      description: Delete the files with the given paths from the file system of the specified runner. Afterwards, copy the enclosed files to the runner. Existing files get overwritten and results of previous file copy operations on the same runner are present when executing multiple requests.\n      tags:\n        - runner\n      parameters:\n        - name: runnerId\n          in: path\n          schema:\n            description: Runner on which the files should be placed\n            type: string\n            example: 123e4567-e89b-12d3-a456-426614174000\n          required: true\n      requestBody:\n        description: Files to copy or delete\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                delete:\n                  description: Array of filepaths that should be deleted. Each of the given files or directories should be deleted recursively.\n                  type: array\n                  items:\n                    description: Location of the file or directory that should be deleted. Can be absolute (starting with /) or relative to the workspace directory.\n                    type: string\n                    example: /workspace\n                copy:\n                  description: Array of files that should be placed in the runner.\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      path:\n                        description: Location where the file should be placed. Can be absolute (starting with /) or relative to the workspace directory. Missing parent directories are created. If this ends with a /, the path is interpreted as a directory and content is ignored\n                        type: string\n                        example: /etc/passwd\n                      content:\n                        description: The content of the file. MUST be base64 encoded. If this is not given, the file is created with no content.\n                        type: string\n                        example: cm9vdDp4OjA6MDo6L3Jvb3Q6L2Jpbi9iYXNo # root:x:0:0::/root:/bin/bash\n                    required:\n                      - path\n                    additionalProperties: false\n              additionalProperties: false\n      responses:\n        \"204\":\n          description: All files were saved\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /runners/{runnerId}/execute:\n    post:\n      summary: Execute a command\n      description: Execute a command in the runner. Whether this starts the actual execution or only prepares a Websocket URL to start it depends on the implementation.\n      tags:\n        - runner\n      parameters:\n        - name: runnerId\n          description: Runner on which the command should be executed\n          in: path\n          schema:\n            type: string\n            example: 123e4567-e89b-12d3-a456-426614174000\n          required: true\n      requestBody:\n        description: Description what and how to execute\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                command:\n                  description: The command to be executed. The working directory for this execution is the working directory of the image of the execution environment\n                  type: string\n                  example: python exercise.py\n                environment:\n                  description: Environment variables for this execution. The keys of this object are the variable names and the value of each key is the value of the variable with the same name. The environment variables of the system remain accessible.\n                  type: object\n                  additionalProperties:\n                    type: string\n                    pattern: \"[a-zA-Z_][a-zA-Z0-9_]+\"\n                  default: {}\n                  example:\n                    PATH: /bin\n                timeLimit:\n                  description: Specifies the time in seconds until this execution should be killed. 0 means do not kill\n                  type: integer\n                  default: 0\n                  example: 5\n              required:\n                - command\n              additionalProperties: false\n      responses:\n        \"200\":\n          description: Success. Returns a Websocket URL to connect to\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  websocketUrl:\n                    description: A Websocket endpoint to connect to communicate with the process running in the runner\n                    type: string\n                    example: \"ws://ws.example.com/path/to/websocket\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"500\":\n          $ref: \"#/components/responses/InternalServerError\"\n\n  /execution-environments:\n    get:\n      summary: List execution environments\n      description: List all execution environments the API is aware of.\n      tags:\n        - execution environment\n      parameters:\n        - name: fetch\n          in: query\n          description: Specify whether environments should be fetched again from the executor before returning. Otherwise, the data currently in cache is returned.\n          schema:\n            type: boolean\n            default: false\n          required: false\n      responses:\n        \"200\":\n          description: Success. Returns all execution environments\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  executionEnvironments:\n                    description: A list of all execution environments\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/ExecutionEnvironment\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n\n  /execution-environments/{executionEnvironmentId}:\n    parameters:\n      - name: executionEnvironmentId\n        in: path\n        description: Id of the execution environment\n        required: true\n        schema:\n          type: integer\n    get:\n      summary: Show an execution environment\n      description: Get a representation of the execution environment specified by the id.\n      tags:\n        - execution environment\n      parameters:\n        - name: fetch\n          in: query\n          description: Specify whether the environment should be fetched again from the executor before returning. Otherwise, the data currently in cache is returned.\n          schema:\n            type: boolean\n            default: false\n          required: false\n      responses:\n        \"200\":\n          description: Success. Returns the execution environment\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExecutionEnvironment\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n    put:\n      summary: Create or replace the execution environment\n      description: This is used for keeping execution environments in sync between the client and the provider of this API. By sending a request with an id, the execution environment is created if it does not exist and updated otherwise.\n      tags:\n        - execution environment\n      requestBody:\n        description: The new execution environment\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ExecutionEnvironment\"\n      responses:\n        \"201\":\n          description: The executions environment did not exist and was created\n        \"204\":\n          description: The execution environment was replaced\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n    delete:\n      summary: Delete the execution environment\n      description: Remove the specified execution environment from the API.\n      tags:\n        - execution environment\n      responses:\n        \"204\":\n          description: The execution environment was deleted.\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n",
			"canonicalURL": "/github.com/openHPI/poseidon@a4d13fb8cb51f7c4c01abcd2fea28d52591d1136/-/blob/api/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/openHPI/poseidon/blob/a4d13fb8cb51f7c4c01abcd2fea28d52591d1136/api/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/runners/{runnerId}/execute\": at 1:7734: post: at 1:7742: requestBody: at 1:8125: content: application/json: at 1:8156: schema: at 1:8166: parse schema: property \"environment\": at 1:8435: parse default: unexpected type: \"object\""
}