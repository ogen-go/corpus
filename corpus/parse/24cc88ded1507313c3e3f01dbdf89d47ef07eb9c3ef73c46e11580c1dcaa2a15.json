{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ReporterOne/reporter"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "reference/one_report/openapi.yaml",
			"byteSize": 4161,
			"content": "openapi: 3.0.0\ninfo:\n  title: one_report v1\n  version: '1.0'\n  description: API For TDoh1 application.\n  contact:\n    name: TeamTash\n  license:\n    name: MIT\nservers:\n  - url: 'http://localhost:3000'\npaths:\n  /api/v1/dates_status:\n    get:\n      summary: Get date status.\n      tags:\n        - Personal\n        - Operator\n        - Admin\n        - Commander\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: ../common/models/date.v1.yaml\n      description: Get date status.\n      parameters:\n        - schema:\n            type: string\n          in: query\n          name: start\n          required: true\n          description: 'example: 03/01/1997'\n        - schema:\n            type: string\n          in: query\n          name: end\n          description: 'example: 03/01/2117'\n        - schema:\n            type: integer\n          in: query\n          name: user_id\n          description: id of user\n      security:\n        - Token: []\n      operationId: getDatesStatus\n    parameters: []\n    post:\n      summary: Post status for date.\n      responses:\n        '201':\n          description: Created\n      operationId: postDatesStatus\n      description: Post status for date.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ../common/models/date.v1.yaml\n            examples: {}\n        description: ''\n      security:\n        - Token: []\n      tags:\n        - Personal\n        - commander\n        - Operator\n        - Admin\n    delete:\n      summary: \"Delete date's status.\"\n      responses:\n        '200':\n          description: OK\n      description: \"Delete date's status.\"\n      operationId: deleteDatesStatus\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ../common/models/date.v1.yaml\n        description: ''\n      security:\n        - Token: []\n      tags:\n        - Personal\n        - Admin\n        - commander\n  /api/v1/users:\n    get:\n      summary: Get Users.\n      tags:\n        - Personal\n        - commander\n        - Operator\n        - Admin\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: ../common/models/user.v1.yaml\n        '400':\n          description: Bad Request\n        '401':\n          description: Unauthorized\n      security:\n        - Token: []\n      parameters:\n        - schema:\n            type: string\n          in: query\n          name: mador\n          description: Users of specific mador\n        - schema:\n            type: integer\n          in: query\n          name: user_id\n          description: id_of specific_user\n      description: Get Users.\n      operationId: getUsers\n    parameters: []\n    post:\n      summary: Creat new User.\n      responses:\n        '201':\n          description: Created\n      description: Creat new User.\n      operationId: postUsers\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ../common/models/userauthkeys.v1.yaml\n      tags:\n        - Personal\n    put:\n      summary: Creat new User.\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ../common/models/user.v1.yaml\n      operationId: putUsers\n      description: Creat new User.\n      tags:\n        - Personal\n        - commander\n        - Operator\n        - Admin\n    delete:\n      summary: Delete specific User.\n      responses:\n        '200':\n          description: OK\n      description: Delete specific User.\n      operationId: deleteUsers\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ../common/models/user.v1.yaml\n      tags:\n        - Personal\n        - Admin\ncomponents:\n  schemas: {}\n  securitySchemes:\n    Token:\n      name: Token\n      type: apiKey\n      in: header\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /api/v1/users: get: operation \"getUsers\": responses: 200: content: \"application/json\": schema: parse schema: item: parse schema: resolve \"../common/models/user.v1.yaml\": find schema: external base \"../common/models/user.v1.yaml\" is not supported"
}