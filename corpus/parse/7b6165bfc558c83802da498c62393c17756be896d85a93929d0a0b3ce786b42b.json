{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/anshumanpattnaik/python-flask-microservices"
		},
		"file": {
			"name": "swagger.json",
			"size": 0,
			"path": "app/swagger/swagger.json",
			"byteSize": 22519,
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n        \"version\": \"0.0.1\",\n        \"title\": \"Python Flask Microservices\",\n        \"description\": \"This is the sample demonstration of python flask microservices which follows Netflix api architecture.\",\n        \"contact\": {\n            \"name\": \"Anshuman Pattnaik\",\n            \"url\": \"https://hackbotone.com\"\n        }\n    },\n    \"servers\": [\n        {\n            \"url\": \"http://127.0.0.1:5000/api/v1\"\n        }\n    ],\n    \"tags\": [\n        {\n            \"name\": \"User\",\n            \"description\": \"Create your profile\"\n        },\n        {\n            \"name\": \"Movies\",\n            \"description\": \"Access to your movies\"\n        },\n        {\n            \"name\": \"Trending Now\",\n            \"description\": \"Popular Movies based on trending\"\n        }\n    ],\n    \"paths\": {\n        \"/sign_up\": {\n            \"post\": {\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"Create a user account and get access to the millions of movies database\",\n                \"requestBody\": {\n                    \"description\": \"\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/definitions/User\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"User Created Successfully\"\n                    },\n                    \"400\": {\n                        \"description\": \"Invalid Request\"\n                    }\n                }\n            }\n        },\n        \"/sign_in\": {\n            \"post\": {\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"Authenticate yourself by using your username and password\",\n                \"requestBody\": {\n                    \"description\": \"\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/definitions/UserLogin\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"schema\": {\n                            \"type\": \"object\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/UserLoggedIn\"\n                            }\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Incorrect Username or Password\"\n                    }\n                }\n            }\n        },\n        \"/profile/{username}\": {\n            \"get\": {\n                \"tags\": [\n                    \"User\"\n                ],\n                \"security\": [\n                    {\n                        \"bearerAuth\": []\n                    }\n                ],\n                \"summary\": \"Find your profile by username\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"username\",\n                        \"in\": \"path\",\n                        \"description\": \"Username of the current logged in user\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"User Found\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized Access\"\n                    }\n                }\n            }\n        },\n        \"/update_profile/{username}\": {\n            \"put\": {\n                \"tags\": [\n                    \"User\"\n                ],\n                \"security\": [\n                    {\n                        \"bearerAuth\": []\n                    }\n                ],\n                \"summary\": \"Update your profile by your username\",\n                \"requestBody\": {\n                    \"description\": \"\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/definitions/Profile\"\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"username\",\n                        \"in\": \"path\",\n                        \"description\": \"Username of the current logged in user\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"User profile updated successfully\"\n                    },\n                    \"400\": {\n                        \"description\": \"Invalid Request\"\n                    }\n                }\n            }\n        },\n        \"/change_password/{username}\": {\n            \"put\": {\n                \"tags\": [\n                    \"User\"\n                ],\n                \"security\": [\n                    {\n                        \"bearerAuth\": []\n                    }\n                ],\n                \"summary\": \"Change your password by your username\",\n                \"requestBody\": {\n                    \"description\": \"\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/definitions/ChangePassword\"\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"username\",\n                        \"in\": \"path\",\n                        \"description\": \"Username of the current logged in user\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Password changed successfully\"\n                    },\n                    \"400\": {\n                        \"description\": \"Missing Fields\"\n                    }\n                }\n            }\n        },\n        \"/delete_account/{username}\": {\n            \"delete\": {\n                \"tags\": [\n                    \"User\"\n                ],\n                \"security\": [\n                    {\n                        \"bearerAuth\": []\n                    }\n                ],\n                \"summary\": \"Delete your account by using your username\",\n                \"parameters\": [\n                    {\n                        \"name\": \"username\",\n                        \"in\": \"path\",\n                        \"description\": \"Username of the current logged in user\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Account Deleted Successfully\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized Access\"\n                    }\n                }\n            }\n        },\n        \"/add_movie/{username}\": {\n            \"post\": {\n                \"tags\": [\n                    \"Movies\"\n                ],\n                \"security\": [\n                    {\n                        \"bearerAuth\": []\n                    }\n                ],\n                \"summary\": \"Add new movie to the database\",\n                \"requestBody\": {\n                    \"description\": \"\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/definitions/Movie\"\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"username\",\n                        \"in\": \"path\",\n                        \"description\": \"Username of the current logged in user\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Movies Added Successfully\"\n                    },\n                    \"400\": {\n                        \"description\": \"Invalid Request\"\n                    }\n                }\n            }\n        },\n        \"/fetch_movies/{username}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Movies\"\n                ],\n                \"security\": [\n                    {\n                        \"bearerAuth\": []\n                    }\n                ],\n                \"summary\": \"Fetch all movies\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"username\",\n                        \"in\": \"path\",\n                        \"description\": \"Username of the current logged in user\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/Movie\"\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Movies not found\"\n                    }\n                }\n            }\n        },\n        \"/search_movie/{title}/{username}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Movies\"\n                ],\n                \"security\": [\n                    {\n                        \"bearerAuth\": []\n                    }\n                ],\n                \"summary\": \"Search movie\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"title\",\n                        \"in\": \"path\",\n                        \"description\": \"title of movie to return\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"name\": \"username\",\n                        \"in\": \"path\",\n                        \"description\": \"Username of the current logged in user\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/Movie\"\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Movie not found\"\n                    }\n                }\n            }\n        },\n        \"/delete_movie/{title}/{username}\": {\n            \"delete\": {\n                \"tags\": [\n                    \"Movies\"\n                ],\n                \"security\": [\n                    {\n                        \"bearerAuth\": []\n                    }\n                ],\n                \"summary\": \"Delete movie\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"title\",\n                        \"in\": \"path\",\n                        \"description\": \"title of movie to return\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"name\": \"username\",\n                        \"in\": \"path\",\n                        \"description\": \"Username of the current logged in user\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Movie Deleted Successfully\"\n                    },\n                    \"404\": {\n                        \"description\": \"Movie not found\"\n                    }\n                }\n            }\n        },\n        \"/favourite_movies/{username}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Movies\"\n                ],\n                \"security\": [\n                    {\n                        \"bearerAuth\": []\n                    }\n                ],\n                \"summary\": \"Favourite movies\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"username\",\n                        \"in\": \"path\",\n                        \"description\": \"Username of the current logged in user\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/Movie\"\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Movies not found\"\n                    }\n                }\n            }\n        },\n        \"/add_to_favourite/{title}/{username}\": {\n            \"put\": {\n                \"tags\": [\n                    \"Movies\"\n                ],\n                \"security\": [\n                    {\n                        \"bearerAuth\": []\n                    }\n                ],\n                \"summary\": \"Add movie to your favourite\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"requestBody\": {\n                    \"description\": \"\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/definitions/Favourite\"\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"title\",\n                        \"in\": \"path\",\n                        \"description\": \"title of movie to return\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"name\": \"username\",\n                        \"in\": \"path\",\n                        \"description\": \"Username of the current logged in user\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Movie has been added to your favourite\"\n                    },\n                    \"404\": {\n                        \"description\": \"Movie not found\"\n                    }\n                }\n            }\n        },\n        \"/trending_now/{username}\": {\n            \"get\": {\n                \"tags\": [\n                    \"Trending Now\"\n                ],\n                \"security\": [\n                    {\n                        \"bearerAuth\": []\n                    }\n                ],\n                \"summary\": \"Trending Now Movies\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"username\",\n                        \"in\": \"path\",\n                        \"description\": \"Username of the current logged in user\",\n                        \"required\": true,\n                        \"type\": \"string\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"$ref\": \"#/definitions/Movie\"\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Movies not found\"\n                    }\n                }\n            }\n        }\n    },\n    \"components\": {\n        \"securitySchemes\": {\n            \"bearerAuth\": {\n                \"type\": \"http\",\n                \"scheme\": \"bearer\",\n                \"bearerFormat\": \"JWT\"\n            }\n        }\n    },\n    \"definitions\": {\n        \"User\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"username\": {\n                    \"type\": \"string\"\n                },\n                \"password\": {\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"email\": {\n                    \"type\": \"string\"\n                },\n                \"dob\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"UserLogin\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"username\": {\n                    \"type\": \"string\"\n                },\n                \"password\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"UserLoggedIn\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"access_token\": {\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"email\": {\n                    \"type\": \"string\"\n                },\n                \"dob\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"ChangePassword\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"old_password\": {\n                    \"type\": \"string\"\n                },\n                \"new_password\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"Profile\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"email\": {\n                    \"type\": \"string\"\n                },\n                \"dob\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"Favourite\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"is_favourite\": {\n                    \"type\": \"boolean\",\n                    \"default\": false\n                }\n            }\n        },\n        \"Thumbnails\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"type\": {\n                    \"type\": \"string\"\n                },\n                \"client\": {\n                    \"type\": \"string\"\n                },\n                \"size\": {\n                    \"type\": \"string\"\n                },\n                \"path\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"Media\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"type\": {\n                    \"type\": \"string\"\n                },\n                \"client\": {\n                    \"type\": \"string\"\n                },\n                \"path\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"Subtitles\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"language\": {\n                    \"type\": \"string\"\n                },\n                \"path\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"Movie\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"title\": {\n                    \"type\": \"string\"\n                },\n                \"movie_type\": {\n                    \"type\": \"string\"\n                },\n                \"ratings\": {\n                    \"type\": \"string\"\n                },\n                \"duration\": {\n                    \"type\": \"integer\"\n                },\n                \"age_restriction\": {\n                    \"type\": \"string\"\n                },\n                \"timestamp\": {\n                    \"type\": \"integer\"\n                },\n                \"description\": {\n                    \"type\": \"string\"\n                },\n                \"thumbnails\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/Thumbnails\"\n                    }\n                },\n                \"media\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/Media\"\n                    }\n                },\n                \"subtitles\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/Subtitles\"\n                    }\n                },\n                \"cast\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"genres\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"category\": {\n                    \"type\": \"string\"\n                },\n                \"production\": {\n                    \"type\": \"string\"\n                },\n                \"country\": {\n                    \"type\": \"string\"\n                },\n                \"is_favourite\": {\n                    \"type\": \"boolean\",\n                    \"default\": false\n                }\n            }\n        }\n    }\n}"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /search_movie/{title}/{username}: get: parameters: parse parameter \"title\": parameter MUST contain either a schema property, or a content property"
}