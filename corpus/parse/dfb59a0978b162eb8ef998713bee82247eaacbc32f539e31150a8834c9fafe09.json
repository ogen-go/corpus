{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/HibatApp/hibat-backend"
		},
		"file": {
			"name": "apis.yaml",
			"size": 0,
			"path": "apis.yaml",
			"byteSize": 12784,
			"content": "openapi: 3.0.1\ninfo:\n  title: Hibat App API\n  description: This API is designed for both Web and Mobile app.\n  version: 1.0.0\n\nservers:\n  - url: https://staging.hibatapp.com/api/v1/\n  - url: https://localhost/hibat-app/api/v1/\n\ntags:\n  - name: home\n\npaths:\n  /home:\n    get:\n      tags:\n        - home\n      summary: Get home page data\n      parameters:\n        - name: lang\n          in: query\n          schema:\n            type: string\n            maxLength: 2\n            example: en\n            default: en\n            pattern: ^[a-z]{2}$\n      responses:\n        200:\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                additionalProperties: false\n                type: object\n                properties:\n                  sliders:\n                    maxItems: 5\n                    type: array\n                    items:\n                      additionalProperties: false\n                      anyOf:\n                        - $ref: \"#/components/schemas/slider\"\n  /user:\n    put:\n      security:\n        - bearerAuth: []\n      tags:\n        - user\n      summary: Update user info\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required:\n                - fullName\n              properties:\n                fullName:\n                  type: string\n                  maxLength: 50\n                  pattern: ^.{3,50}$\n              example:\n                fullName: \"John Doe\"\n              additionalProperties: false\n      responses:\n        200:\n          description: Success\n        400:\n          description: Missing data\n        401:\n          description: This request need's a valid user token\n    get:\n      security:\n        - bearerAuth: []\n      tags:\n        - user\n      summary: Get user info\n      responses:\n        200:\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: object\n        401:\n          description: Wrong login info\n    post:\n      tags:\n        - user\n      summary: User sign up\n      operationId: userSingUp\n      requestBody:\n        required: true\n        content:\n          \"application/x-www-form-urlencoded\":\n            schema:\n              additionalProperties: false\n              type: object\n              properties:\n                fullName:\n                  type: string\n                  maxLength: 50\n                  pattern: ^.{1,50}$\n                  example: John Doe\n                countryId:\n                  type: integer\n                  format: int32\n                  minimum: 1\n                  maximum: 200\n                  example: 10\n                mobile:\n                  type: string\n                  maxLength: 14\n                  pattern: ^[0-9]{8,14}$\n                  example: \"00111222000000\"\n                password:\n                  type: string\n                  minLength: 8\n                  maxLength: 50\n                  pattern: ^.{8,50}$\n                  example: \"Ab@123*/\"\n              required:\n                - fullName\n                - countryId\n                - mobile\n                - password\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                additionalProperties: false\n                type: object\n                properties:\n                  otpToken:\n                    type: string\n                    pattern: ^[0-9a-z]{32}$\n                    maxLength: 32\n                    example: \"a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1a1\"\n        400:\n          description: missing data\n        422:\n          description: mobile number already exists\n        452:\n          description: this app is not available in this country yet\n    patch:\n      tags:\n        - user\n      description: Signin a user\n      summary: User sign in\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              additionalProperties: false\n              required:\n                - countryId\n                - mobile\n                - password\n              properties:\n                countryId:\n                  type: integer\n                  minimum: 1\n                  maximum: 200\n                  format: int32\n                mobile:\n                  type: string\n                  minLength: 8\n                  maxLength: 32\n                  pattern: ^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$\n                password:\n                  type: string\n                  minLength: 8\n                  maxLength: 250\n                  pattern: ^.{8,50}$\n              example:\n                countryId: 1\n                mobile: \"096123456789\"\n                password: \"12345678test\"\n\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: false\n                properties:\n                  token:\n                    maxLength: 32\n                    type: string\n                    pattern: ^[0-9a-z]{32}$\n        400:\n          description: Missing data\n\n        401:\n          description: Wrong login info\n\n        422:\n          description: This account has been disabled\n          \n  /Products:\n    get:\n      tags:\n      - Products \n      summary: Returns Products\n      description: Returns a map of Products\n      operationId: getProducts\n      parameters:\n        - name: categoryId\n          in: query\n          description: pass an optional category Id for looking up Products\n          required: false\n          schema:\n            type: integer\n            minimum: 0\n            format: int32\n            example: 3\n        - name: q\n          in: query\n          required: false\n          description: 'pass an optional search string for looking up Product'\n          schema:\n            type: string\n            example: bicycle\n        - name: page\n          in: query\n          description: the amount of Products returned in page\n          required: false\n          schema:\n            type: integer\n            maximum: 50\n            minimum: 1\n            default: 10\n            format: int32\n            example: 20\n        - name: pageLimit\n          in: query\n          description: the amount of pages returned\n          required: false\n          schema:\n            type: integer\n            maximum: 100\n            minimum: 1\n            default: 1\n            format: int32\n            example: 3\n        - name: sortby\n          in: query\n          required: false\n          schema:\n            type: string\n            enum:\n              - alpha\n              - recent\n          description: \u003e\n            sortby order:\n              * alpha - alphabetically, from A to Z.\n              * recent - Descending createdAt, from latest to oldest.          \n          example: recent\n\n      responses:\n        200:\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                maxItems: 100\n                items:\n                  $ref: \"#/components/schemas/Product\"\n\n  /wishlist/{productId}:\n    delete:\n      security:\n        - bearerAuth: []\n      tags:\n        - wishlist\n      summary: Deletes a from Wishlist\n      description: \"Delete from Wishlist\"\n      parameters:\n        - name: \"productId\"\n          in: path\n          required: true\n          schema:\n            type: integer\n            maximum: 999999\n            minimum: 0\n            format: int32\n      responses:\n        \"200\":\n          description: \"success\"\n        \"401\":\n          description: \"This request need's a valid user token\"\n        \"404\":\n          description: \"No such item\"\n\n  /request/{requestId}:\n    delete:\n      security:\n        - bearerAuth: []\n      tags:\n        - request\n      summary: Cancel request for a product\n      parameters:\n        - name: requestId\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n            minimum: 0\n            maximum: 999999\n      responses:\n        200:\n          description: Success\n        401:\n          description: This request need a valid user token\n        404:\n          description: No such item\n\n  /requests/{requestId}:\n    get:\n      security:\n        - bearerAuth: []\n      tags:\n        - request\n      summary: Find request by ID\n      description: Returns a single request\n      operationId: getRequestById\n      parameters:\n        - name: requestId\n          in: path\n          description: ID of request to return\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        200:\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Request\"\n        401:\n          description: This request need a valid user token\n        404:\n          description: No such item\n\ncomponents:\n  responses:\n    notFound:\n      description: Item not found\n      content:\n        application/json:\n          schema:\n            additionalProperties: false\n            type: object\n            properties:\n              code:\n                type: integer\n                example: 404\n                format: int32\n                maximum: 404\n                minimum: 404\n              message:\n                type: string\n                example: Item not found\n                maxLength: 250\n                pattern: ^[0-9A-Za-z\\. ]+$\n\n  schemas:\n    slider:\n      additionalProperties: false\n      type: object\n      properties:\n        picUrl:\n          type: string\n          example: \"https://www.domain.com/path/photo.png\"\n          pattern: ^[0-9a-z:/\\.]+$\n          maxLength: 250\n    User:\n      additionalProperties: false\n      type: object\n      properties:\n        fullName:\n          type: string\n          maxLength: 50\n          pattern: ^.{3,50}$\n          example: John Doe\n        email:\n          type: string\n          format: email\n          maxLength: 100\n          example: example@example.com\n        countryId:\n          type: integer\n          format: int32\n          minimum: 1\n          maximum: 200\n          example: 10\n        mobile:\n          type: string\n          minLength: 8\n          maxLength: 32\n          pattern: ^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$\n        token:\n          type: string\n          pattern: ^[0-9a-z]{32}$\n          maxLength: 32\n    Product:\n      additionalProperties: false\n      type: object\n      properties:\n        title:\n          type: string\n          example: \"This is product title.\"\n          pattern: /^.{0,200}$/\n          maxLength: 250\n        details:\n          type: string\n          example: \"These is product description text.\"\n          pattern: /^.{0,200}$/\n          maxLength: 300\n        mainPhoto:\n          type: string\n          example: \"https://www.domain.com/path/photo.png\"\n          pattern: ^[0-9a-z:/\\.]+$\n          maxLength: 250\n        categoryId:\n          type: integer\n          format: int32\n          minimum: 0\n          maximum: 99999\n          example: 75123\n        ownerId:\n          type: integer\n          format: int32\n          minimum: 0\n          maximum: 99999\n          example: 90910\n        areaId:\n          type: integer\n          format: int32\n          minimum: 0\n          maximum: 99999\n          example: 99010\n        tags:\n          type: array\n          maxItems: 99999\n          items:\n            type: string\n            example: \"electronics\"\n            pattern: /^.{0,200}$/\n            maxLength: 8\n        views:\n          type: integer\n          format: int32\n          example: 102\n          minimum: 0\n          maximum: 99999\n        status:\n          type: integer\n          format: int32\n          example: 2\n          minimum: 0\n          maximum: 99999\n        createdAt:\n          type: string\n          example: \"2022-03-13T13:24:26+00:00\"\n          pattern: /[0-9]{4}/(0[1-9]|1[0-2])/(0[1-9]|[1-2][0-9]|3[0-1]):(2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]/\n          maxLength: 25\n        updatedAt:\n          type: string\n          example: \"2022-03-13T13:24:26+00:00\"\n          pattern: /[0-9]{4}/(0[1-9]|1[0-2])/(0[1-9]|[1-2][0-9]|3[0-1]):(2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]/\n          maxLength: 25\n\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      "
		}
	},
	"Error": "parse: parse spec: paths: /requests/{requestId}: get: operation \"getRequestById\": responses: 200: content: \"application/json\": schema: parse schema: reference \"#/components/schemas/Request\": resolve reference \"#/components/schemas/Request\": unmarshal: unexpected end of JSON input"
}