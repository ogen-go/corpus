{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/podhmo/dictknife"
		},
		"file": {
			"name": "more2.0.yaml",
			"size": 0,
			"path": "examples/swaggerknife/migrate/dst/03/more2.0.yaml",
			"byteSize": 3036,
			"content": "components:\n  parameters:\n    userId:\n      description: The ID of the user to return\n      in: path\n      name: userId\n      required: true\n      schema:\n        format: int64\n        minimum: 1\n        type: integer\n  schemas:\n    User:\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n      required:\n      - id\n      - name\n  securitySchemes:\n    BasicAuth:\n      type: basic\ninfo:\n  description: API description in Markdown.\n  title: Sample API\n  version: 1.0.0\nopenapi: 3.0.0\npaths:\n  /users:\n    get:\n      description: Optional extended description in Markdown.\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: A JSON array of user names\n      summary: Returns a list of users.\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                username:\n                  type: string\n              type: object\n        required: true\n      responses:\n        '201':\n          description: Created\n      summary: Craetes a user.\n  /users/{userId}:\n    get:\n      parameters:\n      - description: The ID of the user to return\n        in: path\n        name: userId\n        required: true\n        schema:\n          format: int64\n          minimum: 1\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  id:\n                    example: 4\n                    format: int64\n                    type: integer\n                  name:\n                    example: Jessica Smith\n                    type: string\n                type: object\n          description: A user object.\n        '400':\n          description: The specified user ID is invalid (not a number)\n        '404':\n          description: A user with the specified ID was not found.\n        default:\n          description: Unexpected error\n      summary: Returns a user by ID.\n  /users2:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n        required: true\n      responses:\n        '201':\n          description: Created\n      summary: Craetes a user.\n  /users2/{userId}:\n    get:\n      parameters:\n      - $ref: '#/components/parameters/userId'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: A user object.\n        '400':\n          description: The specified user ID is invalid (not a number)\n        '404':\n          description: A user with the specified ID was not found.\n        default:\n          description: Unexpected error\n      summary: Returns a user by ID.\nsecurity:\n- BasicAuth: []\nservers:\n- description: ''\n  url: 'http://api.example.com/v1'\n",
			"canonicalURL": "/github.com/podhmo/dictknife@a172220c1adc8411b69f31646ea2154932d71516/-/blob/examples/swaggerknife/migrate/dst/03/more2.0.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/podhmo/dictknife/blob/a172220c1adc8411b69f31646ea2154932d71516/examples/swaggerknife/migrate/dst/03/more2.0.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/users\": at 1:477: get: at 1:484: at 1:2249: security: parse security scheme \"BasicAuth\": at 1:329: basic: at 1:337: unknown security scheme type \"basic\""
}