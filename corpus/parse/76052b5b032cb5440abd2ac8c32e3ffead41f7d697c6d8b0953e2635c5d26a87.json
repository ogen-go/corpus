{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ga4gh/ga4gh-registry"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "src/main/resources/public/openapi.yaml",
			"byteSize": 38295,
			"content": "openapi: 3.0.3\ninfo:\n    title: GA4GH Planet API\n    description: |\n        The production API base url is: https://registry.ga4gh.org/v1/\n        * ex: https://registry.ga4gh.org/v1/standards\n        * ex: https://registry.ga4gh.org/v1/services\n\n        # Introduction\n\n        The Planet API is an HTTP API served by the\n        [Global Alliance for Genomics and Health (GA4GH)](https://ga4gh.org).\n\n        The API contains metadata about GA4GH deliverables \n        (ie. technical specifications, policy frameworks, ongoing data sharing initiatives),\n        including product review lifecycle status, released versions, \n        and tools for working with the standards.\n\n        Planet API is also a **GA4GH Service Registry**, implementing the\n        [Service Registry Specification](https://github.com/ga4gh-discovery/ga4gh-service-registry).\n        As such, it is possible to search the registry for web services implementing\n        GA4GH API specifications (e.g. htsget, drs, beacon).\n        The registry is filterable based on service type.\n        At this time, only publicly accessible web services are listed.\n\n        ## Implementations vs. Services\n\n        The API distinguishes between **implementations** and **services**.\n\n        In this context, an **implementation** refers to any codebase that works\n        with one or more GA4GH standards. Examples include:\n        * client libraries for accessing data from GA4GH APIs\n        * command-line tools/executables for reading/writing GA4GH format files\n        * codebases that can be run to spin-up a GA4GH API server\n        * Other tools involving complex analyses that make use of GA4GH standards\n\n        A **service** refers to a running web server serving genomic data according\n        to a GA4GH API specification.  \n\n        Implementations and services can be accessed via the `/implementations` \n        and `/services` routes, respectively.\n\n        ## Register an implementation or web service\n        \n        To register an implementation or web service in the Planet API registry,\n        please complete and submit the [registration form](https://docs.google.com/forms/d/1Bi7Ay5A1npH1ZTkhC1OAp5Us6vPzg2LjdsY1aTK0Xd4).\n\n        Once completed, someone from the GA4GH Technical Team will then register\n        your item, or contact you if more information is needed.\n\n        # Errors\n\n        The API uses standard [rfc2616](https://tools.ietf.org/html/rfc2616)\n        HTTP status codes to indicate the success or failure of the API call.\n        The body of an error response will be in JSON in the following format:\n        ```\n        {\n            \"timestamp\": \"2020-08-14T17:14:13Z\",\n            \"status\": 404,\n            \"error\": \"Not Found\",\n            \"message\": \"no Implementation by the id: example1\",\n            \"path\": \"/v1/services/example1\"\n        }\n        ```\n    version: 0.5.1\n    contact:\n        name: GA4GH Tech Team\n        url: https://ga4gh.org\n        email: jeremy.adams@ga4gh.org\n    license:\n        name: Apache 2.0\n        url: https://www.apache.org/licenses/LICENSE-2.0.html\n    x-logo:\n        url: https://www.ga4gh.org/wp-content/themes/ga4gh-theme/gfx/GA-logo-horizontal-tag-RGB.svg\n        backgroundColor: '#FFFFFF'\n        altText: Global Alliance for Genomics and Health\n        href: https://ga4gh.org\nservers:\n    - url: https://registry.ga4gh.org\n      description: Production API\npaths:\n    /service-info: \n        get:\n            tags:\n                - Service Info\n            summary: Get service info\n            description: Get information about this service\n            responses:\n                200:\n                    description: successfully retrieved service info\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Service'\n                5xx:\n                    $ref: '#/components/responses/5xxServerError'\n    /standards:\n        get:\n            tags:\n                - Standards\n            summary: List standards\n            description: Get entire list of GA4GH standards. This endpoint shows only high-level info about each standard. For detailed information about a particular standard, see `Get standard by Id`\n            responses:\n                200:\n                    description: successfully retrieved list of standards\n                    content:\n                        application/json:\n                            schema:\n                                type: array\n                                items:\n                                    $ref: '#/components/schemas/StandardSummary'\n                5xx:\n                    $ref: '#/components/responses/5xxServerError'\n        post:\n            tags:\n                - Standards\n            summary: Create standard\n            description: Create a new standard with the information specified in `requestBody`\n            security:\n                - BearerAuth: []\n            requestBody:\n                description: new standard to create\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/StandardFull'\n            responses:\n                200:\n                    description: successfully created new standard\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/StandardFull'\n                400:\n                    $ref: '#/components/responses/400BadRequestError'\n                5xx:\n                    $ref: '#/components/responses/5xxServerError'\n    /standards/{standardId}:\n        get:\n            tags:\n                - Standards\n            summary: Get standard by id\n            description: Show detailed information about a single standard, including versions and work stream\n            parameters:\n                - $ref: '#/components/parameters/StandardId'\n            responses:\n                200:\n                    description: successfully retrieved standard\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/StandardFull'\n                404:\n                    $ref: '#/components/responses/404NotFoundError'\n                5xx:\n                    $ref: '#/components/responses/5xxServerError'\n        put:\n            tags:\n                - Standards\n            summary: Update standard by id\n            description: Overwrites the standard at the specified id, with the information specified in `requestBody`\n            security:\n                - BearerAuth: []\n            parameters:\n                - $ref: '#/components/parameters/StandardId'\n            requestBody:\n                description: new properties for existing standard object\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/StandardFull'\n            responses:\n                200:\n                    description: successfully updated the standard\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/StandardFull'\n                400:\n                    $ref: '#/components/responses/400BadRequestError'\n                404:\n                    $ref: '#/components/responses/404NotFoundError'\n                5xx:\n                    $ref: '#/components/responses/5xxServerError'\n        delete:\n            tags:\n                - Standards\n            summary: Delete standard by id\n            description: Deletes the standard at the specified id\n            security:\n                - BearerAuth: []\n            parameters:\n                - $ref: '#/components/parameters/StandardId'\n            responses:\n                200:\n                    description: successfully deleted the standard\n                404:\n                    $ref: '#/components/responses/404NotFoundError'\n                5xx:\n                    $ref: '#/components/responses/5xxServerError'\n    /services:\n        get:\n            tags:\n                - Services\n            summary: List services\n            description: Gets list of all registered web services matching filtering criteria. Services may be filtered using the `type` parameter, which will cause the registry to return services of a particular type and/or version\n            parameters:\n                - $ref: '#/components/parameters/Type'\n            responses:\n                200:\n                    description: successfully retrieved list of services\n                    content:\n                        application/json:\n                            schema:\n                                type: array\n                                items:\n                                    $ref: '#/components/schemas/Service'\n                400:\n                    $ref: '#/components/responses/400BadRequestError'\n                5xx:\n                    $ref: '#/components/responses/5xxServerError'\n        post:\n            tags:\n                - Services\n            summary: Create service\n            description: Creates a new service with the information specified in `requestBody`\n            security:\n                - BearerAuth: []\n            requestBody:\n                description: new service to create\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/Service'\n            responses:\n                200:\n                    description: successfully created new service\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Service'\n                400:\n                    $ref: '#/components/responses/400BadRequestError'\n                5xx:\n                    $ref: '#/components/responses/5xxServerError'\n    /services/{serviceId}:\n        get:\n            tags:\n                - Services\n            summary: Get service by id\n            description: Show detailed information about a single service\n            parameters:\n                - $ref: '#/components/parameters/ServiceId'\n            responses:\n                200:\n                    description: successfully retrieved service\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Service'\n                404:\n                    $ref: '#/components/responses/404NotFoundError'\n                5xx:\n                    $ref: '#/components/responses/5xxServerError'\n        put:\n            tags:\n                - Services\n            summary: Update service by id\n            description: Overwrites the service at the specified id, with the information specified in `requestBody`\n            security:\n                - BearerAuth: []\n            parameters:\n                - $ref: '#/components/parameters/ServiceId'\n            requestBody:\n                description: new properties for existing service object\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/Service'\n            responses:\n                200:\n                    description: successfully updated the service\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Service'\n                400:\n                    $ref: '#/components/responses/400BadRequestError'\n                404:\n                    $ref: '#/components/responses/404NotFoundError'\n                5xx:\n                    $ref: '#/components/responses/5xxServerError'\n        delete:\n            tags:\n                - Services\n            summary: Delete service by id\n            description: Deletes the service at the specified id\n            security:\n                - BearerAuth: []\n            parameters:\n                - $ref: '#/components/parameters/ServiceId'\n            responses:\n                200:\n                    description: successfully deleted the service\n                404:\n                    $ref: '#/components/responses/404NotFoundError'\n                5xx:\n                    $ref: '#/components/responses/5xxServerError'\n    /services/types:\n        get:\n            tags:\n                - Services\n            summary: List service types\n            description: Get list of all implemented service types in the registry\n            responses:\n                200:\n                    description: successful retrieval\n                    content:\n                        application/json:\n                            schema:\n                                type: array\n                                items:\n                                    $ref: '#/components/schemas/ServiceType'\n                5xx:\n                    $ref: '#/components/responses/5xxServerError'\n    /implementations:\n        get:\n            tags:\n                - Implementations\n            summary: List implementations\n            description: Gets list all registered implementations (codebases, libraries, tools) matching filtering criteria. Services may be filtered using the `type` parameter, which will cause the registry to return implementations relating to particular GA4GH specifications and/or versions  \n            parameters:\n                - $ref: '#/components/parameters/Type'\n            responses:\n                200:\n                    description: successfully retrieved list of implementations\n                    content:\n                        application/json:\n                            schema:\n                                type: array\n                                items:\n                                    $ref: '#/components/schemas/Implementation'\n                400:\n                    $ref: '#/components/responses/400BadRequestError'\n                5xx:\n                    $ref: '#/components/responses/5xxServerError'\n        post:\n            tags:\n                - Implementations\n            summary: Create implementation\n            description: Creates a new implementation with the information specified in `requestBody`\n            security:\n                - BearerAuth: []\n            requestBody:\n                description: new implementation to create\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/Implementation'\n            responses:\n                200:\n                    description: successfully created new implementation\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Implementation'\n                400:\n                    $ref: '#/components/responses/400BadRequestError'\n                5xx:\n                    $ref: '#/components/responses/5xxServerError'\n    /implementations/{implementationId}:\n        get:\n            tags:\n                - Implementations\n            summary: Get implementation by id\n            description: Show detailed information about a single implementation\n            parameters:\n                - $ref: '#/components/parameters/ImplementationId'\n            responses:\n                200:\n                    description: successfully retrieved implementation\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Implementation'\n                404:\n                    $ref: '#/components/responses/404NotFoundError'\n                5xx:\n                    $ref: '#/components/responses/5xxServerError'\n        put:\n            tags:\n                - Implementations\n            summary: Update implementation by id\n            description: Overwrites the implementation at the specified id, with the information specified in `requestBody`\n            security:\n                - BearerAuth: []\n            parameters:\n                - $ref: '#/components/parameters/ImplementationId'\n            requestBody:\n                description: new properties for existing implementation object\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/Implementation'\n            responses:\n                200:\n                    description: successfully updated the service\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Implementation'\n                400:\n                    $ref: '#/components/responses/400BadRequestError'\n                404:\n                    $ref: '#/components/responses/404NotFoundError'\n                5xx:\n                    $ref: '#/components/responses/5xxServerError'\n        delete:\n            tags:\n                - Implementations\n            summary: Delete implementation by id\n            description: Deletes the implementation at the specified id\n            security:\n                - BearerAuth: []\n            parameters:\n                - $ref: '#/components/parameters/ImplementationId'\n            responses:\n                200:\n                    description: sucessfully deleted the implementation\n                404:\n                    $ref: '#/components/responses/404NotFoundError'\n                5xx:\n                    $ref: '#/components/responses/5xxServerError'\n    /organizations:\n        get:\n            tags:\n                - Organizations\n            summary: List organizations\n            description: Get list of organizations implementing GA4GH standards, for all services and implementations contained within the registry\n            responses:\n                200:\n                    description: successfully retrieved list of organizations\n                    content:\n                        application/json:\n                            schema:\n                                type: array\n                                items:\n                                    $ref: '#/components/schemas/OrganizationSummary'\n                5xx:\n                    $ref: '#/components/responses/5xxServerError'\n        post:\n            tags:\n                - Organizations\n            summary: Create organization\n            description: Creates a new implementing organization with the information specified in `requestBody`\n            security:\n                - BearerAuth: []\n            requestBody:\n                description: new organization to create\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/OrganizationFull'\n            responses:\n                200:\n                    description: successfully created new organization\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/OrganizationFull'\n                400:\n                    $ref: '#/components/responses/400BadRequestError'\n                5xx:\n                    $ref: '#/components/responses/5xxServerError'\n    /organizations/{organizationId}:\n        get:\n            tags:\n                - Organizations\n            summary: Get organization by id\n            description: Get all details about a single organization implementing GA4GH standards\n            parameters:\n                - $ref: '#/components/parameters/OrganizationId'\n            responses:\n                200:\n                    description: successfully retrieved organization\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/OrganizationFull'\n                404:\n                    $ref: '#/components/responses/404NotFoundError'\n                5xx:\n                    $ref: '#/components/responses/5xxServerError'                \n        put:\n            tags:\n                - Organizations\n            summary: Update organization by id\n            description: Overwrites the organization at the specified id, with the information specified in `requestBody`\n            security:\n                - BearerAuth: []\n            parameters:\n                - $ref: '#/components/parameters/OrganizationId'\n            requestBody:\n                description: new properties for existing organization object\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/OrganizationFull'\n            responses:\n                200:\n                    description: successfully updated the organization\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/OrganizationFull'\n                400:\n                    $ref: '#/components/responses/400BadRequestError'\n                404:\n                    $ref: '#/components/responses/404NotFoundError'\n                5xx:\n                    $ref: '#/components/responses/5xxServerError'\n        delete:\n            tags:\n                - Organizations\n            summary: Delete organization by id\n            description: Deletes the standard at the specified id\n            security:\n                - BearerAuth: []\n            parameters:\n                - $ref: '#/components/parameters/OrganizationId'\n            responses:\n                200:\n                    description: successfully deleted the organization\n                404:\n                    $ref: '#/components/responses/404NotFoundError'\n                5xx:\n                    $ref: '#/components/responses/5xxServerError'\ntags:\n    - name: Service Info\n      description: |\n        `/service-info` API endpoint(s) return information about this web\n        service, according to the\n        [GA4GH Service Info specification](https://github.com/ga4gh-discovery/ga4gh-service-info)\n    - name: Standards\n      description: |\n        `/standards` API endpoints are used to retrieve information about GA4GH\n        standards from the registry, or otherwise create, modify, or delete them.\n    - name: Services\n      description: |\n        `/services` API endpoints are used to retrieve information about web services\n        implementing GA4GH standards from the registry. These endpoints can also\n        create, modify, or delete registered web services\n    - name: Implementations\n      description: |\n        `/implementations` API endpoints are used to retrieve information about\n        implementations (codebases, libraries, tools, etc.) that implement GA4GH\n        standards from the registry. These endpoints can also\n        create, modify, or delete registered implementations\n    - name: Organizations\n      description: |\n        `/organizations` API endpoints are used to retrieve information about\n        organizations adopting GA4GH standards, and have registered implementations\n        and/or web services within the registry. These endpoints can also create,\n        modify, or delete implementing organizations from the registry\ncomponents:\n    securitySchemes:\n        BearerAuth:\n            type: http\n            scheme: bearer\n            bearerFormat: JWT\n    schemas:\n        ApiError:\n            type: object\n            properties:\n                timestamp:\n                    type: string\n                    description: timestamp of when the error was encountered, according to RFC 3339 and in UTC\n                    example: '2020-08-14T19:56:46Z'\n                status:\n                    type: int\n                    description: HTTP status code describing the error \n                    example: 500\n                error:\n                    type: string\n                    description: name of error associated with the status code\n                    example: Server Error\n                message:\n                    type: string\n                    description: message explaining why the request could not be completed\n                    example: an internal server error occurred\n                path:\n                    type: string\n                    description: the requested url that generated the error\n                    example: /v1/services\n        StandardSummary:\n            type: object\n            properties:\n                id:\n                    type: string\n                    description: unique identifier\n                    example: drs\n                name:\n                    type: string\n                    description: official name\n                    example: Data Repository Service\n                abbreviation:\n                    type: string\n                    description: abbreviation/acronym\n                    example: DRS\n                artifact:\n                    type: string\n                    description: canonical `artifact` value for services adopting this specification. See `service-info` and the service-info type registry\n                    example: drs\n                summary:\n                    type: string\n                    description: single-sentence summary of standard\n                    example: Platform-agnostic data API\n                documentationUrl:\n                    type: string\n                    description: url to specification homepage\n                    example: https://github.com/ga4gh/data-repository-service-schemas\n                category:\n                    type: string\n                    description: broad classification of standard category\n                    enum:\n                        - API\n                        - FileFormat\n                        - Schema\n                        - Policy\n                    example: API\n                status:\n                    type: string\n                    description: release status of standard\n                    enum:\n                        - Proposed\n                        - Approved\n                        - Deprecated\n                    example: Approved\n            required:\n                - id\n                - name\n                - summary\n                - documentationUrl\n                - category\n                - status\n        StandardFull:\n            allOf:\n                - $ref: '#/components/schemas/StandardSummary'\n                - type: object\n                  properties:\n                    description:\n                        type: string\n                        description: longer description of standard\n                        example: The Data Repository Service (DRS) API, a standard for building data repositories and adapting access tools to work with those repositories, works with other approved APIs from the GA4GH Cloud Work Stream to allow researchers to discover algorithms across different cloud environments and send them to datasets they wish to analyze.\n                    versions:\n                        type: array\n                        description: list of versioned releases associated with the specification\n                        items:\n                            $ref: '#/components/schemas/StandardVersion'\n                    workStream:\n                        $ref: '#/components/schemas/WorkStream'    \n                  required:\n                    - description\n                    - versions\n                    - workStream\n        StandardVersion:\n            type: object\n            description: A single GA4GH specification may have multiple versions. this object represents a single versioned release of a specification \n            properties:\n                id:\n                    type: string\n                    description: unique identifier for a particular versioned release of a GA4GH standard\n                    example: 'drs:1.0.0'\n                versionNumber:\n                    type: string\n                    description: the version number of the release\n                    example: 1.0.0\n                documentationUrl:\n                    type: string\n                    description: url to documentation page for the release\n                    example: https://ga4gh.github.io/data-repository-service-schemas/preview/release/drs-1.0.0/docs/\n                status:\n                    type: string\n                    description: major version changes of GA4GH standards must also go through product review for approval. This attribute tracks the product review status of the version\n                    enum:\n                        - Proposed\n                        - Approved\n                        - Deprecated\n                    example: Approved\n            required:\n                - id\n                - versionNumber\n                - documentationUrl\n                - status\n        WorkStream:\n            type: object\n            description: represents a technical or foundational GA4GH Work Stream\n            properties:\n                id:\n                    type: string\n                    description: unique identifier for the work stream\n                    example: cloud\n                name:\n                    type: string\n                    description: work stream name/title\n                    example: Cloud\n                abbreviation:\n                    type: string\n                    description: work stream abbreviation/acronym\n            required:\n                - id\n                - name\n        ServiceType:\n            allOf:\n                - $ref: 'https://raw.githubusercontent.com/ga4gh-discovery/ga4gh-service-info/develop/service-info.yaml#/components/schemas/ServiceType'\n        Implementation:\n            type: object\n            properties:\n                id:\n                    type: string\n                    description: unique identifier for the implementation/web service in reverse domain name notation\n                    example: org.ga4gh.myimplementation\n                name:\n                    type: string\n                    description: human readable name of the implementation/web service\n                    example: My project\n                type:\n                    $ref: '#/components/schemas/ServiceType'\n                description:\n                    type: string\n                    description: human readable description of the implementation/web service, providing information about how the tool might be used\n                    example: This implementation of the Beacon API specification ...\n                organization:\n                    $ref: '#/components/schemas/OrganizationSummary'\n                contactUrl:\n                    type: string\n                    format: uri\n                    description: url of the contact for the maintainer/provider of the implementation/web service\n                    example: mailto:support@example.com\n                documentationUrl:\n                    type: string\n                    format: uri\n                    description: url to the documentation of the implementation/web service (RFC 3986 format). This should help someone learn how to use the implementation/service\n                createdAt:\n                    type: string\n                    format: date-time\n                    description: timestamp describing when the implementation/web service was first made available (RFC 3339 format)\n                    example: '2019-06-04T12:58:19Z'\n                updatedAt:\n                    type: string\n                    format: date-time\n                    description: timestamp describing when the implementation/web service was last updated (RFC 3339 format)\n                    example: '2019-06-04T12:58:19Z'\n                version:\n                    type: string\n                    description: version of the implementation/web service\n                    example: 1.0.0\n            required:\n                - id\n                - name\n                - type\n                - organization\n                - version\n        Service:\n            allOf:\n                - $ref: '#/components/schemas/Implementation'\n                - type: object\n                  properties:\n                    environment:\n                        type: string\n                        description: environment the web service is running in. can be used to distinguish between production, development, and testing/staging environments.\n                        example: test\n                    url:\n                        type: string\n                        format: uri\n                        description: |\n                            Base URL of the service ([RFC 3986](https://tools.ietf.org/html/rfc3986) format).\n\n                            For REST API services, this is the URL to which all endpoints should be relative. In particular, services implementing GA4GH specifications defined in OAS format (as per the `type` field) should respond to requests constructed by appending relative paths from the specification to this base URL (e.g. `{url}/service-info`). See [API Server and Base URL](https://swagger.io/docs/specification/api-host-and-base-path/) for more information on specifying base URLs in OAS 3.\n                  required:\n                    - url\n        OrganizationSummary:\n            type: object\n            properties:\n                id:\n                    type: string\n                    description: unique identifier for this organization\n                    example: org.ga4gh\n                name:\n                    type: string\n                    description: organization full name\n                    example: Global Alliance for Genomics and Health\n                shortName:\n                    type: string\n                    description: organization short name (abbreviation or acronym)\n                    example: GA4GH\n                url:\n                    type: string\n                    description: Organization's home page\n                    example: https://ga4gh.org\n            required:\n                - id\n                - name\n                - url\n        OrganizationFull:\n            allOf:\n                - $ref: '#/components/schemas/OrganizationSummary'\n                - type: object\n                  properties:\n                    implementations:\n                        type: array\n                        description: list of implementations and services developed/hosted by (or otherwise associated with) the organization\n                        items:\n                            $ref: '#/components/schemas/Service'\n    parameters:\n        StandardId:\n            in: path\n            name: standardId\n            description: unique identifier for the standard\n            example: drs\n        ServiceId:\n            in: path\n            name: serviceId\n            description: unique identifier for the web service\n            example: org.ga4gh.registry\n        ImplementationId:\n            in: path\n            name: implementationId\n            description: unique identifier for the implementation (codebase, library, tool, etc.)\n            example: org.ga4gh.refget.implementation\n        OrganizationId:\n            in: path\n            name: organizationId\n            description: unique identifier for the organization\n            example: org.ga4gh\n        Type:\n            in: query\n            name: type\n            description: Filter services/implementations by ServiceType (the standard they implement). Serialized as 'GROUP:ARTIFACT:VERSION'\n            example: org.ga4gh:beacon:1.0.0\n    responses:\n        400BadRequestError:\n            description: The service could not complete your request. One or more request parameters were likely malformed\n            content:\n                application/json:\n                    schema:\n                        allOf:\n                            - $ref: '#/components/schemas/ApiError'\n                            - type: object\n                              properties:\n                                status:\n                                    example: 400\n                                error:\n                                    example: Bad Request\n                                message:\n                                    example: could not instantiate ServiceType from 'type' string\n        404NotFoundError:\n            description: The requested resource could not be located\n            content:\n                application/json:\n                    schema:\n                        allOf:\n                            - $ref: '#/components/schemas/ApiError'\n                            - type: object\n                              properties:\n                                status:\n                                    example: 404\n                                error:\n                                    example: Not Found\n                                message:\n                                    example: the requested resource could not be located\n        5xxServerError:\n            description: Unspecified server error encountered\n            content:\n                application/json:\n                    schema:\n                        $ref: '#/components/schemas/ApiError'"
		}
	},
	"Error": "parse: parse spec: parse components: parameters: \"ImplementationId\": path parameters must be required"
}