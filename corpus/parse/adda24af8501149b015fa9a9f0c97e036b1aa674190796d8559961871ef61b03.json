{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/plantbreeding/BrAPI"
		},
		"file": {
			"name": "TraitBaseClass.yaml",
			"size": 0,
			"path": "Specification/Components/Schemas/TraitBaseClass.yaml",
			"byteSize": 3591,
			"content": "info:\n  title: BrAPI\n  version: ''\nopenapi: 3.0.0\npaths: {}\ncomponents:\n  schemas:\n    TraitBaseClass:\n      type: object\n      properties:\n        additionalInfo:\n          additionalProperties:\n            type: string\n          description: Additional arbitrary info\n          type: object\n        externalReferences: \n          $ref: '#/components/schemas/ExternalReferences'\n        alternativeAbbreviations:\n          description: Other frequent abbreviations of the trait, if any. These abbreviations do not have to follow a convention\n          items:\n            type: string\n          type: array\n          example: ['H', 'PH', 'H1']\n        mainAbbreviation:\n          description: 'Main abbreviation for trait name. (examples: \"Carotenoid content\" =\u003e \"CC\")'\n          type: string\n          example: PH\n        synonyms:\n          description: Other trait names\n          items:\n            type: string\n          type: array\n          example: ['Height', 'Plant Height', 'Stalk Height', 'Canopy Height']\n        ontologyReference:\n          $ref: '#/components/schemas/OntologyReference'\n        status:\n          description: 'Trait status (examples: \"recommended\", \"obsolete\", \"legacy\", etc.)'\n          type: string\n          example: recommended\n        attribute:\n          description: A trait can be decomposed as \"Trait\" = \"Entity\" + \"Attribute\", the attribute is the observed feature (or characteristic) of the entity e.g., for \"grain colour\", attribute = \"colour\"\n          type: string\n          example: height\n        attributePUI:\n          description: |-\n            The Permanent Unique Identifier of a Trait Attribute, usually in the form of a URI\n            \u003cbr/\u003eA trait can be decomposed as \"Trait\" = \"Entity\" + \"Attribute\", the attribute is the observed feature (or characteristic) of the entity e.g., for \"grain colour\", attribute = \"colour\"\n          type: string\n          example: http://my-traits.com/trait/PO:00012345\n        entity:\n          description: A trait can be decomposed as \"Trait\" = \"Entity\" + \"Attribute\", the entity is the part of the plant that the trait refers to e.g., for \"grain colour\", entity = \"grain\"\n          type: string\n          example: Stalk \n        entityPUI:\n          description: |-\n            The Permanent Unique Identifier of a Trait Entity, usually in the form of a URI\n            \u003cbr/\u003eA Trait can be decomposed as \"Trait\" = \"Entity\" + \"Attribute\", the Entity is the part of the plant that the trait refers to e.g., for \"grain colour\", entity = \"grain\" \n          type: string\n          example: http://my-traits.com/trait/PATO:00098765\n        traitName:\n          description: |-\n            The human readable name of a trait\n            \u003cbr/\u003eMIAPPE V1.1 (DM-86) Trait - Name of the (plant or environmental) trait under observation\n          type: string\n          example: Height\n        traitPUI:\n          description: The Permanent Unique Identifier of a Trait, usually in the form of a URI\n          type: string\n          example: http://my-traits.com/trait/CO_123:0000012\n        traitClass:\n          description: |-\n            A classification to describe the type of trait and the context it should be considered in.\n            \u003cbr/\u003e examples- \"morphological\", \"phenological\", \"agronomical\", \"physiological\", \"abiotic stress\", \"biotic stress\", \"biochemical\", \"quality traits\", \"fertility\", etc.\n          type: string\n          example: phenological\n        traitDescription:\n          description: The description of a trait\n          type: string\n          example: The height of the plant \n\n",
			"canonicalURL": "/github.com/plantbreeding/BrAPI@da51ee3cc91464aeed50d0dfd1cc113932ad0b87/-/blob/Specification/Components/Schemas/TraitBaseClass.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/plantbreeding/BrAPI/blob/da51ee3cc91464aeed50d0dfd1cc113932ad0b87/Specification/Components/Schemas/TraitBaseClass.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"TraitBaseClass\": parse schema: property \"externalReferences\": at 1:1675: parse schema: resolve \"#/components/schemas/ExternalReferences\": find schema: resolve: can't find value for \"components/schemas/ExternalReferences\""
}