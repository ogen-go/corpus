{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/geoadmin/service-stac"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "spec/openapi.yaml",
			"byteSize": 7486,
			"content": "openapi: 3.0.1\ninfo:\n  contact:\n    name: API Specification (based on STAC)\n    url: http://data.geo.admin.ch/api/stac/v0.9/\n  description: \u003e-\n    This is an OpenAPI definition of the API to query and access federal geodata on\n    data.geo.admin.ch. The API is based on the core SpatioTemporal Asset Catalog API specification\n    [STAC](http://stacspec.org) and adds two extensions for extended searching possibilities.\n  title: The SpatioTemporal Asset Catalog API for data.geo.admin.ch\n  version: 0.9.0\nservers:\n  - description: Data.geo.admin.ch\n    url: http://data.geo.admin.ch/api/stac/v0.9\ntags:\n  - description: Essential characteristics of this API\n    name: Capabilities\n  - description: Access to data (features)\n    name: Data\n  - description: Extension to OGC API - Features to support STAC metadata model and search API\n    name: STAC\n\npaths:\n  /:\n    get:\n      description: \u003e-\n        The landing page provides links to the API definition, the conformance\n        statements and to the feature collections in this dataset.\n      operationId: getLandingPage\n      responses:\n        \"200\":\n          $ref: \"./components/responses.yaml#/components/responses/LandingPage\"\n        \"500\":\n          $ref: \"./components/responses.yaml#/components/responses/ServerError\"\n      summary: Landing page\n      tags:\n        - Capabilities\n  /collections:\n    get:\n      operationId: getCollections\n      parameters:\n        - $ref: \"./components/parameters.yaml#/components/parameters/limit\"\n      responses:\n        \"200\":\n          $ref: \"./components/responses.yaml#/components/responses/Collections\"\n        \"500\":\n          $ref: \"./components/responses.yaml#/components/responses/ServerError\"\n      summary: Fetch collections\n      description: The feature collections in the dataset\n      tags:\n        - Data\n  /collections/{collectionId}:\n    get:\n      operationId: describeCollection\n      parameters:\n        - $ref: \"./components/parameters.yaml#/components/parameters/collectionId\"\n        - $ref: \"./components/parameters.yaml#/components/parameters/IfMatch\"\n        - $ref: \"./components/parameters.yaml#/components/parameters/IfNoneMatch\"\n      responses:\n        \"200\":\n          $ref: \"./components/responses.yaml#/components/responses/Collection\"\n        \"304\":\n          $ref: \"./components/responses.yaml#/components/responses/NotModified\"\n        \"404\":\n          $ref: \"./components/responses.yaml#/components/responses/NotFound\"\n        \"412\":\n          $ref: \"./components/responses.yaml#/components/responses/PreconditionFailed\"\n        \"500\":\n          $ref: \"./components/responses.yaml#/components/responses/ServerError\"\n      summary: Fetch a single collection\n      description: Describe the feature collection with id `collectionId`\n      tags:\n        - Data\n  /collections/{collectionId}/items:\n    get:\n      description: \u003e-\n        Fetch features of the feature collection with id `collectionId`.\n\n\n        Every feature in a dataset belongs to a collection. A dataset may\n        consist of multiple feature collections. A feature collection is often a\n        collection of features of a similar type, based on a common schema.\n\n\n        Use content negotiation to request HTML or GeoJSON.\n      operationId: getFeatures\n      parameters:\n        - $ref: \"./components/parameters.yaml#/components/parameters/collectionId\"\n        - $ref: \"./components/parameters.yaml#/components/parameters/limit\"\n        - $ref: \"./components/parameters.yaml#/components/parameters/bbox\"\n        - $ref: \"./components/parameters.yaml#/components/parameters/datetime\"\n      responses:\n        \"200\":\n          $ref: \"./components/responses.yaml#/components/responses/Features\"\n        \"400\":\n          $ref: \"./components/responses.yaml#/components/responses/InvalidParameter\"\n        \"404\":\n          $ref: \"./components/responses.yaml#/components/responses/NotFound\"\n        \"500\":\n          $ref: \"./components/responses.yaml#/components/responses/ServerError\"\n      summary: Fetch features\n      tags:\n        - Data\n  /collections/{collectionId}/items/{featureId}:\n    get:\n      description: \u003e-\n        Fetch the feature with id `featureId` in the feature collection\n        with id `collectionId`.\n\n\n        Use content negotiation to request HTML or GeoJSON.\n      operationId: getFeature\n      parameters:\n        - $ref: \"./components/parameters.yaml#/components/parameters/collectionId\"\n        - $ref: \"./components/parameters.yaml#/components/parameters/featureId\"\n        - $ref: \"./components/parameters.yaml#/components/parameters/IfMatch\"\n        - $ref: \"./components/parameters.yaml#/components/parameters/IfNoneMatch\"\n      responses:\n        \"200\":\n          $ref: \"./components/responses.yaml#/components/responses/Feature\"\n        \"304\":\n          $ref: \"./components/responses.yaml#/components/responses/NotModified\"\n        \"404\":\n          $ref: \"./components/responses.yaml#/components/responses/NotFound\"\n        \"412\":\n          $ref: \"./components/responses.yaml#/components/responses/PreconditionFailed\"\n        \"500\":\n          $ref: \"./components/responses.yaml#/components/responses/ServerError\"\n      summary: Fetch a single feature\n      tags:\n        - Data\n  /conformance:\n    get:\n      description: \u003e-\n        A list of all conformance classes specified in a standard that the\n        server conforms to.\n      operationId: getConformanceDeclaration\n      responses:\n        \"200\":\n          $ref: \"./components/responses.yaml#/components/responses/ConformanceDeclaration\"\n        \"500\":\n          $ref: \"./components/responses.yaml#/components/responses/ServerError\"\n      summary: Information about specifications that this API conforms to\n      tags:\n        - Capabilities\n  /search:\n    get:\n      description: \u003e-\n        Retrieve Items matching filters. Intended as a shorthand API for simple\n        queries.\n\n      operationId: getSearchSTAC\n      parameters:\n        - $ref: \"./components/parameters.yaml#/components/parameters/bbox\"\n        - $ref: \"./components/parameters.yaml#/components/parameters/datetime\"\n        - $ref: \"./components/parameters.yaml#/components/parameters/limit\"\n        - $ref: \"./components/parameters.yaml#/components/parameters/ids\"\n        - $ref: \"./components/parameters.yaml#/components/parameters/collectionsArray\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"./components/schemas.yaml#/components/schemas/itemsSearchGet\"\n          description: A feature collection.\n        \"500\":\n          $ref: \"./components/responses.yaml#/components/responses/ServerError\"\n      summary: Search STAC items with simple filtering.\n      tags:\n        - STAC\n    post:\n      description: \u003e-\n        Retrieve items matching filters. Intended as the standard, full-featured\n        query API.\n\n      operationId: postSearchSTAC\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"./components/schemas.yaml#/components/schemas/searchBody\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"./components/schemas.yaml#/components/schemas/itemsSearchPost\"\n          description: A feature collection.\n        \"500\":\n          $ref: \"./components/responses.yaml#/components/responses/ServerError\"\n      summary: Search STAC items with full-featured filtering.\n      tags:\n        - STAC\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /: get: operation \"getLandingPage\": responses: 500: resolve \"./components/responses.yaml#/components/responses/ServerError\" reference: invalid response reference"
}