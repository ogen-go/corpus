{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/UnionInternationalCheminsdeFer/OSDM"
		},
		"file": {
			"name": "OSDM-online-api-v2.0.1.yml",
			"size": 0,
			"path": "specification/v2.0.0/OSDM-online-api-v2.0.1.yml",
			"byteSize": 351156,
			"content": "openapi: 3.0.3\n\ninfo:\n  title: UIC 90918-10 - OSDM\n  version: 2.0.1\n  description: \u003e-\n    Specifications for the OSDM API standard. The OSDM specification supports two modes of operation: Distributor Mode and Allocator Mode. The API works the same in both modes, except that in allocator mode the API also returns fare information.\n    The OSDM specification combines the allocator and distributor modes into one aligned API interface.\n  contact:\n    name: OSDM Working Group\n    url: 'https://osdm.io'\n    email: osdm@uic.org\n  license:\n    name: Apache 2.0\n    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'\n\nservers:\n  - url: https://s3p-osdm.cloud.sqills.com\n    description: \u003e-\n      Sqills Sandbox\n\ntags:\n  - name: Places\n    description: \u003e-\n      resources to search for places\n  - name: Trips\n    description: \u003e-\n      resources to search for trips\n  - name: Offers\n    description: \u003e-\n      resources to get bookable offers\n  - name: Availabilities\n    description: \u003e-\n      resources to query availabilities before or after pre-booking\n  - name: BookingPart\n    description: \u003e-\n      resources to add and remove offer parts to a pre-booked booking\n  - name: Bookings\n    description: \u003e-\n      resources to manipulate bookings\n  - name: On Hold\n    description: \u003e-\n      resources to put a pre-booking on hold for a given time limit\n  - name: Bookings Search\n    description: \u003e-\n      resources to search for bookings\n  - name: Passengers\n    description: \u003e-\n      resources to manipulate a passenger's information at every stage of the flow\n  - name: Purchaser\n    description: \u003e-\n      resources to manipulate a purchaser's information at every stage of the flow\n  - name: Fulfillments\n    description: \u003e-\n      resources to retrieve fulfillments, e.g. tickets\n  - name: Refund\n    description: \u003e-\n      resources to get and accept a refund offer\n  - name: Exchange\n    description: \u003e-\n      resources to get exchange offers and book it\n  - name: Release\n    description: \u003e-\n      resources to release \n  - name: Complaint Management\n    description: \u003e-\n      resources to manage complaints\n  - name: Master Data\n    description: \u003e-\n      resources to get master data\n  - name: Cancel Fulfillments\n    description: \u003e-\n      resources to cancel fulfillments\n  - name: Document\n    description: \u003e-\n      resources to get documents\n  - name: Reimbursement Management\n    description: \u003e-\n      resources to manage reimbursements\n\npaths:\n  /places:\n    get:\n      tags:\n        - Master Data\n      summary: Returns all places.\n      operationId: getPlaces\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - name: page\n          in: query\n          description: \u003e-\n            can be used for pagination\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \u003e-\n            the requested places\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlaceResponse'\n          headers:\n            Cache-Control:\n              schema:\n                type: string\n                default: 'public, max-age=10000'\n                description: \u003e-\n                  Resource is fairly persistent and has a medium time to live to allow short-term caching.\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n    post:\n      tags:\n        - Places\n      summary: returns place information for a given place request\n      description: \u003e-\n        Returns places for a given place request based on the OJP specification.\n      operationId: postPlaces\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n      requestBody:\n        description: \u003e-\n          request for place\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PlaceRequest'\n      responses:\n        '200':\n          description: \u003e-\n            place information found matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlaceResponse'\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /places/{placeId}:\n    get:\n      tags:\n        - Places\n      summary: returns a place\n      operationId: getPlacesId\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - name: placeId\n          in: path\n          description: \u003e-\n            id of the place to get.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \u003e-\n            the requested places\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlaceResponse'\n          headers:\n            Cache-Control:\n              schema:\n                type: string\n                default: 'public, max-age=10000'\n                description: \u003e-\n                  Resource is fairly persistent and has a medium time to live to allow short-term caching.\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /trips-collection:\n    post:\n      tags:\n        - Trips\n      summary: returns a collection of trips for a given OJP trip request\n      description: \u003e-\n        Returns trips for a given trip request based on the OJP specification.\n      operationId: postTrips\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n      requestBody:\n        description: \u003e-\n          request for trips\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TripSearchCriteria'\n      responses:\n        '200':\n          description: \u003e-\n            trips found matching criteria\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TripCollectionResponse'\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /trips-collection/{tripsCollectionId}:\n    get:\n      tags:\n        - Trips\n      summary: Returns a collection of trips for a specified origin and destination (and via).\n      description: \u003e-\n        The unique codes of the origin and destination can be resolved using the places service.\n      operationId: getTripsCollectionId\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - name: tripsCollectionId\n          in: path\n          description: \u003e-\n            id of the trips\n          required: true\n          schema:\n            type: string\n        - name: page\n          in: query\n          schema:\n            type: string\n        - name: embed\n          in: query\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only.\n            Default value: ALL\n          schema:\n            type: array\n            maxItems: 2\n            items:\n              $ref: '#/components/schemas/TripsCollectionResponseContent'\n      responses:\n        '200':\n          description: \u003e-\n            Trip(s) found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TripCollectionResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /trips/{tripId}:\n    get:\n      tags:\n        - Trips\n      summary: Returns a trip element representing a travel trip.\n      description: \u003e-\n        A trip consists of one or more legs for a given tripId. Depending on the\n        embed either references or full location definitions is returned.\n      operationId: getTripsId\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - name: tripId\n          in: path\n          description: \u003e-\n            id of the trip to get.\n          required: true\n          schema:\n            type: string\n        - name: stopBehavior\n          in: query\n          description: \u003e-\n            Influences what stops are to be returned in response\n            (ORIGIN_DESTINATION_ONLY returns no intermediate stops;\n            REAL_BOARDING_ALIGHTING returns all stops except virtual stops).\n            Default value: ORIGIN_DESTINATION_ONLY\n          schema:\n            $ref: '#/components/schemas/StopBehavior' \n        - name: embed\n          in: query\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only.\n            Default value: ALL\n          schema:\n            type: array\n            maxItems: 1\n            items:\n              $ref: '#/components/schemas/TripResponseContent'\n      responses:\n        '200':\n          description: \u003e-\n            the requested trip\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TripResponse'\n          headers:\n            Cache-Control:\n              schema:\n                type: string\n                default: 'public, max-age=10000'\n                description: \u003e-\n                  Resource is fairly persistent and has a medium time to live to allow short-term caching.\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /offers:\n    post:\n      tags:\n        - Offers\n      summary: Returns offers for trips or trip search criteria.\n      operationId: createOffers\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - $ref: '#/components/parameters/idempotencyKey'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OfferCollectionRequest'\n      responses:\n        '200':\n          description: \u003e-\n            Collection of offer found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OfferCollectionResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /booking/{bookingId}/onHoldOffer:\n    post:\n      tags:\n        - On Hold\n      summary: Creates an on hold offer.\n      operationId: createOnHoldOffer\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - $ref: '#/components/parameters/idempotencyKey'\n        - name: bookingId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OnHoldOfferRequest'\n      responses:\n        '200':\n          description: \u003e-\n            TODO: Please add comment for response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OnHoldOfferResponse'\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /booking/{bookingId}/onHoldOffer/{onHoldOfferId}:\n    patch:\n      tags:\n        - On Hold\n      summary: Confirms an on hold offer.\n      operationId: confirmOnHoldOffer\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - $ref: '#/components/parameters/idempotencyKey'\n        - name: bookingId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: onHoldOfferId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OnHoldOfferPatchRequest'\n      responses:\n        '200':\n          description: \u003e-\n            TODO: Please add comment for response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OnHoldOfferResponse'\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /bookings/{bookingId}/passengers/{passengerId}:\n    get:\n      tags:\n        - Passengers\n      summary: Returns the passenger's information at booking step.\n      operationId: getBookingPassengersId\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - name: bookingId\n          in: path\n          description: \u003e-\n            id of the booking\n          required: true\n          schema:\n            type: string\n        - name: passengerId\n          in: path\n          description: \u003e-\n            id of the passenger\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \u003e-\n            Passenger found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PassengerResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n    patch:\n      tags:\n        - Passengers\n      summary: Allows updating a passenger's information at booking step.\n      operationId: patchBookingPassenger\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - $ref: '#/components/parameters/idempotencyKey'\n        - name: bookingId\n          in: path\n          description: \u003e-\n            id of the booking the passenger is in.\n          required: true\n          schema:\n            type: string\n        - name: passengerId\n          in: path\n          description: \u003e-\n            id of the passenger\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Passenger'\n      responses:\n        '200':\n          description: \u003e-\n            Passenger successfully patched\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PassengerResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /bookings/{bookingId}/purchaser:\n    get:\n      tags:\n        - Purchaser\n      summary: Returns the purchaser's information at booking step.\n      operationId: getBookingPurchaser\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - name: bookingId\n          in: path\n          description: \u003e-\n            id of the booking the purchaser is in.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \u003e-\n            Purchaser found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PurchaserResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n    patch:\n      tags:\n        - Purchaser\n      summary: Allows updating a purchaser's information at booking step.\n      operationId: patchBookingPurchaser\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - $ref: '#/components/parameters/idempotencyKey'\n        - name: bookingId\n          in: path\n          description: \u003e-\n            id of the booking the purchaser is in.\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Purchaser'\n      responses:\n        '200':\n          description: \u003e-\n            Purchaser successfully patched\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PurchaserResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /bookings/{bookingId}/bookedOffer/{bookedOfferId}/reservations/{reservationId}:\n    patch:\n      tags:\n        - BookingPart\n      summary: Adds an optional reservation to a  prebooked booking.\n      operationId: patchBookingBookedOfferReservations\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - $ref: '#/components/parameters/idempotencyKey'\n        - name: bookingId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: bookedOfferId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: reservationId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BookedOfferReservationPatchRequest'\n      responses:\n        '200':\n          description: \u003e-\n            TODO: Please add comment for response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BookedOfferReservationPatchResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n    delete:\n      tags:\n        - BookingPart\n      summary: Removes an optional reservation from pre-booked booking.\n      operationId: deleteBookingBookedOfferReservations\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - $ref: '#/components/parameters/idempotencyKey'\n        - name: bookingId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: bookedOfferId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: reservationId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n    \n        '204':\n          $ref: '#/components/responses/NoContentResponse'\n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /bookings/{bookingId}/bookedOffer/{bookedOfferId}/ancillaries/{ancillaryId}:\n    patch:\n      tags:\n        - BookingPart\n      summary: Adds an ancillary to a pre-booked booking.\n      operationId: patchBookingBookedOfferAncillaries\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - $ref: '#/components/parameters/idempotencyKey'\n        - name: bookingId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: bookedOfferId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: ancillaryId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BookedOfferAncillaryPatchRequest'\n      responses:\n        '200':\n          description: \u003e-\n            TODO: Please add comment for response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BookedOfferAncillaryPatchResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n    delete:\n      tags:\n        - BookingPart\n      summary: Removes an ancillary from pre-booked booking.\n      operationId: deleteBookingBookedOfferAncillary\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - $ref: '#/components/parameters/idempotencyKey'\n        - name: bookingId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: bookedOfferId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: ancillaryId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n    \n        '204':\n          $ref: '#/components/responses/NoContentResponse'\n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /bookings:\n    post:\n      tags:\n        - Bookings\n      summary: Creates a booking based on a previously requested offer.\n      operationId: postBookings\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - $ref: '#/components/parameters/idempotencyKey'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BookingRequest'\n      responses:\n        '200':\n          description: \u003e-\n            Booking prebooked\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BookingResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /bookings/{bookingId}:\n    get:\n      tags:\n        - Bookings\n      summary: Returns a booking.\n      operationId: getBookingsId\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - name: bookingId\n          in: path\n          description: \u003e-\n            id of the booking to get.\n          required: true\n          schema:\n            type: string\n        - name: embed\n          in: query\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only.\n            Default value: ALL\n          schema:\n            type: array\n            maxItems: 7\n            items:\n              $ref: '#/components/schemas/BookingResponseContent'\n      responses:\n        '200':\n          description: \u003e-\n            booking found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BookingResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n    patch:\n      tags:\n        - Bookings\n      summary: Confirms a booking.\n      operationId: confirmBooking\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - $ref: '#/components/parameters/idempotencyKey'\n        - name: bookingId\n          in: path\n          description: \u003e-\n            id of the booking to be patched\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BookingPatchRequest'\n      responses:\n        '200':\n          description: \u003e-\n            booking fulfillment type updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BookingResponse'\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n    delete:\n      tags:\n        - Bookings\n      summary: Deletes the booking.\n      description: \u003e-\n        It is only possible before the booking is confirmed or in case of a technical problem in confirming multiple\n        independent bookings within a sales transaction. Deletes on a confirmed booking must be documented\n        and evidence on the issue must be provided on request.\n        The delete on a confirmed booking is allowed immediately after the confirmation of the booking,\n        but must be repeated according to the error handling rules in case the delete fails.\n      operationId: deleteBookingsId\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - $ref: '#/components/parameters/idempotencyKey'\n        - name: bookingId\n          in: path\n          description: \u003e-\n            id of the booking to delete.\n          required: true\n          schema:\n            type: string\n      responses:\n    \n        '204':\n          $ref: '#/components/responses/NoContentResponse'\n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /bookings/{bookingId}/bookedOffer:\n    get:\n      tags:\n        - Bookings\n      summary: Get booked offer for a given booking.\n      operationId: getBookingBookedOffer\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - name: bookingId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \u003e-\n            TODO: Please add comment for response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BookedOfferResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /bookings-search:\n    post:\n      tags:\n        - Bookings Search\n      summary: Search for bookings based on search parameters.\n      operationId: searchBookings\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - $ref: '#/components/parameters/idempotencyKey'\n        - name: page\n          in: query\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BookingSearchRequest'\n      responses:\n        '200':\n          description: \u003e-\n            TODO: Please add comment for response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BookingSearchResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /bookings/{bookingId}/fulfillments:\n    post:\n      tags:\n        - Fulfillments\n      summary: Confirms the booking a triggers the fulfillment of the booking, does not return the fulfillments.\n      operationId: postFulfillments\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - $ref: '#/components/parameters/idempotencyKey'\n        - name: bookingId\n          in: path\n          description: \u003e-\n            id of the booking to be patched\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \u003e-\n            Fulfillment successfully completed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FulfillmentCollectionResponse'\n    \n        '202':\n          $ref: '#/components/responses/FulfillmentRequestAcceptedResponse'\n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n    patch:\n      tags:\n        - Fulfillments\n      summary: Finalizes the fulfillments and returns the documents.\n      operationId: finalizeFulfillment\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - $ref: '#/components/parameters/idempotencyKey'\n        - name: bookingId\n          in: path\n          description: \u003e-\n            id of the booking to be patched\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FulfillmentPatchRequest'\n      responses:\n        '200':\n          description: \u003e-\n            Fulfillment successfully completed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FulfillmentCollectionResponse'\n    \n        '202':\n          $ref: '#/components/responses/FulfillmentRequestAcceptedResponse'\n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /fulfillments/{fulfillmentId}:\n    get:\n      tags:\n        - Fulfillments\n      summary: Returns the fulfillment, aka. ticket for the provided id.\n      operationId: getFulfillmentId\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - name: fulfillmentId\n          in: path\n          description: \u003e-\n            id of the fulfillment to get.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \u003e-\n            fulfillment found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FulfillmentResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n    patch:\n      tags:\n        - Fulfillments\n      summary: Activates a fulfillment, i.e. changes the status to AVAILABLE.\n      description: \u003e-\n        Changes the fulfillment to status AVAILABLE. In the case of multi-journey product, one of the fulfillment is now \"activated\" and can be used to travel.\n      operationId: patchFulfillment\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - name: fulfillmentId\n          in: path\n          description: \u003e-\n            patch the fulfillment\n          required: true\n          schema:\n            $ref: '#/components/schemas/FulfillmentActivationPatchRequest' \n      responses:\n        '200':\n          description: \u003e-\n            fulfillment patched\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FulfillmentResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /bookings/{bookingId}/refundOffers:\n    post:\n      tags:\n        - Refund\n      summary: Initiates a refund process by creating a refundOffer resource.\n      description: \u003e-\n        The RefundOffer contains the required information on the potential operation. One refund offer can then be\n        accepted via a PATCH, deleted or left to die at the end of its lifetime.\n      operationId: postRefundOffers\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - $ref: '#/components/parameters/idempotencyKey'\n        - name: bookingId\n          in: path\n          description: \u003e-\n            id of the booking.\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RefundOfferRequest'\n      responses:\n        '200':\n          description: \u003e-\n            Refund offer created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RefundOfferCollectionResponse'\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /bookings/{bookingId}/refundOffers/{refundOfferId}:\n    get:\n      tags:\n        - Refund\n      summary: Returns the refund offer for the ids provided.\n      operationId: getRefundOffers\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - name: bookingId\n          in: path\n          description: \u003e-\n            id of the booking\n          required: true\n          schema:\n            type: string\n        - name: refundOfferId\n          in: path\n          description: \u003e-\n            id of the refund offer to get.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \u003e-\n            RefundOffer found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RefundOfferResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n    patch:\n      tags:\n        - Refund\n      summary: Allows to accept and confirm a refund offer.\n      operationId: patchRefundOffers\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - $ref: '#/components/parameters/idempotencyKey'\n        - name: bookingId\n          in: path\n          description: \u003e-\n            id of the booking\n          required: true\n          schema:\n            type: string\n        - name: refundOfferId\n          in: path\n          description: \u003e-\n            id of the refund offer\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RefundOfferPatchRequest'\n      responses:\n        '200':\n          description: \u003e-\n            RefundOffer confirmed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RefundOfferResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n    delete:\n      tags:\n        - Refund\n      summary: Deletes a refundOffer without waiting for expiry.\n      operationId: deleteRefundOffers\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - $ref: '#/components/parameters/idempotencyKey'\n        - name: bookingId\n          in: path\n          description: \u003e-\n            id of the booking\n          required: true\n          schema:\n            type: string\n        - name: refundOfferId\n          in: path\n          description: \u003e-\n            id of the refund offer\n          required: true\n          schema:\n            type: string\n      responses:\n    \n        '204':\n          $ref: '#/components/responses/NoContentResponse'\n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /bookings/{bookingId}/releaseOffers:\n    post:\n      tags:\n        - Release\n      summary: Initiates a release process by creating a releaseOffers resource.\n      operationId: postReleaseOffers\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - $ref: '#/components/parameters/idempotencyKey'\n        - name: bookingId\n          in: path\n          description: \u003e-\n            id of the booking.\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReleaseOfferRequest'\n      responses:\n        '200':\n          description: \u003e-\n            Refund offer created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReleaseOfferCollectionResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /bookings/{bookingId}/releaseOffers/{releaseOfferId}:\n    get:\n      tags:\n        - Release\n      summary: Returns the release offer for the ids provided.\n      operationId: getReleaseOffer\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - name: bookingId\n          in: path\n          description: \u003e-\n            id of the booking\n          required: true\n          schema:\n            type: string\n        - name: releaseOfferId\n          in: path\n          description: \u003e-\n            id of the refund offer to get.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \u003e-\n            RefundOffer found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReleaseOfferResponse'\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n    patch:\n      tags:\n        - Release\n      summary: Allows to accept and confirm a release offer.\n      operationId: patchReleaseOffers\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - $ref: '#/components/parameters/idempotencyKey'\n        - name: bookingId\n          in: path\n          description: \u003e-\n            id of the booking\n          required: true\n          schema:\n            type: string\n        - name: releaseOfferId\n          in: path\n          description: \u003e-\n            id of the refund offer\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReleaseOfferPatchRequest'\n      responses:\n        '200':\n          description: \u003e-\n            RefundOffer confirmed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReleaseOfferResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n    delete:\n      tags:\n        - Release\n      summary: Deletes a release offer without waiting for expiry.\n      operationId: deleteReleaseOffers\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - $ref: '#/components/parameters/idempotencyKey'\n        - name: bookingId\n          in: path\n          description: \u003e-\n            id of the booking\n          required: true\n          schema:\n            type: string\n        - name: releaseOfferId\n          in: path\n          description: \u003e-\n            id of the refund offer\n          required: true\n          schema:\n            type: string\n      responses:\n    \n        '204':\n          $ref: '#/components/responses/NoContentResponse'\n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /bookings/{bookingId}/cancelFulfillmentsOffers:\n    post:\n      tags:\n        - Cancel Fulfillments\n      summary: Initiates a cancel fulfillments process by creating a cancelFulfillmentsOffers resource.\n      operationId: postCancelFulfillmentsOffers\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - $ref: '#/components/parameters/idempotencyKey'\n        - name: bookingId\n          in: path\n          description: \u003e-\n            id of the booking.\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CancelFulfillmentsOfferRequest'\n      responses:\n        '200':\n          description: \u003e-\n            Refund offer created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CancelFulfillmentsOfferCollectionResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /bookings/{bookingId}/cancelFulfillmentsOffers/{cancelFulfillmentsOfferId}:\n    get:\n      tags:\n        - Cancel Fulfillments\n      summary: Returns the cancel fulfillments offer for the ids provided.\n      operationId: getCancelFulfillmentOffers\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - name: bookingId\n          in: path\n          description: \u003e-\n            id of the booking\n          required: true\n          schema:\n            type: string\n        - name: cancelFulfillmentsOfferId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \u003e-\n            RefundOffer found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CancelFulfillmentsOfferResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n    patch:\n      tags:\n        - Cancel Fulfillments\n      summary: Allows to accept and confirm a cancel fulfillments offer.\n      operationId: patchCancelFulfillmentsOffers\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - $ref: '#/components/parameters/idempotencyKey'\n        - name: bookingId\n          in: path\n          description: \u003e-\n            id of the booking\n          required: true\n          schema:\n            type: string\n        - name: cancelFulfillmentsOfferId\n          in: path\n          description: \u003e-\n            id of the refund offer\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CancelFulfillmentsOfferPatchRequest'\n      responses:\n        '200':\n          description: \u003e-\n            RefundOffer confirmed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CancelFulfillmentsOfferResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n    delete:\n      tags:\n        - Cancel Fulfillments\n      summary: Deletes a cancel fulfillments offer without waiting for expiry.\n      operationId: deleteCancelFulfillmentOffers\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - $ref: '#/components/parameters/idempotencyKey'\n        - name: bookingId\n          in: path\n          description: \u003e-\n            id of the booking\n          required: true\n          schema:\n            type: string\n        - name: cancelFulfillmentsOfferId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n    \n        '204':\n          $ref: '#/components/responses/NoContentResponse'\n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /bookings/{bookingId}/exchangeOperations/{exchangeOperationId}:\n    get:\n      tags:\n        - Exchange\n      summary: Returns the exchange operation with the id provided. It may be a provisional or a confirmed exchange.\n      operationId: getBookingExchangeOperations\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - name: bookingId\n          in: path\n          description: \u003e-\n            id of the booking\n          required: true\n          schema:\n            type: string\n            nullable: false\n        - name: exchangeOperationId\n          in: path\n          description: \u003e-\n            id of the exchange operation\n          required: true\n          schema:\n            type: string\n        - name: embed\n          in: query\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only.\n            Default value: ALL\n          schema:\n            type: array\n            maxItems: 5\n            items:\n              $ref: '#/components/schemas/ExchangeOperationResponseContent'\n      responses:\n        '200':\n          description: \u003e-\n            ExchangeOperation found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExchangeOperationResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n    patch:\n      tags:\n        - Exchange\n      summary: Allows to update an ongoing exchange operation.\n      operationId: patchExchangeOperation\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - $ref: '#/components/parameters/idempotencyKey'\n        - name: bookingId\n          in: path\n          description: \u003e-\n            id of the booking to be exchanged.\n          required: true\n          schema:\n            type: string\n            nullable: false\n        - name: exchangeOperationId\n          in: path\n          description: \u003e-\n            id of the exchange operation.\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExchangeOperationPatchRequest'\n      responses:\n        '200':\n          description: \u003e-\n            Exchange successfully completed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExchangeOperationResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n    delete:\n      tags:\n        - Exchange\n      summary: Cancels an ongoing exchange operation in provisional state.\n      operationId: deleteExchangeOperation\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - $ref: '#/components/parameters/idempotencyKey'\n        - name: bookingId\n          in: path\n          description: \u003e-\n            id of the booking containing the exchange operation\n          required: true\n          schema:\n            type: string\n        - name: exchangeOperationId\n          in: path\n          description: \u003e-\n            id of the exchangeOperation to delete.\n          required: true\n          schema:\n            type: string\n      responses:\n    \n        '204':\n          $ref: '#/components/responses/NoContentResponse'\n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /exchange-offers:\n    post:\n      tags:\n        - Exchange\n      summary: Returns exchange offers for a specified fulfillments submitted given requested new trip characteristics.\n      operationId: createExchangeOffersCollection\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - $ref: '#/components/parameters/idempotencyKey'\n        - name: pEmbed\n          in: query\n          required: true\n          schema:\n            $ref: '#/components/schemas/ExchangeOfferCollectionResponseContent' \n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExchangeOfferCollectionRequest'\n      responses:\n        '200':\n          description: \u003e-\n            Collection of exchange offers found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExchangeOfferCollectionResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /complaints:\n    post:\n      tags:\n        - Complaint Management\n      summary: Allows adding a complaint.\n      description: \u003e-\n        Create a complaint request for part of a booking.\n      operationId: createComplaint\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - $ref: '#/components/parameters/idempotencyKey'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Complaint'\n      responses:\n        '200':\n          description: \u003e-\n            complaint\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ComplaintResponse'\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /complaints/{complaintId}:\n    get:\n      tags:\n        - Complaint Management\n      summary: Returns a complaint.\n      description: \u003e-\n        Get a complaint including its current state.\n      operationId: getComplaint\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - name: complaintId\n          in: path\n          description: \u003e-\n            id of the complaint\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \u003e-\n            the requested complaint\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ComplaintResponse'\n          headers:\n            Cache-Control:\n              schema:\n                type: string\n                default: 'public, max-age=10000'\n                description: \u003e-\n                  Resource is fairly persistent and has a medium time to live to allow short-term caching.\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n    patch:\n      tags:\n        - Complaint Management\n      summary: Allows updating a complaint.\n      description: \u003e-\n        Update a complaint request, i.e add missing documents or change state.\n      operationId: patchComplaint\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - $ref: '#/components/parameters/idempotencyKey'\n        - name: complaintId\n          in: path\n          description: \u003e-\n            id of the complaint to be patched\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ComplaintPatchRequest'\n      responses:\n        '200':\n          description: \u003e-\n            complaint updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ComplaintResponse'\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /coachLayouts:\n    get:\n      tags:\n        - Master Data\n      summary: Returns all coach layouts.\n      description: \u003e-\n        Retrieve the coach layout description needed for graphical reservation. The coach\n        layouts can either be retrieved as a complete list or specificity for a train identified via offerId and reservationId or fareId\n      operationId: getCoachLayouts\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - name: page\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \u003e-\n            coach layouts\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CoachLayoutCollectionResponse'\n          headers:\n            Expires:\n              schema:\n                type: string\n                description: \u003e-\n                  Gives the date/time after which the response is considered stale (in 'HTTP-date' format as defined by RFC 7231).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /coachLayouts/{layoutId}:\n    get:\n      tags:\n        - Master Data\n      summary: Returns a coach layout for a provided id.\n      description: \u003e-\n        Retrieve a coach layout description needed for graphical reservation for a given layout id.\n      operationId: getCoachLayoutsLayoutId\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - name: layoutId\n          in: path\n          description: \u003e-\n            id of the layout\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \u003e-\n            coach layouts\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CoachLayoutResponse'\n          headers:\n            Expires:\n              schema:\n                type: string\n                description: \u003e-\n                  Gives the date/time after which the response is considered stale (in 'HTTP-date' format as defined by RFC 7231).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /reductionCards:\n    get:\n      tags:\n        - Master Data\n      summary: Returns all reduction card definitions.\n      description: \u003e-\n        returns a collection of reduction card definitions\n      operationId: getReductionCards\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - name: page\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \u003e-\n            Reduction cards provided\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReductionCardCollectionResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n            Expires:\n              schema:\n                type: string\n                description: \u003e-\n                  Gives the date/time after which the response is considered stale (in 'HTTP-date' format as defined by RFC 7231).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /zones:\n    get:\n      tags:\n        - Master Data\n      summary: Returns all zone definitions.\n      operationId: getZones\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - name: page\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \u003e-\n            zones provided\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ZoneCollectionResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n            Expires:\n              schema:\n                type: string\n                description: \u003e-\n                  Gives the date/time after which the response is considered stale (in 'HTTP-date' format as defined by RFC 7231).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /bookings/{bookingId}/documents:\n    post:\n      tags:\n        - Document\n      summary: Allows adding a document to a booking.\n      operationId: createDocuments\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - name: bookingId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DocumentRequest'\n      responses:\n        '200':\n          description: \u003e-\n            TODO: Please add comment for response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DocumentCollectionResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /bookings/{bookingId}/documents/{documentId}:\n    get:\n      tags:\n        - Document\n      summary: returns a document from a booking\n      operationId: getDocument\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - name: bookingId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: documentId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \u003e-\n            TODO: Please add comment for response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DocumentResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n    delete:\n      tags:\n        - Document\n      summary: Delete a document from a booking.\n      operationId: deleteBookingsDocumentsId\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - $ref: '#/components/parameters/idempotencyKey'\n        - name: bookingId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: documentId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n    \n        '204':\n          $ref: '#/components/responses/NoContentResponse'\n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /bookings/{bookingId}/reimbursements:\n    post:\n      tags:\n        - Reimbursement Management\n      summary: Create reimbursement for a booking.\n      description: \u003e-\n        Create a reimbursement request for part of a booking.\n      operationId: createReimbursement\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - name: bookingId\n          in: path\n          required: true\n          schema:\n            type: string\n            nullable: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReimbursementRequest'\n      responses:\n        '200':\n          description: \u003e-\n            TODO: Please add comment for response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReimbursementResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /bookings/{bookingId}/reimbursements/{reimbursementId}:\n    get:\n      tags:\n        - Reimbursement Management\n      summary: Get reimbursement of a booking.\n      description: \u003e-\n        Get reimbursement including its current state.\n      operationId: getReimbursement\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - name: bookingId\n          in: path\n          required: true\n          schema:\n            type: string\n            nullable: false\n        - name: reimbursementId\n          in: path\n          required: true\n          schema:\n            type: string\n            nullable: false\n      responses:\n        '200':\n          description: \u003e-\n            TODO: Please add comment for response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReimbursementResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n    patch:\n      tags:\n        - Reimbursement Management\n      summary: Update reimbursement of a booking.\n      description: \u003e-\n        Update a reimbursement request, i.e add missing documents or change state.\n      operationId: updateReimbursement\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - name: bookingId\n          in: path\n          required: true\n          schema:\n            type: string\n            nullable: false\n        - name: reimbursementId\n          in: path\n          required: true\n          schema:\n            type: string\n            nullable: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReimbursementPatchRequest'\n      responses:\n        '200':\n          description: \u003e-\n            TODO: Please add comment for response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReimbursementResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /availabilities/placeMap:\n    get:\n      tags:\n        - Availabilities\n      summary: Get place map including availabilities.\n      description: \u003e-\n        Get place map including availabilities.\n      operationId: getAvailabilitiesPlaceMap\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - name: contextId\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: contextType\n          in: query\n          required: true\n          schema:\n            $ref: '#/components/schemas/ContextType' \n        - name: resourceId\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: resourceType\n          in: query\n          required: true\n          schema:\n            $ref: '#/components/schemas/ResourceType' \n      responses:\n        '200':\n          description: \u003e-\n            TODO: Please add comment for response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlaceAvailabilityResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /availabilities/nearby:\n    get:\n      tags:\n        - Availabilities\n      summary: Get availabilities nearby a given place.\n      description: \u003e-\n        Get availabilities nearby a given place.\n      operationId: getAvailabilitiesNearby\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - name: contextId\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: contextType\n          in: query\n          required: true\n          schema:\n            $ref: '#/components/schemas/ContextType' \n        - name: resourceId\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: resourceType\n          in: query\n          required: true\n          schema:\n            $ref: '#/components/schemas/ResourceType' \n      responses:\n        '200':\n          description: \u003e-\n            TODO: Please add comment for response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlaceAvailabilityCollectionResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /availabilities/preferences:\n    get:\n      tags:\n        - Availabilities\n      summary: Get availabilities for a set of preferences.\n      description: \u003e-\n        Get availabilities for a set of preferences.\n      operationId: getAvailabilitiesPreferences\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - name: contextId\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: contextType\n          in: query\n          required: true\n          schema:\n            $ref: '#/components/schemas/ContextType' \n        - name: resourceId\n          in: query\n          required: true\n          schema:\n            type: string\n        - name: resourceType\n          in: query\n          required: true\n          schema:\n            $ref: '#/components/schemas/ResourceType' \n      responses:\n        '200':\n          description: \u003e-\n            TODO: Please add comment for response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlaceAvailabilityCollectionResponse'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /products:\n    get:\n      tags:\n        - Master Data\n      summary: Returns all products.\n      operationId: getProducts\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - name: page\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \u003e-\n            Product found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductCollectionResponse'\n          headers:\n            Cache-Control:\n              schema:\n                type: string\n                default: 'public, max-age=10000'\n                description: \u003e-\n                  Resource is fairly persistent and has a medium time to live to allow short-term caching.\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n  /products/{productId}:\n    get:\n      tags:\n        - Master Data\n      summary: Returns a product for the provided id.\n      operationId: getProductsId\n      parameters:\n        - $ref: '#/components/parameters/requestor'\n        - $ref: '#/components/parameters/acceptLanguage'\n        - $ref: '#/components/parameters/traceParent'\n        - $ref: '#/components/parameters/traceState'\n        - name: productId\n          in: path\n          description: \u003e-\n            id of the product to get\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: \u003e-\n            Product found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductResponse'\n          headers:\n            Cache-Control:\n              schema:\n                type: string\n                default: 'public, max-age=10000'\n                description: \u003e-\n                  Resource is fairly persistent and has a medium time to live to allow short-term caching.\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n    \n    \n        '400':\n          $ref: '#/components/responses/BadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        '403':\n          $ref: '#/components/responses/ForbiddenResponse'\n        '404':\n          $ref: '#/components/responses/NotFoundResponse'\n        '406':\n          $ref: '#/components/responses/NotAcceptableResponse'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaTypeResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n        '501':\n          $ref: '#/components/responses/NotImplementedResponse'\n        '503':\n          $ref: '#/components/responses/ServiceUnavailableResponse'\n        'default':\n          $ref: '#/components/responses/DefaultErrorResponse'\n\n\nsecurity:\n  - oAuth2ClientCredentials: []\n\ncomponents:\n  securitySchemes:\n    oAuth2ClientCredentials:\n      type: oauth2\n      description: \u003e-\n        See https://swagger.io/docs/specification/authentication/oauth2/\n      flows:\n        clientCredentials:\n          tokenUrl: 'https://login.microsoftonline.com/tbd'\n          refreshUrl: 'https://refresh.url/tbd'\n          scopes: {}\n\n  parameters:\n    acceptLanguage:\n      name: Accept-Language\n      in: header\n      description: \u003e-\n        Describes the set of natural languages that are preferred for localized text in the response\n        to the request (see RFC2616-sec14.4). Supporting English (en) is a must.\n      schema:\n        type: string\n\n    idempotencyKey:\n      name: Idempotency-Key\n      in: header\n      description: \u003e-\n        The HTTP Idempotency request header field can be used to carry idempotency key in order to make\n        non-idempotent HTTP methods such as POST or PATCH fault-tolerant.\n      schema:\n        type: string\n\n    requestor:\n      name: Requestor\n      in: header\n      description: \u003e-\n        The requestor header contains detailed information about who is calling the API. It can include information such as channel, organization, sales unit or workstation id and be used to configure e.g. the fare range provided to the caller. The content of the string is part of a bilateral contract by the two parties and not standardized by OSDM. It is recommend to encrypt the information transferred.\n      schema:\n        type: string\n      required: true\n\n    traceParent:\n      name: traceparent\n      in: header\n      description: \u003e-\n        The traceparent header describes the position of the incoming request in its trace graph in a portable,\n        fixed-length format. Its design focuses on fast parsing. Every tracing tool MUST properly set\n        traceparent even when it only relies on vendor-specific information in tracestate (see W3C Trace Context).\n      schema:\n        type: string\n\n    traceState:\n      name: tracestate\n      in: header\n      description: \u003e-\n        The tracestate extends traceparent with vendor-specific data represented by a set of name/value pairs.\n        Storing information in tracestate is optional (see W3C Trace Context).\n      schema:\n        type: string\n\n  responses:\n    NoContentResponse:\n      description: \u003e-\n        No Content (204)\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n\n    BadRequestResponse:\n      description: \u003e-\n        Bad Request (400)\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n\n    UnauthorizedResponse:\n      description: \u003e-\n        Unauthorized (401)\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n\n    ForbiddenResponse:\n      description: \u003e-\n        Forbidden (403)\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n\n    NotFoundResponse:\n      description: \u003e-\n        Not Found (404)\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n\n    NotAcceptableResponse:\n      description: \u003e-\n        Not Acceptable (406)\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n\n    ConflictResponse:\n      description: \u003e-\n        Conflict (409)\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n\n    UnsupportedMediaTypeResponse:\n      description: \u003e-\n        Unsupported Media Type (415)\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n\n    InternalServerErrorResponse:\n      description: \u003e-\n        Internal Server Error (500)\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n\n    NotImplementedResponse:\n      description: \u003e-\n        Not Implemented (501)\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n\n    ServiceUnavailableResponse:\n      description: \u003e-\n        Service Unavailable (503)\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n\n    DefaultErrorResponse:\n      description: \u003e-\n        default error response\n      content:\n        application/problem+json:\n          schema:\n            $ref: '#/components/schemas/Problem'\n\n    FulfillmentRequestAcceptedResponse:\n      description: \u003e-\n        Fulfillment successfully initiated, retrieve booking to retrieve the fulfillment documents\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/WarningCollection'\n\n\n  schemas:\n    WarningCollection:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        List of warnings.\n        \n      properties:\n        warnings:\n          type: array\n          items:\n            $ref: '#/components/schemas/Warning'\n\n    Warning:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        This element can be used to pass non-blocking information or events,\n        such as a price difference with the initially offered price at booking time.\n        It is inspired on the JSon problem structure.\n      required:\n        - code\n      properties:\n        code:\n          type: string\n          nullable: false\n        type:\n          description: \u003e-\n            An absolute URI that identifies the warning type. When dereferenced,\n            it SHOULD provide human-readable documentation for the problem type\n            (e.g., using HTML).\n          type: string\n          format: uri\n          default: 'about:blank'\n          example: https://example.com/warns/price-updated\n        detail:\n          description: \u003e-\n            A human readable explanation specific to this occurrence of the\n            warning.\n          type: string\n          example: The price of the given offer part has been updated during the booking operation\n        instance:\n          description: \u003e-\n            An absolute URI that identifies the specific occurrence of the warning.\n          type: string\n          format: uri\n          example: offers/offer1234\n\n    PlaceResponse:\n      type: object\n      additionalProperties: false\n      required:\n        - places\n      properties:\n        warnings:\n          $ref: '#/components/schemas/WarningCollection'\n        places:\n          type: array\n          items:\n            $ref: '#/components/schemas/Place'\n          minItems: 1\n\n    TripResponse:\n      type: object\n      additionalProperties: false\n      required:\n        - trip\n      properties:\n        warnings:\n          $ref: '#/components/schemas/WarningCollection'\n        trip:\n          $ref: '#/components/schemas/Trip'\n\n    PlaceRequest:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Initial input for the place information request. This input defines what is originally looked for.\n        Provided by OJP.\n      properties:\n        placeInput:\n          $ref: '#/components/schemas/InitialPlaceInput'\n        restrictions:\n          $ref: '#/components/schemas/PlaceParam'\n\n    PlaceParam:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        More parameters for restricting the request. Provided by OJP.\n      properties:\n        type:\n          $ref: '#/components/schemas/PlaceType'\n        usage:\n          $ref: '#/components/schemas/PlaceUsage'\n        ptModes:\n          $ref: '#/components/schemas/ModeFilter'\n        serviceBrandFilter:\n          $ref: '#/components/schemas/ServiceBrandFilter'\n        carrierFilter:\n          $ref: '#/components/schemas/CarrierFilter'\n        pointOfInterestFilter:\n          $ref: '#/components/schemas/PointOfInterestFilter'\n        numberOfResults:\n          description: \u003e-\n            Maximum number of results to be returned. The service is allowed to return fewer objects if reasonable\n            or otherwise appropriate.\n          type: integer\n          format: int32\n          minimum: 1\n\n    PlaceType:\n      description: \u003e-\n        Provided by OJP.\n      type: string\n      enum:\n        - STOP\n        - ADDRESS\n        - POI\n        - GEO_COORDINATE\n        - TOPOGRAPHIC_PLACE\n\n    PlaceUsage:\n      description: \u003e-\n        Provided by OJP.\n      type: string\n      enum:\n        - ORIGIN\n        - VIA\n        - DESTINATION\n\n    InitialPlaceInput:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Initial input for the place information request. This input defines what is originally looked for.\n        Provided by OJP.\n      properties:\n        name:\n          description: \u003e-\n            Name of the place object which is looked after. This is usually the user's input. If not given,\n            the name of the resulting place objects is not relevant.\n          type: string\n          example: Bern Bärengraben\n        geoPosition:\n          $ref: '#/components/schemas/GeoPosition'\n\n    TripSearchCriteria:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Trip request structure. Provided by OJP.\n      required:\n        - origin\n        - destination\n      properties:\n        departureTime:\n          type: string\n          format: date-time\n        arrivalTime:\n          description: \u003e-\n            requested arrival time. If arrival time is provided the departure time must be omitted.\n          type: string\n          format: date-time\n        origin:\n          $ref: '#/components/schemas/PlaceRef'\n        destination:\n          $ref: '#/components/schemas/PlaceRef'\n        vias:\n          description: \u003e-\n            Ordered series of points where the journey must pass through. If more\n            than one via point is given all of them must be obeyed - in the correct\n            order. The server is allowed to replace a via stop by equivalent stops.\n          type: array\n          items:\n            $ref: '#/components/schemas/TripVia'\n        parameters:\n          $ref: '#/components/schemas/TripParameters'\n        embed:\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only. Proposed default ALL\n          type: array\n          items:\n            $ref: '#/components/schemas/TripsCollectionResponseContent'\n        returnSearchParameters:\n          $ref: '#/components/schemas/ReturnSearchParameters'\n\n    TripVia:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Via restrictions for a trip. Provided by OJP.\n      required:\n        - viaPoint\n      properties:\n        viaPoint:\n          $ref: '#/components/schemas/PlaceRef'\n        dwellTime:\n          description: \u003e-\n            desired dwell time at the via place\n          type: string\n          format: duration\n          example: 30M\n\n    BaseTripPolicyFilter:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Policies that control the trip search behavior for both public and individual transport.\n        Provided by OJP.\n      properties:\n        noSingleStep:\n          description: \u003e-\n            The user is not able to climb one step, i.e. wheel chair.\n          type: boolean\n          default: false\n        noSight:\n          description: \u003e-\n            The user is not able to see.\n          type: boolean\n          default: false\n\n    TripMobilityFilter:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Base mobility options to be applied for both public and individual transport.\n        Provided by OJP.\n      properties:\n        bikeTransport:\n          description: \u003e-\n            The user wants to carry a bike on public transport.\n          type: boolean\n          default: false\n        walkSpeed:\n          description: \u003e-\n            Deviation from average walk speed in percent. 100% percent is average speed.\n          type: integer\n          format: int32\n          default: 100\n        additionalTransferTime:\n          description: \u003e-\n            Additional time added to all transfers (also to transfers between individual to\n            public transport).\n          type: string\n          format: duration\n          example: 0S\n        minimalTransferTime:\n          type: string\n          format: duration\n\n    ModeFilter:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        List of public transport modes to include or exclude. Provided by OJP.\n      properties:\n        exclude:\n          description: \u003e-\n            Whether modes in list are to include or exclude from search.\n          type: boolean\n          default: true\n        transportModes:\n          description: \u003e-\n            List of Transport modes to include/exclude.\n          type: array\n          items:\n            $ref: '#/components/schemas/Mode'\n\n    CarrierFilter:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Filter for in/exclusion of carriers. Provided by OJP.\n      properties:\n        exclude:\n          description: \u003e-\n            Whether carrier in list are to include or exclude from search.\n          type: boolean\n          default: true\n        carriers:\n          description: \u003e-\n            Reference to carrier\n          type: array\n          items:\n            $ref: '#/components/schemas/CompanyRef'\n\n    ServiceBrandFilter:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Filter for in/exclusion of service brands. Provided by OJP.\n      properties:\n        exclude:\n          description: \u003e-\n            Whether service brand in list are to include or exclude from search.\n          type: boolean\n          default: true\n        serviceBrands:\n          description: \u003e-\n            Reference to service brand codes\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceBrandCode'\n\n    VehicleFilter:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Filter for in/exclusion of vehicle based on vehicle number or line number.\n      properties:\n        exclude:\n          description: \u003e-\n            Whether vehicle in list is to include or exclude from search.\n          type: boolean\n          default: true\n        vehicleNumbers:\n          type: array\n          items:\n            $ref: '#/components/schemas/VehicleNumber'\n        lineNumbers:\n          type: array\n          items:\n            $ref: '#/components/schemas/LineNumber'\n\n    PointOfInterestFilter:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Filter POIs by category. Provided by OJP.\n      properties:\n        exclude:\n          description: \u003e-\n            Whether carriers are to be included or excluded from the filtering.\n          type: boolean\n          default: true\n        pointOfInterestCategory:\n          description: \u003e-\n            These POI categories can be used to filter POIs. If more than one is given the filtering\n            is by logical 'OR' (when Exclude=FALSE) and logical 'AND' (when Exclude=TRUE).\n          type: array\n          items:\n            $ref: '#/components/schemas/PointOfInterestCategory'\n\n    TripDataFilter:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Data to be included/excluded from search, f.e. modes, carriers. Provided by OJP.\n      properties:\n        ptModeFilter:\n          $ref: '#/components/schemas/ModeFilter'\n        carrierFilter:\n          $ref: '#/components/schemas/CarrierFilter'\n        serviceBrandFilter:\n          $ref: '#/components/schemas/ServiceBrandFilter'\n        vehicleFilter:\n          $ref: '#/components/schemas/VehicleFilter'\n\n    TripParameters:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Options to control the search behavior and response contents.\n        number of results \u003e either number of results or number of results before and after are used.\n        Provided by OJP.\n      properties:\n        dataFilter:\n          $ref: '#/components/schemas/TripDataFilter'\n        policyFilter:\n          $ref: '#/components/schemas/BaseTripPolicyFilter'\n        mobilityFilter:\n          $ref: '#/components/schemas/TripMobilityFilter'\n        numberOfResults:\n          type: integer\n          format: int32\n          default: 5\n        numberOfResultsBefore:\n          type: integer\n          format: int32\n          default: 0\n        numberOfResultsAfter:\n          type: integer\n          format: int32\n          default: 5\n        ignoreRealtimeData:\n          type: boolean\n          default: false\n        transferLimit:\n          description: \u003e-\n            The maximum number of interchanges the user will accept per trip.\n          type: integer\n          format: int32\n          minimum: 0\n        itModesToCover:\n          $ref: '#/components/schemas/IndividualMode'\n\n    TripCollectionResponse:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Trip response structure. Provided by OJP.\n      required:\n        - id\n      properties:\n        warning:\n          $ref: '#/components/schemas/WarningCollection'\n        id:\n          type: string\n          nullable: false\n        trips:\n          type: array\n          items:\n            $ref: '#/components/schemas/Trip'\n        tripSummaries:\n          type: array\n          items:\n            $ref: '#/components/schemas/TripSummary'\n        _links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n\n    Trip:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        A complete trip from origin to destination. Provided by OJP.\n      required:\n        - id\n        - duration\n        - direction\n        - startTime\n        - endTime\n        - transfers\n        - legs\n      properties:\n        id:\n          description: \u003e-\n            Id of this trip for referencing purposes. Unique within a trip.\n          type: string\n          nullable: false\n        externalRef:\n          description: \u003e-\n            External reference of this trip for referencing purposes.\n          type: string\n        summary:\n          description: \u003e-\n            A human-readable description of the trip.\n          type: string\n        duration:\n          description: \u003e-\n            Overall duration of the trip\n          type: string\n          format: duration\n          nullable: false\n          example: PT20M\n        direction:\n          $ref: '#/components/schemas/TripDirectionType'\n        origin:\n          $ref: '#/components/schemas/PlaceRef'\n        destination:\n          $ref: '#/components/schemas/PlaceRef'\n        startTime:\n          description: \u003e-\n            Departure time at origin.\n          type: string\n          format: date-time\n          nullable: false\n        endTime:\n          description: \u003e-\n            Arrival time at destination\n          type: string\n          format: date-time\n          nullable: false\n        transfers:\n          description: \u003e-\n            Number of interchanges\n          type: integer\n          format: int32\n          minimum: 0\n          nullable: false\n        distance:\n          description: \u003e-\n            Distance in meters over the the complete trip, i.e., including transfer legs.\n          type: integer\n          format: int32\n          minimum: 0\n        legs:\n          description: \u003e-\n            Legs ot the trip\n          type: array\n          items:\n            $ref: '#/components/schemas/TripLeg'\n          minItems: 1\n        operatingDays:\n          $ref: '#/components/schemas/OperatingDays'\n        operatingDaysDescription:\n          description: \u003e-\n            Textual description of the operation days, e.g. 'Monday to Friday' or 'Not on holidays'.\n          type: string\n        situationFullRefs:\n          type: array\n          items:\n            $ref: '#/components/schemas/SituationFullRef'\n        tripStatus:\n          $ref: '#/components/schemas/TripStatus'\n        _links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n\n    TripSummary:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Trip summary. Provided by OJP.\n      required:\n        - id\n        - startTime\n        - endTime\n        - duration\n        - destination\n        - transfers\n        - distance\n      properties:\n        id:\n          description: \u003e-\n            Id of this trip for referencing purposes. Unique within trip response.\n          type: string\n          nullable: false\n        startTime:\n          description: \u003e-\n            Departure time at origin.\n          type: string\n          format: date-time\n          nullable: false\n        endTime:\n          description: \u003e-\n            Arrival time at destination.\n          type: string\n          format: date-time\n          nullable: false\n        duration:\n          description: \u003e-\n            Overall duration of the trip.\n          type: string\n          format: duration\n          nullable: false\n        origin:\n          $ref: '#/components/schemas/PlaceRef'\n        destination:\n          $ref: '#/components/schemas/PlaceRef'\n        transfers:\n          type: integer\n          format: int32\n          nullable: false\n        distance:\n          type: integer\n          format: int32\n          nullable: false\n\n    TripStatus:\n      type: object\n      additionalProperties: false\n      properties:\n        unplanned:\n          description: \u003e-\n            Whether this trip is an additional one that has not been planned.\n          type: boolean\n          default: false\n        cancelled:\n          description: \u003e-\n            Whether this trip is cancelled and will not be run.\n          type: boolean\n          default: false\n        deviation:\n          description: \u003e-\n            Whether this trip deviates from the planned service pattern.\n          type: boolean\n          default: false\n        delayed:\n          description: \u003e-\n            Whether this trip is delayed.\n          type: boolean\n          default: false\n        infeasible:\n          description: \u003e-\n            Whether this trip cannot be used, due to operational delays and impossible transfers.\n          type: boolean\n          default: false\n\n    TripSpecification:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        A minimal trip specification from origin to destination.\n      required:\n        - legs\n        - isPartOfInternationalTrip\n      properties:\n        externalRef:\n          description: \u003e-\n            External reference of this trip for referencing purposes. Unique within a trip specification.\n          type: string\n        legs:\n          type: array\n          items:\n            $ref: '#/components/schemas/TripLegSpecification'\n          minItems: 1\n        isPartOfInternationalTrip:\n          type: boolean\n          nullable: false\n          default: false\n\n    OperatingDays:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Day of public transport operation of which the characteristics are defined in a specific\n        service calendar and which may last more than 24 hours. Provided by OJP.\n      required:\n        - from\n        - until\n        - pattern\n      properties:\n        from:\n          description: \u003e-\n            Start date of period\n          type: string\n          format: date-time\n          nullable: false\n        until:\n          description: \u003e-\n            End date of period\n          type: string\n          format: date-time\n          nullable: false\n        pattern:\n          description: \u003e-\n            Bit pattern for operating days between start date and end date.\n            The length of the pattern is equal to the number of days from\n            start date to end date. A bit value of '1' indicates that an event\n            actually happens on the day that is represented by the bit position.\n          type: string\n          nullable: false\n\n    TripLeg:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        A single stage of a trip that is made without change of MODE or service (ie:\n        between each interchange). Provided by OJP.\n      required:\n        - id\n      properties:\n        id:\n          description: \u003e-\n            Id of this trip leg. Unique within trip result. A seqId is a leg id.\n          type: string\n          nullable: false\n        externalRef:\n          description: \u003e-\n            External reference of this tripLeg for referencing purposes.\n          type: string\n        timedLeg:\n          $ref: '#/components/schemas/TimedLeg'\n        transferLeg:\n          $ref: '#/components/schemas/TransferLeg'\n        continuousLeg:\n          $ref: '#/components/schemas/ContinuousLeg'\n\n    TripLegSpecification:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        A minimal trip leg specification.\n      properties:\n        externalRef:\n          description: \u003e-\n            External reference of this trip leg. Unique within trip result.\n          type: string\n        timedLeg:\n          $ref: '#/components/schemas/TimedLegSpecification'\n        transferLeg:\n          $ref: '#/components/schemas/TransferLeg'\n\n    TimedLeg:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        A leg which is bound to a timetabled schedule. Corresponds to a ride. Provided by OJP.\n      required:\n        - start\n        - end\n        - service\n      properties:\n        start:\n          $ref: '#/components/schemas/Board'\n        intermediates:\n          type: array\n          items:\n            $ref: '#/components/schemas/Intermediate'\n        end:\n          $ref: '#/components/schemas/Alight'\n        service:\n          $ref: '#/components/schemas/DatedJourney'\n        operatingDays:\n          $ref: '#/components/schemas/OperatingDays'\n        operatingDaysDescription:\n          description: \u003e-\n            Textual description of the operation days, e.g. 'Monday to Friday' or 'not on holidays'.\n          type: string\n        duration:\n          type: string\n          format: duration\n        co2Emission:\n          $ref: '#/components/schemas/Quantity'\n\n    TimedLegSpecification:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        A minimal timed leg specification.\n      required:\n        - start\n        - end\n        - service\n      properties:\n        start:\n          $ref: '#/components/schemas/BoardSpecification'\n        intermediates:\n          type: array\n          items:\n            $ref: '#/components/schemas/IntermediateSpecification'\n        end:\n          $ref: '#/components/schemas/AlightSpecification'\n        service:\n          $ref: '#/components/schemas/DatedJourney'\n\n    TransferLeg:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        A leg which links other legs of a trip where a transfer between different places is required.\n        Provided by OJP.\n      required:\n        - start\n        - end\n      properties:\n        continuousMode:\n          $ref: '#/components/schemas/ContinuousMode'\n        transferMode:\n          $ref: '#/components/schemas/TransferMode'\n        start:\n          $ref: '#/components/schemas/PlaceRef'\n        end:\n          $ref: '#/components/schemas/PlaceRef'\n        timeWindowStart:\n          description: \u003e-\n            Time at which window begins.\n          type: string\n          format: date-time\n        timeWindowEnd:\n          description: \u003e-\n            Time at which window ends.\n          type: string\n          format: date-time\n        duration:\n          description: \u003e-\n            Overall duration of this interchange.\n          type: string\n          format: duration\n          example: PT20M\n        situationFullRefs:\n          type: array\n          items:\n            $ref: '#/components/schemas/SituationFullRef'\n        co2Emission:\n          $ref: '#/components/schemas/Quantity'\n\n    ContinuousLeg:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        A leg of a journey that is not bound to a timetable. Provided by OJP.\n      required:\n        - start\n        - end\n        - service\n      properties:\n        start:\n          $ref: '#/components/schemas/Place'\n        end:\n          $ref: '#/components/schemas/Place'\n        service:\n          $ref: '#/components/schemas/ContinuousService'\n        timeWindowStart:\n          description: \u003e-\n            Time at which window begins.\n          type: string\n          format: date-time\n        timeWindowEnd:\n          description: \u003e-\n            Time at which window ends.\n          type: string\n          format: date-time\n        duration:\n          description: \u003e-\n            Duration of this leg according to user preferences like walk speed.\n          type: string\n          format: duration\n          example: 1800S\n        situationFullRefs:\n          type: array\n          items:\n            $ref: '#/components/schemas/SituationFullRef'\n        co2Emission:\n          $ref: '#/components/schemas/Quantity'\n\n    ContinuousService:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        A vehicle movement on a continuous, non-timetabled service.\n        Service of this leg. May be 'walk' in most cases, but also cycling or taxi etc.\n        Provided by OJP.\n      required:\n        - operatingDayRef\n        - journeyRef\n        - mode\n        - publishedServiceName\n        - originText\n        - destinationText\n      properties:\n        continuousMode:\n          $ref: '#/components/schemas/ContinuousMode'\n        individualMode:\n          $ref: '#/components/schemas/IndividualMode'\n        operatingDayRef:\n          $ref: '#/components/schemas/OperationDayRef'\n        journeyRef:\n          $ref: '#/components/schemas/JourneyRef'\n        mode:\n          type: string\n          nullable: false\n          example: Ask Stefan\n        publishedServiceName:\n          type: string\n          nullable: false\n          example: Circle Line\n        originText:\n          type: string\n          nullable: false\n        destinationText:\n          type: string\n          nullable: false\n\n    ContinuousMode:\n      description: \u003e-\n        Types of modes that run at any time without a timetable. Provided by OJP.\n      type: string\n      x-extensible-enum:\n        - WALK\n        - DEMAND_RESPONSIVE\n        - REPLACEMENT_SERVICE\n\n    IndividualMode:\n      description: \u003e-\n        Modes which an individual powers themselves (such as walk, cycle). Provided by OJP.\n      type: string\n      x-extensible-enum:\n        - WALK\n        - CYCLE\n        - TAXI\n        - SELF_DRIVE_CAR\n        - OTHERS_DRIVE_CAR\n        - MOTORCYCLE\n        - TRUCK\n        - SCOOTER\n        - RIDE_POOL_CAR\n        - CAR_SHARING\n        - CYCLE_SHARING\n        - SCOOTER_SHARING\n\n    TransferMode:\n      description: \u003e-\n        Modes dedicated to perform transfers. Provided by OJP.\n      type: string\n      x-extensible-enum:\n        - WALK\n        - PARK_AND_RIDE\n        - BIKE_AND_RIDE\n        - CAR_HIRE\n        - BIKE_HIRE\n        - PROTECTED_CONNECTION\n        - GUARANTEED_CONNECTION\n        - REMAIN_IN_VEHICLE\n        - CHANGE_WITHIN_VEHICLE\n        - CHECK_IN\n        - CHECK_OUT\n\n    StopCallStatus:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Status properties for the vehicle call at this stop. Provided by OJP.\n      properties:\n        order:\n          description: \u003e-\n            Sequence number of this stop in the service pattern of the journey.\n          type: integer\n          format: int32\n          minimum: 1\n        requestStop:\n          description: \u003e-\n            The vehicle journey calls at this stop only on demand.\n          type: boolean\n          default: false\n        unplannedStop:\n          description: \u003e-\n            This stop has not been planned by the planning department.\n          type: boolean\n          default: false\n        notServicedStop:\n          description: \u003e-\n            The vehicle will not call at this stop despite earlier planning.\n          type: boolean\n          default: false\n        noBoardingAtStop:\n          description: \u003e-\n            Boarding will not be allowed at this stop of this journey.\n          type: boolean\n          default: false\n        noAlightingAtStop:\n          description: \u003e-\n            Alighting will not be allowed at this stop of this journey.\n          type: boolean\n          default: false\n\n    Board:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Describes the the situation at a stop or station at which the passenger boards a Leg\n        of a trip including time-related information. Provided by OJP.\n      required:\n        - stopPlaceRef\n        - stopPlaceName\n        - serviceDeparture\n      properties:\n        stopPlaceRef:\n          $ref: '#/components/schemas/StopPlaceRef'\n        stopPlaceName:\n          type: string\n          nullable: false\n          example: Luzern\n        plannedStopPointName:\n          description: \u003e-\n            Name of the bay/quay/terminal where to board/alight from the vehicle. According to\n            planned timetable.\n          type: string\n          example: 3\n        estimatedStopPointName:\n          description: \u003e-\n            Name of the bay/quay/terminal where to board the vehicle. As to the latest realtime status.\n          type: string\n          example: 8\n        serviceDeparture:\n          $ref: '#/components/schemas/ServiceTime'\n        status:\n          $ref: '#/components/schemas/StopCallStatus'\n        attributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceAttribute'\n\n    BoardSpecification:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Minimal board specification.\n      required:\n        - stopPlaceRef\n        - serviceDeparture\n      properties:\n        stopPlaceRef:\n          $ref: '#/components/schemas/StopPlaceRef'\n        serviceDeparture:\n          $ref: '#/components/schemas/ServiceTime'\n\n    Intermediate:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Describes the situation at a stop or station that lies between the Board and\n        Alight stop or station including time-related information. Provided by OJP.\n      required:\n        - stopPlaceRef\n        - stopPlaceName\n        - serviceArrival\n        - serviceDeparture\n      properties:\n        stopPlaceRef:\n          $ref: '#/components/schemas/StopPlaceRef'\n        stopPlaceName:\n          type: string\n          nullable: false\n          example: Luzern\n        plannedStopPointName:\n          description: \u003e-\n            Name of the bay/quay/terminal where to board/alight from the vehicle. According to\n            planned timetable.\n          type: string\n          example: 3\n        estimatedStopPointName:\n          description: \u003e-\n            Name of the bay/quay/terminal where to board the vehicle. As to the latest realtime status.\n          type: string\n          example: 8\n        serviceArrival:\n          $ref: '#/components/schemas/ServiceTime'\n        serviceDeparture:\n          $ref: '#/components/schemas/ServiceTime'\n        status:\n          $ref: '#/components/schemas/StopCallStatus'\n        attributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceAttribute'\n\n    IntermediateSpecification:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Minimal intermediate specification.\n      required:\n        - stopPlaceRef\n        - serviceArrival\n        - serviceDeparture\n      properties:\n        stopPlaceRef:\n          $ref: '#/components/schemas/StopPlaceRef'\n        serviceArrival:\n          $ref: '#/components/schemas/ServiceTime'\n        serviceDeparture:\n          $ref: '#/components/schemas/ServiceTime'\n\n    Alight:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Describes the situation at a stop or station at which the passenger alights from a Leg\n        of a trip including time-related information. Provided by OJP.\n      required:\n        - stopPlaceRef\n        - stopPlaceName\n        - serviceArrival\n      properties:\n        stopPlaceRef:\n          $ref: '#/components/schemas/StopPlaceRef'\n        stopPlaceName:\n          type: string\n          nullable: false\n          example: Luzern\n        plannedStopPointName:\n          description: \u003e-\n            Name of the bay/quay/terminal where to board/alight from the vehicle. According to\n            planned timetable.\n          type: string\n          example: 3\n        estimatedStopPointName:\n          description: \u003e-\n            Name of the bay/quay/terminal where to board the vehicle. As to the latest realtime status.\n          type: string\n          example: 8\n        serviceArrival:\n          $ref: '#/components/schemas/ServiceTime'\n        status:\n          $ref: '#/components/schemas/StopCallStatus'\n        attributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceAttribute'\n\n    AlightSpecification:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Minimal alight specification\n      required:\n        - stopPlaceRef\n        - serviceArrival\n      properties:\n        stopPlaceRef:\n          $ref: '#/components/schemas/StopPlaceRef'\n        serviceArrival:\n          $ref: '#/components/schemas/ServiceTime'\n\n    ServiceTime:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Contains at least scheduled time, but can contain real time and estimated times. Provided by OJP.\n      required:\n        - timetabledTime\n      properties:\n        timetabledTime:\n          type: string\n          format: date-time\n          nullable: false\n        estimatedTime:\n          type: string\n          format: date-time\n        observedTime:\n          type: string\n          format: date-time\n\n    DatedJourney:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Vehicle journey that runs at a specific date. Provided by OJP.\n      required:\n        - vehicleNumbers\n        - carriers\n      properties:\n        operatingDayRef:\n          $ref: '#/components/schemas/OperationDayRef'\n        mode:\n          $ref: '#/components/schemas/Mode'\n        productCategory:\n          $ref: '#/components/schemas/ProductCategory'\n        publishedServiceName:\n          description: \u003e-\n            Line name or service description as known to the public, f.e. '512', 'S8'\n            or 'Circle Line' or 'ICE 488'.\n          type: string\n          example: S1\n        vehicleNumbers:\n          type: array\n          items:\n            $ref: '#/components/schemas/VehicleNumber'\n          minItems: 1\n        lineNumbers:\n          type: array\n          items:\n            $ref: '#/components/schemas/LineNumber'\n        serviceStatus:\n          $ref: '#/components/schemas/ServiceStatus'\n        situationFullRefs:\n          type: array\n          items:\n            $ref: '#/components/schemas/SituationFullRef'\n        carriers:\n          type: array\n          items:\n            $ref: '#/components/schemas/NamedCompany'\n          minItems: 1\n\n    Mode:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        A method of transportation such as bus, rail, etc. Provided by OJP.\n      required:\n        - ptMode\n      properties:\n        ptMode:\n          $ref: '#/components/schemas/PTMode'\n        name:\n          description: \u003e-\n            Name of the mode\n          type: string\n          example: rail\n        shortName:\n          description: \u003e-\n            Short name or acronym of the mode\n          type: string\n          example: S\n        description:\n          description: \u003e-\n            Additional text that further describes the mode\n          type: string\n\n    PTMode:\n      description: \u003e-\n        TAP-TSI/UIC contains a sensible subset of SIRI Transport Modes.\n      type: string\n      x-extensible-enum:\n        - HIGH_SPEED_TRAIN\n        - HISTORIC_TRAIN\n        - INTERCITY\n        - REGIONAL\n        - INTERREGIONAL\n        - URBAN\n        - TRAM\n        - UNDERGROUND\n        - NIGHT_TRAIN\n        - SHARED_TAXI\n        - MOTOR_RAIL\n        - MOUNTAIN_TRAIN\n        - PLANE\n        - COACH_GROUP\n        - SHIP\n        - BUS\n\n    ProductCategory:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Product category based on NeTEx/SIRI. A product category is a classification for vehicle journeys\n        to express some common properties of journeys for marketing and fare products. Provided by OJP.\n      required:\n        - name\n        - shortName\n        - productCategoryRef\n      properties:\n        name:\n          description: \u003e-\n            Full name of this product category, e.g. 'TGV Lyria' in Switzerland and France.\n            UIC: Long name of Service Brand\n          type: string\n          nullable: false\n          example: TGV Lyria\n        shortName:\n          description: \u003e-\n            Short name or acronym of the product category, likely to be published, e.g. 'TGV'\n            UIC: Abbreviation of Service Brand\n          type: string\n          nullable: false\n          example: TGV\n        productCategoryRef:\n          $ref: '#/components/schemas/ProductCategoryRef'\n\n    ServiceStatus:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Parameters which describe the current status of a dated vehicle journey.\n        Provided by OJP.\n      properties:\n        unplanned:\n          description: \u003e-\n            Whether this trip is an additional one that has not been planned.\n          type: boolean\n          default: false\n        cancelled:\n          description: \u003e-\n            Whether this trip is cancelled and will not be run.\n          type: boolean\n          default: false\n        deviation:\n          description: \u003e-\n            Whether this trip deviates from the planned service pattern.\n          type: boolean\n          default: false\n        occupancy:\n          description: \u003e-\n            Passenger load status on vehicle. If omitted, not known.\n            Equivalent to siri:OccupancyEnumeration which describes three values:\n            'full', 'seatingAvailable' and 'standingAvailable'.\n          type: string\n\n    Place:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        A geographic place of any type which may be specified as the origin or destination of a trip. Provided by OJP.\n      required:\n        - id\n      properties:\n        id:\n          description: \u003e-\n            id  defining the place. The code is provided as URN, relative URNs are allowed with base path urn:uic:stn '0850000'\n          type: string\n          nullable: false\n          example: urn:uic:stn:8500000\n        alternativeIds:\n          description: \u003e-\n            For a place with ids in different reference systems, the alternative ids can be returned. \n            The reference system is encoded in the string. E.g.: \"urn:uic:std:80000\", \"x_swe:stn:10000\", \"ch:1:sloid:343434\"\n          type: array\n          items:\n            type: string\n        name:\n          type: string\n          example: Zürich HB\n        address:\n          $ref: '#/components/schemas/Address'\n        pointOfInterest:\n          $ref: '#/components/schemas/PointOfInterest'\n        stopPlace:\n          $ref: '#/components/schemas/StopPlace'\n        fareConnectionPoint:\n          $ref: '#/components/schemas/FareConnectionPoint'\n        geoPosition:\n          $ref: '#/components/schemas/GeoPosition'\n        _links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n\n    Address:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        A descriptive data associated with a place that can be used to describe the unique geographical context of a\n        place for the purposes of identifying it. may be refined as either a road address, a postal address or both.\n        Provided by OJP.\n      properties:\n        code:\n          description: \u003e-\n            id of the address\n          type: string\n          example: NL:1916200000022621\n        name:\n          description: \u003e-\n            Name or description of address for use in passenger information.\n          type: string\n          example: Oude Trambaan 7, 2265CA Leidschendam, Nederland\n        countryName:\n          description: \u003e-\n            Country of the address.\n          type: string\n          example: The Netherlands\n        countryCode:\n          $ref: '#/components/schemas/CountryCode'\n        postCode:\n          description: \u003e-\n            Postal code of the address.\n          type: string\n          example: 2265CA\n        city:\n          description: \u003e-\n            City name\n          type: string\n          example: Leidschendam\n        topographicPlaceName:\n          description: \u003e-\n            TopographicPlace name of the address. If set it should at least contain the city name.\n          type: string\n          example: Leidschendam\n        street:\n          description: \u003e-\n            Street name of the address.\n          type: string\n          example: Oude Trambaan\n        houseNumber:\n          description: \u003e-\n            House number of the address. If none is given, either a crossing street can be given, or the whole street is meant.\n          type: string\n          example: 7\n\n    CountryCode:\n      type: string\n      description: \u003e-\n        ISO country code (2 alpha), relative URNs with base urn:iso:std:iso:3166 are recommended\n      nullable: false\n      example: DE\n\n    PointOfInterest:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        A type of place to or through which passengers may wish to navigate as part of\n        their journey and which is modelled in detail by journey planners. Provided by OJP.\n      required:\n        - code\n        - name\n      properties:\n        code:\n          description: \u003e-\n            id of the Point of Interest.\n          type: string\n          nullable: false\n        name:\n          description: \u003e-\n            Name or description of point of interest for use in passenger information.\n          type: string\n          nullable: false\n          example: Park Rozenrust\n\n    PointOfInterestCategory:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        A categorization of points of interest in respect of the activities undertaken at them (defined by key-value-pairs). Provided by OJP.\n      properties:\n        osmTags:\n          description: \u003e-\n            Open Street Map tag structure (key-value)\n          type: array\n          items:\n            $ref: '#/components/schemas/OsmTag'\n        pointOfInterestClassifications:\n          description: \u003e-\n            Classification of the POI (when it is not from OSM). The codification of the\n            classification Id may include de codification source (for example\n            'IGN:[classificationCode]')\n          type: array\n          items:\n            type: string\n\n    OsmTag:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Structure of an Open Street Map tag. Provided by OJP.\n      required:\n        - tag\n        - value\n      properties:\n        tag:\n          description: \u003e-\n            Name of Open Street Map tag (amenity, leisure, tourism, bike, ...)\n          type: string\n          nullable: false\n          example: name\n        value:\n          description: \u003e-\n            Value for Open Street Map tag (charging_station, hostel, yes, ...)\n          type: string\n          nullable: false\n          example: Rozenrust\n\n    StopPlace:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        A place extended by accessibility limitation properties and some attributes of the associated equipment,\n        comprising one or more places where vehicles may stop and where passengers may board or leave vehicles\n        or prepare their trip, and which will usually have one or more wellknown names. Provided by OJP.\n      required:\n        - ref\n        - name\n      properties:\n        ref:\n          $ref: '#/components/schemas/StopPlaceRef'\n        name:\n          description: \u003e-\n            Name of this stop place for use in passenger information.\n          type: string\n          nullable: false\n          example: Zürich HB\n\n    PlaceRef:\n      type: object\n      additionalProperties: false\n      discriminator:\n        propertyName: objectType\n      required:\n        - objectType\n      properties:\n        objectType:\n          description: Attribute is used as discriminator for inheritance between data types.\n          type: string\n\n    StopPlaceRef:\n      description: \u003e-\n        Reference to a Stop Place using URNs to define code.\n        For UIC see UIC MERITS/TAP-TSI station codes. Provided by OJP.\n      allOf:\n        - $ref: '#/components/schemas/PlaceRef'\n        - type: object\n          additionalProperties: false\n          required:\n            - stopPlaceRef\n          properties:\n            stopPlaceRef:\n              type: string\n              nullable: false\n              example: urn:uic:stn:8503000\n            name:\n              type: string\n\n    PointOfInterestRef:\n      description: \u003e-\n        Reference to a Point of Interest. Provided by OJP.\n      allOf:\n        - $ref: '#/components/schemas/PlaceRef'\n        - type: object\n          additionalProperties: false\n          required:\n            - pointOfInterestRef\n          properties:\n            pointOfInterestRef:\n              type: string\n              nullable: false\n            name:\n              type: string\n\n    AddressRef:\n      description: \u003e-\n        Reference to an Address.\n      allOf:\n        - $ref: '#/components/schemas/PlaceRef'\n        - type: object\n          additionalProperties: false\n          required:\n            - addressRef\n          properties:\n            addressRef:\n              type: string\n              nullable: false\n            name:\n              type: string\n\n    FareConnectionPointRef:\n      description: \u003e-\n        Reference to a Fare Connection Point.\n      allOf:\n        - $ref: '#/components/schemas/PlaceRef'\n        - type: object\n          additionalProperties: false\n          required:\n            - fareConnectionPoint\n          properties:\n            fareConnectionPoint:\n              $ref: '#/components/schemas/FareConnectionPoint'\n            name:\n              type: string\n\n    GeoPositionRef:\n      description: \u003e-\n        Reference to a GeoPosition consisting of latitude and longitude.\n      allOf:\n        - $ref: '#/components/schemas/PlaceRef'\n        - type: object\n          additionalProperties: false\n          required:\n            - latitude\n            - longitude\n          properties:\n            latitude:\n              $ref: '#/components/schemas/Latitude'\n            longitude:\n              $ref: '#/components/schemas/Longitude'\n\n    ProductCategoryRef:\n      type: string\n      description: \u003e-\n        Reference to a product category. Product categories should be defined once and used\n        uniformly in all channels (e.g. NeTEx, SIRI, OJP). Provided by OJP.\n      example: urn:uic:sbc:76\n\n    OperationDayRef:\n      type: string\n      description: \u003e-\n        Reference to an operating day. Provided by OJP.\n      example: OperatingDay:12345\n\n    JourneyRef:\n      type: string\n      description: \u003e-\n        Reference to a journey. Provided by OJP.\n      example: ServiceJourney:1\n\n    SituationFullRef:\n      type: string\n      description: \u003e-\n        Reference to situation message. Message details might be found in response\n        context or through other communication channels. Provided by OJP.\n\n    VehicleNumber:\n      type: string\n      description: \u003e-\n        The vehicle number(s) of the vehicle that runs this timed leg. On some legs a vehicle can\n        have multiple vehicle numbers, e.g. if it is split into two trains at a intermediate stop.\n        E.g. the vehicle numbers of 'TGV 9218', 'TH 9340' or 'ICE 15'.\n        For backwards compatibility with Hermes/Hosa the length of the string must be restricted\n        to 5 characters. If's longer, it is not possible to use the H2O converter.\n      example: 9218, 9340, 15\n\n    LineNumber:\n      type: string\n      description: \u003e-\n        Especially on regional traffic, a vehicle is defined by a line number.\n        E.g. the line numbers of 'S 52' or 'B 19'.\n      example: 52, 19\n\n    OfferSearchCriteria:\n      type: object\n      additionalProperties: false\n      properties:\n        requestedOfferParts:\n          type: array\n          items:\n            $ref: '#/components/schemas/OfferPartType'\n        productTags:\n          type: array\n          items:\n            type: string\n        flexibilities:\n          description: \u003e-\n            Defines the flexibility levels desired of the fares returned.\n            This refers to the after sales flexibility levels as defined in IRS-90918-10\n          type: array\n          items:\n            $ref: '#/components/schemas/Flexibility'\n        travelClasses:\n          description: \u003e-\n            The classes returned might be different from the requested classes.\n          type: array\n          items:\n            $ref: '#/components/schemas/TravelClass'\n        serviceClassTypes:\n          description: \u003e-\n            The classes returned might be different from the requested classes.\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceClassType'\n          maxItems: 4\n        offerMode:\n          $ref: '#/components/schemas/OfferMode'\n        currency:\n          $ref: '#/components/schemas/Currency'\n        nutsCodes:\n          description: \u003e-\n            Nomenclature des units territoriales statistiques COMMISSION REGULATION (EU) No 31/2011\n          type: array\n          items:\n            type: string\n        place:\n          $ref: '#/components/schemas/PlaceRef'\n\n    OfferPartType:\n      description: \u003e-\n        Allows to request offerparts of a certain type.\n        To support H/H use ['RESERVATION', 'ANCILLARY'].\n        Default is to get search for offers of all types.\n      type: string\n      enum:\n        - ADMISSION\n        - RESERVATION\n        - ANCILLARY\n        - FARE_ADMISSION\n        - FARE_RESERVATION\n        - FARE_ANCILLARY\n        - ALL\n\n    OfferCollectionRequest:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Defines the parameters needed to request an offer. Either a tripSearchCriteria, a list of trip specifications, or a list of tripIds can be passed in to request offers.\n        \n        If you are searching for fares you pass in the complete trip and the use the requestedSections attribute to define which part(s) you need fares (including virtual border points).\n        \n      discriminator:\n        propertyName: objectType\n      required:\n        - objectType\n        - anonymousPassengerSpecifications\n      properties:\n        objectType:\n          description: Attribute is used as discriminator for inheritance between data types.\n          type: string\n        tripSpecifications:\n          type: array\n          items:\n            $ref: '#/components/schemas/TripSpecification'\n        tripSearchCriteria:\n          $ref: '#/components/schemas/TripSearchCriteria'\n        tripIds:\n          type: array\n          items:\n            type: string\n        requestedSections:\n          type: array\n          items:\n            $ref: '#/components/schemas/Section'\n        offerSearchCriteria:\n          $ref: '#/components/schemas/OfferSearchCriteria'\n        anonymousPassengerSpecifications:\n          type: array\n          items:\n            $ref: '#/components/schemas/AnonymousPassengerSpecification'\n          minItems: 1\n        corporateCodes:\n          type: array\n          items:\n            $ref: '#/components/schemas/CorporateCode'\n        promotionCodes:\n          type: array\n          items:\n            $ref: '#/components/schemas/PromotionCode'\n        requestedFulfillmentOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/FulfillmentOption'\n        embed:\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only. Proposed default ALL\n          type: array\n          items:\n            $ref: '#/components/schemas/OfferCollectionResponseContent'\n\n    ReturnSearchParameters:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        This property can be used in case a return trip is being requested.\n        This will allow to benefit from return-specific fares or product\n        \n      properties:\n        inwardReturnDate:\n          description: \u003e-\n            Needs to be provided when creating the collection of outward travels so that the\n            provider knows when a return travel can be expected and propose appropriate\n            product and fares.\n          type: string\n          format: date-time\n        outwardOfferIds:\n          description: \u003e-\n            Needs to be provided when creating the collection of inward travels so that the provider\n            can relate the inward travels to the outward travels context.\n          type: array\n          items:\n            type: string\n        outwardOfferTag:\n          description: \u003e-\n            Needs to be provided when creating the collection of inward travels so that the provider\n            knows what the outward offer is and and propose compatible offers only if desired or mandatory.\n          type: string\n\n    OfferCollectionResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        warnings:\n          $ref: '#/components/schemas/WarningCollection'\n        offers:\n          type: array\n          items:\n            $ref: '#/components/schemas/Offer'\n        anonymousPassengerSpecifications:\n          type: array\n          items:\n            $ref: '#/components/schemas/AnonymousPassengerSpecification'\n        trips:\n          type: array\n          items:\n            $ref: '#/components/schemas/Trip'\n        _links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n\n    Offer:\n      type: object\n      additionalProperties: false\n      discriminator:\n        propertyName: objectType\n      required:\n        - objectType\n        - offerId\n        - passengerRefs\n      properties:\n        objectType:\n          description: Attribute is used as discriminator for inheritance between data types.\n          type: string\n        offerId:\n          type: string\n          nullable: false\n        summary:\n          description: \u003e-\n            A human-readable description of the offer.\n          type: string\n        offerSummary:\n          $ref: '#/components/schemas/OfferSummary'\n        passengerRefs:\n          type: array\n          items:\n            type: string\n          minItems: 1\n          nullable: false\n        tripCoverage:\n          $ref: '#/components/schemas/TripCoverage'\n        admissionOfferParts:\n          type: array\n          items:\n            $ref: '#/components/schemas/AdmissionOfferPart'\n        reservationOfferParts:\n          type: array\n          items:\n            $ref: '#/components/schemas/ReservationOfferPart'\n        ancillaryOfferParts:\n          type: array\n          items:\n            $ref: '#/components/schemas/AncillaryOfferPart'\n        fees:\n          type: array\n          items:\n            $ref: '#/components/schemas/Fee'\n        fares:\n          type: array\n          items:\n            $ref: '#/components/schemas/Fare'\n        _links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n\n    RequestedInformation:\n      type: string\n      description: \u003e-\n        Boolean-expression indicating the data that must be set in the data\n        model in order to proceed to next step of the process.\n\n    OfferSummary:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        The offer summary indicates the most relevant service class, level, flexibility or accommodation\n        that describe this offer, but this does not imply that these values exactly apply to all parts of\n        the offer.\n        Let's consider, as a simplified example, a trip composed of two legs, one with both 1st and\n        2nd class, and one with only 2nd.\n        On this trip, the railway is expected to propose one offer with overallServiceClass FIRST composed\n        of one admission in 1st class on the first legs and one admission in 2nd class on the second one,\n        plus a second offer with overallServiceClass SECOND composed of two second class admissions.\n        Likewise for all 'overall' attributes. The purpose of these attributes is to convey to the client\n        system the service class, level, flexibility and accommodation that best represent this offer so to\n        facilitate presentation to the final user.\n      required:\n        - minimalPrice\n        - overallServiceClass\n        - overallFlexibility\n      properties:\n        minimalPrice:\n          $ref: '#/components/schemas/Price'\n        overallServiceClass:\n          $ref: '#/components/schemas/ServiceClass'\n        overallTravelClass:\n          $ref: '#/components/schemas/TravelClass'\n        overallAccommodationType:\n          $ref: '#/components/schemas/AccommodationType'\n        overallAccommodationSubType:\n          $ref: '#/components/schemas/AccommodationSubType'\n        overallFlexibility:\n          $ref: '#/components/schemas/Flexibility'\n\n    AbstractOfferPart:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Generic offer object that contains all common information about an offer.\n      discriminator:\n        propertyName: objectType\n      required:\n        - objectType\n        - id\n        - price\n        - offerMode\n        - passengerRefs\n        - refundable\n        - exchangeable\n        - validFrom\n        - products\n        - availableFulfillmentOptions\n      properties:\n        objectType:\n          description: Attribute is used as discriminator for inheritance between data types.\n          type: string\n        id:\n          type: string\n          nullable: false\n        summary:\n          description: \u003e-\n            A human-readable description of the Offer.\n          type: string\n        price:\n          $ref: '#/components/schemas/Price'\n        tripCoverage:\n          $ref: '#/components/schemas/TripCoverage'\n        priceGuaranteedUntil:\n          description: \u003e-\n            Indicates until when the price for the given offer is guaranteed.\n          type: string\n          format: date-time\n        offerMode:\n          $ref: '#/components/schemas/OfferMode'\n        isReusable:\n          description: \u003e-\n            Indicates whether the offerId can be used in more than one booking.\n          type: boolean\n          default: false\n        passengerRefs:\n          type: array\n          items:\n            type: string\n          minItems: 1\n          nullable: false\n        numericAvailability:\n          type: integer\n          format: int32\n        refundable:\n          $ref: '#/components/schemas/RefundType'\n        exchangeable:\n          $ref: '#/components/schemas/ExchangeableType'\n        afterSalesConditions:\n          type: array\n          items:\n            $ref: '#/components/schemas/AfterSaleCondition'\n        validFrom:\n          type: string\n          format: date-time\n          nullable: false\n        validUntil:\n          type: string\n          format: date-time\n        tripTags:\n          description: \u003e-\n            List of tags (and their type) that allow identifying sets of compatible offers when trying to combine multiple offers covering one single trip.\n            At least one (not all) tripTags must be in common to allow combination\n            If no tag is provided, there is no trip constraint on this specific offer.\n            \n          type: array\n          items:\n            type: string\n        returnTags:\n          description: \u003e-\n            List of tags (and their type) that allow identifying sets of compatible offers when booking a return trip\n            involving return-specific fares. All returnTags must be present in the counterpart offer to allow combination\n            If no tag is provided, there is no return constraint on this specific offer.\n          type: array\n          items:\n            type: string\n        offerTag:\n          $ref: '#/components/schemas/OfferTag'\n        requestedInformation:\n          $ref: '#/components/schemas/RequestedInformation'\n        products:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProductLegAssociation'\n          minItems: 1\n        availableFulfillmentOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/FulfillmentOption'\n          minItems: 1\n        _links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n        appliedPromotionCodes:\n          type: array\n          items:\n            $ref: '#/components/schemas/PromotionCode'\n        appliedCorporateCodes:\n          type: array\n          items:\n            $ref: '#/components/schemas/CorporateCode'\n        appliedReductions:\n          type: array\n          items:\n            $ref: '#/components/schemas/ReductionCard'\n        regionalValiditySummary:\n          $ref: '#/components/schemas/RegionalValiditySummary'\n\n    OfferTag:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        The offerTag can/must (depending on the mandatory flag) be used in some cases to restrict the\n        set of offers returned in a subsequent and related offer search to only compatible ones.\n        Note the offerTag does not need to be unique.\n      properties:\n        id:\n          type: string\n        isMandatory:\n          type: boolean\n          default: false\n\n    BookedOffer:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        The attribute 'offerSummary' is meaningful at trip-offer-collection response time only.\n      required:\n        - offerId\n      properties:\n        offerId:\n          type: string\n          nullable: false\n        summary:\n          description: \u003e-\n            A human-readable description of the booked offer.\n          type: string\n        admissions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Admission'\n        reservations:\n          type: array\n          items:\n            $ref: '#/components/schemas/Reservation'\n        ancillaries:\n          type: array\n          items:\n            $ref: '#/components/schemas/Ancillary'\n        fees:\n          type: array\n          items:\n            $ref: '#/components/schemas/Fee'\n        fares:\n          type: array\n          items:\n            $ref: '#/components/schemas/Fare'\n        tripCoverage:\n          $ref: '#/components/schemas/TripCoverage'\n        appliedThroughTicketTags:\n          type: array\n          items:\n            $ref: '#/components/schemas/ThroughTicketTag'\n\n    TravelClass:\n      description: \u003e-\n        Traditional first and second class.\n      type: string\n      x-extensible-enum:\n        - FIRST\n        - SECOND\n        - ANY_CLASS\n\n    Flexibility:\n      type: string\n      x-extensible-enum:\n        - FULL_FLEXIBLE\n        - SEMI_FLEXIBLE\n        - NON_FLEXIBLE\n\n    AbstractBookingPart:\n      type: object\n      additionalProperties: false\n      discriminator:\n        propertyName: objectType\n      required:\n        - objectType\n        - id\n        - summary\n        - price\n        - status\n        - passengerIds\n        - validFrom\n        - refundable\n        - exchangeable\n      properties:\n        objectType:\n          description: Attribute is used as discriminator for inheritance between data types.\n          type: string\n        id:\n          type: string\n          nullable: false\n        summary:\n          type: string\n          nullable: false\n        price:\n          $ref: '#/components/schemas/Price'\n        tripCoverage:\n          $ref: '#/components/schemas/TripCoverage'\n        products:\n          description: \u003e-\n            In offer mode, in almost all cases exactly one product is referenced. Only on some French\n            trips consisting of a TGV and a TER two products need to be used.\n            In fare mode, no product exists as first needs to created from the different fares.\n          type: array\n          items:\n            $ref: '#/components/schemas/ProductLegAssociation'\n        status:\n          $ref: '#/components/schemas/BookingPartStatus'\n        offerMode:\n          $ref: '#/components/schemas/OfferMode'\n        allocatorBookingRef:\n          description: \u003e-\n            The booking reference of the booking the offer part is in on the provider side.\n          type: string\n        providerBookingRef:\n          description: \u003e-\n            The booking reference of the order the offer part is in on the final provider side = the provider actually hosting or allocating  the product.\n          type: string\n        passengerIds:\n          description: \u003e-\n            Id of the passenger\n          type: array\n          items:\n            type: string\n          minItems: 1\n          nullable: false\n        availableFulfillmentOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/FulfillmentOption'\n        validFrom:\n          description: \u003e-\n            Validity of offer towards passenger\n          type: string\n          format: date-time\n          nullable: false\n        validUntil:\n          description: \u003e-\n            Validity of offer towards passenger\n          type: string\n          format: date-time\n        refundable:\n          $ref: '#/components/schemas/RefundType'\n        exchangeable:\n          $ref: '#/components/schemas/ExchangeableType'\n        afterSaleConditions:\n          description: \u003e-\n            Fine grained specification of the after sale condition of the booking.\n          type: array\n          items:\n            $ref: '#/components/schemas/AfterSaleCondition'\n        appliedCorporateCodes:\n          type: array\n          items:\n            $ref: '#/components/schemas/CorporateCode'\n        appliedPromotionCodes:\n          type: array\n          items:\n            $ref: '#/components/schemas/PromotionCode'\n        appliedReductions:\n          type: array\n          items:\n            $ref: '#/components/schemas/CardReference'\n\n    RefundType:\n      type: string\n      enum:\n        - YES\n        - NO\n        - WITH_CONDITION\n\n    ExchangeableType:\n      description: \u003e-\n        If set to YES the offerpart is exchangeable without a fee before the day of departure. \n        NO when not exchangeable or exchangeable with 100% fee, WITH_CONDITIONS in all other cases.\n      type: string\n      enum:\n        - YES\n        - NO\n        - WITH_CONDITION\n\n    ProductLegAssociation:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        In offer mode, in almost all cases exactly one product is referenced. Only on some French\n        trips consisting of a TGV and a TER two products need to be used.\n        In fare mode, no product exists as first needs to created from the different fares.\n      required:\n        - productId\n      properties:\n        productId:\n          type: string\n          nullable: false\n        legIds:\n          description: \u003e-\n             indices of the legs in the trip given by the provider of the offer\n          type: array\n          items:\n            type: string\n\n    AfterSaleCondition:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        After sale amounts for a given offer.\n      properties:\n        condition:\n          $ref: '#/components/schemas/AfterSaleConditionType'\n        validFrom:\n          type: string\n          format: date-time\n        validUntil:\n          type: string\n          format: date-time\n        afterSaleFee:\n          $ref: '#/components/schemas/Price'\n\n    AfterSaleConditionType:\n      type: string\n      x-extensible-enum:\n        - PLACE_CHANGE\n        - EXCHANGE\n        - REFUND\n\n    ProductCollectionResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        warnings:\n          $ref: '#/components/schemas/WarningCollection'\n        products:\n          description: \u003e-\n            The list of all products available to the caller.\n          type: array\n          items:\n            $ref: '#/components/schemas/Product'\n\n    ProductResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        warnings:\n          $ref: '#/components/schemas/WarningCollection'\n        product:\n          $ref: '#/components/schemas/Product'\n\n    Product:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Structured description of the product, its name, comfort and sales / after-sales conditions\n      required:\n        - id\n        - code\n        - owner\n      properties:\n        id:\n          description: \u003e-\n            id of the product\n          type: string\n          nullable: false\n        summary:\n          description: \u003e-\n            A human-readable description of the product.\n          type: string\n        code:\n          description: \u003e-\n            The product code expressed in the provider system (could be a\n            mapping from an even lower-level provider).\n          type: string\n          nullable: false\n          example: PT00AD\n        description:\n          description: \u003e-\n            Textual description of the product.\n          type: string\n          example: Loisir Non-flex Adult Fare\n        owner:\n          type: string\n          nullable: false\n        conditions:\n          description: \u003e-\n            Structured description of the sales or after-sales conditions.\n          type: array\n          items:\n            $ref: '#/components/schemas/Condition'\n        serviceClass:\n          $ref: '#/components/schemas/ServiceClass'\n        travelClass:\n          $ref: '#/components/schemas/TravelClass'\n        isTrainBound:\n          type: boolean\n          default: false\n        isReturnProduct:\n          type: boolean\n          default: false\n        fulfillmentOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/FulfillmentOption'\n        serviceConstraintText:\n          type: string\n        carrierConstraintText:\n          type: string\n        tariff:\n          description: \u003e-\n            Mapping to Tariff 42 of IRS-90918-3 (Hermes/Hosa). Helps the H2O converter in mapping\n            offers to a requested tariff. See legacyReservationParameter.tariff in OSDM offline.\n          type: string\n        combinationTags:\n          type: array\n          items:\n            $ref: '#/components/schemas/CombinationTag'\n        _links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n\n    CombinationTag:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Tag to indicate that some products from a provider can be sold only when in conjunction\n        with product(s) from another provider using the same tag. At least one, not all,\n        combinationTags must be in common to allow combination. No combinationTags indicate\n        that there are no combination constraints on the product.\n      required:\n        - id\n      properties:\n        id:\n          type: string\n          nullable: false\n        needsToBeCombined:\n          description: \u003e-\n            If false it means that this product can be sold also when not in conjunction with\n            a product with the same tag. This is needed to propose specific products from one\n            provider that depend on public ones of another.\n          type: boolean\n          default: false\n\n    FulfillmentMediaType:\n      description: \u003e-\n        Fulfillment types. RCT2, RCCST and UIC_PDF are official UIC standards.\n      type: string\n      x-extensible-enum:\n        - ALLOCATOR_APP\n        - PDF_A4\n        - PKPASS\n        - RCCST\n        - RCT2\n        - UIC_PDF\n        - TICKETLESS\n\n    Admission:\n      description: \u003e-\n        An admission represents a travel right, or the entitlement to travel onboard a train between\n        the given origin and destination, following the given route. It does not include a seat reservation.\n      allOf:\n        - $ref: '#/components/schemas/AbstractBookingPart'\n        - type: object\n          additionalProperties: false\n          required:\n            - isReservationRequired\n          properties:\n            isReservationRequired:\n              type: boolean\n              nullable: false\n              default: false\n            feeRefs:\n              type: array\n              items:\n                $ref: '#/components/schemas/BookingPartReference'\n            reservationRefs:\n              type: array\n              items:\n                $ref: '#/components/schemas/BookingPartReference'\n            ancillaryRefs:\n              type: array\n              items:\n                $ref: '#/components/schemas/BookingPartReference'\n            regulatoryConditions:\n              type: array\n              items:\n                $ref: '#/components/schemas/RegulatoryCondition'\n\n    AdmissionOfferPart:\n      description: \u003e-\n        An admission represents a travel right, or the entitlement to travel onboard a train between\n        the given origin and destination, following the given route. It does not include a seat reservation.\n      allOf:\n        - $ref: '#/components/schemas/AbstractOfferPart'\n        - type: object\n          additionalProperties: false\n          properties:\n            isReservationRequired:\n              type: boolean\n            reservations:\n              type: array\n              items:\n                $ref: '#/components/schemas/ReservationRelation'\n            ancillaries:\n              type: array\n              items:\n                $ref: '#/components/schemas/AncillaryRelation'\n            feeRefs:\n              type: array\n              items:\n                $ref: '#/components/schemas/OfferPartReference'\n            regulatoryConditions:\n              type: array\n              items:\n                $ref: '#/components/schemas/RegulatoryCondition'\n            includedReservations:\n              type: array\n              items:\n                $ref: '#/components/schemas/ReservationOfferPart'\n            throughTicketTags:\n              type: array\n              items:\n                $ref: '#/components/schemas/ThroughTicketTag'\n\n    AncillaryRelation:\n      type: object\n      additionalProperties: false\n      required:\n        - minGroupItemsToBeBooked\n        - ancillaryGroup\n      properties:\n        minGroupItemsToBeBooked:\n          type: integer\n          format: int32\n          nullable: false\n        maxGroupItemsToBeBooked:\n          type: integer\n          format: int32\n        ancillaryGroup:\n          $ref: '#/components/schemas/AncillaryGroup'\n\n    Reservation:\n      description: \u003e-\n        Reservation includes the reference to the in the initial offer.\n        The offer needs to be updated with the selected places before the confirmation\n        which creates the reservation details including the reserved places.\n      allOf:\n        - $ref: '#/components/schemas/AbstractBookingPart'\n        - type: object\n          additionalProperties: false\n          properties:\n            placeSelection:\n              $ref: '#/components/schemas/PlaceSelection'\n            placeAllocation:\n              $ref: '#/components/schemas/PlaceAllocation'\n            feeRefs:\n              type: array\n              items:\n                $ref: '#/components/schemas/BookingPartReference'\n            ancillaryRefs:\n              type: array\n              items:\n                $ref: '#/components/schemas/BookingPartReference'\n\n    ReservationOfferPart:\n      description: \u003e-\n        Reservation includes the reference to the in the initial offer.\n        The offer needs to be updated with the selected places before the confirmation\n        which creates the reservation details including the reserved places.\n      allOf:\n        - $ref: '#/components/schemas/AbstractOfferPart'\n        - type: object\n          additionalProperties: false\n          properties:\n            ancillaries:\n              type: array\n              items:\n                $ref: '#/components/schemas/AncillaryRelation'\n            availablePlaces:\n              type: array\n              items:\n                $ref: '#/components/schemas/AvailablePlace'\n            availablePlacePreferences:\n              type: array\n              items:\n                $ref: '#/components/schemas/AvailablePlacePreferences'\n            feeRefs:\n              type: array\n              items:\n                $ref: '#/components/schemas/OfferPartReference'\n\n    Ancillary:\n      allOf:\n        - $ref: '#/components/schemas/AbstractBookingPart'\n        - type: object\n          additionalProperties: false\n          required:\n            - type\n          properties:\n            feeRefs:\n              type: array\n              items:\n                $ref: '#/components/schemas/BookingPartReference'\n            type:\n              $ref: '#/components/schemas/AncillaryType'\n\n    AncillaryOfferPart:\n      allOf:\n        - $ref: '#/components/schemas/AbstractOfferPart'\n        - type: object\n          additionalProperties: false\n          required:\n            - type\n          properties:\n            feeRefs:\n              type: array\n              items:\n                $ref: '#/components/schemas/OfferPartReference'\n            category:\n              description: \u003e-\n                Categorization of the ancillary such as \"Meal\" or \"Gift\".\n              type: string\n            type:\n              $ref: '#/components/schemas/AncillaryType'\n\n    Fee:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Fees are used to represent additional costs for services or products.   In contrast to other offer parts in OSDM, the customer is not free whether to choose a fee or not: fees are generated and applied to other services or products by the provider system.\n      required:\n        - id\n        - price\n      properties:\n        id:\n          type: string\n          nullable: false\n        summary:\n          description: \u003e-\n            A human-readable description of the fee.\n          type: string\n        price:\n          $ref: '#/components/schemas/Price'\n        applicability:\n          $ref: '#/components/schemas/ApplicabilityType'\n        providerBookingReference:\n          description: \u003e-\n            The booking reference of the booking the offer part is in on the provider side.\n          type: string\n        refundable:\n          $ref: '#/components/schemas/RefundType'\n        conditions:\n          description: \u003e-\n            Structured description of the sales or after-sales conditions.\n          type: array\n          items:\n            $ref: '#/components/schemas/Condition'\n        productCode:\n          description: \u003e-\n            The product code expressed in the provider system (could be a\n            mapping from an even lower-level provider).\n          type: string\n\n    ApplicabilityType:\n      type: string\n      x-extensible-enum:\n        - BOOKING\n        - TRIP\n        - OFFERPART\n\n    PromotionCode:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        The promotion code is a token that reduces the price at POST booking time OR\n        Token that reduces the price at POST trip-offer-collection time OR\n        Token to receive offers that are not available without it.\n      required:\n        - code\n      properties:\n        code:\n          description: \u003e-\n            The code issued by the issuer\n          type: string\n          nullable: false\n          example: SPRING_DISCOUNT\n        issuer:\n          description: \u003e-\n            The party that issues the promotion code, in case of a railway it's its RICS code\n          type: string\n\n    BookingPartReference:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        References all the offer part elements in an uniform format.\n        In its part, an OfferPartReference can refer to reservation, admission, ancillary or fee.\n      required:\n        - id\n      properties:\n        id:\n          type: string\n          nullable: false\n        summary:\n          description: \u003e-\n            A human-readable description of the offer part reference.\n          type: string\n        _links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n\n    CorporateCode:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        The corporate code is a token that reduces the price at POST trip-offer-collection time OR\n        trip-offer-request or Token to receive offers that are not available without it, associated with an\n        agreement between allocator/carrier and a corporate client.\n      required:\n        - code\n        - issuer\n      properties:\n        code:\n          description: \u003e-\n            The corporate code issued by the referenced company.\n          type: string\n          nullable: false\n          example: 123-232\n        beneficiary:\n          description: \u003e-\n            The name of the party that benefits from the corporate code, intended to be presented to the end user.\n          type: string\n          example: Siemens\n        issuer:\n          $ref: '#/components/schemas/CompanyRef'\n\n    OfferPartReference:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        References all the offer part elements in an uniform format.\n        In its part, an OfferPartReference can refer to reservation, admission, ancillary or fee.\n      required:\n        - id\n      properties:\n        id:\n          type: string\n          nullable: false\n        summary:\n          description: \u003e-\n            A human-readable description of the offer part reference.\n          type: string\n        _links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n\n    BookingRequest:\n      type: object\n      additionalProperties: false\n      required:\n        - offers\n        - passengerSpecifications\n        - externalRef\n      properties:\n        offers:\n          description: \u003e-\n            The list of offers that need to be provisionally booked, with possibly the reservations and ancillaries associated that should be booked as well.\n          type: array\n          items:\n            $ref: '#/components/schemas/OfferSelection'\n          minItems: 1\n        passengerSpecifications:\n          description: \u003e-\n            If needed (cf requiredInformation) or desired, this array allows providing the required details on some or all passengers\n          type: array\n          items:\n            $ref: '#/components/schemas/PassengerSpecification'\n          minItems: 1\n        purchaser:\n          $ref: '#/components/schemas/PurchaserSpecification'\n        promotionCodes:\n          type: array\n          items:\n            $ref: '#/components/schemas/PromotionCode'\n        embed:\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only.\n          type: array\n          items:\n            $ref: '#/components/schemas/BookingResponseContent'\n        externalRef:\n          type: string\n          nullable: false\n\n    OfferSelection:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        The Ids of the offers to be booked need to be passed in.\n      required:\n        - offerId\n        - passengerRefs\n      properties:\n        offerId:\n          description: \u003e-\n            id of the selected offer or exchangeOffer\n          type: string\n          nullable: false\n        optionalReservationSelections:\n          description: \u003e-\n            Mandatory reservations are booked when the booking is being booked.\n          type: array\n          items:\n            $ref: '#/components/schemas/ReservationSelection'\n        optionalAncillarySelections:\n          type: array\n          items:\n            $ref: '#/components/schemas/AncillarySelection'\n        placeSelections:\n          type: array\n          items:\n            $ref: '#/components/schemas/PlaceSelection'\n        afterSaleByDistributorOnly:\n          description: \u003e-\n            in case the distributor has proposed this offer in conjunction with an offer of another provider constrained\n            by a combinationTag, this flag must be set to true to indicate to the provider that after-sale must be done\n            on the totality of the distributor's booking. Only after-sale requests triggered by the distributor can be\n            safely processed on this offer. When the flag is not set, standard provider logic applies.\n          type: boolean\n          default: false\n        appliedRegulatoryCondition:\n          $ref: '#/components/schemas/RegulatoryCondition'\n        passengerRefs:\n          type: array\n          items:\n            type: string\n          minItems: 1\n          nullable: false\n        throughTicketTags:\n          type: array\n          items:\n            $ref: '#/components/schemas/ThroughTicketTag'\n\n    AncillarySelection:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Is some cases one out of a set of ancillary offerparts must be booked.\n      required:\n        - ancillaryId\n        - passengerRefs\n      properties:\n        ancillaryId:\n          type: string\n          nullable: false\n        passengerRefs:\n          type: array\n          items:\n            type: string\n          minItems: 1\n          nullable: false\n\n    BookingResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        warnings:\n          $ref: '#/components/schemas/WarningCollection'\n        booking:\n          $ref: '#/components/schemas/Booking'\n\n    Booking:\n      type: object\n      additionalProperties: false\n      required:\n        - id\n        - passengers\n      properties:\n        id:\n          type: string\n          nullable: false\n        externalRef:\n          description: \u003e-\n            The unique booking reference in the provider system. Usually refers to an order number or PNR.\n          type: string\n        summary:\n          description: \u003e-\n            A human-readable description of the booking.\n          type: string\n          example: Booking 2345 for Clemens Gantert\n        passengers:\n          type: array\n          items:\n            $ref: '#/components/schemas/Passenger'\n          minItems: 1\n        purchaser:\n          $ref: '#/components/schemas/Purchaser'\n        provisionalPrice:\n          $ref: '#/components/schemas/Price'\n        confirmedPrice:\n          $ref: '#/components/schemas/Price'\n        bookedOffers:\n          type: array\n          items:\n            $ref: '#/components/schemas/BookedOffer'\n        trips:\n          description: \u003e-\n            This trip will be included in the offer if the offer is part of the booking.\n          type: array\n          items:\n            $ref: '#/components/schemas/Trip'\n        requestedInformation:\n          $ref: '#/components/schemas/RequestedInformation'\n        ticketTimeLimit:\n          type: string\n          format: date-time\n        fulfillmentType:\n          $ref: '#/components/schemas/FulfillmentType'\n        fulfillments:\n          type: array\n          items:\n            $ref: '#/components/schemas/Fulfillment'\n        documents:\n          type: array\n          items:\n            $ref: '#/components/schemas/Document'\n        paymentMethods:\n          type: array\n          items:\n            $ref: '#/components/schemas/PaymentMethod'\n        refundOffers:\n          description: \u003e-\n            Refund offers are created with the details of the to-be-confirmed refund operation.\n            One refund offer can then be confirmed, which turns it into a refund.\n          type: array\n          items:\n            $ref: '#/components/schemas/RefundOffer'\n        releaseOffers:\n          type: array\n          items:\n            $ref: '#/components/schemas/ReleaseOffer'\n        cancelFulfillmentsOffers:\n          type: array\n          items:\n            $ref: '#/components/schemas/CancelFulfillmentsOffer'\n        exchangeOperations:\n          type: array\n          items:\n            $ref: '#/components/schemas/ExchangeOperation'\n        _links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n\n    BookingPartStatus:\n      type: string\n      enum:\n        - PREBOOKED\n        - ON_HOLD\n        - CONFIRMED\n        - FULFILLED\n        - CANCELLED\n        - RELEASED\n        - REFUNDED\n        - EXCHANGE_ONGOING\n        - ERROR\n\n    FulfillmentType:\n      type: string\n      x-extensible-enum:\n        - ETICKET\n        - CIT_PAPER\n        - PASS_CHIP\n        - PASS_REFERENCE\n\n    BookingPatchRequest:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Allows setting the required fulfillment type, e.g. value paper\n        or e-ticket and preferred fulfillment media.\n        The latter is optional and relevant in some cases only.\n      properties:\n        placeSelections:\n          type: array\n          items:\n            $ref: '#/components/schemas/PlaceSelection'\n        requestedFulfillmentType:\n          $ref: '#/components/schemas/FulfillmentType'\n        preferredFulfillmentMedia:\n          $ref: '#/components/schemas/FulfillmentMediaType'\n        usedPaymentMethods:\n          type: array\n          items:\n            $ref: '#/components/schemas/PaymentMethod'\n        exchangeOffers:\n          type: array\n          items:\n            $ref: '#/components/schemas/OfferSelection'\n\n    FulfillmentOption:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        CIT paper implies printing on value paper which is stock controlled.\n      required:\n        - type\n        - media\n      properties:\n        type:\n          $ref: '#/components/schemas/FulfillmentType'\n        media:\n          $ref: '#/components/schemas/FulfillmentMediaType'\n\n    FulfillmentPatchRequest:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Changes the fulfillment to status FULFILLED.\n      properties:\n        fulfillmentUpdates:\n          type: array\n          items:\n            $ref: '#/components/schemas/FulfillmentId'\n\n    FulfillmentId:\n      type: string\n      nullable: false\n\n    FulfillmentCollectionResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        warnings:\n          $ref: '#/components/schemas/WarningCollection'\n        fulfillments:\n          type: array\n          items:\n            $ref: '#/components/schemas/Fulfillment'\n\n    FulfillmentResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        warnings:\n          $ref: '#/components/schemas/WarningCollection'\n        fulfillment:\n          $ref: '#/components/schemas/Fulfillment'\n\n    Fulfillment:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        A fulfillment is a document (or part of a document in allocator mode) that\n        - allows the passenger to prove its travel right\n        - provides easier access to trains and stations\n        - allows an exchange for other services (voucher)\n        A fulfillment refers to services of one or multiple offer parts or a fare (allocator mode).\n      required:\n        - id\n        - status\n      properties:\n        id:\n          type: string\n          nullable: false\n        summary:\n          description: \u003e-\n            A human-readable description of the fulfillment.\n          type: string\n        status:\n          $ref: '#/components/schemas/FulfillmentStatus'\n        controlNumber:\n          description: \u003e-\n            Ticket Control Number.\n          type: string\n        offerParts:\n          type: array\n          items:\n            $ref: '#/components/schemas/OfferPartReference'\n        availableUsage:\n          $ref: '#/components/schemas/FulfillmentUsage'\n        fulfillmentDocuments:\n          description: \u003e-\n            Final document created for fulfillment.\n          type: array\n          items:\n            $ref: '#/components/schemas/FulfillmentDocument'\n        fulfillmentParts:\n          description: \u003e-\n            Fulfillment items to be integrated into tickets (allocator mode).\n          type: array\n          items:\n            $ref: '#/components/schemas/FulfillmentPart'\n        _links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n\n    FulfillmentPartStatus:\n      description: \u003e-\n        Individual fulfillments of a multi journey booking need an separate patch to create the usable fulfillment in status FULFILLED before they are in an intermediate state AVAILABLE where they don't provide a document for travel. Fulfillments can be ON_HOLD in case they are booked but not yet available (e.g. a booking providing two journeys per week) or passed in case the fulfillment was not patched for usage within the required time.\n      type: string\n      enum:\n        - AVAILABLE\n        - ON_HOLD\n        - CONFIRMED\n        - FULFILLED\n        - CHECKEDIN\n        - CANCELLED\n        - RELEASED\n        - REFUNDED\n        - EXPIRED\n\n    FulfillmentStatus:\n      description: \u003e-\n        Individual fulfillments of a multi journey booking need an separate patch to create the usable fulfillment in status FULFILLED before they are in an intermediate state AVAILABLE where they don't provide a document for travel. Fulfillments can be ON_HOLD in case they are booked but not yet available (e.g. a booking providing two journeys per week) or passed in case the fulfillment was not patched for usage within the required time.\n      type: string\n      enum:\n        - AVAILABLE\n        - ON_HOLD\n        - CONFIRMED\n        - FULFILLED\n        - CHECKEDIN\n        - CANCELLED\n        - RELEASED\n        - REFUNDED\n        - EXPIRED\n\n    FulfillmentDocument:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Document created for fulfillment. Either downloadLink + downloadExpiry or content + format must\n        be provided.\n      required:\n        - medium\n        - type\n        - format\n      properties:\n        medium:\n          $ref: '#/components/schemas/FulfillmentMediaType'\n        type:\n          $ref: '#/components/schemas/FulfillmentDocumentType'\n        downloadLink:\n          type: string\n          format: uri\n        downloadExpiry:\n          description: \u003e-\n            Expiration time of the download link, the document will not be available at the given URI\n            after this time.\n          type: string\n          format: date-time\n        content:\n          description: \u003e-\n            base64 encoded binary of the actual fulfillment document\n          type: string\n          format: byte\n        format:\n          description: \u003e-\n            Physical format of the document provided in the content field in Mime-Type format, e.g.\n            application/pdf, image/jpeg, etc. Must be filled if the 'content' field is present.\n          type: string\n          nullable: false\n          example: application/pdf\n\n    FulfillmentDocumentType:\n      type: string\n      x-extensible-enum:\n        - BOOKING_RECEIPT\n        - TICKET\n        - BOARDING_PASS\n        - INFORMATION\n        - VOUCHER\n\n    FulfillmentPart:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Fulfillment items to be integrated in to tickets,\n        e.g. visual security elements, additional bar codes, control keys.\n      required:\n        - status\n      properties:\n        fulfillmentMedia:\n          description: \u003e-\n            list of fulfillment media where this item applies\n          type: array\n          items:\n            $ref: '#/components/schemas/FulfillmentMediaType'\n        passengerReference:\n          description: \u003e-\n            reference to a passenger\n          type: string\n        controlId:\n          type: string\n        securityFeatures:\n          description: \u003e-\n            'visual elements, bar codes'\n          type: array\n          items:\n            $ref: '#/components/schemas/FulfillmentItemSecurityFeature'\n        securityFeatureLinks:\n          type: array\n          items:\n            $ref: '#/components/schemas/FulfillmentItemSecurityFeatureLinks'\n        isMandatory:\n          description: \u003e-\n            The use of the provided features is mandatory.\n          type: boolean\n          default: false\n        securePaperOnly:\n          description: \u003e-\n            The security feature must be used on secure paper.\n          type: boolean\n          default: false\n        status:\n          $ref: '#/components/schemas/FulfillmentPartStatus'\n\n    FulfillmentItemSecurityFeature:\n      type: object\n      additionalProperties: false\n      properties:\n        type:\n          $ref: '#/components/schemas/SecurityFeatureType'\n        data:\n          description: \u003e-\n            base 64 encoded data\n          type: string\n          format: byte\n\n    FulfillmentItemSecurityFeatureLinks:\n      type: object\n      additionalProperties: false\n      properties:\n        type:\n          $ref: '#/components/schemas/SecurityFeatureType'\n        uri:\n          description: \u003e-\n            link to download the security feature\n          type: string\n          format: uri\n\n    FulfillmentUsage:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        In case of multi-journey products describe parameters to be used to change the a fulfillment in status AVAILABLE to FULFILLED so it can be used by the passenger.\n      required:\n        - fromPlaceRequired\n        - maxAvailableZones\n      properties:\n        fromPlaceRequired:\n          type: boolean\n          nullable: false\n          default: false\n        travelDates:\n          description: \u003e-\n            Travel dates that can be selected. Note: date only is used to cover properly the case of passes including\n            multiple time zones.\n          type: array\n          items:\n            type: string\n        travelValidityRanges:\n          type: array\n          items:\n            $ref: '#/components/schemas/TravelValidityRange'\n        maxAvailableZones:\n          description: \u003e-\n            upper limit to the number of selected zones\n          type: integer\n          format: int32\n          nullable: false\n        availableZones:\n          type: array\n          items:\n            $ref: '#/components/schemas/ZoneDefinition'\n\n    SecurityFeatureType:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Defines type and format of the security feature.\n      properties:\n        type:\n          $ref: '#/components/schemas/SecurityElementType'\n        format:\n          $ref: '#/components/schemas/SecurityElementFormat'\n\n    SecurityElementType:\n      type: string\n      enum:\n        - VISUAL_ELEMENT\n        - BAR_CODE\n\n    TravelValidityRange:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Range for the start of validity to be used in a patch for available fulfillments (e.g. a 1 hour ticket not\n        available during  peak hours in the morning and afternoon).\n      required:\n        - from\n        - until\n      properties:\n        from:\n          type: string\n          format: date\n          nullable: false\n        until:\n          type: string\n          format: date\n          nullable: false\n\n    SecurityElementFormat:\n      type: string\n      enum:\n        - PNG\n        - GIF\n        - SVG\n\n    RefundOfferCollectionResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        warnings:\n          $ref: '#/components/schemas/WarningCollection'\n        refundOffers:\n          type: array\n          items:\n            $ref: '#/components/schemas/RefundOffer'\n        _links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n\n    RefundOffer:\n      type: object\n      additionalProperties: false\n      required:\n        - id\n      properties:\n        id:\n          description: \u003e-\n            id of the refund offer\n          type: string\n          nullable: false\n        summary:\n          description: \u003e-\n            A human-readable description of the refund offer.\n          type: string\n          example: Refund Offer for Paris-Barcelona Andre Dupont 2022-07-23\n        validUntil:\n          type: string\n          format: date-time\n        status:\n          $ref: '#/components/schemas/RefundStatus'\n        reimbursementStatus:\n          $ref: '#/components/schemas/ReimbursementStatus'\n        reimbursementDateTime:\n          type: string\n          format: date-time\n        appliedOverruleCode:\n          $ref: '#/components/schemas/OverruleCode'\n        fulfillments:\n          type: array\n          items:\n            $ref: '#/components/schemas/Fulfillment'\n        refundFee:\n          $ref: '#/components/schemas/Price'\n        refundableAmount:\n          $ref: '#/components/schemas/Price'\n        _links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n\n    ReimbursementStatus:\n      type: string\n      enum:\n        - IMMEDIATE\n        - DELAYED\n      default: IMMEDIATE\n\n    RefundOfferRequest:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Request for a refund offer.\n        Fulfillments can be provided in case the booking contains multiple individual fulfillments.\n      required:\n        - fulfillmentIds\n      properties:\n        fulfillmentIds:\n          description: \u003e-\n            id of the fulfillment to refund\n          type: array\n          items:\n            type: string\n          minItems: 1\n          nullable: false\n        overruleCode:\n          $ref: '#/components/schemas/OverruleCode'\n        refundDate:\n          description: \u003e-\n            Indicates for passes the date taken as reference to compute possible partial refund. It is also the date taken\n            as reference to invalidate the pass partially refunded.\n          type: string\n          format: date-time\n\n    RefundOfferPatchRequest:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Changes the refund offer to status CONFIRMED. De-confirmation by setting PROPOSED status is not supported by API.\n      required:\n        - status\n      properties:\n        status:\n          $ref: '#/components/schemas/RefundStatus'\n\n    CancelFulfillmentsStatus:\n      type: string\n      enum:\n        - PROPOSED\n        - CONFIRMED\n\n    RefundStatus:\n      type: string\n      enum:\n        - PROPOSED\n        - CONFIRMED\n\n    OverruleCode:\n      description: \u003e-\n        Reason for and type of an after sale, code list in IRS 90918-10.\n        The PRM_SUPPORT_UNAVAILABLE overrule code shall only be used by the UIC PRM ABT tool.\n      type: string\n      x-extensible-enum:\n        - CONNECTION_BROKEN\n        - EQUIPMENT_FAILURE\n        - PAYMENT_FAILURE\n        - PRM_SUPPORT_UNAVAILABLE\n        - SALES_STAFF_ERROR\n        - STOP_NOT_SERVED\n        - STRIKE\n        - TECHNICAL_FAILURE\n        - TICKET_NOT_USED\n\n    ExchangeOfferCollectionRequest:\n      description: \u003e-\n        Defines the parameters needed to request an exchange offer, either based on either an\n        existing trip (that is then passed in) plus a set of offer search\n        criteria, or based on trip-search and offer search criteria. At least one\n        of the trip or tripSearchCriteria must be set.\n      allOf:\n        - $ref: '#/components/schemas/OfferCollectionRequest'\n        - type: object\n          additionalProperties: false\n          required:\n            - fulfillmentIds\n          properties:\n            fulfillmentIds:\n              type: array\n              items:\n                type: string\n              minItems: 1\n              nullable: false\n            overruleCode:\n              $ref: '#/components/schemas/OverruleCode'\n\n    ExchangeOfferCollectionResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        warnings:\n          $ref: '#/components/schemas/WarningCollection'\n        exchangeOffers:\n          type: array\n          items:\n            $ref: '#/components/schemas/ExchangeOffer'\n        trips:\n          description: \u003e-\n            Two trips are returned if  round trips are exchanged.\n          type: array\n          items:\n            $ref: '#/components/schemas/Trip'\n        passengers:\n          type: array\n          items:\n            $ref: '#/components/schemas/Passenger'\n        _links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n\n    ExchangeOperationResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        warnings:\n          $ref: '#/components/schemas/WarningCollection'\n        exchangeOperation:\n          $ref: '#/components/schemas/ExchangeOperation'\n\n    ExchangeOperation:\n      type: object\n      additionalProperties: false\n      required:\n        - id\n      properties:\n        id:\n          type: string\n          nullable: false\n        status:\n          $ref: '#/components/schemas/ExchangeStatus'\n        exchangeOffers:\n          type: array\n          items:\n            $ref: '#/components/schemas/ExchangeOffer'\n        fulfillments:\n          type: array\n          items:\n            $ref: '#/components/schemas/Fulfillment'\n        ticketTimeLimit:\n          type: string\n          format: date-time\n        fulfillmentType:\n          $ref: '#/components/schemas/FulfillmentType'\n\n    ExchangeStatus:\n      type: string\n      enum:\n        - PREBOOKED\n        - CONFIRMED\n        - FULFILLED\n        - ERROR\n\n    ExchangeOperationPatchRequest:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Allows modifying a general setting for the booking:\n         * setting the required fulfillment type, e.g. value paper\n           or e-ticket and preferred fulfillment media.\n           The latter is optional and relevant in some cases only.\n         * Provisionally exchanging some of the fulfillments in the booking\n      properties:\n        requestedFulfillmentType:\n          $ref: '#/components/schemas/FulfillmentType'\n        preferredFulfillmentMedia:\n          $ref: '#/components/schemas/FulfillmentMediaType'\n        embed:\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only.\n          type: array\n          items:\n            $ref: '#/components/schemas/ExchangeOperationResponseContent'\n\n    ExchangeOffer:\n      allOf:\n        - $ref: '#/components/schemas/Offer'\n        - type: object\n          additionalProperties: false\n          properties:\n            exchangeFee:\n              $ref: '#/components/schemas/Price'\n            exchangePrice:\n              $ref: '#/components/schemas/Price'\n            fulfillments:\n              type: array\n              items:\n                $ref: '#/components/schemas/Fulfillment'\n\n    CoachLayoutCollectionResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        warnings:\n          $ref: '#/components/schemas/WarningCollection'\n        layouts:\n          type: array\n          items:\n            $ref: '#/components/schemas/CoachLayout'\n\n    CoachLayoutResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        warnings:\n          $ref: '#/components/schemas/WarningCollection'\n        coachLayout:\n          $ref: '#/components/schemas/CoachLayout'\n\n    CoachLayout:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        coach layout providing data to draw a coach layout. The items of a coach\n        are located via coordinates with (0,0) in the upper left corner. All\n        coordinates are given without sign.\n      required:\n        - id\n      properties:\n        id:\n          description: \u003e-\n            id of this coachLayout on this server\n          type: string\n          nullable: false\n        summary:\n          description: \u003e-\n            A human-readable description of the coach layout.\n          type: string\n          example: Coach 3 in train T-122\n        places:\n          description: \u003e-\n            list of places included in the layout\n          type: array\n          items:\n            $ref: '#/components/schemas/CoachLayoutPlace'\n        signs:\n          type: array\n          items:\n            $ref: '#/components/schemas/CoachLayoutSign'\n        internals:\n          type: array\n          items:\n            $ref: '#/components/schemas/CoachLayoutInternal'\n        gridSize:\n          $ref: '#/components/schemas/CoachLayoutGridSize'\n        _links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n\n    CoachLayoutPlace:\n      type: object\n      additionalProperties: false\n      required:\n        - number\n        - coords\n      properties:\n        number:\n          description: \u003e-\n            place number as displayed physically on the place\n          type: string\n          nullable: false\n        direction:\n          $ref: '#/components/schemas/DirectionType'\n        remarkId:\n          $ref: '#/components/schemas/RemarkType'\n        coords:\n          $ref: '#/components/schemas/LayoutCoordinates'\n\n    CoachLayoutSign:\n      type: object\n      additionalProperties: false\n      required:\n        - icon\n        - coords\n      properties:\n        icon:\n          description: \u003e-\n            Icon type of the graphical item type. Code list according to UIC90918-1\n            graphical item type e.g. silence area sign = 116\n            \n          type: string\n          nullable: false\n        coords:\n          $ref: '#/components/schemas/LayoutCoordinates'\n\n    CoachLayoutInternal:\n      type: object\n      additionalProperties: false\n      required:\n        - icon\n        - coords\n      properties:\n        icon:\n          type: string\n          nullable: false\n        mounting:\n          $ref: '#/components/schemas/MountingType'\n        coords:\n          $ref: '#/components/schemas/LayoutCoordinates'\n\n    DirectionType:\n      description: \u003e-\n        Direction of a place, defined optional as it might be omitted in\n        case of berths in future. \n        Code list according to UIC90918-1\n        Valid Values:\n        - RIGHT: to right\n        - LEFT: to left\n        - UP: up (from right side of a coach pointing to the middle of the aisle)\n        - DOWN: down (from right side of the coach pointing to the middle of the aisle)\n      type: string\n      enum:\n        - RIGHT\n        - LEFT\n        - UP\n        - DOWN\n\n    RemarkType:\n      description: \u003e-\n        Remark concerning the place (e.g. to be used in a tool tip).\n        Code list according to UIC90918-1\n        Known Values:\n        - MIGHT_HAVE_TABLE: place might have a table\n        - MIGHT_NOT_HAVE_TABLE: table at the place might be missing\n        - MIGHT_HAVE_DIFFERENT_DIRECTION: place might have a different direction\n        - MIGHT_HAVE_TABLE_AND_DIFFERENT_DIRECTION: place might have a table and a different direction\n        - MIGHT_NOT_HAVE_TABLE_AND_MIGHT_HAVE_DIFFERENT_DIRECTION: table at the place might be missing and place might have a different direction\n        - MIGHT_BE_IN_COMPARTMENT: place might be in compartment\n        - MIGHT_BE_IN_OPEN_SPACE: place might be in open space\n      type: string\n      x-extensible-enum:\n        - MIGHT_HAVE_TABLE\n        - MIGHT_NOT_HAVE_TABLE\n        - MIGHT_HAVE_DIFFERENT_DIRECTION\n        - MIGHT_HAVE_TABLE_AND_DIFFERENT_DIRECTION\n        - MIGHT_NOT_HAVE_TABLE_AND_MIGHT_HAVE_DIFFERENT_DIRECTION\n        - MIGHT_BE_IN_COMPARTMENT\n        - MIGHT_BE_IN_OPEN_SPACE\n\n    MountingType:\n      type: string\n      enum:\n        - UPPER_BORDER\n        - LOWER_BORDER\n        - UPPER_TO_LOWER_BORDER\n        - FREE\n\n    LayoutCoordinates:\n      type: object\n      additionalProperties: false\n      required:\n        - x\n        - y\n        - zOrder\n      properties:\n        x:\n          description: \u003e-\n            horizontal coordinate of the center of the place\n          type: integer\n          format: int32\n          nullable: false\n        y:\n          description: \u003e-\n            vertical coordinate of the center of the place\n          type: integer\n          format: int32\n          nullable: false\n        zOrder:\n          description: \u003e-\n            Graphical layer where this item has to be placed.\n            Code list according to UIC90918-1\n              - value 0: lowest layer usually used for walls\n              - value 1: middle layer usually used by places\n              - value 2: top layer usually used by icons\n          type: string\n          nullable: false\n\n    Problem:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Problem Details for HTTP APIs (RFC 7807) defines a 'problem detail' as a way\n        to carry machine-readable details of errors in a HTTP response to avoid\n        the need to define new error response formats for HTTP APIs.\n        See: https://tools.ietf.org/html/rfc7807\n      properties:\n        type:\n          description: \u003e-\n            An absolute URI that identifies the problem type. When dereferenced,\n            it SHOULD provide human-readable documentation for the problem type\n            (e.g., using HTML).\n          type: string\n          format: uri\n          default: 'about:blank'\n          example: https://example.com/probs/passenger-too-young\n        title:\n          description: \u003e-\n            A short, summary of the problem type. Written in English and readable\n            for engineers (usually not suited for non technical stakeholders and\n            not localized);\n          type: string\n          example: Service Unavailable\n        status:\n          description: \u003e-\n            The HTTP status code generated by the origin server for this occurrence\n            of the problem.\n          type: integer\n          format: int32\n          maximum: 600\n          exclusiveMaximum: true\n          minimum: 100\n          example: 503\n        detail:\n          description: \u003e-\n            A human readable explanation specific to this occurrence\n            of the problem.\n          type: string\n          example: Connection to database timed out\n        instance:\n          description: \u003e-\n            An absolute URI that identifies the specific occurrence of the problem.\n          type: string\n          format: uri\n\n    PlaceAvailabilityCollectionResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        warnings:\n          $ref: '#/components/schemas/WarningCollection'\n        availablePlaces:\n          type: array\n          items:\n            $ref: '#/components/schemas/AvailablePlace'\n\n    ComplaintResponse:\n      type: object\n      additionalProperties: false\n      required:\n        - complaint\n      properties:\n        complaint:\n          $ref: '#/components/schemas/Complaint'\n        warnings:\n          $ref: '#/components/schemas/WarningCollection'\n\n    CustomerComplaint:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        complaint details provided by the passengers\n      properties:\n        applicationTime:\n          description: \u003e-\n            date and time when the claim was made. This starts the legal time line to process the claim\n          type: string\n          format: date-time\n        journeyDetails:\n          $ref: '#/components/schemas/ClaimedJourneyDetails'\n        claimManager:\n          $ref: '#/components/schemas/PersonDetail'\n        affectedPassengers:\n          type: array\n          items:\n            $ref: '#/components/schemas/Passenger'\n        supportingDocuments:\n          type: array\n          items:\n            $ref: '#/components/schemas/SupportingDocument'\n        bookingIds:\n          description: \u003e-\n            list of booking Ids\n          type: array\n          items:\n            type: string\n        ticketControlNumber:\n          description: \u003e-\n            list of ticket control number (visible ticket identification for the customer)\n          type: array\n          items:\n            type: string\n        requestedPaymentType:\n          $ref: '#/components/schemas/PaymentType'\n        bankAccount:\n          $ref: '#/components/schemas/BankAccountReference'\n\n    PaymentType:\n      type: string\n      x-extensible-enum:\n        - CARD\n        - CASH\n        - DIRECT_DEBIT\n        - ELECTRONIC_PAYMENT\n        - INVOICE\n        - VOUCHER\n\n    BankAccountReference:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        bank account\n      properties:\n        iban:\n          description: \u003e-\n            IBAN to be used in Europe\n          type: string\n          pattern: '[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}'\n        accountId:\n          description: \u003e-\n            bank account id to be used outside of EU\n          type: string\n        bankIdCode:\n          $ref: '#/components/schemas/BankIdCode'\n        bankId:\n          type: string\n        ownerName:\n          type: string\n          example: John Doe\n\n    BankIdCode:\n      type: string\n      x-extensible-enum:\n        - SWIFT\n\n    SupportingDocument:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        The supporting document helps to support the request.\n      required:\n        - title\n        - format\n      properties:\n        title:\n          description: \u003e-\n            title of the document\n          type: string\n          nullable: false\n          example: delay confirmation written by staff on board\n        content:\n          description: \u003e-\n            base64 encoded binary of the actual document\n          type: string\n          format: byte\n        format:\n          description: \u003e-\n            Physical format of the document provided in the content field in Mime-Type format, e.g. \n            application/pdf, image/jpeg, etc. Must be filled if the 'content' field is present.\n          type: string\n          nullable: false\n          example: application/pdf\n\n    ClaimedJourneyDetails:\n      type: object\n      additionalProperties: false\n      properties:\n        impact:\n          $ref: '#/components/schemas/ImpactType'\n        finalDelay:\n          type: string\n          format: duration\n          example: PT30M\n        onReturn:\n          type: boolean\n          default: false\n        delayedJourney:\n          type: array\n          items:\n            $ref: '#/components/schemas/ClaimedLeg'\n\n    ImpactType:\n      description: \u003e-\n        Known Values:\n        - DELAY: delayed arrival\n        - JOURNEY_ABANDONED: trip way abandoned during the travel\n        - JOURNEY_NOT_STARTED: trip was not started due to the delay\n        - SERVICE_DEGRADED: e.g. service class not provided\n      type: string\n      x-extensible-enum:\n        - DELAY\n        - JOURNEY_ABANDONED\n        - JOURNEY_NOT_STARTED\n        - SERVICE_DEGRADED\n\n    ClaimedLeg:\n      type: object\n      additionalProperties: false\n      properties:\n        trainNumber:\n          type: string\n        connectionMissed:\n          description: \u003e-\n            connection missed due to a delay on the previous leg\n          type: boolean\n        serviceDegradation:\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceDegradation'\n        departureStation:\n          $ref: '#/components/schemas/Place'\n        arrivalStation:\n          $ref: '#/components/schemas/Place'\n        plannedDepartureTime:\n          type: string\n          format: date-time\n        timetabledArrivalTime:\n          type: string\n          format: date-time\n        observedArrivalTime:\n          type: string\n          format: date-time\n\n    ServiceDegradation:\n      description: \u003e-\n        enumeration of service degradations\n      type: string\n      x-extensible-enum:\n        - RESERVED_PLACES_MISSING\n        - BOOKED_ACCOMMODATION_TYPE_MISSING\n        - BOOKED_CLASS_MISSING\n        - BOOKED_MEAL_MISSING\n\n    ComplaintPatchRequest:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Changes to a claim already made.\n        This covers upload of additional supporting documents, changes to  the passenger and claim manager data.\n        The patch of the compensation amount requires an agreement between the involved parties and is used in\n        case the legal time line for deciding the claim is passed.\n      properties:\n        reason:\n          $ref: '#/components/schemas/ComplaintChangeReason'\n        compensationAmount:\n          $ref: '#/components/schemas/Price'\n        claimManager:\n          $ref: '#/components/schemas/PersonDetail'\n        affectedPassengers:\n          type: array\n          items:\n            $ref: '#/components/schemas/Passenger'\n        supportingDocuments:\n          type: array\n          items:\n            $ref: '#/components/schemas/SupportingDocument'\n        bankAccount:\n          $ref: '#/components/schemas/BankAccountReference'\n\n    ComplaintChangeReason:\n      description: \u003e-\n        Known Values:\n        - BANK_ACCOUNT\n        - SETTLED_TIME_LIMIT_EXCEEDED: an allocator settled the claim as the fare provided did not reply in due time. The compensation amount debited is provided\n        - PASSENGER_CHANGE\n      type: string\n      x-extensible-enum:\n        - BANK_ACCOUNT\n        - SETTLED_TIME_LIMIT_EXCEEDED\n        - PASSENGER_CHANGE\n\n    Complaint:\n      type: object\n      additionalProperties: false\n      required:\n        - id\n        - status\n      properties:\n        id:\n          type: string\n          nullable: false\n        status:\n          $ref: '#/components/schemas/BackOfficeStatus'\n        customerComplaint:\n          $ref: '#/components/schemas/CustomerComplaint'\n        missingInformation:\n          description: \u003e-\n            indication of missing customer information\n          type: array\n          items:\n            type: string\n        decision:\n          $ref: '#/components/schemas/ComplaintDecision'\n        _links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n\n    BackOfficeStatus:\n      description: \u003e-\n        Status of the request sent to the back office.\n      type: string\n      enum:\n        - INITIATED\n        - EVALUATING\n        - DECIDED\n        - SETTLED\n        - INFORMATION_MISSING\n\n    ComplaintDecision:\n      type: object\n      additionalProperties: false\n      properties:\n        compensationAmount:\n          $ref: '#/components/schemas/Price'\n        refundVoucher:\n          $ref: '#/components/schemas/FulfillmentDocument'\n        explanation:\n          $ref: '#/components/schemas/SupportingDocument'\n        shortExplanation:\n          type: string\n        delayedJourney:\n          description: \u003e-\n            Allocator or fare provider view on the delays. This might differ from the customer view.\n          type: array\n          items:\n            $ref: '#/components/schemas/Trip'\n\n    ReductionCardCollectionResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        warnings:\n          $ref: '#/components/schemas/WarningCollection'\n        reductionCardsDelivery:\n          $ref: '#/components/schemas/ReductionCardsDelivery'\n\n    ZoneCollectionResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        warnings:\n          $ref: '#/components/schemas/WarningCollection'\n        zonesDelivery:\n          $ref: '#/components/schemas/ZonesDelivery'\n\n    ReductionCardsDelivery:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Delivery of a list of reduction cards.\n      properties:\n        deliveryDate:\n          description: \u003e-\n            date of the assembly of the reduction card data set\n          type: string\n          format: date-time\n        reductionCards:\n          type: array\n          items:\n            $ref: '#/components/schemas/ReductionCard'\n\n    ZonesDelivery:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Delivery of a list of zones\n      properties:\n        deliveryDate:\n          description: \u003e-\n            date of the assembly of the zones data set\n          type: string\n          format: date-time\n        zones:\n          type: array\n          items:\n            $ref: '#/components/schemas/ZoneDefinition'\n\n    ReductionCard:\n      type: object\n      additionalProperties: false\n      required:\n        - issuer\n        - id\n        - name\n      properties:\n        issuer:\n          $ref: '#/components/schemas/CompanyRef'\n        id:\n          description: \u003e-\n            id of the card type within the issue\n          type: string\n          nullable: false\n        name:\n          $ref: '#/components/schemas/Text'\n        includedCards:\n          description: \u003e-\n            This card includes the listed cards\n          type: array\n          items:\n            $ref: '#/components/schemas/CardReference'\n        serviceClassTypes:\n          description: \u003e-\n            list of service classes where this card applies\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceClassType'\n          maxItems: 4\n        cardType:\n          $ref: '#/components/schemas/CardType'\n        cardIdRequired:\n          description: \u003e-\n            the card id must be delivered in online sales\n          type: boolean\n          default: false\n        _links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n\n    ZoneDefinition:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Definition of a zone used to define regional validity. The area of the zone can be defined via a\n        geo-polygon, a complete list of all contained stations or area codes from the NUTS code list.\n        The carrier is either the carrier or transport authority responsible for the definition.\n      required:\n        - id\n        - carrier\n      properties:\n        id:\n          type: string\n          nullable: false\n        name:\n          type: string\n        carrier:\n          $ref: '#/components/schemas/CompanyRef'\n        polygon:\n          $ref: '#/components/schemas/Polygon'\n        nutsCodes:\n          type: array\n          items:\n            type: string\n        places:\n          type: array\n          items:\n            $ref: '#/components/schemas/PlaceRef'\n\n    Fare:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        The online representation of a fare.\n      required:\n        - id\n        - type\n        - prices\n        - regionalConstraint\n        - travelClass\n        - afterSalesCondition\n        - combinationConstraint\n        - travelValidityConstraint\n        - requiredCards\n      properties:\n        id:\n          description: \u003e-\n            id of the fare item to be included in accounting\n          type: string\n          nullable: false\n        type:\n          $ref: '#/components/schemas/FareType'\n        name:\n          $ref: '#/components/schemas/Text'\n        description:\n          $ref: '#/components/schemas/Text'\n        prices:\n          description: \u003e-\n            allows specifying a price in multiple currencies\n          type: array\n          items:\n            $ref: '#/components/schemas/Price'\n          minItems: 1\n        regionalConstraint:\n          $ref: '#/components/schemas/RegionalConstraint'\n        serviceConstraint:\n          $ref: '#/components/schemas/ServiceConstraint'\n        carrierConstraint:\n          $ref: '#/components/schemas/CarrierConstraint'\n        regulatoryConditions:\n          type: array\n          items:\n            $ref: '#/components/schemas/RegulatoryCondition'\n        serviceClass:\n          $ref: '#/components/schemas/ServiceClass'\n        travelClass:\n          $ref: '#/components/schemas/TravelClass'\n        afterSalesCondition:\n          $ref: '#/components/schemas/AfterSalesConditionsLink'\n        combinationConstraint:\n          type: array\n          items:\n            $ref: '#/components/schemas/FareCombinationModel'\n          minItems: 1\n        fulfillmentConstraint:\n          $ref: '#/components/schemas/FulfillmentConstraint'\n        travelValidityConstraint:\n          $ref: '#/components/schemas/TravelValidity'\n        availablePlaces:\n          type: array\n          items:\n            $ref: '#/components/schemas/AvailablePlace'\n        placeSelection:\n          $ref: '#/components/schemas/PlaceSelection'\n        placeAllocation:\n          type: array\n          items:\n            $ref: '#/components/schemas/PlaceAllocation'\n        coveredSection:\n          $ref: '#/components/schemas/Section'\n        passengerConstraints:\n          description: \u003e-\n            passenger constraint to be included in bar codes\n          type: array\n          items:\n            $ref: '#/components/schemas/PassengerConstraints'\n        involvedTCOs:\n          type: array\n          items:\n            $ref: '#/components/schemas/CompanyRef'\n        legacyAccountingIdentifier:\n          $ref: '#/components/schemas/LegacyAccountingIdentifier'\n        legacyReservationParameter:\n          $ref: '#/components/schemas/LegacyReservationParameter'\n        requiredCards:\n          description: \u003e-\n            One of the listed cards is required to be valid at the time of travel.\n          type: array\n          items:\n            $ref: '#/components/schemas/CardReference'\n          minItems: 1\n        luggageConstraint:\n          $ref: '#/components/schemas/LuggageConstraint'\n        availablePreferences:\n          type: array\n          items:\n            $ref: '#/components/schemas/AvailablePlacePreferences'\n\n    RegionalConstraint:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Regional constraint of the fare- offline bulk data use the id of connection points whereas  in an online environment the connection point is included\n      required:\n        - regionalValidities\n      properties:\n        entryConnectionPoint:\n          $ref: '#/components/schemas/FareConnectionPoint'\n        exitConnectionPoint:\n          $ref: '#/components/schemas/FareConnectionPoint'\n        regionalValidities:\n          type: array\n          items:\n            $ref: '#/components/schemas/RegionalValidity'\n          minItems: 1\n        distance:\n          description: \u003e-\n            Distance in km for statistics\n          type: integer\n          format: int32\n          minimum: 0\n\n    AfterSalesConditionsLink:\n      type: object\n      additionalProperties: false\n      required:\n        - conditions\n      properties:\n        conditions:\n          description: \u003e-\n            Structured description of the after-sales conditions.\n          type: array\n          items:\n            $ref: '#/components/schemas/AfterSaleCondition'\n          minItems: 1\n        isSupportingIndividualContracts:\n          description: \u003e-\n            Indicates that the after sales of this fare can be treated independently per person.\n          type: boolean\n          default: false\n\n    FulfillmentConstraint:\n      type: object\n      additionalProperties: false\n      required:\n        - acceptedControlSecurityTypes\n      properties:\n        acceptedControlSecurityTypes:\n          type: array\n          items:\n            $ref: '#/components/schemas/ControlSecurityType'\n          minItems: 1\n        acceptedBarCodes:\n          description: \u003e-\n            for SiD fulfillment one of the listed bar codes is required\n          type: array\n          items:\n            $ref: '#/components/schemas/BarCodeType'\n        requiredBarCodes:\n          description: \u003e-\n            One of the listed bar codes must be provided.\n          type: array\n          items:\n            $ref: '#/components/schemas/BarCodeType'\n        requiredSiS:\n          type: array\n          items:\n            $ref: '#/components/schemas/SiSType'\n        isIndividualTicketingForbidden:\n          description: \u003e-\n            a separate fulfillment per passenger is forbidden\n          type: boolean\n          default: false\n\n    TravelValidity:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        travel validity data are needed to create barcode and control data (IRS 90918-4)\n        in allocator mode even in case they have been checked during the online sale\n      required:\n        - validityRange\n      properties:\n        validTravelDates:\n          $ref: '#/components/schemas/Calendar'\n        validityRange:\n          $ref: '#/components/schemas/ValidityRange'\n        excludedTimeRanges:\n          description: \u003e-\n            time ranges excluded from the validity (e.g. off peak fulfillments)\n          type: array\n          items:\n            $ref: '#/components/schemas/ExcludedTimeRange'\n        numberOfTravelDays:\n          description: \u003e-\n            number of allowed travel days (e.g. 3 travel days within 2 weeks)\n          type: integer\n          format: int32\n        returnConstraint:\n          $ref: '#/components/schemas/ReturnConstraint'\n        trainValidity:\n          $ref: '#/components/schemas/TrainValidity'\n        validityType:\n          $ref: '#/components/schemas/ValidityType'\n        tripAllocationConstraint:\n          $ref: '#/components/schemas/TripAllocationConstraint'\n        tripInterruptionConstraint:\n          $ref: '#/components/schemas/TripInterruptionConstraint'\n\n    PassengerConstraints:\n      type: object\n      additionalProperties: false\n      properties:\n        number:\n          description: \u003e-\n            number of passengers with this constraint\n          type: integer\n          format: int32\n        upperAgeLimit:\n          type: integer\n          format: int32\n        lowerAgeLimit:\n          type: integer\n          format: int32\n\n    LegacyAccountingIdentifier:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        identifier of the fare in the current 301 accounting file\n      required:\n        - serialId\n      properties:\n        serialId:\n          description: \u003e-\n            sequential number of regional validities\n          type: integer\n          format: int32\n          minimum: 0\n          maximum: 99999\n          nullable: false\n        addId:\n          description: \u003e-\n            Sequential number of regional validities (leading positions in case the series\n            is too short).\n          type: integer\n          format: int32\n          minimum: 0\n          maximum: 99\n        tariffId:\n          description: \u003e-\n            Tarif id for the old serie format.\n          type: integer\n          format: int32\n          minimum: 0\n          maximum: 9999\n\n    LegacyReservationParameter:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        reservation parameter to support the UIC 90918-1 interface for booking\n      required:\n        - travelClass\n        - serviceLevelCode\n        - serviceCode\n      properties:\n        travelClass:\n          description: \u003e-\n            90918-1 class code in reservation\n          type: string\n          nullable: false\n        serviceLevelCode:\n          description: \u003e-\n            service level code defined in UIC 90918-1\n          type: string\n          nullable: false\n        serviceCode:\n          description: \u003e-\n            service code to be used in reservation\n          type: string\n          nullable: false\n        berthType:\n          description: \u003e-\n            berth type code in UIC 90918-1 to be used in reservation\n          type: string\n        coachTypeCode:\n          description: \u003e-\n            coach type code in UIC 90918-1 to be used in reservation\n          type: string\n        compartmentTypeCode:\n          description: \u003e-\n            compartment type code in UIC 90918-1 to be used in reservation\n          type: string\n        tariffs:\n          description: \u003e-\n            tariff according to UIC 90918-1 to be used for booking\n          type: array\n          items:\n            $ref: '#/components/schemas/LegacyReservationTariff'\n\n    BarCodeType:\n      description: \u003e-\n        Item according to IRS 90918-9: FCB, TLB, SSB\n      type: string\n      x-extensible-enum:\n        - FCB\n        - TLB\n        - SSB\n\n    SiSType:\n      type: string\n      x-extensible-enum:\n        - REGISTRY\n        - PEER_TO_PEER\n\n    TripInterruptionProcess:\n      description: \u003e-\n        Known Values:\n        - NONE\n        - MANUAL: passenger needs manual confirmation of train or station staff to interrupt the trip.\n        - ACTIVATION: Passenger needs to deactivate the ticket during the interruption (via an app).\n      type: string\n      x-extensible-enum:\n        - NONE\n        - MANUAL\n        - ACTIVATION\n\n    TripAllocationProcess:\n      description: \u003e-\n        Known Values:\n        - NONE: Individual trips don't need to be allocated.\n        - MANUAL: The passenger has to allocate a trip manually (This should not be used as it is by design non-interoperable).\n        - ACTIVATION: Individual trips can be allocated by activation of the ticket.\n        - FULFILLMENT: A new fulfillment needs to be created to allocate a trip.\n      type: string\n      x-extensible-enum:\n        - NONE\n        - MANUAL\n        - ACTIVATION\n        - FULFILLMENT\n\n    TripAllocationUnit:\n      description: \u003e-\n        Unit to allocate trips in a multi-trip fare. Trips can be allocated per day (e.g. Eurail) or per\n        duration (e.g. multiples of a duration unit to cover the trip) or as single trips (e.g. carnet))\n        Known Values:\n        - NONE: Individual trips don't need to be allocated. \n        - TRIP: allocation per individual trip.\n        - DAY: The allocation is per travel day.\n        - DURATION: the allocation is per duration.\n      type: string\n      x-extensible-enum:\n        - NONE\n        - TRIP\n        - DAY\n        - DURATION\n\n    TripAllocationConstraint:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        constraint on the use of a multiple trip ticket\n      required:\n        - allocationUnit\n        - requiredProcesses\n      properties:\n        allocationUnit:\n          $ref: '#/components/schemas/TripAllocationUnit'\n        maxUnits:\n          description: \u003e-\n            maximum number of allowed units to be allocated\n          type: integer\n          format: int32\n        durationUnit:\n          description: \u003e-\n            multiples of this duration can be allocated\n          type: string\n          format: duration\n          example: PT30M\n        requiredProcesses:\n          description: \u003e-\n            one of the listed processes is required for the allocation of a single trip\n          type: array\n          items:\n            $ref: '#/components/schemas/TripAllocationProcess'\n          minItems: 1\n\n    TripInterruptionConstraint:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        rules on allowed trip interruptions. Interruptions due to a train change\n        indicated by a trip search must not be included here.\n      required:\n        - maxInterruptions\n        - requiredProcesses\n      properties:\n        maxInterruptions:\n          description: \u003e-\n            maximum number of allowed interruptions\n          type: integer\n          format: int32\n          nullable: false\n        maxDuration:\n          description: \u003e-\n            maximum duration of one interruption\n          type: string\n          format: duration\n          example: PT30M\n        totalMaxDuration:\n          description: \u003e-\n            maximum duration of all interruptions on the route\n          type: string\n          format: duration\n          example: PT30M\n        requiredProcesses:\n          description: \u003e-\n            one of the listed processes is required for the interruption of the trip\n          type: array\n          items:\n            $ref: '#/components/schemas/TripInterruptionProcess'\n          minItems: 1\n\n    RegulatoryCondition:\n      description: \u003e-\n        General conditions applied to cover legal regulations within the area of validity. Allocators must\n        reflect these terms and conditions in the conditions of combined offers and indicate them to the customer\n        where required. Which indications are mandatory to be shown to the customer is defined in the SCICs.\n        \n        Valid Values:\n        - CIV: terms and conditions according to COTIV regulation\n        - MD: terms and conditions according to SMPS regulation\n        - EU_PRR: terms and conditions according to EU-PRR regulation\n      type: string\n      enum:\n        - CIV\n        - MD\n        - EU_PRR\n\n    Calendar:\n      type: object\n      additionalProperties: false\n      properties:\n        from:\n          type: string\n          format: date-time\n        until:\n          type: string\n          format: date-time\n        dates:\n          description: \u003e-\n            dates included in the calendar. In case no dates are provided the range is assumed to be valid\n          type: array\n          items:\n            type: string\n            format: date-time\n        utcOffset:\n          description: \u003e-\n            offset to UTC in minutes (number of minutes to be added to get UTC dates)\n          type: integer\n          format: int32\n\n    FareCombinationModel:\n      type: object\n      additionalProperties: false\n      required:\n        - model\n      properties:\n        model:\n          description: \u003e-\n            Possible models are SEPARATE_TICKET, SEPARATE_CONTRACT, CLUSTERING, COMBINING.\n            The models need to be supported by the allocator.\n          type: string\n          nullable: false\n        combinableCarriers:\n          description: \u003e-\n            List of all carriers where the model can be applied, in case the list is empty\n            all combinations are allowed.\n          type: array\n          items:\n            $ref: '#/components/schemas/CompanyRef'\n        isValidOnlyWhenCombined:\n          description: \u003e-\n            This combination model applies only in case the fare is combined with another carrier\n          type: boolean\n          default: false\n        referenceCluster:\n          description: \u003e-\n            In case of CLUSTERING model: the cluster to which the fare belongs\n          type: string\n        allowedClusters:\n          description: \u003e-\n            In case of CLUSTERING model: the other clusters that allow a combination\n          type: array\n          items:\n            type: string\n        allowedCommonContracts:\n          description: \u003e-\n            List of carriers where a common contract with separate fulfillments are allowed.\n          type: array\n          items:\n            $ref: '#/components/schemas/CompanyRef'\n\n    ServiceConstraint:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Either excluded or included service brands can be set.\n      properties:\n        restrictedToServiceBrands:\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceBrandCode'\n        excludedServiceBrands:\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceBrandCode'\n        description:\n          $ref: '#/components/schemas/Text'\n\n    RegionalValidity:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        One of the elements Zone, ViaStation, TrainLink, Line, or Polygon defining the regional validity\n      properties:\n        seqNb:\n          description: \u003e-\n            order number of the list item\n          type: integer\n          format: int32\n        zone:\n          $ref: '#/components/schemas/Zone'\n        route:\n          $ref: '#/components/schemas/Route'\n        trainLink:\n          $ref: '#/components/schemas/TrainLink'\n        line:\n          $ref: '#/components/schemas/Line'\n        polygon:\n          $ref: '#/components/schemas/Polygon'\n        serviceConstraint:\n          $ref: '#/components/schemas/ServiceConstraint'\n\n    Line:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        terminalStation - in case the product requires a destination within the zone (e.g. local ticket\n        to go to the main rail station).\n        entryStation - Station to enter the zone in case the product requires to enter the zone via a\n        specific station (e.g. local zone ticket to start from the main rail station).\n      required:\n        - carrier\n      properties:\n        binaryLineId:\n          description: \u003e-\n            Id to support local traffic standards (e.g. VDV,...).\n          type: string\n          format: byte\n        carrier:\n          $ref: '#/components/schemas/CompanyRef'\n        city:\n          type: integer\n          format: int32\n        entryStation:\n          $ref: '#/components/schemas/StopPlace'\n        lineIds:\n          type: array\n          items:\n            type: string\n        terminalStation:\n          $ref: '#/components/schemas/StopPlace'\n        nutsCode:\n          description: \u003e-\n            Nomenclature des units territoriales statistiques\n             COMMISSION REGULATION (EU) No 31/2011\n          type: string\n\n    TrainLink:\n      type: object\n      additionalProperties: false\n      required:\n        - fromStation\n        - toStation\n        - train\n        - travelDate\n        - serviceBrandCode\n        - serviceBrandAbbreviation\n      properties:\n        fromStation:\n          $ref: '#/components/schemas/StopPlaceRef'\n        toStation:\n          $ref: '#/components/schemas/StopPlaceRef'\n        train:\n          type: string\n          nullable: false\n        travelDate:\n          description: \u003e-\n            date and time of the departure where the train link starts\n          type: string\n          format: date-time\n          nullable: false\n        serviceBrandCode:\n          $ref: '#/components/schemas/ServiceBrandCode'\n        serviceBrandAbbreviation:\n          description: \u003e-\n            Abbreviation of the service brand, e.g. \"IC\", \"TGV\". See the OSDM code list. Needs to match the service brand code.\n          type: string\n          nullable: false\n\n    Polygon:\n      type: object\n      additionalProperties: false\n      required:\n        - edges\n      properties:\n        edges:\n          type: array\n          items:\n            $ref: '#/components/schemas/GeoPosition'\n          minItems: 1\n\n    Route:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Route description including the first and last real stopPoint\n      properties:\n        routeItem:\n          $ref: '#/components/schemas/RouteItem'\n        routeItemList:\n          description: \u003e-\n            list of route items referenced within the list\n          type: array\n          items:\n            $ref: '#/components/schemas/RouteItem'\n\n    RouteItem:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Items to compose routes (Note - replaced viaStation, content compliant with viaStation in IRS 90918-4 and 90918-9)\n      properties:\n        alternativeRouteItemIndices:\n          description: \u003e-\n            list of alternative route parts to be used on this travel path referenced by the index in the provided list of route items\n          type: array\n          items:\n            type: integer\n            format: int32\n        carrierConstraint:\n          $ref: '#/components/schemas/CarrierConstraint'\n        routeItemIndices:\n          description: \u003e-\n            sequence of route items along the travel path referenced by the index in the provided list of route items\n          type: array\n          items:\n            type: integer\n            format: int32\n        serviceConstraint:\n          $ref: '#/components/schemas/ServiceConstraint'\n        station:\n          $ref: '#/components/schemas/StopPlace'\n        fareReferenceStation:\n          $ref: '#/components/schemas/FareReferenceStation'\n\n    FareReferenceStation:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Reference to a list of stations jointly valid in a fare. The fare\n        reference station defines a set of station that are equivalent from\n        a tariff point of view. The code is issued by the carrier. Needed to\n        generate bar codes as well as fulfillments.\n      required:\n        - name\n        - code\n        - carrier\n        - stations\n      properties:\n        name:\n          type: string\n          nullable: false\n        code:\n          type: string\n          nullable: false\n        carrier:\n          $ref: '#/components/schemas/CompanyRef'\n        stations:\n          type: array\n          items:\n            $ref: '#/components/schemas/StopPlaceRef'\n          minItems: 1\n\n    CarrierConstraint:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Either excluded or included carriers can be set.\n      properties:\n        includedCarriers:\n          type: array\n          items:\n            type: string\n        excludedCarriers:\n          type: array\n          items:\n            type: string\n\n    Zone:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        carrier - carrier responsible for the transport.\n        entryStation - Station to enter the zone in case the product requires to enter the zone via a specific station\n        (e.g. local zone ticket to start from the main rail station).\n        terminalStation - Terminal station in case the product requires a destination within the zone (e.g. local ticket\n        to go to the main rail station).\n      required:\n        - carrier\n      properties:\n        binaryZoneId:\n          description: \u003e-\n            Id to support local traffic standards (e.g. VDV,...)\n          type: string\n          format: byte\n        carrier:\n          $ref: '#/components/schemas/CompanyRef'\n        name:\n          type: string\n        entryStation:\n          $ref: '#/components/schemas/StopPlace'\n        terminalStation:\n          $ref: '#/components/schemas/StopPlace'\n        zoneIds:\n          description: \u003e-\n            to be used in bar codes\n          type: array\n          items:\n            type: integer\n            format: int32\n        nutsCode:\n          description: \u003e-\n            Nomenclature des units territoriales statistiques COMMISSION REGULATION (EU) No 31/2011\n          type: string\n\n    ControlSecurityType:\n      description: \u003e-\n        Known Values:\n        - SiP: secure paper tickets\n        - SiD: security in data (signed bar code)\n        - SiS: security in system\n      type: string\n      x-extensible-enum:\n        - SiP\n        - SiD\n        - SiS\n\n    LegacyReservationTariff:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Legacy tariff code and number of items or persons in case UIC 90918-1 is used for booking.\n      properties:\n        number:\n          description: \u003e-\n            number of items with this tariff code\n          type: integer\n          format: int32\n        code:\n          description: \u003e-\n            legacy tariff code\n          type: integer\n          format: int32\n\n    FareType:\n      description: \u003e-\n        Basic UIC fare types used in 90918-10, 90918-4, and 90918-9.\n      type: string\n      x-extensible-enum:\n        - ADMISSION\n        - RESERVATION\n        - INTEGRATED_RESERVATION\n        - ANCILLARY\n\n    FareConnectionPoint:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Connection point connecting two fare regimes. The connection is possible between stations of the two provided station sets.\n        A legacy border point code (id) might be provided as an additional code within the stations (code list BORDER_POINT provided in URN).\n        In case the connection point is a real station this station is indicated.\n        In case the connection point is between stations for each side of the border real stations must be provided.\n        Multiple sets of station can be provided in the rare case that the connection point connects more than two station (A-B and A-C).\n        Multiple stations within a set at one side of the border might be provided in case of changes (new stations build near the border).\n        \n        Providing the UIC code for the station is mandatory.\n      required:\n        - stationSets\n      properties:\n        name:\n          type: string\n        stationSets:\n          type: array\n          items:\n            $ref: '#/components/schemas/StationSet'\n          minItems: 1\n\n    StationSet:\n      type: object\n      additionalProperties: false\n      required:\n        - stations\n      properties:\n        stations:\n          type: array\n          items:\n            $ref: '#/components/schemas/StopPlaceRef'\n          minItems: 1\n\n    TrainValidity:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Validity depending on boarding / leaving of a train. The ticket is valid\n        from departure until the destination station in the train if departure or destination is within the from - until range.\n        The validation can reference the departure or the destination time to decide the validity (e.g. Eurail/Interrail passes\n        currently use the departure for the validity on night trains).\n      required:\n        - from\n        - until\n        - carriers\n        - scope\n      properties:\n        from:\n          type: string\n          format: date-time\n          nullable: false\n        until:\n          type: string\n          format: date-time\n          nullable: false\n        carriers:\n          type: array\n          items:\n            $ref: '#/components/schemas/CompanyRef'\n          minItems: 1\n        excludedServiceBrands:\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceBrandCode'\n        includedServiceBrands:\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceBrandCode'\n        scope:\n          $ref: '#/components/schemas/TrainValidityScope'\n\n    TrainValidityScope:\n      type: string\n      enum:\n        - BOARDING\n        - ARRIVAL\n\n    GeoPosition:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        WGS84 coordinates position. Provided by OJP.\n      required:\n        - longitude\n        - latitude\n      properties:\n        longitude:\n          $ref: '#/components/schemas/Longitude'\n        latitude:\n          $ref: '#/components/schemas/Latitude'\n\n    Longitude:\n      type: number\n      format: double\n      description: \u003e-\n        Longitude from Greenwich Meridian. -180 (West) to +180 (East). Decimal degrees. eg 2.356.\n      minimum: -180\n      maximum: 180\n      nullable: false\n      example: 8.54021\n\n    Latitude:\n      type: number\n      format: double\n      description: \u003e-\n        Latitude from equator. -90 (South) to +90 (North). Decimal degrees. e.g. 56.356.\n      minimum: -90\n      maximum: 90\n      nullable: false\n      example: 47.37818\n\n    Section:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Allows to indicate the sub-part of the trip. LegIds are only relevant if\n        a trip can be referenced. When absent, the totality of the trip is priced.\n      properties:\n        startPlace:\n          $ref: '#/components/schemas/PlaceRef'\n        startLegId:\n          type: string\n        endPlace:\n          $ref: '#/components/schemas/PlaceRef'\n        endLegId:\n          type: string\n\n    Link:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        The underlying system may provide links for pagination of links pointing on\n        further information (such as HTML download links, web sites or extended APIs).\n        Mechanism to add flexible extensions specific to an underlying system. Implemented\n        the JSON-HAL specification.\n      required:\n        - rel\n        - href\n      properties:\n        rel:\n          description: \u003e-\n            the 'rel' field in HATEOAS navigation.\n          type: string\n          nullable: false\n          example: self\n        href:\n          description: \u003e-\n            Allows to provide a value to the link, for example id of the targeted resource or displayable representation for the link.\n          type: string\n          format: uri\n          nullable: false\n          example: https://api.osdm.com/trips-collections/12345?cursor=2\n        type:\n          description: \u003e-\n            Hint to indicate the media type expected when dereferencing the target resource.\n          type: string\n          example: application/json\n        value:\n          description: \u003e-\n            Allows to provide a value to the link, for example id of the targeted resource or displayable representation for the link.\n          type: string\n\n    Translation:\n      type: object\n      additionalProperties: false\n      required:\n        - language\n        - text\n      properties:\n        language:\n          description: \u003e-\n            ISO-639-1 language code\n          type: string\n          nullable: false\n        text:\n          type: string\n          nullable: false\n        shortText:\n          type: string\n\n    Text:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Directly included text in case of online services. Text must be encoded in UTF-8 format.\n      required:\n        - id\n        - text\n      properties:\n        id:\n          type: string\n          nullable: false\n        translations:\n          type: array\n          items:\n            $ref: '#/components/schemas/Translation'\n        text:\n          type: string\n          nullable: false\n        shortText:\n          type: string\n\n    Price:\n      type: object\n      additionalProperties: false\n      required:\n        - currency\n        - amount\n      properties:\n        currency:\n          $ref: '#/components/schemas/Currency'\n        amount:\n          description: \u003e-\n            amount in cents\n          type: integer\n          format: int32\n          nullable: false\n        scale:\n          description: \u003e-\n            scale of the amount - the number of positions after the comma\n          type: integer\n          format: int32\n          default: 2\n        vats:\n          type: array\n          items:\n            $ref: '#/components/schemas/VAT'\n\n    Currency:\n      type: string\n      description: \u003e-\n        ISO 4217 currency codes\n      nullable: false\n      example: CHF, EUR, SEK\n\n    VAT:\n      type: object\n      additionalProperties: false\n      required:\n        - countryCode\n        - amount\n      properties:\n        countryCode:\n          $ref: '#/components/schemas/CountryCode'\n        amount:\n          description: \u003e-\n            amount in cents\n          type: integer\n          format: int32\n          nullable: false\n          example: 5\n        scale:\n          description: \u003e-\n            scale of the amount - the number of positions after the comma\n          type: integer\n          format: int32\n          default: 2\n        percentage:\n          type: number\n          format: float\n        taxId:\n          type: string\n        scope:\n          $ref: '#/components/schemas/VatScope'\n\n    VatScope:\n      description: \u003e-\n        scope where the VAT applies\n      type: string\n      x-extensible-enum:\n        - INTERNATIONAL\n        - NATIONAL\n        - SHORT_DISTANCE\n        - LONG_DISTANCE\n\n    CompanyRef:\n      type: string\n      description: \u003e-\n        Identifies a company. For rail, a RICS company code or compatible ERA company code are used.\n      nullable: false\n      example: urn:uic:rics:1185:000011\n\n    ServiceBrandCode:\n      type: string\n      description: \u003e-\n        Service brand codes. For public transport, a code list can be found in OSDM's code list. E.g., '163' denotes TGV Lyria and '175' denotes Glacier Express.\n      nullable: false\n      example: 163, 175\n\n    ServiceClass:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Class of service.\n      required:\n        - type\n        - name\n      properties:\n        type:\n          $ref: '#/components/schemas/ServiceClassType'\n        name:\n          description: \u003e-\n            The name the carrier itself uses to designate this specific service class.\n          type: string\n          nullable: false\n\n    ServiceClassType:\n      description: \u003e-\n        Type of quality level, finer grained than the comfort class.\n      type: string\n      x-extensible-enum:\n        - BEST\n        - HIGH\n        - STANDARD\n        - BASIC\n        - ANY_CLASS\n\n    Condition:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Describes sales, usage and after sales conditions applicable to the product.  See after sales conditions for individual after sales amounts.\n      required:\n        - type\n        - description\n        - shortDescription\n      properties:\n        type:\n          $ref: '#/components/schemas/ConditionType'\n        description:\n          type: string\n          minLength: 1\n          nullable: false\n        shortDescription:\n          type: string\n          minLength: 1\n\n    ConditionType:\n      type: string\n      x-extensible-enum:\n        - SALE\n        - PLACE_CHANGE\n        - FULFILLMENT\n        - EXCHANGE\n        - REFUND\n        - TRAVEL\n\n    AvailablePlace:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Describes the details of the available places.\n      required:\n        - accommodationType\n        - accommodationSubType\n        - tripLegCoverage\n      properties:\n        accommodationType:\n          $ref: '#/components/schemas/AccommodationType'\n        accommodationSubType:\n          $ref: '#/components/schemas/AccommodationSubType'\n        placeProperties:\n          type: array\n          items:\n            type: string\n        numericAvailability:\n          type: integer\n          format: int32\n        tripLegCoverage:\n          $ref: '#/components/schemas/TripLegCoverage'\n\n    PlaceAllocation:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Describes the details of the reserved place(s).\n      required:\n        - accommodationType\n        - accommodationSubType\n        - reservedPlaces\n        - tripLegCoverage\n      properties:\n        accommodationType:\n          $ref: '#/components/schemas/AccommodationType'\n        accommodationSubType:\n          $ref: '#/components/schemas/AccommodationSubType'\n        reservedPlaces:\n          description: \u003e-\n            Reserved places in a confirmed reservation.\n            Multiple place packs are needed to combined person and bicycle reservations\n          type: array\n          items:\n            $ref: '#/components/schemas/ReservedPlace'\n          minItems: 1\n        tripLegCoverage:\n          $ref: '#/components/schemas/TripLegCoverage'\n\n    ReservedPlace:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Selection of places with common properties description element - textual description of the places\n        placeProperties is mandatory for allocator mode, for distributors the textual description is used\n      required:\n        - id\n        - passengerIds\n        - vehicleNumber\n        - coachNumber\n      properties:\n        id:\n          type: string\n          nullable: false\n        passengerIds:\n          description: \u003e-\n            Id of the passenger\n          type: array\n          items:\n            type: string\n          minItems: 1\n          nullable: false\n        vehicleNumber:\n          description: \u003e-\n            vehicle number (e.g. train number)\n          type: string\n          nullable: false\n        coachNumber:\n          type: string\n          nullable: false\n        placeDescription:\n          description: \u003e-\n            description of the places (e.g. 11-35,51)\n          type: string\n        placeNumbers:\n          description: \u003e-\n            list of individual place numbers\n          type: array\n          items:\n            type: string\n        placeProperties:\n          description: \u003e-\n            place properties to be indicated to the customer\n          type: array\n          items:\n            $ref: '#/components/schemas/PlaceProperty'\n\n    PlaceProperty:\n      type: string\n      description: \u003e-\n        see code list\n      nullable: false\n      example: Power Connection\n\n    AccommodationType:\n      type: string\n      description: \u003e-\n        Accommodation type definition out of the Accommodation Type Code List\n      default: 'SEAT'\n      nullable: false\n\n    AccommodationSubType:\n      type: string\n      description: \u003e-\n        Accommodation sub type definition out of the Accommodation Sub Type Code List\n      default: 'ANY_SEAT'\n      nullable: false\n\n    PlaceSelection:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Place selection options and selected options in an offer\n        - reference place for adjacent reservation\n        - selected optional place properties\n        - selected places from a graphical place selection\n      required:\n        - reservationId\n        - tripLegCoverage\n      properties:\n        reservationId:\n          type: string\n          nullable: false\n        referencePlace:\n          $ref: '#/components/schemas/SelectedReferencePlace'\n        accommodations:\n          type: array\n          items:\n            $ref: '#/components/schemas/SelectedAccommodation'\n        places:\n          type: array\n          items:\n            $ref: '#/components/schemas/SelectedPlace'\n        tripLegCoverage:\n          $ref: '#/components/schemas/TripLegCoverage'\n\n    AvailablePlacePreferences:\n      type: object\n      additionalProperties: false\n      properties:\n        preferenceGroups:\n          description: \u003e-\n            possible preferences to be requested in reservation without changing the fare\n          type: array\n          items:\n            $ref: '#/components/schemas/PlacePreferenceGroup'\n        graphicalReservation:\n          description: \u003e-\n            graphical reservation is supported, interface type 'NO','UIC_918',..\n          type: string\n\n    PlacePreferenceGroup:\n      type: object\n      additionalProperties: false\n      required:\n        - preferenceGroup\n        - preferences\n      properties:\n        preferenceGroup:\n          type: string\n          nullable: false\n          example: SEAT_DIRECTION\n        preferences:\n          type: array\n          items:\n            type: string\n          minItems: 1\n          nullable: false\n          example: FORWARD_FACING\n\n    SelectedReferencePlace:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        reference place for an adjacent reservation\n      required:\n        - coachNumber\n        - placeNumber\n      properties:\n        coachNumber:\n          type: string\n          nullable: false\n        placeNumber:\n          type: string\n          nullable: false\n\n    SelectedAccommodation:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Place selection of places for reservation linked to passengers.\n      required:\n        - passengerRefs\n        - accommodationType\n        - accommodationSubType\n      properties:\n        passengerRefs:\n          description: \u003e-\n            Id of the passenger\n          type: array\n          items:\n            type: string\n          minItems: 1\n          nullable: false\n        accommodationType:\n          $ref: '#/components/schemas/AccommodationType'\n        accommodationSubType:\n          $ref: '#/components/schemas/AccommodationSubType'\n        placeProperties:\n          description: \u003e-\n            Properties of places as defined in 90810-10.\n            selection from the optional place properties provided in the offer\n          type: array\n          items:\n            type: string\n\n    PlaceAvailabilityResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        warnings:\n          $ref: '#/components/schemas/WarningCollection'\n        vehicleAvailability:\n          $ref: '#/components/schemas/PlaceAvailability'\n\n    PlaceAvailability:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Availability of places on vehicle.\n      required:\n        - vehicle\n      properties:\n        vehicle:\n          $ref: '#/components/schemas/Vehicle'\n        preSelections:\n          description: \u003e-\n            suggested pre-selection of places\n          type: array\n          items:\n            $ref: '#/components/schemas/PlacePreSelection'\n\n    PlacePreSelection:\n      type: object\n      additionalProperties: false\n      properties:\n        coach:\n          type: string\n        place:\n          type: string\n\n    Vehicle:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        List of the coaches in a vehicle run ordered according to the physical\n        ordering of the vehicle.\n      required:\n        - coaches\n      properties:\n        coaches:\n          type: array\n          items:\n            $ref: '#/components/schemas/Coach'\n          minItems: 1\n\n    Coach:\n      type: object\n      additionalProperties: false\n      required:\n        - compartments\n        - number\n        - status\n        - layoutId\n      properties:\n        compartments:\n          type: array\n          items:\n            $ref: '#/components/schemas/Compartment'\n          minItems: 1\n        number:\n          description: \u003e-\n            coach number\n          type: string\n          nullable: false\n        status:\n          $ref: '#/components/schemas/AvailabilityStatus'\n        layoutId:\n          description: \u003e-\n            id to identify the coach layout\n          type: string\n          nullable: false\n        layoutIdUpperDeck:\n          description: \u003e-\n            id to identify a layout for the upper deck in a double deck coach\n          type: string\n        layoutIdLowerDeck:\n          description: \u003e-\n            id to identify a layout for the lower deck in a double deck coach\n          type: string\n        direction:\n          $ref: '#/components/schemas/TravelDirectionType'\n        owner:\n          $ref: '#/components/schemas/CompanyRef'\n        specialCoach:\n          $ref: '#/components/schemas/SpecialCoachType'\n\n    TravelDirectionType:\n      description: \u003e-\n        indication of the direction of travel standard direction is left\n        to right with ascending coordinates in the layout values.\n      type: string\n      x-extensible-enum:\n        - UNSPECIFIED\n        - IN_DIRECTION\n        - OPPOSITE_DIRECTION\n        - CHANGING\n        - STARING_IN_DIRECTION\n\n    SpecialCoachType:\n      description: \u003e-\n        indication of special coach\n      type: string\n      x-extensible-enum:\n        - RESTAURANT_COACH\n        - BICYCLE_COACH\n        - LUGGAGE_COACH\n        - TRAIN_HEAD\n\n    Compartment:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Areas within a coach that holds places. Areas might be selectable\n        as a whole. Usual areas would be classic compartments.\n      required:\n        - places\n        - status\n      properties:\n        places:\n          type: array\n          items:\n            $ref: '#/components/schemas/PlacePosition'\n          minItems: 1\n        isSelectable:\n          description: \u003e-\n            Indicates whether compartments are selectable as a whole only\n          type: boolean\n          default: false\n        status:\n          $ref: '#/components/schemas/AvailabilityStatus'\n        travelClass:\n          $ref: '#/components/schemas/TravelClass'\n        serviceClass:\n          $ref: '#/components/schemas/ServiceClassType'\n\n    PlacePosition:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        description of a place\n      required:\n        - number\n        - status\n      properties:\n        number:\n          description: \u003e-\n            place number as indicated at the place in the coach\n          type: string\n          nullable: false\n        status:\n          $ref: '#/components/schemas/AvailabilityStatus'\n        isSelectable:\n          description: \u003e-\n            Flag to indicate individual places as non-selectable in\n            case complete compartments must be selected.\n          type: boolean\n          default: true\n        placeProperties:\n          type: array\n          items:\n            $ref: '#/components/schemas/PlaceProperty'\n\n    AvailabilityStatus:\n      description: \u003e-\n        status of the place or coach\n      type: string\n      enum:\n        - ALLOCATED\n        - FREE\n        - RESTRICTED\n      default: FREE\n\n    SelectedPlace:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        selected place in case of graphical booking\n      required:\n        - coachNumber\n        - placeNumber\n        - passengerRef\n      properties:\n        coachNumber:\n          type: string\n          nullable: false\n        placeNumber:\n          type: string\n          nullable: false\n        passengerRef:\n          description: \u003e-\n            Id of the passenger\n          type: string\n          nullable: false\n\n    PurchaserResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        warnings:\n          $ref: '#/components/schemas/WarningCollection'\n        purchaser:\n          $ref: '#/components/schemas/Purchaser'\n\n    Purchaser:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        purchaser information\n      required:\n        - id\n      properties:\n        id:\n          type: string\n          nullable: false\n        externalRef:\n          description: \u003e-\n            A stable reference to a purchaser from other elements, or from caller system. When received in input of a request, it must be echoed back in the response.\n          type: string\n        detail:\n          $ref: '#/components/schemas/PersonDetail'\n        _links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n        companyDetails:\n          $ref: '#/components/schemas/CompanyDetail'\n\n    PurchaserSpecification:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Minimal specification of a purchaser to request booking of an offer.\n      required:\n        - detail\n      properties:\n        externalRef:\n          description: \u003e-\n            A stable reference to a purchaser from other elements, or from caller system. When received in input of a request, it must be echoed back in the response.\n          type: string\n        detail:\n          $ref: '#/components/schemas/PersonDetail'\n        companyDetails:\n          $ref: '#/components/schemas/CompanyDetail'\n\n    PassengerResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        warnings:\n          $ref: '#/components/schemas/WarningCollection'\n        passenger:\n          $ref: '#/components/schemas/Passenger'\n\n    Passenger:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Information about a passenger.\n        \n        Either the date of birth or the age at the time of travel needs to be set. We recommend to use date of birth as it is more stable than age.\n      required:\n        - id\n        - externalRef\n        - type\n      properties:\n        id:\n          type: string\n          nullable: false\n        summary:\n          description: \u003e-\n            A human-readable description of the passenger.\n          type: string\n        externalRef:\n          description: \u003e-\n            A stable reference to a passenger from other elements, or from caller system.\n            When passed in passenger specification in an offer request, it must be echoed back in the\n            response.\n          type: string\n          nullable: false\n        dateOfBirth:\n          description: \u003e-\n            date of birth of the passenger\n          type: string\n          format: date\n        type:\n          $ref: '#/components/schemas/PassengerType'\n        cards:\n          description: \u003e-\n            reduction or loyalty cards owned by the passenger\n          type: array\n          items:\n            $ref: '#/components/schemas/CardReference'\n        gender:\n          $ref: '#/components/schemas/Gender'\n        detail:\n          $ref: '#/components/schemas/PersonDetail'\n        identificationCard:\n          $ref: '#/components/schemas/IdentificationCard'\n        transportableDetails:\n          $ref: '#/components/schemas/Transportable'\n        prmNeeds:\n          description: \u003e-\n            For the persons with reduced mobility (PRMs) its specific needs for support are expressed.\n          type: array\n          items:\n            $ref: '#/components/schemas/PRMNeedType'\n        _links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n        age:\n          type: integer\n          format: int32\n          minimum: 0\n          exclusiveMinimum: true\n\n    AnonymousPassengerSpecification:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Minimal specification of a passenger to request offers without any GDPR relevant attributes such as name or address.\n        \n        Either the date of birth or the age at the time of travel needs to be set. We recommend to use date of birth as it is more stable than age.\n      required:\n        - externalRef\n        - type\n      properties:\n        externalRef:\n          description: \u003e-\n            A stable reference to a passenger from other elements, or from caller system. When received in input of a request, it must be echoed back in the response.\n          type: string\n          nullable: false\n          example: TK-id-12345\n        dateOfBirth:\n          description: \u003e-\n            Date of birth of the passenger. Only needed for passengers of type persons, family child, PRM\n            and wheelchair.\n          type: string\n          format: date\n        age:\n          description: \u003e-\n            Age of the passenger  at the date of travel. Less stable than the state of birth.\n          type: integer\n          format: int32\n          minimum: 0\n          exclusiveMinimum: true\n        type:\n          $ref: '#/components/schemas/PassengerType'\n        cards:\n          type: array\n          items:\n            $ref: '#/components/schemas/CardReference'\n        prmNeeds:\n          type: array\n          items:\n            $ref: '#/components/schemas/PRMNeedType'\n\n    PassengerSpecification:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Minimal specification of a passenger to request offers.\n        \n        Either the date of birth or the age at the time of travel needs to be set. We recommend to use date of birth as it is more stable than age.\n      required:\n        - externalRef\n        - type\n      properties:\n        externalRef:\n          description: \u003e-\n            A stable reference to a passenger from other elements, or from caller system. When received in input of a request, it must be echoed back in the response.\n          type: string\n          nullable: false\n          example: TK-id-12345\n        dateOfBirth:\n          description: \u003e-\n            Date of birth of the passenger. Only needed for passengers of type persons, family child, PRM\n            and wheelchair.\n          type: string\n          format: date\n        age:\n          description: \u003e-\n            Age of the passenger  at the date of travel. Less stable than the state of birth.\n          type: integer\n          format: int32\n          minimum: 0\n          exclusiveMinimum: true\n        cards:\n          description: \u003e-\n            reduction or loyalty cards owned by the passenger\n          type: array\n          items:\n            $ref: '#/components/schemas/CardReference'\n        prmNeeds:\n          description: \u003e-\n            For the persons with reduced mobility (PRMs) its specific needs for support are expressed.\n          type: array\n          items:\n            $ref: '#/components/schemas/PRMNeedType'\n        detail:\n          $ref: '#/components/schemas/PersonDetail'\n        type:\n          $ref: '#/components/schemas/PassengerType'\n\n    PassengerType:\n      description: \u003e-\n        Passenger type according to UIC passenger, i.e. passenger type list.\n        See https://unioninternationalcheminsdefer.github.io/OSDM/spec/catalog-of-code-lists/\n        Proposed default PERSON\n      type: string\n      x-extensible-enum:\n        - DOG\n        - PET\n        - LUGGAGE\n        - PRM\n        - BICYCLE\n        - PRAM\n        - COMPANION_DOG\n        - CAR\n        - PERSON\n        - MOTORCYCLE\n        - TRAILER\n        - FAMILY_CHILD\n        - WHEELCHAIR\n      default: PERSON\n\n    PRMNeedType:\n      type: string\n      x-extensible-enum:\n        - NEED_PRM_SUPPORT\n        - WHEELCHAIR\n        - ACCOMPANYING_DOG\n        - COMPANION_SEAT\n        - COMPANION\n\n    PersonDetail:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Personal information potentially needed at booking step. To support privacy by design,\n        it is not permitted to send personal information not required to create a valid booking.\n      required:\n        - firstName\n        - lastName\n      properties:\n        preferredLanguage:\n          description: \u003e-\n            ISO-639-1 language code\n          type: string\n        summary:\n          description: \u003e-\n            A human-readable description of the person.\n          type: string\n        firstName:\n          type: string\n          nullable: false\n        lastName:\n          type: string\n          nullable: false\n        eMail:\n          type: string\n        phoneNumber:\n          description: \u003e-\n            Preferably a mobile phone number, to be contacted in case changes to the booking occur, e.g.,\n            in case of interruptions.\n          type: string\n        address:\n          $ref: '#/components/schemas/Address'\n\n    Gender:\n      description: \u003e-\n        The gender of the passenger, which is important in the case of night trains.\n      type: string\n      enum:\n        - MALE\n        - FEMALE\n        - X\n\n    Transportable:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Transportables which are handled similar to passengers like dogs, bicycles, car transport.\n        These transportables might need a ticket or reservation.\n      required:\n        - type\n      properties:\n        type:\n          $ref: '#/components/schemas/TransportableType'\n        car:\n          $ref: '#/components/schemas/Car'\n        motorCycle:\n          $ref: '#/components/schemas/MotorCycle'\n        trailer:\n          $ref: '#/components/schemas/Trailer'\n\n    TransportableType:\n      description: \u003e-\n        Subset of the values from the passenger type code list IRS 90918-10\n      type: string\n      x-extensible-enum:\n        - PET\n        - BICYCLE\n        - CAR\n        - MOTOR_CYCLE\n        - CAR_TRAILER\n\n    Car:\n      type: object\n      additionalProperties: false\n      required:\n        - weight\n        - length\n        - width\n        - height\n        - model\n      properties:\n        weight:\n          type: integer\n          format: int32\n          minimum: 0\n          nullable: false\n        length:\n          type: integer\n          format: int32\n          minimum: 0\n          nullable: false\n        width:\n          type: integer\n          format: int32\n          minimum: 0\n          nullable: false\n        height:\n          type: integer\n          format: int32\n          minimum: 0\n          nullable: false\n        model:\n          description: \u003e-\n            Free text description of the model (e.g. BMW X5)\n          type: string\n          nullable: false\n        attachedItems:\n          description: \u003e-\n            Indication of items attached to the car\n          type: array\n          items:\n            $ref: '#/components/schemas/AttachableItemType'\n        licensePlate:\n          description: \u003e-\n            The license plate is a personal data item and must not be provided in an offer request.\n            It must be patched into the offer after the customer accepted the offer for booking.\n          type: string\n\n    AttachableItemType:\n      description: \u003e-\n        Indication of items attached to the car\n      type: string\n      x-extensible-enum:\n        - ROOF_RACK\n        - BICYCLE_STAND\n\n    MotorCycle:\n      type: object\n      additionalProperties: false\n      required:\n        - isSideCarIncluded\n      properties:\n        isSideCarIncluded:\n          type: boolean\n          nullable: false\n          default: false\n        licensePlate:\n          description: \u003e-\n            The license plate is a personal data item and must not be provided in an offer request.\n            It must be patched into the offer after the customer accepted the offer for booking\n          type: string\n\n    Trailer:\n      type: object\n      additionalProperties: false\n      required:\n        - weight\n        - length\n        - width\n        - height\n      properties:\n        weight:\n          description: \u003e-\n            weight in kg\n          type: integer\n          format: int32\n          minimum: 0\n          nullable: false\n        length:\n          description: \u003e-\n            length in cm\n          type: integer\n          format: int32\n          minimum: 0\n          nullable: false\n        width:\n          description: \u003e-\n            width in cm\n          type: integer\n          format: int32\n          minimum: 0\n          nullable: false\n        height:\n          description: \u003e-\n            height in cm\n          type: integer\n          format: int32\n          minimum: 0\n          nullable: false\n        licensePlate:\n          description: \u003e-\n            The license plate is a personal data item and must not be provided in an offer request.\n            It must be patched into the offer after the customer accepted the offer for booking\n          type: string\n\n    IdentificationCard:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Person identification information  to be exchanged for border control if legally required.\n        \n        It is not allowed to send personal information not required in the offer reply.\n        It is legally not allowed to send these personal data already in the offer request.\n      required:\n        - id\n        - type\n      properties:\n        id:\n          description: \u003e-\n            Identifier on the document.\n          type: string\n          nullable: false\n        type:\n          description: \u003e-\n            Refer to code list for values\n          type: string\n          nullable: false\n        name:\n          description: \u003e-\n            ICAO transliteration identical as written in the document\n          type: string\n        nationality:\n          description: \u003e-\n            ISO 3166 2A codes\n          type: string\n        birthCity:\n          type: string\n        issuingCity:\n          description: \u003e-\n            place where the document is issued\n          type: string\n        residenceCity:\n          type: string\n        birthCountryCode:\n          $ref: '#/components/schemas/CountryCode'\n        issuingCountryCode:\n          $ref: '#/components/schemas/CountryCode'\n        residenceCountryCode:\n          $ref: '#/components/schemas/CountryCode'\n        issuingDate:\n          type: string\n          format: date-time\n        gender:\n          $ref: '#/components/schemas/Gender'\n        expirationDate:\n          type: string\n          format: date\n\n    CardReference:\n      type: object\n      additionalProperties: false\n      required:\n        - types\n        - code\n      properties:\n        types:\n          description: \u003e-\n            Types of card. One card can have multiple roles, such as loyalty and reduction\n          type: array\n          items:\n            $ref: '#/components/schemas/CardType'\n          minItems: 1\n        code:\n          description: \u003e-\n            Code of the card type according to issuer.\n          type: string\n          nullable: false\n        name:\n          description: \u003e-\n            Card name for printing on fulfillments.\n          type: string\n        number:\n          description: \u003e-\n            Unique number identifying the card.\n          type: string\n        issuer:\n          $ref: '#/components/schemas/CompanyRef'\n\n    CardType:\n      description: \u003e-\n        Proposed default REDUCTION_CARD\n      type: string\n      x-extensible-enum:\n        - REDUCTION_CARD\n        - LOYALTY_CARD\n        - CHIP_CARD\n        - PASS\n\n    AncillaryGroup:\n      type: object\n      additionalProperties: false\n      required:\n        - id\n        - name\n        - ancillaryRefs\n      properties:\n        id:\n          type: string\n          nullable: false\n        name:\n          type: string\n          nullable: false\n        ancillaryRefs:\n          type: array\n          items:\n            $ref: '#/components/schemas/OfferPartReference'\n          minItems: 1\n\n    AncillaryType:\n      type: string\n      x-extensible-enum:\n        - MEAL\n        - BEVERAGE\n        \n    BookedOfferAncillaryPatchResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        warnings:\n          $ref: '#/components/schemas/WarningCollection'\n        bookedOffers:\n          type: array\n          items:\n            $ref: '#/components/schemas/BookedOffer'\n\n    BookedOfferAncillaryPatchRequest:\n      type: object\n      additionalProperties: false\n      required:\n        - offerId\n        - passengerRefs\n      properties:\n        offerId:\n          description: \u003e-\n            The offerId of the offer containing the offerparts to be added.\n          type: string\n          nullable: false\n        tripCoverage:\n          $ref: '#/components/schemas/TripCoverage'\n        passengerRefs:\n          type: array\n          items:\n            type: string\n          minItems: 1\n          nullable: false\n\n    BookedOfferReservationPatchRequest:\n      type: object\n      additionalProperties: false\n      required:\n        - offerId\n        - passengerRefs\n        - placeSelections\n      properties:\n        offerId:\n          description: \u003e-\n            The offerId of the offer containing the offerparts to be added.\n          type: string\n          nullable: false\n        passengerRefs:\n          type: array\n          items:\n            type: string\n          minItems: 1\n          nullable: false\n        tripCoverage:\n          $ref: '#/components/schemas/TripCoverage'\n        placeSelections:\n          type: array\n          items:\n            $ref: '#/components/schemas/PlaceSelection'\n          minItems: 1\n\n    BookedOfferReservationPatchResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        warnings:\n          $ref: '#/components/schemas/WarningCollection'\n        bookedOffers:\n          type: array\n          items:\n            $ref: '#/components/schemas/BookedOffer'\n\n    BookedOfferResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        warnings:\n          $ref: '#/components/schemas/WarningCollection'\n        bookedOffers:\n          type: array\n          items:\n            $ref: '#/components/schemas/BookedOffer'\n\n    BookingResponseContent:\n      description: \u003e-\n        Influences whether referenced resources are returned in full or as references only. \n      type: string\n      enum:\n        - ALL\n        - BOOKING\n        - BOOKING_PASSENGERS\n        - BOOKING_PURCHASER\n        - BOOKING_TRIPS\n        - BOOKING_BOOKEDOFFERS\n        - BOOKING_FULFILLMENTS\n        - BOOKING_DOCUMENTS\n        - BOOKING_REFUNDOFFERS\n        - BOOKING_RELEASEOFFERS\n        - BOOKING_CANCELFULFILLMENTSOFFER\n        - BOOKING_EXCHANGEOPERATIONS\n        - NONE\n      default: ALL\n\n    BookingSearchParameters:\n      type: object\n      additionalProperties: false\n      properties:\n        numberOfResults:\n          type: integer\n          format: int32\n          default: 10\n        status:\n          type: array\n          items:\n            $ref: '#/components/schemas/BookingPartStatus'\n\n    BookingSearchRequest:\n      type: object\n      additionalProperties: false\n      properties:\n        origin:\n          $ref: '#/components/schemas/PlaceRef'\n        destination:\n          $ref: '#/components/schemas/PlaceRef'\n        passenger:\n          $ref: '#/components/schemas/PersonSearchRequest'\n        purchaser:\n          $ref: '#/components/schemas/CompanySearchRequest'\n        bookingId:\n          type: string\n        providerRef:\n          type: string\n        allocatorRef:\n          type: string\n        fulfillmentId:\n          type: string\n        fulfillmentControlNumber:\n          type: string\n        travelDateRange:\n          $ref: '#/components/schemas/DateRange'\n        purchaseDateRange:\n          $ref: '#/components/schemas/DateRange'\n        parameters:\n          $ref: '#/components/schemas/BookingSearchParameters'\n\n    BookingSearchResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        warnings:\n          $ref: '#/components/schemas/WarningCollection'\n        bookingSearchResults:\n          type: array\n          items:\n            $ref: '#/components/schemas/BookingSearchResult'\n\n    BookingSearchResult:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Summary of the booking found by the booking search. For more information, get the booking.\n      required:\n        - id\n        - productSummary\n      properties:\n        purchaser:\n          $ref: '#/components/schemas/Purchaser'\n        passengers:\n          type: array\n          items:\n            $ref: '#/components/schemas/Passenger'\n        tripSummary:\n          type: array\n          items:\n            $ref: '#/components/schemas/TripSummary'\n        id:\n          type: string\n          nullable: false\n        confirmedPrice:\n          $ref: '#/components/schemas/Price'\n        provisionalPrice:\n          $ref: '#/components/schemas/Price'\n        productSummary:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProductSummary'\n          minItems: 1\n\n    CancelFulfillmentsOffer:\n      type: object\n      additionalProperties: false\n      required:\n        - id\n        - fulfillments\n        - status\n      properties:\n        id:\n          description: \u003e-\n            id of the refund offer\n          type: string\n          nullable: false\n        summary:\n          description: \u003e-\n            A human-readable description of the refund offer.\n          type: string\n        validUntil:\n          type: string\n          format: date-time\n        _links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n        fulfillments:\n          type: array\n          items:\n            $ref: '#/components/schemas/Fulfillment'\n          minItems: 1\n        status:\n          $ref: '#/components/schemas/CancelFulfillmentsStatus'\n\n    CancelFulfillmentsOfferCollectionResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        warnings:\n          $ref: '#/components/schemas/WarningCollection'\n        cancelFulfillmentOffers:\n          type: array\n          items:\n            $ref: '#/components/schemas/CancelFulfillmentsOffer'\n        _links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n\n    CancelFulfillmentsOfferPatchRequest:\n      type: object\n      additionalProperties: false\n      required:\n        - status\n      properties:\n        status:\n          $ref: '#/components/schemas/CancelFulfillmentsStatus'\n\n    CancelFulfillmentsOfferRequest:\n      type: object\n      additionalProperties: false\n      properties:\n        fulfillmentIds:\n          type: array\n          items:\n            $ref: '#/components/schemas/FulfillmentId'\n\n    CancelFulfillmentsOfferResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        warnings:\n          $ref: '#/components/schemas/WarningCollection'\n        cancelFulfillmentsOffer:\n          $ref: '#/components/schemas/CancelFulfillmentsOffer'\n\n    CoachLayoutGridSize:\n      type: object\n      additionalProperties: false\n      required:\n        - x\n        - y\n      properties:\n        x:\n          type: integer\n          format: int32\n          nullable: false\n        y:\n          type: integer\n          format: int32\n          nullable: false\n\n    CompanyDetail:\n      type: object\n      additionalProperties: false\n      required:\n        - name\n        - registrationNumber\n        - taxId\n      properties:\n        name:\n          type: string\n          nullable: false\n        registrationNumber:\n          type: string\n          nullable: false\n        legalAddress:\n          $ref: '#/components/schemas/Address'\n        taxId:\n          type: string\n          nullable: false\n\n    CompanySearchRequest:\n      allOf:\n        - $ref: '#/components/schemas/PersonSearchRequest'\n        - type: object\n          additionalProperties: false\n          required:\n            - companyName\n          properties:\n            companyName:\n              type: string\n              nullable: false\n            companyRef:\n              $ref: '#/components/schemas/CompanyRef'\n\n    ContextType:\n      type: string\n      enum:\n        - OFFER\n        - BOOKING\n\n    DateRange:\n      type: object\n      additionalProperties: false\n      properties:\n        startTime:\n          type: string\n          format: date-time\n        endDate:\n          type: string\n          format: date-time\n\n    Document:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Non travel document created. Either downloadLink + downloadExpiry or content + format must be provided.\n      required:\n        - id\n        - type\n        - scope\n      properties:\n        id:\n          type: string\n          nullable: false\n        passengerReference:\n          description: \u003e-\n            Reference to a passenger, to be specified when the document related to an individual passenger.\n          type: string\n        downloadLink:\n          type: string\n          format: uri\n        downloadExpiry:\n          description: \u003e-\n            Expiration time of the download link, the document will not be available at the given URI  after this time.\n          type: string\n          format: date-time\n        content:\n          description: \u003e-\n            base64 encoded binary of the actual fulfillment document\n          type: string\n          format: byte\n        format:\n          description: \u003e-\n            Physical format of the document provided in the content field in Mime-Type format, e.g. application/pdf, image/jpeg, etc. Must be filled if the \"content\" field is present.\n          type: string\n          example: application/pdf\n        type:\n          $ref: '#/components/schemas/DocumentType'\n        scope:\n          $ref: '#/components/schemas/DocumentScope'\n\n    DocumentCollectionResponse:\n      type: object\n      additionalProperties: false\n      required:\n        - documents\n      properties:\n        warnings:\n          $ref: '#/components/schemas/WarningCollection'\n        documents:\n          type: array\n          items:\n            $ref: '#/components/schemas/Document'\n          minItems: 1\n\n    DocumentRequest:\n      type: object\n      additionalProperties: false\n      required:\n        - document\n      properties:\n        document:\n          $ref: '#/components/schemas/DocumentSpecification'\n\n    DocumentResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        warnings:\n          $ref: '#/components/schemas/WarningCollection'\n        document:\n          $ref: '#/components/schemas/Document'\n\n    DocumentScope:\n      type: string\n      enum:\n        - BOOKING\n        - PASSENGER\n\n    DocumentSpecification:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Non travel document created. Either downloadLink + downloadExpiry or content + format must be provided.\n      required:\n        - scope\n        - type\n      properties:\n        passengerReference:\n          description: \u003e-\n            Reference to a passenger, to be specified when the document related to an individual passenger.\n          type: string\n        content:\n          description: \u003e-\n            base64 encoded binary of the actual fulfillment document\n          type: string\n          format: byte\n        format:\n          description: \u003e-\n            Physical format of the document provided in the content field in Mime-Type format, e.g. application/pdf, image/jpeg, etc. Must be filled if the \"content\" field is present.\n          type: string\n          example: application/pdf\n        scope:\n          $ref: '#/components/schemas/DocumentScope'\n        type:\n          $ref: '#/components/schemas/DocumentType'\n\n    DocumentType:\n      type: string\n      enum:\n        - BOOKING_RECEIPT\n        - CO2_REPORT\n        - INFORMATION\n        - COMPLAINT_EXPLANATION\n\n    ExchangeOfferCollectionResponseContent:\n      type: string\n      enum:\n        - ALL\n        - EXCHANGEOFFERS\n        - TRIP\n        - PASSENGERS\n        - NONE\n      default: ALL\n\n    ExchangeOperationResponseContent:\n      description: \u003e-\n        Influences whether referenced resources are returned in full or as references only.\n      type: string\n      enum:\n        - ALL\n        - EXCHANGEOPERATION\n        - EXCHANGEOPERATION_EXCHANGEOFFERS\n        - EXCHANGEOPERATION_FULFILLMENTS\n      default: ALL\n\n    ExcludedTimeRange:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        time ranges excluded from the validity (e.g. off peak fulfillments)\n      required:\n        - from\n        - until\n        - scope\n      properties:\n        from:\n          description: \u003e-\n            minutes of the day in the time zone of travel\n          type: integer\n          format: int32\n          nullable: false\n        until:\n          description: \u003e-\n            minutes of the day in the time zone of travel\n          type: integer\n          format: int32\n          nullable: false\n        scope:\n          $ref: '#/components/schemas/ExclusionScope'\n\n    ExclusionScope:\n      type: string\n      enum:\n        - START_OF_TRAVEL\n        - COMPLETE_RANGE\n\n    FulfillmentActivationPatchRequest:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Changes the fulfillment to status AVAILABLE. In the case of multi-journey  product, one of the fulfillment is\n        now \"activated\" and can be used to travel.\n      required:\n        - startOfUsage\n      properties:\n        selectedZoneIds:\n          type: array\n          items:\n            type: string\n        travelDates:\n          type: array\n          items:\n            type: string\n            format: date\n        startOfUsage:\n          type: string\n          format: date-time\n          nullable: false\n        fromPlace:\n          $ref: '#/components/schemas/PlaceRef'\n\n    LuggageConstraint:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Constraint on the luggage allowed by a passenger to on board.\n      properties:\n        maxHandLuggage:\n          description: \u003e-\n            standard hand luggage pieces\n          type: integer\n          format: int32\n        maxLargeLuggage:\n          description: \u003e-\n            standard non-hand luggage pieces\n          type: integer\n          format: int32\n        restrictions:\n          type: array\n          items:\n            $ref: '#/components/schemas/LuggageRestriction'\n        restrictionRules:\n          type: array\n          items:\n            $ref: '#/components/schemas/LuggageRestrictionRuleEnum'\n\n    LuggageDimension:\n      type: object\n      additionalProperties: false\n      required:\n        - dimension\n        - value\n      properties:\n        dimension:\n          $ref: '#/components/schemas/LuggageDimensionEnum'\n        value:\n          description: \u003e-\n            Value of the dimension: weight in kg, length in cm, volume in liter.\n          type: string\n          nullable: false\n\n    LuggageDimensionEnum:\n      description: \u003e-\n        Type of the dimension. Combined sizes are the sum of the sizes.\n        \n        Explanation:  WIDTH_HEIGHT_LENGTH = sum of width, hight and length in cm (= linear equivalent).\n        \n      type: string\n      enum:\n        - HEIGHT\n        - LENGTH\n        - WEIGHT\n        - WIDTH\n        - WIDTH_HEIGHT\n        - WIDTH_HEIGHT_LENGTH\n        - VOLUME\n\n    LuggageRestriction:\n      type: object\n      additionalProperties: false\n      required:\n        - dimensionRestrictions\n        - numberOfItems\n      properties:\n        dimensionRestrictions:\n          description: \u003e-\n            The dimension apply to the luggage items as upper limits.\n          type: array\n          items:\n            $ref: '#/components/schemas/LuggageDimension'\n          minItems: 1\n        numberOfItems:\n          description: \u003e-\n            Number of luggage items allowed with this restriction.\n          type: integer\n          format: int32\n          nullable: false\n        registrationIds:\n          description: \u003e-\n            The registrationIds to be included in a bar code on the fulfillment (UIC IRS 90918-4) (e.g. on a luggage tag).\n          type: array\n          items:\n            type: string\n\n    LuggageRestrictionRuleEnum:\n      description: \u003e-\n        Named luggage restriction rule.\n        \n        Valid Values:\n        - CAN_CARRY: Weight is ok if you can carry it yourself.\n      type: string\n      enum:\n        - CAN_CARRY\n\n    NamedCompany:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Provides the reference and name of a company.\n      required:\n        - ref\n      properties:\n        ref:\n          $ref: '#/components/schemas/CompanyRef'\n        name:\n          description: \u003e-\n            Textual representation of the carrier to be displayed unless the application is able to indicate the name by the carrier references.\n          type: string\n          example: RhB\n\n    OfferCollectionResponseContent:\n      type: string\n      enum:\n        - ALL\n        - OFFERS\n        - TRIPS\n        - NONE\n      default: ALL\n\n    OfferMode:\n      description: \u003e-\n        Offer Mode applied to provide Offers for given criteria. Distributor may specify which Offer Mode is preferred though the allocator, if not supporting given mode, reverts back to the other mode and provides warning instead. Individual Offer Mode  means that each Passenger is given individual Admissions and Reservations   in order to allow to refund individual Passengers booked in single Booking.\n      type: string\n      enum:\n        - COLLECTIVE\n        - INDIVIDUAL\n\n    OnHoldOffer:\n      type: object\n      additionalProperties: false\n      required:\n        - id\n        - increasedTTL\n        - onHoldFee\n        - deposit\n      properties:\n        id:\n          type: string\n          nullable: false\n        increasedTTL:\n          description: \u003e-\n            Increased time-to-live.\n          type: string\n          format: date-time\n          nullable: false\n        onHoldFee:\n          $ref: '#/components/schemas/Fee'\n        deposit:\n          $ref: '#/components/schemas/Price'\n        _links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n\n    OnHoldOfferPatchRequest:\n      type: object\n      additionalProperties: false\n\n    OnHoldOfferRequest:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Confirming the offer puts into the \"On-hold\" state.\n      required:\n        - increaseTTL\n      properties:\n        increaseTTL:\n          description: \u003e-\n            increase of time to live (in minutes)\n            \n            \n          type: integer\n          format: int32\n          nullable: false\n\n    OnHoldOfferResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        warnings:\n          $ref: '#/components/schemas/WarningCollection'\n        onHoldOffer:\n          $ref: '#/components/schemas/OnHoldOffer'\n\n    PaymentMethod:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Method of payment used by the customer to the distributor. On input of voucher the remaining sum attribute is not present.\n      required:\n        - type\n        - voucherInformation\n        - remainingSum\n      properties:\n        type:\n          $ref: '#/components/schemas/PaymentType'\n        voucherInformation:\n          $ref: '#/components/schemas/VoucherInformation'\n        remainingSum:\n          $ref: '#/components/schemas/Price'\n\n    PersonSearchRequest:\n      type: object\n      additionalProperties: false\n      discriminator:\n        propertyName: objectType\n      required:\n        - objectType\n      properties:\n        objectType:\n          description: Attribute is used as discriminator for inheritance between data types.\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n        dateOfBirth:\n          type: string\n          format: date\n        phoneNumber:\n          type: string\n        email:\n          type: string\n\n    ProductSummary:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Summary of the booking's underlining products.\n      required:\n        - id\n        - description\n        - code\n      properties:\n        id:\n          type: string\n          nullable: false\n        description:\n          type: string\n          nullable: false\n        code:\n          type: string\n          nullable: false\n\n    Quantity:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Generic entity to model a quantity.\n      required:\n        - value\n        - unit\n      properties:\n        value:\n          type: number\n          format: float\n          nullable: false\n        unit:\n          type: string\n          nullable: false\n          example: kg\n\n    RefundOfferResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        warnings:\n          $ref: '#/components/schemas/WarningCollection'\n        refundOffer:\n          $ref: '#/components/schemas/RefundOffer'\n\n    RegionalValiditySummary:\n      type: object\n      additionalProperties: false\n      required:\n        - description\n        - shortDescription\n      properties:\n        description:\n          type: string\n          minLength: 1\n          nullable: false\n        shortDescription:\n          type: string\n          minLength: 1\n\n    Reimbursement:\n      type: object\n      additionalProperties: false\n      required:\n        - id\n        - request\n        - status\n      properties:\n        id:\n          type: string\n          nullable: false\n        request:\n          $ref: '#/components/schemas/ReimbursementRequest'\n        status:\n          $ref: '#/components/schemas/BackOfficeStatus'\n        missingInformation:\n          type: array\n          items:\n            type: string\n        decision:\n          $ref: '#/components/schemas/ReimbursementDecision'\n        _links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n\n    ReimbursementDecision:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Decision whether or not the reimbursement is granted. Contains information on the amount reimbursed.\n      properties:\n        amount:\n          $ref: '#/components/schemas/Price'\n        voucher:\n          $ref: '#/components/schemas/FulfillmentDocument'\n        explanation:\n          $ref: '#/components/schemas/SupportingDocument'\n        shortExplanation:\n          type: string\n\n    ReimbursementPatchRequest:\n      type: object\n      additionalProperties: false\n      required:\n        - additionalDocuments\n        - updatedStatus\n      properties:\n        additionalDocuments:\n          type: array\n          items:\n            $ref: '#/components/schemas/SupportingDocument'\n          minItems: 1\n        updatedStatus:\n          $ref: '#/components/schemas/BackOfficeStatus'\n\n    ReimbursementReason:\n      description: \u003e-\n        Reason why the booking should be reimbursed.\n      type: string\n      x-extensible-enum:\n        - STRIKE\n        - TICKET_NOT_USED\n\n    ReimbursementRequest:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        The reimbursement process is used to support refunds which are not covered by the online refund/exchange processes, e.g.: Partial refund of a trip (Trip was Hamburg - Munich, but only Hamburg - Kassel was used), Refund outside of rules due to good will. This is a manual back office process within the provider's organization which is triggered by this request. State changes can be signaled by web hook events.\n      required:\n        - reimbursementReason\n        - reimbursedPassengerIds\n        - fulfillmentIds\n      properties:\n        reimbursementReason:\n          $ref: '#/components/schemas/ReimbursementReason'\n        reimbursementDate:\n          type: string\n          format: date-time\n        reimbursedPassengerIds:\n          type: array\n          items:\n            type: string\n          minItems: 1\n          nullable: false\n        tripSections:\n          type: array\n          items:\n            $ref: '#/components/schemas/TripSection'\n        fulfillmentIds:\n          type: array\n          items:\n            type: string\n          minItems: 1\n          nullable: false\n        supportingDocuments:\n          type: array\n          items:\n            $ref: '#/components/schemas/SupportingDocument'\n\n    ReimbursementResponse:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Response to a reimbursement request, containing a state and a decision.\n      required:\n        - reimbursement\n      properties:\n        reimbursement:\n          $ref: '#/components/schemas/Reimbursement'\n        warnings:\n          $ref: '#/components/schemas/WarningCollection'\n\n    ReleaseOffer:\n      type: object\n      additionalProperties: false\n      required:\n        - id\n        - status\n        - fulfillments\n      properties:\n        id:\n          description: \u003e-\n            id of the refund offer\n          type: string\n          nullable: false\n        summary:\n          description: \u003e-\n            A human-readable description of the refund offer.\n          type: string\n        validUntil:\n          type: string\n          format: date-time\n        status:\n          $ref: '#/components/schemas/ReleaseStatus'\n        fulfillments:\n          type: array\n          items:\n            $ref: '#/components/schemas/Fulfillment'\n          minItems: 1\n        _links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n\n    ReleaseOfferCollectionResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        warnings:\n          $ref: '#/components/schemas/WarningCollection'\n        releaseOffers:\n          type: array\n          items:\n            $ref: '#/components/schemas/ReleaseOffer'\n        _links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n\n    ReleaseOfferPatchRequest:\n      type: object\n      additionalProperties: false\n      required:\n        - status\n      properties:\n        status:\n          $ref: '#/components/schemas/ReleaseStatus'\n\n    ReleaseOfferRequest:\n      type: object\n      additionalProperties: false\n      properties:\n        fulfillmentIds:\n          type: array\n          items:\n            $ref: '#/components/schemas/FulfillmentId'\n\n    ReleaseOfferResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        warnings:\n          $ref: '#/components/schemas/WarningCollection'\n        releaseOffer:\n          $ref: '#/components/schemas/ReleaseOffer'\n\n    ReleaseStatus:\n      type: string\n      enum:\n        - PROPOSED\n        - CONFIRMED\n\n    ReservationGroup:\n      type: object\n      additionalProperties: false\n      required:\n        - id\n        - name\n        - reservationRefs\n      properties:\n        id:\n          type: string\n          nullable: false\n        name:\n          type: string\n          nullable: false\n        reservationRefs:\n          type: array\n          items:\n            $ref: '#/components/schemas/OfferPartReference'\n          minItems: 1\n\n    ReservationRelation:\n      type: object\n      additionalProperties: false\n      required:\n        - minGroupItemsToBeBooked\n        - reservationGroup\n      properties:\n        minGroupItemsToBeBooked:\n          type: integer\n          format: int32\n          nullable: false\n        maxGroupItemsToBeBooked:\n          type: integer\n          format: int32\n        reservationGroup:\n          $ref: '#/components/schemas/ReservationGroup'\n\n    ReservationSelection:\n      type: object\n      additionalProperties: false\n      required:\n        - reservationId\n      properties:\n        reservationId:\n          type: string\n          nullable: false\n\n    ResourceType:\n      type: string\n      enum:\n        - FARE\n        - RESERVATION\n\n    ReturnConstraint:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        a return trip with the same carrier must be sold in combination\n      required:\n        - latestReturn\n        - earliestReturn\n      properties:\n        latestReturn:\n          description: \u003e-\n            number of days after departure or start of validity of the last return\n          type: integer\n          format: int32\n          nullable: false\n        earliestReturn:\n          description: \u003e-\n            number of days after departure or start of validity of the earliest return\n          type: integer\n          format: int32\n          nullable: false\n        excludedWeekdays:\n          description: \u003e-\n            weekdays (ISO day of the week, 1 = Monday) between travel and return where travel is not allowed\n          type: array\n          items:\n            type: integer\n            format: int32\n\n    ServiceAttribute:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Facilities of a Service, such as WIFI, Premium. See OSDM master data page for an overview of all service types.\n      required:\n        - code\n        - name\n      properties:\n        code:\n          description: \u003e-\n            Codes from the service facilities code list\n          type: string\n          nullable: false\n        name:\n          type: string\n          nullable: false\n\n    StopBehavior:\n      type: string\n      enum:\n        - ORIGIN_DESTINATION_ONLY\n        - REAL_BOARDING_ALIGHTING\n\n    ThroughTicketTag:\n      description: \u003e-\n        Known Values:\n        - RESPLUS: Through ticket tag according to Swedish Regulation.\n      type: string\n      x-extensible-enum:\n        - RESPLUS\n\n    TimeUnit:\n      type: string\n      enum:\n        - DAYS\n        - HOURS\n        - MINUTES\n\n    TripCoverage:\n      type: object\n      additionalProperties: false\n      required:\n        - coveredTripId\n      properties:\n        coveredTripId:\n          type: string\n          nullable: false\n        coveredLegIds:\n          description: \u003e-\n            Indicate which legs are covered by the specific offer. Not used for fares.\n          type: array\n          items:\n            type: string\n        coveredSections:\n          type: array\n          items:\n            $ref: '#/components/schemas/Section'\n\n    TripDirectionType:\n      type: string\n      enum:\n        - OUT_BOUND\n        - IN_BOUND\n      default: OUT_BOUND\n\n    TripLegCoverage:\n      type: object\n      additionalProperties: false\n      required:\n        - tripId\n        - legId\n      properties:\n        tripId:\n          type: string\n          nullable: false\n        legId:\n          type: string\n          nullable: false\n\n    TripResponseContent:\n      type: string\n      enum:\n        - ALL\n        - PLACES\n        - NONE\n      default: ALL\n\n    TripSection:\n      type: object\n      additionalProperties: false\n      description: \u003e-\n        Part of a trip.\n      required:\n        - tripId\n      properties:\n        tripId:\n          type: string\n          nullable: false\n        coveredSection:\n          $ref: '#/components/schemas/Section'\n\n    TripsCollectionResponseContent:\n      type: string\n      enum:\n        - ALL\n        - TRIPS\n        - TRIPSUMMARIES\n        - NONE\n      default: ALL\n\n    ValidityRange:\n      type: object\n      additionalProperties: false\n      required:\n        - timeUnit\n        - value\n      properties:\n        timeUnit:\n          $ref: '#/components/schemas/TimeUnit'\n        value:\n          type: integer\n          format: int32\n          nullable: false\n        hoursAfterMidnight:\n          description: \u003e-\n            validity extended after midnight\n          type: integer\n          format: int32\n\n    ValidityType:\n      description: \u003e-\n        Type of usage, either as single trip or multiple trips. Unrestricted fares might be combined \n        into single trips if appropriate.\n      type: string\n      x-extensible-enum:\n        - SINGLE_TRIP\n        - MULTIPLE_TRIPS\n        - UNRESTRICTED\n\n    VoucherInformation:\n      type: object\n      additionalProperties: false\n      required:\n        - issuer\n        - code\n      properties:\n        issuer:\n          $ref: '#/components/schemas/CompanyRef'\n        code:\n          description: \u003e-\n            voucher code provided by the issuer\n          type: string\n          nullable: false\n\n",
			"canonicalURL": "/github.com/UnionInternationalCheminsdeFer/OSDM@1b3263fae6fdf4850636b89255929ab029c5fe85/-/blob/specification/v2.0.0/OSDM-online-api-v2.0.1.yml",
			"externalURLs": [
				{
					"url": "https://github.com/UnionInternationalCheminsdeFer/OSDM/blob/1b3263fae6fdf4850636b89255929ab029c5fe85/specification/v2.0.0/OSDM-online-api-v2.0.1.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"Admission\": resolve \"#/components/schemas/Admission\": allOf: $ref: resolve \"#/components/schemas/AbstractBookingPart\": property \"refundable\": $ref: resolve \"#/components/schemas/RefundType\": at specification/v2.0.0/OSDM-online-api-v2.0.1.yml:6000:9: parse enum values: parse value \"true\": expected type \"string\", got \"bool\""
}