{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/SumoLogic/sumologic-documentation"
		},
		"file": {
			"name": "sumologic-api.yaml",
			"size": 0,
			"path": "sumologic-api.yaml",
			"byteSize": 795909,
			"content": "openapi: 3.0.0\ninfo:\n  title: Sumo Logic API\n  description: |\n    ## Getting Started\n    Welcome to the Sumo Logic API reference. You can use these APIs to interact with the Sumo Logic platform. For API information on collectors, search, and more, see [Sumo API Docs](/docs/api).\n\n    ### API Endpoints\n    Sumo Logic has several deployments in different geographic locations. See [API endpoints](/docs/api/getting-started#sumo-logic-endpoints-by-deployment-and-firewall-security) for full details on determining the right endpoint for your geographic location.\n\n    ### Authentication\n    See [Sumo Logic API authentication](/docs/api/getting-started#authentication) for full details. We support the following options for API authentication:\n    - Access ID and Access Key\n    - Base64 encoded Access ID and Access Key\n\n    See [Access Keys](/docs/manage/Security/Access-Keys) to generate an Access Key. Make sure to copy the key you create, because it is displayed only once.\n    When you have an Access ID and Access Key you can execute requests such as the following:\n      ```bash\n      curl -u \"\u003caccessId\u003e:\u003caccessKey\u003e\" -X GET https://api.\u003cdeployment\u003e.sumologic.com/api/v1/users\n      ```\n\n    Where `deployment` is either `au`, `ca`, `de`, `eu`, `fed`, `in`, `jp`, `us1`, or `us2`. See [API endpoints](#section/API-Endpoints) for details.\n\n    If you prefer to use basic access authentication, you can do a Base64 encoding of your `\u003caccessId\u003e:\u003caccessKey\u003e` to authenticate your HTTPS request. The following is an example request, replace the placeholder `\u003cencoded\u003e` with your encoded Access ID and Access Key string:\n      ```bash\n      curl -H \"Authorization: Basic \u003cencoded\u003e\" -X GET https://api.\u003cdeployment\u003e.sumologic.com/api/v1/users\n      ```\n\n    Refer to [API Authentication](/docs/api/getting-started#authentication) for a Base64 example.\n\n    ## Status Codes\n    For a list of generic status codes that apply to all our APIs, see [Sumo Logic API Status Codes](/docs/api/getting-started#status-codes). See the [HTTP status code registry](https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml) for reference.\n\n    ## Filtering\n    Some API endpoints support filtering results on a specified set of fields. Each endpoint that supports filtering will list the fields that can be filtered. Multiple fields can be combined by using an ampersand `\u0026` character.\n\n    For example, to get 20 users whose `firstName` is `John` and `lastName` is `Doe`:\n      ```bash\n      api.sumologic.com/v1/users?limit=20\u0026firstName=John\u0026lastName=Doe\n      ```\n\n    ## Sorting\n    Some API endpoints support sorting fields by using the `sortBy` query parameter. The default sort order is ascending. Prefix the field with a minus sign `-` to sort in descending order.\n\n    For example, to get 20 users sorted by their `email` in descending order:\n      ```bash\n      api.sumologic.com/v1/users?limit=20\u0026sort=-email\n      ```\n\n    ## Asynchronous Request\n    Asynchronous requests do not wait for results, instead they immediately respond back with a job identifier while the job runs in the background. You can use the job identifier to track the status of the asynchronous job request. Here is a typical flow for an asynchronous request.\n    1. Start an asynchronous job. On success, a job identifier is returned. The job identifier uniquely identifies\n      your asynchronous job.\n\n    2. Once started, use the job identifier from step 1 to track the status of your asynchronous job. An asynchronous\n      request will typically provide an endpoint to poll for the status of asynchronous job. A successful response\n      from the status endpoint will have the following structure:\n      ```json\n      {\n          \"status\": \"Status of asynchronous request\",\n          \"statusMessage\": \"Optional message with additional information in case request succeeds\",\n          \"error\": \"Error object in case request fails\"\n      }\n      ```\n      The `status` field can have one of the following values:\n        1. `Success`: The job succeeded. The `statusMessage` field might have additional information.\n        2. `InProgress`: The job is still running.\n        3. `Failed`: The job failed. The `error` field in the response will have more information about the failure.\n\n    3. Some asynchronous APIs may provide a third endpoint (like [export result](#operation/getAsyncExportResult))\n      to fetch the result of an asynchronous job.\n\n\n    ### Example\n    Let's say we want to export a folder with the identifier `0000000006A2E86F`. We will use the [async export](#operation/beginAsyncExport) API to export all the content under the folder with `id=0000000006A2E86F`.\n    1. Start an export job for the folder\n      ```bash\n      curl -X POST -u \"\u003caccessId\u003e:\u003caccessKey\u003e\" https://api.\u003cdeployment\u003e.sumologic.com/api/v2/content/0000000006A2E86F/export\n      ```\n      See [authentication section](#section/Authentication) for more details about `accessId`, `accessKey`, and\n      `deployment`.\n      On success, you will get back a job identifier. In the response below, `C03E086C137F38B4` is the job identifier.\n      ```bash\n      {\n          \"id\": \"C03E086C137F38B4\"\n      }\n      ```\n\n    2. Now poll for the status of the asynchronous job with the [status](#operation/getAsyncExportStatus) endpoint.\n      ```bash\n      curl -X GET -u \"\u003caccessId\u003e:\u003caccessKey\u003e\" https://api.\u003cdeployment\u003e.sumologic.com/api/v2/content/0000000006A2E86F/export/C03E086C137F38B4/status\n      ```\n      You may get a response like\n      ```json\n      {\n          \"status\": \"InProgress\",\n          \"statusMessage\": null,\n          \"error\": null\n      }\n      ```\n      It implies the job is still in progress. Keep polling till the status is either `Success` or `Failed`.\n\n    3. When the asynchronous job completes (`status != \"InProgress\"`), you can fetch the results with the\n      [export result](#operation/getAsyncExportResult) endpoint.\n      ```bash\n      curl -X GET -u \"\u003caccessId\u003e:\u003caccessKey\u003e\" https://api.\u003cdeployment\u003e.sumologic.com/api/v2/content/0000000006A2E86F/export/C03E086C137F38B4/result\n      ```\n\n      The asynchronous job may fail (`status == \"Failed\"`). You can look at the `error` field for more details.\n      ```json\n      {\n          \"status\": \"Failed\",\n          \"errors\": {\n              \"code\": \"content1:too_many_items\",\n              \"message\": \"Too many objects: object count(1100) was greater than limit 1000\"\n          }\n      }\n      ```\n\n\n    ## Rate Limiting\n    * A rate limit of four API requests per second (240 requests per minute) applies to all API calls from a user.\n    * A rate limit of 10 concurrent requests to any API endpoint applies to an access key.\n\n    If a rate is exceeded, a rate limit exceeded 429 status code is returned.\n\n    ## Generating Clients\n    You can use [OpenAPI Generator](https://openapi-generator.tech) to generate clients from the YAML file to access the API.\n\n    ### Using [NPM](https://www.npmjs.com/get-npm)\n    1. Install [NPM package wrapper](https://github.com/openapitools/openapi-generator-cli) globally, exposing the CLI\n      on the command line:\n      ```bash\n      npm install @openapitools/openapi-generator-cli -g\n      ```\n      You can see detailed instructions [here](https://openapi-generator.tech/docs/installation#npm).\n    2. Download the [YAML file](/docs/sumologic-api.yaml) and save it locally. Let's say the file is saved as `sumologic-api.yaml`.\n    3. Use the following command to generate `python` client inside the `sumo/client/python` directory:\n      ```bash\n      openapi-generator generate -i sumologic-api.yaml -g python -o sumo/client/python\n      ```\n\n\n    ### Using [Homebrew](https://brew.sh/)\n    1. Install OpenAPI Generator\n      ```bash\n      brew install openapi-generator\n      ```\n    2. Download the [YAML file](/docs/sumologic-api.yaml) and save it locally. Let's say the file is saved as `sumologic-api.yaml`.\n    3. Use the following command to generate `python` client side code inside the `sumo/client/python` directory:\n      ```bash\n      openapi-generator generate -i sumologic-api.yaml -g python -o sumo/client/python\n      ```\n  version: 1.0.0\n  x-logo:\n    url: ./sumologic_logo.png\nservers:\n- url: https://api.au.sumologic.com/api/\n  description: AU deployment API server\n- url: https://api.ca.sumologic.com/api/\n  description: CA deployment API server\n- url: https://api.de.sumologic.com/api/\n  description: DE deployment API server\n- url: https://api.eu.sumologic.com/api/\n  description: EU deployment API server\n- url: https://api.fed.sumologic.com/api/\n  description: FED deployment API server\n- url: https://api.jp.sumologic.com/api/\n  description: JP deployment API server\n- url: https://api.in.sumologic.com/api/\n  description: IN deployment API server\n- url: https://api.sumologic.com/api/\n  description: US1 deployment API server\n- url: https://api.us2.sumologic.com/api/\n  description: US2 deployment API server\nsecurity:\n- basicAuth: []\ntags:\n- name: accountManagement\n  description: |\n    [Account Management API](/docs/api/account-management.md): Manage the custom subdomain for the URL used to access your Sumo Logic account. For more information see [Manage Organization](/docs/manage/01Account_Usage/05Manage_Organization).\n  x-displayName: Account\n- name: appManagement\n  description: |\n    App installation API.\n\n    View and install Sumo Logic Applications that deliver out-of-the-box dashboards, saved searches, and field extraction for popular data sources. For more information see [Sumo Logic Apps](/docs/integrations).\n  x-displayName: Apps (Beta)\n- name: connectionManagement\n  description: |\n    Connection management API.\n\n    Set up connections to send alerts to other tools. For more information see [Connections and Integrations](https://help.sumologic.com/?cid=1044).\n  x-displayName: Connections\n- name: contentManagement\n  description: |\n    [Content management API](/docs/api/content-management.md): You can export, import, delete and copy content in your organization’s Library. For more information see [Library](https://help.sumologic.com/?cid=5173). You can perform the request as a Content Administrator by using the `isAdminMode` parameter. For more information see [Admin Mode](/docs/manage/Content-Sharing/Admin-Mode).\n    \u003cbr/\u003e \u003cbr/\u003e\n    ### Example\n    The following example uses API endpoints in the US1 deployment. Sumo Logic has several deployments that are assigned depending on the geographic location and the date an account is created. For details determining your account's deployment see [API endpoints](https://help.sumologic.com/?cid=3011).\n    The [Content Import API](#operation/beginAsyncImport) can be used to create or update a Search, Scheduled Search, or Dashboard. Here is an example creating a Scheduled Search:\n    1. Get the identifier of your `Personal` folder.\n      ```bash\n      curl -X GET -u \"\u003caccessId\u003e:\u003caccessKey\u003e\" https://api.sumologic.com/api/v2/content/folders/personal\n      ```\n\n      Find the identifier of your `Personal` folder in the response.\n      ```json\n      {\n          ...\n          \"id\": \"0000000006A2E86F\", \u003c----\n          \"name\": \"Personal\",\n          \"itemType\": \"Folder\",\n          ...\n      }\n      ```\n\n      You can use [getFolder](#operation/getFolder), [getAdminRecommededFolder](#operation/getAdminRecommendedFolderAsync),\n      or [getGlobalFolder](#operation/getGlobalFolderAsync) endpoints to traverse the content tree and find the identifier of any\n      folder you want to manage.\n\n    2. Use the [Content Import API](#operation/beginAsyncImport) to create a new Scheduled Search inside your\n      `Personal` folder.\n      ```bash\n      curl -X POST -u \"\u003caccessId\u003e:\u003caccessKey\u003e\" -H \"Content-Type: application/json\" -d @search.json https://api.sumologic.com/api/v2/content/folders/0000000006A2E86F/import\n      ```\n\n      The data file `search.json` in the above command has the following `SavedSearchWithScheduleSyncDefinition` object.\n      ```json\n      // file: search.json\n      {\n          \"type\": \"SavedSearchWithScheduleSyncDefinition\",\n          \"name\": \"demo-scheduled-search\",\n          \"description\": \"Runs every hour with timerange of 15m and sends email notifications\",\n          \"search\": {\n              \"queryText\": \"\\\"error\\\" and \\\"warn\\\"\",\n              \"defaultTimeRange\": \"-15m\",\n              \"byReceiptTime\": false,\n              \"viewName\": \"\",\n              \"viewStartTime\": null,\n              \"queryParameters\": []\n          },\n          \"searchSchedule\": {\n              \"cronExpression\": \"0 0/15 * * * ? *\",\n              \"displayableTimeRange\": \"-15m\",\n              \"parseableTimeRange\": {\n                  \"from\": {\n                      \"relativeTime\": \"-15m\",\n                      \"type\": \"RelativeTimeRangeBoundary\"\n                  },\n                  \"to\": null,\n                  \"type\": \"BeginBoundedTimeRange\"\n              },\n              \"timeZone\": \"America/Los_Angeles\",\n              \"threshold\": null,\n              \"notification\": {\n                  \"taskType\": \"EmailSearchNotificationSyncDefinition\",\n                  \"toList\": [\n                      \"ops@acme.org\"\n                  ],\n                  \"subjectTemplate\": \"Search Results: {{SearchName}}\",\n                  \"includeQuery\": true,\n                  \"includeResultSet\": true,\n                  \"includeHistogram\": true,\n                  \"includeCsvAttachment\": false\n              },\n              \"muteErrorEmails\": false,\n              \"scheduleType\": \"1Hour\",\n              \"parameters\": []\n          }\n      }\n      ```\n\n      The response of above request will have the job identifier that you can use to track the status of the import job.\n      ```json\n      {\n          \"id\": \"74DC17FA765C7443\"\n      }\n      ```\n\n    3. Use the job identifier from the import request to get the [status](#operation/getAsyncImportStatus) of the\n      import job.\n      ```bash\n      curl -X GET -u \"\u003caccessId\u003e:\u003caccessKey\u003e\" https://api.sumologic.com/api/v2/content/folders/0000000006A2E86F/import/74DC17FA765C7443/status\n      ```\n\n      If you are importing a large item, you might have to wait for the import job to finish. The following is an\n      example response from a completed job.\n      ```json\n      {\n          \"status\": \"Success\",\n          \"statusMessage\": null,\n          \"error\": null\n      }\n      ```\n  x-displayName: Content\n- name: contentPermissions\n  description: |\n    [Content permissions API](/docs/api/content-permissions.md): You can share your folders, searches, and dashboards with specific users or roles. For more information see [Share Content](https://help.sumologic.com/?cid=8675309). You can perform the request as a Content Administrator by using the `isAdminMode` parameter. For more information see [Admin Mode](/docs/manage/Content-Sharing/Admin-Mode).\n  x-displayName: Permissions\n- name: dashboardManagement\n  description: |\n    [Dashboard (New) management API](/docs/api/dashboard-new.md): Dashboard (New) allows you to analyze metric and log data on the same dashboard, in a seamless view. This gives you control over the visual display of metric and log data. Dashboard (New) streamlines dashboard configurations and on-the-fly analytic visualizations with its new templating features. For more information see [Dashboard (New)](https://help.sumologic.com/?cid=5500).\n  x-displayName: Dashboard (New)\n- name: dynamicParsingRuleManagement\n  description: |\n    [Dynamic Parsing management API](/docs/api/dynamic-parsing.md): Allows automatic field extraction from your log messages when you run a search.  This allows you to view fields from logs without having to manually specify parsing logic. For more information, see [Dynamic Parsing](https://help.sumologic.com/?cid=20011).\n  x-displayName: Dynamic Parsing\n- name: extractionRuleManagement\n  description: |\n    [Field Extraction Rule management API](/docs/api/field-extraction-rules.md): Allow you to parse fields from your log messages at the time the messages are ingested eliminating the need to parse fields in your query. For more information see [Manage Field Extraction](https://help.sumologic.com/?cid=5313).\n  x-displayName: Field Extraction Rules\n- name: fieldManagementV1\n  description: |\n    [Field management API](/docs/api/fields.md): Fields allow you to reference log data based on meaningful associations. They act as metadata tags that are assigned to your logs so you can search with them. Each field contains a key-value pair, where the field name is the key. Fields may be referred to as Log Metadata Fields. For more information see [Fields](https://help.sumologic.com/?cid=10116).\n  x-displayName: Field Management\n- name: folderManagement\n  description: |\n    [Folder management API](/docs/api/folders.md): You can add folders and subfolders to the Library in order to organize your content for easy access or to share content. For more information see [Add Folders to the Library](https://help.sumologic.com/?cid=5020). You can perform the request as a Content Administrator by using the `isAdminMode` parameter. For more information see [Admin Mode](/docs/manage/Content-Sharing/Admin-Mode).\n  x-displayName: Folders\n- name: ingestBudgetManagementV1\n  description: |\n    [Ingest Budget management API](/docs/api/ingest-budget-v1.md): allow you to control the capacity of daily ingestion volume sent to Sumo Logic from Collectors. For more information see [Ingest Budgets](https://help.sumologic.com/?cid=5235).\n  x-displayName: Ingest Budgets\n- name: ingestBudgetManagementV2\n  description: |\n    [Ingest Budget management API V2](/docs/api/ingest-budget-v2.md): Ingest Budgets V2 provide you the ability to create and assign budgets to your log data by Fields instead of using a Field Value. For more information see [Metadata Ingest Budgets](https://help.sumologic.com/?cid=52352).\n  x-displayName: Ingest Budgets V2\n- name: partitionManagement\n  description: |\n    [Partition management API](/docs/api/partitions.md): Creating a Partition allows you to improve search performance by searching over a smaller number of messages. For more information see [Manage Partitions](https://help.sumologic.com/?cid=5231).\n  x-displayName: Partitions\n- name: logsDataForwardingManagement\n  description: |\n    Logs Data Forwarding management API: allows you to forward log data from a Partition or Scheduled View to an S3 bucket. For more information see [Forwarding Data to S3](/docs/manage/Data-Forwarding/amazon-s3-bucket).\n  x-displayName: Logs Data Forwarding\n- name: roleManagement\n  description: |\n    [Role management API](/docs/api/roles.md): Roles determine the functions that users are able to perform in Sumo Logic. To manage roles, you must have an administrator role or your role must have been assigned the manage users and roles capability. For more information see [Manage Roles](https://help.sumologic.com/?cid=5234).\n  x-displayName: Roles\n- name: lookupManagement\n  description: |\n    [Lookup Table management API](/docs/api/lookup-tables.md): A Lookup Table is a table of data hosted on Sumo Logic that you can use to enrich the log and event data received by Sumo Logic. You must create a table schema before you can populate the table. For more information see [Lookup Tables](https://help.sumologic.com/?cid=10109).\n  x-displayName: Lookup Tables\n- name: scheduledViewManagement\n  description: |\n    [Scheduled View management API](/docs/api/scheduled-views.md): Scheduled Views speed the search process for small and historical subsets of your data by functioning as a pre-aggregated index. For more information see [Manage Scheduled Views](https://help.sumologic.com/?cid=5128).\n  x-displayName: Scheduled Views\n- name: tokensLibraryManagement\n  description: |\n    [Tokens management API](/docs/api/tokens.md): Tokens are associated with your organization to authorize specific operations. Currently, we support collector registration tokens, which can be used to register Installed Collectors. Managing tokens requires the Manage Tokens role capability. For more information see [Installation Tokens](https://help.sumologic.com/?cid=0100).\n  x-displayName: Tokens\n- name: transformationRuleManagement\n  description: |\n    Transformation Rule management API: Metrics Transformation Rules allow you control how long raw metrics are retained. You can also aggregate metrics at collection time and specify a separate retention period for the aggregated metrics. For more information see [Metrics Transformation Rules](https://help.sumologic.com/?cid=10117).\n  x-displayName: Transformation Rules (Beta)\n- name: userManagement\n  description: |\n    [User management API](/docs/api/users.md): To manage users, you must have the administrator role or your role must have been assigned the manage users and roles capability. For more information see [Manage Users](https://help.sumologic.com/?cid=1006).\n  x-displayName: Users\n- name: metricsSearchesManagement\n  description: |\n    [Metrics Search management API](/docs/api/metrics.md): Save metrics searches in the content library and organize them in a folder hierarchy. Share useful queries with users in your organization. For more information see [Sharing Metric Charts](/docs/metrics/metric-charts/Share_a_Metric_Chart).\n  x-displayName: Metrics Searches (Beta)\n- name: metricsQuery\n  description: |\n    [Metrics Query API](/docs/api/metrics-query.md): The Metrics Query API allows you to execute queries on various metrics and retrieve multiple time-series (data-points) over time range(s). For more information see [Metrics - Classic](https://help.sumologic.com/?cid=1079).\n  x-displayName: Metrics Query\n- name: accessKeyManagement\n  description: |\n    [Access Key management API](/docs/api/access-keys.md): Access Keys allow you to securely register new Collectors and access Sumo Logic APIs. For more information see [Access Keys](https://help.sumologic.com/?cid=6690).\n  x-displayName: Access Keys\n- name: samlConfigurationManagement\n  description: |\n    [SAML configuration management API](/docs/api/saml.md): Organizations with Enterprise accounts can provision Security Assertion Markup Language (SAML) 2.0 to enable Single Sign-On (SSO) for user access to Sumo Logic. For more information see [SAML Configuration](https://help.sumologic.com/?cid=4016).\n  x-displayName: SAML Configuration\n- name: serviceAllowlistManagement\n  description: |\n    [Service Allowlist management API](/docs/api/service-allowlist.md): Service Allowlist Settings allow you to explicitly grant access to specific IP addresses and/or CIDR notations for logins, APIs, and dashboard access. For more information see [Service Allowlist Settings](https://help.sumologic.com/?cid=5454).\n  x-displayName: Service Allowlist\n- name: healthEvents\n  description: |\n    [Health Events management API](/docs/api/health-events.md): Health Events allow you to keep track of the health of your Collectors and Sources. You can use them to find and investigate common errors and warnings that are known to cause collection issues. For more information see [Health Events](https://help.sumologic.com/?cid=0020).\n  x-displayName: Health Events\n- name: archiveManagement\n  description: |-\n    [Archive Ingestion Management API](/docs/api/archive-ingestion.md): Archive Ingestion allows you to ingest data from Archive destinations. You can use this API to ingest data from your Archive with an existing AWS S3 Archive Source. You need the Manage or View Collectors role capability to manage or view ingestion jobs. For more information see [Archive](https://help.sumologic.com/?cid=10011).\n  x-displayName: Archive Ingestion Management\n- name: logSearchesEstimatedUsage\n  description: |\n    Log Search Estimated Usage API: Gets the estimated volume of data that would be scanned for a given log search in the Infrequent data tier, over a particular time range. In the Infrequent Data Tier, you pay per query, based on the amount data scanned. You can use this endpoint to get an estimate of the total data that would be scanned before running a query, and refine your query to scan less data, as necessary. For more information see [Infrequent data tier](https://help.sumologic.com/?cid=11987).\n  x-displayName: Log Search Estimated Usage\n- name: passwordPolicy\n  description: |\n    [Password Policy Management API](/docs/api/password-policy.md): The password policy controls how user passwords are managed. The \"Manage Password Policy\" role capability is required to update the password policy. For more information see [how to set a password policy](https://help.sumologic.com/?cid=8595).\n  x-displayName: Password Policy\n- name: policiesManagement\n  description: |\n    [Policies management API](/docs/api/policies.md): Policies control the security and share settings of your organization. For more information see [Security](https://help.sumologic.com/?cid=4041).\n  x-displayName: Policies\n- name: traces\n  description: |\n    [Traces API](/docs/api/tracing.md): The Traces API allows you to browse traces collected in the system. You can execute queries to find traces matching provided search criteria as well as gather detailed information about individual traces and spans. For more information see [View and investigate traces](/docs/apm/traces/View_and_investigate_traces).\n  x-displayName: Traces\n- name: spanAnalytics\n  description: |\n    Span Analytics API: The Span Analytics API allows you to browse spans collected in the system. You can execute queries to find individual spans matching provided search criteria as well as run aggregated span queries and retrieve their results. For more information see [Spans](/docs/apm/traces/Spans).\n  x-displayName: Span Analytics\n- name: serviceMap\n  description: |\n    Service Map API: The Service Map API allows you to fetch a graph representation of the Service Map, which is a high-level view of your application environment, automatically derived from tracing data. For more information see [Service Map](/docs/apm/traces/Service_Map_and_Dashboards#service-map).\n  x-displayName: Service Map\n- name: monitorsLibraryManagement\n  description: |\n    [Monitor Management API](/docs/api/monitors.md): Monitors continuously query your data to monitor and send notifications when specific events occur.\n    For more information see [Monitors](https://help.sumologic.com/?cid=10020).\n  x-displayName: Monitors\n- name: slosLibraryManagement\n  description: |\n    SLO Management API: SLOs are used to monitor and alert on KPIs for your most important services or user experience.\n  x-displayName: SLOs\npaths:\n  /v1/apps:\n    get:\n      tags:\n      - appManagement\n      summary: List available apps.\n      description: Lists all available apps from the App Catalog.\n      operationId: listApps\n      responses:\n        \"200\":\n          description: List of all available apps.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListAppsResult'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/apps/{uuid}:\n    get:\n      tags:\n      - appManagement\n      summary: Get an app by UUID.\n      description: Gets the app with the given universally unique identifier (UUID).\n      operationId: getApp\n      parameters:\n      - name: uuid\n        in: path\n        description: The identifier of the app to retrieve.\n        required: true\n        schema:\n          type: string\n          format: uuid\n      responses:\n        \"200\":\n          description: The retrieved app.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/App'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/apps/{uuid}/install:\n    post:\n      tags:\n      - appManagement\n      summary: Install an app by UUID.\n      description: Installs the app with given UUID in the folder specified using\n        destinationFolderId.\n      operationId: installApp\n      parameters:\n      - name: uuid\n        in: path\n        description: UUID of the app to install.\n        required: true\n        schema:\n          type: string\n          format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppInstallRequest'\n        required: true\n      responses:\n        \"200\":\n          description: App install job has been scheduled.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeginAsyncJobResponse'\n        default:\n          description: App installation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/apps/install/{jobId}/status:\n    get:\n      tags:\n      - appManagement\n      summary: App install job status.\n      description: Get the status of an asynchronous app install request for the given\n        job identifier.\n      operationId: getAsyncInstallStatus\n      parameters:\n      - name: jobId\n        in: path\n        description: The identifier of the asynchronous install job.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: The status of the app install job.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AsyncJobStatus'\n        default:\n          description: App installation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/connections:\n    get:\n      tags:\n      - connectionManagement\n      summary: Get a list of connections.\n      description: Get a list of all connections in the organization. The response\n        is paginated with a default limit of 100 connections per page.\n      operationId: listConnections\n      parameters:\n      - name: limit\n        in: query\n        description: Limit the number of connections returned in the response. The\n          number of connections returned may be less than the `limit`.\n        required: false\n        schema:\n          maximum: 1000\n          minimum: 1\n          type: integer\n          format: int32\n          default: 100\n      - name: token\n        in: query\n        description: Continuation token to get the next page of results. A page object\n          with the next continuation token is returned in the response body. Subsequent\n          GET requests should specify the continuation token to get the next page\n          of results. `token` is set to null when no more pages are left.\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: A paginated list of connections in the organization.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListConnectionsResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n      - connectionManagement\n      summary: Create a new connection.\n      description: Create a new connection in the organization.\n      operationId: createConnection\n      parameters: []\n      requestBody:\n        description: Information about the new connection.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConnectionDefinition'\n        required: true\n      responses:\n        \"200\":\n          description: The connection has been created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Connection'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/connections/test:\n    post:\n      tags:\n      - connectionManagement\n      summary: Test a new connection url.\n      description: Test a new connection url is valid and can connect.\n      operationId: testConnection\n      parameters: []\n      requestBody:\n        description: Information about the new connection.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConnectionDefinition'\n        required: true\n      responses:\n        \"200\":\n          description: The connection url has been tested.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestConnectionResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/connections/incidentTemplates:\n    post:\n      tags:\n      - connectionManagement\n      summary: Get incident templates for CloudSOAR connections.\n      description: Get incident templates for CloudSOAR connections.\n      operationId: getIncidentTemplates\n      parameters: []\n      requestBody:\n        description: Information about the new connection.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetIncidentTemplatesRequest'\n        required: false\n      responses:\n        \"200\":\n          description: A list of the incident templates for the given CloudSOAR account.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetIncidentTemplatesResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/connections/{id}:\n    get:\n      tags:\n      - connectionManagement\n      summary: Get a connection.\n      description: Get a connection with the given identifier.\n      operationId: getConnection\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of connection to return.\n        required: true\n        schema:\n          type: string\n      - name: type\n        in: query\n        description: \"Type of connection to return. Valid values are `WebhookConnection`,\\\n          \\ `ServiceNowConnection`.\"\n        required: true\n        schema:\n          type: string\n          default: WebhookConnection\n      responses:\n        \"200\":\n          description: Connection object that was requested.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Connection'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      tags:\n      - connectionManagement\n      summary: Update a connection.\n      description: Update an existing connection.\n      operationId: updateConnection\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the connection to update.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Information to update about the connection.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConnectionDefinition'\n        required: true\n      responses:\n        \"200\":\n          description: The connection was successfully modified.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Connection'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n      - connectionManagement\n      summary: Delete a connection.\n      description: Delete a connection with the given identifier.\n      operationId: deleteConnection\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the connection to delete.\n        required: true\n        schema:\n          type: string\n      - name: type\n        in: query\n        description: \"Type of connection to delete. Valid values are `WebhookConnection`,\\\n          \\ `ServiceNowConnection`.\"\n        required: true\n        schema:\n          pattern: ^(WebhookConnection|ServiceNowConnection)$\n          type: string\n          x-pattern-message: must be either `WebhookConnection` or `ServiceNowConnection`\n      responses:\n        \"204\":\n          description: Connection was deleted successfully.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/scheduledViews:\n    get:\n      tags:\n      - scheduledViewManagement\n      summary: Get a list of scheduled views.\n      description: Get a list of all scheduled views in the organization. The response\n        is paginated with a default limit of 100 scheduled views per page.\n      operationId: listScheduledViews\n      parameters:\n      - name: limit\n        in: query\n        description: Limit the number of scheduled views returned in the response.\n          The number of scheduled views returned may be less than the `limit`.\n        required: false\n        schema:\n          maximum: 1000\n          minimum: 1\n          type: integer\n          format: int32\n          default: 100\n      - name: token\n        in: query\n        description: Continuation token to get the next page of results. A page object\n          with the next continuation token is returned in the response body. Subsequent\n          GET requests should specify the continuation token to get the next page\n          of results. `token` is set to null when no more pages are left.\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: A paginated list of scheduled views in the organization.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListScheduledViewsResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n      - scheduledViewManagement\n      summary: Create a new scheduled view.\n      description: Creates a new scheduled view in the organization.\n      operationId: createScheduledView\n      parameters: []\n      requestBody:\n        description: Information about the new scheduled view.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateScheduledViewDefinition'\n        required: true\n      responses:\n        \"200\":\n          description: The scheduled view has been created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScheduledView'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-tf-create: createScheduledView\n  /v1/scheduledViews/{id}:\n    get:\n      tags:\n      - scheduledViewManagement\n      summary: Get a scheduled view.\n      description: Get a scheduled view with the given identifier.\n      operationId: getScheduledView\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the scheduled view to fetch.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Scheduled view object that was requested.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScheduledView'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-tf-read: getScheduledView\n    put:\n      tags:\n      - scheduledViewManagement\n      summary: Update a scheduled view.\n      description: Update an existing scheduled view.\n      operationId: updateScheduledView\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the scheduled view to update.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Information to update about the scheduled view.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateScheduledViewDefinition'\n        required: true\n      responses:\n        \"200\":\n          description: The scheduled view was successfully modified.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScheduledView'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-tf-update: updateScheduledView\n  /v1/scheduledViews/{id}/disable:\n    delete:\n      tags:\n      - scheduledViewManagement\n      summary: Disable a scheduled view.\n      description: Disable a scheduled view with the given identifier.\n      operationId: disableScheduledView\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the scheduled view to disable.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: The scheduled view was disabled successfully.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-tf-delete: deleteScheduledView\n  /v1/scheduledViews/{id}/pause:\n    post:\n      tags:\n      - scheduledViewManagement\n      summary: Pause a scheduled view.\n      description: Pause a scheduled view with the given identifier.\n      operationId: pauseScheduledView\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the scheduled view to pause.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: The scheduled view was paused successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScheduledView'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/scheduledViews/{id}/start:\n    post:\n      tags:\n      - scheduledViewManagement\n      summary: Start a scheduled view.\n      description: Start a scheduled view with the given identifier.\n      operationId: startScheduledView\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the scheduled view to start.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: The scheduled view was started successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScheduledView'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/lookupTables:\n    post:\n      tags:\n      - lookupManagement\n      summary: Create a lookup table.\n      description: |-\n        Create a new lookup table by providing a schema and specifying its configuration. Providing parentFolderId\n         is mandatory. Use the [getItemByPath](#operation/getItemByPath) endpoint to get content id of a path.\n        Please check [Content management API](#tag/contentManagement) and [Folder management API](#tag/folderManagement) for all available options.\n      operationId: createTable\n      parameters: []\n      requestBody:\n        description: The schema and configuration for the lookup table.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LookupTableDefinition'\n        required: true\n      responses:\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        \"200\":\n          description: Lookup table created successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LookupTable'\n  /v1/lookupTables/{id}:\n    get:\n      tags:\n      - lookupManagement\n      summary: Get a lookup table.\n      description: Get a lookup table for the given identifier.\n      operationId: lookupTableById\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the lookup table.\n        required: true\n        schema:\n          type: string\n          example: 0000000001C41EE4\n      responses:\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        \"200\":\n          description: Definition of the lookup table.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LookupTable'\n    put:\n      tags:\n      - lookupManagement\n      summary: Edit a lookup table.\n      description: Edit the lookup table data. All the fields are mandatory in the\n        request.\n      operationId: updateTable\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the lookup table.\n        required: true\n        schema:\n          type: string\n          example: 0000000001C41EE4\n      requestBody:\n        description: The configuration changes for the lookup table.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LookupUpdateDefinition'\n        required: true\n      responses:\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        \"200\":\n          description: Configuration updated successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LookupTable'\n    delete:\n      tags:\n      - lookupManagement\n      summary: Delete a lookup table.\n      description: Delete a lookup table completely. \u003cbr\u003e **Warning:** `This operation\n        cannot be undone`.\n      operationId: deleteTable\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the lookup table.\n        required: true\n        schema:\n          type: string\n          example: 0000000001C41EE4\n      responses:\n        \"204\":\n          description: Deletion successful.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/lookupTables/{id}/upload:\n    post:\n      tags:\n      - lookupManagement\n      summary: Upload a CSV file.\n      description: Create a request to populate a lookup table with a CSV file.\n      operationId: uploadFile\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the lookup table to populate.\n        required: true\n        schema:\n          type: string\n          example: 0000000001C41EE4\n      - name: merge\n        in: query\n        description: \"This indicates whether the file contents will be merged with\\\n          \\ existing data in the lookup table or not. If this is true then data with\\\n          \\ the same primary keys will be updated while the rest of the rows will\\\n          \\ be appended. By default, merge is false. The response includes a request\\\n          \\ identifier that you need to use in the [Request Status API](#operation/requestStatus)\\\n          \\ to track the status of the upload request.\"\n        schema:\n          type: boolean\n          example: true\n          default: false\n      - name: fileEncoding\n        in: query\n        description: File encoding of file being uploaded.\n        schema:\n          type: string\n          example: UTF-16\n          default: UTF-8\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              required:\n              - file\n              type: object\n              properties:\n                file:\n                  type: string\n                  description: |-\n                    The CSV file to upload.\n                      - The size limit for the CSV file is 100MB.\n                      - Use Unix format, with newlines (\"\\n\") separating rows.\n                      - The first row should contain headers that match the lookup table schema. Matching is\n                        case-insensitive.\n                  format: binary\n        required: true\n      responses:\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        \"200\":\n          description: The upload request was accepted. Use the provided token in\n            a status request to track the status of the upload.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LookupRequestToken'\n  /v1/lookupTables/jobs/{jobId}/status:\n    get:\n      tags:\n      - lookupManagement\n      summary: Get the status of an async job.\n      description: \"Retrieve the status of a previously made request. If the request\\\n        \\ was successful, the status of the response object will be `Success`.\"\n      operationId: requestJobStatus\n      parameters:\n      - name: jobId\n        in: path\n        description: An identifier returned in response to an asynchronous request.\n        required: true\n        schema:\n          type: string\n          example: 0000000001C41AA3\n      responses:\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        \"200\":\n          description: The status of async job with given identifier.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LookupAsyncJobStatus'\n  /v1/lookupTables/{id}/truncate:\n    post:\n      tags:\n      - lookupManagement\n      summary: Empty a lookup table.\n      description: Delete all data from a lookup table.\n      operationId: truncateTable\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the table to clear.\n        required: true\n        schema:\n          type: string\n          example: 0000000001C41EE4\n      responses:\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        \"200\":\n          description: The delete data request was accepted. Use the provided token\n            in a status request to track the status of the delete.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LookupRequestToken'\n  /v1/lookupTables/{id}/row:\n    put:\n      tags:\n      - lookupManagement\n      summary: Insert or Update a lookup table row.\n      description: \"Insert or update a row of a lookup table with the given identifier.\\\n        \\ A new row is inserted if the primary key does not exist already, otherwise\\\n        \\ the existing row with the specified primary key is updated. All the fields\\\n        \\ of the lookup table are required and will be updated to the given values.\\\n        \\ In case a field is not specified then it will be assumed to be set to null.\\\n        \\ If the table size exceeds the maximum limit of 100MB then based on the size\\\n        \\ limit action of the table the update will be processed or discarded.\"\n      operationId: updateTableRow\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the lookup table.\n        required: true\n        schema:\n          type: string\n          example: 0000000001C41EE4\n      requestBody:\n        description: Lookup table row update definition.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RowUpdateDefinition'\n        required: true\n      responses:\n        \"204\":\n          description: Row updated successfully.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/lookupTables/{id}/deleteTableRow:\n    put:\n      tags:\n      - lookupManagement\n      summary: Delete a lookup table row.\n      description: Delete a row from lookup table by providing the row's primary keys'\n        values. The complete set of primary key fields of the lookup table should\n        be provided.\n      operationId: deleteTableRow\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the lookup table.\n        required: true\n        schema:\n          type: string\n          example: 0000000001C41EE4\n      requestBody:\n        description: Lookup table row delete definition.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RowDeleteDefinition'\n        required: true\n      responses:\n        \"204\":\n          description: Row deleted successfully.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/partitions:\n    get:\n      tags:\n      - partitionManagement\n      summary: Get a list of partitions.\n      description: Get a list of all partitions in the organization. The response\n        is paginated with a default limit of 100 partitions per page.\n      operationId: listPartitions\n      parameters:\n      - name: limit\n        in: query\n        description: Limit the number of partitions returned in the response. The\n          number of partitions returned may be less than the `limit`.\n        required: false\n        schema:\n          maximum: 1000\n          minimum: 1\n          type: integer\n          format: int32\n          default: 100\n      - name: token\n        in: query\n        description: Continuation token to get the next page of results. A page object\n          with the next continuation token is returned in the response body. Subsequent\n          GET requests should specify the continuation token to get the next page\n          of results. `token` is set to null when no more pages are left.\n        required: false\n        schema:\n          type: string\n      - name: viewTypes\n        in: query\n        description: |-\n          The type of partitions to retrieve. Valid values are:\n            1. `DefaultView`: To get General Index partition.\n            2. `Partition`: To get user defined views/partitions.\n            3. `AuditIndex`: To get the internal audit indexes. Eg. sumologic_audit_events.\n\n          More than one type of partitions can be retrieved in same request.\n        required: false\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            pattern: ^(AuditIndex|Partition|DefaultView)$\n            type: string\n        example:\n        - AuditIndex\n        - Partition\n      responses:\n        \"200\":\n          description: A paginated list of partitions in the organization.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListPartitionsResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n      - partitionManagement\n      summary: Create a new partition.\n      description: Create a new partition.\n      operationId: createPartition\n      parameters: []\n      requestBody:\n        description: Information about the new partition.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreatePartitionDefinition'\n        required: true\n      responses:\n        \"200\":\n          description: The partition has been created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Partition'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/partitions/{id}:\n    get:\n      tags:\n      - partitionManagement\n      summary: Get a partition.\n      description: Get a partition with the given identifier from the organization.\n      operationId: getPartition\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of partition to return.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Partition object that was requested.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Partition'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      tags:\n      - partitionManagement\n      summary: Update a partition.\n      description: Update an existing partition in the organization.\n      operationId: updatePartition\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the partition to update.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Information to update about the partition.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdatePartitionDefinition'\n        required: true\n      responses:\n        \"200\":\n          description: The partition was successfully modified.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Partition'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/partitions/{id}/decommission:\n    post:\n      tags:\n      - partitionManagement\n      summary: Decommission a partition.\n      description: Decommission a partition with the given identifier from the organization.\n      operationId: decommissionPartition\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the partition to decommission.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: The partition was decommissioned successfully.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/partitions/{id}/cancelRetentionUpdate:\n    post:\n      tags:\n      - partitionManagement\n      summary: Cancel a retention update for a partition\n      description: Cancel update to retention of a partition for which retention was\n        updated previously using `reduceRetentionPeriodImmediately` parameter as false\n      operationId: cancelRetentionUpdate\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the partition to cancel the retention update for.\n        required: true\n        schema:\n          type: string\n        example: 1\n      responses:\n        \"204\":\n          description: The retention update was cancelled successfully.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/logsDataForwarding/destinations:\n    get:\n      tags:\n      - logsDataForwardingManagement\n      summary: Get Amazon S3 data forwarding destinations.\n      description: Get a list of all Amazon S3 data forwarding destinations.\n      operationId: getDataForwardingBuckets\n      parameters:\n      - name: limit\n        in: query\n        description: Limit the number of data forwarding destinations returned in\n          the response. The number of data forwarding destinations returned may be\n          less than the `limit`.\n        required: false\n        schema:\n          maximum: 100\n          minimum: 1\n          type: integer\n          format: int32\n          default: 10\n      - name: token\n        in: query\n        description: Continuation token to get the next page of results. A page object\n          with the next continuation token is returned in the response body. Subsequent\n          GET requests should specify the continuation token to get the next page\n          of results. `token` is set to null when no more pages are left.\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: List of all S3 data forwarding destinations.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetDataForwardingDestinations'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n      - logsDataForwardingManagement\n      summary: Create an S3 data forwarding destination.\n      description: Create a new Amazon S3 data forwarding destination.\n      operationId: createDataForwardingBucket\n      parameters: []\n      requestBody:\n        description: Parameters to create new S3 data forwarding destination.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateBucketDefinition'\n        required: true\n      responses:\n        \"200\":\n          description: The new data forwarding destination has been created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BucketDefinition'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-tf-create: createDataForwardingDestination\n  /v1/logsDataForwarding/destinations/{id}:\n    get:\n      tags:\n      - logsDataForwardingManagement\n      summary: Get an S3 data forwarding destination.\n      description: Get an S3 data forwarding destination by the given identifier.\n      operationId: getDataForwardingDestination\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the S3 data forwarding destination to return.\n        required: true\n        schema:\n          type: string\n        example: 1\n      responses:\n        \"200\":\n          description: Data forwarding destination object requested.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BucketDefinition'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-tf-read: getDataForwardingDestination\n    put:\n      tags:\n      - logsDataForwardingManagement\n      summary: Update an S3 data forwarding destination.\n      description: Update an S3 data forwarding destination by the given identifier.\n      operationId: UpdateDataForwardingBucket\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the data forwarding destination to update.\n        required: true\n        schema:\n          type: string\n        example: 1\n      requestBody:\n        description: Object with the updated parameters.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateBucketDefinition'\n        required: true\n      responses:\n        \"200\":\n          description: The data forwarding destination has been updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BucketDefinition'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-tf-update: updateDataForwardingDestination\n    delete:\n      tags:\n      - logsDataForwardingManagement\n      summary: Delete an S3 data forwarding destination.\n      description: Delete an existing Amazon S3 data forwarding destination with the\n        given identifier.\n      operationId: deleteDataForwardingBucket\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the data forwarding destination to delete.\n        required: true\n        schema:\n          type: string\n        example: 1\n      responses:\n        \"204\":\n          description: The data forwarding destination has been deleted.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-tf-delete: deleteDataForwardingDestination\n  /v1/logsDataForwarding/rules:\n    get:\n      tags:\n      - logsDataForwardingManagement\n      summary: Get all S3 data forwarding rules.\n      description: Get a list of all S3 data forwarding rules.\n      operationId: getRulesAndBuckets\n      parameters:\n      - name: limit\n        in: query\n        description: Limit the number of data forwarding rules returned in the response.\n          The number of data forwarding rules returned may be less than the `limit`.\n        required: false\n        schema:\n          maximum: 100\n          minimum: 1\n          type: integer\n          format: int32\n          default: 10\n      - name: token\n        in: query\n        description: Continuation token to get the next page of results. A page object\n          with the next continuation token is returned in the response body. Subsequent\n          GET requests should specify the continuation token to get the next page\n          of results. `token` is set to null when no more pages are left.\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: List of all S3 data forwarding rules.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetRulesAndBucketsResult'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n      - logsDataForwardingManagement\n      summary: Create an S3 data forwarding rule.\n      description: Create a data forwarding rule to send data from a Partition or\n        Scheduled View to an S3 bucket.\n      operationId: createDataForwardingRule\n      parameters: []\n      requestBody:\n        description: Parameters to create the new S3 data forwarding rule.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateDataForwardingRule'\n        required: true\n      responses:\n        \"200\":\n          description: The data forwarding rule was created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataForwardingRule'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-tf-create: createDataForwardingRuleTF\n  /v1/logsDataForwarding/rules/{indexId}:\n    get:\n      tags:\n      - logsDataForwardingManagement\n      summary: Get an S3 data forwarding rule by its index.\n      description: Get the details of an S3 data forwarding rule by its Partition\n        or Scheduled View identifier.\n      operationId: getDataForwardingRule\n      parameters:\n      - name: indexId\n        in: path\n        description: The `id` of the Partition or Scheduled View.\n        required: true\n        schema:\n          type: string\n        example: 1\n      responses:\n        \"200\":\n          description: Data forwarding rule that was requested.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RuleAndBucketDetail'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-tf-read: getDataForwardingRuleTF\n    put:\n      tags:\n      - logsDataForwardingManagement\n      summary: Update an S3 data forwarding rule by its index.\n      description: Update an S3 data forwarding rule by its Partition or Scheduled\n        View identifier.\n      operationId: updateDataForwardingRule\n      parameters:\n      - name: indexId\n        in: path\n        description: The `id` of the Partition or Scheduled View with the data forwarding\n          rule to update.\n        required: true\n        schema:\n          type: string\n        example: 1\n      requestBody:\n        description: Parameters of an S3 data forwarding rule.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateDataForwardingRule'\n        required: true\n      responses:\n        \"200\":\n          description: The data forwarding rule was updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataForwardingRule'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-tf-update: updateDataForwardingRuleTF\n    delete:\n      tags:\n      - logsDataForwardingManagement\n      summary: Delete an S3 data forwarding rule by its index.\n      description: Delete an S3 data forwarding rule by its Partition or Scheduled\n        View identifier.\n      operationId: deleteDataForwardingRule\n      parameters:\n      - name: indexId\n        in: path\n        description: The `id` of the Partition or Scheduled View with the data forwarding\n          rule to delete.\n        required: true\n        schema:\n          type: string\n        example: 1\n      responses:\n        \"204\":\n          description: The S3 data forwarding rule was deleted.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-tf-delete: deleteDataForwardingRuleTF\n  /v1/extractionRules:\n    get:\n      tags:\n      - extractionRuleManagement\n      summary: Get a list of field extraction rules.\n      description: Get a list of all field extraction rules. The response is paginated\n        with a default limit of 100 field extraction rules per page.\n      operationId: listExtractionRules\n      parameters:\n      - name: limit\n        in: query\n        description: Limit the number of field extraction rules returned in the response.\n          The number of field extraction rules returned may be less than the `limit`.\n        required: false\n        schema:\n          maximum: 1000\n          minimum: 1\n          type: integer\n          format: int32\n          default: 100\n      - name: token\n        in: query\n        description: Continuation token to get the next page of results. A page object\n          with the next continuation token is returned in the response body. Subsequent\n          GET requests should specify the continuation token to get the next page\n          of results.\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: A paginated list of field extraction rules.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListExtractionRulesResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n      - extractionRuleManagement\n      summary: Create a new field extraction rule.\n      description: Create a new field extraction rule.\n      operationId: createExtractionRule\n      parameters: []\n      requestBody:\n        description: Information about the new field extraction rule.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExtractionRuleDefinition'\n        required: true\n      responses:\n        \"200\":\n          description: The field extraction rule has been created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExtractionRule'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-tf-create: createExtractionRule\n  /v1/extractionRules/{id}:\n    get:\n      tags:\n      - extractionRuleManagement\n      summary: Get a field extraction rule.\n      description: Get a field extraction rule with the given identifier.\n      operationId: getExtractionRule\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of field extraction rule to return.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Extraction rule object that was requested.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExtractionRule'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-tf-read: getExtractionRule\n    put:\n      tags:\n      - extractionRuleManagement\n      summary: Update a field extraction rule.\n      description: Update an existing field extraction rule. All properties specified\n        in the request are replaced. Missing properties are set to their default values.\n      operationId: updateExtractionRule\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the field extraction rule to update.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Information to update about the field extraction rule.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateExtractionRuleDefinition'\n        required: true\n      responses:\n        \"200\":\n          description: The field extraction rule was successfully modified.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExtractionRule'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-tf-update: updateExtractionRule\n    delete:\n      tags:\n      - extractionRuleManagement\n      summary: Delete a field extraction rule.\n      description: Delete a field extraction rule with the given identifier.\n      operationId: deleteExtractionRule\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the field extraction rule to delete.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Extraction rule was deleted successfully.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-tf-delete: deleteExtractionRule\n  /v1/dynamicParsingRules:\n    get:\n      tags:\n      - dynamicParsingRuleManagement\n      summary: Get a list of dynamic parsing rules.\n      description: Get a list of all dynamic parsing rules. The response is paginated\n        with a default limit of 100 dynamic parsing rules per page.\n      operationId: listDynamicParsingRules\n      parameters:\n      - name: limit\n        in: query\n        description: Limit the number of dynamic parsing rules returned in the response.\n          The number of dynamic parsing rules returned may be less than the `limit`.\n        required: false\n        schema:\n          maximum: 1000\n          minimum: 1\n          type: integer\n          format: int32\n          example: 10\n          default: 100\n      - name: token\n        in: query\n        description: Continuation token to get the next page of results. A page object\n          with the next continuation token is returned in the response body. Subsequent\n          GET requests should specify the continuation token to get the next page\n          of results.\n        required: false\n        schema:\n          type: string\n          example: 0000000001C51FF7\n      responses:\n        \"200\":\n          description: A paginated list of dynamic parsing rules.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDynamicRulesResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n      - dynamicParsingRuleManagement\n      summary: Create a new dynamic parsing rule.\n      description: Create a new dynamic parsing rule.\n      operationId: createDynamicParsingRule\n      requestBody:\n        description: Information about the new dynamic parsing rule.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DynamicRuleDefinition'\n        required: true\n      responses:\n        \"200\":\n          description: The dynamic parsing rule has been created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DynamicRule'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/dynamicParsingRules/{id}:\n    get:\n      tags:\n      - dynamicParsingRuleManagement\n      summary: Get a dynamic parsing rule.\n      description: Get a dynamic parsing rule with the given identifier.\n      operationId: getDynamicParsingRule\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of dynamic parsing rule to return.\n        required: true\n        schema:\n          type: string\n          example: 0000000001C41EE4\n      responses:\n        \"200\":\n          description: Dynamic parsing rule object that was requested.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DynamicRule'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      tags:\n      - dynamicParsingRuleManagement\n      summary: Update a dynamic parsing rule.\n      description: Update an existing dynamic parsing rule. All properties specified\n        in the request are replaced. Missing properties are set to their default values.\n      operationId: updateDynamicParsingRule\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the dynamic parsing rule to update.\n        required: true\n        schema:\n          type: string\n          example: 0000000001C41EE4\n      requestBody:\n        description: Information to update about the dynamic parsing rule.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DynamicRuleDefinition'\n        required: true\n      responses:\n        \"200\":\n          description: The dynamic parsing rule was successfully modified.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DynamicRule'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n      - dynamicParsingRuleManagement\n      summary: Delete a dynamic parsing rule.\n      description: Delete a dynamic parsing rule with the given identifier.\n      operationId: deleteDynamicParsingRule\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the dynamic parsing rule to delete.\n        required: true\n        schema:\n          type: string\n          example: 0000000001C41EE4\n      responses:\n        \"204\":\n          description: Dynamic parsing rule was deleted successfully.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/fields:\n    get:\n      tags:\n      - fieldManagementV1\n      summary: Get a list of all custom fields.\n      description: Request a list of all the custom fields configured in your account.\n      operationId: listCustomFields\n      responses:\n        \"200\":\n          description: List of all custom fields.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListCustomFieldsResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n      - fieldManagementV1\n      summary: Create a new field.\n      description: Adding a field will define it in the Fields schema allowing it\n        to be assigned as metadata to your logs.\n      operationId: createField\n      parameters: []\n      requestBody:\n        description: Name of a field to add. The name is used as the key in the key-value\n          pair.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FieldName'\n        required: true\n      responses:\n        \"200\":\n          description: The field was created successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomField'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/fields/{id}:\n    get:\n      tags:\n      - fieldManagementV1\n      summary: Get a custom field.\n      description: Get the details of a custom field.\n      operationId: getCustomField\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of a field.\n        required: true\n        schema:\n          type: string\n        example: 00000000031D02DA\n      responses:\n        \"200\":\n          description: The details of the custom field.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomField'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n      - fieldManagementV1\n      summary: Delete a custom field.\n      description: \"Deleting a field does not delete historical data assigned with\\\n        \\ that field. If you  delete a field by mistake and one or more of those dependencies\\\n        \\ break, you can  re-add the field to get things working properly again. You\\\n        \\ should always disable  a field and ensure things are behaving as expected\\\n        \\ before deleting a field.\"\n      operationId: deleteField\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of a field to delete.\n        required: true\n        schema:\n          type: string\n        example: 00000000031D02DA\n      responses:\n        \"204\":\n          description: The field was successfully deleted.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/fields/{id}/enable:\n    put:\n      tags:\n      - fieldManagementV1\n      summary: Enable custom field with a specified identifier.\n      description: Fields have to be enabled to be assigned to your data. This operation\n        ensures that a specified field is enabled and Sumo Logic will treat it as\n        safe to process. All manually created custom fields are  enabled by default.\n      operationId: enableField\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of a field to enable.\n        required: true\n        schema:\n          type: string\n        example: 00000000031D02DA\n      responses:\n        \"204\":\n          description: Field has been enabled.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/fields/{id}/disable:\n    delete:\n      tags:\n      - fieldManagementV1\n      summary: Disable a custom field.\n      description: \"After disabling a field Sumo Logic will start dropping its incoming\\\n        \\ values at ingest. As a result, they won't be searchable or usable. Historical\\\n        \\ values are not removed and remain searchable.\"\n      operationId: disableField\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of a field to disable.\n        required: true\n        schema:\n          type: string\n        example: 00000000031D02DA\n      responses:\n        \"204\":\n          description: Field has been disabled.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/fields/dropped:\n    get:\n      tags:\n      - fieldManagementV1\n      summary: Get a list of dropped fields.\n      description: \"Dropped fields are fields sent to Sumo Logic, but are ignored\\\n        \\ since they are not defined in your Fields schema. In order to save these\\\n        \\ values a field must both exist and be enabled.\"\n      operationId: listDroppedFields\n      responses:\n        \"200\":\n          description: |\n            List of dropped fields.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDroppedFieldsResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/fields/builtin:\n    get:\n      tags:\n      - fieldManagementV1\n      summary: Get a list of built-in fields.\n      description: Built-in fields are created automatically by Sumo Logic for standard\n        configuration purposes. They include `_sourceHost` and `_sourceCategory`.\n        Built-in fields can't be deleted or disabled.\n      operationId: listBuiltInFields\n      responses:\n        \"200\":\n          description: List of all built-in fields.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListBuiltinFieldsResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/fields/builtin/{id}:\n    get:\n      tags:\n      - fieldManagementV1\n      summary: Get a built-in field.\n      description: Get the details of a built-in field.\n      operationId: getBuiltInField\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of a built-in field.\n        required: true\n        schema:\n          type: string\n        example: 000000000000000A\n      responses:\n        \"200\":\n          description: The details of the built-in field.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BuiltinField'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/fields/quota:\n    get:\n      tags:\n      - fieldManagementV1\n      summary: Get capacity information.\n      description: Every account has a limited number of fields available. This endpoint\n        returns your account limitations and remaining quota.\n      operationId: getFieldQuota\n      responses:\n        \"200\":\n          description: Current fields capacity usage (fields count).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FieldQuotaUsage'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/ingestBudgets:\n    get:\n      tags:\n      - ingestBudgetManagementV1\n      summary: Get a list of ingest budgets.\n      description: Get a list of all ingest budgets. The response is paginated with\n        a default limit of 100 budgets per page.\n      operationId: listIngestBudgets\n      parameters:\n      - name: limit\n        in: query\n        description: Limit the number of budgets returned in the response. The number\n          of budgets returned may be less than the `limit`.\n        required: false\n        schema:\n          maximum: 1000\n          minimum: 1\n          type: integer\n          format: int32\n          default: 100\n      - name: token\n        in: query\n        description: Continuation token to get the next page of results. A page object\n          with the next continuation token is returned in the response body. Subsequent\n          GET requests should specify the continuation token to get the next page\n          of results.\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: A paginated list of budgets.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListIngestBudgetsResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n      - ingestBudgetManagementV1\n      summary: Create a new ingest budget.\n      description: Create a new ingest budget.\n      operationId: createIngestBudget\n      parameters: []\n      requestBody:\n        description: Information about the new ingest budget.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IngestBudgetDefinition'\n        required: true\n      responses:\n        \"200\":\n          description: The ingest budget has been created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IngestBudget'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/ingestBudgets/{id}:\n    get:\n      tags:\n      - ingestBudgetManagementV1\n      summary: Get an ingest budget.\n      description: Get an ingest budget by the given identifier.\n      operationId: getIngestBudget\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of ingest budget to return.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Ingest budget object that was requested.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IngestBudget'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      tags:\n      - ingestBudgetManagementV1\n      summary: Update an ingest budget.\n      description: Update an existing ingest budget. All properties specified in the\n        request are required.\n      operationId: updateIngestBudget\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the ingest budget to update.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Information to update about the ingest budget.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IngestBudgetDefinition'\n        required: true\n      responses:\n        \"200\":\n          description: The ingest budget was successfully modified.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IngestBudget'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n      - ingestBudgetManagementV1\n      summary: Delete an ingest budget.\n      description: Delete an ingest budget with the given identifier.\n      operationId: deleteIngestBudget\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the ingest budget to delete.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: The ingest budget was deleted successfully.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/ingestBudgets/{id}/usage/reset:\n    post:\n      tags:\n      - ingestBudgetManagementV1\n      summary: Reset usage.\n      description: Reset ingest budget's current usage to 0 before the scheduled reset\n        time.\n      operationId: resetUsage\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the ingest budget to reset usage.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Ingest budget's usage was reset successfully.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/ingestBudgets/{id}/collectors:\n    get:\n      tags:\n      - ingestBudgetManagementV1\n      summary: Get a list of Collectors.\n      description: Get a list of Collectors assigned to an ingest budget. The response\n        is paginated with a default limit of 100 Collectors per page.\n      operationId: getAssignedCollectors\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of ingest budget to which Collectors are assigned.\n        required: true\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: Limit the number of Collectors returned in the response. The\n          number of Collectors returned may be less than the `limit`.\n        required: false\n        schema:\n          maximum: 1000\n          minimum: 1\n          type: integer\n          format: int32\n          default: 100\n      - name: token\n        in: query\n        description: Continuation token to get the next page of results. A page object\n          with the next continuation token is returned in the response body. Subsequent\n          GET requests should specify the continuation token to get the next page\n          of results.\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: A paginated list of Collectors.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListCollectorIdentitiesResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/ingestBudgets/{id}/collectors/{collectorId}:\n    put:\n      tags:\n      - ingestBudgetManagementV1\n      summary: Assign a Collector to a budget.\n      description: Assign a Collector to a budget.\n      operationId: assignCollectorToBudget\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the ingest budget to assign to the Collector.\n        required: true\n        schema:\n          type: string\n      - name: collectorId\n        in: path\n        description: Identifier of the Collector to assign.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Collector was successfully assigned to the ingest budget.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IngestBudget'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n      - ingestBudgetManagementV1\n      summary: Remove Collector from a budget.\n      description: Remove Collector from a budget.\n      operationId: removeCollectorFromBudget\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the ingest budget to unassign from the Collector.\n        required: true\n        schema:\n          type: string\n      - name: collectorId\n        in: path\n        description: Identifier of the Collector to unassign.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Collector was successfully unassigned from the ingest budget.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IngestBudget'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v2/ingestBudgets:\n    get:\n      tags:\n      - ingestBudgetManagementV2\n      summary: Get a list of ingest budgets.\n      description: Get a list of all ingest budgets. The response is paginated with\n        a default limit of 100 budgets per page.\n      operationId: listIngestBudgetsV2\n      parameters:\n      - name: limit\n        in: query\n        description: Limit the number of budgets returned in the response. The number\n          of budgets returned may be less than the `limit`.\n        required: false\n        schema:\n          maximum: 1000\n          minimum: 1\n          type: integer\n          format: int32\n          default: 100\n      - name: token\n        in: query\n        description: Continuation token to get the next page of results. A page object\n          with the next continuation token is returned in the response body. Subsequent\n          GET requests should specify the continuation token to get the next page\n          of results.\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: A paginated list of budgets.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListIngestBudgetsResponseV2'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n      - ingestBudgetManagementV2\n      summary: Create a new ingest budget.\n      description: Create a new ingest budget.\n      operationId: createIngestBudgetV2\n      parameters: []\n      requestBody:\n        description: Information about the new ingest budget.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IngestBudgetDefinitionV2'\n        required: true\n      responses:\n        \"200\":\n          description: The ingest budget has been created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IngestBudgetV2'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v2/ingestBudgets/{id}:\n    get:\n      tags:\n      - ingestBudgetManagementV2\n      summary: Get an ingest budget.\n      description: Get an ingest budget by the given identifier.\n      operationId: getIngestBudgetV2\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of ingest budget to return.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Ingest budget object that was requested.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IngestBudgetV2'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      tags:\n      - ingestBudgetManagementV2\n      summary: Update an ingest budget.\n      description: Update an existing ingest budget. All properties specified in the\n        request are required.\n      operationId: updateIngestBudgetV2\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the ingest budget to update.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Information to update about the ingest budget.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IngestBudgetDefinitionV2'\n        required: true\n      responses:\n        \"200\":\n          description: The ingest budget was successfully modified.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IngestBudgetV2'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n      - ingestBudgetManagementV2\n      summary: Delete an ingest budget.\n      description: Delete an ingest budget with the given identifier.\n      operationId: deleteIngestBudgetV2\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the ingest budget to delete.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: The ingest budget was deleted successfully.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v2/ingestBudgets/{id}/usage/reset:\n    post:\n      tags:\n      - ingestBudgetManagementV2\n      summary: Reset usage.\n      description: Reset ingest budget's current usage to 0 before the scheduled reset\n        time.\n      operationId: resetUsageV2\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the ingest budget to reset usage.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Ingest budget's usage was reset successfully.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/users:\n    get:\n      tags:\n      - userManagement\n      summary: Get a list of users.\n      description: Get a list of all users in the organization. The response is paginated\n        with a default limit of 100 users per page.\n      operationId: listUsers\n      parameters:\n      - name: limit\n        in: query\n        description: Limit the number of users returned in the response. The number\n          of users returned may be less than the `limit`.\n        required: false\n        schema:\n          maximum: 1000\n          minimum: 1\n          type: integer\n          format: int32\n          default: 100\n      - name: token\n        in: query\n        description: Continuation token to get the next page of results. A page object\n          with the next continuation token is returned in the response body. Subsequent\n          GET requests should specify the continuation token to get the next page\n          of results. `token` is set to null when no more pages are left.\n        required: false\n        schema:\n          type: string\n      - name: sortBy\n        in: query\n        description: \"Sort the list of users by the `firstName`, `lastName`, or `email`\\\n          \\ field.\"\n        required: false\n        schema:\n          type: string\n      - name: email\n        in: query\n        description: Find user with the given email address.\n        required: false\n        schema:\n          minLength: 1\n          type: string\n      responses:\n        \"200\":\n          description: A paginated list of users in the organization.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListUserModelsResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n      - userManagement\n      summary: Create a new user.\n      description: Create a new user in the organization.\n      operationId: createUser\n      parameters: []\n      requestBody:\n        description: Information about the new user.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateUserDefinition'\n        required: true\n      responses:\n        \"200\":\n          description: The user has been created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserModel'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/users/{id}:\n    get:\n      tags:\n      - userManagement\n      summary: Get a user.\n      description: Get a user with the given identifier from the organization.\n      operationId: getUser\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of user to return.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: User object that was requested.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserModel'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      tags:\n      - userManagement\n      summary: Update a user.\n      description: Update an existing user in the organization.\n      operationId: updateUser\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the user to update.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Information to update about the user.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateUserDefinition'\n        required: true\n      responses:\n        \"200\":\n          description: The user was successfully modified.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserModel'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n      - userManagement\n      summary: Delete a user.\n      description: Delete a user with the given identifier from the organization and\n        transfer their content to the user with the identifier specified in \"transferTo\".\n      operationId: deleteUser\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the user to delete.\n        required: true\n        schema:\n          type: string\n      - name: transferTo\n        in: query\n        description: \"Identifier of the user to receive the transfer of content from\\\n          \\ the deleted user. \u003cbr\u003e **Note:** If `deleteContent` is not set to `true`,\\\n          \\ and no user identifier is specified in `transferTo`, content from the\\\n          \\ deleted user is transferred to the executing user.\"\n        required: false\n        schema:\n          type: string\n      - name: deleteContent\n        in: query\n        description: \"Whether to delete content from the deleted user or not. \u003cbr\u003e\\\n          \\ **Warning:** If `deleteContent` is set to `true`, all of the content for\\\n          \\ the user being deleted is permanently deleted and cannot be recovered.\"\n        required: false\n        schema:\n          type: boolean\n      responses:\n        \"204\":\n          description: User was deleted successfully.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/users/{id}/email/requestChange:\n    post:\n      tags:\n      - userManagement\n      summary: Change email address.\n      description: \"An email with an activation link is sent to the user’s new email\\\n        \\ address. The user must click the link in the email within seven days to\\\n        \\ complete the email address change, or the link will expire.\"\n      operationId: requestChangeEmail\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the user to change email address.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: New email address of the user.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ChangeEmailRequest'\n        required: true\n      responses:\n        \"204\":\n          description: Email change request was submitted successfully.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/users/{id}/password/reset:\n    post:\n      tags:\n      - userManagement\n      summary: Reset password.\n      description: Reset a user's password.\n      operationId: resetPassword\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the user to reset password.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: User's password was reset successfully.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/users/{id}/unlock:\n    post:\n      tags:\n      - userManagement\n      summary: Unlock a user.\n      description: Unlock another user's account.\n      operationId: unlockUser\n      parameters:\n      - name: id\n        in: path\n        description: The id of the user that needs to be unlocked.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: User's account was unlocked successfully.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/users/{id}/mfa/disable:\n    put:\n      tags:\n      - userManagement\n      summary: Disable MFA for user.\n      description: Disable multi-factor authentication for given user.\n      operationId: disableMfa\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the user to disable MFA for.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Email and Password of the user to disable MFA for.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DisableMfaRequest'\n        required: true\n      responses:\n        \"204\":\n          description: User's MFA was disabled successfully.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/roles:\n    get:\n      tags:\n      - roleManagement\n      summary: Get a list of roles.\n      description: Get a list of all the roles in the organization. The response is\n        paginated with a default limit of 100 roles per page.\n      operationId: listRoles\n      parameters:\n      - name: limit\n        in: query\n        description: Limit the number of roles returned in the response. The number\n          of roles returned may be less than the `limit`.\n        required: false\n        schema:\n          maximum: 1000\n          minimum: 1\n          type: integer\n          format: int32\n          default: 100\n      - name: token\n        in: query\n        description: Continuation token to get the next page of results. A page object\n          with the next continuation token is returned in the response body. Subsequent\n          GET requests should specify the continuation token to get the next page\n          of results. `token` is set to null when no more pages are left.\n        required: false\n        schema:\n          type: string\n      - name: sortBy\n        in: query\n        description: Sort the list of roles by the `name` field.\n        required: false\n        schema:\n          type: string\n      - name: name\n        in: query\n        description: Only return roles matching the given name.\n        required: false\n        schema:\n          minLength: 1\n          type: string\n      responses:\n        \"200\":\n          description: A paginated list of roles in the organization.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListRoleModelsResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n      - roleManagement\n      summary: Create a new role.\n      description: Create a new role in the organization.\n      operationId: createRole\n      parameters: []\n      requestBody:\n        description: Information about the new role.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateRoleDefinition'\n        required: true\n      responses:\n        \"200\":\n          description: The role has been created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoleModel'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-tf-create: createRole\n  /v1/roles/{id}:\n    get:\n      tags:\n      - roleManagement\n      summary: Get a role.\n      description: Get a role with the given identifier in the organization.\n      operationId: getRole\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the role to fetch.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Role object that was requested.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoleModel'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-tf-read: getRole\n    put:\n      tags:\n      - roleManagement\n      summary: Update a role.\n      description: Update an existing role in the organization.\n      operationId: updateRole\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the role to update.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Information to update about the role.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateRoleDefinition'\n        required: true\n      responses:\n        \"200\":\n          description: The user was successfully modified.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoleModel'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-tf-update: updateRole\n    delete:\n      tags:\n      - roleManagement\n      summary: Delete a role.\n      description: Delete a role with the given identifier from the organization.\n      operationId: deleteRole\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the role to delete.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Role was deleted successfully.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-tf-delete: deleteRole\n  /v1/roles/{roleId}/users/{userId}:\n    put:\n      tags:\n      - roleManagement\n      summary: Assign a role to a user.\n      description: Assign a role to a user in the organization.\n      operationId: assignRoleToUser\n      parameters:\n      - name: roleId\n        in: path\n        description: Identifier of the role to assign.\n        required: true\n        schema:\n          type: string\n      - name: userId\n        in: path\n        description: Identifier of the user to assign the role to.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Role was successfully assigned to the user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RoleModel'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n      - roleManagement\n      summary: Remove role from a user.\n      description: Remove a role from a user in the organization.\n      operationId: removeRoleFromUser\n      parameters:\n      - name: roleId\n        in: path\n        description: Identifier of the role to delete.\n        required: true\n        schema:\n          type: string\n      - name: userId\n        in: path\n        description: Identifier of the user to remove the role from.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Role was successfully removed from the user.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v2/content/folders:\n    post:\n      tags:\n      - folderManagement\n      summary: Create a new folder.\n      description: Creates a new folder under the given parent folder. Set the header\n        parameter `isAdminMode` to `\"true\"` to create a folder inside \"Admin Recommended\"\n        folder.\n      operationId: createFolder\n      parameters:\n      - name: isAdminMode\n        in: header\n        description: Set this to \"true\" if you want to perform the request as a Content\n          Administrator.\n        required: false\n        schema:\n          type: string\n      requestBody:\n        description: Information about the new folder.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FolderDefinition'\n        required: true\n      responses:\n        \"200\":\n          description: The folder has been created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Folder'\n        default:\n          description: The operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v2/content/folders/{id}:\n    get:\n      tags:\n      - folderManagement\n      summary: Get a folder.\n      description: Get a folder with the given identifier. Set the header parameter\n        `isAdminMode` to `\"true\"` if fetching a folder inside \"Admin Recommended\"\n        folder.\n      operationId: getFolder\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the folder to fetch.\n        required: true\n        schema:\n          type: string\n      - name: isAdminMode\n        in: header\n        description: Set this to \"true\" if you want to perform the request as a Content\n          Administrator.\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Folder that was requested.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Folder'\n        default:\n          description: The operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      tags:\n      - folderManagement\n      summary: Update a folder.\n      description: Update an existing folder with the given identifier. Set the header\n        parameter `isAdminMode` to `\"true\"` if updating a folder inside \"Admin Recommended\"\n        folder.\n      operationId: updateFolder\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the folder to update.\n        required: true\n        schema:\n          type: string\n      - name: isAdminMode\n        in: header\n        description: Set this to \"true\" if you want to perform the request as a Content\n          Administrator.\n        required: false\n        schema:\n          type: string\n      requestBody:\n        description: Information to update about the folder.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateFolderRequest'\n        required: true\n      responses:\n        \"200\":\n          description: The folder was successfully updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Folder'\n        default:\n          description: The operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v2/content/folders/personal:\n    get:\n      tags:\n      - folderManagement\n      summary: Get personal folder.\n      description: Get the personal folder of the current user.\n      operationId: getPersonalFolder\n      responses:\n        \"200\":\n          description: |\n            The personal folder of the current user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Folder'\n        default:\n          description: The operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v2/content/folders/global:\n    get:\n      tags:\n      - folderManagement\n      summary: Schedule Global View job\n      description: |-\n        Schedule an asynchronous job to get Global View. Global View contains all top-level content items that a user has permissions to view in the organization. User can traverse the top-level folders using [GetFolder API](#operation/getFolder) to get rest of the content items. Make sure you set `isAdminMode` header parameter to `true` when traversing top-level items.\n\n        _Global View is not a real folder, therefore there is no folder identifier associated with it_.\n\n        _You get back a identifier of asynchronous job in response to this endpoint. See [Asynchronous-Request](#section/Getting-Started/Asynchronous-Request) section for more details on how to work with asynchronous request._\n      operationId: getGlobalFolderAsync\n      parameters:\n      - name: isAdminMode\n        in: header\n        description: Set this to \"true\" if you want to perform the request as a Content\n          Administrator.\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: An asynchronous job to get a list of all content items been\n            scheduled.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeginAsyncJobResponse'\n        default:\n          description: The operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v2/content/folders/global/{jobId}/status:\n    get:\n      tags:\n      - folderManagement\n      summary: Get Global View job status\n      description: \"Get the status of an asynchronous Global View job for the given\\\n        \\ job identifier. If job succeeds, use [Global View Result](#operation/getGlobalFolderAsyncResult)\\\n        \\ endpoint to fetch all content items that you have permissions to view.\"\n      operationId: getGlobalFolderAsyncStatus\n      parameters:\n      - name: jobId\n        in: path\n        description: The identifier of the asynchronous Global View job.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Asynchronous Global View job status.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AsyncJobStatus'\n        default:\n          description: The operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v2/content/folders/global/{jobId}/result:\n    get:\n      tags:\n      - folderManagement\n      summary: Get Global View job result\n      description: Get result of a Global View job for the given job identifier. The\n        result will be a list of all content items that a user has permissions to\n        view in the organization.\n      operationId: getGlobalFolderAsyncResult\n      parameters:\n      - name: jobId\n        in: path\n        description: The identifier of the asynchronous Global View job.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: List of all content items with view permission.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContentList'\n        default:\n          description: The operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v2/content/folders/adminRecommended:\n    get:\n      tags:\n      - folderManagement\n      summary: Schedule Admin Recommended folder job\n      description: |-\n        Schedule an asynchronous job to get the top-level Admin Recommended content items. You can read more about Admin Recommended folder [here](/docs/manage/Content-Sharing/Admin-Mode#move-important-content-to-admin-recommended).\n\n        _You get back a identifier of asynchronous job in response to this endpoint. See [Asynchronous-Request](#section/Getting-Started/Asynchronous-Request) section for more details on how to work with asynchronous request._\n      operationId: getAdminRecommendedFolderAsync\n      parameters:\n      - name: isAdminMode\n        in: header\n        description: Set this to \"true\" if you want to perform the request as a Content\n          Administrator.\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: An asynchronous job to get the Admin Recommended folder has\n            been scheduled.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeginAsyncJobResponse'\n        default:\n          description: The operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v2/content/folders/adminRecommended/{jobId}/status:\n    get:\n      tags:\n      - folderManagement\n      summary: Get Admin Recommended folder job status\n      description: \"Get the status of an asynchronous Admin Recommended folder job\\\n        \\ for the given job identifier. If job succeeds, use [Admin Recommended Job\\\n        \\ Result](#operation/getAdminRecommendedFolderAsyncResult) endpoint to fetch\\\n        \\ top-level content items in Admin Recommended folder.\"\n      operationId: getAdminRecommendedFolderAsyncStatus\n      parameters:\n      - name: jobId\n        in: path\n        description: The identifier of the asynchronous Admin Recommended folder job.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Asynchronous Admin Recommended folder job status.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AsyncJobStatus'\n        default:\n          description: The operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v2/content/folders/adminRecommended/{jobId}/result:\n    get:\n      tags:\n      - folderManagement\n      summary: Get Admin Recommended folder job result\n      description: Get result of an Admin Recommended job for the given job identifier.\n        The result will be \"Admin Recommended\" folder with a list of top-level Admin\n        Recommended content items in `children` field.\n      operationId: getAdminRecommendedFolderAsyncResult\n      parameters:\n      - name: jobId\n        in: path\n        description: The identifier of the asynchronous Admin Recommended folder job.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Admin Recommended folder.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Folder'\n        default:\n          description: The operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v2/content/{id}/permissions:\n    get:\n      tags:\n      - contentPermissions\n      summary: Get permissions of a content item\n      description: Returns content permissions of a content item with the given identifier.\n      operationId: getContentPermissions\n      parameters:\n      - name: id\n        in: path\n        description: The identifier of the content item.\n        required: true\n        schema:\n          type: string\n      - name: explicitOnly\n        in: query\n        description: \"There are two permission types: explicit and implicit. Permissions\\\n          \\ specifically assigned to the content item are explicit. Permissions derived\\\n          \\ from a parent content item, like a folder are implicit. To return only\\\n          \\ explicit permissions set this to true.\"\n        schema:\n          type: boolean\n          default: false\n      - name: isAdminMode\n        in: header\n        description: Set this to \"true\" if you want to perform the request as a Content\n          Administrator.\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: A list of permissions for the requested content item.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContentPermissionResult'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v2/content/{id}/permissions/add:\n    put:\n      tags:\n      - contentPermissions\n      summary: Add permissions to a content item.\n      description: Add permissions to a content item with the given identifier.\n      operationId: addContentPermissions\n      parameters:\n      - name: id\n        in: path\n        description: The identifier of the content item.\n        required: true\n        schema:\n          type: string\n      - name: isAdminMode\n        in: header\n        description: Set this to \"true\" if you want to perform the request as a Content\n          Administrator.\n        required: false\n        schema:\n          type: string\n      requestBody:\n        description: New permissions to add to the content item with the given identifier.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ContentPermissionUpdateRequest'\n        required: true\n      responses:\n        \"200\":\n          description: Updated permission object for the requested content item.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContentPermissionResult'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v2/content/{id}/permissions/remove:\n    put:\n      tags:\n      - contentPermissions\n      summary: Remove permissions from a content item.\n      description: Remove permissions from a content item with the given identifier.\n      operationId: removeContentPermissions\n      parameters:\n      - name: id\n        in: path\n        description: The identifier of the content item.\n        required: true\n        schema:\n          type: string\n      - name: isAdminMode\n        in: header\n        description: Set this to \"true\" if you want to perform the request as a Content\n          Administrator.\n        required: false\n        schema:\n          type: string\n      requestBody:\n        description: Permissions to remove from a content item with the given identifier.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ContentPermissionUpdateRequest'\n        required: true\n      responses:\n        \"200\":\n          description: Updated permissions for the requested content item.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContentPermissionResult'\n        default:\n          description: Operation failed with an error. Check that your request is\n            valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v2/content/path:\n    get:\n      tags:\n      - contentManagement\n      summary: Get content item by path.\n      description: |-\n        Get a content item corresponding to the given path.\n\n        _Path is specified in the required query parameter `path`. The path should be URL encoded._ For example, to get \"Acme Corp\" folder of a user \"user@sumo.com\" you can use the following curl command:\n          ```bash\n          curl https://api.sumologic.com/api/v2/content/path?path=/Library/Users/user%40sumo.com/Acme%20Corp\n          ```\n\n\n        The absolute path to a content item should be specified to get the item. The content library has \"Library\" folder at the root level. For items in \"Personal\" folder, the base path is \"/Library/Users/user@sumo.com\" where \"user@sumo.com\" is the email address of the user. For example if a user with email address `wile@acme.com` has `Rockets` folder inside Personal folder, the path of Rockets folder will be `/Library/Users/wile@acme.com/Rockets`.\n\n        For items in \"Admin Recommended\" folder, the base path is \"/Library/Admin Recommended\". For example, given a folder `Acme` in Admin Recommended folder, the path will be `/Library/Admin Recommended/Acme`.\n      operationId: getItemByPath\n      parameters:\n      - name: path\n        in: query\n        description: Path of the content item to retrieve.\n        required: true\n        schema:\n          type: string\n        example: /Library/Users/user@sumo.com/SampleFolder\n      responses:\n        \"200\":\n          description: Content item corresponding to the given path.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Content'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v2/content/{contentId}/path:\n    get:\n      tags:\n      - contentManagement\n      summary: Get path of an item.\n      description: |\n        Get full path of a content item with the given identifier.\n      operationId: getPathById\n      parameters:\n      - name: contentId\n        in: path\n        description: Identifier of the content item to get the path.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Full path of the content item.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContentPath'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v2/content/{id}/export:\n    post:\n      tags:\n      - contentManagement\n      summary: Start a content export job.\n      description: |-\n        Schedule an _asynchronous_ export of content with the given identifier. You will get back an asynchronous job identifier on success. Use the [getAsyncExportStatus](#operation/getAsyncExportStatus) endpoint and the job identifier you got back in the response to track the status of an asynchronous export job.\n        If the content item is a folder, everything under the folder is exported recursively. Keep in mind when exporting large folders that there is a limit of 1000 content objects that can be exported at once. If you want to import more than 1000 content objects, then be sure to split the import into batches of 1000 objects or less.\n        The results from the export are compatible with the Library import feature in the Sumo Logic user interface as well as the API content import job.\n      operationId: beginAsyncExport\n      parameters:\n      - name: id\n        in: path\n        description: The identifier of the content item to export. Identifiers from\n          the Library in the Sumo user interface are provided in decimal format which\n          is incompatible with this API. The identifier needs to be in hexadecimal\n          format.\n        required: true\n        schema:\n          type: string\n      - name: isAdminMode\n        in: header\n        description: Set this to \"true\" if you want to perform the request as a Content\n          Administrator.\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Export job has been scheduled.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeginAsyncJobResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v2/content/{contentId}/export/{jobId}/status:\n    get:\n      tags:\n      - contentManagement\n      summary: Content export job status.\n      description: \"Get the status of an asynchronous content export request for the\\\n        \\ given job identifier. On success, use the [getExportResult](#operation/getAsyncExportResult)\\\n        \\ endpoint to get the result of the export job.\"\n      operationId: getAsyncExportStatus\n      parameters:\n      - name: contentId\n        in: path\n        description: The identifier of the exported content item.\n        required: true\n        schema:\n          type: string\n      - name: jobId\n        in: path\n        description: The identifier of the asynchronous export job.\n        required: true\n        schema:\n          type: string\n      - name: isAdminMode\n        in: header\n        description: Set this to \"true\" if you want to perform the request as a Content\n          Administrator.\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: The status of the export job.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AsyncJobStatus'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v2/content/{contentId}/export/{jobId}/result:\n    get:\n      tags:\n      - contentManagement\n      summary: Content export job result.\n      description: Get results from content export job for the given job identifier.\n        The results from this export are incompatible with the Library import feature\n        in the Sumo user interface.\n      operationId: getAsyncExportResult\n      parameters:\n      - name: contentId\n        in: path\n        description: The identifier of the exported content item.\n        required: true\n        schema:\n          type: string\n      - name: jobId\n        in: path\n        description: The identifier of the asynchronous job.\n        required: true\n        schema:\n          type: string\n      - name: isAdminMode\n        in: header\n        description: Set this to \"true\" if you want to perform the request as a Content\n          Administrator.\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: The result of export job.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContentSyncDefinition'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v2/content/folders/{folderId}/import:\n    post:\n      tags:\n      - contentManagement\n      summary: Start a content import job.\n      description: \"Schedule an asynchronous import of content inside an existing\\\n        \\ folder with the given identifier. Import requests can be used to create\\\n        \\ or update content within a folder. Content items need to have a unique name\\\n        \\ within their folder. If there is already a content item with the same name\\\n        \\ in the folder, you can set the `overwrite` parameter to `true` to overwrite\\\n        \\ existing content items. By default, the `overwrite` parameter is set to\\\n        \\ `false`, where the import will fail if a content item with the same name\\\n        \\ already exist. Keep in mind when importing large folders that there is a\\\n        \\ limit of 1000 content objects that can be imported at once. If you want\\\n        \\ to import more than 1000 content objects, then be sure to split the import\\\n        \\ into batches of 1000 objects or less.\"\n      operationId: beginAsyncImport\n      parameters:\n      - name: folderId\n        in: path\n        description: The identifier of the folder to import into. Identifiers from\n          the Library in the Sumo user interface are provided in decimal format which\n          is incompatible with this API. The identifier needs to be in hexadecimal\n          format.\n        required: true\n        schema:\n          type: string\n      - name: isAdminMode\n        in: header\n        description: Set this to \"true\" if you want to perform the request as a Content\n          Administrator.\n        required: false\n        schema:\n          type: string\n      - name: overwrite\n        in: query\n        description: Set this to \"true\" to overwrite a content item if the name already\n          exists.\n        required: false\n        schema:\n          type: boolean\n          default: false\n      requestBody:\n        description: The content to import.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ContentSyncDefinition'\n        required: true\n      responses:\n        \"200\":\n          description: Import job has been scheduled.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeginAsyncJobResponse'\n        default:\n          description: The operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v2/content/folders/{folderId}/import/{jobId}/status:\n    get:\n      tags:\n      - contentManagement\n      summary: Content import job status.\n      description: Get the status of a content import job for the given job identifier.\n      operationId: getAsyncImportStatus\n      parameters:\n      - name: folderId\n        in: path\n        description: The identifier of the folder to import into.\n        required: true\n        schema:\n          type: string\n      - name: jobId\n        in: path\n        description: The identifier of the import request.\n        required: true\n        schema:\n          type: string\n      - name: isAdminMode\n        in: header\n        description: Set this to \"true\" if you want to perform the request as a Content\n          Administrator.\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: The status of the import job.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AsyncJobStatus'\n        default:\n          description: The operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v2/content/{id}/delete:\n    delete:\n      tags:\n      - contentManagement\n      summary: Start a content deletion job.\n      description: Start an asynchronous content deletion job with the given identifier.\n      operationId: beginAsyncDelete\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the content to delete. Identifiers from the Library\n          in the Sumo user interface are provided in decimal format which is incompatible\n          with this API. The identifier needs to be in hexadecimal format.\n        required: true\n        schema:\n          type: string\n      - name: isAdminMode\n        in: header\n        description: Set this to \"true\" if you want to perform the request as a Content\n          Administrator.\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Deletion job has been scheduled.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeginAsyncJobResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v2/content/{id}/delete/{jobId}/status:\n    get:\n      tags:\n      - contentManagement\n      summary: Content deletion job status.\n      description: Get the status of an asynchronous content deletion job request\n        for the given job identifier.\n      operationId: getAsyncDeleteStatus\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the content to delete.\n        required: true\n        schema:\n          type: string\n      - name: jobId\n        in: path\n        description: The identifier of the asynchronous job.\n        required: true\n        schema:\n          type: string\n      - name: isAdminMode\n        in: header\n        description: Set this to \"true\" if you want to perform the request as a Content\n          Administrator.\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: The status of the content deletion job.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AsyncJobStatus'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v2/content/{id}/copy:\n    post:\n      tags:\n      - contentManagement\n      summary: Start a content copy job.\n      description: \"Start an asynchronous content copy job with the given identifier\\\n        \\ to the destination folder. If the content item is a folder, everything under\\\n        \\ the folder is copied recursively.\"\n      operationId: beginAsyncCopy\n      parameters:\n      - name: id\n        in: path\n        description: The identifier of the content item to copy. Identifiers from\n          the Library in the Sumo user interface are provided in decimal format which\n          is incompatible with this API. The identifier needs to be in hexadecimal\n          format.\n        required: true\n        schema:\n          type: string\n      - name: destinationFolder\n        in: query\n        description: The identifier of the destination folder.\n        required: true\n        schema:\n          type: string\n      - name: isAdminMode\n        in: header\n        description: Set this to \"true\" if you want to perform the request as a Content\n          Administrator.\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Content copy job has been scheduled.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeginAsyncJobResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v2/content/{id}/copy/{jobId}/status:\n    get:\n      tags:\n      - contentManagement\n      summary: Content copy job status.\n      description: |\n        Get the status of the copy request with the given job identifier. On success, field `statusMessage` will contain identifier of the newly copied content in format: `id: {hexIdentifier}`.\n      operationId: asyncCopyStatus\n      parameters:\n      - name: id\n        in: path\n        description: The identifier of the content which was copied.\n        required: true\n        schema:\n          type: string\n      - name: jobId\n        in: path\n        description: The identifier of the asynchronous copy request job.\n        required: true\n        schema:\n          type: string\n      - name: isAdminMode\n        in: header\n        description: Set this to \"true\" if you want to perform the request as a Content\n          Administrator.\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: The status of the content copy job.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AsyncJobStatus'\n              example:\n                status: Success\n                statusMessage: \"id: 0000000000000197\"\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v2/content/{id}/move:\n    post:\n      tags:\n      - contentManagement\n      summary: Move an item.\n      description: |\n        Moves an item from its current location to another folder.\n      operationId: moveItem\n      parameters:\n      - name: destinationFolderId\n        in: query\n        description: Identifier of the destination folder.\n        required: true\n        schema:\n          type: string\n      - name: id\n        in: path\n        description: Identifier of the item the user wants to move.\n        required: true\n        schema:\n          type: string\n      - name: isAdminMode\n        in: header\n        description: Set this to \"true\" if you want to perform the request as a Content\n          Administrator.\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Content was moved successfully.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/transformationRules:\n    get:\n      tags:\n      - transformationRuleManagement\n      summary: Get a list of transformation rules.\n      description: Get a list of transformation rules in the organization. The response\n        is paginated with a default limit of 100 rules per page.\n      operationId: getTransformationRules\n      parameters:\n      - name: limit\n        in: query\n        description: Limit the number of transformation rules returned in the response.\n        required: false\n        schema:\n          maximum: 1000\n          minimum: 1\n          type: integer\n          format: int32\n          default: 100\n        example: 10\n      - name: token\n        in: query\n        description: Continuation token to get the next page of results. A page object\n          with the next continuation token is returned in the response body. Subsequent\n          GET requests should specify the continuation token to get the next page\n          of results. `token` is set to null when no more pages are left.\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: List of transformation rules.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransformationRulesResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n      - transformationRuleManagement\n      summary: Create a new transformation rule.\n      description: Create a new transformation rule.\n      operationId: createRule\n      parameters: []\n      requestBody:\n        description: The configuration of the transformation rule to create.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TransformationRuleRequest'\n        required: true\n      responses:\n        \"200\":\n          description: The transformation rule was successfully created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransformationRuleResponse'\n        default:\n          description: The operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/transformationRules/{id}:\n    get:\n      tags:\n      - transformationRuleManagement\n      summary: Get a transformation rule.\n      description: Get a transformation rule with the given identifier.\n      operationId: getTransformationRule\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of transformation rule to return.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Transformation rule object that was requested.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransformationRuleResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      tags:\n      - transformationRuleManagement\n      summary: Update a transformation rule.\n      description: Update an existing transformation rule. All properties specified\n        in the request are replaced. Missing properties will remain the same.\n      operationId: updateTransformationRule\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the transformation rule to update.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Information to update about the transformation rule.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TransformationRuleRequest'\n        required: true\n      responses:\n        \"200\":\n          description: The transformation rule was successfully modified.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransformationRuleResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n      - transformationRuleManagement\n      summary: Delete a transformation rule.\n      description: Delete a transformation rule with the given identifier.\n      operationId: deleteRule\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the transformation rule to delete.\n        required: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: The operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        \"204\":\n          description: The transformation rule was successfully deleted.\n  /v1/account/accountOwner:\n    get:\n      tags:\n      - accountManagement\n      summary: Get the owner of an account.\n      description: Returns the user identifier of the account owner.\n      operationId: getAccountOwner\n      responses:\n        \"200\":\n          description: User identifier of the account owner.\n          content:\n            application/json:\n              schema:\n                type: string\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/account/status:\n    get:\n      tags:\n      - accountManagement\n      summary: Get overview of the account status.\n      description: \"Get information related to the account's plan, pricing model,\\\n        \\ expiration and payment status.\"\n      operationId: getStatus\n      responses:\n        \"200\":\n          description: Overview of the account.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccountStatusResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/account/subdomain:\n    get:\n      tags:\n      - accountManagement\n      summary: Get the configured subdomain.\n      description: Get the configured subdomain.\n      operationId: getSubdomain\n      responses:\n        \"200\":\n          description: The subdomain's definition.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubdomainDefinitionResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      tags:\n      - accountManagement\n      summary: Update account subdomain.\n      description: Update a subdomain. Only the Account Owner can update the subdomain.\n      operationId: updateSubdomain\n      requestBody:\n        description: The new subdomain.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConfigureSubdomainRequest'\n        required: true\n      responses:\n        \"200\":\n          description: The updated subdomain's definition.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubdomainDefinitionResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n      - accountManagement\n      summary: Create account subdomain.\n      description: Create a subdomain. Only the Account Owner can create a subdomain.\n      operationId: createSubdomain\n      requestBody:\n        description: The new subdomain.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConfigureSubdomainRequest'\n        required: true\n      responses:\n        \"200\":\n          description: Created a new subdomain.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubdomainDefinitionResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n      - accountManagement\n      summary: Delete the configured subdomain.\n      description: Delete the configured subdomain.\n      operationId: deleteSubdomain\n      responses:\n        \"204\":\n          description: The subdomain was successfully deleted.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/account/subdomain/recover:\n    post:\n      tags:\n      - accountManagement\n      summary: Recover subdomains for a user.\n      description: Send an email with the subdomain information for a user with the\n        given email address.\n      operationId: recoverSubdomains\n      parameters:\n      - name: email\n        in: query\n        description: Email address of the user to get subdomain information.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: An email containing information about associated subdomains\n            for the given email was sent.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/plan/pendingUpdateRequest:\n    get:\n      tags:\n      - accountManagement\n      summary: \"Get the pending plan update request, if any.\"\n      description: Get the pending plan update request which will be applicable from\n        next billing cycle.\n      operationId: getPendingUpdateRequest\n      responses:\n        \"200\":\n          description: Pending plan update request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PendingUpdateRequest'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n      - accountManagement\n      summary: \"Delete the pending plan update request, if any.\"\n      description: Delete the pending plan update request which would be applicable\n        from next billing cycle.\n      operationId: deletePendingUpdateRequest\n      responses:\n        \"204\":\n          description: Deleted the pending update request.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/metricsSearches:\n    post:\n      tags:\n      - metricsSearchesManagement\n      summary: Save a metrics search.\n      description: \"Saves a metrics search in the content library. Metrics search\\\n        \\ consists of one or more queries, a time range, a quantization period and\\\n        \\ a set of chart properties like line width.\"\n      operationId: createMetricsSearch\n      parameters: []\n      requestBody:\n        description: The definition of the metrics search.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SaveMetricsSearchRequest'\n        required: true\n      responses:\n        \"200\":\n          description: Newly created metrics search.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetricsSearchInstance'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/metricsSearches/{id}:\n    get:\n      tags:\n      - metricsSearchesManagement\n      summary: Get a metrics search.\n      description: Returns a metrics search with the specified identifier.\n      operationId: getMetricsSearch\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the metrics search.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: A metrics search object with metadata.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetricsSearchInstance'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      tags:\n      - metricsSearchesManagement\n      summary: Updates a metrics search.\n      description: \"Updates a metrics search with the specified identifier. Partial\\\n        \\ updates are not supported, you must provide values for all fields.\"\n      operationId: updateMetricsSearch\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the metrics search.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: An updated metrics search definition.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MetricsSearchV1'\n        required: true\n      responses:\n        \"200\":\n          description: The metrics saved search that was updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetricsSearchInstance'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n      - metricsSearchesManagement\n      summary: Deletes a metrics search.\n      description: Deletes a metrics search from the content library.\n      operationId: deleteMetricsSearch\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the metrics search.\n        required: true\n        schema:\n          type: string\n      responses:\n        default:\n          description: The operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        \"204\":\n          description: The metrics search was successfully deleted.\n  /v1/tokens:\n    get:\n      tags:\n      - tokensLibraryManagement\n      summary: Get a list of tokens.\n      description: Get a list of all tokens in the token library.\n      operationId: listTokens\n      responses:\n        \"200\":\n          description: A list of tokens.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTokensBaseResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n      - tokensLibraryManagement\n      summary: Create a token.\n      description: Create a token in the token library.\n      operationId: createToken\n      requestBody:\n        description: Information about the token to create.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TokenBaseDefinition'\n        required: true\n      responses:\n        \"200\":\n          description: The token has been created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TokenBaseResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/tokens/{id}:\n    get:\n      tags:\n      - tokensLibraryManagement\n      summary: Get a token.\n      description: Get a token with the given identifier in the token library.\n      operationId: getToken\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the token to return.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Token object that was requested.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TokenBaseResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      tags:\n      - tokensLibraryManagement\n      summary: Update a token.\n      description: Update a token with the given identifier in the token library.\n      operationId: updateToken\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the token to update.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: The token to update.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TokenBaseDefinitionUpdate'\n        required: true\n      responses:\n        \"200\":\n          description: The token was successfully modified.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TokenBaseResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n      - tokensLibraryManagement\n      summary: Delete a token.\n      description: Delete a token with the given identifier in the token library.\n      operationId: deleteToken\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the token to delete.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: The token was deleted successfully.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/accessKeys:\n    get:\n      tags:\n      - accessKeyManagement\n      summary: List all access keys.\n      description: List all access keys in your account.\n      operationId: listAccessKeys\n      parameters:\n      - name: limit\n        in: query\n        description: Limit the number of access keys returned in the response. The\n          number of access keys returned may be less than the `limit`.\n        required: false\n        schema:\n          maximum: 1000\n          minimum: 1\n          type: integer\n          format: int32\n          default: 100\n      - name: token\n        in: query\n        description: Continuation token to get the next page of results. A page object\n          with the next continuation token is returned in the response body. Subsequent\n          GET requests should specify the continuation token to get the next page\n          of results. `token` is set to null when no more pages are left.\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: A list of all access keys in your account.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedListAccessKeysResult'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n      - accessKeyManagement\n      summary: Create an access key.\n      description: |-\n        Creates a new access ID and key pair. The new access key can be used from the domains specified in corsHeaders field. Whether Sumo Logic accepts or rejects an API request depends on whether it contains an ORIGIN header and the entries in the allowlist. Sumo Logic will reject:\n          1. Requests with an ORIGIN header but the allowlist is empty.\n          2. Requests with an ORIGIN header that don't match any entry in the allowlist.\n      operationId: createAccessKey\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AccessKeyCreateRequest'\n        required: true\n      responses:\n        \"200\":\n          description: Access key created successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessKey'\n        default:\n          description: Access key creation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/accessKeys/personal:\n    get:\n      tags:\n      - accessKeyManagement\n      summary: List personal keys.\n      description: List all access keys that belong to your user.\n      operationId: listPersonalAccessKeys\n      responses:\n        \"200\":\n          description: A list of all access keys that belong to the user making the\n            request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListAccessKeysResult'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/accessKeys/{id}:\n    put:\n      tags:\n      - accessKeyManagement\n      summary: Update an access key.\n      description: Updates the properties of existing accessKey by accessId. It can\n        be used to enable or disable the access key and to update the corsHeaders\n        list.\n      operationId: updateAccessKey\n      parameters:\n      - name: id\n        in: path\n        description: The accessId of the access key to update.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AccessKeyUpdateRequest'\n        required: true\n      responses:\n        \"200\":\n          description: Access key updated successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessKeyPublic'\n        default:\n          description: Access key update failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n      - accessKeyManagement\n      summary: Delete an access key.\n      description: Deletes the access key with the given accessId.\n      operationId: deleteAccessKey\n      parameters:\n      - name: id\n        in: path\n        description: The accessId of the access key to delete.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Access key deletion completed successfully.\n        default:\n          description: Access key deletion failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/saml/identityProviders:\n    get:\n      tags:\n      - samlConfigurationManagement\n      summary: Get a list of SAML configurations.\n      description: Get a list of all SAML configurations in the organization.\n      operationId: getIdentityProviders\n      responses:\n        \"200\":\n          description: A list of SAML configurations in the organization.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SamlIdentityProvider'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n      - samlConfigurationManagement\n      summary: Create a new SAML configuration.\n      description: Create a new SAML configuration in the organization.\n      operationId: createIdentityProvider\n      parameters: []\n      requestBody:\n        description: The configuration of the SAML identity provider.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SamlIdentityProviderRequest'\n        required: true\n      responses:\n        \"200\":\n          description: The SAML configuration was successfully created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SamlIdentityProvider'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/saml/identityProviders/{id}:\n    put:\n      tags:\n      - samlConfigurationManagement\n      summary: Update a SAML configuration.\n      description: Update an existing SAML configuration in the organization.\n      operationId: updateIdentityProvider\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the SAML configuration to update.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Information to update in the SAML configuration.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SamlIdentityProviderRequest'\n        required: true\n      responses:\n        \"200\":\n          description: The SAML configuration was successfully modified.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SamlIdentityProvider'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n      - samlConfigurationManagement\n      summary: Delete a SAML configuration.\n      description: Delete a SAML configuration with the given identifier from the\n        organization.\n      operationId: deleteIdentityProvider\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the SAML configuration to delete.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: The SAML configuration was deleted successfully.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/saml/allowlistedUsers:\n    get:\n      tags:\n      - samlConfigurationManagement\n      summary: Get list of allowlisted users.\n      description: Get a list of allowlisted users.\n      operationId: getAllowlistedUsers\n      responses:\n        \"200\":\n          description: A list of allowlisted users from the organization.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AllowlistedUserResult'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/saml/allowlistedUsers/{userId}:\n    post:\n      tags:\n      - samlConfigurationManagement\n      summary: Allowlist a user.\n      description: Allowlist a user from SAML lockdown allowing them to sign in using\n        a password in addition to SAML.\n      operationId: createAllowlistedUser\n      parameters:\n      - name: userId\n        in: path\n        description: Identifier of the user.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: User was successfully allowlisted.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AllowlistedUserResult'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n      - samlConfigurationManagement\n      summary: Remove an allowlisted user.\n      description: Remove an allowlisted user requiring them to sign in using SAML.\n      operationId: deleteAllowlistedUser\n      parameters:\n      - name: userId\n        in: path\n        description: Identifier of user that will no longer be allowlisted from SAML\n          Lockdown.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: User was successfully removed from the allowlist for SAML Lockdown.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/saml/lockdown/enable:\n    post:\n      tags:\n      - samlConfigurationManagement\n      summary: Require SAML for sign-in.\n      description: Enabling SAML lockdown requires users to sign in using SAML preventing\n        them from logging in with an email and password.\n      operationId: enableSamlLockdown\n      responses:\n        \"204\":\n          description: SAML lockdown was enabled successfully.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/saml/lockdown/disable:\n    post:\n      tags:\n      - samlConfigurationManagement\n      summary: Disable SAML lockdown.\n      description: Disable SAML lockdown for the organization.\n      operationId: disableSamlLockdown\n      responses:\n        \"204\":\n          description: SAML lockdown was disabled successfully.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/serviceAllowlist/addresses:\n    get:\n      tags:\n      - serviceAllowlistManagement\n      summary: List all allowlisted CIDRs/IP addresses.\n      description: Get a list of all allowlisted CIDR notations and/or IP addresses\n        for the organization.\n      operationId: listAllowlistedCidrs\n      responses:\n        \"200\":\n          description: List of all allowlisted CIDR notations and/or IP addresses\n            for the organization.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CidrList'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/serviceAllowlist/addresses/add:\n    post:\n      tags:\n      - serviceAllowlistManagement\n      summary: Allowlist CIDRs/IP addresses.\n      description: \"Add CIDR notations and/or IP addresses to the allowlist of the\\\n        \\ organization if not already there. When service allowlisting functionality\\\n        \\ is enabled, CIDRs/IP addresses that are allowlisted will have access to\\\n        \\ Sumo Logic and/or content sharing.\"\n      operationId: addAllowlistedCidrs\n      parameters: []\n      requestBody:\n        description: List of all CIDR notations and/or IP addresses to be added to\n          the allowlist of the organization.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CidrList'\n        required: true\n      responses:\n        \"200\":\n          description: List of all allowlisted CIDR notations and/or IP addresses\n            for the organization.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CidrList'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/serviceAllowlist/addresses/remove:\n    post:\n      tags:\n      - serviceAllowlistManagement\n      summary: Remove allowlisted CIDRs/IP addresses.\n      description: Remove allowlisted CIDR notations and/or IP addresses from the\n        organization. Removed CIDRs/IPs will immediately lose access to Sumo Logic\n        and content sharing.\n      operationId: deleteAllowlistedCidrs\n      parameters: []\n      requestBody:\n        description: List of all CIDR notations and/or IP addresses to be removed\n          from the allowlist of the organization.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CidrList'\n        required: true\n      responses:\n        \"200\":\n          description: List of all allowlisted CIDR notations and/or IP addresses\n            for the organization.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CidrList'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/serviceAllowlist/enable:\n    post:\n      tags:\n      - serviceAllowlistManagement\n      summary: Enable service allowlisting.\n      description: \"Enable service allowlisting functionality for the organization.\\\n        \\ The service allowlisting can be for 1. Login: If enabled, access to Sumo\\\n        \\ Logic is granted only to CIDRs/IP addresses that are allowlisted. 2. Content:\\\n        \\ If enabled, dashboards can be shared with users connecting from CIDRs/IP\\\n        \\ addresses that are allowlisted without logging in.\"\n      operationId: enableAllowlisting\n      parameters:\n      - name: allowlistType\n        in: query\n        description: \"The type of allowlisting to be enabled. It can be one of: `Login`,\\\n          \\ `Content`, or `Both`.\"\n        required: true\n        schema:\n          pattern: ^(Login|Content|Both)$\n          type: string\n          description: \"One of: `Login`, `Content`, `Both`.\"\n          example: Login\n          x-pattern-message: \"must be `Login`, `Content`, or `Both`\"\n      responses:\n        \"204\":\n          description: Service allowlisting was enabled successfully.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/serviceAllowlist/disable:\n    post:\n      tags:\n      - serviceAllowlistManagement\n      summary: Disable service allowlisting.\n      description: Disable service allowlisting functionality for login/API authentication\n        or content sharing for the organization.\n      operationId: disableAllowlisting\n      parameters:\n      - name: allowlistType\n        in: query\n        description: \"The type of allowlisting to be disabled. It can be one of: `Login`,\\\n          \\ `Content`, or `Both`.\"\n        required: true\n        schema:\n          pattern: ^(Login|Content|Both)$\n          type: string\n          description: \"One of: `Login`, `Content`, `Both`.\"\n          example: Login\n          x-pattern-message: \"must be `Login`, `Content`, or `Both`\"\n      responses:\n        \"204\":\n          description: Service allowlisting was disabled successfully.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/serviceAllowlist/status:\n    get:\n      tags:\n      - serviceAllowlistManagement\n      summary: Get the allowlisting status.\n      description: Get the status of the service allowlisting functionality for login/API\n        authentication or content sharing for the organization.\n      operationId: getAllowlistingStatus\n      responses:\n        \"200\":\n          description: The status of service allowlisting for Content and Login.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AllowlistingStatus'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/policies/audit:\n    get:\n      tags:\n      - policiesManagement\n      summary: Get Audit policy.\n      description: \"Get the Audit policy. This policy specifies whether audit records\\\n        \\ for your account are enabled. You can access details about reported account\\\n        \\ events in the Sumo Logic Audit Index. [Learn More](/docs/manage/Security/Audit-Index)\"\n      operationId: getAuditPolicy\n      responses:\n        \"200\":\n          description: The Audit policy.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuditPolicy'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      tags:\n      - policiesManagement\n      summary: Set Audit policy.\n      description: \"Set the Audit policy. This policy specifies whether audit records\\\n        \\ for your account are enabled. You can access details about reported account\\\n        \\ events in the Sumo Logic Audit Index. [Learn More](/docs/manage/Security/Audit-Index)\"\n      operationId: setAuditPolicy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuditPolicy'\n        required: true\n      responses:\n        \"200\":\n          description: Audit policy was set successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuditPolicy'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/policies/searchAudit:\n    get:\n      tags:\n      - policiesManagement\n      summary: Get Search Audit policy.\n      description: \"Get the Search Audit policy. This policy specifies whether search\\\n        \\ records for your account are enabled. You can access details about your\\\n        \\ account's search capacity, queries run by users from the Sumo Search Audit\\\n        \\ Index. [Learn More](/docs/manage/Security/Search-Audit-Index)\"\n      operationId: getSearchAuditPolicy\n      responses:\n        \"200\":\n          description: The Search Audit policy.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchAuditPolicy'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      tags:\n      - policiesManagement\n      summary: Set Search Audit policy.\n      description: \"Set the Search Audit policy. This policy specifies whether search\\\n        \\ records for your account are enabled. You can access details about your\\\n        \\ account's search capacity, queries run by users from the Sumo Search Audit\\\n        \\ Index. [Learn More](/docs/manage/Security/Search-Audit-Index)\"\n      operationId: setSearchAuditPolicy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SearchAuditPolicy'\n        required: true\n      responses:\n        \"200\":\n          description: Search Audit policy was set successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchAuditPolicy'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/policies/shareDashboardsOutsideOrganization:\n    get:\n      tags:\n      - policiesManagement\n      summary: Get Share Dashboards Outside Organization policy.\n      description: \"Get the Share Dashboards Outside Organization policy. This policy\\\n        \\ allows users to share the dashboard with view only privileges outside of\\\n        \\ the organization (capability must be enabled from the Roles page). Disabling\\\n        \\ this policy will disable all dashboards that have been shared outside of\\\n        \\ the organization. [Learn More](/docs/dashboards/share-dashboard-outside-org)\"\n      operationId: getShareDashboardsOutsideOrganizationPolicy\n      responses:\n        \"200\":\n          description: The Share Dashboards Outside Organization policy.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ShareDashboardsOutsideOrganizationPolicy'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      tags:\n      - policiesManagement\n      summary: Set Share Dashboards Outside Organization policy.\n      description: \"Set the Share Dashboards Outside Organization policy. This policy\\\n        \\ allows users to share the dashboard with view only privileges outside of\\\n        \\ the organization (capability must be enabled from the Roles page). Disabling\\\n        \\ this policy will disable all dashboards that have been shared outside of\\\n        \\ the organization. [Learn More](/docs/dashboards/share-dashboard-outside-org)\"\n      operationId: setShareDashboardsOutsideOrganizationPolicy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ShareDashboardsOutsideOrganizationPolicy'\n        required: true\n      responses:\n        \"200\":\n          description: Share Dashboards Outside Organization policy was set successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ShareDashboardsOutsideOrganizationPolicy'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/policies/dataAccessLevel:\n    get:\n      tags:\n      - policiesManagement\n      summary: Get Data Access Level policy.\n      description: \"Get the Data Access Level policy. When enabled, this policy sets\\\n        \\ the default data access level for all newly created dashboards to the viewer’\\\n        s role access filter. Otherwise, newly created dashboards will default to\\\n        \\ the sharer’s role access filter and might display data that viewers’ roles\\\n        \\ don’t allow them to view. [Learn More](/docs/manage/Security/data-access-level-shared-dashboards)\"\n      operationId: getDataAccessLevelPolicy\n      responses:\n        \"200\":\n          description: The Data Access Level policy.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataAccessLevelPolicy'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      tags:\n      - policiesManagement\n      summary: Set Data Access Level policy.\n      description: \"Set the Data Access Level policy. When enabled, this policy sets\\\n        \\ the default data access level for all newly created dashboards to the viewer’\\\n        s role access filter. Otherwise, newly created dashboards will default to\\\n        \\ the sharer’s role access filter and might display data that viewers’ roles\\\n        \\ don’t allow them to view. [Learn More](/docs/manage/Security/data-access-level-shared-dashboards)\"\n      operationId: setDataAccessLevelPolicy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DataAccessLevelPolicy'\n        required: true\n      responses:\n        \"200\":\n          description: Data Access Level policy was set successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataAccessLevelPolicy'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/policies/userConcurrentSessionsLimit:\n    get:\n      tags:\n      - policiesManagement\n      summary: Get User Concurrent Sessions Limit policy.\n      description: \"Get the User Concurrent Sessions Limit policy. When enabled, the\\\n        \\ number of concurrent sessions a user may have is limited to the value entered.\\\n        \\ If a user exceeds the allowed number of sessions, the user's oldest session\\\n        \\ will be logged out to accommodate the new one. Disabling this policy means\\\n        \\ a user may have an unlimited number of concurrent sessions. [Learn More](/docs/manage/Security/set-limit-user-concurrent-sessions)\"\n      operationId: getUserConcurrentSessionsLimitPolicy\n      responses:\n        \"200\":\n          description: The User Concurrent Sessions Limit policy.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserConcurrentSessionsLimitPolicy'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      tags:\n      - policiesManagement\n      summary: Set User Concurrent Sessions Limit policy.\n      description: \"Set the User Concurrent Sessions Limit policy. When enabled, the\\\n        \\ number of concurrent sessions a user may have is limited to the value entered.\\\n        \\ If a user exceeds the allowed number of sessions, the user's oldest session\\\n        \\ will be logged out to accommodate the new one. Disabling this policy means\\\n        \\ a user may have an unlimited number of concurrent sessions. [Learn More](/docs/manage/Security/set-limit-user-concurrent-sessions)\"\n      operationId: setUserConcurrentSessionsLimitPolicy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserConcurrentSessionsLimitPolicy'\n        required: true\n      responses:\n        \"200\":\n          description: User Concurrent Sessions Limit policy was set successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserConcurrentSessionsLimitPolicy'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/policies/maxUserSessionTimeout:\n    get:\n      tags:\n      - policiesManagement\n      summary: Get Max User Session Timeout policy.\n      description: \"Get the Max User Session Timeout policy. When enabled, this policy\\\n        \\ sets the maximum web session timeout users are able to configure within\\\n        \\ their user preferences. Users preferences will be updated to match this\\\n        \\ value only if their current preference is set to a higher value. [Learn\\\n        \\ More](/docs/manage/Security/Set_a_Maximum_Web_Session_Timeout)\"\n      operationId: getMaxUserSessionTimeoutPolicy\n      responses:\n        \"200\":\n          description: The Max User Session Timeout policy.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MaxUserSessionTimeoutPolicy'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      tags:\n      - policiesManagement\n      summary: Set Max User Session Timeout policy.\n      description: \"Set the Max User Session Timeout policy. When enabled, this policy\\\n        \\ sets the maximum web session timeout users are able to configure within\\\n        \\ their user preferences. Users preferences will be updated to match this\\\n        \\ value only if their current preference is set to a higher value. [Learn\\\n        \\ More](/docs/manage/Security/Set_a_Maximum_Web_Session_Timeout)\"\n      operationId: setMaxUserSessionTimeoutPolicy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MaxUserSessionTimeoutPolicy'\n        required: true\n      responses:\n        \"200\":\n          description: Max User Session Timeout policy was set successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MaxUserSessionTimeoutPolicy'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/healthEvents:\n    get:\n      tags:\n      - healthEvents\n      summary: Get a list of health events.\n      description: Get a list of all the unresolved health events in your account.\n      operationId: listAllHealthEvents\n      parameters:\n      - name: limit\n        in: query\n        description: Limit the number of health events returned in the response. The\n          number of health events returned may be less than the `limit`.\n        required: false\n        schema:\n          maximum: 1000\n          minimum: 1\n          type: integer\n          format: int32\n          default: 100\n      - name: token\n        in: query\n        description: Continuation token to get the next page of results. A page object\n          with the next continuation token is returned in the response body. Subsequent\n          GET requests should specify the continuation token to get the next page\n          of results. `token` is set to null when no more pages are left.\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: A paginated list of all the health events.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListHealthEventResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/healthEvents/resources:\n    post:\n      tags:\n      - healthEvents\n      summary: Health events for specific resources.\n      description: Get a list of all the unresolved events in your account that belong\n        to the supplied resource identifiers.\n      operationId: listAllHealthEventsForResources\n      parameters:\n      - name: limit\n        in: query\n        description: Limit the number of health events returned in the response. The\n          number of health events returned may be less than the `limit`.\n        required: false\n        schema:\n          maximum: 1000\n          minimum: 1\n          type: integer\n          format: int32\n          default: 100\n      - name: token\n        in: query\n        description: Continuation token to get the next page of results. A page object\n          with the next continuation token is returned in the response body. Subsequent\n          GET requests should specify the continuation token to get the next page\n          of results. `token` is set to null when no more pages are left.\n        required: false\n        schema:\n          type: string\n      requestBody:\n        description: Resource identifiers to request health events from.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceIdentities'\n        required: true\n      responses:\n        \"200\":\n          description: List of all the health events for the specified resources.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListHealthEventResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/archive/{sourceId}/jobs:\n    get:\n      tags:\n      - archiveManagement\n      summary: Get ingestion jobs for an Archive Source.\n      description: Get a list of all the ingestion jobs created on an Archive Source.\n        The response is paginated with a default limit of 10 jobs per page.\n      operationId: listArchiveJobsBySourceId\n      parameters:\n      - name: sourceId\n        in: path\n        description: The identifier of an Archive Source.\n        required: true\n        schema:\n          type: string\n          example: 000000000606C009\n      - name: limit\n        in: query\n        description: Limit the number of jobs returned in the response. The number\n          of jobs returned may be less than the `limit`.\n        required: false\n        schema:\n          maximum: 100\n          minimum: 1\n          type: integer\n          format: int32\n          default: 10\n      - name: token\n        in: query\n        description: Continuation token to get the next page of results. A page object\n          with the next continuation token is returned in the response body. Subsequent\n          GET requests should specify the continuation token to get the next page\n          of results. `token` is set to null when no more pages are left.\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: A paginated list of ingestion jobs for an Archive Source.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListArchiveJobsResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n      - archiveManagement\n      summary: Create an ingestion job.\n      description: Create an ingestion job to pull data from your S3 bucket.\n      operationId: createArchiveJob\n      parameters:\n      - name: sourceId\n        in: path\n        description: The identifier of the Archive Source for which the job is to\n          be added.\n        required: true\n        schema:\n          type: string\n          example: 000000000606C009\n      requestBody:\n        description: The definition of the ingestion job to create.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateArchiveJobRequest'\n        required: true\n      responses:\n        \"200\":\n          description: The ingestion job was created successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArchiveJob'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/archive/{sourceId}/jobs/{id}:\n    delete:\n      tags:\n      - archiveManagement\n      summary: Delete an ingestion job.\n      description: Delete an ingestion job with the given identifier from the organization.\n        The delete operation is only possible for jobs with a Succeeded or Failed\n        status.\n      operationId: deleteArchiveJob\n      parameters:\n      - name: sourceId\n        in: path\n        description: The identifier of the Archive Source.\n        required: true\n        schema:\n          type: string\n      - name: id\n        in: path\n        description: The identifier of the ingestion job to delete.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: The ingestion job was deleted successfully.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/archive/jobs/count:\n    get:\n      tags:\n      - archiveManagement\n      summary: List ingestion jobs for all Archive Sources.\n      description: Get a list of all Archive Sources with the count and status of\n        ingestion jobs.\n      operationId: listArchiveJobsCountPerSource\n      parameters: []\n      responses:\n        \"200\":\n          description: A list of Archive Sources with ingestion jobs.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListArchiveJobsCount'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/logSearches/estimatedUsage:\n    post:\n      tags:\n      - logSearchesEstimatedUsage\n      summary: Gets estimated usage details.\n      description: |\n        Gets the estimated volume of data that would be scanned for a given log search in the Infrequent data tier.\n      operationId: getLogSearchEstimatedUsage\n      parameters: []\n      requestBody:\n        description: The definition of the log search estimated usage.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LogSearchEstimatedUsageRequest'\n        required: true\n      responses:\n        \"200\":\n          description: Log search information along with its estimated usage details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogSearchEstimatedUsageDefinition'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/logSearches/estimatedUsageByTier:\n    post:\n      tags:\n      - logSearchesEstimatedUsage\n      summary: Gets Tier Wise estimated usage details.\n      description: |\n        Gets the estimated volume of data that would be scanned for a given log search per data tier.\n      operationId: getLogSearchEstimatedUsageByTier\n      parameters: []\n      requestBody:\n        description: The definition of the log search estimated usage.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LogSearchEstimatedUsageRequestV2'\n        required: true\n      responses:\n        \"200\":\n          description: Log search information along with its tier wise estimated usage\n            details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogSearchEstimatedUsageByTierDefinition'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v2/dashboards:\n    get:\n      tags:\n      - dashboardManagement\n      summary: List all dashboards.\n      description: List all dashboards under the Personal folder created by the user.\n      operationId: listDashboards\n      parameters:\n      - name: limit\n        in: query\n        description: Limit the number of dashboard returned in the response. The number\n          of dashboards returned may be less than the `limit`.\n        required: false\n        schema:\n          maximum: 100\n          minimum: 1\n          type: integer\n          format: int32\n          default: 50\n        example: 50\n      - name: token\n        in: query\n        description: Continuation token to get the next page of results. A page object\n          with the next continuation token is returned in the response body. Subsequent\n          GET requests should specify the continuation token to get the next page\n          of results. `token` is set to null when no more pages are left.\n        required: false\n        schema:\n          type: string\n        example: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc\n      responses:\n        \"200\":\n          description: Paginated list of dashboards under the Personal folder created\n            by the user.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedDashboards'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n      - dashboardManagement\n      summary: Create a new dashboard.\n      description: Creates a new dashboard.\n      operationId: createDashboard\n      requestBody:\n        description: Information to create the new dashboard.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DashboardRequest'\n        required: true\n      responses:\n        \"200\":\n          description: The dashboard has been created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dashboard'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v2/dashboards/{id}:\n    get:\n      tags:\n      - dashboardManagement\n      summary: Get a dashboard.\n      description: Get a dashboard by the given identifier.\n      operationId: getDashboard\n      parameters:\n      - name: id\n        in: path\n        description: UUID of the dashboard to return.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Dashboard object that was requested.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dashboard'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      tags:\n      - dashboardManagement\n      summary: Update a dashboard.\n      description: Update a dashboard by the given identifier.\n      operationId: updateDashboard\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the dashboard to update.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: Information to update on the dashboard.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DashboardRequest'\n        required: true\n      responses:\n        \"200\":\n          description: The dashboard was successfully modified.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dashboard'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n      - dashboardManagement\n      summary: Delete a dashboard.\n      description: Delete a dashboard by the given identifier.\n      operationId: deleteDashboard\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the dashboard to delete.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Dashboard was deleted successfully.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v2/dashboards/reportJobs:\n    post:\n      tags:\n      - dashboardManagement\n      summary: Start a report job\n      description: |\n        Schedule an asynchronous job to generate a report from a template. All items in the template will be included unless specified. See template section for more details on individual templates. Reports can be generated in Pdf or Png format and exported in various methods (ex. direct download). You will get back an asynchronous job identifier on success. Use the [getAsyncReportGenerationStatus](#operation/getAsyncExportStatus) endpoint and the job identifier you got back in the response to track the status of an asynchronous report generation job.\n      operationId: generateDashboardReport\n      requestBody:\n        description: Request for a report.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GenerateReportRequest'\n        required: true\n      responses:\n        \"200\":\n          description: Export job has been scheduled.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BeginAsyncJobResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v2/dashboards/reportJobs/{jobId}/status:\n    get:\n      tags:\n      - dashboardManagement\n      summary: Get report generation job status\n      description: \"Get the status of an asynchronous report generation request for\\\n        \\ the given job identifier. On success, use the [getReportGenerationResult](#operation/getAsyncReportGenerationResult)\\\n        \\ endpoint to get the result of the report generation job.\"\n      operationId: getAsyncReportGenerationStatus\n      parameters:\n      - name: jobId\n        in: path\n        description: The identifier of the asynchronous report generation job.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: The status of the report generation job.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AsyncJobStatus'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v2/dashboards/reportJobs/{jobId}/result:\n    get:\n      tags:\n      - dashboardManagement\n      summary: Get report generation job result\n      description: Get the result of an asynchronous report generation request for\n        the given job identifier.\n      operationId: getAsyncReportGenerationResult\n      parameters:\n      - name: jobId\n        in: path\n        description: The identifier of the asynchronous report generation job.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: The result of export job.\n          content:\n            application/pdf:\n              schema:\n                type: string\n                format: binary\n            image/png:\n              schema:\n                type: string\n                format: binary\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/monitors/usageInfo:\n    get:\n      tags:\n      - monitorsLibraryManagement\n      summary: Usage info of monitors.\n      description: Get the current number and the allowed number of log and metrics\n        monitors.\n      operationId: getMonitorUsageInfo\n      responses:\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        \"200\":\n          description: MonitorUsageInfo has been retrieved successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MonitorUsageInfo'\n  /v1/monitors/disable:\n    put:\n      tags:\n      - monitorsLibraryManagement\n      summary: Disable monitors.\n      description: Bulk disable monitors by the given identifiers.\n      operationId: disableMonitorByIds\n      parameters:\n      - name: ids\n        in: query\n        description: A comma-separated list of identifiers.\n        required: true\n        style: form\n        explode: false\n        schema:\n          type: array\n          items:\n            type: string\n        example: \"0000000000000001,0000000000000002,0000000000000003\"\n      responses:\n        \"200\":\n          description: Disabled monitors\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DisableMonitorResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/slos/sli:\n    get:\n      tags:\n      - slosLibraryManagement\n      summary: Bulk fetch SLI values\n      description: \"Bulk fetch SLI values, error budget remaining and SLI computation status for the current compliance period.\"\n      operationId: sli\n      parameters:\n      - name: ids\n        in: query\n        description: The identifiers of the SLOs.\n        required: true\n        schema:\n          type: array\n          items:\n            type: string\n        example: \"000000000000000A,000000000000000B\"\n      responses:\n        \"200\":\n          description: \"A map containing current status, SLI value and error budget\\\n            \\ remaining corresponding to each SLO id.\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdToSliStatusMap'\n        default:\n          description: Error getting SLI metrics for the SLO ids.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/slos/usageInfo:\n    get:\n      tags:\n      - slosLibraryManagement\n      summary: Usage info of SLOs.\n      description: Get the current number and the allowed number of log and metrics\n        SLOs.\n      operationId: getSloUsageInfo\n      responses:\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        \"200\":\n          description: SLO Usage Info has been retrieved successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SloUsageInfo'\n  /v1/passwordPolicy:\n    get:\n      tags:\n      - passwordPolicy\n      summary: Get the current password policy.\n      description: Get the current password policy.\n      operationId: getPasswordPolicy\n      parameters: []\n      responses:\n        \"200\":\n          description: The current password policy.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PasswordPolicy'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      tags:\n      - passwordPolicy\n      summary: Update password policy.\n      description: Update the current password policy.\n      operationId: setPasswordPolicy\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PasswordPolicy'\n        required: true\n      responses:\n        \"200\":\n          description: Password Policy set successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PasswordPolicy'\n        default:\n          description: Setting the password policy failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/metricsQueries:\n    post:\n      tags:\n      - metricsQuery\n      summary: Run metrics queries\n      description: |-\n        Execute up to six metrics queries. If you specify multiple queries, each is returned as a separate set of time series. A metric query returns a maximum of 300 data points per metric. A metric query will process a maximum of 15K unique time series to calculate the query results. Query results are limited to 1000 unique time series.\n        For more information see [Metrics Queries](https://help.sumologic.com/?cid=10144).\n      operationId: runMetricsQueries\n      parameters: []\n      requestBody:\n        description: The parameters for the metrics query.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MetricsQueryRequest'\n        required: true\n      responses:\n        \"200\":\n          description: A set of time series grouped by the query.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetricsQueryResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/tracing/tracequery:\n    post:\n      tags:\n      - traces\n      summary: Run a trace search query asynchronously.\n      description: \"Execute a trace search query and get the id to fetch its status\\\n        \\ and results. Use the [Trace Query Status](#operation/getTraceQueryStatus)\\\n        \\ endpoint to check a query status. When the query has been completed, use\\\n        \\ the [Trace Query Result](#operation/getTraceQueryResult) endpoint to get\\\n        \\ the result of the asynchronous query.\"\n      operationId: createTraceQuery\n      parameters: []\n      requestBody:\n        description: Query parameters.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AsyncTraceQueryRequest'\n        required: true\n      responses:\n        \"200\":\n          description: Query execution result.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateTraceQueryResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/tracing/tracequery/{queryId}:\n    delete:\n      tags:\n      - traces\n      summary: Cancel a trace search query.\n      description: Cancel a currently processed trace search query with the given\n        id.\n      operationId: cancelTraceQuery\n      parameters:\n      - name: queryId\n        in: path\n        description: Identifier of the query to cancel.\n        required: true\n        schema:\n          type: string\n          example: 798a13dc1ceeb19a\n      responses:\n        \"204\":\n          description: Query canceled successfully.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/tracing/tracequery/{queryId}/status:\n    get:\n      tags:\n      - traces\n      summary: Get a trace search query status.\n      description: \"Get a status of a trace query with the given id. When the query\\\n        \\ has been completed, use the [Trace Query Result](#operation/getTraceQueryResult)\\\n        \\ endpoint to get the result of the asynchronous query.\"\n      operationId: getTraceQueryStatus\n      parameters:\n      - name: queryId\n        in: path\n        description: Identifier of the executed query.\n        required: true\n        schema:\n          type: string\n          example: 195038749d21ad109242c95cbbc8709d\n      responses:\n        \"200\":\n          description: Status of the given trace search query.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TraceQueryStatusResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/tracing/tracequery/{queryId}/rows/{rowId}/traces:\n    get:\n      tags:\n      - traces\n      summary: Get results of a trace search query.\n      description: Get a list of traces matching a query with the specified id. The\n        response is paginated with a default limit of 100 traces per page.\n      operationId: getTraceQueryResult\n      parameters:\n      - name: queryId\n        in: path\n        description: Identifier of the executed query.\n        required: true\n        schema:\n          type: string\n          example: 195038749d21ad109242c95cbbc8709d\n      - name: rowId\n        in: path\n        description: Identifier of the query row.\n        required: true\n        schema:\n          type: string\n          example: A\n      - name: limit\n        in: query\n        description: Limit of the number of traces returned in the response.\n        required: false\n        schema:\n          maximum: 500\n          minimum: 1\n          type: integer\n          format: int32\n          example: 100\n          default: 100\n      - name: token\n        in: query\n        description: Continuation token to get the next page of results. A page object\n          with the next continuation token is returned in the response body. Subsequent\n          GET requests should specify the continuation token to get the next page\n          of results. `token` is set to null when no more pages are left.\n        required: false\n        schema:\n          type: string\n          example: dlFXd0lhSkxzRjAwYnpVZkMrRmlhYnF4cGtNMWdnVEI\n      responses:\n        \"200\":\n          description: Details about the given span query.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TraceQueryResultResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/tracing/metrics:\n    get:\n      tags:\n      - traces\n      summary: Get trace search query metrics.\n      description: Get a list of available trace metrics that can be used in trace\n        search queries.\n      operationId: getMetrics\n      parameters: []\n      responses:\n        \"200\":\n          description: List of available metrics.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TraceMetricsResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/tracing/tracequery/fields:\n    get:\n      tags:\n      - traces\n      summary: Get filter fields for trace search queries.\n      description: Get a list of available fields which can be used in trace search\n        queries.\n      operationId: getTraceQueryFields\n      parameters: []\n      responses:\n        \"200\":\n          description: List of available fields.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TraceFieldsResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/tracing/tracequery/fields/{field}/values:\n    get:\n      tags:\n      - traces\n      summary: Get trace search query filter field values.\n      description: Get a list of available values for the given trace search query\n        filter field. Not all fields support value listing. The response is paginated\n        with a default limit of 10 values per page.\n      operationId: getTraceQueryFieldValues\n      parameters:\n      - name: field\n        in: path\n        description: Field identifier.\n        required: true\n        schema:\n          type: string\n      - name: query\n        in: query\n        description: Search filter to apply on the values to be returned. Only values\n          containing the search query term will be returned.\n        required: false\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: The maximum number of results to fetch.\n        required: false\n        schema:\n          maximum: 500\n          minimum: 1\n          type: integer\n          format: int32\n          default: 10\n      - name: token\n        in: query\n        description: Continuation token to get the next page of results. A page object\n          with the next continuation token is returned in the response body. Subsequent\n          GET requests should specify the continuation token to get the next page\n          of results. `token` is set to null when no more pages are left.\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: List of available filter values for the given field.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TraceFieldValuesResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/tracing/traces/{traceId}:\n    get:\n      tags:\n      - traces\n      summary: Get trace details.\n      description: Get details of a trace with the given identifier.\n      operationId: getTrace\n      parameters:\n      - name: traceId\n        in: path\n        description: Identifier of the trace to get the details.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Details of the trace with the given identifier.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TraceDetail'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/tracing/traces/{traceId}/exists:\n    get:\n      tags:\n      - traces\n      summary: Check if the trace exists.\n      description: Check if the trace with the given identifier exists.\n      operationId: traceExists\n      parameters:\n      - name: traceId\n        in: path\n        description: Identifier of the trace to check.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: The response contains the information whether the trace exists\n            with other optional attributes.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TraceExistsResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/tracing/traces/{traceId}/spans:\n    get:\n      tags:\n      - traces\n      summary: Get a list of trace spans.\n      description: Get a list of spans for the given trace. The response is paginated\n        with a default limit of 100 spans per page.\n      operationId: getSpans\n      parameters:\n      - name: traceId\n        in: path\n        description: Identifier of the trace to get the spans.\n        required: true\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: The maximum number of results to fetch.\n        required: false\n        schema:\n          maximum: 500\n          minimum: 1\n          type: integer\n          format: int32\n          default: 100\n      - name: token\n        in: query\n        description: Continuation token to get the next page of results. A page object\n          with the next continuation token is returned in the response body. Subsequent\n          GET requests should specify the continuation token to get the next page\n          of results. `token` is set to null when no more pages are left.\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: List of spans for the given trace.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TraceSpansResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/tracing/traces/{traceId}/traceEvents:\n    get:\n      tags:\n      - traces\n      summary: Get a list of events (without their attributes) per span for a trace.\n      description: Gets a list of the events (without their attributes) attached to\n        each span in a given trace. The response is paginated with a default limit\n        of 100 spans per page.\n      operationId: getTraceLightEvents\n      parameters:\n      - name: traceId\n        in: path\n        description: Identifier of the trace for which span events will be returned.\n        required: true\n        schema:\n          maxLength: 32\n          minLength: 16\n          type: string\n          example: 695068749d21cd104222a95cabc4707c\n      - name: limit\n        in: query\n        description: The maximum number of spans with events returned by a single\n          query.\n        required: false\n        schema:\n          maximum: 500\n          minimum: 1\n          type: integer\n          format: int32\n          default: 100\n      - name: token\n        in: query\n        description: Continuation token to get the next page of results. A page object\n          with the next continuation token is returned in the response body. Subsequent\n          GET requests should specify the continuation token to get the next page\n          of results. `token` is set to null when no more pages are left.\n        required: false\n        schema:\n          type: string\n          example: dlFXd0lhSkxzRjAwYnpVZkMrRmlhYnF4cGtNMWdnVEI\n      responses:\n        \"200\":\n          description: Map of spans to events relations.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TraceLightEventsResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/tracing/traces/{traceId}/criticalPath:\n    get:\n      tags:\n      - traces\n      summary: Get a critical path of a trace.\n      description: Get a list of span segments composing the critical path of the\n        trace. A span segment represents the processing time that was consumed within\n        the span itself and does not incorporate the processing time of its children.\n        The critical path is the sequence of span segments that contribute to the\n        total trace duration. An increase of the processing time of any segment from\n        the critical path would result in an increase of the total trace processing\n        time.\n      operationId: getCriticalPath\n      parameters:\n      - name: traceId\n        in: path\n        description: Identifier of the trace.\n        required: true\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: The maximum number of results to fetch.\n        required: false\n        schema:\n          maximum: 500\n          minimum: 1\n          type: integer\n          format: int32\n          default: 100\n      - name: token\n        in: query\n        description: Continuation token to get the next page of results. A page object\n          with the next continuation token is returned in the response body. Subsequent\n          GET requests should specify the continuation token to get the next page\n          of results. `token` is set to null when no more pages are left.\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: List of span segments composing the critical path.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CriticalPathResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/tracing/traces/{traceId}/criticalPath/breakdown/service:\n    get:\n      tags:\n      - traces\n      summary: Get a critical path service breakdown of a trace.\n      description: Get a critical path breakdown by services of the spans contributing\n        to the critical path of a trace with the given identifier.\n      operationId: getCriticalPathServiceBreakdown\n      parameters:\n      - name: traceId\n        in: path\n        description: Identifier of the trace.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: List of elements representing the critical path service breakdown.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CriticalPathServiceBreakdownResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/tracing/traces/{traceId}/spans/{spanId}:\n    get:\n      tags:\n      - traces\n      summary: Get span details.\n      description: Get details of a span with the given identifier.\n      operationId: getSpan\n      parameters:\n      - name: traceId\n        in: path\n        description: Identifier of the trace the span belongs to.\n        required: true\n        schema:\n          type: string\n      - name: spanId\n        in: path\n        description: Identifier of the span to get the details.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Details of the span with the given identifier.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TraceSpanDetail'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/tracing/traces/{traceId}/spans/{spanId}/billingInfo:\n    get:\n      tags:\n      - traces\n      summary: Get span billing details.\n      description: Get the billing information of the span.\n      operationId: getSpanBillingInfo\n      parameters:\n      - name: traceId\n        in: path\n        description: Identifier of the trace the span belongs to.\n        required: true\n        schema:\n          type: string\n      - name: spanId\n        in: path\n        description: Identifier of the span to get the billing info.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Billing information of the span with the given identifier.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TraceSpanBillingInfo'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/tracing/spanquery:\n    post:\n      tags:\n      - spanAnalytics\n      summary: Run a span analytics query asynchronously.\n      description: \"Execute a span analytics query and get the id to fetch its status\\\n        \\ and results. Use the [Span Query Status](#operation/getSpanQueryStatus)\\\n        \\ endpoint to check a query status. When the query has been completed, use\\\n        \\ the [Span Query Result](#operation/getSpanQueryResult) endpoint to get the\\\n        \\ result of the asynchronous query.\"\n      operationId: createSpanQuery\n      parameters: []\n      requestBody:\n        description: Query parameters.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SpanQueryRequest'\n        required: true\n      responses:\n        \"200\":\n          description: Query execution result.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SpanQueryResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/tracing/spanquery/{queryId}:\n    delete:\n      tags:\n      - spanAnalytics\n      summary: Cancel a span analytics query.\n      description: Cancel a currently processed span search query with the given id.\n      operationId: cancelSpanQuery\n      parameters:\n      - name: queryId\n        in: path\n        description: Identifier of the query to cancel.\n        required: true\n        schema:\n          type: string\n          example: 195038749d21ad109242c95cbbc8709d\n      responses:\n        \"204\":\n          description: Query canceled successfully.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/tracing/spanquery/{queryId}/status:\n    get:\n      tags:\n      - spanAnalytics\n      summary: Get a span analytics query status.\n      description: \"Get a status of a span analytics query with the given id. When\\\n        \\ the query has been completed, use the [Span Query Result](#operation/getSpanQueryResult)\\\n        \\ endpoint to get the result of the asynchronous query.\"\n      operationId: getSpanQueryStatus\n      parameters:\n      - name: queryId\n        in: path\n        description: Identifier of the executed query.\n        required: true\n        schema:\n          type: string\n          example: 195038749d21ad109242c95cbbc8709d\n      responses:\n        \"200\":\n          description: Details about the given span query.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SpanQueryStatusResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/tracing/spanquery/{queryId}/pause:\n    put:\n      tags:\n      - spanAnalytics\n      summary: Pause a span analytics query.\n      description: Pause a currently processed span search query with the given id.\n      operationId: pauseSpanQuery\n      parameters:\n      - name: queryId\n        in: path\n        description: Identifier of the query to pause.\n        required: true\n        schema:\n          type: string\n          example: 195038749d21ad109242c95cbbc8709d\n      responses:\n        \"204\":\n          description: Query paused successfully.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/tracing/spanquery/{queryId}/resume:\n    put:\n      tags:\n      - spanAnalytics\n      summary: Resume a span analytics query.\n      description: Resume a previously paused span search query with the given id.\n      operationId: resumeSpanQuery\n      parameters:\n      - name: queryId\n        in: path\n        description: Identifier of the query to resume.\n        required: true\n        schema:\n          type: string\n          example: 195038749d21ad109242c95cbbc8709d\n      responses:\n        \"204\":\n          description: Query resumed successfully.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/tracing/spanquery/{queryId}/rows/{rowId}/spans:\n    get:\n      tags:\n      - spanAnalytics\n      summary: Get results of a span analytics query.\n      description: Get a list of spans matching a query with the specified id. The\n        response is paginated with a default limit of 100 spans per page.\n      operationId: getSpanQueryResult\n      parameters:\n      - name: queryId\n        in: path\n        description: Identifier of the executed query.\n        required: true\n        schema:\n          type: string\n          example: 195038749d21ad109242c95cbbc8709d\n      - name: rowId\n        in: path\n        description: Identifier of the query row.\n        required: true\n        schema:\n          type: string\n          example: A\n      - name: limit\n        in: query\n        description: Limit of the number of spans returned in the response.\n        required: false\n        schema:\n          maximum: 500\n          minimum: 1\n          type: integer\n          format: int32\n          example: 100\n          default: 100\n      - name: token\n        in: query\n        description: Continuation token to get the next page of results. A page object\n          with the next continuation token is returned in the response body. Subsequent\n          GET requests should specify the continuation token to get the next page\n          of results. `token` is set to null when no more pages are left.\n        required: false\n        schema:\n          type: string\n          example: dlFXd0lhSkxzRjAwYnpVZkMrRmlhYnF4cGtNMWdnVEI\n      responses:\n        \"200\":\n          description: Details about the given span query.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SpanQueryResultSpansResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/tracing/spanquery/{queryId}/rows/{rowId}/facets:\n    get:\n      tags:\n      - spanAnalytics\n      summary: Get a list of facets of a span analytics query.\n      description: Get a list of facets of a span analytics query with the specified\n        id.\n      operationId: getSpanQueryFacets\n      parameters:\n      - name: queryId\n        in: path\n        description: Identifier of the executed query.\n        required: true\n        schema:\n          type: string\n          example: 195038749d21ad109242c95cbbc8709d\n      - name: rowId\n        in: path\n        description: Identifier of the query row.\n        required: true\n        schema:\n          type: string\n          example: A\n      responses:\n        \"200\":\n          description: The list of facets from the executed query.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SpanQueryResultFacetsResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/tracing/spanquery/{queryId}/aggregates:\n    get:\n      tags:\n      - spanAnalytics\n      summary: Get span analytics query aggregated results.\n      description: Get span aggregation results for an aggregated span analytics query\n        with the specified id. Only aggregated rows being part of the executed query\n        will have matching results in the response of this endpoint.\n      operationId: getSpanQueryAggregates\n      parameters:\n      - name: queryId\n        in: path\n        description: Identifier of the executed query.\n        required: true\n        schema:\n          type: string\n          example: 195038749d21ad109242c95cbbc8709d\n      responses:\n        \"200\":\n          description: The aggregation result of the executed query.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SpanQueryAggregateResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/tracing/spanquery/fields:\n    get:\n      tags:\n      - spanAnalytics\n      summary: Get filter fields for span analytics queries.\n      description: Get a list of available fields which can be used in span analytics\n        queries.\n      operationId: getSpanQueryFields\n      parameters: []\n      responses:\n        \"200\":\n          description: List of available fields.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SpanQueryFieldsResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/tracing/spanquery/fields/{field}/values:\n    get:\n      tags:\n      - spanAnalytics\n      summary: Get span analytics query filter field values.\n      description: Get a list of available values for the given span analytics query\n        filter field. Not all fields support value listing. The response is paginated\n        with a default limit of 10 field values per page.\n      operationId: getSpanQueryFieldValues\n      parameters:\n      - name: field\n        in: path\n        description: Field identifier.\n        required: true\n        schema:\n          type: string\n      - name: query\n        in: query\n        description: Search filter to apply on the values to be returned. Only values\n          containing the search query term will be returned.\n        required: false\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: The maximum number of results to fetch.\n        required: false\n        schema:\n          maximum: 500\n          minimum: 1\n          type: integer\n          format: int32\n          default: 10\n      - name: token\n        in: query\n        description: Continuation token to get the next page of results. A page object\n          with the next continuation token is returned in the response body. Subsequent\n          GET requests should specify the continuation token to get the next page\n          of results. `token` is set to null when no more pages are left.\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: List of available filter values for the given field.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TraceFieldValuesResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/tracing/serviceMap:\n    get:\n      tags:\n      - serviceMap\n      summary: Get a service map.\n      description: Run a search request to get a map of services and connections between\n        them.\n      operationId: getServiceMap\n      parameters: []\n      responses:\n        \"200\":\n          description: List of nodes and list of edges.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceMapResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/monitors:\n    get:\n      tags:\n      - monitorsLibraryManagement\n      summary: Bulk read a monitor or folder.\n      description: Bulk read a monitor or folder by the given identifiers from the\n        monitors library.\n      operationId: monitorsReadByIds\n      parameters:\n      - name: ids\n        in: query\n        description: A comma-separated list of identifiers.\n        required: true\n        schema:\n          type: array\n          items:\n            type: string\n        example: \"0000000000000001,0000000000000002,0000000000000003\"\n      responses:\n        \"200\":\n          description: A map between an identifier and its definition (monitor or\n            folder).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdToMonitorsLibraryBaseResponseMap'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n      - monitorsLibraryManagement\n      summary: |\n        Create a monitor or folder.\n      description: Create a monitor or folder in the monitors library.\n      operationId: monitorsCreate\n      parameters:\n      - name: parentId\n        in: query\n        description: Identifier of the parent folder in which to create the monitor\n          or folder.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: The monitor or folder to create.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MonitorsLibraryBase'\n        required: true\n      responses:\n        \"200\":\n          description: The monitor or folder was created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MonitorsLibraryBaseResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n      - monitorsLibraryManagement\n      summary: |\n        Bulk delete a monitor or folder.\n      description: Bulk delete a monitor or folder by the given identifiers in the\n        monitors library.\n      operationId: monitorsDeleteByIds\n      parameters:\n      - name: ids\n        in: query\n        description: A comma-separated list of identifiers.\n        required: true\n        schema:\n          type: array\n          items:\n            type: string\n        example: \"0000000000000001,0000000000000002,0000000000000003\"\n      responses:\n        \"200\":\n          description: A map between the deleted identifier and its metadata.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdToMonitorsLibraryBaseResponseMap'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/monitors/root:\n    get:\n      tags:\n      - monitorsLibraryManagement\n      summary: Get the root monitors folder.\n      description: Get the root folder in the monitors library.\n      operationId: getMonitorsLibraryRoot\n      responses:\n        \"200\":\n          description: Root folder of the monitors library.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MonitorsLibraryFolderResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/monitors/path:\n    get:\n      tags:\n      - monitorsLibraryManagement\n      summary: Read a monitor or folder by its path.\n      description: Read a monitor or folder by its path in the monitors library structure.\n      operationId: monitorsGetByPath\n      parameters:\n      - name: path\n        in: query\n        description: The path of the monitor or folder.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Requested monitor or folder.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MonitorsLibraryBaseResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/monitors/search:\n    get:\n      tags:\n      - monitorsLibraryManagement\n      summary: Search for a monitor or folder.\n      description: Search for a monitor or folder in the monitors library structure.\n      operationId: monitorsSearch\n      parameters:\n      - name: query\n        in: query\n        description: |-\n          The search query to find monitor or folder. Below is the list of different filters with examples:\n            - **createdBy** : Filter by the user's identifier who created the content. Example: `createdBy:000000000000968B`.\n            - **createdBefore** : Filter by the content objects created before the given timestamp(in milliseconds). Example: `createdBefore:1457997222`.\n            - **createdAfter** : Filter by the content objects created after the given timestamp(in milliseconds). Example: `createdAfter:1457997111`.\n            - **modifiedBefore** : Filter by the content objects modified before the given timestamp(in milliseconds). Example: `modifiedBefore:1457997222`.\n            - **modifiedAfter** : Filter by the content objects modified after the given timestamp(in milliseconds). Example: `modifiedAfter:1457997111`.\n            - **type** : Filter by the type of the content object. Example: `type:folder`.\n            - **monitorStatus** : Filter by the status of the monitor: Normal, Critical, Warning, MissingData, Disabled, AllTriggered. Example: `monitorStatus:Normal`.\n\n          You can also use multiple filters in one query. For example to search for all content objects created by user with identifier 000000000000968B with creation timestamp after 1457997222 containing the text Test, the query would look like:\n\n            `createdBy:000000000000968B createdAfter:1457997222 Test`\n        required: true\n        schema:\n          type: string\n        example: createdBy:000000000000968B Test\n      - name: limit\n        in: query\n        description: Maximum number of items you want in the response.\n        required: false\n        schema:\n          type: integer\n          format: int32\n          default: 100\n        example: 10\n      - name: offset\n        in: query\n        description: The position or row from where to start the search operation.\n        required: false\n        schema:\n          type: integer\n          format: int32\n          default: 0\n        example: 5\n      responses:\n        \"200\":\n          description: List of folders and monitors matching the search query.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListMonitorsLibraryItemWithPath'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/monitors/{id}:\n    get:\n      tags:\n      - monitorsLibraryManagement\n      summary: Get a monitor or folder.\n      description: Get a monitor or folder from the monitors library.\n      operationId: monitorsReadById\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the monitor or folder to read.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Requested monitor or folder.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MonitorsLibraryBaseResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      tags:\n      - monitorsLibraryManagement\n      summary: |\n        Update a monitor or folder.\n      description: Update a monitor or folder in the monitors library.\n      operationId: monitorsUpdateById\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the monitor or folder to update.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: The monitor or folder to update. The content version must match\n          its latest version number in the monitors library. If the version does not\n          match it will not be updated.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MonitorsLibraryBaseUpdate'\n        required: true\n      responses:\n        \"200\":\n          description: The monitor or folder was updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MonitorsLibraryBaseResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n      - monitorsLibraryManagement\n      summary: |\n        Delete a monitor or folder.\n      description: Delete a monitor or folder from the monitors library.\n      operationId: monitorsDeleteById\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the monitor or folder to delete.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: The monitor or folder was successfully deleted.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/monitors/{id}/path:\n    get:\n      tags:\n      - monitorsLibraryManagement\n      summary: Get the path of a monitor or folder.\n      description: Get the full path of the monitor or folder in the monitors library.\n      operationId: getMonitorsFullPath\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the monitor or folder.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Full path of the monitor or folder.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Path'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/monitors/{id}/move:\n    post:\n      tags:\n      - monitorsLibraryManagement\n      summary: Move a monitor or folder.\n      description: Move a monitor or folder to a different location in the monitors\n        library.\n      operationId: monitorsMove\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the monitor or folder to move.\n        required: true\n        schema:\n          type: string\n      - name: parentId\n        in: query\n        description: Identifier of the parent folder to move the monitor or folder\n          to.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Moved monitor or folder.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MonitorsLibraryBaseResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/monitors/{id}/copy:\n    post:\n      tags:\n      - monitorsLibraryManagement\n      summary: Copy a monitor or folder.\n      description: Copy a monitor or folder in the monitors library.\n      operationId: monitorsCopy\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the monitor or folder to copy.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: |-\n          Fields include:\n            1) Identifier of the parent folder to copy to.\n            2) Optionally provide a new name.\n            3) Optionally provide a new description.\n            4) Optionally set to true if you want to copy and preserve the locked status. Requires `LockMonitors` capability.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ContentCopyParams'\n        required: true\n      responses:\n        \"200\":\n          description: The monitor or folder was copied.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MonitorsLibraryBaseResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/monitors/{id}/export:\n    get:\n      tags:\n      - monitorsLibraryManagement\n      summary: Export a monitor or folder.\n      description: \"Export a monitor or folder. If the given identifier is a folder,\\\n        \\ everything under the folder is exported recursively with folder as the root.\"\n      operationId: monitorsExportItem\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the monitor or folder to export.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Exported monitor or folder.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MonitorsLibraryBaseExport'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/monitors/{parentId}/import:\n    post:\n      tags:\n      - monitorsLibraryManagement\n      summary: Import a monitor or folder.\n      description: Import a monitor or folder.\n      operationId: monitorsImportItem\n      parameters:\n      - name: parentId\n        in: path\n        description: Identifier of the parent folder in which to import the monitor\n          or folder.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: The monitor or folder to be imported.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MonitorsLibraryBaseExport'\n        required: true\n      responses:\n        \"200\":\n          description: \"Newly imported monitor or folder. NOTE: Permissions field\\\n            \\ will not be filled (empty list).\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MonitorsLibraryBaseResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/monitors/{id}/permissions:\n    get:\n      tags:\n      - monitorsLibraryManagement\n      summary: |\n        List explicit permissions on monitor or folder.\n      description: List explicit permissions on monitor or folder in the monitors\n        library.\n      operationId: monitorsReadPermissionsById\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the monitor or folder to list permissions.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: The list of explicit permission statements for the monitor\n            or folder.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListPermissionsResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/monitors/permissions/set:\n    put:\n      tags:\n      - monitorsLibraryManagement\n      summary: |\n        Set permissions on monitor or folder.\n      description: Set permissions on monitor or folder in the monitors library.\n      operationId: monitorsSetPermissions\n      requestBody:\n        description: The permission statement definitions to set.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PermissionStatementDefinitions'\n        required: true\n      responses:\n        \"200\":\n          description: List of the successfully set `PermissionStatements`.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PermissionStatements'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/monitors/permissions/revoke:\n    put:\n      tags:\n      - monitorsLibraryManagement\n      summary: |\n        Revoke all permissions on monitor or folder.\n      description: Revoke all permissions on monitor or folder in the monitors library.\n      operationId: monitorsRevokePermissions\n      requestBody:\n        description: The identifiers of the permissions statements to revoke.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PermissionIdentifiers'\n        required: true\n      responses:\n        \"204\":\n          description: Permissions were successfully revoked for monitor or folder.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/monitors/{id}/permissionSummariesBySubjects:\n    get:\n      tags:\n      - monitorsLibraryManagement\n      summary: |\n        List permission summaries for a monitor or folder.\n      description: List permission summary meta(s) grouped by subjects on monitor\n        or folder in the monitors library.\n      operationId: monitorsReadPermissionSummariesByIdGroupBySubjects\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the monitor or folder to list permissions.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: The list of permission summary meta(s) grouped by subjects\n            for the monitor or folder.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PermissionSummariesBySubjects'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/slos:\n    get:\n      tags:\n      - slosLibraryManagement\n      summary: Bulk read a slo or folder.\n      description: Bulk read a slo or folder by the given identifiers from the slos\n        library.\n      operationId: slosReadByIds\n      parameters:\n      - name: ids\n        in: query\n        description: A comma-separated list of identifiers.\n        required: true\n        schema:\n          type: array\n          items:\n            type: string\n        example: \"0000000000000001,0000000000000002,0000000000000003\"\n      responses:\n        \"200\":\n          description: A map between an identifier and its definition (slo or folder).\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdToSlosLibraryBaseResponseMap'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n      - slosLibraryManagement\n      summary: |\n        Create a slo or folder.\n      description: Create a slo or folder in the slos library.\n      operationId: slosCreate\n      parameters:\n      - name: parentId\n        in: query\n        description: Identifier of the parent folder in which to create the slo or\n          folder.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: The slo or folder to create.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SlosLibraryBase'\n        required: true\n      responses:\n        \"200\":\n          description: The slo or folder was created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SlosLibraryBaseResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n      - slosLibraryManagement\n      summary: |\n        Bulk delete a slo or folder.\n      description: Bulk delete a slo or folder by the given identifiers in the slos\n        library.\n      operationId: slosDeleteByIds\n      parameters:\n      - name: ids\n        in: query\n        description: A comma-separated list of identifiers.\n        required: true\n        schema:\n          type: array\n          items:\n            type: string\n        example: \"0000000000000001,0000000000000002,0000000000000003\"\n      responses:\n        \"200\":\n          description: A map between the deleted identifier and its metadata.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdToSlosLibraryBaseResponseMap'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/slos/root:\n    get:\n      tags:\n      - slosLibraryManagement\n      summary: Get the root slos folder.\n      description: Get the root folder in the slos library.\n      operationId: getSlosLibraryRoot\n      responses:\n        \"200\":\n          description: Root folder of the slos library.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SlosLibraryFolderResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/slos/path:\n    get:\n      tags:\n      - slosLibraryManagement\n      summary: Read a slo or folder by its path.\n      description: Read a slo or folder by its path in the slos library structure.\n      operationId: slosGetByPath\n      parameters:\n      - name: path\n        in: query\n        description: The path of the slo or folder.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Requested slo or folder.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SlosLibraryBaseResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/slos/search:\n    get:\n      tags:\n      - slosLibraryManagement\n      summary: Search for a slo or folder.\n      description: Search for a slo or folder in the slos library structure.\n      operationId: slosSearch\n      parameters:\n      - name: query\n        in: query\n        description: |-\n          The search query to find slo or folder. Below is the list of different filters with examples:\n            - **createdBy** : Filter by the user's identifier who created the content. Example: `createdBy:000000000000968B`.\n            - **createdBefore** : Filter by the content objects created before the given timestamp(in milliseconds). Example: `createdBefore:1457997222`.\n            - **createdAfter** : Filter by the content objects created after the given timestamp(in milliseconds). Example: `createdAfter:1457997111`.\n            - **modifiedBefore** : Filter by the content objects modified before the given timestamp(in milliseconds). Example: `modifiedBefore:1457997222`.\n            - **modifiedAfter** : Filter by the content objects modified after the given timestamp(in milliseconds). Example: `modifiedAfter:1457997111`.\n            - **type** : Filter by the type of the content object. Example: `type:folder`.\n\n          You can also use multiple filters in one query. For example to search for all content objects created by user with identifier 000000000000968B with creation timestamp after 1457997222 containing the text Test, the query would look like:\n\n            `createdBy:000000000000968B createdAfter:1457997222 Test`\n        required: true\n        schema:\n          type: string\n        example: createdBy:000000000000968B Test\n      - name: limit\n        in: query\n        description: Maximum number of items you want in the response.\n        required: false\n        schema:\n          type: integer\n          format: int32\n          default: 100\n        example: 10\n      - name: offset\n        in: query\n        description: The position or row from where to start the search operation.\n        required: false\n        schema:\n          type: integer\n          format: int32\n          default: 0\n        example: 5\n      responses:\n        \"200\":\n          description: List of folders and slos matching the search query.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListSlosLibraryItemWithPath'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/slos/{id}:\n    get:\n      tags:\n      - slosLibraryManagement\n      summary: Get a slo or folder.\n      description: Get a slo or folder from the slos library.\n      operationId: slosReadById\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the slo or folder to read.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Requested slo or folder.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SlosLibraryBaseResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    put:\n      tags:\n      - slosLibraryManagement\n      summary: |\n        Update a slo or folder.\n      description: Update a slo or folder in the slos library.\n      operationId: slosUpdateById\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the slo or folder to update.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: The slo or folder to update. The content version must match its\n          latest version number in the slos library. If the version does not match\n          it will not be updated.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SlosLibraryBaseUpdate'\n        required: true\n      responses:\n        \"200\":\n          description: The slo or folder was updated.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SlosLibraryBaseResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n      - slosLibraryManagement\n      summary: |\n        Delete a slo or folder.\n      description: Delete a slo or folder from the slos library.\n      operationId: slosDeleteById\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the slo or folder to delete.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: The slo or folder was successfully deleted.\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/slos/{id}/path:\n    get:\n      tags:\n      - slosLibraryManagement\n      summary: Get the path of a slo or folder.\n      description: Get the full path of the slo or folder in the slos library.\n      operationId: getSlosFullPath\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the slo or folder.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Full path of the slo or folder.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Path'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/slos/{id}/move:\n    post:\n      tags:\n      - slosLibraryManagement\n      summary: Move a slo or folder.\n      description: Move a slo or folder to a different location in the slos library.\n      operationId: slosMove\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the slo or folder to move.\n        required: true\n        schema:\n          type: string\n      - name: parentId\n        in: query\n        description: Identifier of the parent folder to move the slo or folder to.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Moved slo or folder.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SlosLibraryBaseResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/slos/{id}/copy:\n    post:\n      tags:\n      - slosLibraryManagement\n      summary: Copy a slo or folder.\n      description: Copy a slo or folder in the slos library.\n      operationId: slosCopy\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the slo or folder to copy.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: |-\n          Fields include:\n            1) Identifier of the parent folder to copy to.\n            2) Optionally provide a new name.\n            3) Optionally provide a new description.\n            4) Optionally set to true if you want to copy and preserve the locked status. Requires `LockSlos` capability.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ContentCopyParams'\n        required: true\n      responses:\n        \"200\":\n          description: The slo or folder was copied.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SlosLibraryBaseResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/slos/{id}/export:\n    get:\n      tags:\n      - slosLibraryManagement\n      summary: Export a slo or folder.\n      description: \"Export a slo or folder. If the given identifier is a folder, everything\\\n        \\ under the folder is exported recursively with folder as the root.\"\n      operationId: slosExportItem\n      parameters:\n      - name: id\n        in: path\n        description: Identifier of the slo or folder to export.\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Exported slo or folder.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SlosLibraryBaseExport'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n  /v1/slos/{parentId}/import:\n    post:\n      tags:\n      - slosLibraryManagement\n      summary: Import a slo or folder.\n      description: Import a slo or folder.\n      operationId: slosImportItem\n      parameters:\n      - name: parentId\n        in: path\n        description: Identifier of the parent folder in which to import the slo or\n          folder.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        description: The slo or folder to be imported.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SlosLibraryBaseExport'\n        required: true\n      responses:\n        \"200\":\n          description: \"Newly imported slo or folder. NOTE: Permissions field will\\\n            \\ not be filled (empty list).\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SlosLibraryBaseResponse'\n        default:\n          description: Operation failed with an error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\ncomponents:\n  schemas:\n    AddOrReplaceTransformation:\n      allOf:\n      - $ref: '#/components/schemas/DimensionTransformation'\n      - required:\n        - dimensionToReplace\n        - value\n        type: object\n        properties:\n          dimensionToReplace:\n            type: string\n            description: The dimension that needs to be modified or added.\n            example: metric\n          value:\n            type: string\n            description: The value for the dimension.\n            example: \"{{metric}}_aggregated\"\n    AggregateOnTransformation:\n      allOf:\n      - $ref: '#/components/schemas/DimensionTransformation'\n      - required:\n        - aggregateOn\n        type: object\n        properties:\n          aggregateOn:\n            type: array\n            description: A list of dimensions that should be aggregated on.\n            example:\n            - metric\n            - cluster\n            items:\n              type: string\n            default: []\n    BeginBoundedTimeRange:\n      allOf:\n      - $ref: '#/components/schemas/ResolvableTimeRange'\n      - required:\n        - from\n        type: object\n        properties:\n          from:\n            $ref: '#/components/schemas/TimeRangeBoundary'\n          to:\n            $ref: '#/components/schemas/TimeRangeBoundary'\n    CompleteLiteralTimeRange:\n      allOf:\n      - $ref: '#/components/schemas/ResolvableTimeRange'\n      - required:\n        - rangeName\n        type: object\n        properties:\n          rangeName:\n            pattern: ^(today|yesterday|previous_week|previous_month)$\n            type: string\n            description: \"Name of the complete time range. Possible values are: -\\\n              \\ `today`, - `yesterday`, - `previous_week`, - `previous_month`.\"\n            example: previous_month\n            x-pattern-message: \"must be one of the following: `today`, `yesterday`,\\\n              \\ `previous_week`, `previous_month`\"\n    EpochTimeRangeBoundary:\n      allOf:\n      - $ref: '#/components/schemas/TimeRangeBoundary'\n      - required:\n        - epochMillis\n        type: object\n        properties:\n          epochMillis:\n            type: integer\n            description: Starting point in time as a number of milliseconds since\n              the epoch. For example `1538392220000`\n            format: int64\n            example: 1538392220000\n    Iso8601TimeRangeBoundary:\n      allOf:\n      - $ref: '#/components/schemas/TimeRangeBoundary'\n      - required:\n        - iso8601Time\n        type: object\n        properties:\n          iso8601Time:\n            type: string\n            description: Starting point in time as a string in ISO 8601 format. For\n              example `2018-10-01T11:10:20.52+01:00`\n            format: date-time\n            example: 2018-10-01T11:10:20.52+01:00\n    LiteralTimeRangeBoundary:\n      allOf:\n      - $ref: '#/components/schemas/TimeRangeBoundary'\n      - required:\n        - rangeName\n        type: object\n        properties:\n          rangeName:\n            type: string\n            description: |-\n              Name of the time range. Possible values are:\n                - `now`,\n                - `second`,\n                - `minute`,\n                - `hour`,\n                - `day`,\n                - `today`,\n                - `week`,\n                - `month`,\n                - `year`\n            example: week\n    RelativeTimeRangeBoundary:\n      allOf:\n      - $ref: '#/components/schemas/TimeRangeBoundary'\n      - required:\n        - relativeTime\n        type: object\n        properties:\n          relativeTime:\n            type: string\n            description: |-\n              Relative time as a string consisting of following elements: - `-` (optional): minus sign indicates time in the past, - `\u003cnumber\u003e`: number of time units, - `\u003ctime_unit\u003e`: time unit; possible values are: `w` (week), `d` (day), `h` (hour), `m` (minute), `s` (second).\n              Multiple pairs of `\u003cnumber\u003e\u003ctime_unit\u003e` may be provided, and they may be in any order. For example, `-2w5d3h` points to the moment in time 2 weeks, 5 days and 3 hours ago.\n            example: -2w5d3h\n    ResolvableTimeRange:\n      required:\n      - type\n      type: object\n      properties:\n        type:\n          type: string\n          description: Type of the time range. Value must be either `CompleteLiteralTimeRange`\n            or `BeginBoundedTimeRange`.\n      example:\n        type: BeginBoundedTimeRange\n        from:\n          type: RelativeTimeRangeBoundary\n          relativeTime: -15m\n      discriminator:\n        propertyName: type\n    TimeRangeBoundary:\n      required:\n      - type\n      type: object\n      properties:\n        type:\n          type: string\n          description: \"Type of the time range boundary. Value must be from list:\\\n            \\ - `RelativeTimeRangeBoundary`, - `EpochTimeRangeBoundary`, - `Iso8601TimeRangeBoundary`,\\\n            \\ - `LiteralTimeRangeBoundary`.\"\n          example: RelativeTimeRangeBoundary\n      discriminator:\n        propertyName: type\n    Header:\n      required:\n      - name\n      - value\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the header field.\n        value:\n          type: string\n          description: Value of the header field.\n    ConnectionSubtype:\n      pattern: ^(Event|Incident)$\n      type: string\n      description: The subtype of the connection. Valid values are `Event` or `Incident`.\n      x-pattern-message: must be `Event` or `Incident`\n    ServiceNowConnection:\n      allOf:\n      - $ref: '#/components/schemas/Connection'\n      - required:\n        - url\n        - username\n        type: object\n        properties:\n          url:\n            type: string\n            description: URL for the ServiceNow connection.\n          username:\n            type: string\n            description: User name for the ServiceNow connection.\n    ServiceNowDefinition:\n      allOf:\n      - $ref: '#/components/schemas/ConnectionDefinition'\n      - required:\n        - password\n        - url\n        - username\n        type: object\n        properties:\n          url:\n            type: string\n            description: URL for the ServiceNow connection.\n            example: https://www.google.com\n          username:\n            type: string\n            description: User name for the ServiceNow connection.\n          password:\n            type: string\n            description: User password for the ServiceNow connection.\n    WebhookConnection:\n      allOf:\n      - $ref: '#/components/schemas/Connection'\n      - required:\n        - customHeaders\n        - defaultPayload\n        - headers\n        - url\n        - webhookType\n        type: object\n        properties:\n          url:\n            type: string\n            description: URL for the webhook connection.\n          headers:\n            type: array\n            description: List of access authorization headers.\n            items:\n              $ref: '#/components/schemas/Header'\n          customHeaders:\n            type: array\n            description: List of custom webhook headers.\n            items:\n              $ref: '#/components/schemas/Header'\n          defaultPayload:\n            type: string\n            description: Default payload of the webhook.\n          webhookType:\n            $ref: '#/components/schemas/ConnectionType'\n          connectionSubtype:\n            $ref: '#/components/schemas/ConnectionSubtype'\n          resolutionPayload:\n            type: string\n            description: Resolution payload of the webhook.\n          warnings:\n            type: array\n            description: Webhook endpoint warning for incorrect variable names and\n              syntax.\n            example: \"The following variables are not supported: NotSupportedVariable\"\n            items:\n              type: string\n    WebhookDefinition:\n      allOf:\n      - $ref: '#/components/schemas/ConnectionDefinition'\n      - required:\n        - defaultPayload\n        - url\n        type: object\n        properties:\n          url:\n            type: string\n            description: URL for the webhook connection.\n            example: https://www.google.com\n          headers:\n            maxItems: 7995\n            type: array\n            description: List of access authorization headers.\n            items:\n              $ref: '#/components/schemas/Header'\n            default: []\n          customHeaders:\n            maxItems: 5\n            type: array\n            description: List of custom webhook headers.\n            items:\n              $ref: '#/components/schemas/Header'\n            default: []\n          defaultPayload:\n            minLength: 1\n            type: string\n            description: Default payload of the webhook.\n          webhookType:\n            $ref: '#/components/schemas/ConnectionType'\n          connectionSubtype:\n            $ref: '#/components/schemas/ConnectionSubtype'\n          resolutionPayload:\n            type: string\n            description: Resolution payload of the webhook.\n    Layout:\n      required:\n      - layoutStructures\n      - layoutType\n      type: object\n      properties:\n        layoutType:\n          type: string\n          description: \"The type of panel layout on the Dashboard. For example, Grid,\\\n            \\ Tabs, or Hierarchical. Currently supports `Grid` only.\"\n          example: Grid\n        layoutStructures:\n          type: array\n          description: Layout structures for the panel childen.\n          items:\n            $ref: '#/components/schemas/LayoutStructure'\n      discriminator:\n        propertyName: layoutType\n    Panel:\n      required:\n      - key\n      - panelType\n      type: object\n      properties:\n        id:\n          type: string\n          description: Unique identifier for the panel.\n          example: 2F7D449E3D511066\n        key:\n          type: string\n          description: |\n            Key for the panel. Used to create searches for the queries in the panel and configure the layout of the panel in the dashboard.\n          example: panelca6280e4a75fca45\n        title:\n          type: string\n          description: Title of the panel.\n          example: This panel shows memory usage for your kubernetes pod.\n        visualSettings:\n          type: string\n          description: Visual settings of the panel.\n          example: \"{\\\\\\\"general\\\\\\\":{\\\\\\\"type\\\\\\\":\\\\\\\"column\\\\\\\"}\"\n        keepVisualSettingsConsistentWithParent:\n          type: boolean\n          description: \"Keeps the visual settings, like series colors, consistent\\\n            \\ with the settings of the parent panel.\"\n          default: true\n        panelType:\n          type: string\n          description: Type of panel.\n          example: SumoSearchPanel\n      discriminator:\n        propertyName: panelType\n    SumoSearchPanel:\n      allOf:\n      - $ref: '#/components/schemas/Panel'\n      - required:\n        - queries\n        type: object\n        properties:\n          queries:\n            type: array\n            description: Metrics and log queries of the panel.\n            items:\n              $ref: '#/components/schemas/Query'\n          description:\n            type: string\n            description: Description of the panel.\n            example: This panel gives an overview of CPU metrics for a pod\n          timeRange:\n            $ref: '#/components/schemas/ResolvableTimeRange'\n          coloringRules:\n            type: array\n            description: Rules to set the color of data.\n            items:\n              $ref: '#/components/schemas/ColoringRule'\n          linkedDashboards:\n            type: array\n            description: List of linked dashboards.\n            items:\n              $ref: '#/components/schemas/LinkedDashboard'\n        description: A panel that has logs and metrics search queries.\n    Query:\n      required:\n      - queryKey\n      - queryString\n      - queryType\n      type: object\n      properties:\n        queryString:\n          type: string\n          description: \"The metrics, traces or logs query.\"\n          example: _sourceCategory=cqsplitter metric=CPU_user | count by _sourceHost\n        queryType:\n          pattern: ^(Logs|Metrics|Traces|Spans)$\n          type: string\n          description: \"The type of the query, either `Metrics`, `Traces`, `Spans`\\\n            \\ or `Logs`.\"\n          example: Logs\n          x-pattern-message: \"Must be `Logs`, `Traces`, `Spans` or `Metrics`\"\n        queryKey:\n          type: string\n          description: |\n            The key for metric, traces or log queries. Used as an identifier for queries. It is displayed on the panel builder and used for display overrides and query toggling.\n          example: A\n        metricsQueryMode:\n          pattern: ^(Basic|Advanced|basic|advanced)$\n          type: string\n          description: |\n            The mode of the metrics query that the user was editing. Can be `Basic` or `Advanced`. Will ONLY be specified for metrics queries.\n          example: Basic\n          x-pattern-message: \"Must be `Basic`, or `Advanced`\"\n        metricsQueryData:\n          $ref: '#/components/schemas/MetricsQueryData'\n        tracesQueryData:\n          $ref: '#/components/schemas/TracesQueryData'\n        spansQueryData:\n          $ref: '#/components/schemas/SpansQueryData'\n        parseMode:\n          pattern: ^(Auto|Manual)$\n          type: string\n          description: |-\n            This field only applies for queryType of `Logs` but other query types may be supported in the future. Define the parsing mode to scan the JSON format log messages. Possible values are:\n              1. `Auto`\n              2. `Manual`\n            In AutoParse mode, the system automatically figures out fields to parse based on the search query. While in the Manual mode, no fields are parsed out automatically. For more information see [Dynamic Parsing](https://help.sumologic.com/?cid=0011).\n          example: Auto\n          default: Auto\n          x-pattern-message: Must be either `Auto` or `Manual`\n        timeSource:\n          pattern: ^(Message|Receipt)$\n          type: string\n          description: \"This field only applies for queryType of `Logs` but other\\\n            \\ query types may be supported in the future. Define the time source of\\\n            \\ this query. Possible values are `Message` and `Receipt`. `Message` will\\\n            \\ use the timeStamp on the message, while `Receipt` will use the timestamp\\\n            \\ it was received by Sumo.\"\n          example: Message\n          default: Message\n          x-pattern-message: Must be `Message or `Receipt`\n        transient:\n          type: boolean\n          description: \"This field only applies for queryType of `Metrics` but other\\\n            \\ query types may be supported in the future. Determines if the row should\\\n            \\ be returned in the response. Can be used in conjunction with a join,\\\n            \\ if only the result of the join is needed, and not the intermediate rows.\\\n            \\ Setting `transient` to `true`  wherever the intermediate results aren't\\\n            \\ required speeds up the computation and reduces the amount of data  transferred\\\n            \\ over the network.\"\n          default: false\n        outputCardinalityLimit:\n          maximum: 3000\n          minimum: 1\n          type: integer\n          description: \"This field only applies for queryType of `Metrics` but other\\\n            \\ query types may be supported in the future. Specifies the output cardinality\\\n            \\ limitations for the query, which is the maximum number of timeseries\\\n            \\ returned in the result.\"\n          format: int32\n          example: 1000\n          default: 1000\n    TextPanel:\n      allOf:\n      - $ref: '#/components/schemas/Panel'\n      - required:\n        - text\n        type: object\n        properties:\n          text:\n            type: string\n            description: Text to display in the panel.\n            example: Kubernetes pods\n        description: A panel that has text.\n    EventsOfInterestScatterPanel:\n      allOf:\n      - $ref: '#/components/schemas/Panel'\n    TracesListPanel:\n      allOf:\n      - $ref: '#/components/schemas/Panel'\n      - type: object\n        properties:\n          queries:\n            maxItems: 6\n            type: array\n            description: Traces queries of the panel.\n            example:\n              traceQueryExample:\n                value:\n                  queryKey: A\n                  queryString: \"\"\n                  queryType: Traces\n                  tracesQueryData:\n                    filters:\n                      type: FieldDescriptor\n            items:\n              $ref: '#/components/schemas/Query'\n          timeRange:\n            $ref: '#/components/schemas/ResolvableTimeRange'\n        description: A panel for traces list\n    ServiceMapPanel:\n      allOf:\n      - $ref: '#/components/schemas/Panel'\n      - type: object\n        properties:\n          application:\n            type: string\n            description: Filter services by the application custom tag.\n            example: sumologic\n          service:\n            type: string\n            description: Show only the specific service and its connections to other\n              services.\n            example: prada\n          showRemoteServices:\n            type: boolean\n            description: \"Show remote services, like databases or external calls,\\\n              \\ automatically detected in client traffic.\"\n            example: true\n        description: A panel for service map.\n    ColoringRule:\n      required:\n      - coloringThresholds\n      - multipleSeriesAggregateFunction\n      - scope\n      - singleSeriesAggregateFunction\n      type: object\n      properties:\n        scope:\n          type: string\n          description: Regex string to match queries to apply coloring to.\n          example: CPU_*\n        singleSeriesAggregateFunction:\n          type: string\n          description: Function to aggregate one series into one single value.\n          example: Average\n        multipleSeriesAggregateFunction:\n          type: string\n          description: Function to aggregate the aggregate values of multiple time\n            series into one single value.\n          example: Average\n        colorThresholds:\n          type: array\n          description: Color thresholds.\n          items:\n            $ref: '#/components/schemas/ColoringThreshold'\n    Grid:\n      allOf:\n      - $ref: '#/components/schemas/Layout'\n    LayoutStructure:\n      required:\n      - key\n      - structure\n      type: object\n      properties:\n        key:\n          type: string\n          description: The identifier of the panel that this structure applies to.\n          example: panelPANE-3DC454FD977E2A46\n        structure:\n          type: string\n          description: The structure of a panel.\n          example: \"{\\\\\\\"height\\\\\\\":5,\\\\\\\"width\\\\\\\":9,\\\\\\\"x\\\\\\\":0,\\\\\\\"y\\\\\\\":0}\"\n    ColoringThreshold:\n      required:\n      - color\n      type: object\n      properties:\n        color:\n          type: string\n          description: Color for the threshold.\n          example: FFFFFF\n        min:\n          type: number\n          description: Absolute inclusive threshold to color by.\n          format: double\n          example: 0\n        max:\n          type: number\n          description: Absolute exclusive threshold to color by.\n          format: double\n          example: 50\n    MetricsQueryData:\n      required:\n      - filters\n      - metric\n      type: object\n      properties:\n        metric:\n          type: string\n          description: The metric of the query.\n          example: CPU_user\n        aggregationType:\n          pattern: ^(Count|Minimum|Maximum|Sum|Average|None)$|^$\n          type: string\n          description: \"The type of aggregation. Can be `Count`, `Minimum`, `Maximum`,\\\n            \\ `Sum`, `Average` or `None`.\"\n          example: Count\n          x-pattern-message: \"Must be `Count`, `Minimum`, `Maximum`, `Sum`, `Average`\\\n            \\ or `None`\"\n        groupBy:\n          type: string\n          description: The field to group the results by.\n          example: _sourceHost\n        filters:\n          type: array\n          description: A list of filters for the metrics query.\n          items:\n            $ref: '#/components/schemas/MetricsFilter'\n        operators:\n          type: array\n          description: A list of operator data for the metrics query.\n          items:\n            $ref: '#/components/schemas/OperatorData'\n      description: The data format describing a basic metrics query.\n      example:\n        metric: CPU_user\n        aggregationType: count\n        groupBy: _sourceHost\n        filters:\n        - key: _sourceCategory\n          value: kubernetes\n        - key: _sourceHost\n          value: dep-kubernetes-1\n        operators:\n          operatorName: avg\n          parameters:\n          - key: aggregator\n            value: max\n          - key: operation\n            value: \"\"\n          - key: value\n            value: 50\n    SpansQueryData:\n      required:\n      - filters\n      - groupBy\n      - limit\n      - visualizations\n      type: object\n      properties:\n        filters:\n          type: array\n          description: A list of filters for the spans query.\n          items:\n            $ref: '#/components/schemas/SpansFilter'\n        visualizations:\n          type: array\n          description: A list of used visualization methods for the spans query.\n          items:\n            $ref: '#/components/schemas/SpansVisualization'\n        groupBy:\n          type: array\n          description: A list of group-by clauses for the spans query.\n          items:\n            $ref: '#/components/schemas/SpansGroupBy'\n        limit:\n          type: array\n          description: A list of limits that will be applied to the spans query.\n          items:\n            $ref: '#/components/schemas/SpansLimitItem'\n      description: The data format describing a basic spans query.\n    SpansCountVisualization:\n      allOf:\n      - $ref: '#/components/schemas/SpansVisualization'\n      - type: object\n        properties:\n          distinctBy:\n            type: string\n            description: A field by which the spans need to be counted.\n            example: service\n        description: |\n          Represents the visualization type where the total number of all spans is counted or where the spans are counted by a specific field.\n    SpansCalculationVisualization:\n      allOf:\n      - $ref: '#/components/schemas/SpansVisualization'\n      - required:\n        - aggregator\n        - field\n        type: object\n        properties:\n          field:\n            type: string\n            description: A field by which the spans are aggregated.\n            example: duration\n          aggregator:\n            $ref: '#/components/schemas/SpanCalculationAggregator'\n        description: |\n          Represents the visualization type where a specific aggregation by a particular field is  applied to all spans / all grouped spans.\n    SpansFilterStandaloneKey:\n      allOf:\n      - $ref: '#/components/schemas/SpansFilter'\n      - type: object\n        description: |\n          A representation of a span filter where only a single filtering key is provided.  The given value is then looked up in all span data.\n    SpansFilterKeyValuePair:\n      allOf:\n      - $ref: '#/components/schemas/SpansFilter'\n      - required:\n        - fieldValue\n        - operator\n        type: object\n        properties:\n          operator:\n            pattern: ^(\u003c|\u003c=|\u003e|\u003e=|=|!=)$\n            type: string\n            description: A symbol that indicates an operation to be performed between\n              a `fieldName` and `fieldValue`.\n            example: \u003c\n            x-pattern-message: \"Must be `\u003c`, `\u003c=`, `\u003e`, `\u003e=`, `=` or `!=`\"\n          fieldValue:\n            type: string\n            description: The second argument of the operation applied to a `fieldName`.\n            example: some_service\n        description: |\n          A representation of a span filter where both the field name and field value are provided, e.g. http.status_code \u003e 500.\n    SpansTimeGroupBy:\n      allOf:\n      - $ref: '#/components/schemas/SpansGroupBy'\n      - required:\n        - fieldValue\n        type: object\n        properties:\n          fieldValue:\n            pattern: \"^[0-9]+(w|d|h|m|s)$\"\n            type: string\n            description: |\n              A fixed interval grouping in the following format \u003c#\u003e\u003ctime_period\u003e,  supported \u003ctime_period\u003e values are weeks (w), days (d), hours (h), minutes (m), and seconds (s).\n            example: 5m\n        description: |\n          A representation of a group-by clause where results are bucketed based on a fixed interval are  created, e.g. five-minute buckets.\n    SpansFieldGroupBy:\n      allOf:\n      - $ref: '#/components/schemas/SpansGroupBy'\n      - required:\n        - fieldName\n        type: object\n        properties:\n          fieldName:\n            type: string\n            description: A name of the field to group by.\n            example: http.status_code\n        description: |\n          A representation of a group-by clause where results are bucketed based on a grouping by a specific field.\n    SpanCalculationAggregator:\n      required:\n      - key\n      type: object\n      properties:\n        key:\n          pattern: ^(sum|avg|max|min|pct)$\n          type: string\n          description: A specific aggregation type applied to spans.\n          example: sum\n          x-pattern-message: \"Must be `sum`, `avg`, `max`, `min` or `pct`\"\n      discriminator:\n        propertyName: key\n        mapping:\n          sum: '#/components/schemas/SpanCalculationSumAggregator'\n          avg: '#/components/schemas/SpanCalculationAvgAggregator'\n          max: '#/components/schemas/SpanCalculationMaxAggregator'\n          min: '#/components/schemas/SpanCalculationMinAggregator'\n          pct: '#/components/schemas/SpanCalculationPctAggregator'\n    SpanCalculationSumAggregator:\n      allOf:\n      - $ref: '#/components/schemas/SpanCalculationAggregator'\n      - type: object\n    SpanCalculationAvgAggregator:\n      allOf:\n      - $ref: '#/components/schemas/SpanCalculationAggregator'\n      - type: object\n    SpanCalculationMaxAggregator:\n      allOf:\n      - $ref: '#/components/schemas/SpanCalculationAggregator'\n      - type: object\n    SpanCalculationMinAggregator:\n      allOf:\n      - $ref: '#/components/schemas/SpanCalculationAggregator'\n      - type: object\n    SpanCalculationPctAggregator:\n      allOf:\n      - $ref: '#/components/schemas/SpanCalculationAggregator'\n      - required:\n        - percentile\n        type: object\n        properties:\n          percentile:\n            type: number\n            description: The specified percentile of a given field.\n            format: double\n            example: 95\n    MetricsFilter:\n      required:\n      - value\n      type: object\n      properties:\n        key:\n          type: string\n          description: The key of the metrics filter.\n          example: _sourceCategory\n        value:\n          type: string\n          description: The value of the metrics filter.\n          example: kubernetes\n        negation:\n          type: boolean\n          description: Whether or not the metrics filter is negated.\n          example: false\n      description: The filter for metrics query.\n      example:\n        key: _sourceCategory\n        value: cqmerger\n        negation: false\n    VariablesValuesData:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              type: string\n          description: Data for variable values.\n          default: {}\n        richData:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/VariableValuesData'\n          description: \"A rich form of data for the variable search, including variable\\\n            \\ values, status and variable type. This field is different from `data`\\\n            \\ in that it includes an object instead of list as the value in the map.\\\n            \\ The `data` field is kept for backwards compatibility, please use `richData`\\\n            \\ for all usages going forward.\"\n    GenerateReportRequest:\n      required:\n      - action\n      - exportFormat\n      - template\n      - timezone\n      type: object\n      properties:\n        action:\n          $ref: '#/components/schemas/ReportAction'\n        exportFormat:\n          pattern: ^(Pdf|Png)$\n          type: string\n          description: File format of the report. Can be `Pdf` or `Png`. `Pdf` is\n            portable document format. `Png` is portable graphics image format.\n          example: Pdf\n          x-pattern-message: \"should be one of the following: 'Pdf', 'Png'\"\n        timezone:\n          type: string\n          description: \"Time zone for the query time ranges. Follow the format in\\\n            \\ the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).\"\n          example: America/Los_Angeles\n        template:\n          $ref: '#/components/schemas/Template'\n    ReportAction:\n      required:\n      - actionType\n      type: object\n      properties:\n        actionType:\n          pattern: ^DirectDownloadReportAction$\n          type: string\n          description: Type of action.\n          example: DirectDownloadReportAction\n          x-pattern-message: should be 'DirectDownloadReportAction'\n      description: The base class of all report action types. `DirectDownloadReportAction`\n        downloads dashboard from browser. New action types may be supported in the\n        future.\n      discriminator:\n        propertyName: actionType\n    DirectDownloadReportAction:\n      allOf:\n      - $ref: '#/components/schemas/ReportAction'\n      - type: object\n        description: Generate a direct download report action.\n    Template:\n      required:\n      - templateType\n      type: object\n      properties:\n        templateType:\n          pattern: ^(DashboardTemplate|DashboardReportModeTemplate)$\n          type: string\n          description: The type of template. `DashboardTemplate` provides a snapshot\n            view of the exported dashboard. `DashboardReportModeTemplate` provides\n            a printer-friendly view of the exported dashboard. New templates may be\n            supported in the future.\n          example: DashboardTemplate\n          x-pattern-message: \"Must be `DashboardTemplate`, or `DashboardReportModeTemplate`\"\n      discriminator:\n        propertyName: templateType\n    DashboardTemplate:\n      allOf:\n      - $ref: '#/components/schemas/Template'\n      - required:\n        - id\n        type: object\n        properties:\n          id:\n            type: string\n            description: Id of the dashboard.\n            example: B23OjNs5ZCyn5VdMwOBoLo3PjgRnJSAlNTKEDAcpuDG2CIgRe9KFXMofm2H2\n          panelToSessionIdMap:\n            type: object\n            additionalProperties:\n              type: string\n            description: |\n              A map of panel to session id. The session id will be used to fetch data of the panel for the report. If not specified, a new session id will be created for the panel.\n            example:\n              \"1\": 64\n              \"2\": 128\n              \"3\": 192\n          timeRange:\n            $ref: '#/components/schemas/ResolvableTimeRange'\n          variableValues:\n            $ref: '#/components/schemas/VariablesValuesData'\n        description: Generate the report from a dashboard template.\n    DashboardReportModeTemplate:\n      allOf:\n      - $ref: '#/components/schemas/DashboardTemplate'\n      - type: object\n        description: Generate the report from a dashboard template in report mode.\n    DashboardSearchSessionIds:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: object\n          additionalProperties:\n            type: string\n          description: Map of search keys to session ids.\n          default: {}\n        errors:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/ErrorResponse'\n          description: Error description for the session keys that failed validation.\n    Variable:\n      required:\n      - name\n      - sourceDefinition\n      type: object\n      properties:\n        id:\n          type: string\n          description: Unique identifier for the variable.\n        name:\n          maxLength: 256\n          type: string\n          description: Name of the variable. The variable name is case-insensitive.\n          example: _sourceHost\n        displayName:\n          maxLength: 256\n          type: string\n          description: |\n            Display name of the variable shown in the UI. If this field is empty, the name field will be used.\n            The display name is case-insensitive. Only numbers, and underscores are allowed in the variable name.\n            This field is not yet supported by the UI.\n          example: Source Host\n        defaultValue:\n          type: string\n          description: Default value of the variable.\n          example: default_value\n        sourceDefinition:\n          $ref: '#/components/schemas/VariableSourceDefinition'\n        allowMultiSelect:\n          type: boolean\n          description: Allow multiple selections in the values dropdown.\n          example: false\n          default: false\n        includeAllOption:\n          type: boolean\n          description: Include an \"All\" option at the top of the variable's values\n            dropdown.\n          example: true\n          default: true\n        hideFromUI:\n          type: boolean\n          description: Hide the variable in the dashboard UI.\n          example: false\n          default: false\n        valueType:\n          pattern: ^(String|Any)$\n          type: string\n          description: \"The type of value of the variable. Allowed values are `String`\\\n            \\ and Any`. `String` considers as a single phrase and will wrap in double-quotes,\\\n            \\ `Any` is all characters.\"\n          example: Any\n          default: Any\n          x-pattern-message: Only `String` and `Any` are allowed.\n    VariableSourceDefinition:\n      required:\n      - variableSourceType\n      type: object\n      properties:\n        variableSourceType:\n          type: string\n          description: Source type of the variable values.\n          example: MetadataVariableSourceDefinition\n      discriminator:\n        propertyName: variableSourceType\n    MetadataVariableSourceDefinition:\n      allOf:\n      - $ref: '#/components/schemas/VariableSourceDefinition'\n      - required:\n        - filter\n        - key\n        type: object\n        properties:\n          filter:\n            maxLength: 65536\n            type: string\n            description: A metrics query to filter the metadata catalog.\n            example: _sourceHost=prod-* metric=CPU_Idle\n          key:\n            type: string\n            description: Return the values for this given key.\n            example: _sourceCategory\n        description: Variable with values that are powered by a metadata search.\n    CsvVariableSourceDefinition:\n      allOf:\n      - $ref: '#/components/schemas/VariableSourceDefinition'\n      - required:\n        - values\n        type: object\n        properties:\n          values:\n            maxLength: 65536\n            type: string\n            description: Comma separated values for the variable.\n            example: \"host1, host2\"\n        description: Variable with values that are powered by a csv file.\n    LogQueryVariableSourceDefinition:\n      allOf:\n      - $ref: '#/components/schemas/VariableSourceDefinition'\n      - required:\n        - field\n        - query\n        type: object\n        properties:\n          query:\n            maxLength: 65536\n            type: string\n            description: A log query.\n            example: \"_sourceCategory=forge error | parse \\\"[pod=*]\\\" podid | count\\\n              \\ by podid\"\n          field:\n            maxLength: 65536\n            type: string\n            description: A field in log query to populate the variable values.\n            example: podid\n        description: Variable with values that are powered by a log query.\n    VariableValuesLogQueryRequest:\n      required:\n      - field\n      - query\n      type: object\n      properties:\n        query:\n          type: string\n          description: The original log query of the variable.\n          example: _sourceCategory=forge | count by _sourceHost\n        field:\n          type: string\n          description: A field in log query to populate the variable values.\n          example: _sourceHost\n        variablesValues:\n          $ref: '#/components/schemas/VariablesValuesData'\n      description: The request to get a log query to populate variable values.\n    TopologySearchLabel:\n      required:\n      - key\n      - value\n      type: object\n      properties:\n        key:\n          type: string\n          description: Key of a topology label to search for.\n        value:\n          type: string\n          description: Value of a topology label to search for.\n        isRequired:\n          type: boolean\n          description: |\n            Whether the content item is required to contain this label in order to be matched. If true, content items without this label will not be matched. If false, content items without this label will be matched.\n      description: |\n        Topology label to search for. Each label has a key and a list of values. If a value is `*`, it means we want to match for all values of the label's key.\n      example:\n        key: pod\n        value: '*'\n        isRequired: true\n    AlertSearchNotificationSyncDefinition:\n      allOf:\n      - $ref: '#/components/schemas/ScheduleNotificationSyncDefinition'\n      - required:\n        - sourceId\n        type: object\n        properties:\n          sourceId:\n            type: string\n            description: A String value to uniquely identify a Collector's Source.\n    EmailSearchNotificationSyncDefinition:\n      allOf:\n      - $ref: '#/components/schemas/ScheduleNotificationSyncDefinition'\n      - required:\n        - toList\n        type: object\n        properties:\n          toList:\n            type: array\n            description: A list of email recipients.\n            items:\n              type: string\n          subjectTemplate:\n            type: string\n            description: \"If the notification is scheduled with a threshold, the default\\\n              \\ subject template will be \\\"Search Alert: {{AlertCondition}} results\\\n              \\ found for {{SearchName}}\\\". For email notifications without a threshold,\\\n              \\ the default subject template is \\\"Search Results: {{SearchName}}\\\"\\\n              .\"\n          includeQuery:\n            type: boolean\n            description: A boolean value to indicate if the search query should be\n              included in the notification email.\n            default: true\n          includeResultSet:\n            type: boolean\n            description: A boolean value to indicate if the search result set should\n              be included in the notification email.\n            default: true\n          includeHistogram:\n            type: boolean\n            description: A boolean value to indicate if the search result histogram\n              should be included in the notification email.\n            default: true\n          includeCsvAttachment:\n            type: boolean\n            description: A boolean value to indicate if the search results should\n              be included in the notification email as a CSV attachment.\n            default: false\n    FolderSyncDefinition:\n      allOf:\n      - $ref: '#/components/schemas/ContentSyncDefinition'\n      - required:\n        - children\n        type: object\n        properties:\n          description:\n            type: string\n            description: An optional description for the folder.\n          children:\n            type: array\n            description: \"The items in the folder, a list of Dashboard and/or Folder\\\n              \\ items.\"\n            items:\n              $ref: '#/components/schemas/ContentSyncDefinition'\n    QueryParameterSyncDefinition:\n      required:\n      - autoComplete\n      - dataType\n      - description\n      - label\n      - name\n      - value\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the parameter.\n        label:\n          type: string\n          description: The label of the parameter.\n        description:\n          type: string\n          description: A description of the parameter.\n        dataType:\n          type: string\n          description: |-\n            The data type of the parameter. Supported values are:\n              1. `NUMBER`\n              2. `STRING`\n              3. `QUERY_FRAGMENT`\n              4. `SEARCH_KEYWORD`\n        value:\n          type: string\n          description: A value for the parameter. Should be compatible with the type\n            set in dataType field.\n        autoComplete:\n          $ref: '#/components/schemas/ParameterAutoCompleteSyncDefinition'\n    LogSearchQueryParameterSyncDefinition:\n      type: object\n      allOf:\n      - $ref: '#/components/schemas/LogSearchQueryParameterSyncDefinitionBase'\n      - required:\n        - autoComplete\n        - dataType\n        - name\n        - value\n        type: object\n        properties:\n          autoComplete:\n            $ref: '#/components/schemas/LogSearchParameterAutoCompleteSyncDefinition'\n    LogSearchParameterAutoCompleteSyncDefinition:\n      required:\n      - autoCompleteType\n      type: object\n      properties:\n        autoCompleteType:\n          type: string\n          description: The autocomplete parameter type.\n      discriminator:\n        propertyName: autoCompleteType\n        mapping:\n          None: '#/components/schemas/NoneAutoCompleteSyncDefinition'\n          TextEntries: '#/components/schemas/TextEntriesAutoCompleteSyncDefinition'\n          LabelValuePairs: '#/components/schemas/LabelValuePairsAutoCompleteSyncDefinition'\n          ValueOnlyLookup: '#/components/schemas/ValueOnlyLookupAutoCompleteSyncDefinition'\n          LabelValueLookup: '#/components/schemas/LabelValueLookupAutoCompleteSyncDefinition'\n    NoneAutoCompleteSyncDefinition:\n      allOf:\n      - $ref: '#/components/schemas/LogSearchParameterAutoCompleteSyncDefinition'\n      - type: object\n    TextEntriesAutoCompleteSyncDefinition:\n      allOf:\n      - $ref: '#/components/schemas/LogSearchParameterAutoCompleteSyncDefinition'\n      - required:\n        - autoCompleteKey\n        type: object\n        properties:\n          autoCompleteKey:\n            type: string\n            description: The autocomplete key to be used to fetch autocomplete values.\n            example: Ephemeral-3644138589235809747-1583470806220-parameter\n    LabelValuePairsAutoCompleteSyncDefinition:\n      allOf:\n      - $ref: '#/components/schemas/LogSearchParameterAutoCompleteSyncDefinition'\n      - required:\n        - autoCompleteKey\n        type: object\n        properties:\n          autoCompleteKey:\n            type: string\n            description: The autocomplete key to be used to fetch autocomplete values.\n            example: Ephemeral-3644138589235809747-1583470806220-parameter\n    ValueOnlyLookupAutoCompleteSyncDefinition:\n      allOf:\n      - $ref: '#/components/schemas/LogSearchParameterAutoCompleteSyncDefinition'\n      - required:\n        - autoCompleteKey\n        - lookupFileName\n        - lookupValueColumn\n        type: object\n        properties:\n          autoCompleteKey:\n            type: string\n            description: The autocomplete key to be used to fetch autocomplete values.\n            example: Ephemeral-3644138589235809747-1583470806220-parameter\n          lookupFileName:\n            type: string\n            description: The lookup file to use as a source for autocomplete values.\n          lookupValueColumn:\n            type: string\n            description: The column from the lookup file to fill the actual value\n              when a particular label is selected.\n    LabelValueLookupAutoCompleteSyncDefinition:\n      allOf:\n      - $ref: '#/components/schemas/LogSearchParameterAutoCompleteSyncDefinition'\n      - required:\n        - autoCompleteKey\n        - lookupFileName\n        - lookupLabelColumn\n        - lookupValueColumn\n        type: object\n        properties:\n          autoCompleteKey:\n            type: string\n            description: The autocomplete key to be used to fetch autocomplete values.\n            example: Ephemeral-3644138589235809747-1583470806220-parameter\n          lookupFileName:\n            type: string\n            description: The lookup file to use as a source for autocomplete values.\n          lookupLabelColumn:\n            type: string\n            description: The column from the lookup file to use for autocomplete labels.\n          lookupValueColumn:\n            type: string\n            description: The column from the lookup file to fill the actual value\n              when a particular label is selected.\n    DashboardSyncDefinition:\n      allOf:\n      - $ref: '#/components/schemas/ContentSyncDefinition'\n      - required:\n        - description\n        - detailLevel\n        - filters\n        - panels\n        - properties\n        type: object\n        properties:\n          description:\n            type: string\n            description: A description of the dashboard.\n          detailLevel:\n            type: integer\n            description: |-\n              Supported values are:\n                - `1` for small\n                - `2` for medium\n                - `3` for large\n          properties:\n            type: string\n            description: Visual settings for the panel.\n          panels:\n            type: array\n            description: The panels of the dashboard. _Dashboard links are not supported._\n            items:\n              $ref: '#/components/schemas/ReportPanelSyncDefinition'\n          filters:\n            type: array\n            description: The filters for the dashboard. Filters allow you to control\n              the amount of information displayed in your dashboards.\n            items:\n              $ref: '#/components/schemas/ReportFilterSyncDefinition'\n    MewboardSyncDefinition:\n      allOf:\n      - $ref: '#/components/schemas/ContentSyncDefinition'\n      - required:\n        - title\n        type: object\n        properties:\n          description:\n            maxLength: 65546\n            type: string\n            description: A description of the dashboard.\n            example: \"A view of pods, namespaces and nodes of your cluster.\"\n          title:\n            maxLength: 255\n            minLength: 1\n            type: string\n            description: The title of the dashboard.\n            example: Kubernetes Dashboard\n          theme:\n            pattern: ^(light|dark|Light|Dark)$\n            type: string\n            description: Theme for the dashboard. Must be `light` or `dark`.\n            example: light\n            default: light\n            x-pattern-message: \"Must be `Light`, or `Dark`\"\n          topologyLabelMap:\n            $ref: '#/components/schemas/TopologyLabelMap'\n          refreshInterval:\n            type: integer\n            description: Interval of time (in seconds) to automatically refresh the\n              dashboard. A value of 0 means we never automatically refresh the dashboard.\n            format: int32\n            example: 5\n          timeRange:\n            $ref: '#/components/schemas/ResolvableTimeRange'\n          layout:\n            $ref: '#/components/schemas/Layout'\n          panels:\n            type: array\n            description: Children panels that the container panel contains.\n            items:\n              $ref: '#/components/schemas/Panel'\n          variables:\n            type: array\n            description: Variables that could be applied to the panel's children.\n            items:\n              $ref: '#/components/schemas/Variable'\n          coloringRules:\n            type: array\n            description: Coloring rules to color the panel/data with.\n            items:\n              $ref: '#/components/schemas/ColoringRule'\n    DashboardV2SyncDefinition:\n      allOf:\n      - $ref: '#/components/schemas/ContentSyncDefinition'\n      - required:\n        - title\n        type: object\n        properties:\n          description:\n            maxLength: 65546\n            type: string\n            description: A description of the dashboard.\n            example: \"A view of pods, namespaces and nodes of your cluster.\"\n          title:\n            maxLength: 255\n            minLength: 1\n            type: string\n            description: The title of the dashboard.\n            example: Kubernetes Dashboard\n          theme:\n            pattern: ^(light|dark|Light|Dark)$\n            type: string\n            description: Theme for the dashboard. Must be `light` or `dark`.\n            example: light\n            default: light\n            x-pattern-message: \"Must be `Light`, or `Dark`\"\n          topologyLabelMap:\n            $ref: '#/components/schemas/TopologyLabelMap'\n          refreshInterval:\n            type: integer\n            description: Interval of time (in seconds) to automatically refresh the\n              dashboard. A value of 0 means we never automatically refresh the dashboard.\n            format: int32\n            example: 5\n          timeRange:\n            $ref: '#/components/schemas/ResolvableTimeRange'\n          layout:\n            $ref: '#/components/schemas/Layout'\n          panels:\n            type: array\n            description: Children panels that the container panel contains.\n            items:\n              $ref: '#/components/schemas/Panel'\n          variables:\n            type: array\n            description: Variables that could be applied to the panel's children.\n            items:\n              $ref: '#/components/schemas/Variable'\n          coloringRules:\n            type: array\n            description: Coloring rules to color the panel/data with.\n            items:\n              $ref: '#/components/schemas/ColoringRule'\n    NotificationThresholdSyncDefinition:\n      required:\n      - count\n      - operator\n      - thresholdType\n      type: object\n      properties:\n        thresholdType:\n          type: string\n          description: |-\n            Threshold type. Possible values are:\n             1. `message`\n             2. `group`\n\n            Use `group` as threshold type if the search query is of aggregate type. For non-aggregate queries, set it to `message`.\n        operator:\n          type: string\n          description: |-\n            Criterion to be applied when comparing actual result count with expected count. Possible values are:\n             1. `eq`\n             2. `gt`\n             3. `ge`\n             4. `lt`\n             5. `le`\n        count:\n          type: integer\n          description: Expected result count.\n    ReportFilterSyncDefinition:\n      required:\n      - fieldName\n      - filterType\n      - label\n      - panelIds\n      - properties\n      type: object\n      properties:\n        fieldName:\n          type: string\n          description: \"The name af the field being filtered on, as listed in PanelField.\"\n        label:\n          type: string\n          description: \"The name of the field being filtered on, as displayed to the\\\n            \\ user.\"\n        defaultValue:\n          type: string\n          description: The default value of the parameter.\n        filterType:\n          type: string\n          description: Type of filter. Can only be `numeric` or `textbox`.\n        properties:\n          type: string\n          description: Visual settings for the panel.\n        panelIds:\n          type: array\n          description: A list of panel identifiers that the filter applies to.\n          items:\n            type: string\n    ReportPanelSyncDefinition:\n      required:\n      - detailLevel\n      - height\n      - id\n      - metricsQueries\n      - name\n      - properties\n      - queryParameters\n      - queryString\n      - timeRange\n      - viewerType\n      - width\n      - x\n      - \"y\"\n      type: object\n      properties:\n        name:\n          type: string\n          description: The title of the panel.\n        viewerType:\n          type: string\n          description: |-\n            Type of [area chart](https://help.sumologic.com/Dashboards-and-Alerts/Dashboards/Chart-Panel-Types). Supported values are:\n              1. `table` for Table\n              2. `bar` for Bar Chart\n              3. `column` for Column Chart\n              4. `line` for Line Chart\n              5. `area` for Area Chart\n              6. `pie` for Pie Chart\n              7. `svv` for Single Value Viewer\n              8. `title` for Title Panel\n              9. `text` for Text Panel\n\n            Values 1-7 are used for Data Panels.\n        detailLevel:\n          type: integer\n          description: |-\n            Supported values are:\n              - `1` for small\n              - `2` for medium\n              - `3` for large\n        queryString:\n          type: string\n          description: \"The query to run, for panels associated to log searches.\"\n        metricsQueries:\n          type: array\n          description: \"The query or queries to run, for panels associated to metrics\\\n            \\ searches.\"\n          items:\n            $ref: '#/components/schemas/MetricsQuerySyncDefinition'\n        timeRange:\n          $ref: '#/components/schemas/ResolvableTimeRange'\n        x:\n          type: integer\n          description: The horizontal position of the panel. A sumo screen is divided\n            into 24 columns. The value for x can be any integer from 0 to 24.\n        \"y\":\n          type: integer\n          description: The vertical position of the panel. A sumo screen is divided\n            into 24 rows. The value for y can be any integer from 0 to 24.\n        width:\n          type: integer\n          description: The width of the panel.\n        height:\n          type: integer\n          description: The height of the panel.\n        properties:\n          type: string\n          description: Visual settings for the panel.\n        id:\n          type: string\n          description: A string identifier that you can use to refer to the panel\n            in filters.panelIds.\n        desiredQuantizationInSecs:\n          type: integer\n          description: The quantization interval aligns your time series data to common\n            intervals on the time axis (for example every one minute) to optimize\n            the visualization and performance.\n        queryParameters:\n          type: array\n          description: The parameters for parameterized searches.\n          items:\n            $ref: '#/components/schemas/QueryParameterSyncDefinition'\n        autoParsingInfo:\n          $ref: '#/components/schemas/ReportAutoParsingInfo'\n    SavedSearchWithScheduleSyncDefinition:\n      allOf:\n      - $ref: '#/components/schemas/ContentSyncDefinition'\n      - required:\n        - description\n        - search\n        type: object\n        properties:\n          search:\n            $ref: '#/components/schemas/SavedSearchSyncDefinition'\n          searchSchedule:\n            $ref: '#/components/schemas/SearchScheduleSyncDefinition'\n          description:\n            type: string\n            description: Description of the saved search.\n    SavedSearchSyncDefinition:\n      required:\n      - byReceiptTime\n      - defaultTimeRange\n      - queryParameters\n      - queryText\n      type: object\n      properties:\n        queryText:\n          type: string\n          description: The text of a Sumo Logic query.\n        defaultTimeRange:\n          type: string\n          description: |-\n            Default time range for the search. Possible types of time ranges are:\n              - relative time range: e.g. \"-1d -12h\" represents a time range from one day ago to 12 hours ago.\n              - absolute time range: e.g. \"01-04-2017 20:32:00 to 01-04-2017 20:35:00\" represents a time range\n                from April 1st, 2017 at 8:32 PM until April 1st, 2017 at 8:35 PM.\n        byReceiptTime:\n          type: boolean\n          description: \"Set it to true to run the search using receipt time. By default,\\\n            \\ searches do not run by receipt time.\"\n          default: false\n        viewName:\n          type: string\n          description: The name of the Scheduled View that has indexed the data you\n            want to search.\n        viewStartTime:\n          type: string\n          description: Start timestamp of the Scheduled View in UTC format.\n          format: date-time\n        queryParameters:\n          type: array\n          description: An array of search query parameter objects.\n          items:\n            $ref: '#/components/schemas/QueryParameterSyncDefinition'\n        parsingMode:\n          type: string\n          description: |-\n            Define the parsing mode to scan the JSON format log messages. Possible values are:\n              1. `AutoParse`\n              2. `Manual`\n            In AutoParse mode, the system automatically figures out fields to parse based on the search query. While in the Manual mode, no fields are parsed out automatically. For more information see [Dynamic Parsing](https://help.sumologic.com/?cid=0011).\n          example: AutoParse\n          default: Manual\n    SaveToViewNotificationSyncDefinition:\n      allOf:\n      - $ref: '#/components/schemas/ScheduleNotificationSyncDefinition'\n      - required:\n        - viewName\n        type: object\n        properties:\n          viewName:\n            type: string\n            description: Name of the View to save the notification to.\n    SaveToLookupNotificationSyncDefinition:\n      allOf:\n      - $ref: '#/components/schemas/ScheduleNotificationSyncDefinition'\n      - required:\n        - isLookupMergeOperation\n        - lookupFilePath\n        type: object\n        properties:\n          lookupFilePath:\n            type: string\n            description: The path of the lookup table that will store the results\n              of the scheduled search.\n            example: /personal/folder/testLookupTable\n          isLookupMergeOperation:\n            type: boolean\n            description: This indicates whether the file contents will be merged with\n              existing data in the lookup table or not. If this is true then data\n              with the same primary keys will be updated while the rest of the rows\n              will be appended.\n            example: false\n    ScheduleNotificationSyncDefinition:\n      required:\n      - taskType\n      type: object\n      properties:\n        taskType:\n          type: string\n          description: Delivery channel for notifications.\n      discriminator:\n        propertyName: taskType\n    ScheduleSearchParameterSyncDefinition:\n      required:\n      - name\n      - value\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of scheduled search parameter.\n        value:\n          type: string\n          description: Value of scheduled search parameter.\n    SearchScheduleSyncDefinition:\n      required:\n      - notification\n      - parameters\n      - parseableTimeRange\n      - scheduleType\n      - timeZone\n      type: object\n      properties:\n        cronExpression:\n          type: string\n          description: \"Cron-like expression specifying the search's schedule. Field\\\n            \\ scheduleType must be set to \\\"Custom\\\", otherwise, scheduleType takes\\\n            \\ precedence over cronExpression.\"\n          example: 0 0/15 * * * ? *\n        displayableTimeRange:\n          type: string\n          description: \"A human-friendly text describing the query time range. For\\\n            \\ e.g. \\\"-2h\\\", \\\"last three days\\\", \\\"team default time\\\"\"\n          example: -2h\n        parseableTimeRange:\n          $ref: '#/components/schemas/ResolvableTimeRange'\n        timeZone:\n          type: string\n          description: \"Time zone identifier for time specification. Either an abbreviation\\\n            \\ such as \\\"PST\\\", a full name such as \\\"America/Los_Angeles\\\", or a custom\\\n            \\ ID such as \\\"GMT-8:00\\\". Note that the support of abbreviations is for\\\n            \\ JDK 1.1.x compatibility only and full names should be used.\"\n        threshold:\n          $ref: '#/components/schemas/NotificationThresholdSyncDefinition'\n        notification:\n          $ref: '#/components/schemas/ScheduleNotificationSyncDefinition'\n        scheduleType:\n          type: string\n          description: |-\n            Run schedule of the scheduled search. Set to \"Custom\" to specify the schedule with a CRON expression. Possible schedule types are:\n              - `RealTime`\n              - `15Minutes`\n              - `1Hour`\n              - `2Hours`\n              - `4Hours`\n              - `6Hours`\n              - `8Hours`\n              - `12Hours`\n              - `1Day`\n              - `1Week`\n              - `Custom`\n        muteErrorEmails:\n          type: boolean\n          description: \"If enabled, emails are not sent out in case of errors with\\\n            \\ the search.\"\n        parameters:\n          type: array\n          description: A list of scheduled search parameters.\n          items:\n            $ref: '#/components/schemas/ScheduleSearchParameterSyncDefinition'\n    ServiceNowSearchNotificationSyncDefinition:\n      allOf:\n      - $ref: '#/components/schemas/ScheduleNotificationSyncDefinition'\n      - required:\n        - externalId\n        type: object\n        properties:\n          externalId:\n            type: string\n            description: ServiceNow identifier.\n          fields:\n            $ref: '#/components/schemas/ServiceNowFieldsSyncDefinition'\n    ServiceNowFieldsSyncDefinition:\n      type: object\n      properties:\n        eventType:\n          type: string\n          description: The category that the event source uses to identify the event.\n        severity:\n          type: integer\n          description: |-\n            An integer value representing the severity of the alert. Supported values are:\n              - `0` for Clear\n              - `1` for Critical\n              - `2` for Major\n              - `3` for Minor\n              - `4` for Warning\n        resource:\n          type: string\n          description: The component on the node to which the event applies.\n        node:\n          type: string\n          description: The physical or virtual device on which the event occurred.\n    WebhookSearchNotificationSyncDefinition:\n      allOf:\n      - $ref: '#/components/schemas/ScheduleNotificationSyncDefinition'\n      - required:\n        - webhookId\n        type: object\n        properties:\n          webhookId:\n            type: string\n            description: Identifier of the webhook connection.\n          payload:\n            type: string\n            description: \"A JSON object in the format required by the target WebHook\\\n              \\ URL. For details on variables that can be used as parameters within\\\n              \\ your JSON object, please refer to Sumo Logic Doc Hub.\"\n          itemizeAlerts:\n            type: boolean\n            description: \"If this field is set to true, one webhook per result will\\\n              \\ be sent when the trigger conditions are met\"\n            example: true\n            default: false\n          maxItemizedAlerts:\n            minimum: 0\n            type: integer\n            description: The maximum number of results for which we send separate\n              alerts. This value should be between 1 and 100.\n            format: int32\n            example: 10\n    CseSignalNotificationSyncDefinition:\n      allOf:\n      - $ref: '#/components/schemas/ScheduleNotificationSyncDefinition'\n      - required:\n        - recordType\n        type: object\n        properties:\n          recordType:\n            type: string\n            description: Name of the Cloud SIEM Enterprise Record to be created.\n    MetricsSavedSearchSyncDefinition:\n      allOf:\n      - $ref: '#/components/schemas/ContentSyncDefinition'\n      - required:\n        - desiredQuantizationInSecs\n        - metricsQueries\n        - timeRange\n        type: object\n        properties:\n          description:\n            maxLength: 8192\n            type: string\n            description: Item description in the content library.\n            example: Long and detailed description\n          timeRange:\n            $ref: '#/components/schemas/ResolvableTimeRange'\n          logQuery:\n            maxLength: 10240\n            type: string\n            description: Query used to add an overlay to the chart.\n            example: my_metric | timeslice 1m | count by _timeslice\n          metricsQueries:\n            type: array\n            description: Metrics queries.\n            items:\n              $ref: '#/components/schemas/MetricsSavedSearchQuerySyncDefinition'\n          desiredQuantizationInSecs:\n            minimum: 0\n            type: integer\n            description: Desired quantization in seconds.\n            format: int32\n            example: 60\n          properties:\n            type: string\n            description: Chart properties. This field is optional.\n            example: \"{ \\\\\\\"key\\\\\\\": \\\\\\\"value\\\\\\\" }\"\n    MetricsSearchSyncDefinition:\n      allOf:\n      - $ref: '#/components/schemas/ContentSyncDefinition'\n      - required:\n        - queries\n        - timeRange\n        type: object\n        properties:\n          timeRange:\n            $ref: '#/components/schemas/ResolvableTimeRange'\n          description:\n            type: string\n            description: Description of the metrics search page.\n            example: CPU and memory utilization for RDS cluster\n          queries:\n            type: array\n            description: Queries of the metrics search page.\n            example:\n            - queryString: CPU_Idle Namespace=RDS\n              queryType: Metrics\n              queryKey: A\n            - queryString: Mem_Used Namespace=RDS\n              queryType: Metrics\n              queryKey: B\n            items:\n              $ref: '#/components/schemas/Query'\n          visualSettings:\n            type: string\n            description: |\n              Visual settings of the metrics search page. Must be a string representing a valid JSON object.\n            example: \"{\\\"title\\\": {\\\"fontsize\\\": 9}}\"\n    LookupTableSyncDefinition:\n      allOf:\n      - $ref: '#/components/schemas/ContentSyncDefinition'\n      - $ref: '#/components/schemas/ExportableLookupTableInfo'\n    CollectorRegistrationTokenResponse:\n      allOf:\n      - $ref: '#/components/schemas/TokenBaseResponse'\n      - required:\n        - encodedTokenAndUrl\n        type: object\n        properties:\n          encodedTokenAndUrl:\n            type: string\n            description: The token and URL used to register the Collector as an encoded\n              string.\n    CollectorResourceIdentity:\n      allOf:\n      - $ref: '#/components/schemas/ResourceIdentity'\n    OrgIdentity:\n      allOf:\n      - $ref: '#/components/schemas/ResourceIdentity'\n    SourceResourceIdentity:\n      allOf:\n      - $ref: '#/components/schemas/ResourceIdentity'\n      - type: object\n        properties:\n          collectorId:\n            type: string\n            description: The unique identifier of the Collector this Source belongs\n              to.\n            default: Unknown\n          collectorName:\n            type: string\n            description: The name of the Collector this Source belongs to.\n            default: Unknown\n    IngestBudgetResourceIdentity:\n      allOf:\n      - $ref: '#/components/schemas/ResourceIdentity'\n      - type: object\n        properties:\n          ingestBudgetFieldValue:\n            type: string\n            description: The unique field value of the ingest budget v1. This will\n              be empty for v2 budgets.\n            default: Unknown\n          scope:\n            type: string\n            description: The scope of the ingest budget v2. This will be empty for\n              v1 budgets.\n            default: Unknown\n    LogsToMetricsRuleIdentity:\n      allOf:\n      - $ref: '#/components/schemas/ResourceIdentity'\n    CollectorLimitApproachingTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n    GcpMetricsCollectionBrokenTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n    OAuthRefreshFailedTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - type: object\n        properties:\n          exceptionType:\n            type: string\n            description: The type of exception received while attempting OAuth.\n          exceptionMessage:\n            type: string\n            description: The error message received with the failed OAuth request.\n    IngestBudgetExceededTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/DataIngestAffectedTracker'\n    CollectionAffectedDueToIngestBudgetTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/DataIngestAffectedTracker'\n      - type: object\n        properties:\n          associatedBudgetNames:\n            type: string\n            description: The list of budget names.\n    CollectionS3AccessDeniedTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/S3CollectionErrorTracker'\n      - type: object\n        properties:\n          bucketName:\n            type: string\n            description: The bucket name of the associated Source.\n          accessKey:\n            type: string\n            description: \"The access key used to make the request. In the case of\\\n              \\ IAM roles, this is the temporary key used for authentication.\"\n    CollectionS3GetObjectAccessDeniedTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/S3CollectionErrorTracker'\n      - type: object\n        properties:\n          bucketName:\n            type: string\n            description: The bucket name of the associated Source.\n          accessKey:\n            type: string\n            description: \"The access key used to make the request. In the case of\\\n              \\ IAM roles, this is the temporary key used for authentication.\"\n    CollectionS3InvalidKeyTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/S3CollectionErrorTracker'\n      - type: object\n        properties:\n          accessKey:\n            type: string\n            description: \"The access key used to make the request. In the case of\\\n              \\ IAM roles, this is the temporary key used for authentication.\"\n    CollectionS3ListingFailedTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/S3CollectionErrorTracker'\n      - type: object\n        properties:\n          bucketName:\n            type: string\n            description: The bucket name of the associated Source.\n    CollectionS3SlowListingTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/S3CollectionErrorTracker'\n      - type: object\n        properties:\n          bucketName:\n            type: string\n            description: The bucket name of the associated Source.\n          flaggedAfterMinutes:\n            type: string\n            description: The number of minutes elapsed in scanning after which this\n              incident was created.\n    InstalledCollectorOfflineTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - type: object\n        properties:\n          minutesSinceLastHeartbeat:\n            type: string\n            description: The number of minutes since the last heartbeat for the collector\n              was received.\n    IngestThrottlingTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/DataIngestAffectedTracker'\n      - type: object\n        properties:\n          dataType:\n            type: string\n            description: The type of data for which the rate limit was enabled. The\n              possible values are `LogIngest` and `MetricsIngest`.\n    CollectionInvalidFilePathTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/FileCollectionErrorTracker'\n      - type: object\n        properties:\n          path:\n            type: string\n            description: The path to the file.\n    CollectionPathAccessDeniedTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/FileCollectionErrorTracker'\n      - type: object\n        properties:\n          path:\n            type: string\n            description: The path to the file.\n    CollectionRemoteConnectionFailedTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/FileCollectionErrorTracker'\n    CollectionDockerClientBuildingFailedTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n    CollectionWindowsEventChannelConnectionFailedTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n    CollectionWindowsHostConnectionFailedTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n    CollectionAwsMetadataTagsFetchDeniedTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n    CollectionCloudWatchTagsFetchDeniedTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/AwsCloudWatchCollectionErrorTracker'\n    CollectionCloudWatchListMetricsDeniedTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/AwsCloudWatchCollectionErrorTracker'\n      - type: object\n        properties:\n          errorCode:\n            type: string\n            description: The error code from AWS for the request made to get metrics.\n          errorMessage:\n            type: string\n            description: The error message from AWS for the request made to get metrics.\n    CollectionCloudWatchGetStatisticsDeniedTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/AwsCloudWatchCollectionErrorTracker'\n      - type: object\n        properties:\n          errorCode:\n            type: string\n            description: The error code from AWS for the request made to get metrics.\n          errorMessage:\n            type: string\n            description: The error message from AWS for the request made to get metrics.\n    CollectionCloudWatchGetStatisticsThrottledTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/AwsCloudWatchCollectionErrorTracker'\n    MetricsHighCardinalityDetectedTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - type: object\n        properties:\n          retention:\n            type: string\n            description: The retention of metrics that approached the limit.\n    MetricsCardinalityLimitExceededTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - type: object\n        properties:\n          retention:\n            type: string\n            description: The retention of metrics that exceeded the limit.\n    HighCardinalityDimensionDroppedTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - type: object\n        properties:\n          dimension:\n            type: string\n            description: The dropped high cardinality dimension.\n    LogsToMetricsRuleDisabledTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n    SpanIngestLimitExceededTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n    CollectionAwsInventoryThrottledTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/AwsInventoryCollectionErrorTracker'\n    CollectionAwsInventoryUnauthorizedTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/AwsInventoryCollectionErrorTracker'\n    CSEWindowsInvalidConfigurationTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/CSEWindowsErrorTracker'\n      - type: object\n        properties:\n          sensorId:\n            type: string\n            description: The sensor ID.\n          sensorHostname:\n            type: string\n            description: The sensor's hostname.\n          sensorUserName:\n            type: string\n            description: The sensor's user name.\n    CSEWindowsRuntimeErrorTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/CSEWindowsErrorTracker'\n      - type: object\n        properties:\n          sensorId:\n            type: string\n            description: The sensor ID.\n          sensorHostname:\n            type: string\n            description: The sensor's hostname.\n          sensorUserName:\n            type: string\n            description: The sensor's user name.\n    CSEWindowsExcessiveEventLogMonitorsTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/CSEWindowsErrorTracker'\n      - type: object\n        properties:\n          sensorId:\n            type: string\n            description: The sensor ID.\n          sensorHostname:\n            type: string\n            description: The sensor's hostname.\n          sensorUserName:\n            type: string\n            description: The sensor's user name.\n    CSEWindowsRuntimeWarningTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/CSEWindowsErrorTracker'\n      - type: object\n        properties:\n          sensorId:\n            type: string\n            description: The sensor ID.\n          sensorHostname:\n            type: string\n            description: The sensor's hostname.\n          sensorUserName:\n            type: string\n            description: The sensor's user name.\n    CSEWindowsInvalidUserPermissionsTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/CSEWindowsAccessErrorTracker'\n      - type: object\n        properties:\n          sensorId:\n            type: string\n            description: The sensor ID.\n          sensorHostname:\n            type: string\n            description: The sensor's hostname.\n          sensorUserName:\n            type: string\n            description: The sensor's user name.\n          folderPath:\n            type: string\n            description: The path of the folder.\n          filePath:\n            type: string\n            description: The complete file path.\n          source:\n            type: string\n            description: The HostName + EventLog name for EventLogs and Domain name\n              for Directory..\n    CSEWindowsWriteQueueFilesToSensorDirectoryFailedTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/CSEWindowsAccessErrorTracker'\n      - type: object\n        properties:\n          sensorId:\n            type: string\n            description: The sensor ID.\n          sensorHostname:\n            type: string\n            description: The sensor's hostname.\n          sensorUserName:\n            type: string\n            description: The sensor's user name.\n          folderPath:\n            type: string\n            description: The path of the folder.\n          filePath:\n            type: string\n            description: The complete file path.\n          source:\n            type: string\n            description: The HostName + EventLog name for EventLogs and Domain name\n              for Directory..\n    CSEWindowsStorageLimitExceededTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/CSEWindowsSensorOutOfStorageTracker'\n      - type: object\n        properties:\n          sensorId:\n            type: string\n            description: The sensor ID.\n          sensorHostname:\n            type: string\n            description: The sensor's hostname.\n          folderPath:\n            type: string\n            description: The path of the folder.\n          folderSizeLimit:\n            type: string\n            description: The complete file path.\n          currentFolderSize:\n            type: string\n            description: Current size of the folder.\n          percentageAvailableDiskSpaceLimit:\n            type: string\n            description: The percentage available disk space limit.\n          currentPercentageAvailableDiskSpace:\n            type: string\n            description: The current percentage available disk space.\n          lastError:\n            type: string\n            description: The last error.\n    CSEWindowsStorageLimitApproachingTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/CSEWindowsSensorOutOfStorageTracker'\n      - type: object\n        properties:\n          sensorId:\n            type: string\n            description: The sensor ID.\n          sensorHostname:\n            type: string\n            description: The sensor's hostname.\n          folderPath:\n            type: string\n            description: The path of the folder.\n          folderSizeLimit:\n            type: string\n            description: The complete file path.\n          currentFolderSize:\n            type: string\n            description: Current size of the folder.\n          percentageAvailableDiskSpaceLimit:\n            type: string\n            description: The percentage available disk space limit.\n          currentPercentageAvailableDiskSpace:\n            type: string\n            description: The current percentage available disk space.\n          lastError:\n            type: string\n            description: The last error.\n    CSEWindowsErrorAppendingToQueueFilesTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/CSEWindowsSensorOutOfStorageTracker'\n      - type: object\n        properties:\n          sensorId:\n            type: string\n            description: The sensor ID.\n          sensorHostname:\n            type: string\n            description: The sensor's hostname.\n          folderPath:\n            type: string\n            description: The path of the folder.\n          folderSizeLimit:\n            type: string\n            description: The complete file path.\n          currentFolderSize:\n            type: string\n            description: Current size of the folder.\n          percentageAvailableDiskSpaceLimit:\n            type: string\n            description: The percentage available disk space limit.\n          currentPercentageAvailableDiskSpace:\n            type: string\n            description: The current percentage available disk space.\n          lastError:\n            type: string\n            description: The last error.\n    CSEWindowsErrorParsingRecordsTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/CSEWindowsParsingErrorTracker'\n      - type: object\n        properties:\n          sensorId:\n            type: string\n            description: The sensor ID.\n          sensorHostname:\n            type: string\n            description: The sensor's hostname.\n          source:\n            type: string\n            description: The HostName + EventLog name for EventLogs and Domain name\n              for Directory.\n          errorCount:\n            type: string\n            description: The error count.\n          lastErrorMessage:\n            type: string\n            description: The last error message.\n    CSEWindowsExcessiveFilesPendingUploadTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/CSEWindowsExcessiveBacklogTracker'\n      - type: object\n        properties:\n          sensorId:\n            type: string\n            description: The sensor ID.\n          sensorHostname:\n            type: string\n            description: The sensor's hostname.\n          source:\n            type: string\n            description: The HostName + EventLog name for EventLogs and Domain name\n              for Directory.\n          lastErrorMessage:\n            type: string\n            description: The last error message.\n          numberOfFilesPending:\n            type: string\n            description: The number of files pending upload.\n          oldestTimestampInQueue:\n            type: string\n            description: The oldest timestamp in the queue.\n    CSEWindowsOldestRecordTimestampExceedsThresholdTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/CSEWindowsExcessiveBacklogTracker'\n      - type: object\n        properties:\n          sensorId:\n            type: string\n            description: The sensor ID.\n          sensorHostname:\n            type: string\n            description: The sensor's hostname.\n          source:\n            type: string\n            description: The HostName + EventLog name for EventLogs and Domain name\n              for Directory.\n          lastErrorMessage:\n            type: string\n            description: The last error message.\n          numberOfFilesPending:\n            type: string\n            description: The number of files pending upload.\n          oldestTimestampInQueue:\n            type: string\n            description: The oldest timestamp in the queue.\n    CSEWindowsSensorOfflineTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - type: object\n        properties:\n          minutesWithNoHeartbeatBeforeMarkingOffline:\n            type: string\n            description: The number of minutes without heartbeat after which sensor\n              is marked offline.\n    MetricsMetadataKeyLengthLimitExceeded:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/MetricsMetadataLimitsExceededTracker'\n    MetricsMetadataValueLengthLimitExceeded:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/MetricsMetadataLimitsExceededTracker'\n    MetricsMetadataKeyValuePairsLimitExceeded:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/MetricsMetadataLimitsExceededTracker'\n    MetricsMetadataTotalMetadataSizeLimitExceeded:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/MetricsMetadataLimitsExceededTracker'\n    OTCReceiverNoSpansObservedTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/OTCReceiverErrorTracker'\n      - type: object\n        properties:\n          instanceId:\n            type: string\n            description: \"The collector instance ID, e.g. `974b444b-4b45-4f32-aa03-1dbf2a16826d`.\"\n          instanceAddress:\n            type: string\n            description: \"The collector instance address, e.g. `172.16.1.14`.\"\n          receiverId:\n            type: string\n            description: \"The collector receiver ID, e.g. `otlphttp/2`.\"\n    OTCReceiverSpansDroppedTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/OTCReceiverErrorTracker'\n      - type: object\n        properties:\n          instanceId:\n            type: string\n            description: \"The collector instance ID, e.g. `974b444b-4b45-4f32-aa03-1dbf2a16826d`.\"\n          instanceAddress:\n            type: string\n            description: \"The collector instance address, e.g. `172.16.1.14`.\"\n          receiverId:\n            type: string\n            description: \"The collector receiver ID, e.g. `otlphttp/2`.\"\n          count:\n            type: string\n            description: The count of dropped spans.\n    OTCReceiverSpansRefusedTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/OTCReceiverErrorTracker'\n      - type: object\n        properties:\n          instanceId:\n            type: string\n            description: \"The collector instance ID, e.g. `974b444b-4b45-4f32-aa03-1dbf2a16826d`.\"\n          instanceAddress:\n            type: string\n            description: \"The collector instance address, e.g. `172.16.1.14`.\"\n          receiverId:\n            type: string\n            description: \"The collector receiver ID, e.g. `otlphttp/2`.\"\n          count:\n            type: string\n            description: The count of refused spans.\n    OTCExporterHighFailuresExportingSpansTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/OTCExporterErrorTracker'\n      - type: object\n        properties:\n          instanceId:\n            type: string\n            description: \"The collector instance ID, e.g. `974b444b-4b45-4f32-aa03-1dbf2a16826d`.\"\n          instanceAddress:\n            type: string\n            description: \"The collector instance address, e.g. `172.16.1.14`.\"\n          exporterId:\n            type: string\n            description: \"The collector exporter ID, e.g. `otlphttp`.\"\n          count:\n            type: string\n            description: The failure count.\n    OTCExporterLargeTraceBatchesTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/OTCExporterErrorTracker'\n      - type: object\n        properties:\n          instanceId:\n            type: string\n            description: \"The collector instance ID, e.g. `974b444b-4b45-4f32-aa03-1dbf2a16826d`.\"\n          instanceAddress:\n            type: string\n            description: \"The collector instance address, e.g. `172.16.1.14`.\"\n          exporterId:\n            type: string\n            description: \"The collector exporter ID, e.g. `otlphttp`.\"\n          count:\n            type: string\n            description: The failure count.\n    OTCProcessHighMemoryUsageTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/OTCProcessErrorTracker'\n      - type: object\n        properties:\n          instanceId:\n            type: string\n            description: \"The collector instance ID, e.g. `974b444b-4b45-4f32-aa03-1dbf2a16826d`.\"\n          instanceAddress:\n            type: string\n            description: \"The collector instance address, e.g. `172.16.1.14`.\"\n          memoryUsage:\n            type: string\n            description: \"The collector memory usage in bytes, e.g. `142606592`\"\n          memoryLimit:\n            type: string\n            description: \"The collector memory limit (if set) in bytes, e.g. `4000000000`\"\n    OTCProcessSpansDroppedTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/OTCProcessErrorTracker'\n      - type: object\n        properties:\n          instanceId:\n            type: string\n            description: \"The collector instance ID, e.g. `974b444b-4b45-4f32-aa03-1dbf2a16826d`.\"\n          instanceAddress:\n            type: string\n            description: \"The collector instance address, e.g. `172.16.1.14`.\"\n          processorId:\n            type: string\n            description: \"The collector processor ID, e.g. `cascading_filter`.\"\n          count:\n            type: string\n            description: The count of dropped spans.\n    OTCProcessSpansRefusedTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/OTCProcessErrorTracker'\n      - type: object\n        properties:\n          instanceId:\n            type: string\n            description: \"The collector instance ID, e.g. `974b444b-4b45-4f32-aa03-1dbf2a16826d`.\"\n          instanceAddress:\n            type: string\n            description: \"The collector instance address, e.g. `172.16.1.14`.\"\n          processorId:\n            type: string\n            description: \"The collector processor ID, e.g. `cascading_filter`.\"\n          count:\n            type: string\n            description: The count of refused spans.\n    OTCWarningProcessingSpansTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/OTCProcessErrorTracker'\n      - type: object\n        properties:\n          instanceId:\n            type: string\n            description: \"The collector instance ID, e.g. `974b444b-4b45-4f32-aa03-1dbf2a16826d`.\"\n          instanceAddress:\n            type: string\n            description: \"The collector instance address, e.g. `172.16.1.14`.\"\n          processorId:\n            type: string\n            description: \"The collector processor ID, e.g. `cascading_filter`.\"\n          message:\n            type: string\n            description: The warning message.\n    OTCErrorProcessingSpansTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/OTCProcessErrorTracker'\n      - type: object\n        properties:\n          instanceId:\n            type: string\n            description: \"The collector instance ID, e.g. `974b444b-4b45-4f32-aa03-1dbf2a16826d`.\"\n          instanceAddress:\n            type: string\n            description: \"The collector instance address, e.g. `172.16.1.14`.\"\n          processorId:\n            type: string\n            description: \"The collector processor ID, e.g. `cascading_filter`.\"\n          message:\n            type: string\n            description: The error message.\n    PermissionSubject:\n      required:\n      - subjectId\n      - subjectType\n      type: object\n      properties:\n        subjectType:\n          pattern: ^(user|role|org)$\n          type: string\n          description: \"Type of subject for the permission. Valid values are: `user`\\\n            \\ or `role` or `org`.\"\n          example: role\n          x-pattern-message: \"must be one of the following: `user`, `role`, `org`\"\n        subjectId:\n          type: string\n          description: \"The identifier that belongs to the subject type chosen above.\\\n            \\ For e.g. if the subjectType is set to `user`, subjectId should be the\\\n            \\ identifier of a user (same goes for `role` or `org` subjectType).\"\n          example: 0000000006743FDA\n      description: Identifier for the entity (subject) that is granted the permission\n        on resource(s).\n    PermissionIdentifier:\n      allOf:\n      - $ref: '#/components/schemas/PermissionSubject'\n      - required:\n        - targetId\n        type: object\n        properties:\n          targetId:\n            type: string\n            description: The identifier that belongs to the resource this permission\n              assignment applies to.\n            example: 0000000006743FE2\n    PermissionIdentifiers:\n      required:\n      - permissionIdentifiers\n      type: object\n      properties:\n        permissionIdentifiers:\n          maxItems: 1000\n          minItems: 1\n          type: array\n          description: List of permission identifiers.\n          items:\n            $ref: '#/components/schemas/PermissionIdentifier'\n    PermissionStatementDefinition:\n      allOf:\n      - $ref: '#/components/schemas/Permissions'\n      - required:\n        - subjectId\n        - subjectType\n        - targetId\n        type: object\n        properties:\n          subjectType:\n            pattern: ^(role|org)$\n            type: string\n            description: \"Type of subject for the permission. Valid values are: `role`\\\n              \\ or `org`.\"\n            example: role\n            x-pattern-message: \"must be one of the following: `role` or `org`\"\n          subjectId:\n            type: string\n            description: \"The identifier that belongs to the subject type chosen above.\\\n              \\ For e.g. if the subjectType is set to `role`, subjectId should be\\\n              \\ the identifier of a role.  Similarly, if the subjectType is `org`,\\\n              \\ the subjectId should be the identifier of the same org,  which owns\\\n              \\ the resource target.\"\n            example: 0000000006743FDA\n          targetId:\n            type: string\n            description: The identifier that belongs to the resource this permission\n              assignment applies to.\n            example: 0000000006743FE2\n    PermissionStatementDefinitions:\n      required:\n      - permissionStatementDefinitions\n      type: object\n      properties:\n        permissionStatementDefinitions:\n          maxItems: 1000\n          minItems: 1\n          type: array\n          description: List of permission statement definitions.\n          items:\n            $ref: '#/components/schemas/PermissionStatementDefinition'\n    PermissionStatement:\n      type: object\n      allOf:\n      - $ref: '#/components/schemas/PermissionStatementDefinition'\n      - $ref: '#/components/schemas/MetadataModel'\n    PermissionStatements:\n      required:\n      - permissionStatements\n      type: object\n      properties:\n        permissionStatements:\n          type: array\n          description: A list of permission statements.\n          items:\n            $ref: '#/components/schemas/PermissionStatement'\n    PermissionSummaryMeta:\n      required:\n      - isExplicit\n      - isInherited\n      - isRecursive\n      - isRevoked\n      - isSystemDefined\n      - name\n      type: object\n      properties:\n        name:\n          type: string\n          description: \"Name of the permission. Example values are: `Read`, `Update`,\\\n            \\ `Create`, etc.\"\n          example: Read\n        isInherited:\n          type: boolean\n          description: A true value implies that the permission is inherited from\n            some ancestors of the resource. A false value implies that the permission\n            is explicitly assigned to the resource.\n          example: true\n        isExplicit:\n          type: boolean\n          description: A true value implies that the permission is explicitly assigned\n            to the resource. A false value implies that the permission is not explicitly\n            assigned to the resource.\n          example: true\n        isRevoked:\n          type: boolean\n          description: A true value implies that the capability required for this\n            permission has been revoked.\n          example: true\n        isRecursive:\n          type: boolean\n          description: A true value implies that the permission is recursively cascaded\n            down to all the direct and indirect children of the resource.\n          example: true\n        isSystemDefined:\n          type: boolean\n          description: A true value implies that the permission is defined by the\n            system on the resource and can not be modified by the user. A false value\n            implies that the permission is defined by the user on the resource and\n            can be modified by the user.\n          example: true\n      description: \"Permission Summary with additional information like inheritance,\\\n        \\ revocation, etc about the permission.\"\n    PermissionSummaryBySubjects:\n      description: A list of PermissionSubjects and PermissionSummaryMeta(s) associated\n        with each subject.\n      allOf:\n      - $ref: '#/components/schemas/PermissionSubject'\n      - required:\n        - permissionSummaries\n        type: object\n        properties:\n          permissionSummaries:\n            type: array\n            items:\n              $ref: '#/components/schemas/PermissionSummaryMeta'\n    PermissionSummariesBySubjects:\n      required:\n      - permissionSummariesBySubjects\n      type: object\n      properties:\n        permissionSummariesBySubjects:\n          type: array\n          description: A list of PermissionSubjects and PermissionSummaryMeta(s) associated\n            with each subject.\n          items:\n            $ref: '#/components/schemas/PermissionSummaryBySubjects'\n    ListPermissionsResponse:\n      required:\n      - permissionStatements\n      type: object\n      properties:\n        permissionStatements:\n          type: array\n          description: A list of permission statements.\n          items:\n            $ref: '#/components/schemas/PermissionStatement'\n    Permissions:\n      required:\n      - permissions\n      type: object\n      properties:\n        permissions:\n          type: array\n          description: List of permissions.\n          example:\n          - Read\n          - Delete\n          items:\n            type: string\n    Email:\n      allOf:\n      - $ref: '#/components/schemas/Action'\n      - required:\n        - recipients\n        - subject\n        - timeZone\n        type: object\n        properties:\n          recipients:\n            type: array\n            description: A list of email addresses to send to when the rule fires.\n            items:\n              type: string\n              example: john@doe.com\n          subject:\n            type: string\n            description: The subject line of the email.\n            example: Sample Email Subject\n          messageBody:\n            type: string\n            description: The message body of the email to send.\n            example: Sample Email Message Body\n          timeZone:\n            type: string\n            description: \"Time zone for the email content. All dates/times will be\\\n              \\ displayed in this timeZone in the email payload. Follow the format\\\n              \\ in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).\"\n            example: America/Los_Angeles\n    AWSLambda:\n      allOf:\n      - $ref: '#/components/schemas/Action'\n      - required:\n        - connectionId\n        type: object\n        properties:\n          connectionId:\n            type: string\n            description: The identifier of the connection.\n            example: 000000000BF39283\n          payloadOverride:\n            type: string\n            description: The override of the default JSON payload of the connection.\n              Should be in JSON format.\n    AzureFunctions:\n      allOf:\n      - $ref: '#/components/schemas/Action'\n      - required:\n        - connectionId\n        type: object\n        properties:\n          connectionId:\n            type: string\n            description: The identifier of the connection.\n            example: 000000000BF39283\n          payloadOverride:\n            type: string\n            description: The override of the default JSON payload of the connection.\n              Should be in JSON format.\n    Datadog:\n      allOf:\n      - $ref: '#/components/schemas/Action'\n      - required:\n        - connectionId\n        type: object\n        properties:\n          connectionId:\n            type: string\n            description: The identifier of the connection.\n            example: 000000000BF39283\n          payloadOverride:\n            type: string\n            description: The override of the default JSON payload of the connection.\n              Should be in JSON format.\n    HipChat:\n      allOf:\n      - $ref: '#/components/schemas/Action'\n      - required:\n        - connectionId\n        type: object\n        properties:\n          connectionId:\n            type: string\n            description: The identifier of the connection.\n            example: 000000000BF39283\n          payloadOverride:\n            type: string\n            description: The override of the default JSON payload of the connection.\n              Should be in JSON format.\n    PagerDuty:\n      allOf:\n      - $ref: '#/components/schemas/Action'\n      - required:\n        - connectionId\n        type: object\n        properties:\n          connectionId:\n            type: string\n            description: The identifier of the connection.\n            example: 000000000BF39283\n          payloadOverride:\n            type: string\n            description: The override of the default JSON payload of the connection.\n              Should be in JSON format.\n    Slack:\n      allOf:\n      - $ref: '#/components/schemas/Action'\n      - required:\n        - connectionId\n        type: object\n        properties:\n          connectionId:\n            type: string\n            description: The identifier of the connection.\n            example: 000000000BF39283\n          payloadOverride:\n            type: string\n            description: The override of the default JSON payload of the connection.\n              Should be in JSON format.\n    NewRelic:\n      allOf:\n      - $ref: '#/components/schemas/Action'\n      - required:\n        - connectionId\n        type: object\n        properties:\n          connectionId:\n            type: string\n            description: The identifier of the connection.\n            example: 000000000BF39283\n          payloadOverride:\n            type: string\n            description: The override of the default JSON payload of the connection.\n              Should be in JSON format.\n    Jira:\n      allOf:\n      - $ref: '#/components/schemas/Action'\n      - required:\n        - connectionId\n        type: object\n        properties:\n          connectionId:\n            type: string\n            description: The identifier of the connection.\n            example: 000000000BF39283\n          payloadOverride:\n            type: string\n            description: The override of the default JSON payload of the connection.\n              Should be in JSON format.\n    Opsgenie:\n      allOf:\n      - $ref: '#/components/schemas/Action'\n      - required:\n        - connectionId\n        type: object\n        properties:\n          connectionId:\n            type: string\n            description: The identifier of the connection.\n            example: 000000000BF39283\n          payloadOverride:\n            type: string\n            description: The override of the default JSON payload of the connection.\n              Should be in JSON format.\n    MicrosoftTeams:\n      allOf:\n      - $ref: '#/components/schemas/Action'\n      - required:\n        - connectionId\n        type: object\n        properties:\n          connectionId:\n            type: string\n            description: The identifier of the connection.\n            example: 000000000BF39283\n          payloadOverride:\n            type: string\n            description: The override of the default JSON payload of the connection.\n              Should be in JSON format.\n    ServiceNow:\n      allOf:\n      - $ref: '#/components/schemas/Action'\n      - required:\n        - connectionId\n        type: object\n        properties:\n          connectionId:\n            type: string\n            description: The identifier of the connection.\n            example: 000000000BF39283\n          connectionSubtype:\n            $ref: '#/components/schemas/ConnectionSubtype'\n          payloadOverride:\n            type: string\n            description: The override of the default JSON payload of the connection.\n              Should be in JSON format.\n    SumoCloudSOAR:\n      allOf:\n      - $ref: '#/components/schemas/Action'\n      - required:\n        - connectionId\n        type: object\n        properties:\n          connectionId:\n            type: string\n            description: The identifier of the connection.\n            example: 000000000BF39283\n          connectionSubtype:\n            $ref: '#/components/schemas/ConnectionSubtype'\n          payloadOverride:\n            type: string\n            description: The override of the default JSON payload of the connection.\n              Should be in JSON format.\n    Webhook:\n      allOf:\n      - $ref: '#/components/schemas/Action'\n      - required:\n        - connectionId\n        type: object\n        properties:\n          connectionId:\n            type: string\n            description: The identifier of the connection.\n            example: 000000000BF39283\n          payloadOverride:\n            type: string\n            description: The override of the default JSON payload of the connection.\n              Should be in JSON format.\n    ChartDataRequest:\n      required:\n      - monitorType\n      - queries\n      type: object\n      properties:\n        monitorType:\n          pattern: ^(Logs|Metrics)$\n          type: string\n          description: |-\n            The type of monitor. Valid values:\n              1. `Logs`: A logs query monitor.\n              2. `Metrics`: A metrics query monitor.\n          example: Logs\n          x-pattern-message: should be either 'Logs' or 'Metrics'\n        queries:\n          uniqueItems: true\n          type: array\n          description: All queries from the monitor.\n          items:\n            $ref: '#/components/schemas/MonitorQuery'\n        triggers:\n          type: array\n          description: Defines the conditions of when to send notifications.\n          items:\n            $ref: '#/components/schemas/TriggerCondition'\n        timeRange:\n          $ref: '#/components/schemas/ResolvableTimeRange'\n      description: Request payload for monitor chart data visualization.\n    ChartDataResult:\n      type: object\n      properties:\n        warnings:\n          type: array\n          description: Execution warnings of queries.\n          items:\n            $ref: '#/components/schemas/ErrorDescription'\n        series:\n          type: array\n          description: List of time series of the monitor chart data.\n          items:\n            $ref: '#/components/schemas/SeriesData'\n      description: Response for monitor chart data visualization.\n    OutlierSeriesDataPoint:\n      allOf:\n      - $ref: '#/components/schemas/DataPoint'\n      - required:\n        - x\n        - \"y\"\n        type: object\n        properties:\n          x:\n            type: integer\n            description: Epoch unix time stamp.\n            format: int64\n            example: 1617146107\n          \"y\":\n            $ref: '#/components/schemas/OutlierDataValue'\n        description: Data point of outlier series.\n    StaticSeriesDataPoint:\n      allOf:\n      - $ref: '#/components/schemas/DataPoint'\n      - required:\n        - x\n        - \"y\"\n        type: object\n        properties:\n          x:\n            type: integer\n            description: Epoch unix time stamp.\n            format: int64\n            example: 1617146107\n          \"y\":\n            type: number\n            description: The value of the data point.\n            format: double\n            example: 70.0\n        description: Data point of static series.\n    SearchQueryFieldsAndTypes:\n      type: array\n      items:\n        $ref: '#/components/schemas/SearchQueryFieldAndType'\n    SearchQueryFieldAndType:\n      type: object\n      properties:\n        fieldName:\n          type: string\n          description: Log field parsed from log search query.\n          example: status_code\n        fieldType:\n          pattern: ^(NumericValue|DistinctCount)$\n          type: string\n          description: |-\n            The type of the field inferred from log results and explicit configuration. Valid values:\n              1. `NumericValue`: A field with a numerical type.\n              2. `DistinctCount`: A field with a dimensional type.\n          x-pattern-message: should be either 'NumericValue' or 'DistinctCount'\n        isImplicitField:\n          type: boolean\n          description: Indicates if the field is implicit or user defined.\n          example: true\n      description: A log field and its associated type\n    TriggerCondition:\n      required:\n      - triggerType\n      type: object\n      properties:\n        detectionMethod:\n          pattern: ^(StaticCondition|LogsStaticCondition|MetricsStaticCondition|LogsOutlierCondition|MetricsOutlierCondition|LogsMissingDataCondition|MetricsMissingDataCondition|SloSliCondition|SloBurnRateCondition)$\n          type: string\n          description: |-\n            Detection method of the trigger condition. Valid values:\n              1. `StaticCondition`: A condition that triggers based off of a static threshold. This `detectionMethod` is deprecated, it is recommended to use other ones instead.\n              2. `LogsStaticCondition`: A logs condition that triggers based off of a static threshold.\n              3. `MetricsStaticCondition`: A metrics condition that triggers based off of a static threshold.\n              4. `LogsOutlierCondition`: A logs condition that triggers based off of a dynamic outlier threshold.\n              5. `MetricsOutlierCondition`: A metrics condition that triggers based off of a dynamic outlier threshold.\n              6. `LogsMissingDataCondition`: A logs missing data condition that triggers based off of no data available.\n              7. `MetricsMissingDataCondition`: A metrics missing data condition that triggers based off of no data available.\n              8. `SloSliCondition`: An SLO condition that triggers based off of current SLI value.\n              9. `SloBurnRateCondition`: An SLO condition that triggers based off of error budget burn rate.\n          example: StaticCondition\n          default: StaticCondition\n          x-pattern-message: \"should be one of the following: 'StaticCondition', 'LogsStaticCondition',\\\n            \\ 'MetricsStaticCondition', 'LogsOutlierCondition', 'MetricsOutlierCondition',\\\n            \\ 'LogsMissingDataCondition', 'MetricsMissingDataCondition', 'SloSliCondition',\\\n            \\ 'SloBurnRateCondition'\"\n        triggerType:\n          pattern: ^(Critical|Warning|MissingData|ResolvedCritical|ResolvedWarning|ResolvedMissingData)$\n          type: string\n          description: |-\n            The type of trigger condition. Valid values:\n              1. `Critical`: A critical condition to trigger on.\n              2. `Warning`: A warning condition to trigger on.\n              3. `MissingData`: A condition that indicates data is missing.\n              4. `ResolvedCritical`: A condition to resolve a Critical trigger on.\n              5. `ResolvedWarning`: A condition to resolve a Warning trigger on.\n              6. `ResolvedMissingData`: A condition to resolve a MissingData trigger.\n          example: Critical\n          x-pattern-message: \"should be one of the following: 'Critical', 'Warning',\\\n            \\ 'MissingData', 'ResolvedCritical', 'ResolvedWarning', or 'ResolvedMissingData'\"\n        resolutionWindow:\n          type: string\n          description: \"The resolution window that the recovery condition must be\\\n            \\ met in each evaluation that happens within this entire duration before\\\n            \\ the alert is recovered (resolved). If not specified, the time range\\\n            \\ of your trigger will be used. Valid values are: `0m`, `-5m`, `-10m`,\\\n            \\ `-15m`, `-30m`, `-1h`, `-3h`, `-6h`, `-12h`, or `-24h`\"\n          nullable: true\n          example: -5m\n      discriminator:\n        propertyName: detectionMethod\n    StaticCondition:\n      allOf:\n      - $ref: '#/components/schemas/TriggerCondition'\n      - required:\n        - occurrenceType\n        - timeRange\n        - triggerSource\n        type: object\n        properties:\n          timeRange:\n            type: string\n            description: \"The relative time range of the monitor. Valid values of\\\n              \\ time ranges are `-5m`, `-10m`, `-15m`, `-30m`, `-1h`, `-3h`, `-6h`,\\\n              \\ `-12h`, or `-24h`.\"\n            example: -15m\n          threshold:\n            $ref: '#/components/schemas/StaticThreshold'\n          thresholdType:\n            $ref: '#/components/schemas/StaticThresholdType'\n          field:\n            type: string\n            description: \"The name of the field that the trigger condition will alert\\\n              \\ on. The trigger could compare the value of specified field with the\\\n              \\ threshold. If `field` is not specified, monitor would default to result\\\n              \\ count instead.\"\n            example: _count\n          occurrenceType:\n            $ref: '#/components/schemas/OccurrenceType'\n          triggerSource:\n            $ref: '#/components/schemas/TriggerSource'\n        description: A rule that defines how the monitor should evaluate data and\n          trigger notifications.\n    LogsStaticCondition:\n      allOf:\n      - $ref: '#/components/schemas/TriggerCondition'\n      - required:\n        - threshold\n        - thresholdType\n        - timeRange\n        type: object\n        properties:\n          timeRange:\n            type: string\n            description: \"The relative time range of the monitor. Valid values of\\\n              \\ time ranges are `-5m`, `-10m`, `-15m`, `-30m`, `-1h`, `-3h`, `-6h`,\\\n              \\ `-12h`, or `-24h`.\"\n            example: -15m\n          threshold:\n            $ref: '#/components/schemas/StaticThreshold'\n          thresholdType:\n            $ref: '#/components/schemas/StaticThresholdType'\n          field:\n            type: string\n            description: \"The name of the field that the trigger condition will alert\\\n              \\ on. The trigger could compare the value of specified field with the\\\n              \\ threshold. If `field` is not specified, monitor would default to result\\\n              \\ count instead.\"\n            example: _count\n        description: A rule that defines how logs monitor should evaluate static data\n          and trigger notifications.\n    MetricsStaticCondition:\n      allOf:\n      - $ref: '#/components/schemas/TriggerCondition'\n      - required:\n        - occurrenceType\n        - threshold\n        - thresholdType\n        - timeRange\n        type: object\n        properties:\n          timeRange:\n            type: string\n            description: \"The relative time range of the monitor. Valid values of\\\n              \\ time ranges are `-5m`, `-10m`, `-15m`, `-30m`, `-1h`, `-3h`, `-6h`,\\\n              \\ `-12h`, or `-24h`.\"\n            example: -15m\n          threshold:\n            $ref: '#/components/schemas/StaticThreshold'\n          thresholdType:\n            $ref: '#/components/schemas/StaticThresholdType'\n          occurrenceType:\n            $ref: '#/components/schemas/OccurrenceType'\n        description: A rule that defines how metrics monitor should evaluate static\n          data and trigger notifications.\n    LogsOutlierCondition:\n      allOf:\n      - $ref: '#/components/schemas/TriggerCondition'\n      - type: object\n        properties:\n          window:\n            type: integer\n            description: Sets the trailing number of data points to calculate mean\n              and sigma.\n            format: int64\n            example: 15\n            default: 50\n          consecutive:\n            type: integer\n            description: Sets the required number of consecutive indicator data points\n              (outliers) to trigger a violation.\n            format: int64\n            example: 3\n            default: 1\n          direction:\n            $ref: '#/components/schemas/OutlierDirection_1'\n          threshold:\n            type: number\n            description: Sets the number of standard deviations for calculating violations.\n            format: double\n            example: 10.0\n            default: 3.0\n          field:\n            type: string\n            description: The name of the field that the trigger condition will alert\n              on.\n            example: _count\n        description: A rule that defines how logs monitor should evaluate outlier\n          data and trigger notifications.\n    MetricsOutlierCondition:\n      allOf:\n      - $ref: '#/components/schemas/TriggerCondition'\n      - type: object\n        properties:\n          baselineWindow:\n            type: string\n            description: The time range used to compute the baseline.\n            example: 1h\n            default: 1d\n          direction:\n            $ref: '#/components/schemas/OutlierDirection_1'\n          threshold:\n            type: number\n            description: How much should the indicator be different from the baseline\n              for each datapoint.\n            format: double\n            example: 10.0\n            default: 3.0\n        description: A rule that defines how metrics monitor should evaluate outlier\n          data and trigger notifications.\n    LogsMissingDataCondition:\n      allOf:\n      - $ref: '#/components/schemas/TriggerCondition'\n      - required:\n        - timeRange\n        type: object\n        properties:\n          timeRange:\n            type: string\n            description: \"The relative time range of the monitor. Valid values of\\\n              \\ time ranges are `-5m`, `-10m`, `-15m`, `-30m`, `-1h`, `-3h`, `-6h`,\\\n              \\ `-12h`, or `-24h`.\"\n            example: -15m\n        description: A rule that defines how logs monitors should evaluate missing\n          data and trigger notifications.\n    MetricsMissingDataCondition:\n      allOf:\n      - $ref: '#/components/schemas/TriggerCondition'\n      - required:\n        - timeRange\n        - triggerSource\n        type: object\n        properties:\n          triggerSource:\n            $ref: '#/components/schemas/TriggerSource'\n          timeRange:\n            type: string\n            description: \"The relative time range of the monitor. Valid values of\\\n              \\ time ranges are `-5m`, `-10m`, `-15m`, `-30m`, `-1h`, `-3h`, `-6h`,\\\n              \\ `-12h`, or `-24h`.\"\n            example: -15m\n        description: A rule that defines how metrics monitors should evaluate missing\n          data and trigger notifications.\n    SloSliCondition:\n      allOf:\n      - $ref: '#/components/schemas/TriggerCondition'\n      - required:\n        - sliThreshold\n        type: object\n        properties:\n          sliThreshold:\n            type: number\n            description: The remaining SLI error budget threshold percentage.\n            format: double\n            example: 90\n        description: A rule that defines how SLO monitors should evaluate remaining\n          error budget and trigger notifications.\n    SloBurnRateCondition:\n      allOf:\n      - $ref: '#/components/schemas/TriggerCondition'\n      - required:\n        - burnRateThreshold\n        - timeRange\n        type: object\n        properties:\n          burnRateThreshold:\n            type: number\n            description: The burn rate percentage.\n            format: double\n            example: 90\n          timeRange:\n            type: string\n            description: The relative time range for the burn rate percentage evaluation.\n            example: -2h\n        description: A rule that defines parameters for burn rate based monitor evaluation\n          and trigger notifications.\n    AlertSignalContext:\n      type: object\n      description: Details of the alert signal context.\n      allOf:\n      - $ref: '#/components/schemas/SignalContext'\n      - required:\n        - alertId\n        type: object\n        properties:\n          alertId:\n            type: string\n            description: Alert Identifier.\n            example: 00000000F5000634\n    TraceQueryExpression:\n      required:\n      - type\n      type: object\n      properties:\n        type:\n          type: string\n          description: Expression type of the object model.\n      description: Base query expression object.\n      discriminator:\n        propertyName: type\n    AndTracingExpression:\n      allOf:\n      - $ref: '#/components/schemas/TraceQueryExpression'\n      - required:\n        - expressions\n        type: object\n        properties:\n          expressions:\n            type: array\n            description: \"Evaluates to true, if (and only if) all expressions evaluate\\\n              \\ to true, otherwise evaluates to false.\"\n            items:\n              $ref: '#/components/schemas/TraceQueryExpression'\n    OrTracingExpression:\n      description: \"Evaluates to true, if at least one expression evaluates to true,\\\n        \\ otherwise evaluates to false.\"\n      allOf:\n      - $ref: '#/components/schemas/TraceQueryExpression'\n      - required:\n        - expressions\n        type: object\n        properties:\n          expressions:\n            type: array\n            items:\n              $ref: '#/components/schemas/TraceQueryExpression'\n    MetricTracingFilter:\n      allOf:\n      - $ref: '#/components/schemas/TraceQueryExpression'\n      - required:\n        - metric\n        - operator\n        type: object\n        properties:\n          metric:\n            type: string\n            description: \"The name of the metric to filter by. The list of supported\\\n              \\ metrics can be retrieved using the [Trace Metrics](#operation/getMetrics)\\\n              \\ endpoint.\"\n          operator:\n            type: string\n            description: |-\n              The operator to use. Accepted values:\n                \u003ctable\u003e\n                  \u003ctr\u003e\n                    \u003cth\u003eOperator\u003c/th\u003e\n                    \u003cth\u003eAccepted value types\u003c/th\u003e\n                  \u003c/tr\u003e\n                  \u003ctr\u003e\n                    \u003cth\u003e\u0026lt; \u0026lt;= \u0026gt; \u0026gt;= =\u003c/th\u003e\n                    \u003cth\u003eDoubleTracingValue IntegerTracingValue\u003c/th\u003e\n                  \u003c/tr\u003e\n                  \u003ctr\u003e\n                    \u003cth\u003ebetween\u003c/th\u003e\n                    \u003cth\u003eRangeTracingValue of DoubleTracingValue / IntegerTracingValue\u003c/th\u003e\n                  \u003c/tr\u003e\n                \u003c/table\u003e\n          value:\n            $ref: '#/components/schemas/TracingValue'\n    FieldTracingFilter:\n      allOf:\n      - $ref: '#/components/schemas/TraceQueryExpression'\n      - required:\n        - field\n        - operator\n        type: object\n        properties:\n          field:\n            type: string\n            description: \"The field name to filter by. The list of supported field\\\n              \\ names can be retrieved using the [Trace Query Fields](#operation/getTraceQueryFields)\\\n              \\ endpoint.\"\n          operator:\n            type: string\n            description: |-\n              The operator to use. Accepted values:\n                \u003ctable\u003e\n                  \u003ctr\u003e\n                    \u003cth\u003eOperator\u003c/th\u003e\n                    \u003cth\u003eAccepted value types\u003c/th\u003e\n                  \u003c/tr\u003e\n                  \u003ctr\u003e\n                    \u003cth\u003e\u0026lt; \u0026lt;= \u0026gt; \u0026gt;= = !=\u003c/th\u003e\n                    \u003cth\u003eStringTracingValue DoubleTracingValue IntegerTracingValue DateTimeTracingValue\u003c/th\u003e\n                  \u003c/tr\u003e\n                  \u003ctr\u003e\n                    \u003cth\u003ein\u003c/th\u003e\n                    \u003cth\u003eArrayTracingValue of StringTracingValue / DoubleTracingValue / IntegerTracingValue / DateTimeTracingValue\u003c/th\u003e\n                  \u003c/tr\u003e\n                  \u003ctr\u003e\n                    \u003cth\u003ebetween\u003c/th\u003e\n                    \u003cth\u003eRangeTracingValue of StringTracingValue / DoubleTracingValue / IntegerTracingValue / DateTimeTracingValue\u003c/th\u003e\n                  \u003c/tr\u003e\n                \u003c/table\u003e\n          value:\n            $ref: '#/components/schemas/TracingValue'\n    RootSpanTracingFilter:\n      allOf:\n      - $ref: '#/components/schemas/TraceQueryExpression'\n      - required:\n        - field\n        - operator\n        type: object\n        properties:\n          field:\n            type: string\n            description: \"The field name to filter by. The list of supported field\\\n              \\ names can be retrieved using the [Trace Query Fields](#operation/getTraceQueryFields)\\\n              \\ endpoint.\"\n          operator:\n            type: string\n            description: |-\n              The operator to use. Accepted values:\n                \u003ctable\u003e\n                  \u003ctr\u003e\n                    \u003cth\u003eOperator\u003c/th\u003e\n                    \u003cth\u003eAccepted value types\u003c/th\u003e\n                  \u003c/tr\u003e\n                  \u003ctr\u003e\n                    \u003cth\u003e\u0026lt; \u0026lt;= \u0026gt; \u0026gt;= = !=\u003c/th\u003e\n                    \u003cth\u003eStringTracingValue DoubleTracingValue IntegerTracingValue DateTimeTracingValue\u003c/th\u003e\n                  \u003c/tr\u003e\n                  \u003ctr\u003e\n                    \u003cth\u003ein\u003c/th\u003e\n                    \u003cth\u003eArrayTracingValue of StringTracingValue / DoubleTracingValue / IntegerTracingValue / DateTimeTracingValue\u003c/th\u003e\n                  \u003c/tr\u003e\n                  \u003ctr\u003e\n                    \u003cth\u003ebetween\u003c/th\u003e\n                    \u003cth\u003eRangeTracingValue of StringTracingValue / DoubleTracingValue / IntegerTracingValue / DateTimeTracingValue\u003c/th\u003e\n                  \u003c/tr\u003e\n                \u003c/table\u003e\n          value:\n            $ref: '#/components/schemas/TracingValue'\n    TracingValue:\n      required:\n      - type\n      properties:\n        type:\n          type: string\n          description: Type of the value model.\n      discriminator:\n        propertyName: type\n    DoubleTracingValue:\n      allOf:\n      - $ref: '#/components/schemas/TracingValue'\n      - required:\n        - value\n        type: object\n        properties:\n          value:\n            type: number\n            format: double\n    IntegerTracingValue:\n      allOf:\n      - $ref: '#/components/schemas/TracingValue'\n      - required:\n        - value\n        type: object\n        properties:\n          value:\n            type: integer\n            format: int64\n    StringTracingValue:\n      allOf:\n      - $ref: '#/components/schemas/TracingValue'\n      - required:\n        - value\n        type: object\n        properties:\n          value:\n            type: string\n    DateTimeTracingValue:\n      allOf:\n      - $ref: '#/components/schemas/TracingValue'\n      - required:\n        - value\n        type: object\n        properties:\n          value:\n            type: string\n            description: \"Timestamp in UTC in the [ISO 8601 / RFC3339](https://tools.ietf.org/html/rfc3339)\\\n              \\ format.\"\n            format: date-time\n            example: 2019-11-22T09:00:00Z\n    ArrayTracingValue:\n      allOf:\n      - $ref: '#/components/schemas/TracingValue'\n      - required:\n        - values\n        type: object\n        properties:\n          values:\n            type: array\n            items:\n              $ref: '#/components/schemas/TracingValue'\n    RangeTracingValue:\n      allOf:\n      - $ref: '#/components/schemas/TracingValue'\n      - required:\n        - from\n        - to\n        type: object\n        properties:\n          from:\n            $ref: '#/components/schemas/TracingValue'\n          to:\n            $ref: '#/components/schemas/TracingValue'\n    EventAttributeValue:\n      required:\n      - type\n      properties:\n        type:\n          pattern: ^(BooleanEventAttributeValue|StringEventAttributeValue|DoubleEventAttributeValue|IntegerEventAttributeValue|BooleanArrayEventAttributeValue|StringArrayEventAttributeValue|DoubleArrayEventAttributeValue|IntegerArrayEventAttributeValue)$\n          type: string\n          description: Type of the event attribute value.\n          example: BooleanAttributeValue\n      discriminator:\n        propertyName: type\n    BooleanEventAttributeValue:\n      allOf:\n      - $ref: '#/components/schemas/EventAttributeValue'\n      - required:\n        - value\n        type: object\n        properties:\n          value:\n            type: boolean\n    DoubleEventAttributeValue:\n      allOf:\n      - $ref: '#/components/schemas/EventAttributeValue'\n      - required:\n        - value\n        type: object\n        properties:\n          value:\n            type: number\n            format: double\n    IntegerEventAttributeValue:\n      allOf:\n      - $ref: '#/components/schemas/EventAttributeValue'\n      - required:\n        - value\n        type: object\n        properties:\n          value:\n            type: integer\n            format: int64\n    StringEventAttributeValue:\n      allOf:\n      - $ref: '#/components/schemas/EventAttributeValue'\n      - required:\n        - value\n        type: object\n        properties:\n          value:\n            type: string\n    BooleanArrayEventAttributeValue:\n      allOf:\n      - $ref: '#/components/schemas/EventAttributeValue'\n      - required:\n        - values\n        type: object\n        properties:\n          values:\n            type: array\n            items:\n              type: boolean\n    DoubleArrayEventAttributeValue:\n      allOf:\n      - $ref: '#/components/schemas/EventAttributeValue'\n      - required:\n        - values\n        type: object\n        properties:\n          values:\n            type: array\n            items:\n              type: number\n              format: double\n    IntegerArrayEventAttributeValue:\n      allOf:\n      - $ref: '#/components/schemas/EventAttributeValue'\n      - required:\n        - values\n        type: object\n        properties:\n          values:\n            type: array\n            items:\n              type: integer\n              format: int64\n    StringArrayEventAttributeValue:\n      allOf:\n      - $ref: '#/components/schemas/EventAttributeValue'\n      - required:\n        - values\n        type: object\n        properties:\n          values:\n            type: array\n            items:\n              type: string\n    TraceHttpSpanInfo:\n      allOf:\n      - $ref: '#/components/schemas/TraceSpanInfo'\n      - type: object\n        properties:\n          method:\n            pattern: ^(GET|HEAD|POST|PUT|DELETE|CONNECT|OPTIONS|TRACE)$\n            type: string\n            description: HTTP method of the request for the associated span.\n            example: GET\n          url:\n            type: string\n            description: \"URL of the request being handled in this span, in the standard\\\n              \\ URI format.\"\n            example: https://domain.net/path/to?resource=here\n          statusCode:\n            type: integer\n            description: HTTP response status code for the associated span.\n            example: 200\n    TraceDbSpanInfo:\n      allOf:\n      - $ref: '#/components/schemas/TraceSpanInfo'\n      - type: object\n        properties:\n          dbType:\n            type: string\n            description: Database type.\n            example: sql\n          instance:\n            type: string\n            description: \"Database instance name, e.g. in java, if jdbc.url=\\\"jdbc:mysql://127.0.0.1:3306/customers\\\"\\\n              , the instance name is \\\"customers\\\".\"\n            example: customers\n          statement:\n            type: string\n            description: Database statement for the given database type.\n            example: SELECT * FROM user_table\n    TraceMessageBusSpanInfo:\n      allOf:\n      - $ref: '#/components/schemas/TraceSpanInfo'\n      - type: object\n        properties:\n          destination:\n            type: string\n            description: An address at which messages can be exchanged e.g. a Kafka\n              record has an associated \"topic name\" that can be stored using this\n              tag.\n            example: kafka.topic.name\n    AlertsLibraryBase:\n      required:\n      - name\n      - type\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the alert or folder.\n        description:\n          type: string\n          description: Description of the alert or folder.\n          default: \"\"\n        type:\n          type: string\n          description: |-\n            Type of the object model. Valid values:\n              1) AlertsLibraryAlert\n              2) AlertsLibraryFolder\n        isLocked:\n          type: boolean\n          description: Locking/Unlocking requires the `LockAlerts` capability. Locked\n            objects can only be `Localized`. Updating or moving requires unlocking\n            the object. Locking/Unlocking recursively locks all of the objects children.\n            All children of a locked object must be locked.\n          default: false\n      discriminator:\n        propertyName: type\n    AlertsLibraryBaseUpdate:\n      required:\n      - name\n      - type\n      - version\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the alert or folder.\n        description:\n          type: string\n          description: The description of the alert or folder.\n          default: \"\"\n        version:\n          type: integer\n          description: The version of the alert or folder.\n          format: int64\n        type:\n          type: string\n          description: Type of the object model.\n      discriminator:\n        propertyName: type\n    AlertsLibraryBaseResponse:\n      required:\n      - contentType\n      - createdAt\n      - createdBy\n      - description\n      - id\n      - isMutable\n      - isSystem\n      - modifiedAt\n      - modifiedBy\n      - name\n      - parentId\n      - type\n      - version\n      type: object\n      properties:\n        id:\n          type: string\n          description: Identifier of the alert or folder.\n        name:\n          type: string\n          description: Identifier of the alert or folder.\n        description:\n          type: string\n          description: Description of the alert or folder.\n        version:\n          type: integer\n          description: Version of the alert or folder.\n          format: int64\n        createdAt:\n          type: string\n          description: \"Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\\\n            \\ format.\"\n          format: date-time\n        createdBy:\n          type: string\n          description: Identifier of the user who created the resource.\n        modifiedAt:\n          type: string\n          description: Last modification timestamp in UTC.\n          format: date-time\n        modifiedBy:\n          type: string\n          description: Identifier of the user who last modified the resource.\n        parentId:\n          type: string\n          description: Identifier of the parent folder.\n        contentType:\n          type: string\n          description: |-\n            Type of the content. Valid values:\n              1) Alert\n              2) Folder\n        type:\n          type: string\n          description: Type of the object model.\n        isLocked:\n          type: boolean\n          description: Whether the object is locked.\n        isSystem:\n          type: boolean\n          description: System objects are objects provided by Sumo Logic. System objects\n            can only be localized. Non-local fields can't be updated.\n        isMutable:\n          type: boolean\n          description: Immutable objects are \"READ-ONLY\".\n      discriminator:\n        propertyName: type\n    AlertsLibraryFolder:\n      allOf:\n      - $ref: '#/components/schemas/AlertsLibraryBase'\n    AlertsLibraryFolderUpdate:\n      allOf:\n      - $ref: '#/components/schemas/AlertsLibraryBaseUpdate'\n    AlertsLibraryFolderResponse:\n      allOf:\n      - $ref: '#/components/schemas/AlertsLibraryBaseResponse'\n      - required:\n        - children\n        type: object\n        properties:\n          children:\n            type: array\n            description: \"Children of the folder. NOTE: Permissions field will not\\\n              \\ be filled (empty list) for children.\"\n            items:\n              $ref: '#/components/schemas/AlertsLibraryBaseResponse'\n    AlertsLibraryBaseExport:\n      required:\n      - name\n      - type\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the alert or folder.\n        description:\n          type: string\n          description: Description of the alert or folder.\n        type:\n          type: string\n          description: Type of the object model.\n      discriminator:\n        propertyName: type\n    AlertsLibraryFolderExport:\n      allOf:\n      - $ref: '#/components/schemas/AlertsLibraryBaseExport'\n      - type: object\n        properties:\n          children:\n            type: array\n            description: The items in the folder. A multi-type list of types alert\n              or folder.\n            items:\n              $ref: '#/components/schemas/AlertsLibraryBaseExport'\n    AlertsLibraryAlert:\n      allOf:\n      - $ref: '#/components/schemas/AlertsLibraryBase'\n      - type: object\n        properties:\n          monitorId:\n            type: string\n            description: The Id of the associated monitor.\n            example: 000000000000003C\n          resolvedAt:\n            type: string\n            description: The time at which the alert was resolved.\n            format: date-time\n            nullable: true\n            example: 2018-10-16T10:10:00Z\n          abnormalityStartTime:\n            type: string\n            description: The time at which the incident started.\n            format: date-time\n            example: 2018-10-16T09:10:00Z\n          alertType:\n            pattern: ^(Critical|Warning|MissingData)$\n            type: string\n            description: |-\n              The severity of the Alert. Valid values:\n                1. `Critical`\n                2. `Warning`\n                3. `MissingData`\n            example: Warning\n            x-pattern-message: \"should be either 'Critical', 'Warning' or 'MissingData'\"\n          status:\n            pattern: ^(Triggered|Resolved)$\n            type: string\n            description: |-\n              The status of the Alert. Valid values:\n                1. `Triggered`\n                2. `Resolved`\n            example: Triggered\n            x-pattern-message: should be either 'Triggered' or 'Resolved'\n          monitorQueries:\n            type: array\n            description: All queries from the monitor relevant to the alert.\n            items:\n              $ref: '#/components/schemas/AlertMonitorQuery'\n          triggerQueries:\n            type: array\n            description: All queries from the monitor relevant to the alert with triggered\n              time series filters.\n            items:\n              $ref: '#/components/schemas/AlertMonitorQuery'\n          monitorUrl:\n            type: string\n            description: URL for this monitor's view page\n          triggerQueryUrl:\n            type: string\n            description: A link to search with the triggering data and time range\n          triggerConditions:\n            type: array\n            description: Trigger conditions which were breached to create this Alert.\n            example:\n            - detectionMethod: StaticCondition\n              timeRange: 15m\n              triggerType: Critical\n              threshold: 50\n              thresholdType: GreaterThanOrEqual\n              occurrenceType: ResultCount\n              triggerSource: AllResults\n            - detectionMethod: StaticCondition\n              timeRange: 15m\n              triggerType: ResolvedCritical\n              threshold: 50\n              thresholdType: LessThan\n              occurrenceType: ResultCount\n              triggerSource: AllResults\n            items:\n              $ref: '#/components/schemas/TriggerCondition'\n          triggerValue:\n            type: number\n            description: The of the query result which breached the trigger condition.\n            format: double\n            example: 99.9\n          monitorType:\n            pattern: ^(Logs|Metrics)$\n            type: string\n            description: |-\n              The type of monitor. Valid values:\n                1. `Logs`: A logs query monitor.\n                2. `Metrics`: A metrics query monitor.\n            example: Logs\n            x-pattern-message: should be either 'Logs' or 'Metrics'\n          entityIds:\n            maxItems: 10000\n            minItems: 0\n            type: array\n            description: One or more entity identifiers involved in this Alert.\n            items:\n              maxLength: 32\n              minLength: 1\n              type: string\n              example: 0000000006743FDD\n          entities:\n            maxItems: 10000\n            minItems: 0\n            type: array\n            description: One or more entity involved in this Alert.\n            items:\n              $ref: '#/components/schemas/AlertEntityInfo'\n          notes:\n            type: string\n            example: High CPU is often fixed by scaling up the cluster. \u003clink to scale\n              up cluster\u003e\n          extraDetails:\n            $ref: '#/components/schemas/ExtraDetails'\n          alertCondition:\n            type: string\n            description: The condition which triggered this alert.\n            nullable: true\n            example: Metric value greater than or equal to 100.0 for all of the last\n              5 minutes.\n    AlertsLibraryAlertResponse:\n      allOf:\n      - $ref: '#/components/schemas/AlertsLibraryBaseResponse'\n      - type: object\n        properties:\n          monitorId:\n            type: string\n            description: The Id of the associated monitor.\n            example: 000000000000003C\n          resolvedAt:\n            type: string\n            description: The time at which the alert was resolved.\n            format: date-time\n            nullable: true\n            example: 2018-10-16T10:10:00Z\n          abnormalityStartTime:\n            type: string\n            description: The time at which the incident started.\n            format: date-time\n            example: 2018-10-16T09:10:00Z\n          alertType:\n            pattern: ^(Critical|Warning|MissingData)$\n            type: string\n            description: |-\n              The severity of the Alert. Valid values:\n                1. `Critical`\n                2. `Warning`\n                3. `MissingData`\n            example: Warning\n            x-pattern-message: \"should be either 'Critical', 'Warning' or 'MissingData'\"\n          status:\n            pattern: ^(Triggered|Resolved)$\n            type: string\n            description: |-\n              The status of the Alert. Valid values:\n                1. `Triggered`\n                2. `Resolved`\n            example: Triggered\n            x-pattern-message: should be either 'Triggered' or 'Resolved'\n          monitorQueries:\n            type: array\n            description: All queries from the monitor relevant to the alert.\n            items:\n              $ref: '#/components/schemas/AlertMonitorQuery'\n          triggerQueries:\n            type: array\n            description: All queries from the monitor relevant to the alert with triggered\n              time series filters.\n            items:\n              $ref: '#/components/schemas/AlertMonitorQuery'\n          monitorUrl:\n            type: string\n            description: URL for this monitor's view page\n          triggerQueryUrl:\n            type: string\n            description: A link to search with the triggering data and time range\n          triggerConditions:\n            type: array\n            description: Trigger conditions which were breached to create this Alert.\n            example:\n            - detectionMethod: StaticCondition\n              timeRange: 15m\n              triggerType: Critical\n              threshold: 50\n              thresholdType: GreaterThanOrEqual\n              occurrenceType: ResultCount\n              triggerSource: AllResults\n            - detectionMethod: StaticCondition\n              timeRange: 15m\n              triggerType: ResolvedCritical\n              threshold: 50\n              thresholdType: LessThan\n              occurrenceType: ResultCount\n              triggerSource: AllResults\n            items:\n              $ref: '#/components/schemas/TriggerCondition'\n          triggerValue:\n            type: number\n            description: The of the query result which breached the trigger condition.\n            format: double\n            example: 99.9\n          monitorType:\n            pattern: ^(Logs|Metrics)$\n            type: string\n            description: |-\n              The type of monitor. Valid values:\n                1. `Logs`: A logs query monitor.\n                2. `Metrics`: A metrics query monitor.\n            example: Logs\n            x-pattern-message: should be either 'Logs' or 'Metrics'\n          entityIds:\n            maxItems: 10000\n            minItems: 0\n            type: array\n            description: One or more entity identifiers involved in this Alert.\n            items:\n              maxLength: 32\n              minLength: 1\n              type: string\n              example: 0000000006743FDD\n          entities:\n            maxItems: 10000\n            minItems: 0\n            type: array\n            description: One or more entity involved in this Alert.\n            items:\n              $ref: '#/components/schemas/AlertEntityInfo'\n          notes:\n            type: string\n            example: High CPU is often fixed by scaling up the cluster. \u003clink to scale\n              up cluster\u003e\n          extraDetails:\n            $ref: '#/components/schemas/ExtraDetails'\n          alertCondition:\n            type: string\n            description: The condition which triggered this alert.\n            nullable: true\n            example: Metric value greater than or equal to 100.0 for all of the last\n              5 minutes.\n    AlertsLibraryAlertExport:\n      allOf:\n      - $ref: '#/components/schemas/AlertsLibraryBaseExport'\n      - type: object\n        properties:\n          monitorId:\n            type: string\n            description: The Id of the associated monitor.\n            example: 000000000000003C\n          resolvedAt:\n            type: string\n            description: The time at which the alert was resolved.\n            format: date-time\n            nullable: true\n            example: 2018-10-16T10:10:00Z\n          abnormalityStartTime:\n            type: string\n            description: The time at which the incident started.\n            format: date-time\n            example: 2018-10-16T09:10:00Z\n          alertType:\n            pattern: ^(Critical|Warning|MissingData)$\n            type: string\n            description: |-\n              The severity of the Alert. Valid values:\n                1. `Critical`\n                2. `Warning`\n                3. `MissingData`\n            example: Warning\n            x-pattern-message: \"should be either 'Critical', 'Warning' or 'MissingData'\"\n          status:\n            pattern: ^(Triggered|Resolved)$\n            type: string\n            description: |-\n              The status of the Alert. Valid values:\n                1. `Triggered`\n                2. `Resolved`\n            example: Triggered\n            x-pattern-message: should be either 'Triggered' or 'Resolved'\n          monitorQueries:\n            type: array\n            description: All queries from the monitor relevant to the alert.\n            items:\n              $ref: '#/components/schemas/AlertMonitorQuery'\n          triggerQueries:\n            type: array\n            description: All queries from the monitor relevant to the alert with triggered\n              time series filters.\n            items:\n              $ref: '#/components/schemas/AlertMonitorQuery'\n          monitorUrl:\n            type: string\n            description: URL for this monitor's view page\n          triggerQueryUrl:\n            type: string\n            description: A link to search with the triggering data and time range\n          triggerConditions:\n            type: array\n            description: Trigger conditions which were breached to create this Alert.\n            example:\n            - detectionMethod: StaticCondition\n              timeRange: 15m\n              triggerType: Critical\n              threshold: 50\n              thresholdType: GreaterThanOrEqual\n              occurrenceType: ResultCount\n              triggerSource: AllResults\n            - detectionMethod: StaticCondition\n              timeRange: 15m\n              triggerType: ResolvedCritical\n              threshold: 50\n              thresholdType: LessThan\n              occurrenceType: ResultCount\n              triggerSource: AllResults\n            items:\n              $ref: '#/components/schemas/TriggerCondition'\n          triggerValue:\n            type: number\n            description: The of the query result which breached the trigger condition.\n            format: double\n            example: 99.9\n          monitorType:\n            pattern: ^(Logs|Metrics)$\n            type: string\n            description: |-\n              The type of monitor. Valid values:\n                1. `Logs`: A logs query monitor.\n                2. `Metrics`: A metrics query monitor.\n            example: Logs\n            x-pattern-message: should be either 'Logs' or 'Metrics'\n          entityIds:\n            maxItems: 10000\n            minItems: 0\n            type: array\n            description: One or more entity identifiers involved in this Alert.\n            items:\n              maxLength: 32\n              minLength: 1\n              type: string\n              example: 0000000006743FDD\n          entities:\n            maxItems: 10000\n            minItems: 0\n            type: array\n            description: One or more entity involved in this Alert.\n            items:\n              $ref: '#/components/schemas/AlertEntityInfo'\n          notes:\n            type: string\n            example: High CPU is often fixed by scaling up the cluster. \u003clink to scale\n              up cluster\u003e\n          extraDetails:\n            $ref: '#/components/schemas/ExtraDetails'\n          alertCondition:\n            type: string\n            description: The condition which triggered this alert.\n            nullable: true\n            example: Metric value greater than or equal to 100.0 for all of the last\n              5 minutes.\n    AlertsLibraryAlertUpdate:\n      allOf:\n      - $ref: '#/components/schemas/AlertsLibraryBaseUpdate'\n      - type: object\n        properties:\n          monitorId:\n            type: string\n            description: The Id of the associated monitor.\n            example: 000000000000003C\n          resolvedAt:\n            type: string\n            description: The time at which the alert was resolved.\n            format: date-time\n            nullable: true\n            example: 2018-10-16T10:10:00Z\n          abnormalityStartTime:\n            type: string\n            description: The time at which the incident started.\n            format: date-time\n            example: 2018-10-16T09:10:00Z\n          alertType:\n            pattern: ^(Critical|Warning|MissingData)$\n            type: string\n            description: |-\n              The severity of the Alert. Valid values:\n                1. `Critical`\n                2. `Warning`\n                3. `MissingData`\n            example: Warning\n            x-pattern-message: \"should be either 'Critical', 'Warning' or 'MissingData'\"\n          status:\n            pattern: ^(Triggered|Resolved)$\n            type: string\n            description: |-\n              The status of the Alert. Valid values:\n                1. `Triggered`\n                2. `Resolved`\n            example: Triggered\n            x-pattern-message: should be either 'Triggered' or 'Resolved'\n          monitorQueries:\n            type: array\n            description: All queries from the monitor relevant to the alert.\n            items:\n              $ref: '#/components/schemas/AlertMonitorQuery'\n          triggerQueries:\n            type: array\n            description: All queries from the monitor relevant to the alert with triggered\n              time series filters.\n            items:\n              $ref: '#/components/schemas/AlertMonitorQuery'\n          monitorUrl:\n            type: string\n            description: URL for this monitor's view page\n          triggerQueryUrl:\n            type: string\n            description: A link to search with the triggering data and time range\n          triggerConditions:\n            type: array\n            description: Trigger conditions which were breached to create this Alert.\n            example:\n            - detectionMethod: StaticCondition\n              timeRange: 15m\n              triggerType: Critical\n              threshold: 50\n              thresholdType: GreaterThanOrEqual\n              occurrenceType: ResultCount\n              triggerSource: AllResults\n            - detectionMethod: StaticCondition\n              timeRange: 15m\n              triggerType: ResolvedCritical\n              threshold: 50\n              thresholdType: LessThan\n              occurrenceType: ResultCount\n              triggerSource: AllResults\n            items:\n              $ref: '#/components/schemas/TriggerCondition'\n          triggerValue:\n            type: number\n            description: The of the query result which breached the trigger condition.\n            format: double\n            example: 99.9\n          monitorType:\n            pattern: ^(Logs|Metrics)$\n            type: string\n            description: |-\n              The type of monitor. Valid values:\n                1. `Logs`: A logs query monitor.\n                2. `Metrics`: A metrics query monitor.\n            example: Logs\n            x-pattern-message: should be either 'Logs' or 'Metrics'\n          entityIds:\n            maxItems: 10000\n            minItems: 0\n            type: array\n            description: One or more entity identifiers involved in this Alert.\n            items:\n              maxLength: 32\n              minLength: 1\n              type: string\n              example: 0000000006743FDD\n          entities:\n            maxItems: 10000\n            minItems: 0\n            type: array\n            description: One or more entity involved in this Alert.\n            items:\n              $ref: '#/components/schemas/AlertEntityInfo'\n          notes:\n            type: string\n            example: High CPU is often fixed by scaling up the cluster. \u003clink to scale\n              up cluster\u003e\n          extraDetails:\n            $ref: '#/components/schemas/ExtraDetails'\n          alertCondition:\n            type: string\n            description: The condition which triggered this alert.\n            nullable: true\n            example: Metric value greater than or equal to 100.0 for all of the last\n              5 minutes.\n    AlertMonitorQuery:\n      allOf:\n      - $ref: '#/components/schemas/MonitorQuery'\n      - required:\n        - isTriggerRow\n        type: object\n        properties:\n          isTriggerRow:\n            type: boolean\n            description: Indicates whether the current row is the trigger (final)\n              row.\n            example: false\n        description: Monitor Query for the Alert.\n    ExtraDetails:\n      type: object\n      properties:\n        details:\n          type: array\n          items:\n            $ref: '#/components/schemas/KeyValuePair'\n    KeyValuePair:\n      properties:\n        key:\n          type: string\n          description: Name of the key.\n          example: cluster\n        value:\n          type: string\n          description: Value of the key.\n          example: cluster1\n    AlertEntityInfo:\n      type: object\n      properties:\n        entityId:\n          type: string\n          description: Identifier of the entity.\n          example: f11046564fc9fd093f92fdca24e2823f\n        entityName:\n          type: string\n          description: Name of the entity.\n          example: _sourceCategory=worker _sourceHost=node-1\n      description: An entity's name and Id.\n    MonitorsLibraryBase:\n      required:\n      - name\n      - type\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the monitor or folder.\n        description:\n          type: string\n          description: Description of the monitor or folder.\n          default: \"\"\n        type:\n          type: string\n          description: |-\n            Type of the object model. Valid values:\n              1) MonitorsLibraryMonitor\n              2) MonitorsLibraryFolder\n      discriminator:\n        propertyName: type\n    MonitorsLibraryBaseUpdate:\n      required:\n      - name\n      - type\n      - version\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the monitor or folder.\n        description:\n          type: string\n          description: The description of the monitor or folder.\n          default: \"\"\n        version:\n          type: integer\n          description: The version of the monitor or folder.\n          format: int64\n        type:\n          type: string\n          description: Type of the object model.\n      discriminator:\n        propertyName: type\n    MonitorsLibraryBaseResponse:\n      required:\n      - contentType\n      - createdAt\n      - createdBy\n      - description\n      - id\n      - isMutable\n      - isSystem\n      - modifiedAt\n      - modifiedBy\n      - name\n      - parentId\n      - type\n      - version\n      type: object\n      properties:\n        id:\n          type: string\n          description: Identifier of the monitor or folder.\n        name:\n          type: string\n          description: Identifier of the monitor or folder.\n        description:\n          type: string\n          description: Description of the monitor or folder.\n        version:\n          type: integer\n          description: Version of the monitor or folder.\n          format: int64\n        createdAt:\n          type: string\n          description: \"Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\\\n            \\ format.\"\n          format: date-time\n        createdBy:\n          type: string\n          description: Identifier of the user who created the resource.\n        modifiedAt:\n          type: string\n          description: Last modification timestamp in UTC.\n          format: date-time\n        modifiedBy:\n          type: string\n          description: Identifier of the user who last modified the resource.\n        parentId:\n          type: string\n          description: Identifier of the parent folder.\n        contentType:\n          type: string\n          description: |-\n            Type of the content. Valid values:\n              1) Monitor\n              2) Folder\n        type:\n          type: string\n          description: Type of the object model.\n        isSystem:\n          type: boolean\n          description: System objects are objects provided by Sumo Logic. System objects\n            can only be localized. Non-local fields can't be updated.\n        isMutable:\n          type: boolean\n          description: Immutable objects are \"READ-ONLY\".\n        permissions:\n          type: array\n          description: \"Aggregated permission summary for the calling user. If detailed\\\n            \\ permission statements are required, please call list permissions endpoint.\"\n          example:\n          - Read\n          - Delete\n          items:\n            type: string\n      discriminator:\n        propertyName: type\n    MonitorsLibraryFolder:\n      allOf:\n      - $ref: '#/components/schemas/MonitorsLibraryBase'\n    MonitorsLibraryFolderUpdate:\n      allOf:\n      - $ref: '#/components/schemas/MonitorsLibraryBaseUpdate'\n    MonitorsLibraryFolderResponse:\n      allOf:\n      - $ref: '#/components/schemas/MonitorsLibraryBaseResponse'\n      - required:\n        - children\n        - permissions\n        type: object\n        properties:\n          permissions:\n            type: array\n            description: \"Aggregated permission summary for the calling user. If detailed\\\n              \\ permission statements are required, please call list permissions endpoint.\"\n            example:\n            - Read\n            - Delete\n            items:\n              type: string\n          children:\n            type: array\n            description: \"Children of the folder. NOTE: Permissions field will not\\\n              \\ be filled (empty list) for children.\"\n            items:\n              $ref: '#/components/schemas/MonitorsLibraryBaseResponse'\n    MonitorsLibraryBaseExport:\n      required:\n      - name\n      - type\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the monitor or folder.\n        description:\n          type: string\n          description: Description of the monitor or folder.\n        type:\n          type: string\n          description: Type of the object model.\n      discriminator:\n        propertyName: type\n    MonitorsLibraryFolderExport:\n      allOf:\n      - $ref: '#/components/schemas/MonitorsLibraryBaseExport'\n      - type: object\n        properties:\n          children:\n            type: array\n            description: The items in the folder. A multi-type list of types monitor\n              or folder.\n            items:\n              $ref: '#/components/schemas/MonitorsLibraryBaseExport'\n    MonitorsLibraryMonitor:\n      allOf:\n      - $ref: '#/components/schemas/MonitorsLibraryBase'\n      - required:\n        - monitorType\n        - queries\n        - triggers\n        type: object\n        properties:\n          monitorType:\n            pattern: ^(Logs|Metrics|Slo)$\n            type: string\n            description: |-\n              The type of monitor. Valid values:\n                1. `Logs`: A logs query monitor.\n                2. `Metrics`: A metrics query monitor.\n                3. `Slo`: A SLO based monitor. Currently SLO based monitor is available in closed beta (Notify your Sumo Logic representative in order to get the early access).\n            example: Logs\n            x-pattern-message: should be 'Logs' or 'Metrics' or 'Slo'\n          evaluationDelay:\n            type: string\n            description: The delay duration for evaluating the monitor (relative to\n              current time). The timerange of monitor will be shifted in the past\n              by this delay time.\n            example: 5m\n            default: 0m\n          alertName:\n            type: string\n            description: The name of the alert(s) triggered from this monitor. Monitor\n              name will be used if not specified.\n          queries:\n            uniqueItems: true\n            type: array\n            description: All queries from the monitor.\n            items:\n              $ref: '#/components/schemas/MonitorQuery'\n          triggers:\n            type: array\n            description: Defines the conditions of when to send notifications.\n            example:\n            - detectionMethod: StaticCondition\n              timeRange: 15m\n              triggerType: Critical\n              threshold: 50\n              thresholdType: GreaterThanOrEqual\n              occurrenceType: ResultCount\n              triggerSource: AllResults\n            - detectionMethod: StaticCondition\n              timeRange: 15m\n              triggerType: ResolvedCritical\n              threshold: 50\n              thresholdType: LessThan\n              occurrenceType: ResultCount\n              triggerSource: AllResults\n            items:\n              $ref: '#/components/schemas/TriggerCondition'\n          notifications:\n            type: array\n            description: The notifications the monitor will send when the respective\n              trigger condition is met.\n            example:\n            - notification:\n                connectionType: Slack\n                connectionId: \"0000000000000005\"\n              runForTriggerTypes:\n              - Critical\n            - notification:\n                connectionType: Email\n                messageBody: Alert Triggered!\n                recipients:\n                - john@doe.com\n                subject: \"Monitor Alert: {{TriggerType}} on {{SearchName}}\"\n                timeZone: America/Los_Angeles\n              runForTriggerTypes:\n              - Critical\n            items:\n              $ref: '#/components/schemas/MonitorNotification'\n            default: []\n          isDisabled:\n            type: boolean\n            description: \"Whether or not the monitor is disabled. Disabled monitors\\\n              \\ will not run, and will not generate or send notifications.\"\n            example: false\n            default: false\n          groupNotifications:\n            type: boolean\n            description: Whether or not to group notifications for individual items\n              that meet the trigger condition.\n            example: true\n            default: true\n          playbook:\n            maxLength: 4096\n            type: string\n            description: \"Notes such as links and instruction to help you resolve\\\n              \\ alerts triggered by this monitor. {{Markdown}} supported. It will\\\n              \\ be enabled only if available for your organization. Please contact\\\n              \\ your Sumo Logic account team to learn more.\"\n            example: This issue typically happens when database calls are timing out.\n              Look at ServiceA's dashboard to investigate further\n            default: \"\"\n    MonitorsLibraryMonitorResponse:\n      allOf:\n      - $ref: '#/components/schemas/MonitorsLibraryBaseResponse'\n      - required:\n        - monitorType\n        - queries\n        - triggers\n        type: object\n        properties:\n          monitorType:\n            pattern: ^(Logs|Metrics|Slo)$\n            type: string\n            description: |-\n              The type of monitor. Valid values:\n                1. `Logs`: A logs query monitor.\n                2. `Metrics`: A metrics query monitor.\n                3. `Slo`: A SLO based monitor. Currently SLO based monitor is available in closed beta (Notify your Sumo Logic representative in order to get the early access).\n            example: Logs\n            x-pattern-message: should be 'Logs' or 'Metrics' or 'Slo'\n          evaluationDelay:\n            type: string\n            description: The delay duration for evaluating the monitor (relative to\n              current time). The timerange of monitor will be shifted in the past\n              by this delay time.\n            example: 5m\n            default: 0m\n          alertName:\n            type: string\n            description: The name of the alert(s) triggered from this monitor. Monitor\n              name will be used if not specified.\n          queries:\n            uniqueItems: true\n            type: array\n            description: All queries from the monitor.\n            items:\n              $ref: '#/components/schemas/MonitorQuery'\n          triggers:\n            type: array\n            description: Defines the conditions of when to send notifications.\n            example:\n            - detectionMethod: StaticCondition\n              timeRange: 15m\n              triggerType: Critical\n              threshold: 50\n              thresholdType: GreaterThanOrEqual\n              occurrenceType: ResultCount\n              triggerSource: AllResults\n            - detectionMethod: StaticCondition\n              timeRange: 15m\n              triggerType: ResolvedCritical\n              threshold: 50\n              thresholdType: LessThan\n              occurrenceType: ResultCount\n              triggerSource: AllResults\n            items:\n              $ref: '#/components/schemas/TriggerCondition'\n          notifications:\n            type: array\n            description: The notifications the monitor will send when the respective\n              trigger condition is met.\n            example:\n            - notification:\n                connectionType: Slack\n                connectionId: \"0000000000000005\"\n              runForTriggerTypes:\n              - Critical\n            - notification:\n                connectionType: Email\n                messageBody: Alert Triggered!\n                recipients:\n                - john@doe.com\n                subject: \"Monitor Alert: {{TriggerType}} on {{SearchName}}\"\n                timeZone: America/Los_Angeles\n              runForTriggerTypes:\n              - Critical\n            items:\n              $ref: '#/components/schemas/MonitorNotification'\n            default: []\n          isDisabled:\n            type: boolean\n            description: \"Whether or not the monitor is disabled. Disabled monitors\\\n              \\ will not run, and will not generate or send notifications.\"\n            example: false\n            default: false\n          status:\n            uniqueItems: true\n            type: array\n            description: |-\n              The current status of the monitor. Each monitor can have one or more status values. Valid values:\n                1. `Normal`: The monitor is running normally and does not have any currently triggered conditions.\n                2. `Critical`: The Critical trigger condition has been met.\n                3. `Warning`: The Warning trigger condition has been met.\n                4. `MissingData`: The MissingData trigger condition has been met.\n                5. `Disabled`: The monitor has been disabled and is not currently running.\n            example: \"[Normal]\"\n            items:\n              type: string\n          groupNotifications:\n            type: boolean\n            description: Whether or not to group notifications for individual items\n              that meet the trigger condition.\n            example: true\n            default: true\n          warnings:\n            type: object\n            additionalProperties:\n              type: string\n            description: Monitor manager warnings\n          playbook:\n            maxLength: 4096\n            type: string\n            description: \"Notes such as links and instruction to help you resolve\\\n              \\ alerts triggered by this monitor. {{Markdown}} supported. It will\\\n              \\ be enabled only if available for your organization. Please contact\\\n              \\ your Sumo Logic account team to learn more.\"\n            example: This issue typically happens when database calls are timing out.\n              Look at ServiceA's dashboard to investigate further\n            default: \"\"\n    MonitorsLibraryMonitorExport:\n      allOf:\n      - $ref: '#/components/schemas/MonitorsLibraryBaseExport'\n      - required:\n        - monitorType\n        - queries\n        - triggers\n        type: object\n        properties:\n          monitorType:\n            pattern: ^(Logs|Metrics|Slo)$\n            type: string\n            description: |-\n              The type of monitor. Valid values:\n                1. `Logs`: A logs query monitor.\n                2. `Metrics`: A metrics query monitor.\n                3. `Slo`: A SLO based monitor. Currently SLO based monitor is available in closed beta (Notify your Sumo Logic representative in order to get the early access).\n            example: Logs\n            x-pattern-message: should be 'Logs' or 'Metrics' or 'Slo'\n          evaluationDelay:\n            type: string\n            description: The delay duration for evaluating the monitor (relative to\n              current time). The timerange of monitor will be shifted in the past\n              by this delay time.\n            example: 5m\n            default: 0m\n          alertName:\n            type: string\n            description: The name of the alert(s) triggered from this monitor. Monitor\n              name will be used if not specified.\n          queries:\n            uniqueItems: true\n            type: array\n            description: All queries from the monitor.\n            items:\n              $ref: '#/components/schemas/MonitorQuery'\n          triggers:\n            type: array\n            description: Defines the conditions of when to send notifications.\n            example:\n            - detectionMethod: StaticCondition\n              timeRange: 15m\n              triggerType: Critical\n              threshold: 50\n              thresholdType: GreaterThanOrEqual\n              occurrenceType: ResultCount\n              triggerSource: AllResults\n            - detectionMethod: StaticCondition\n              timeRange: 15m\n              triggerType: ResolvedCritical\n              threshold: 50\n              thresholdType: LessThan\n              occurrenceType: ResultCount\n              triggerSource: AllResults\n            items:\n              $ref: '#/components/schemas/TriggerCondition'\n          notifications:\n            type: array\n            description: The notifications the monitor will send when the respective\n              trigger condition is met.\n            example:\n            - notification:\n                connectionType: Slack\n                connectionId: \"0000000000000005\"\n              runForTriggerTypes:\n              - Critical\n            - notification:\n                connectionType: Email\n                messageBody: Alert Triggered!\n                recipients:\n                - john@doe.com\n                subject: \"Monitor Alert: {{TriggerType}} on {{SearchName}}\"\n                timeZone: America/Los_Angeles\n              runForTriggerTypes:\n              - Critical\n            items:\n              $ref: '#/components/schemas/MonitorNotification'\n            default: []\n          isDisabled:\n            type: boolean\n            description: \"Whether or not the monitor is disabled. Disabled monitors\\\n              \\ will not run, and will not generate or send notifications.\"\n            example: false\n            default: false\n          groupNotifications:\n            type: boolean\n            description: Whether or not to group notifications for individual items\n              that meet the trigger condition.\n            example: true\n            default: true\n          playbook:\n            maxLength: 4096\n            type: string\n            description: \"Notes such as links and instruction to help you resolve\\\n              \\ alerts triggered by this monitor. {{Markdown}} supported. It will\\\n              \\ be enabled only if available for your organization. Please contact\\\n              \\ your Sumo Logic account team to learn more.\"\n            example: This issue typically happens when database calls are timing out.\n              Look at ServiceA's dashboard to investigate further\n            default: \"\"\n    MonitorsLibraryMonitorUpdate:\n      allOf:\n      - $ref: '#/components/schemas/MonitorsLibraryBaseUpdate'\n      - required:\n        - monitorType\n        - queries\n        - triggers\n        type: object\n        properties:\n          monitorType:\n            pattern: ^(Logs|Metrics|Slo)$\n            type: string\n            description: |-\n              The type of monitor. Valid values:\n                1. `Logs`: A logs query monitor.\n                2. `Metrics`: A metrics query monitor.\n                3. `Slo`: A SLO based monitor. Currently SLO based monitor is available in closed beta (Notify your Sumo Logic representative in order to get the early access).\n            example: Logs\n            x-pattern-message: should be 'Logs' or 'Metrics' or 'Slo'\n          evaluationDelay:\n            type: string\n            description: The delay duration for evaluating the monitor (relative to\n              current time). The timerange of monitor will be shifted in the past\n              by this delay time.\n            example: 5m\n            default: 0m\n          alertName:\n            type: string\n            description: The name of the alert(s) triggered from this monitor. Monitor\n              name will be used if not specified.\n          queries:\n            uniqueItems: true\n            type: array\n            description: All queries from the monitor.\n            items:\n              $ref: '#/components/schemas/MonitorQuery'\n          triggers:\n            type: array\n            description: Defines the conditions of when to send notifications.\n            example:\n            - detectionMethod: StaticCondition\n              timeRange: 15m\n              triggerType: Critical\n              threshold: 50\n              thresholdType: GreaterThanOrEqual\n              occurrenceType: ResultCount\n              triggerSource: AllResults\n            - detectionMethod: StaticCondition\n              timeRange: 15m\n              triggerType: ResolvedCritical\n              threshold: 50\n              thresholdType: LessThan\n              occurrenceType: ResultCount\n              triggerSource: AllResults\n            items:\n              $ref: '#/components/schemas/TriggerCondition'\n          notifications:\n            type: array\n            description: The notifications the monitor will send when the respective\n              trigger condition is met.\n            example:\n            - notification:\n                connectionType: Slack\n                connectionId: \"0000000000000005\"\n              runForTriggerTypes:\n              - Critical\n            - notification:\n                connectionType: Email\n                messageBody: Alert Triggered!\n                recipients:\n                - john@doe.com\n                subject: \"Monitor Alert: {{TriggerType}} on {{SearchName}}\"\n                timeZone: America/Los_Angeles\n              runForTriggerTypes:\n              - Critical\n            items:\n              $ref: '#/components/schemas/MonitorNotification'\n            default: []\n          isDisabled:\n            type: boolean\n            description: \"Whether or not the monitor is disabled. Disabled monitors\\\n              \\ will not run, and will not generate or send notifications.\"\n            example: false\n            default: false\n          groupNotifications:\n            type: boolean\n            description: Whether or not to group notifications for individual items\n              that meet the trigger condition.\n            example: true\n            default: true\n          playbook:\n            maxLength: 4096\n            type: string\n            description: \"Notes such as links and instruction to help you resolve\\\n              \\ alerts triggered by this monitor. {{Markdown}} supported. It will\\\n              \\ be enabled only if available for your organization. Please contact\\\n              \\ your Sumo Logic account team to learn more.\"\n            example: This issue typically happens when database calls are timing out.\n              Look at ServiceA's dashboard to investigate further\n            default: \"\"\n    MonitorNotification:\n      required:\n      - notification\n      - runForTriggerTypes\n      type: object\n      properties:\n        notification:\n          $ref: '#/components/schemas/Action'\n        runForTriggerTypes:\n          uniqueItems: true\n          type: array\n          description: The trigger types assigned to send this notification.\n          items:\n            type: string\n    RunAs:\n      required:\n      - runAsId\n      type: object\n      properties:\n        runAsId:\n          type: string\n          description: \"The runAsId indicates the context in which monitors will run.\\\n            \\ If not provided, then it will run in the context of the monitor author.\"\n          example: 00000000000001DF\n    SlosLibraryBase:\n      required:\n      - name\n      - type\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the slo or folder.\n        description:\n          type: string\n          description: Description of the slo or folder.\n          default: \"\"\n        type:\n          type: string\n          description: |-\n            Type of the object model. Valid values:\n              1) SlosLibrarySlo\n              2) SlosLibraryFolder\n      discriminator:\n        propertyName: type\n    SlosLibraryBaseUpdate:\n      required:\n      - name\n      - type\n      - version\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the slo or folder.\n        description:\n          type: string\n          description: The description of the slo or folder.\n          default: \"\"\n        version:\n          type: integer\n          description: The version of the slo or folder.\n          format: int64\n        type:\n          type: string\n          description: Type of the object model.\n      discriminator:\n        propertyName: type\n    SlosLibraryBaseResponse:\n      required:\n      - contentType\n      - createdAt\n      - createdBy\n      - description\n      - id\n      - isMutable\n      - isSystem\n      - modifiedAt\n      - modifiedBy\n      - name\n      - parentId\n      - type\n      - version\n      type: object\n      properties:\n        id:\n          type: string\n          description: Identifier of the slo or folder.\n        name:\n          type: string\n          description: Identifier of the slo or folder.\n        description:\n          type: string\n          description: Description of the slo or folder.\n        version:\n          type: integer\n          description: Version of the slo or folder.\n          format: int64\n        createdAt:\n          type: string\n          description: \"Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\\\n            \\ format.\"\n          format: date-time\n        createdBy:\n          type: string\n          description: Identifier of the user who created the resource.\n        modifiedAt:\n          type: string\n          description: Last modification timestamp in UTC.\n          format: date-time\n        modifiedBy:\n          type: string\n          description: Identifier of the user who last modified the resource.\n        parentId:\n          type: string\n          description: Identifier of the parent folder.\n        contentType:\n          type: string\n          description: |-\n            Type of the content. Valid values:\n              1) Slo\n              2) Folder\n        type:\n          type: string\n          description: Type of the object model.\n        isSystem:\n          type: boolean\n          description: System objects are objects provided by Sumo Logic. System objects\n            can only be localized. Non-local fields can't be updated.\n        isMutable:\n          type: boolean\n          description: Immutable objects are \"READ-ONLY\".\n        permissions:\n          type: array\n          description: \"Aggregated permission summary for the calling user. If detailed\\\n            \\ permission statements are required, please call list permissions endpoint.\"\n          example:\n          - Read\n          - Delete\n          items:\n            type: string\n      discriminator:\n        propertyName: type\n    SlosLibraryFolder:\n      allOf:\n      - $ref: '#/components/schemas/SlosLibraryBase'\n    SlosLibraryFolderUpdate:\n      allOf:\n      - $ref: '#/components/schemas/SlosLibraryBaseUpdate'\n    SlosLibraryFolderResponse:\n      allOf:\n      - $ref: '#/components/schemas/SlosLibraryBaseResponse'\n      - required:\n        - children\n        - permissions\n        type: object\n        properties:\n          permissions:\n            type: array\n            description: \"Aggregated permission summary for the calling user. If detailed\\\n              \\ permission statements are required, please call list permissions endpoint.\"\n            example:\n            - Read\n            - Delete\n            items:\n              type: string\n          children:\n            type: array\n            description: \"Children of the folder. NOTE: Permissions field will not\\\n              \\ be filled (empty list) for children.\"\n            items:\n              $ref: '#/components/schemas/SlosLibraryBaseResponse'\n    SlosLibraryBaseExport:\n      required:\n      - name\n      - type\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the slo or folder.\n        description:\n          type: string\n          description: Description of the slo or folder.\n        type:\n          type: string\n          description: Type of the object model.\n      discriminator:\n        propertyName: type\n    SlosLibraryFolderExport:\n      allOf:\n      - $ref: '#/components/schemas/SlosLibraryBaseExport'\n      - type: object\n        properties:\n          children:\n            type: array\n            description: The items in the folder. A multi-type list of types slo or\n              folder.\n            items:\n              $ref: '#/components/schemas/SlosLibraryBaseExport'\n    SlosLibrarySlo:\n      allOf:\n      - $ref: '#/components/schemas/SlosLibraryBase'\n      - required:\n        - compliance\n        - indicator\n        - signalType\n        type: object\n        properties:\n          signalType:\n            pattern: ^(Latency|Error|Throughput|Availability|Other)$\n            type: string\n            description: \"Type of SLI Signal (latency, error, throughput, availability\\\n              \\ or other).\"\n            example: Latency\n            x-pattern-message: \"Must be `Latency`, `Error`, `Throughput`, `Availability`\\\n              \\ or `Other`\"\n          compliance:\n            $ref: '#/components/schemas/Compliance'\n          indicator:\n            $ref: '#/components/schemas/Sli'\n          service:\n            type: string\n            description: Name of the service.\n          application:\n            type: string\n            description: Name of the application.\n    SlosLibrarySloResponse:\n      allOf:\n      - $ref: '#/components/schemas/SlosLibraryBaseResponse'\n      - required:\n        - compliance\n        - indicator\n        - signalType\n        type: object\n        properties:\n          signalType:\n            pattern: ^(Latency|Error|Throughput|Availability|Other)$\n            type: string\n            description: \"Type of SLI Signal (latency, error, throughput, availability\\\n              \\ or other).\"\n            example: Latency\n            x-pattern-message: \"Must be `Latency`, `Error`, `Throughput`, `Availability`\\\n              \\ or `Other`\"\n          compliance:\n            $ref: '#/components/schemas/Compliance'\n          indicator:\n            $ref: '#/components/schemas/Sli'\n          service:\n            type: string\n            description: Name of the service.\n          application:\n            type: string\n            description: Name of the application.\n          sloVersion:\n            type: integer\n            description: \"Current SLO Version. This is incremented on every change\\\n              \\ of a critical field of the SLO (i.e, SLI or Compliance period timezone),\\\n              \\ that requires a recompute of the SLI values over the compliance period.\"\n            format: int64\n    SlosLibrarySloExport:\n      allOf:\n      - $ref: '#/components/schemas/SlosLibraryBaseExport'\n      - required:\n        - compliance\n        - indicator\n        - signalType\n        type: object\n        properties:\n          signalType:\n            pattern: ^(Latency|Error|Throughput|Availability|Other)$\n            type: string\n            description: \"Type of SLI Signal (latency, error, throughput, availability\\\n              \\ or other).\"\n            example: Latency\n            x-pattern-message: \"Must be `Latency`, `Error`, `Throughput`, `Availability`\\\n              \\ or `Other`\"\n          compliance:\n            $ref: '#/components/schemas/Compliance'\n          indicator:\n            $ref: '#/components/schemas/Sli'\n          service:\n            type: string\n            description: Name of the service.\n          application:\n            type: string\n            description: Name of the application.\n    SlosLibrarySloUpdate:\n      allOf:\n      - $ref: '#/components/schemas/SlosLibraryBaseUpdate'\n      - required:\n        - compliance\n        - indicator\n        - signalType\n        type: object\n        properties:\n          signalType:\n            pattern: ^(Latency|Error|Throughput|Availability|Other)$\n            type: string\n            description: \"Type of SLI Signal (latency, error, throughput, availability\\\n              \\ or other).\"\n            example: Latency\n            x-pattern-message: \"Must be `Latency`, `Error`, `Throughput`, `Availability`\\\n              \\ or `Other`\"\n          compliance:\n            $ref: '#/components/schemas/Compliance'\n          indicator:\n            $ref: '#/components/schemas/Sli'\n          service:\n            type: string\n            description: Name of the service.\n          application:\n            type: string\n            description: Name of the application.\n    Compliance:\n      required:\n      - complianceType\n      - target\n      - timezone\n      type: object\n      properties:\n        complianceType:\n          pattern: ^(Rolling|Calendar)$\n          type: string\n          description: Compliance Type (rolling or calendar)\n          example: Rolling\n          x-pattern-message: Must be `Rolling` or `Calendar`\n        target:\n          type: number\n          description: Target percentage for the SLI over the compliance period.\n          example: 99.5\n        timezone:\n          type: string\n          description: \"Time zone for the SLO compliance. Follow the format in the\\\n            \\ [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).\"\n          example: America/Los_Angeles\n      discriminator:\n        propertyName: complianceType\n        mapping:\n          Rolling: '#/components/schemas/RollingCompliance'\n          Calendar: '#/components/schemas/CalendarCompliance'\n    CalendarCompliance:\n      type: object\n      description: Window for Calendar Compliance.\n      allOf:\n      - $ref: '#/components/schemas/Compliance'\n      - required:\n        - windowType\n        type: object\n        properties:\n          windowType:\n            pattern: ^(Week|Month|Quarter)$\n            type: string\n            description: Type of Calendar Window (week/month/quarter).\n            example: Week\n            x-pattern-message: \"Must be `Week`, `Month` or `Quarter`\"\n          startFrom:\n            type: string\n            description: \"Start of the calendar window. For week, it would be the\\\n              \\ day of the week (for e.g Sunday, Monday etc). For month, it will always\\\n              \\ be the first day of the month (therefore not required to specify for\\\n              \\ monthly compliance). For quarter, it would be the first month of the\\\n              \\ quarter (for e.g January, February etc.)\"\n            example: Monday\n    RollingCompliance:\n      type: object\n      description: Window for Rolling Compliance.\n      allOf:\n      - $ref: '#/components/schemas/Compliance'\n      - required:\n        - size\n        type: object\n        properties:\n          size:\n            type: string\n            description: Size of Rolling Window. Must be a multiple of days.\n            example: 7d\n    Sli:\n      required:\n      - evaluationType\n      - queries\n      - queryType\n      type: object\n      properties:\n        evaluationType:\n          pattern: ^(Window|Request)$\n          type: string\n          description: \"Evaluate SLI using successful/total windows, or occurrence\\\n            \\ of successful events over entire compliance period.\"\n          example: Window\n          x-pattern-message: Must be `Window` or `Request`\n        queryType:\n          pattern: ^(Logs|Metrics)$\n          type: string\n          description: Type of Raw Data Queries for SLI (Logs/Metrics).\n          example: Logs\n          x-pattern-message: Must be `Logs` or `Metrics`\n        queries:\n          type: array\n          description: Queries for defining SLI.\n          items:\n            $ref: '#/components/schemas/SliQueryGroup'\n      discriminator:\n        propertyName: evaluationType\n        mapping:\n          Window: '#/components/schemas/WindowBasedSli'\n          Request: '#/components/schemas/RequestBasedSli'\n    SliQueryGroup:\n      required:\n      - queryGroup\n      - queryGroupType\n      type: object\n      properties:\n        queryGroupType:\n          pattern: ^(Successful|Unsuccessful|Total|Threshold)$\n          type: string\n          description: Type of Query (successful/unsuccessful/total/threshold).\n          example: Threshold\n          x-pattern-message: \"Must be `Successful`, `Unsuccessful`, `Total` or `Threshold`\"\n        queryGroup:\n          type: array\n          items:\n            $ref: '#/components/schemas/SliQuery'\n    SliQuery:\n      required:\n      - query\n      - rowId\n      - useRowCount\n      type: object\n      properties:\n        rowId:\n          type: string\n          description: \"Unique id of the row. Used for query arithmetic, only for\\\n            \\ metric queries.\"\n          example: A\n        query:\n          type: string\n          description: Query String.\n          example: _sourceCategory=webserver \"Request completed successfully\"\n        useRowCount:\n          type: boolean\n          description: Determines whether to use count of rows (for logs) or data\n            points (for metrics) in query result or specific field.\n          example: false\n        field:\n          type: string\n          description: Field of log query output to compare against. To be used only\n            for logs based data type when `useRowCount` is false.\n          example: request_latency\n      description: Group of queries to allow for query arithmetic.\n    RequestBasedSli:\n      type: object\n      description: Evaluate SLI using occurrences of successful events over compliance\n        period.\n      allOf:\n      - $ref: '#/components/schemas/Sli'\n      - type: object\n        properties:\n          threshold:\n            type: number\n            description: Compared against threshold query's raw data points to determine\n              success.\n            example: 200\n          op:\n            pattern: ^(LessThan|GreaterThan|LessThanOrEqual|GreaterThanOrEqual)$\n            type: string\n            description: Comparison function with threshold (LessThan/GreaterThan/LessThanOrEqual/GreaterThanOrEqual).\n            example: LessThan\n            x-pattern-message: \"Must be `LessThan`, `GreaterThan`, `LessThanOrEqual`\\\n              \\ or `GreaterThanOrEqual`\"\n    WindowBasedSli:\n      type: object\n      description: Evaluate SLI using successful or unsuccessful windows over compliance\n        period.\n      allOf:\n      - $ref: '#/components/schemas/Sli'\n      - required:\n        - op\n        - size\n        - threshold\n        type: object\n        properties:\n          threshold:\n            type: number\n            description: Threshold for classifying window as successful or unsuccessful.\n            example: 200\n          op:\n            pattern: ^(LessThan|GreaterThan|LessThanOrEqual|GreaterThanOrEqual)$\n            type: string\n            description: Comparison function with window threshold (LessThan/GreaterThan/LessThanOrEqual/GreaterThanOrEqual).\n            example: LessThan\n            x-pattern-message: \"Must be `LessThan`, `GreaterThan`, `LessThanOrEqual`\\\n              \\ or `GreaterThanOrEqual`\"\n          aggregation:\n            type: string\n            description: \"Aggregation function applied over each window to arrive\\\n              \\ at SLI. Must be `Avg`, `Min`, `Max`, `Sum`, or percentile of the form\\\n              \\ `pX` where `X` is an integer between 1 and 99.\"\n            example: p99\n          size:\n            type: string\n            description: Size of the aggregation window (minimum of 1m and maximum\n              of 1h).\n            example: 15m\n    ListAppsResult:\n      required:\n      - apps\n      type: object\n      properties:\n        apps:\n          type: array\n          description: An array of Apps\n          items:\n            $ref: '#/components/schemas/App'\n      description: List of all available apps from the App Catalog.\n    App:\n      required:\n      - appDefinition\n      - appManifest\n      type: object\n      properties:\n        appDefinition:\n          $ref: '#/components/schemas/AppDefinition'\n        appManifest:\n          $ref: '#/components/schemas/AppManifest'\n    AppDefinition:\n      required:\n      - appVersion\n      - contentId\n      - name\n      - uuid\n      type: object\n      properties:\n        contentId:\n          type: string\n          description: Content identifier of the app in hexadecimal format.\n          example: 00000000000011AE\n        uuid:\n          type: string\n          description: Unique identifier for the app.\n          format: uuid\n          example: 1c57fbc3-3141-4b12-aab3-5f40152bc3d9\n        name:\n          type: string\n          description: Name of the app.\n          example: Sumo Config\n        appVersion:\n          type: string\n          description: Version of the app.\n          example: \"1.0\"\n        preview:\n          type: boolean\n          description: Indicates whether the app is in preview or not.\n          example: true\n        manifestVersion:\n          type: string\n          description: Manifest version of the app\n          example: \"0.1\"\n    AppManifest:\n      required:\n      - description\n      - hoverText\n      - iconURL\n      type: object\n      properties:\n        family:\n          type: string\n          description: The app family\n          example: IIS\n        description:\n          type: string\n          description: Description of the app.\n          example: A description for Sumo Logic Config App.\n        categories:\n          type: array\n          description: Categories that the app belongs to.\n          example:\n          - Sumo Logic\n          - Configuration\n          items:\n            type: string\n        hoverText:\n          type: string\n          description: Text to be displayed when hovered over in UI.\n          example: Sumo Config App\n        iconURL:\n          type: string\n          description: App icon URL.\n          example: https://sumologic-app-data.sumologic.com/icons/sumoconfig.png\n        screenshotURLs:\n          type: array\n          description: App screenshot URLs.\n          example:\n          - https://sumologic-app-data.sumologic.com/icons/sumoconfig/overview.png\n          - https://sumologic-app-data.sumologic.com/screenshots/sumoconfig/details.png\n          items:\n            type: string\n        helpURL:\n          type: string\n          description: App help page URL.\n          example: https://help.sumologic.com/\n        helpDocIdMap:\n          type: object\n          additionalProperties:\n            type: string\n          description: the IDs of the docs pages for this app\n        communityURL:\n          type: string\n          description: App community page URL.\n          example: https://support.sumologic.com/hc/en-us/community/topics/200263058-Applications-and-Integrations\n        requirements:\n          type: array\n          description: Requirements for the app.\n          example: []\n          items:\n            type: string\n        accountTypes:\n          type: array\n          description: Account types that are allowed to install the app\n          example:\n          - free\n          items:\n            type: string\n        requiresInstallationInstructions:\n          type: boolean\n          description: Indicates whether installation instructions are required or\n            not.\n          example: false\n        installationInstructions:\n          type: string\n          description: Installation instructions for the app.\n          example: \"\"\n        parameters:\n          type: array\n          description: Content identifier of the app.\n          items:\n            $ref: '#/components/schemas/ServiceManifestDataSourceParameter'\n        author:\n          type: string\n          description: App author.\n          example: Sumo Logic\n        authorWebsite:\n          type: string\n          description: App author website URL.\n          example: https://www.sumologic.com\n    ServiceManifestDataSourceParameter:\n      required:\n      - parameterId\n      - parameterType\n      type: object\n      properties:\n        parameterType:\n          pattern: ^DATA_SOURCE$\n          type: string\n          description: Parameter type.\n          example: DATA_SOURCE\n          x-pattern-message: \"Supported parameter types include: DATA_SOURCE\"\n        parameterId:\n          type: string\n          description: Parameter identifier.\n          example: paramId1\n        dataSourceType:\n          pattern: ^(LOG|METRICS)$\n          type: string\n          description: Data source type.\n          example: LOG\n          x-pattern-message: \"Supported data source types include: LOG, METRICS\"\n        label:\n          type: string\n          description: Label.\n          example: Log label\n        description:\n          type: string\n          description: Description.\n          example: Log data source\n        example:\n          type: string\n          description: Example.\n          example: \"\"\n        hidden:\n          type: boolean\n          description: Should the UI display?\n          default: false\n    ErrorResponse:\n      required:\n      - errors\n      - id\n      type: object\n      properties:\n        id:\n          type: string\n          description: An identifier for the error; this is unique to the specific\n            API request.\n          example: IUUQI-DGH5I-TJ045\n        errors:\n          type: array\n          description: A list of one or more causes of the error.\n          example:\n          - code: auth:password_too_short\n            message: Your password was too short.\n          - code: auth:password_character_classes\n            message: Your password did not contain any non-alphanumeric characters\n          items:\n            $ref: '#/components/schemas/ErrorDescription'\n    ErrorDescription:\n      required:\n      - code\n      - message\n      type: object\n      properties:\n        code:\n          type: string\n          description: An error code describing the type of error.\n          example: auth:password_too_short\n        message:\n          type: string\n          description: A short English-language description of the error.\n          example: Your password was too short.\n        detail:\n          type: string\n          description: An optional fuller English-language description of the error.\n          example: \"Your password was 5 characters long, the minimum length is 12\\\n            \\ characters. See http://example.com/password for more information.\"\n        meta:\n          type: object\n          description: An optional list of metadata about the error.\n          example:\n            minLength: 12\n            actualLength: 5\n    BeginAsyncJobResponse:\n      required:\n      - id\n      type: object\n      properties:\n        id:\n          type: string\n          description: Identifier to get the status of an asynchronous job.\n          example: C03E086C137F38B4\n    AsyncJobStatus:\n      required:\n      - status\n      type: object\n      properties:\n        status:\n          type: string\n          description: \"Whether or not the request is in progress (`InProgress`),\\\n            \\ has completed successfully (`Success`), or has completed with an error\\\n            \\ (`Failed`).\"\n        statusMessage:\n          type: string\n          description: Additional status message generated if the status is not `Failed`.\n        error:\n          $ref: '#/components/schemas/ErrorDescription'\n      example:\n        status: Success\n        statusMessage: \"\"\n    AppItemsList:\n      required:\n      - items\n      type: object\n      properties:\n        items:\n          type: array\n          description: Items associated with the app.\n          items:\n            $ref: '#/components/schemas/AppListItem'\n    AppListItem:\n      required:\n      - itemType\n      - name\n      type: object\n      properties:\n        itemType:\n          type: string\n          description: \"Type of the item. Can be `Dashboard`, `Report`, `Search`,\\\n            \\ `ScheduledSearch`, `MetricsSearch` or `Folder`.\"\n          example: Dashboard\n        name:\n          type: string\n          description: Name of the item.\n          example: AWS CloudTrail - Overview\n        description:\n          type: string\n          description: Description of the item.\n          example: \"See an overview of your AWS users, resources, network and security\\\n            \\ events.\"\n        query:\n          type: string\n          description: \"Search query for the item. Applicable only for `Search`, `ScheduledSearch`\\\n            \\ and `MetricsSearch` itemType.\"\n          example: _sourceCategory=aws\n        screenshotUrl:\n          type: string\n          description: URL for the screenshot of the item. Applicable only for `Dashboard`\n            and `Report` itemType.\n          example: https://my-app-data.s3.amazonaws.com/dashboards/AWSCloudTrail/Overview.PNG\n        panels:\n          type: array\n          description: Panels associated with the item. Applicable only for `Dashboard`\n            and `Report` itemType.\n          items:\n            $ref: '#/components/schemas/PanelItem'\n        children:\n          type: array\n          description: Child content items. Applicable only for `Folder` itemType.\n          items:\n            $ref: '#/components/schemas/AppListItem'\n    PanelItem:\n      required:\n      - name\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the panel.\n          example: Failed Logins\n        description:\n          type: string\n          description: Description of the panel.\n          example: Details about failed logins\n    AppInstallRequest:\n      required:\n      - description\n      - destinationFolderId\n      - name\n      type: object\n      properties:\n        name:\n          maxLength: 128\n          minLength: 1\n          type: string\n          description: Preferred name of the app to be installed. This will be the\n            name of the app in the selected installation folder.\n          example: Sumo Logic Configuration App\n        description:\n          maxLength: 255\n          minLength: 1\n          type: string\n          description: Preferred description of the app to be installed. This will\n            be displayed as the app description in the selected installation folder.\n          example: Sumo Logic Configuration App to configure collectors and data sources\n        destinationFolderId:\n          type: string\n          description: Identifier of the folder in which the app will be installed\n            in hexadecimal format.\n          example: 00000000000001C8\n        dataSourceValues:\n          type: object\n          additionalProperties:\n            type: string\n          description: Dictionary of properties specifying log-source name and value.\n          example:\n            logsrc: _sourceCategory = api\n      description: \"JSON object containing name, description, destinationFolderId,\\\n        \\ and dataSourceType.\"\n    ListAppRecommendations:\n      type: array\n      description: List of app recommendations\n      items:\n        $ref: '#/components/schemas/AppRecommendation'\n    AppRecommendation:\n      required:\n      - confidence\n      - description\n      - iconURL\n      - name\n      - uuid\n      type: object\n      properties:\n        uuid:\n          type: string\n          description: Unique identifier for the app.\n          format: uuid\n          example: ebcbd463-b38b-47b0-819c-8d44ca859c3b\n        name:\n          type: string\n          description: Name of the app.\n          example: Data Volume\n        description:\n          type: string\n          description: Description of the app.\n          example: \"The Sumo Logic App for Data Volume uses predefined searches and\\\n            \\ Dashboards to provide real-time visibility and analysis of your account's\\\n            \\ data usage volume for both logs and metrics. Use this app to identify\\\n            \\ your top Collectors and monitor your ingest activity and trends. NOTE:\\\n            \\ Please enable Data Volume Index before installing this app.\"\n        iconURL:\n          type: string\n          description: URL of the app icon.\n          example: https://app_icons.s3.amazonaws.com/volumeview.png\n        confidence:\n          type: number\n          description: Percentage relevance of recommendation.\n          format: double\n          example: 0.98\n      description: App recommendation details\n    ListConnectionsResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: List of connections.\n          items:\n            $ref: '#/components/schemas/Connection'\n        next:\n          type: string\n          description: Next continuation token.\n    Connection:\n      required:\n      - createdAt\n      - createdBy\n      - description\n      - id\n      - modifiedAt\n      - modifiedBy\n      - name\n      - type\n      type: object\n      properties:\n        type:\n          type: string\n          description: \"Type of connection. Valid values are `WebhookConnection`,\\\n            \\ `ServiceNowConnection`.\"\n        id:\n          type: string\n          description: Unique identifier for the connection.\n        name:\n          type: string\n          description: Name of the connection.\n        description:\n          type: string\n          description: Description of the connection.\n        createdAt:\n          type: string\n          description: \"Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\\\n            \\ format.\"\n          format: date-time\n        createdBy:\n          type: string\n          description: Identifier of the user who created the resource.\n        modifiedAt:\n          type: string\n          description: Last modification timestamp in UTC.\n          format: date-time\n        modifiedBy:\n          type: string\n          description: Identifier of the user who last modified the resource.\n      discriminator:\n        propertyName: type\n    ConnectionDefinition:\n      required:\n      - name\n      - type\n      type: object\n      properties:\n        type:\n          pattern: ^(WebhookDefinition|ServiceNowDefinition)$\n          type: string\n          description: \"Type of connection. Valid values are `WebhookDefinition`,\\\n            \\ `ServiceNowDefinition`.\"\n          x-pattern-message: must be either `WebhookDefinition` or `ServiceNowDefinition`\n        name:\n          maxLength: 127\n          minLength: 1\n          pattern: \"^([a-zA-Z0-9 +%\\\\-@.,_()]+)$\"\n          type: string\n          description: Name of connection. Name should be a valid alphanumeric value.\n        description:\n          maxLength: 1024\n          type: string\n          description: Description of the connection.\n          default: \"\"\n      discriminator:\n        propertyName: type\n    TestConnectionResponse:\n      required:\n      - responseContent\n      - statusCode\n      type: object\n      properties:\n        statusCode:\n          type: integer\n          description: Status code of the response of the connection test.\n        responseContent:\n          type: string\n          description: Content of the response of the connection test.\n    GetIncidentTemplatesResponse:\n      required:\n      - templates\n      type: object\n      properties:\n        templates:\n          type: array\n          description: List of incident templates.\n          items:\n            $ref: '#/components/schemas/IncidentTemplate'\n    IncidentTemplate:\n      required:\n      - id\n      - name\n      type: object\n      properties:\n        id:\n          type: integer\n          description: Unique identifier of the incident template.\n        name:\n          type: string\n          description: Name of the incident template.\n    GetIncidentTemplatesRequest:\n      type: object\n      properties:\n        url:\n          type: string\n          description: Optional CloudSOAR domain URL to use for the API call to get\n            incident templates.\n          example: https://staging.soar.sumologic.com/\n        authHeader:\n          type: string\n          description: Optional CloudSOAR authorization header to use for the API\n            call to get incident templates.\n          example: SOMEAUTHHEADERSTRING\n        connectionId:\n          type: string\n          description: \"Optional connectionId to get incident templates for an existing\\\n            \\ CloudSOAR connection. If provided, the authHeader and url will be taken\\\n            \\ from the existing connection object.\"\n          example: 0000000000123ABC\n    ListScheduledViewsResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: List of scheduled views.\n          items:\n            $ref: '#/components/schemas/ScheduledView'\n        next:\n          type: string\n          description: Next continuation token.\n    ScheduledView:\n      type: object\n      allOf:\n      - $ref: '#/components/schemas/CreateScheduledViewDefinition'\n      - $ref: '#/components/schemas/ViewRetentionProperties'\n      - required:\n        - id\n        properties:\n          id:\n            type: string\n            description: Identifier for the scheduled view.\n          indexId:\n            type: string\n            description: The `id` of the Index where the output from Scheduled view\n              is stored.\n            example: \"1\"\n          createdAt:\n            type: string\n            description: Creation timestamp in UTC.\n            format: date-time\n          modifiedAt:\n            type: string\n            description: \"Last modification timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\\\n              \\ format.\"\n            format: date-time\n          createdByOptimizeIt:\n            type: boolean\n            description: If the scheduled view is created by OptimizeIt.\n          error:\n            type: string\n            description: Errors related to the scheduled view.\n          status:\n            type: string\n            description: Status of the scheduled view.\n          totalBytes:\n            type: integer\n            description: Total storage consumed by the scheduled view.\n            format: int64\n          totalMessageCount:\n            type: integer\n            description: Total number of messages for the scheduled view.\n            format: int64\n          createdBy:\n            type: string\n            description: Identifier of the user who created the scheduled view.\n            example: 0000000006743FE8\n          modifiedBy:\n            type: string\n            description: Identifier of the user who last modified the resource.\n            example: 0000000006743FE8\n          filledRanges:\n            type: array\n            description: List of the different units of filled ranges since the autoview\n              has been created.\n            items:\n              $ref: '#/components/schemas/FilledRange'\n      x-tf-generated-properties: \"id,query,indexName,startTime,retentionPeriod,parsingMode\"\n    CreateScheduledViewDefinition:\n      required:\n      - indexName\n      - query\n      - startTime\n      type: object\n      properties:\n        query:\n          maxLength: 16384\n          minLength: 1\n          type: string\n          description: The query that defines the data to be included in the scheduled\n            view.\n          example: _sourceCategory=*/Apache\n        indexName:\n          maxLength: 255\n          minLength: 0\n          type: string\n          description: Name of the index for the scheduled view.\n          example: TestScheduledView\n        startTime:\n          type: string\n          description: \"Start timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\\\n            \\ format.\"\n          format: date-time\n        retentionPeriod:\n          type: integer\n          description: \"The number of days to retain data in the scheduled view, or\\\n            \\ -1 to use the default value for your account. Only relevant if your\\\n            \\ account has multi-retention enabled.\"\n          format: int32\n          example: 60\n          default: -1\n        dataForwardingId:\n          type: string\n          description: An optional ID of a data forwarding configuration to be used\n            by the scheduled view.\n        parsingMode:\n          pattern: ^(AutoParse|Manual)$\n          type: string\n          description: |-\n            Define the parsing mode to scan the JSON format log messages. Possible values are:\n              1. `AutoParse`\n              2. `Manual`\n            In AutoParse mode, the system automatically figures out fields to parse based on the search query. While in the Manual mode, no fields are parsed out automatically. For more information see [Dynamic Parsing](https://help.sumologic.com/?cid=0011).\n          example: AutoParse\n          default: Manual\n          x-pattern-message: should be either AutoParse or Manual\n    FilledRange:\n      required:\n      - endTime\n      - startTime\n      type: object\n      properties:\n        startTime:\n          type: string\n          description: \"Start of the timestamp for each unit of filled ranges, expressed\\\n            \\ in UTC.\"\n          format: date-time\n        endTime:\n          type: string\n          description: \"End of the timestamp for each unit of filled ranges, expressed\\\n            \\ in UTC.\"\n          format: date-time\n      description: Range of timestamps already filled since the autoview has been\n        created.\n    UpdateScheduledViewDefinition:\n      type: object\n      properties:\n        dataForwardingId:\n          type: string\n          description: An optional ID of a data forwarding configuration to be used\n            by the scheduled view.\n        retentionPeriod:\n          type: integer\n          description: \"The number of days to retain data in the scheduled view, or\\\n            \\ -1 to use the default value for your account.  Only relevant if your\\\n            \\ account has multi-retention. enabled.\"\n          format: int32\n          example: 365\n          default: -1\n        reduceRetentionPeriodImmediately:\n          type: boolean\n          description: \"This is required if the newly specified `retentionPeriod`\\\n            \\ is less than the existing retention period.  In such a situation, a\\\n            \\ value of `true` says that data between the existing retention period\\\n            \\ and the new retention period should be deleted immediately; if `false`,\\\n            \\ such data will be deleted after seven days. This property is optional\\\n            \\ and ignored if the specified `retentionPeriod` is greater than or equal\\\n            \\ to the current retention period.\"\n          default: false\n    LookupTable:\n      required:\n      - id\n      type: object\n      description: Lookup table definition and metadata.\n      allOf:\n      - $ref: '#/components/schemas/MetadataModel'\n      - $ref: '#/components/schemas/LookupTableDefinition'\n      - properties:\n          id:\n            type: string\n            description: Identifier of the lookup table as a content item.\n            example: 0000000001C41EE4\n          contentPath:\n            type: string\n            description: \"Address/path of the parent folder of this lookup table in\\\n              \\ content library. For example, a lookup table existing  in the personal/lookupTable\\\n              \\ folder for user johndoe would be: /Library/Users/johndoe@acme.com/lookupTable\"\n            example: /Library/Users/johndoe@acme.com/lookupTable\n          size:\n            type: integer\n            description: The current size of the lookup table in bytes\n            format: int64\n            example: 100\n    LookupTableDefinition:\n      required:\n      - name\n      - parentFolderId\n      type: object\n      description: Definition of the lookup table.\n      allOf:\n      - $ref: '#/components/schemas/ExportableLookupTableInfo'\n      - properties:\n          name:\n            maxLength: 255\n            type: string\n            description: The name of the lookup table.\n            example: SampleLookupTable\n          parentFolderId:\n            type: string\n            description: The parent-folder-path identifier of the lookup table in\n              the Library.\n            example: 0000000001C41EE4\n    ExportableLookupTableInfo:\n      required:\n      - description\n      - fields\n      - primaryKeys\n      type: object\n      properties:\n        description:\n          maxLength: 1000\n          type: string\n          description: The description of the lookup table.\n          example: This is a sample lookup table description.\n        fields:\n          minItems: 1\n          type: array\n          description: The list of fields in the lookup table.\n          items:\n            $ref: '#/components/schemas/LookupTableField'\n        primaryKeys:\n          minItems: 1\n          uniqueItems: true\n          type: array\n          description: The names of the fields that make up the primary key for the\n            lookup table. These will be a subset of the fields that the table will\n            contain.\n          example:\n          - FieldName1\n          items:\n            type: string\n        ttl:\n          maximum: 525600\n          minimum: 0\n          type: integer\n          description: A time to live for each entry in the lookup table (in minutes).\n            365 days is the maximum time to live for each entry that you can specify.\n            Setting it to 0 means that the records will not expire automatically.\n          format: int32\n          example: 100\n          default: 0\n        sizeLimitAction:\n          pattern: ^(StopIncomingMessages|DeleteOldData)$\n          type: string\n          description: The action that needs to be taken when the size limit is reached\n            for the table. The possible values can be `StopIncomingMessages` or `DeleteOldData`.\n            DeleteOldData will start deleting old data once size limit is reached\n            whereas StopIncomingMessages will discard all the updates made to the\n            lookup table once size limit is reached.\n          example: DeleteOldData\n          default: StopIncomingMessages\n          x-pattern-message: must be either `StopIncomingMessages` or `DeleteOldData`\n      description: The lookup table definition independent of its location in the\n        Library and name.\n    LookupTableField:\n      required:\n      - fieldName\n      - fieldType\n      type: object\n      properties:\n        fieldName:\n          type: string\n          description: The name of the field.\n          example: FieldName1\n        fieldType:\n          pattern: ^(boolean|int|long|double|string)$\n          type: string\n          description: |-\n            The data type of the field. Supported types:\n              - `boolean`\n              - `int`\n              - `long`\n              - `double`\n              - `string`\n          example: boolean\n          x-pattern-message: \"must be one of the following: `boolean`, `int`, `long`,\\\n            \\ `double`, `string`\"\n      description: The definition of the field.\n    LookupUpdateDefinition:\n      required:\n      - description\n      - ttl\n      type: object\n      properties:\n        ttl:\n          maximum: 525600\n          minimum: 0\n          type: integer\n          description: A time to live for each entry in the lookup table (in minutes).\n            0 is a special value. A TTL of 0 implies entry will never be deleted from\n            the table.\n          format: int32\n          example: 100\n          default: 0\n        description:\n          maxLength: 1000\n          type: string\n          description: The description of the lookup table. The description cannot\n            be blank.\n          example: This is a sample lookup table description.\n        sizeLimitAction:\n          type: string\n          description: The action that needs to be taken when the size limit is reached\n            for the table. The possible values can be `StopIncomingMessages` or `DeleteOldData`.\n            DeleteOldData will starting deleting old data once size limit is reached\n            whereas StopIncomingMessages will discard all the updates made to the\n            lookup table once size limit is reached.\n          example: DeleteOldData\n          default: StopIncomingMessages\n      description: The updated lookup table parameters.\n    LookupRequestToken:\n      required:\n      - id\n      type: object\n      properties:\n        id:\n          type: string\n          description: The identifier used to track the request.\n          example: 0000000001C41EF2\n      description: Allows you to track the status of an upload or export request.\n    LookupAsyncJobStatus:\n      required:\n      - createdAt\n      - eventType\n      - jobId\n      - lookupContentId\n      - lookupContentPath\n      - lookupName\n      - modifiedAt\n      - status\n      - userId\n      type: object\n      properties:\n        jobId:\n          type: string\n          description: An identifier returned in response to an asynchronous request.\n          example: 0000000001C41EF2\n        status:\n          type: string\n          description: \"Whether or not the request is pending (`Pending`), in progress\\\n            \\ (`InProgress`), has completed successfully (`Success`), has completed\\\n            \\ partially with warnings (`PartialSuccess`) or has completed with an\\\n            \\ error (`Failed`).\"\n        statusMessages:\n          type: array\n          description: Additional status messages generated if any if the status is\n            `Success`.\n          items:\n            type: string\n        errors:\n          type: array\n          description: \"More information about the failures, if the status is `Failed`.\"\n          items:\n            $ref: '#/components/schemas/ErrorDescription'\n        warnings:\n          type: array\n          description: \"More information about the warnings, if the status is `PartialSuccess`.\"\n          items:\n            $ref: '#/components/schemas/warningDescription'\n        lookupContentId:\n          type: string\n          description: Content id of lookup table on which this operation was performed.\n          example: 0000000001C41EE4\n        lookupName:\n          type: string\n          description: Name of lookup table on which this operation was performed.\n          example: sampleLookup\n        lookupContentPath:\n          type: string\n          description: Content path of lookup table on which this operation was performed.\n          example: /Library/Users/xyz@demo.com/sampleLookup\n        requestType:\n          type: string\n          description: |-\n            Type of asynchronous request made:\n              - `BulkMerge`\n              - `BulkReplace`\n              - `Truncate`\n          example: BulkMerge\n        userId:\n          type: string\n          description: User id of user who initiated this operation.\n          example: 0000000006743FDD\n        createdAt:\n          type: string\n          description: Creation time of this job in UTC.\n          format: date-time\n          example: 2018-10-16T09:10:00Z\n        modifiedAt:\n          type: string\n          description: Timestamp in UTC when status was last updated.\n          format: date-time\n          example: 2018-10-16T09:10:00Z\n      description: Lookup table async job status.\n    warningDescription:\n      required:\n      - message\n      type: object\n      properties:\n        message:\n          type: string\n          description: Description of the warning.\n          example: 60 rows were dropped.\n        cause:\n          type: string\n          description: An optional cause of this warning.\n          example: Primary key values were duplicate.\n      description: Warning description\n    LookupPreviewData:\n      type: object\n      properties:\n        fieldProperties:\n          type: array\n          description: \"The field properties of the lookup table. This includes the\\\n            \\ field name, field description, and an identifier associated with each\\\n            \\ field.\"\n          items:\n            $ref: '#/components/schemas/PreviewLookupTableField'\n        fieldValueMapList:\n          type: array\n          description: The data of the lookup table as a list of field identifiers\n            mapped to their values.\n          items:\n            type: object\n            additionalProperties:\n              type: string\n            description: A map of all the field identifiers and their corresponding\n              values.\n      description: The preview data of the lookup table.\n    PreviewLookupTableField:\n      required:\n      - fieldId\n      - fieldName\n      - fieldType\n      type: object\n      properties:\n        fieldName:\n          type: string\n          description: The name of the field.\n          example: sampleFieldName\n        fieldType:\n          type: string\n          description: |-\n            The data type of the field. Supported types:\n              - `boolean`\n              - `int`\n              - `long`\n              - `double`\n              - `string`\n          example: boolean\n        fieldId:\n          type: string\n          description: Identifier associated with each field of the table.\n          example: \"1\"\n      description: The properties of the field.\n    RowUpdateDefinition:\n      required:\n      - row\n      type: object\n      properties:\n        row:\n          maxItems: 1000\n          type: array\n          description: A list of all the field identifiers and their corresponding\n            values.\n          items:\n            $ref: '#/components/schemas/TableRow'\n      description: Lookup table data to be uploaded.\n    TableRow:\n      required:\n      - columnName\n      - columnValue\n      type: object\n      properties:\n        columnName:\n          type: string\n          description: Name of the column of the table.\n          example: user_id\n        columnValue:\n          type: string\n          description: Value of the specified column.\n          example: user1\n      description: Lookup table row column and column value.\n    RowDeleteDefinition:\n      required:\n      - primaryKey\n      type: object\n      properties:\n        primaryKey:\n          maxItems: 1000\n          type: array\n          description: A list of all the primary key field identifiers and their corresponding\n            values which defines the row to delete.\n          items:\n            $ref: '#/components/schemas/TableRow'\n      description: Lookup table primary key of the row to be deleted.\n    SecondaryKeysDefinition:\n      maxItems: 20\n      minItems: 1\n      type: array\n      description: The secondary keys of the lookup table\n      example:\n      - - ip\n      - - latitude\n        - longitude\n      items:\n        type: array\n        items:\n          type: string\n    LookupTablesLimits:\n      type: object\n      properties:\n        tablesCreated:\n          type: integer\n          description: Number of lookup tables currently created.\n          format: int32\n          example: 8\n        tableCapacityRemaining:\n          type: integer\n          description: Remaining count of lookup tables that can be created.\n          format: int32\n          example: 2\n        totalTableCapacity:\n          type: integer\n          description: Total capacity of lookup tables that can be created for the\n            given org id.\n          format: int32\n          example: 10\n      description: Properties related to lookup tables being allowed and created.\n    ListPartitionsResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: List of partitions.\n          items:\n            $ref: '#/components/schemas/Partition'\n        next:\n          type: string\n          description: Next continuation token.\n          example: \"1\"\n    Partition:\n      type: object\n      allOf:\n      - $ref: '#/components/schemas/CreatePartitionDefinition'\n      - $ref: '#/components/schemas/ViewRetentionProperties'\n      - $ref: '#/components/schemas/MetadataModel'\n      - required:\n        - id\n        - totalBytes\n        properties:\n          id:\n            type: string\n            description: Unique identifier for the partition.\n            example: \"1\"\n          totalBytes:\n            type: integer\n            description: Size of data in partition in bytes.\n            format: int64\n            example: 42\n          isActive:\n            type: boolean\n            description: This has the value `true` if the partition is active and\n              `false` if it has been decommissioned.\n          indexType:\n            pattern: ^(DefaultIndex|AuditIndex|Partition)$\n            type: string\n            description: \"This has the value `DefaultIndex`, `AuditIndex`or `Partition`\\\n              \\ depending upon the type of partition.\"\n            example: Partition\n          dataForwardingId:\n            type: string\n            description: Id of the data forwarding configuration to be used by the\n              partition.\n    CreatePartitionDefinition:\n      required:\n      - name\n      - routingExpression\n      type: object\n      properties:\n        name:\n          maxLength: 255\n          type: string\n          description: The name of the partition.\n          example: apache\n        routingExpression:\n          maxLength: 16384\n          minLength: 1\n          type: string\n          description: The query that defines the data to be included in the partition.\n          example: _sourcecategory=*/Apache\n        analyticsTier:\n          pattern: ^(frequent|infrequent|continuous)$\n          type: string\n          description: |-\n            The Data Tier where the data in the partition will reside. Possible values are:\n                          1. `continuous`\n                          2. `frequent`\n                          3. `infrequent`\n            Note: The \"infrequent\" and \"frequent\" tiers are only available to Cloud Flex Credits Enterprise Suite accounts.\n          example: continuous\n          default: continuous\n          x-pattern-message: \"must be one of `continuous`, `frequent` or `infrequent`\"\n        retentionPeriod:\n          type: integer\n          description: \"The number of days to retain data in the partition, or -1\\\n            \\ to use the default value for your account.  Only relevant if your account\\\n            \\ has variable retention enabled.\"\n          example: 365\n          default: -1\n        isCompliant:\n          type: boolean\n          description: \"Whether the partition is compliant or not. Mark a partition\\\n            \\ as compliant if it contains data used for compliance or audit purpose.\\\n            \\ Retention for a compliant partition can only be increased and cannot\\\n            \\ be reduced after the partition is marked compliant. A partition once\\\n            \\ marked compliant, cannot be marked non-compliant later.\"\n          example: false\n          default: false\n    ViewRetentionProperties:\n      type: object\n      properties:\n        newRetentionPeriod:\n          type: integer\n          description: \"If the retention period is scheduled to be updated in the\\\n            \\ future (i.e., if retention period is previously reduced with value of\\\n            \\ reduceRetentionPeriodImmediately as false), this property gives the\\\n            \\ future value of retention period while retentionPeriod gives the current\\\n            \\ value. retentionPeriod will take up the value of newRetentionPeriod\\\n            \\ after the scheduled time.\"\n          format: int32\n          example: 300\n        retentionEffectiveAt:\n          type: string\n          description: When the newRetentionPeriod will become effective in UTC format.\n          format: date-time\n    ListPartitionsInfoResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: List of partitions information\n          items:\n            $ref: '#/components/schemas/PartitionInfo'\n        next:\n          type: string\n          description: Next continuation token.\n          example: \"1\"\n    PartitionInfo:\n      required:\n      - name\n      type: object\n      properties:\n        name:\n          maxLength: 255\n          type: string\n          description: The name of the partition.\n          example: apache\n        analyticsTier:\n          pattern: ^(frequent|infrequent|continuous)$\n          type: string\n          description: |-\n            The Data Tier where the data in the partition will reside. Possible values are:\n                          1. `continuous`\n                          2. `frequent`\n                          3. `infrequent`\n            Note: The \"infrequent\" and \"frequent\" tiers are only available to Cloud Flex Credits Enterprise Suite accounts.\n          example: continuous\n          default: continuous\n          x-pattern-message: \"must be one of `continuous`, `frequent` or `infrequent`\"\n    UpdatePartitionDefinition:\n      type: object\n      properties:\n        retentionPeriod:\n          type: integer\n          description: \"The number of days to retain data in the partition, or -1\\\n            \\ to use the default value for your account. Only relevant if your account\\\n            \\ has variable retention enabled.\"\n          example: 365\n        reduceRetentionPeriodImmediately:\n          type: boolean\n          description: \"This is required if the newly specified `retentionPeriod`\\\n            \\ is less than the existing retention period.  In such a situation, a\\\n            \\ value of `true` says that data between the existing retention period\\\n            \\ and the new retention period should be deleted immediately; if `false`,\\\n            \\ such data will be deleted after seven days. This property is optional\\\n            \\ and ignored if the specified `retentionPeriod` is greater than or equal\\\n            \\ to the current retention period.\"\n          default: false\n        isCompliant:\n          type: boolean\n          description: \"Whether to mark a partition as compliant. Mark a partition\\\n            \\ as compliant if it contains data used for compliance or audit purpose.\\\n            \\ Retention for a compliant partition can only be increased and cannot\\\n            \\ be reduced after the partition marked as compliant. A partition once\\\n            \\ marked compliant, cannot be marked non-compliant later.\"\n          example: false\n          default: false\n        routingExpression:\n          maxLength: 16384\n          minLength: 1\n          type: string\n          description: The query that defines the data to be included in the partition.\n          example: _sourcecategory=*/Apache\n    PartitionsResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: Array of partitions.\n          items:\n            $ref: '#/components/schemas/Partition'\n    GetDataForwardingDestinations:\n      type: object\n      properties:\n        nextToken:\n          type: string\n          description: Next continuation token.\n          example: VEZuRU4veXF2UWFCUURYSDNQUzJxWlpRRUsvTlBieXA\n        data:\n          type: array\n          description: List of data forwarding destinations.\n          items:\n            $ref: '#/components/schemas/BucketDefinition'\n    BucketDefinition:\n      type: object\n      allOf:\n      - $ref: '#/components/schemas/CreateBucketDefinition'\n      - $ref: '#/components/schemas/MetadataModel'\n      - required:\n        - bucketName\n        - destinationName\n        - id\n        properties:\n          id:\n            type: string\n            description: The unique identifier of the data forwarding destination.\n            example: \"1\"\n          invalidatedBySystem:\n            type: boolean\n            description: True if invalidated by the system.\n      x-tf-generated-properties: \"id,bucketName,destinationName,description,authenticationMode,accessKeyId,secretAccessKey,roleArn,region,encrypted,enabled\"\n      x-tf-resource-name: DataForwardingDestination\n    CreateBucketDefinition:\n      type: object\n      allOf:\n      - $ref: '#/components/schemas/UpdateBucketDefinition'\n      - $ref: '#/components/schemas/CreateBucketDefinitionItems'\n    UpdateBucketDefinition:\n      required:\n      - authenticationMode\n      type: object\n      properties:\n        destinationName:\n          type: string\n          description: Name of the S3 data forwarding destination.\n          example: df-destination\n        description:\n          type: string\n          description: Description of the S3 data forwarding destination.\n        authenticationMode:\n          type: string\n          description: \"AWS IAM authentication method used for access. Possible values\\\n            \\ are: 1. `AccessKey` 2. `RoleBased`\"\n          example: RoleBased\n        accessKeyId:\n          type: string\n          description: The AWS Access ID to access the S3 bucket.\n          example: accessKeyId\n        secretAccessKey:\n          type: string\n          description: The AWS Secret Key to access the S3 bucket.\n          example: secretAccessKey\n        roleArn:\n          type: string\n          description: The AWS Role ARN to access the S3 bucket.\n          example: roleArn\n        region:\n          type: string\n          description: The region where the S3 bucket is located.\n          example: us-east-1\n        encrypted:\n          type: boolean\n          description: Enable S3 server-side encryption.\n        enabled:\n          type: boolean\n          description: True if the destination is Active.\n          example: true\n    CreateBucketDefinitionItems:\n      required:\n      - authenticationMode\n      - bucketName\n      - destinationName\n      type: object\n      properties:\n        bucketName:\n          pattern: \"(?!(^xn--|-s3alias$))^[a-z0-9][a-z0-9-]{1,61}[a-z0-9]$\"\n          type: string\n          description: The name of the Amazon S3 bucket.\n          example: df-bucket\n          x-pattern-message: Must be a valid AWS S3 Bucket name.\n    GetRulesAndBucketsResult:\n      type: object\n      properties:\n        data:\n          type: array\n          description: List of S3 data forwarding rules.\n          items:\n            $ref: '#/components/schemas/RuleAndBucketDetail'\n        nextToken:\n          type: string\n          description: Next continuation token.\n          example: VEZuRU4veXF2UWFCUURYSDNQUzJxWlpRRUsvTlBieXA\n    RuleAndBucketDetail:\n      allOf:\n      - $ref: '#/components/schemas/DataForwardingRule'\n      - type: object\n        properties:\n          bucket:\n            $ref: '#/components/schemas/logs-data-forwarding-rule-management'\n    DataForwardingRule:\n      allOf:\n      - $ref: '#/components/schemas/CreateDataForwardingRule'\n      - $ref: '#/components/schemas/MetadataModel'\n      - type: object\n        properties:\n          id:\n            type: string\n            description: The unique identifier of the data forwarding rule.\n            example: \"1\"\n      x-tf-generated-properties: id\n      x-tf-resource-name: DataForwardingRule\n    CreateDataForwardingRule:\n      required:\n      - destinationId\n      - indexId\n      type: object\n      properties:\n        indexId:\n          type: string\n          description: The `id` of the Partition or Scheduled View the rule applies\n            to.\n          example: \"1\"\n        destinationId:\n          type: string\n          description: The data forwarding destination id.\n          example: \"1\"\n        enabled:\n          type: boolean\n          description: True when the data forwarding rule is enabled.\n          example: true\n        fileFormat:\n          type: string\n          description: Specify the path prefix to a directory in the S3 bucket and\n            how to format the file name.\n          example: \"{index}_{day}_{hour}_{minute}_{second}\"\n    UpdateDataForwardingRule:\n      type: object\n      properties:\n        destinationId:\n          type: string\n          description: Data forwarding destination id.\n          example: \"1\"\n        enabled:\n          type: boolean\n          description: True when the data forwarding rule is enabled.\n          example: true\n        fileFormat:\n          type: string\n          description: Specify the path prefix to a directory in the S3 bucket and\n            how to format the file name.\n          example: \"{index}_{day}_{hour}_{minute}_{second}\"\n    ListExtractionRulesResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: List of field extraction rules.\n          items:\n            $ref: '#/components/schemas/ExtractionRule'\n        next:\n          type: string\n          description: Next continuation token.\n    ExtractionRule:\n      type: object\n      allOf:\n      - $ref: '#/components/schemas/ExtractionRuleDefinition'\n      - $ref: '#/components/schemas/MetadataModel'\n      - required:\n        - id\n        properties:\n          id:\n            type: string\n            description: Unique identifier for the field extraction rule.\n          fieldNames:\n            type: array\n            description: List of extracted fields from \"parseExpression\".\n            items:\n              type: string\n      x-tf-generated-properties: \"id,name,scope,parseExpression,enabled\"\n      x-tf-resource-name: ExtractionRule\n    ExtractionRuleDefinition:\n      allOf:\n      - $ref: '#/components/schemas/BaseExtractionRuleDefinition'\n      - type: object\n        properties:\n          enabled:\n            type: boolean\n            description: Is the field extraction rule enabled.\n            default: true\n    BaseExtractionRuleDefinition:\n      required:\n      - name\n      - parseExpression\n      - scope\n      type: object\n      properties:\n        name:\n          maxLength: 256\n          minLength: 1\n          type: string\n          description: Name of the field extraction rule. Use a name that makes it\n            easy to identify the rule.\n          example: ExtractionRule123\n        scope:\n          maxLength: 2048\n          minLength: 0\n          type: string\n          description: \"Scope of the field extraction rule. This could be a sourceCategory,\\\n            \\ sourceHost, or any other metadata that describes the data you want to\\\n            \\ extract from. Think of the Scope as the first portion of an ad hoc search,\\\n            \\ before the first pipe ( | ). You'll use the Scope to run a search against\\\n            \\ the rule.\"\n          example: _sourceHost=127.0.0.1\n        parseExpression:\n          maxLength: 16384\n          type: string\n          description: Describes the fields to be parsed.\n          example: csv _raw extract 1 as f1\n    UpdateExtractionRuleDefinition:\n      allOf:\n      - $ref: '#/components/schemas/BaseExtractionRuleDefinition'\n      - required:\n        - enabled\n        type: object\n        properties:\n          enabled:\n            type: boolean\n            description: Is the field extraction rule enabled.\n    ListDynamicRulesResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: List of dynamic parsing rules.\n          items:\n            $ref: '#/components/schemas/DynamicRule'\n        next:\n          type: string\n          description: Next continuation token.\n          example: 0000000001C51FF7\n    DynamicRule:\n      type: object\n      allOf:\n      - $ref: '#/components/schemas/DynamicRuleDefinition'\n      - $ref: '#/components/schemas/Metadata'\n      - required:\n        - id\n        - isSystemRule\n        properties:\n          id:\n            type: string\n            description: Unique identifier for the dynamic parsing rule.\n            example: 0000000001C41EE4\n          isSystemRule:\n            type: boolean\n            description: \"Whether the rule has been defined by the system, rather\\\n              \\ than by a user.\"\n            example: false\n    DynamicRuleDefinition:\n      required:\n      - enabled\n      - name\n      - scope\n      type: object\n      properties:\n        name:\n          maxLength: 256\n          minLength: 1\n          type: string\n          description: Name of the dynamic parsing rule. Use a name that makes it\n            easy to identify the rule.\n          example: DynamicParsingRule123\n        scope:\n          maxLength: 2048\n          minLength: 1\n          type: string\n          description: \"Scope of the dynamic parsing rule. This could be a sourceCategory,\\\n            \\ sourceHost, or any other metadata that describes the data you want to\\\n            \\ extract from. Think of the Scope as the first portion of an ad hoc search,\\\n            \\ before the first pipe ( | ). You'll use the Scope to run a search against\\\n            \\ the rule.\"\n          example: _sourceHost=127.0.0.1\n        enabled:\n          type: boolean\n          description: Is the dynamic parsing rule enabled.\n          example: false\n          default: true\n    ListCustomFieldsResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: List of custom fields.\n          items:\n            $ref: '#/components/schemas/CustomField'\n    CustomField:\n      allOf:\n      - $ref: '#/components/schemas/FieldName'\n      - required:\n        - dataType\n        - fieldId\n        - state\n        type: object\n        properties:\n          fieldId:\n            type: string\n            description: Identifier of the field.\n            example: 00000000031D02DA\n          dataType:\n            pattern: ^(String|Long|Int|Double|Boolean)$\n            type: string\n            description: \"Field type. Possible values are `String`, `Long`, `Int`,\\\n              \\ `Double`, and `Boolean`.\"\n            example: String\n            x-pattern-message: \"Must be `String`, `Long`, `Int`, `Double` or `Boolean`\"\n          state:\n            pattern: ^(Enabled|Disabled)$\n            type: string\n            description: Indicates whether the field is enabled and its values are\n              being accepted. Possible values are `Enabled` and `Disabled`.\n            example: Enabled\n            x-pattern-message: Must be `Enabled` or `Disabled`\n    FieldName:\n      required:\n      - fieldName\n      type: object\n      properties:\n        fieldName:\n          maxLength: 255\n          minLength: 1\n          type: string\n          description: Field name.\n          example: hostIP\n    ListDroppedFieldsResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: List of dropped fields.\n          items:\n            $ref: '#/components/schemas/DroppedField'\n    DroppedField:\n      allOf:\n      - $ref: '#/components/schemas/FieldName'\n    ListBuiltinFieldsResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: List of built-in fields.\n          items:\n            $ref: '#/components/schemas/BuiltinField'\n    BuiltinField:\n      allOf:\n      - $ref: '#/components/schemas/FieldName'\n      - required:\n        - dataType\n        - fieldId\n        - state\n        type: object\n        properties:\n          fieldId:\n            type: string\n            description: Identifier of the field.\n            example: 00000000031D02DA\n          dataType:\n            pattern: ^(String|Long|Int|Double|Boolean)$\n            type: string\n            description: \"Field type. Possible values are `String`, `Long`, `Int`,\\\n              \\ `Double`, and `Boolean`.\"\n            example: String\n            x-pattern-message: \"Must be `String`, `Long`, `Int`, `Double` or `Boolean`\"\n          state:\n            pattern: ^(Enabled|Disabled)$\n            type: string\n            description: Indicates whether the field is enabled and its values are\n              being accepted. Possible values are `Enabled` and `Disabled`.\n            example: Enabled\n            x-pattern-message: Must be `Enabled` or `Disabled`\n    FieldQuotaUsage:\n      required:\n      - quota\n      - remaining\n      type: object\n      properties:\n        quota:\n          type: integer\n          description: Maximum number of fields available.\n          format: int32\n          example: 200\n        remaining:\n          type: integer\n          description: Current number of fields available.\n          format: int32\n          example: 121\n    ListFieldNamesResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: List of all built-in and custom field names.\n          items:\n            $ref: '#/components/schemas/FieldName'\n    ListCustomFieldsUsageResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: List of fields with their usages.\n          items:\n            $ref: '#/components/schemas/CustomFieldUsage'\n    CustomFieldUsage:\n      allOf:\n      - $ref: '#/components/schemas/FieldName'\n      - required:\n        - dataType\n        - fieldId\n        - state\n        type: object\n        properties:\n          fieldId:\n            type: string\n            description: Identifier of the field.\n            example: 00000000031D02DA\n          dataType:\n            pattern: ^(String|Long|Int|Double|Boolean)$\n            type: string\n            description: \"Field type. Possible values are `String`, `Long`, `Int`,\\\n              \\ `Double`, `Boolean`.\"\n            example: String\n            x-pattern-message: \"Must be `String`, `Long`, `Int`, `Double` or `Boolean`\"\n          state:\n            pattern: ^(Enabled|Disabled)$\n            type: string\n            description: Indicates whether the field is enabled and its values are\n              being accepted. Possible values are `Enabled` and `Disabled`.\n            example: Enabled\n            x-pattern-message: Must be `Enabled` or `Disabled`\n          fieldExtractionRules:\n            type: array\n            description: An array of hexadecimal identifiers of field extraction rules\n              which use this field.\n            items:\n              type: string\n          roles:\n            type: array\n            description: An array of hexadecimal identifiers of roles which use this\n              field in the search filter.\n            items:\n              type: string\n          partitions:\n            type: array\n            description: An array of hexadecimal identifiers of partitions which use\n              this field in the routing expression.\n            items:\n              type: string\n          collectorsCount:\n            type: integer\n            description: Total number of collectors using this field.\n            format: int32\n            example: 228\n          sourcesCount:\n            type: integer\n            description: Total number of sources using this field.\n            format: int32\n            example: 228\n    ListBuiltinFieldsUsageResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: List of fields with their usages.\n          items:\n            $ref: '#/components/schemas/BuiltinFieldUsage'\n    BuiltinFieldUsage:\n      allOf:\n      - $ref: '#/components/schemas/FieldName'\n      - required:\n        - dataType\n        - fieldId\n        - state\n        type: object\n        properties:\n          fieldId:\n            type: string\n            description: Identifier of the field.\n            example: 00000000031D02DA\n          dataType:\n            pattern: ^(String|Long|Int|Double|Boolean)$\n            type: string\n            description: \"Field type. Possible values are `String`, `Long`, `Int`,\\\n              \\ `Double`, `Boolean`.\"\n            example: String\n            x-pattern-message: \"Must be `String`, `Long`, `Int`, `Double` or `Boolean`\"\n          state:\n            pattern: ^(Enabled|Disabled)$\n            type: string\n            description: Indicates whether the field is enabled and its values are\n              being accepted. Possible values are `Enabled` and `Disabled`.\n            example: Enabled\n            x-pattern-message: Must be `Enabled` or `Disabled`\n          fieldExtractionRules:\n            type: array\n            description: An array of hexadecimal identifiers of field extraction rules\n              which use this field.\n            items:\n              type: string\n          roles:\n            type: array\n            description: An array of hexadecimal identifiers of roles which use this\n              field in the search filter.\n            items:\n              type: string\n          partitions:\n            type: array\n            description: An array of hexadecimal identifiers of partitions which use\n              this field in the routing expression.\n            items:\n              type: string\n    GetCollectorsUsageResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: List of collectors.\n          items:\n            $ref: '#/components/schemas/Collector'\n        next:\n          type: string\n          description: Next continuation token.\n    Collector:\n      required:\n      - collectorId\n      - collectorName\n      type: object\n      properties:\n        collectorId:\n          type: string\n          description: Identifier of a collector.\n          example: 000000000000000F\n        collectorName:\n          type: string\n          description: Name of a collector.\n          example: SyslogCollector\n    GetSourcesUsageResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: List of sources.\n          items:\n            $ref: '#/components/schemas/Source'\n        next:\n          type: string\n          description: Next continuation token.\n    Source:\n      required:\n      - sourceId\n      - sourceName\n      type: object\n      properties:\n        sourceId:\n          type: string\n          description: Identifier of a source.\n          example: 000000000000000F\n        sourceName:\n          type: string\n          description: Name of a source.\n          example: Collector\n    ListIngestBudgetsResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: List of ingest budgets.\n          items:\n            $ref: '#/components/schemas/IngestBudget'\n        next:\n          type: string\n          description: Next continuation token.\n    IngestBudget:\n      type: object\n      allOf:\n      - $ref: '#/components/schemas/IngestBudgetDefinition'\n      - $ref: '#/components/schemas/MetadataWithUserInfo'\n      - required:\n        - id\n        properties:\n          id:\n            type: string\n            description: Unique identifier for the ingest budget.\n          usageBytes:\n            type: integer\n            description: \"Current usage since the last reset, in bytes.\"\n            format: int64\n            example: 900\n          usageStatus:\n            type: string\n            description: \"Status of the current usage. Can be `Normal`, `Approaching`,\\\n              \\ `Exceeded`, or `Unknown` (unable to retrieve usage).\"\n            example: Approaching\n          numberOfCollectors:\n            type: integer\n            description: Number of collectors assigned to the ingest budget.\n            format: int64\n            example: 10\n    IngestBudgetDefinition:\n      required:\n      - action\n      - capacityBytes\n      - fieldValue\n      - name\n      - resetTime\n      - timezone\n      type: object\n      properties:\n        name:\n          maxLength: 128\n          minLength: 1\n          type: string\n          description: Display name of the ingest budget.\n          example: Developer Budget\n        fieldValue:\n          maxLength: 1024\n          minLength: 1\n          type: string\n          description: Custom field value that is used to assign Collectors to the\n            ingest budget.\n          example: dev_30_gb\n        capacityBytes:\n          minimum: 0\n          type: integer\n          description: \"Capacity of the ingest budget, in bytes. It takes a few minutes\\\n            \\ for Collectors to stop collecting when capacity is reached. We recommend\\\n            \\ setting a soft limit that is lower than your needed hard limit.\"\n          format: int64\n          example: 1000\n        timezone:\n          type: string\n          description: \"Time zone of the reset time for the ingest budget. Follow\\\n            \\ the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).\"\n          example: America/Los_Angeles\n        resetTime:\n          maxLength: 5\n          minLength: 5\n          type: string\n          description: Reset time of the ingest budget in HH:MM format.\n          example: 23:30\n        description:\n          maxLength: 1024\n          minLength: 0\n          type: string\n          description: Description of the ingest budget.\n        action:\n          pattern: ^(keepCollecting|stopCollecting)$\n          type: string\n          description: |-\n            Action to take when ingest budget's capacity is reached. All actions are audited. Supported values are:\n              * `stopCollecting`\n              * `keepCollecting`\n          example: stopCollecting\n          x-pattern-message: must be either `keepCollecting` or `stopCollecting`\n        auditThreshold:\n          maximum: 99\n          minimum: 1\n          type: integer\n          description: The threshold as a percentage of when an ingest budget's capacity\n            usage is logged in the Audit Index.\n          format: int32\n          example: 85\n    ListCollectorIdentitiesResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: List of Collector identities.\n          items:\n            $ref: '#/components/schemas/CollectorIdentity'\n        next:\n          type: string\n          description: Next continuation token.\n    CollectorIdentity:\n      required:\n      - id\n      - name\n      type: object\n      properties:\n        id:\n          type: string\n          description: Unique identifier for the Collector.\n        name:\n          type: string\n          description: The name of the Collector.\n    ListIngestBudgetsResponseV2:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: List of ingest budgets.\n          items:\n            $ref: '#/components/schemas/IngestBudgetV2'\n        next:\n          type: string\n          description: Next continuation token.\n    IngestBudgetV2:\n      type: object\n      allOf:\n      - $ref: '#/components/schemas/IngestBudgetDefinitionV2'\n      - required:\n        - createdAt\n        - createdBy\n        - id\n        - modifiedAt\n        - modifiedBy\n        - version\n        properties:\n          id:\n            type: string\n            description: Unique identifier for the ingest budget.\n            example: 0000000003343FDD\n          usageBytes:\n            type: integer\n            description: \"Current usage since the last reset, in bytes.\"\n            format: int64\n            example: 900\n          usageStatus:\n            pattern: ^(Normal|Approaching|Exceeded|Unknown)$\n            type: string\n            description: \"Status of the current usage. Can be `Normal`, `Approaching`,\\\n              \\ `Exceeded`, or `Unknown` (unable to retrieve usage).\"\n            example: Approaching\n            x-pattern-message: \"must be either `Normal`, `Approaching`, `Exceeded`,\\\n              \\ or `Unknown`\"\n          createdAt:\n            type: string\n            description: The creation timestamp in UTC of the Ingest Budget.\n            format: date-time\n            example: 2018-10-16T09:10:00Z\n          createdBy:\n            type: string\n            description: The identifier of the user who created the Ingest Budget.\n            example: 0000000006743FDD\n          modifiedAt:\n            type: string\n            description: The modified timestamp in UTC of the Ingest Budget.\n            format: date-time\n            example: 2018-10-16T09:10:00Z\n          modifiedBy:\n            type: string\n            description: The identifier of the user who modified the Ingest Budget.\n            example: 0000000001243FDD\n          budgetVersion:\n            type: integer\n            description: The version of the Ingest Budget\n            format: int32\n            example: 2\n    IngestBudgetDefinitionV2:\n      required:\n      - action\n      - capacityBytes\n      - name\n      - resetTime\n      - scope\n      - timezone\n      type: object\n      properties:\n        name:\n          maxLength: 128\n          minLength: 1\n          type: string\n          description: Display name of the ingest budget.\n          example: Developer Budget\n        scope:\n          maxLength: 1024\n          minLength: 1\n          type: string\n          description: \"A scope is a constraint that will be used to identify the\\\n            \\ messages on which budget needs to be applied. A scope is consists of\\\n            \\ key and value separated by =. The field must be enabled in the fields\\\n            \\ table. Value supports wildcard. e.g. _sourceCategory=*prod*payment*,\\\n            \\ cluster=kafka. If the scope is defined _sourceCategory=*nginx* in this\\\n            \\ budget will be applied on messages having fields _sourceCategory=prod/nginx,\\\n            \\ _sourceCategory=dev/nginx, or _sourceCategory=dev/nginx/error\"\n          example: _sourceCategory=*prod*nginx*\n        capacityBytes:\n          minimum: 1\n          type: integer\n          description: \"Capacity of the ingest budget, in bytes. It takes a few minutes\\\n            \\ for Collectors to stop collecting when capacity is reached. We recommend\\\n            \\ setting a soft limit that is lower than your needed hard limit.\"\n          format: int64\n          example: 1000\n        timezone:\n          type: string\n          description: \"Time zone of the reset time for the ingest budget. Follow\\\n            \\ the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).\"\n          example: America/Los_Angeles\n        resetTime:\n          maxLength: 5\n          minLength: 5\n          type: string\n          description: Reset time of the ingest budget in HH:MM format.\n          example: 23:30\n        description:\n          maxLength: 1024\n          minLength: 0\n          type: string\n          description: Description of the ingest budget.\n        action:\n          pattern: ^(keepCollecting|stopCollecting)$\n          type: string\n          description: |-\n            Action to take when ingest budget's capacity is reached. All actions are audited. Supported values are:\n              * `stopCollecting`\n              * `keepCollecting`\n          example: stopCollecting\n          x-pattern-message: must be either `keepCollecting` or `stopCollecting`\n        auditThreshold:\n          maximum: 99\n          minimum: 1\n          type: integer\n          description: The threshold as a percentage of when an ingest budget's capacity\n            usage is logged in the Audit Index.\n          format: int32\n          example: 85\n    ListUserModelsResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: List of users.\n          items:\n            $ref: '#/components/schemas/UserModel'\n        next:\n          type: string\n          description: Next continuation token.\n          example: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc\n    UserModel:\n      type: object\n      allOf:\n      - $ref: '#/components/schemas/CreateUserDefinition'\n      - $ref: '#/components/schemas/MetadataModel'\n      - required:\n        - id\n        properties:\n          id:\n            type: string\n            description: Unique identifier for the user.\n            example: 000000000FE20FE2\n          isActive:\n            type: boolean\n            description: True if the user is active.\n            example: true\n          isLocked:\n            type: boolean\n            description: \"This has the value `true` if the user's account has been\\\n              \\ locked. If a user tries to log into their account several times and\\\n              \\ fails, their account will be locked for security reasons.\"\n            example: false\n          isMfaEnabled:\n            type: boolean\n            description: True if multi factor authentication is enabled for the user.\n            example: false\n          lastLoginTimestamp:\n            type: string\n            description: Timestamp of the last login for the user in UTC. Will be\n              null if the user has never logged in.\n            format: date-time\n    CreateUserDefinition:\n      required:\n      - email\n      - firstName\n      - lastName\n      - roleIds\n      type: object\n      properties:\n        firstName:\n          maxLength: 128\n          minLength: 1\n          type: string\n          description: First name of the user.\n          example: John\n        lastName:\n          maxLength: 128\n          minLength: 0\n          type: string\n          description: Last name of the user.\n          example: Doe\n        email:\n          maxLength: 255\n          type: string\n          description: Email address of the user.\n          format: email\n          example: johndoe@acme.com\n        roleIds:\n          type: array\n          description: List of roleIds associated with the user.\n          example:\n          - 00000000000001DF\n          - 00000000000002D2\n          items:\n            type: string\n    ListUserId:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: List of users.\n          items:\n            type: string\n    UpdateUserDefinition:\n      required:\n      - firstName\n      - isActive\n      - lastName\n      - roleIds\n      type: object\n      properties:\n        firstName:\n          maxLength: 128\n          minLength: 1\n          type: string\n          description: First name of the user.\n          example: John\n        lastName:\n          maxLength: 128\n          minLength: 0\n          type: string\n          description: Last name of the user.\n          example: Doe\n        isActive:\n          type: boolean\n          description: This has the value `true` if the user is active and `false`\n            if they have been deactivated.\n          example: true\n        roleIds:\n          type: array\n          description: List of role identifiers associated with the user.\n          example:\n          - 00000000000001DF\n          - 00000000000002D2\n          items:\n            type: string\n    ChangeEmailRequest:\n      required:\n      - email\n      type: object\n      properties:\n        email:\n          maxLength: 255\n          type: string\n          description: New email address of the user.\n          format: email\n          example: johndoe@acme.com\n    DisableMfaRequest:\n      required:\n      - email\n      - password\n      type: object\n      properties:\n        email:\n          maxLength: 255\n          type: string\n          description: Email of user whose mfa is being disabled.\n          format: email\n          example: johndoe@cme.com\n        password:\n          type: string\n          description: Password of user whose mfa is being disabled.\n    UserInterests:\n      required:\n      - interests\n      type: object\n      properties:\n        interests:\n          type: array\n          description: Labels of user interests.\n          example:\n          - Kubernetes\n          - AWS\n          items:\n            type: string\n    ListRoleModelsResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: List of roles.\n          items:\n            $ref: '#/components/schemas/RoleModel'\n        next:\n          type: string\n          description: Next continuation token.\n          example: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc\n    RoleModel:\n      type: object\n      allOf:\n      - $ref: '#/components/schemas/CreateRoleDefinition'\n      - $ref: '#/components/schemas/MetadataModel'\n      - required:\n        - id\n        properties:\n          id:\n            type: string\n            description: Unique identifier for the role.\n            example: 0000000000E20FE3\n          systemDefined:\n            type: boolean\n            description: Role is system or user defined.\n            example: false\n      x-tf-generated-properties: \"id,name,description,filterPredicate,capabilities\"\n      x-tf-resource-name: Role\n    CreateRoleDefinition:\n      required:\n      - name\n      type: object\n      properties:\n        name:\n          maxLength: 128\n          minLength: 1\n          type: string\n          description: Name of the role.\n          example: DataAdmin\n        description:\n          maxLength: 255\n          minLength: 0\n          type: string\n          description: Description of the role.\n          example: Manage data of the org.\n        filterPredicate:\n          type: string\n          description: \"A search filter to restrict access to specific logs. The filter\\\n            \\ is silently added to the beginning of each query a user runs. For example,\\\n            \\ using '!_sourceCategory=billing' as a filter predicate will prevent\\\n            \\ users assigned to the role from viewing logs from the source category\\\n            \\ named 'billing'.\"\n          example: '!_sourceCategory=billing'\n        users:\n          type: array\n          description: List of user identifiers to assign the role to.\n          example:\n          - 0000000006743FE0\n          - 0000000005FCE0EE\n          items:\n            type: string\n        capabilities:\n          type: array\n          description: |-\n            List of [capabilities](/docs/manage/users-roles/Manage-Roles/Role-Capabilities) associated with this role. Valid values are\n            ### Data Management\n              - viewCollectors\n              - manageCollectors\n              - manageBudgets\n              - manageDataVolumeFeed\n              - viewFieldExtraction\n              - manageFieldExtractionRules\n              - manageS3DataForwarding\n              - manageContent\n              - dataVolumeIndex\n              - manageConnections\n              - viewScheduledViews\n              - manageScheduledViews\n              - viewPartitions\n              - managePartitions\n              - viewFields\n              - manageFields\n              - viewAccountOverview\n              - manageTokens\n              - downloadSearchResults\n\n            ### Entity management\n              - manageEntityTypeConfig\n\n            ### Metrics\n              - metricsTransformation\n              - metricsExtraction\n              - metricsRules\n\n            ### Security\n              - managePasswordPolicy\n              - ipAllowlisting\n              - createAccessKeys\n              - manageAccessKeys\n              - manageSupportAccountAccess\n              - manageAuditDataFeed\n              - manageSaml\n              - shareDashboardOutsideOrg\n              - manageOrgSettings\n              - changeDataAccessLevel\n\n            ### Dashboards\n              - shareDashboardWorld\n              - shareDashboardAllowlist\n\n            ### UserManagement\n              - manageUsersAndRoles\n\n            ### Observability\n              - searchAuditIndex\n              - auditEventIndex\n\n            ### Cloud SIEM Enterprise\n              - viewCse\n\n            ### Alerting\n              - viewMonitorsV2\n              - manageMonitorsV2\n              - viewAlerts\n          example:\n          - manageContent\n          - manageDataVolumeFeed\n          - manageFieldExtractionRules\n          - manageS3DataForwarding\n          items:\n            type: string\n        autofillDependencies:\n          type: boolean\n          description: Set this to true if you want to automatically append all missing\n            capability requirements. If set to false an error will be thrown if any\n            capabilities are missing their dependencies.\n          default: true\n    UpdateRoleDefinition:\n      required:\n      - capabilities\n      - description\n      - filterPredicate\n      - name\n      - users\n      type: object\n      properties:\n        name:\n          maxLength: 128\n          minLength: 1\n          type: string\n          description: Name of the role.\n          example: DataAdmin\n        description:\n          maxLength: 255\n          minLength: 0\n          type: string\n          description: Description of the role.\n          example: Manage data of the org.\n        filterPredicate:\n          type: string\n          description: \"A search filter to restrict access to specific logs. The filter\\\n            \\ is silently added to the beginning of each query a user runs. For example,\\\n            \\ using '!_sourceCategory=billing' as a filter predicate will prevent\\\n            \\ users assigned to the role from viewing logs from the source category\\\n            \\ named 'billing'.\"\n          example: '!_sourceCategory=billing'\n        users:\n          type: array\n          description: List of user identifiers to assign the role to.\n          example:\n          - 0000000006743FE0\n          - 0000000005FCE0EE\n          items:\n            type: string\n        capabilities:\n          type: array\n          description: |-\n            List of [capabilities](/docs/manage/users-roles/Manage-Roles/Role-Capabilities) associated with this role. Valid values are\n            ### Data Management\n              - viewCollectors\n              - manageCollectors\n              - manageBudgets\n              - manageDataVolumeFeed\n              - viewFieldExtraction\n              - manageFieldExtractionRules\n              - manageS3DataForwarding\n              - manageContent\n              - dataVolumeIndex\n              - manageConnections\n              - viewScheduledViews\n              - manageScheduledViews\n              - viewPartitions\n              - managePartitions\n              - viewFields\n              - manageFields\n              - viewAccountOverview\n              - manageTokens\n              - downloadSearchResults\n\n            ### Entity management\n              - manageEntityTypeConfig\n\n            ### Metrics\n              - metricsTransformation\n              - metricsExtraction\n              - metricsRules\n\n            ### Security\n              - managePasswordPolicy\n              - ipAllowlisting\n              - createAccessKeys\n              - manageAccessKeys\n              - manageSupportAccountAccess\n              - manageAuditDataFeed\n              - manageSaml\n              - shareDashboardOutsideOrg\n              - manageOrgSettings\n              - changeDataAccessLevel\n\n            ### Dashboards\n              - shareDashboardWorld\n              - shareDashboardAllowlist\n\n            ### UserManagement\n              - manageUsersAndRoles\n\n            ### Observability\n              - searchAuditIndex\n              - auditEventIndex\n\n            ### Cloud SIEM Enterprise\n              - viewCse\n\n            ### Alerting\n              - viewMonitorsV2\n              - manageMonitorsV2\n              - viewAlerts\n          example:\n          - manageContent\n          - manageDataVolumeFeed\n          - manageFieldExtractionRules\n          - manageS3DataForwarding\n          items:\n            type: string\n        autofillDependencies:\n          type: boolean\n          description: Set this to true if you want to automatically append all missing\n            capability requirements. If set to false an error will be thrown if any\n            capabilities are missing their dependencies.\n          default: true\n    CapabilityMap:\n      required:\n      - capabilities\n      type: object\n      properties:\n        capabilities:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/CapabilityDefinition'\n          description: Map of capabilities to their attributes\n    CapabilityDefinition:\n      required:\n      - dependsOn\n      - group\n      - id\n      - label\n      type: object\n      properties:\n        id:\n          type: string\n          description: The name of the capability\n          example: manageParsers\n        label:\n          type: string\n          description: The UI label for the capability.\n          example: Manage Parsers\n        dependsOn:\n          type: array\n          description: Any capabilities that are required for this capability to be\n            enabled.\n          example:\n          - ViewParsers\n          - EditParsers\n          items:\n            type: string\n        group:\n          required:\n          - id\n          - label\n          type: object\n          properties:\n            id:\n              type: string\n              description: The backend name for the capability group\n              example: CloudSiem\n            label:\n              type: string\n              description: The label for the capability group\n              example: Insights\n            parentId:\n              type: string\n              description: The ID of the parent capability group\n              example: Cloud Siem\n          description: The group that the capability belongs to.\n        message:\n          type: string\n          description: Warning message that appears when this capability is enabled.\n          example: \"By enabling this capability, you are allowing any user in this\\\n            \\ role to share a dashboard, including its contents, with ANYONE who has\\\n            \\ the URL. This URL can be shared with users outside of your organization,\\\n            \\ allowing them to view the dashboard and its contents. Are you sure you\\\n            \\ want to enable this permission?\"\n    CapabilityList:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: List of capabilities\n          items:\n            $ref: '#/components/schemas/CapabilityDefinition'\n    Folder:\n      allOf:\n      - $ref: '#/components/schemas/Content'\n      - type: object\n        properties:\n          description:\n            maxLength: 255\n            minLength: 0\n            type: string\n            description: The description of the folder.\n            example: This is a sample folder.\n          children:\n            type: array\n            description: A list of the content items.\n            items:\n              $ref: '#/components/schemas/Content'\n    FolderDefinition:\n      required:\n      - name\n      - parentId\n      type: object\n      properties:\n        name:\n          maxLength: 128\n          minLength: 1\n          type: string\n          description: The name of the folder.\n          example: SampleFolder\n        description:\n          maxLength: 255\n          minLength: 0\n          type: string\n          description: The description of the folder.\n          example: This is a sample folder.\n        parentId:\n          type: string\n          description: The identifier of the parent folder.\n    UpdateFolderRequest:\n      required:\n      - name\n      type: object\n      properties:\n        name:\n          maxLength: 128\n          minLength: 1\n          type: string\n          description: The name of the folder.\n          example: SampleFolder\n        description:\n          maxLength: 255\n          minLength: 0\n          type: string\n          description: The description of the folder.\n          example: This is a sample folder.\n    ContentList:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: A list of the content items.\n          items:\n            $ref: '#/components/schemas/Content'\n    ContentPermissionResult:\n      required:\n      - explicitPermissions\n      type: object\n      properties:\n        explicitPermissions:\n          type: array\n          description: Explicitly assigned content permissions.\n          items:\n            $ref: '#/components/schemas/ContentPermissionAssignment'\n        implicitPermissions:\n          type: array\n          description: Implicitly inherited content permissions.\n          items:\n            $ref: '#/components/schemas/ContentPermissionAssignment'\n    ContentPermissionAssignment:\n      required:\n      - contentId\n      - permissionName\n      - sourceId\n      - sourceType\n      type: object\n      properties:\n        permissionName:\n          pattern: ^(View|GrantView|Edit|GrantEdit|Manage|GrantManage)$\n          type: string\n          description: \"Content permission name. Valid values are: `View`, `GrantView`,\\\n            \\ `Edit`, `GrantEdit`, `Manage`, and `GrantManage`.\"\n          x-pattern-message: \"must be one of the following: `View`, `GrantView`, `Edit`,\\\n            \\ `GrantEdit`, `Manage`, `GrantManage`\"\n        sourceType:\n          pattern: ^(user|role|org)$\n          type: string\n          description: \"Type of source for the permission. Valid values are: `user`,\\\n            \\ `role`, and `org`.\"\n          example: role\n          x-pattern-message: \"must be one of the following: `user`, `role`, `org`\"\n        sourceId:\n          type: string\n          description: \"An identifier that belongs to the source type chosen above.\\\n            \\ For e.g. if the sourceType is set to \\\"user\\\", sourceId should be identifier\\\n            \\ of a user (same goes for `role` and `org` sourceType)\"\n        contentId:\n          type: string\n          description: Unique identifier for the content item.\n    ContentPermissionUpdateRequest:\n      required:\n      - contentPermissionAssignments\n      - notificationMessage\n      - notifyRecipients\n      type: object\n      properties:\n        contentPermissionAssignments:\n          type: array\n          description: Content permissions to be updated.\n          items:\n            $ref: '#/components/schemas/ContentPermissionAssignment'\n        notifyRecipients:\n          type: boolean\n          description: Set this to \"true\" to notify the users who had a permission\n            update.\n        notificationMessage:\n          type: string\n          description: The notification message sent to the users who had a permission\n            update.\n    Content:\n      type: object\n      allOf:\n      - $ref: '#/components/schemas/MetadataModel'\n      - required:\n        - id\n        - itemType\n        - name\n        - parentId\n        - permissions\n        properties:\n          id:\n            type: string\n            description: Identifier of the content item.\n            example: 000000000C1C17C6\n          name:\n            type: string\n            description: The name of the content item.\n            example: Personal\n          itemType:\n            type: string\n            description: |-\n              Type of the content item. Supported values are:\n                1. Folder\n                2. Search\n                3. Report (for old dashboards)\n                4. Dashboard (for new dashboards)\n                5. Lookups\n            example: Folder\n          parentId:\n            type: string\n            description: Identifier of the parent content item.\n            example: 0000000001C41EF2\n          permissions:\n            type: array\n            description: List of permissions the user has on the content item.\n            example:\n            - View\n            - GrantView\n            - Edit\n            items:\n              type: string\n    MetadataModel:\n      required:\n      - createdAt\n      - createdBy\n      - modifiedAt\n      - modifiedBy\n      type: object\n      properties:\n        createdAt:\n          type: string\n          description: \"Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\\\n            \\ format.\"\n          format: date-time\n          example: 2018-10-16T09:10:00Z\n        createdBy:\n          type: string\n          description: Identifier of the user who created the resource.\n          example: 0000000006743FDD\n        modifiedAt:\n          type: string\n          description: Last modification timestamp in UTC.\n          format: date-time\n          example: 2018-10-16T09:10:00Z\n        modifiedBy:\n          type: string\n          description: Identifier of the user who last modified the resource.\n          example: 0000000006743FE8\n    ContentPath:\n      required:\n      - path\n      type: object\n      properties:\n        path:\n          type: string\n          description: Path of the content item.\n          example: /Library/Users/user@test.com/SampleFolder\n    ContentSyncDefinition:\n      required:\n      - name\n      - type\n      type: object\n      properties:\n        type:\n          type: string\n          description: |-\n            The content item type.\n            **Note:**\n             - `MewboardSyncDefinition` _is depreciated, and will soon be removed. Please use_ `DashboardV2SyncDefinition`\n               _instead_.\n             - Dashboard links are not supported for dashboards.\n        name:\n          type: string\n          description: The name of the item.\n      discriminator:\n        propertyName: type\n    IdArray:\n      type: array\n      items:\n        type: string\n    BulkBeginAsyncJobResponse:\n      required:\n      - errors\n      - jobIds\n      type: object\n      properties:\n        jobIds:\n          type: object\n          additionalProperties:\n            type: string\n          description: Map of content identifiers to job identifiers.\n        errors:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/BulkErrorResponse'\n          description: Map of content identifiers to error messages for all failed\n            job requests\n    BulkErrorResponse:\n      required:\n      - errorResponse\n      - status\n      type: object\n      properties:\n        status:\n          type: integer\n          description: HTTP status code of individual request\n        errorResponse:\n          $ref: '#/components/schemas/ErrorResponse'\n    BulkAsyncStatusResponse:\n      required:\n      - errors\n      - jobStatuses\n      type: object\n      properties:\n        jobStatuses:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/AsyncJobStatus'\n          description: Map of job identifiers to job statuses.\n        errors:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/BulkErrorResponse'\n          description: Map of content identifiers to error messages for all failed\n            job requests\n    TransformationRulesResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: List of transformation rules.\n          items:\n            $ref: '#/components/schemas/TransformationRuleResponse'\n        next:\n          type: string\n          description: Next continuation token.\n          example: aGNzTmZBN1ZZWFk9\n      description: A generic response for transformation rule.\n    TransformationRuleResponse:\n      type: object\n      description: A generic response for transformation rule.\n      allOf:\n      - $ref: '#/components/schemas/TransformationRuleRequest'\n      - $ref: '#/components/schemas/MetadataModel'\n      - required:\n        - id\n        properties:\n          id:\n            type: string\n            description: Unique identifier for the transformation rule.\n    TransformationRuleRequest:\n      required:\n      - enabled\n      - ruleDefinition\n      type: object\n      properties:\n        ruleDefinition:\n          $ref: '#/components/schemas/TransformationRuleDefinition'\n        enabled:\n          type: boolean\n          description: True if the rule is enabled.\n          example: true\n      description: A request for creating or updating a transformation rule.\n    TransformationRuleDefinition:\n      required:\n      - name\n      - retention\n      - selector\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the transformation rule.\n          example: Transformation Rule 1\n        selector:\n          type: string\n          description: Selector of the transformation rule.\n          example: _sourceCategory=metricsstore\n        dimensionTransformations:\n          type: array\n          description: Dimension transformations of the transformation rule.\n          example:\n          - transformationType: AggregateOnTransformation\n            aggregateOn:\n            - metric\n          - transformationType: AddOrReplaceTransformation\n            dimensionToReplace: metric\n            value: \"{{metric}}_aggregated\"\n          items:\n            $ref: '#/components/schemas/DimensionTransformation'\n          default: []\n        transformedMetricsRetention:\n          type: integer\n          description: \"Retention period in days for the transformed metrics that\\\n            \\ are generated by this rule. The supported retention periods for transformed\\\n            \\ metrics are 8 days, and 400 days. If no dimension transformations are\\\n            \\ defined, this value will be set to 0.\"\n          format: int64\n          example: 8\n          default: 0\n        retention:\n          type: integer\n          description: \"Retention period in days for the metrics that are selected\\\n            \\ by the selector. The supported retention periods for selected metrics\\\n            \\ are 8 days, 400 days, and 0 (Do not store) if this rule contains dimension\\\n            \\ transformation.\"\n          format: int64\n          example: 8\n          default: 400\n      description: The properties that define a transformation rule.\n    DimensionTransformation:\n      required:\n      - transformationType\n      type: object\n      properties:\n        transformationType:\n          type: string\n          description: This is the base type of all dimension transformations.\n      description: Base class of all transformation types.\n      discriminator:\n        propertyName: transformationType\n    ContractDetails:\n      required:\n      - contractPeriod\n      - currentBillingPeriod\n      - entitlements\n      - orgId\n      - planType\n      type: object\n      properties:\n        orgId:\n          type: string\n          description: Organization identifier of the account.\n        planType:\n          type: string\n          description: Plan name of the account.\n          example: Sumo Logic Logs and Metrics Analytics Service - Enterprise Edition\n            (Cloud Flex)\n        entitlements:\n          type: array\n          description: List of the entitlements of the account. Entitlements of the\n            account are the list of products subscribed by the user.\n          items:\n            $ref: '#/components/schemas/Entitlements'\n        sharedBuckets:\n          type: array\n          description: Contains list of buckets. Bucket means shared pool from which\n            multiple entitlements can use capacity.\n          items:\n            $ref: '#/components/schemas/SharedBucket'\n        contractPeriod:\n          $ref: '#/components/schemas/ContractPeriod'\n        currentBillingPeriod:\n          $ref: '#/components/schemas/CurrentBillingPeriod'\n      description: |\n        Contract details include Entitlements of the customer such as ContinuousLogs, FrequentLogs, Metrics, Storage, and Dashboards along with the entitlement value of each entitlement.\n    Entitlements:\n      required:\n      - capacity\n      - contractType\n      - entitlementType\n      - label\n      type: object\n      properties:\n        contractType:\n          type: string\n          description: Details of the contract type. `AnnualBucket` are contracts\n            that buy and consume ingest on yearly basis. `Credits` are contracts that\n            buy a single unit called credits for all our features. `DailyAverage`\n            are contracts that buy and consume ingest on a monthly basis.\n          example: \"AnnualBucket, Credits, DailyAverage\"\n        entitlementType:\n          type: string\n          description: \"Text denoting the type of entitlement. - `continuous` for\\\n            \\ Continuous Analytics, - `frequent` for Frequent Analytics, - `storage`\\\n            \\ for Total Storage, - `metrics` for Metrics.\"\n        label:\n          type: string\n          description: The label of an entitlement is the plan name displayed on the\n            accounts page in our user interface.\n          example: Continuous log entitlement is represented by `Daily Log Ingest\n            (Continuous Analytics)`.\n        capacity:\n          $ref: '#/components/schemas/Capacity'\n        capacities:\n          type: array\n          description: Contains the capacities that were part of the contract.\n          items:\n            $ref: '#/components/schemas/Capacity'\n    Capacity:\n      required:\n      - unit\n      - value\n      type: object\n      properties:\n        value:\n          type: number\n          description: The value of the entitlement in units.\n          format: double\n          example: 61425.23\n        unit:\n          type: string\n          description: The unit of the entitlement. Units are provided in `GB` or\n            `DPM`(data points per minute).\n          example: GB\n        capacityType:\n          pattern: ^(Paid|Free)$\n          type: string\n          description: \"Type of capacity. Valid values are: 1) `Paid` : This means\\\n            \\ that the capacity is chargeable. 2) `Free` : This means that this capacity\\\n            \\ is not chargeable.\"\n      description: Amount of entitlement provided by Sumo Logic for the entitlement\n        type of the account.\n    SharedBucket:\n      required:\n      - capacities\n      - label\n      - linkedEntitlementTypes\n      - name\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the bucket.\n          example: totalReservedCredits\n        label:\n          type: string\n          description: The text to be displayed on UI for this bucket.\n          example: Sumo Credits\n        linkedEntitlementTypes:\n          type: array\n          description: List of entitlement types which can consume from this bucket.\n          example:\n          - continuous\n          - frequent\n          - metrics\n          - storage\n          items:\n            type: string\n        capacitites:\n          type: array\n          description: List of capacities alloted.\n          items:\n            $ref: '#/components/schemas/Capacity'\n      description: A shared bucket contains capacities which can be used my multiple\n        entitlements which are linked to the bucket. There will be a 1:many mapping\n        between SharedBucket:Entitlement.\n    ContractPeriod:\n      required:\n      - endDate\n      - startDate\n      type: object\n      properties:\n        startDate:\n          type: string\n          description: Start date of the contract.\n          format: date\n        endDate:\n          type: string\n          description: End date of the contract.\n          format: date\n    CurrentBillingPeriod:\n      required:\n      - endDate\n      - startDate\n      type: object\n      properties:\n        startDate:\n          type: string\n          description: Start date of the current billing period.\n          format: date\n          example: 2012-02-02\n        endDate:\n          type: string\n          description: End date of the current billing period.\n          format: date\n          example: 2012-02-02\n    ConsumptionDetails:\n      required:\n      - endDate\n      - entitlementConsumptions\n      - startDate\n      type: object\n      properties:\n        entitlementConsumptions:\n          type: array\n          description: An array of entitlements.\n          items:\n            $ref: '#/components/schemas/EntitlementConsumption'\n        startDate:\n          type: string\n          description: Start date of the data usage.\n          format: date\n          example: 2019-07-20\n        endDate:\n          type: string\n          description: End date of the data usage.\n          format: date\n          example: 2019-10-20\n      description: List of entitlements consumption.\n    EntitlementConsumption:\n      required:\n      - contractType\n      - dataPoints\n      - entitlementType\n      - operators\n      type: object\n      properties:\n        entitlementType:\n          type: string\n          description: \"String value denoting the type of entitlement. - `continuous`\\\n            \\ for Continuous Analytics, - `frequent` for Frequent Analytics, - `storage`\\\n            \\ for Total Storage, - `metrics` for Metrics.\"\n        datapoints:\n          type: array\n          description: Array of data points of the entitlement with their respective\n            date range.\n          items:\n            $ref: '#/components/schemas/DataPoints'\n        operators:\n          type: array\n          description: \"Operators used on the data. Available operators are `sum`,\\\n            \\ `average`, `usagePercentage`, `forecastValue`, `forecastPercentage`,\\\n            \\ and `forecastRemainingDays`. sum - Returns the sum of the usages. average\\\n            \\ - Returns the average of the usages. usagePercentage - Returns percentage\\\n            \\ of total capacity used for the startDate and endDate. forecastValue\\\n            \\ - Returns expected usage value assuming current usage behavior continues.\\\n            \\ forecastPercentage - Returns expected percentage usage by the endDate\\\n            \\ assuming current usage behavior continues. forecastRemainingDays- Returns\\\n            \\ the number of expected days, from today, that consumption will last\\\n            \\ assuming current usage behavior continues.\"\n          items:\n            $ref: '#/components/schemas/Operator'\n        contractType:\n          type: string\n          description: \"Consumption model of the entitlements, available values are\\\n            \\ `DailyAverage`, `AnnualBucket`, and `Credits`.\"\n          example: DailyAverage\n    DataPoints:\n      required:\n      - timeRange\n      - value\n      type: object\n      properties:\n        timeRange:\n          $ref: '#/components/schemas/BeginBoundedTimeRange'\n        values:\n          type: array\n          description: An array of objects denoting the value and unit of the data\n            points.\n          items:\n            $ref: '#/components/schemas/DataValue'\n      description: Denotes the data points as a result of the groupBy function performed\n        on the usage data.\n    DataValue:\n      required:\n      - unit\n      - value\n      type: object\n      properties:\n        value:\n          type: number\n          description: The value of the data point in units.\n          format: double\n          example: 425\n        unit:\n          type: string\n          description: \"The unit of the entitlement, possible values are `GB`, `DPM`,\\\n            \\ or `Credits`.\"\n          example: GB\n    Operator:\n      required:\n      - name\n      - values\n      type: object\n      properties:\n        values:\n          type: array\n          description: An array of objects denoting the value and unit of the results.\n          items:\n            $ref: '#/components/schemas/DataValue'\n        name:\n          type: string\n          description: The name of the operator applied to the data.\n          example: sum\n      description: \"Result of the aggregations performed on the usages. Operator can\\\n        \\ be `sum`, `average`, `usagePercentage`, `forecastValue`,`forecastPercentage`,\\\n        \\ or `forecastRemainingDays`.\"\n    PlansCatalog:\n      required:\n      - plans\n      type: object\n      properties:\n        plans:\n          type: array\n          description: List of plans available.\n          items:\n            $ref: '#/components/schemas/SelfServicePlan'\n      description: Plans available for the account to update.\n    SelfServicePlan:\n      required:\n      - productGroups\n      - productId\n      - productName\n      - productSubscriptionOptions\n      type: object\n      properties:\n        productId:\n          $ref: '#/components/schemas/ProductId'\n        productName:\n          $ref: '#/components/schemas/ProductName'\n        productGroups:\n          type: array\n          description: A list of product group for preview.\n          items:\n            $ref: '#/components/schemas/ProductGroup'\n        productSubscriptionOptions:\n          type: array\n          description: A list of product subscription option.\n          items:\n            $ref: '#/components/schemas/ProductSubscriptionOption'\n      description: \"Details about a Plan, along with its product groups and subscription\\\n        \\ options\"\n    ProductId:\n      pattern: ^(Essentials|Trial|Free|EnterpriseOps|EnterpriseSec|EnterpriseSuite)$\n      type: string\n      description: |\n        Unique identifier of the product in current plan. Valid values are: 1. `Free` 2. `Trial` 3. `Essentials` 4. `EnterpriseOps` 5. `EnterpriseSec` 6. `EnterpriseSuite`\n      example: Essentials\n      x-pattern-message: \"must be one of the following: `Essentials`, `Trial`, `Free`,\\\n        \\ `EnterpriseOps`, `EnterpriseSec`, `EnterpriseSuite`\"\n    ProductName:\n      type: string\n      description: Name for the product.\n      example: Sumo Logic Continuous Intelligence Service - Essentials Edition\n    ProductGroup:\n      required:\n      - productGroupName\n      - productVariables\n      type: object\n      properties:\n        productGroupName:\n          type: string\n          description: |\n            Name of the Product group:\n          example: Continuous Analytics\n        productGroupId:\n          type: string\n          description: Id of the Product group\n          example: CSE\n        productVariables:\n          type: array\n          description: Different product variables of the product group\n          items:\n            $ref: '#/components/schemas/ProductVariable'\n        provisioningSupported:\n          type: boolean\n          description: Is provisioning supported on this Product Group. This is applicable\n            for product variables which are not enabled by default.\n          example: true\n        description:\n          type: string\n          description: Description about the Product group\n          example: CSE activations can take upto 24 hours.\n        learnMoreLink:\n          type: string\n          description: Link to learn more about the Product group\n          example: /docs/manage/Manage-Subscription/create-manage-orgs\n      description: Details of product group and its quantity.\n    ProductVariable:\n      required:\n      - possibleValues\n      - productVariableId\n      - productVariableName\n      - unit\n      type: object\n      properties:\n        productVariableName:\n          type: string\n          description: Name of a product variable.\n          example: Continuous Log Ingest\n        productVariableId:\n          pattern: ^(continuousIngest|continuousStorage|frequentIngest|frequentStorage|infrequentIngest|infrequentStorage|infrequentScannedData|cseIngest|cseStorage|metrics)$\n          type: string\n          description: Unique Identifier of the product variable.\n          example: continuousIngest\n          x-pattern-message: \"must be one of the following: `continuousIngest`, `continuousStorage`,\\\n            \\ `frequentIngest`, `frequentStorage`, `infrequentIngest`, `infrequentStorage`,\\\n            \\ `infrequentScannedData`, `cseIngest`, `cseStorage`, `metrics`\"\n        unit:\n          type: string\n          description: Unit of measure for the productvariable.\n          example: GB\n        possibleValues:\n          type: array\n          description: Possible values allowed for the productvariable.\n          example:\n          - 3\n          - 5\n          - 10\n          - 20\n          items:\n            type: integer\n            format: int64\n      description: Details of product variable and its quantity.\n    ProductSubscriptionOption:\n      required:\n      - billingFrequency\n      - discountPercentage\n      type: object\n      properties:\n        billingFrequency:\n          $ref: '#/components/schemas/BillingFrequency'\n        discountPercentage:\n          type: integer\n          description: Discount percentage for this plan's subscription.\n          example: 20\n      description: Subscription option containing billing frequency and discount details.\n    BillingFrequency:\n      pattern: ^(Monthly|Annually)$\n      type: string\n      description: |\n        Identifier for the plans billing term. Valid values are:\n         1. Monthly\n         2. Annually\n      example: Monthly\n      x-pattern-message: \"must be one of the following: `Monthly`, `Annually`\"\n    CurrentPlan:\n      required:\n      - billingFrequency\n      - planCost\n      - productId\n      type: object\n      properties:\n        productId:\n          pattern: ^(Essentials|Trial|Free|EnterpriseOps|EnterpriseSec|EnterpriseSuite)$\n          type: string\n          description: |\n            Unique identifier of the product in current plan. Valid values are: 1. `Free` 2. `Trial` 3. `Essentials` 4. `EnterpriseOps` 5. `EnterpriseSec` 6. `EnterpriseSuite`\n          example: Essentials\n          x-pattern-message: \"must be one of the following: `Essentials`, `Trial`,\\\n            \\ `Free`, `EnterpriseOps`, `EnterpriseSec`, `EnterpriseSuite`\"\n        planCost:\n          type: number\n          description: Cost incurred for the current plan.\n          format: double\n          example: 725.46\n        billingFrequency:\n          pattern: ^(Monthly|Annually)$\n          type: string\n          description: |\n            Billing frequency for the current plan. Valid values are: 1. `Monthly` 2. `Annually`\n          example: Monthly\n          x-pattern-message: \"must be one of the following: `Monthly` or `Annually`\"\n        consumables:\n          type: array\n          description: Consumables in the current plan.\n          items:\n            $ref: '#/components/schemas/Consumable'\n        planType:\n          pattern: ^(Free|Trial|Paid)$\n          type: string\n          description: Whether the account is `Free`/`Trial`/`Paid`\n          example: Free\n          x-pattern-message: \"must be one of the following: `Free`, `Trial` or `Paid`\"\n        planName:\n          type: string\n          description: The plan name for the product being used.\n        discountAmount:\n          type: integer\n          description: The discount offered for the given contract period.\n        contractPeriod:\n          $ref: '#/components/schemas/ContractPeriod'\n        currentBillingPeriod:\n          $ref: '#/components/schemas/CurrentBillingPeriod'\n        credits:\n          type: integer\n          description: Numerical value of the amount of credits\n          format: int64\n          example: 300\n        baselines:\n          $ref: '#/components/schemas/Baselines'\n        pendingUpdateRequest:\n          type: boolean\n          description: True if there is a pending update request\n        prorationDetails:\n          $ref: '#/components/schemas/ProrationDetails'\n      description: Current plan of the account.\n    Consumable:\n      required:\n      - consumableId\n      - quantity\n      type: object\n      properties:\n        consumableId:\n          pattern: ^(Storage|Metrics|Continuous|Credits)$\n          type: string\n          description: |\n            Unique identifier of the consumable. Valid values are: 1. `Storage` 2. `Metrics` 3. `Continuous` 4. `Credits`\n          example: Metrics\n          x-pattern-message: \"must be one of the following: `Storage`, `Metrics`,\\\n            \\ `Continuous`, `Credits`\"\n        quantity:\n          $ref: '#/components/schemas/Quantity'\n      description: Details of consumable and its quantity.\n    Quantity:\n      required:\n      - unit\n      - value\n      type: object\n      properties:\n        value:\n          type: integer\n          description: The value of the consumable in units.\n          format: int64\n          example: 61425\n        unit:\n          pattern: ^(GB|DPM|Credits|Days)$\n          type: string\n          description: |\n            The unit of the consumable. Units are provided in: 1. `GB` 2. `DPM`(Data Points Per Minute) 3. `Credits` 4. `Days`\n          example: GB\n          x-pattern-message: \"must be one of the following: `GB`, `DPM`, `Credits`,\\\n            \\ `Days`\"\n      description: Details of unit of consumption and its value.\n    Baselines:\n      type: object\n      properties:\n        continuousIngest:\n          maximum: 1000000\n          minimum: 0\n          type: integer\n          description: \"The amount of continuous logs ingest to allocate to the organization,\\\n            \\ in GBs.\"\n          format: int64\n          example: 50000\n          default: 0\n        continuousStorage:\n          maximum: 30\n          minimum: 30\n          type: integer\n          description: \"Number of days of continuous logs storage to allocate to the\\\n            \\ organization, in Days.\"\n          format: int64\n          example: 30\n          default: 30\n        frequentIngest:\n          maximum: 1000000\n          minimum: 0\n          type: integer\n          description: \"The amount of frequent logs ingest to allocate to the organization,\\\n            \\ in GBs.\"\n          format: int64\n          example: 50000\n          default: 0\n        frequentStorage:\n          maximum: 30\n          minimum: 30\n          type: integer\n          description: \"Number of days of frequent logs storage to allocate to the\\\n            \\ organization, in Days.\"\n          format: int64\n          example: 30\n          default: 30\n        infrequentIngest:\n          maximum: 1000000\n          minimum: 0\n          type: integer\n          description: \"The amount of infrequent logs ingest to allocate to the organization,\\\n            \\ in GBs.\"\n          format: int64\n          example: 50000\n          default: 0\n        infrequentStorage:\n          maximum: 30\n          minimum: 30\n          type: integer\n          description: \"The amount of infrequent logs storage to allocate to the organization,\\\n            \\ in Days.\"\n          format: int64\n          example: 30\n          default: 30\n        infrequentScan:\n          maximum: 1000000\n          minimum: 0\n          type: integer\n          description: \"The amount of infrequent logs scan to allocate to the organization,\\\n            \\ in GBs.\"\n          format: int64\n          example: 50000\n          default: 0\n        metrics:\n          maximum: 1000000\n          minimum: 0\n          type: integer\n          description: \"The amount of Metrics usage to allocate to the organization,\\\n            \\ in DPMs (Data Points per Minute).\"\n          format: int64\n          example: 50000\n          default: 0\n        cseIngest:\n          maximum: 1000000\n          minimum: 0\n          type: integer\n          description: \"The amount of CSE ingest to allocate to the organization,\\\n            \\ in GBs.\"\n          format: int64\n          example: 50000\n          default: 0\n        cseStorage:\n          maximum: 1000000\n          minimum: 0\n          type: integer\n          description: \"The amount of CSE storage to allocate to the organization,\\\n            \\ in GBs.\"\n          format: int64\n          example: 50000\n          default: 0\n        tracingIngest:\n          maximum: 1000000\n          minimum: 0\n          type: integer\n          description: \"The amount of tracing data ingest to allocate to the organization,\\\n            \\ in GBs.\"\n          format: int64\n          example: 50000\n          default: 0\n      description: Details of consumable and its quantity.\n    ProrationDetails:\n      required:\n      - proratedCost\n      - proratedCredits\n      - remainingDays\n      type: object\n      properties:\n        remainingDays:\n          type: integer\n          description: Remaining days in the billing cycle for which the new plan\n            is prorated.\n          format: int32\n        proratedCredits:\n          type: integer\n          description: Total prorated credits that get added to the bucket based on\n            the remaining billing period.\n          format: int32\n        proratedCost:\n          type: number\n          description: Cost of the total prorated credits.\n          format: double\n      description: Details about the prorated credits and prorated cost in case of\n        immediate monthly to monthly cycle upgrades.\n    UpdateRequest:\n      required:\n      - baselines\n      - billingFrequency\n      - productId\n      type: object\n      properties:\n        productId:\n          $ref: '#/components/schemas/ProductId'\n        billingFrequency:\n          $ref: '#/components/schemas/BillingFrequency'\n        baselines:\n          $ref: '#/components/schemas/SelfServiceCreditsBaselines'\n        immediate:\n          type: boolean\n          description: true in case the subscription baselines need to be updated\n            immediately(only for monthly customers who are staying on the monthly\n            plan)\n          default: false\n      description: Update request for the account.\n    SelfServiceCreditsBaselines:\n      type: object\n      properties:\n        continuousIngest:\n          minimum: 0\n          type: integer\n          description: \"The amount of continuous logs ingest to allocate to the organization,\\\n            \\ in GBs.\"\n          format: int64\n          example: 5\n          default: 0\n        continuousStorage:\n          minimum: 0\n          type: integer\n          description: \"Number of days of continuous logs storage to allocate to the\\\n            \\ organization, in Days.\"\n          format: int64\n          example: 30\n          default: 0\n        metrics:\n          minimum: 0\n          type: integer\n          description: \"The amount of Metrics usage to allocate to the organization,\\\n            \\ in DPMs (Data Points per Minute).\"\n          format: int64\n          example: 20000\n          default: 0\n        tracingIngest:\n          minimum: 0\n          type: integer\n          description: \"The amount of tracing data ingest to allocate to the organization,\\\n            \\ in GBs.\"\n          format: int64\n          example: 1\n          default: 0\n      description: Details of product variables and its quantity as required for credits.\n    UpgradePlans:\n      required:\n      - plans\n      type: object\n      properties:\n        plans:\n          type: array\n          description: List of plans available.\n          items:\n            $ref: '#/components/schemas/Plan'\n      description: Upgrade plans available for the account.\n    Plan:\n      required:\n      - productGroups\n      - productId\n      - productName\n      type: object\n      properties:\n        productId:\n          $ref: '#/components/schemas/ProductId'\n        productName:\n          $ref: '#/components/schemas/ProductName'\n        productGroups:\n          type: array\n          description: A list of product group for preview.\n          items:\n            $ref: '#/components/schemas/ProductGroup'\n      description: Upgrade preview request for the account.\n    AccountStatusResponse:\n      required:\n      - applicationUse\n      - canUpdatePlan\n      - planType\n      - pricingModel\n      type: object\n      properties:\n        pricingModel:\n          pattern: ^(credits|cloudflex)$\n          type: string\n          description: Whether the account is `cloudflex` or `credits`\n          example: credits\n        canUpdatePlan:\n          type: boolean\n          description: If the plan can be updated by the given user\n          example: true\n        planType:\n          pattern: ^(Free|Trial|Paid)$\n          type: string\n          description: Whether the account is `Free`/`Trial`/`Paid`\n          example: Free\n        planExpirationDays:\n          type: integer\n          description: The number of days in which the plan will expire\n          example: 20\n        applicationUse:\n          pattern: ^(ALLOWED|ALLOWED_WITH_WARNING|THROTTLED|RESTRICTED)$\n          type: string\n          description: The current usage of the application.\n          example: ALLOWED\n        accountActivated:\n          type: boolean\n          description: If the account is activated or not\n          example: true\n      description: Information about the account's plan and payment.\n    SubdomainDefinitionResponse:\n      required:\n      - createdAt\n      - createdBy\n      - modifiedAt\n      - modifiedBy\n      - subdomain\n      - url\n      type: object\n      properties:\n        createdAt:\n          type: string\n          description: |\n            Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format.\n          format: date-time\n        createdBy:\n          type: string\n          description: Identifier of the user who created the resource.\n        modifiedAt:\n          type: string\n          description: Last modification timestamp in UTC.\n          format: date-time\n        modifiedBy:\n          type: string\n          description: Identifier of the user who last modified the resource.\n        subdomain:\n          type: string\n          description: The new subdomain.\n          example: my-company\n        url:\n          type: string\n          description: Login URL corresponding to the subdomain.\n          example: https://your-company.sumologic.com\n    ConfigureSubdomainRequest:\n      required:\n      - subdomain\n      type: object\n      properties:\n        subdomain:\n          maxLength: 63\n          minLength: 4\n          pattern: \"^(?!xn--)[a-z0-9]([a-z0-9-]*[a-z0-9])?$\"\n          type: string\n          description: The new subdomain.\n          example: my-company\n    SubdomainAvailabilityResponse:\n      required:\n      - isAvailable\n      type: object\n      properties:\n        isAvailable:\n          type: boolean\n          description: Subdomain is available for use or not.\n          example: false\n    SubdomainUrlResponse:\n      required:\n      - url\n      type: object\n      properties:\n        url:\n          type: string\n          description: Login URL corresponding to the subdomain.\n          example: https://your-company.sumologic.com\n    TotalCredits:\n      required:\n      - totalCredits\n      type: object\n      properties:\n        totalCredits:\n          type: number\n          description: Numerical value of the amount of credits\n          format: double\n          example: 300.0\n        breakdown:\n          $ref: '#/components/schemas/CreditsBreakdown'\n      description: Total amount of credits to be deducted from the parent organization\n        corresponding to the baselines\n    CreditsBreakdown:\n      required:\n      - allocatedCredits\n      - deploymentChargeCredits\n      type: object\n      properties:\n        deploymentChargeCredits:\n          type: number\n          description: The total credits deducted from the parent organization in\n            the form of deployment charge.\n          format: double\n          example: 100.0\n        allocatedCredits:\n          type: number\n          description: The total useable credits allocated to the child organization.\n          format: double\n          example: 200.0\n      description: Breakdown of the credits.\n    CalculatorRequest:\n      type: object\n      properties:\n        parentDeploymentId:\n          maxLength: 4\n          type: string\n          description: Identifier of the deployment in which the parent org is present.\n          example: us2\n        deploymentId:\n          type: string\n          description: Identifier of the deployment in which the child org is present.\n          example: us2\n        trialPlanPeriod:\n          type: integer\n          description: length of the trial period.\n          example: 45\n        baselines:\n          $ref: '#/components/schemas/Baselines'\n      description: Details of the request\n    PlanUpdateEmail:\n      required:\n      - baselines\n      - emailId\n      type: object\n      properties:\n        emailId:\n          maxLength: 255\n          type: string\n          description: email id on which support team will contact on\n          format: email\n          example: johndoe@acme.com\n        phoneNumber:\n          maxLength: 30\n          type: string\n          description: contact number on which support team can call user\n          example: +01-87789-65749\n        billingFrequency:\n          pattern: ^(Monthly|Annually|)$\n          type: string\n          description: The frequency with with the customer needs to be billed at.\n            The current supported values are Monthly and Annually\n          example: Monthly\n          x-pattern-message: \"must be one of the following: `Monthly`, `Annually`\"\n        baselines:\n          $ref: '#/components/schemas/SelfServiceCreditsBaselines'\n        details:\n          type: string\n          description: option details the user might want to inform\n          example: I need some help with my plan.\n      description: details of the plan for updating with contact information\n    PendingUpdateRequest:\n      required:\n      - createdOn\n      - plan\n      type: object\n      properties:\n        createdOn:\n          type: string\n          description: The date on which the update request was created.\n          format: date\n        plan:\n          $ref: '#/components/schemas/CurrentPlan'\n      description: The pending plan update request for the account\n    SumoOrgsUsageBackfillRequest:\n      required:\n      - customerId\n      - from\n      - to\n      type: object\n      properties:\n        customerId:\n          type: integer\n          description: the customer ID of a mam org\n          format: int64\n          example: 12345\n        from:\n          type: integer\n          description: epoch millis of date from which usage is to be copied\n          format: int64\n          example: 1661106600000\n        to:\n          type: integer\n          description: epoch millis of date upto which usage is to be copied\n          format: int64\n          example: 1661426182666\n    MetricsSearchInstance:\n      allOf:\n      - $ref: '#/components/schemas/MetricsSearchV1'\n      - $ref: '#/components/schemas/MetadataModel'\n      - required:\n        - id\n        type: object\n        properties:\n          id:\n            type: string\n            description: Identifier of the metrics search.\n            example: 000000000000001A\n          parentId:\n            type: string\n            description: \"Identifier of the parent element in the content library,\\\n              \\ such as folder.\"\n            example: 0000000000007D2B\n    MetricsSearchV1:\n      required:\n      - description\n      - metricsQueries\n      - timeRange\n      - title\n      type: object\n      properties:\n        title:\n          maxLength: 255\n          minLength: 1\n          pattern: \"^[a-zA-Z0-9 +%-@.,_()]+$\"\n          type: string\n          description: Item title in the content library.\n          example: Short title\n        description:\n          maxLength: 8192\n          type: string\n          description: Item description in the content library.\n          example: Long and detailed description\n        timeRange:\n          $ref: '#/components/schemas/ResolvableTimeRange'\n        logQuery:\n          maxLength: 10240\n          type: string\n          description: Log query used to add an overlay to the chart.\n          example: my_metric | timeslice 1m | count by _timeslice\n        metricsQueries:\n          type: array\n          description: \"Metrics queries, up to the maximum of six.\"\n          items:\n            $ref: '#/components/schemas/MetricsSearchQuery'\n        desiredQuantizationInSecs:\n          minimum: 0\n          type: integer\n          description: Desired quantization in seconds.\n          format: int32\n          example: 60\n          default: 0\n        properties:\n          type: string\n          description: |\n            Chart properties, like line width, color palette, and the fill missing data method. Leave this field empty to use the defaults.\n            This property contains JSON object encoded as a string.\n          example: \"{ \\\\\\\"key\\\\\\\": \\\\\\\"value\\\\\\\" }\"\n      description: Definition of a metrics search.\n    MetricsSearchQuery:\n      required:\n      - query\n      - rowId\n      type: object\n      properties:\n        rowId:\n          type: string\n          description: Row identifier. All row IDs are represented by subsequent upper\n            case letters starting with `A`.\n          example: A\n        query:\n          type: string\n          description: Metrics query.\n          example: my_metric | avg\n      description: Definition of a metrics query.\n    SaveMetricsSearchRequest:\n      type: object\n      description: The definition of the metrics search to save in the content library.\n      allOf:\n      - $ref: '#/components/schemas/MetricsSearchV1'\n      - required:\n        - parentId\n        type: object\n        properties:\n          parentId:\n            type: string\n            description: Identifier of a folder to which the metrics search should\n              be added.\n            example: 000000000000001A\n    ListTokensBaseResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: List of tokens.\n          items:\n            $ref: '#/components/schemas/TokenBaseResponse'\n    TokenBaseResponse:\n      required:\n      - createdAt\n      - createdBy\n      - description\n      - id\n      - modifiedAt\n      - modifiedBy\n      - name\n      - status\n      - type\n      - version\n      type: object\n      properties:\n        id:\n          type: string\n          description: Identifier of the token.\n        name:\n          maxLength: 255\n          minLength: 1\n          type: string\n          description: Name of the token.\n          example: token-name\n        description:\n          maxLength: 4096\n          minLength: 0\n          type: string\n          description: Description of the token.\n          example: \"token description: for test.\"\n        status:\n          pattern: ^(Active|Inactive)$\n          type: string\n          description: \"Status of the token. Can be `Active`, or `Inactive`.\"\n          example: Active\n          x-pattern-message: must be either `Active` or `Inactive`\n        type:\n          pattern: ^(CollectorRegistrationTokenResponse)$\n          type: string\n          description: \"Type of the token. Valid values: 1) CollectorRegistrationTokenResponse\"\n          example: CollectorRegistrationTokenResponse\n          x-pattern-message: must be `CollectorRegistrationTokenResponse`\n        version:\n          type: integer\n          description: Version of the token.\n          format: int64\n        createdAt:\n          type: string\n          description: \"Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\\\n            \\ format.\"\n          format: date-time\n        createdBy:\n          type: string\n          description: Identifier of the user who created the resource.\n        modifiedAt:\n          type: string\n          description: Last modification timestamp in UTC.\n          format: date-time\n        modifiedBy:\n          type: string\n          description: Identifier of the user who last modified the resource.\n      discriminator:\n        propertyName: type\n    TokenBaseDefinition:\n      required:\n      - name\n      - status\n      - type\n      type: object\n      properties:\n        name:\n          maxLength: 255\n          minLength: 1\n          type: string\n          description: Name of the token.\n          example: token-name\n        description:\n          maxLength: 4096\n          minLength: 0\n          type: string\n          description: Description of the token.\n          example: \"token description: for test.\"\n        status:\n          pattern: ^(Active|Inactive)$\n          type: string\n          description: \"Status of the token. Can be `Active`, or `Inactive`.\"\n          example: Active\n          x-pattern-message: must be either `Active` or `Inactive`\n        type:\n          pattern: ^(CollectorRegistration)$\n          type: string\n          description: \"Type of the token. Valid values: 1) CollectorRegistration\"\n          example: CollectorRegistration\n          x-pattern-message: must be `CollectorRegistration`\n    TokenBaseDefinitionUpdate:\n      required:\n      - name\n      - status\n      - type\n      - version\n      type: object\n      properties:\n        name:\n          maxLength: 255\n          minLength: 1\n          type: string\n          description: Name of the token.\n          example: token-name\n        description:\n          maxLength: 4096\n          minLength: 0\n          type: string\n          description: Description of the token.\n          example: \"token description: for test.\"\n        status:\n          pattern: ^(Active|Inactive)$\n          type: string\n          description: \"Status of the token. Can be `Active`, or `Inactive`.\"\n          example: Active\n          x-pattern-message: must be either `Active` or `Inactive`\n        type:\n          pattern: ^(CollectorRegistration)$\n          type: string\n          description: \"Type of the token. Valid values: 1) CollectorRegistration\"\n          example: CollectorRegistration\n          x-pattern-message: must be `CollectorRegistration`\n        version:\n          type: integer\n          description: Version of the token.\n          format: int64\n    PaginatedListAccessKeysResult:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: An array of access keys.\n          items:\n            $ref: '#/components/schemas/AccessKeyPublic'\n        next:\n          type: string\n          description: Next continuation token.\n          example: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc\n      description: List of access keys.\n    AccessKeyPublic:\n      required:\n      - createdAt\n      - createdBy\n      - disabled\n      - id\n      - label\n      - modifiedAt\n      type: object\n      properties:\n        id:\n          type: string\n          description: Identifier of the access key.\n          example: su0w3Q37CBzHUM\n        label:\n          type: string\n          description: The name of the access key.\n          example: collector access key\n        corsHeaders:\n          type: array\n          description: |-\n            An array of domains for which the access key is valid. Whether Sumo Logic accepts or rejects an API request depends on whether it contains an ORIGIN header and the entries in the allowlist. Sumo Logic will reject:\n              1. Requests with an ORIGIN header but the allowlist is empty.\n              2. Requests with an ORIGIN header that don't match any entry in the allowlist.\n          example:\n          - https://my-app.com\n          - https://mail.my-app.com\n          items:\n            type: string\n        disabled:\n          type: boolean\n          description: Indicates whether the access key is disabled or not.\n          example: false\n        createdAt:\n          type: string\n          description: \"Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\\\n            \\ format.\"\n          format: date-time\n          example: 2018-10-16T09:10:00Z\n        createdBy:\n          type: string\n          description: Identifier of the user who created the access key.\n          example: 0000000006743FDD\n        modifiedAt:\n          type: string\n          description: Last modification timestamp in UTC.\n          format: date-time\n          example: 2018-10-16T09:10:00Z\n        lastUsed:\n          type: string\n          description: \"Last used timestamp in UTC.  \u003cbr\u003e **Note:** Property not in\\\n            \\ use, it is part of an upcoming feature.\"\n          format: date-time\n          example: 2018-10-16T09:10:00Z\n    AccessKey:\n      allOf:\n      - $ref: '#/components/schemas/AccessKeyPublic'\n      - required:\n        - key\n        type: object\n        properties:\n          key:\n            type: string\n            description: The key for the created access key. This field will have\n              values only in the response for an access key create request. The value\n              will be an empty string while listing all keys.\n            example: F9GZvb4fISxUZHM7pqHCsGXGWf4OArgmt9Tz8ewZ\n    AccessKeyCreateRequest:\n      required:\n      - label\n      type: object\n      properties:\n        label:\n          maxLength: 128\n          type: string\n          description: A name for the access key to be created.\n          example: automation access key\n        corsHeaders:\n          maxItems: 20\n          type: array\n          description: |-\n            An array of domains for which the access key is valid. Whether Sumo Logic accepts or rejects an API request\n            depends on whether it contains an ORIGIN header and the entries in the allowlist.\n            Sumo Logic will reject:\n              1. Requests with an ORIGIN header but the allowlist is empty.\n              2. Requests with an ORIGIN header that don't match any entry in the allowlist.\n          example:\n          - https://my-app.com\n          - https://mail.my-app.com\n          items:\n            type: string\n    ListAccessKeysResult:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: An array of access keys.\n          items:\n            $ref: '#/components/schemas/AccessKeyPublic'\n      description: List of access keys.\n    AccessKeyUpdateRequest:\n      required:\n      - disabled\n      type: object\n      properties:\n        disabled:\n          type: boolean\n          description: Indicates whether the access key is disabled or not.\n          example: true\n        corsHeaders:\n          maxItems: 20\n          type: array\n          description: |-\n            An array of domains for which the access key is valid. Whether Sumo Logic accepts or rejects an API request depends on whether it contains an ORIGIN header and the entries in the allowlist. Sumo Logic will reject:\n              1. Requests with an ORIGIN header but the allowlist is empty.\n              2. Requests with an ORIGIN header that don't match any entry in the allowlist.\n          example:\n          - https://my-app.com\n          - https://mail.my-app.com\n          items:\n            type: string\n    SamlIdentityProvider:\n      type: object\n      allOf:\n      - $ref: '#/components/schemas/SamlIdentityProviderRequest'\n      - $ref: '#/components/schemas/AuthnCertificateResult'\n      - $ref: '#/components/schemas/MetadataModel'\n      - required:\n        - id\n        properties:\n          id:\n            type: string\n            description: Unique identifier of the SAML Identity Provider.\n            example: 00000000361130F7\n          assertionConsumerUrl:\n            type: string\n            description: The URL on Sumo Logic where the IdP will redirect to with\n              its authentication response.\n            example: https://service.sumologic.com/sumo/saml/consume/9483922\n            default: \"\"\n          entityId:\n            type: string\n            description: A unique identifier that is the intended audience of the\n              SAML assertion.\n            example: https://service.sumologic.com/sumo/saml/9483922\n            default: \"\"\n    SamlIdentityProviderRequest:\n      required:\n      - configurationName\n      - issuer\n      - x509cert1\n      type: object\n      properties:\n        spInitiatedLoginPath:\n          type: string\n          description: This property has been deprecated and is no longer used.\n          example: http://www.okta.com/abxcseyuiwelflkdjh\n          deprecated: true\n          default: \"\"\n        configurationName:\n          type: string\n          description: Name of the SSO policy or another name used to describe the\n            policy internally.\n          example: SumoLogic\n        issuer:\n          type: string\n          description: The unique URL assigned to the organization by the SAML Identity\n            Provider.\n          example: http://www.okta.com/abxcseyuiwelflkdjh\n        spInitiatedLoginEnabled:\n          type: boolean\n          description: True if Sumo Logic redirects users to your identity provider\n            with a SAML AuthnRequest when signing in.\n          default: false\n        authnRequestUrl:\n          type: string\n          description: The URL that the identity provider has assigned for Sumo Logic\n            to submit SAML authentication requests to the identity provider.\n          example: https://www.okta.com/app/sumologic/abxcseyuiwelflkdjh/sso/saml\n          default: \"\"\n        x509cert1:\n          type: string\n          description: The certificate is used to verify the signature in SAML assertions.\n        x509cert2:\n          type: string\n          description: The backup certificate used to verify the signature in SAML\n            assertions when x509cert1 expires.\n          default: \"\"\n        x509cert3:\n          type: string\n          description: The backup certificate used to verify the signature in SAML\n            assertions when x509cert1 expires and x509cert2 is empty.\n          default: \"\"\n        onDemandProvisioningEnabled:\n          $ref: '#/components/schemas/OnDemandProvisioningInfo'\n        rolesAttribute:\n          type: string\n          description: The role that Sumo Logic will assign to users when they sign\n            in.\n          example: Sumo_Role\n          default: \"\"\n        logoutEnabled:\n          type: boolean\n          description: True if users are redirected to a URL after signing out of\n            Sumo Logic.\n          default: false\n        logoutUrl:\n          type: string\n          description: The URL that users will be redirected to after signing out\n            of Sumo Logic.\n          example: https://www.sumologic.com\n          default: \"\"\n        emailAttribute:\n          type: string\n          description: The email address of the new user account.\n          example: attribute/subject\n          default: \"\"\n        debugMode:\n          type: boolean\n          description: True if additional details are included when a user fails to\n            sign in.\n          default: false\n        signAuthnRequest:\n          type: boolean\n          description: True if Sumo Logic will send signed Authn requests to the identity\n            provider.\n          default: false\n        disableRequestedAuthnContext:\n          type: boolean\n          description: True if Sumo Logic will include the RequestedAuthnContext element\n            of the SAML AuthnRequests it sends to the identity provider.\n          default: false\n        isRedirectBinding:\n          type: boolean\n          description: True if the SAML binding is of HTTP Redirect type.\n          default: false\n    OnDemandProvisioningInfo:\n      required:\n      - onDemandProvisioningRoles\n      type: object\n      properties:\n        firstNameAttribute:\n          type: string\n          description: First name attribute of the new user account.\n          example: http://schemas.microsoft.com/ws/2008/06/identity/claims/givenname\n          default: \"\"\n        lastNameAttribute:\n          type: string\n          description: Last name attribute of the new user account.\n          example: http://schemas.microsoft.com/ws/2008/06/identity/claims/surname\n          default: \"\"\n        onDemandProvisioningRoles:\n          type: array\n          description: Sumo Logic RBAC roles to be assigned when user accounts are\n            provisioned.\n          example: \"[\\\"Analyst\\\", \\\"Administrator\\\"]\"\n          items:\n            type: string\n          default: []\n    AuthnCertificateResult:\n      required:\n      - certificate\n      type: object\n      properties:\n        certificate:\n          type: string\n          description: Authentication Request Signing Certificate for the user.\n    AllowlistedUserResult:\n      required:\n      - canManageSaml\n      - email\n      - firstName\n      - isActive\n      - lastLogin\n      - lastName\n      - userId\n      type: object\n      properties:\n        userId:\n          type: string\n          description: Unique identifier of the user.\n        firstName:\n          type: string\n          description: First name of the user.\n        lastName:\n          type: string\n          description: Last name of the user.\n        email:\n          type: string\n          description: Email of the user.\n          example: john@sumologic.com\n        canManageSaml:\n          type: boolean\n          description: If the user can manage SAML Configurations.\n        isActive:\n          type: boolean\n          description: Checks if the user is active.\n        lastLogin:\n          type: string\n          description: Timestamp of the last login of the user.\n          format: date-time\n    CidrList:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          maxItems: 50\n          type: array\n          description: An array of CIDR notations and/or IP addresses.\n          items:\n            $ref: '#/components/schemas/Cidr'\n      description: A list of CIDR notations and/or IP addresses.\n    Cidr:\n      required:\n      - cidr\n      type: object\n      properties:\n        cidr:\n          pattern: \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\\\\\\n            /([0-9]|[1-2][0-9]|3[0-2]))?$\"\n          type: string\n          description: The string representation of the CIDR notation or IP address.\n          example: 192.35.24.1\n          x-pattern-message: Invalid CIDR/IP\n        description:\n          type: string\n          description: Description of the CIDR notation or IP address.\n          example: Accountant\n      description: A CIDR notation or IP address along with its description.\n    AllowlistingStatus:\n      required:\n      - contentEnabled\n      - loginEnabled\n      type: object\n      properties:\n        contentEnabled:\n          type: boolean\n          description: Whether service allowlisting is enabled for Content.\n        loginEnabled:\n          type: boolean\n          description: Whether service allowlisting is enabled for Login.\n      description: The status of service allowlisting for Content and Login.\n    AuditPolicy:\n      required:\n      - enabled\n      type: object\n      properties:\n        enabled:\n          type: boolean\n          description: Whether the Audit policy is enabled.\n          example: true\n      description: Audit policy.\n    SearchAuditPolicy:\n      required:\n      - enabled\n      type: object\n      properties:\n        enabled:\n          type: boolean\n          description: Whether the Search Audit policy is enabled.\n          example: true\n      description: Search Audit policy.\n    ShareDashboardsOutsideOrganizationPolicy:\n      required:\n      - enabled\n      type: object\n      properties:\n        enabled:\n          type: boolean\n          description: Whether the Share Dashboards Outside Organization policy is\n            enabled.\n          example: true\n      description: Share Dashboards Outside Organization policy.\n    DataAccessLevelPolicy:\n      required:\n      - enabled\n      type: object\n      properties:\n        enabled:\n          type: boolean\n          description: Whether the Data Access Level policy is enabled.\n          example: true\n      description: Data Access Level policy.\n    UserConcurrentSessionsLimitPolicy:\n      required:\n      - enabled\n      type: object\n      properties:\n        enabled:\n          type: boolean\n          description: Whether the User Concurrent Sessions Limit policy is enabled.\n          example: true\n        maxConcurrentSessions:\n          maximum: 100\n          minimum: 1\n          type: integer\n          description: Maximum number of concurrent sessions a user may have.\n          format: int32\n          example: 50\n          default: 100\n      description: User Concurrent Sessions Limit policy.\n    MaxUserSessionTimeoutPolicy:\n      required:\n      - maxUserSessionTimeout\n      type: object\n      properties:\n        maxUserSessionTimeout:\n          pattern: ^(5m|15m|30m|1h|2h|6h|12h|1d|2d|3d|5d|7d)$\n          type: string\n          description: \"Maximum web session timeout users are able to configure within\\\n            \\ their user preferences. Valid values are: `5m`, `15m`, `30m`, `1h`,\\\n            \\ `2h`, `6h`, `12h`, `1d`, `2d`, `3d`, `5d`, or `7d`\"\n          example: 1d\n          x-pattern-message: \"must be one of the following: `5m`, `15m`, `30m`, `1h`,\\\n            \\ `2h`, `6h`, `12h`, `1d`, `2d`, `3d`, `5d`, or `7d`\"\n      description: Max User Session Timeout policy.\n    ListHealthEventResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: List of health events.\n          items:\n            $ref: '#/components/schemas/HealthEvent'\n        next:\n          type: string\n          description: Next continuation token.\n    HealthEvent:\n      required:\n      - details\n      - eventId\n      - eventName\n      - eventTime\n      - resourceIdentity\n      - severityLevel\n      - subsystem\n      type: object\n      properties:\n        eventId:\n          type: string\n          description: The unique identifier of the event.\n          example: e801dc7d-f483-46e9-bcc9-410f08f96497\n        eventName:\n          type: string\n          description: The name of the event.\n          example: InstalledCollectorOffline\n        details:\n          $ref: '#/components/schemas/TrackerIdentity'\n        resourceIdentity:\n          $ref: '#/components/schemas/ResourceIdentity'\n        eventTime:\n          type: string\n          description: \"Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\\\n            \\ format.\"\n          format: date-time\n          example: 2018-10-16T09:10:00Z\n        subsystem:\n          type: string\n          description: The product area of the event.\n        severityLevel:\n          type: string\n          description: The criticality of the event. It is either `Error` or `Warning`\n    ResourceIdentities:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: A list of the resources.\n          items:\n            $ref: '#/components/schemas/ResourceIdentity'\n    ListArchiveJobsResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: List of Archive Jobs.\n          items:\n            $ref: '#/components/schemas/ArchiveJob'\n        next:\n          type: string\n          description: Next continuation token.\n    ArchiveJob:\n      type: object\n      allOf:\n      - $ref: '#/components/schemas/CreateArchiveJobRequest'\n      - required:\n        - createdAt\n        - createdBy\n        - id\n        - status\n        - totalBytesIngested\n        - totalObjectsIngested\n        - totalObjectsScanned\n        properties:\n          id:\n            type: string\n            description: The unique identifier of the ingestion job.\n            example: 4e214571-cf27-4114-93e6-69a98c017f3\n          totalObjectsScanned:\n            type: integer\n            description: The total number of objects scanned by the ingestion job.\n            format: int64\n            example: 25\n          totalObjectsIngested:\n            type: integer\n            description: The total number of objects ingested by the ingestion job.\n            format: int64\n            example: 10\n          totalBytesIngested:\n            type: integer\n            description: The total bytes ingested by the ingestion job.\n            format: int64\n            example: 100\n          status:\n            type: string\n            description: \"The status of the ingestion job, either `Pending`,`Scanning`,`Ingesting`,`Failed`,\\\n              \\ or `Succeeded`.\"\n            example: Scanning\n          createdAt:\n            type: string\n            description: The creation timestamp in UTC of the ingestion job.\n            format: date-time\n            example: 2018-10-16T09:10:00Z\n          createdBy:\n            type: string\n            description: The identifier of the user who created the ingestion job.\n            example: 0000000006743FDD\n    CreateArchiveJobRequest:\n      required:\n      - endTime\n      - name\n      - startTime\n      type: object\n      properties:\n        name:\n          maxLength: 128\n          minLength: 1\n          type: string\n          description: The name of the ingestion job.\n        startTime:\n          type: string\n          description: The starting timestamp of the ingestion job.\n          format: date-time\n          example: 2018-10-16T09:10:00Z\n        endTime:\n          type: string\n          description: The ending timestamp of the ingestion job.\n          format: date-time\n          example: 2018-10-16T10:10:00Z\n    ListArchiveJobsCount:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: List of archive sources with count of jobs having various statuses.\n          items:\n            $ref: '#/components/schemas/ArchiveJobsCount'\n    ArchiveJobsCount:\n      required:\n      - failed\n      - ingesting\n      - pending\n      - scanning\n      - sourceId\n      - succeeded\n      type: object\n      properties:\n        sourceId:\n          type: string\n          description: Identifier for the archive source.\n          example: 000000000606C009\n        pending:\n          type: integer\n          description: The total number of archive jobs with pending status for the\n            archive source.\n          format: int64\n          example: 4\n        scanning:\n          type: integer\n          description: The total number of archive jobs with scanning status for the\n            archive source.\n          format: int64\n          example: 1\n        ingesting:\n          type: integer\n          description: The total number of archive jobs with ingesting status for\n            the archive source.\n          format: int64\n          example: 2\n        failed:\n          type: integer\n          description: The total number of archive jobs with failed status for the\n            archive source.\n          format: int64\n          example: 5\n        succeeded:\n          type: integer\n          description: The total number of archive jobs with succeeded status for\n            the archive source.\n          format: int64\n          example: 20\n    LogSearchEstimatedUsageDefinition:\n      allOf:\n      - $ref: '#/components/schemas/LogSearchEstimatedUsageRequest'\n      - required:\n        - estimatedUsageDetails\n        type: object\n        properties:\n          estimatedUsageDetails:\n            $ref: '#/components/schemas/EstimatedUsageDetails'\n    LogSearchEstimatedUsageRequest:\n      allOf:\n      - $ref: '#/components/schemas/LogSearchQueryTimeRangeBase'\n      - required:\n        - timezone\n        type: object\n        properties:\n          timezone:\n            type: string\n            description: |\n              Time zone to get the estimated usage details. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).\n            example: America/Los_Angeles\n    EstimatedUsageDetails:\n      type: object\n      properties:\n        dataScannedInBytes:\n          type: integer\n          description: \"Amount of data scanned in bytes, to run the query.\"\n          format: int64\n          example: 114086541\n    LogSearchEstimatedUsageByTierDefinition:\n      allOf:\n      - $ref: '#/components/schemas/LogSearchEstimatedUsageRequestV2'\n      - required:\n        - estimatedUsageDetails\n        type: object\n        properties:\n          estimatedUsageDetails:\n            type: array\n            items:\n              $ref: '#/components/schemas/EstimatedUsageDetailsWithTier'\n    LogSearchEstimatedUsageRequestV2:\n      allOf:\n      - $ref: '#/components/schemas/LogSearchQueryTimeRangeBaseExceptParsingMode'\n      - required:\n        - timezone\n        type: object\n        properties:\n          timezone:\n            type: string\n            description: |\n              Time zone to get the estimated usage details. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).\n            example: America/Los_Angeles\n    EstimatedUsageDetailsWithTier:\n      type: object\n      properties:\n        tier:\n          type: string\n          description: \"Name of the data tier. Supported Values are Continuous, Frequent,\\\n            \\ Infrequent\"\n          example: Continuous\n        dataScannedInBytes:\n          type: integer\n          description: \"Amount of data scanned in bytes, to run the query.\"\n          format: int64\n          example: 114086541\n    PaginatedDashboards:\n      required:\n      - dashboards\n      type: object\n      properties:\n        dashboards:\n          type: array\n          description: List of dashboards.\n          items:\n            $ref: '#/components/schemas/Dashboard'\n        next:\n          type: string\n          description: Next continuation token. `token` is set to null when no more\n            pages are left.\n          example: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc\n    Dashboard:\n      allOf:\n      - $ref: '#/components/schemas/DashboardRequest'\n      - type: object\n        properties:\n          id:\n            type: string\n            description: |\n              Unique identifier for the dashboard. This id is used to get detailed information about the dashboard, such as panels, variables and the layout.\n            example: B23OjNs5ZCyn5VdMwOBoLo3PjgRnJSAlNTKEDAcpuDG2CIgRe9KFXMofm2H2\n          contentId:\n            type: string\n            description: |\n              Content identifier for the dashboard. This id is used to connect to the Sumo Content Library and get general metadata about the dashboard. Use this id if you want to search for dashboards in Sumo folders.\n            example: \"1\"\n    DashboardRequest:\n      required:\n      - timeRange\n      - title\n      type: object\n      properties:\n        title:\n          maxLength: 255\n          minLength: 1\n          type: string\n          description: Title of the dashboard.\n          example: Kubernetes Dashboard\n        description:\n          type: string\n          description: Description of the dashboard.\n          example: \"A view of pods, namespaces and nodes of your cluster.\"\n        folderId:\n          type: string\n          description: |\n            The identifier of the folder to save the dashboard in. By default it is saved in your personal folder.\n          example: 000000000C1C17C6\n        topologyLabelMap:\n          $ref: '#/components/schemas/TopologyLabelMap'\n        domain:\n          type: string\n          description: \"If set denotes that the dashboard concerns a given domain\\\n            \\ (e.g. `aws`, `k8s`, `app`).\"\n          example: aws\n          default: \"\"\n        hierarchies:\n          maxItems: 20\n          type: array\n          description: If set to non-empty array denotes that the dashboard concerns\n            given hierarchies.\n          example:\n          - Kubernetes Node View\n          items:\n            type: string\n          default: []\n        refreshInterval:\n          type: integer\n          description: |\n            Interval of time (in seconds) to automatically refresh the dashboard. A value of 0 means we never automatically refresh the dashboard. Allowed values are `0`, `30`, `60`, 120`, `300`, `900`, `3600`, `86400`.\n          format: int32\n          example: 30\n        timeRange:\n          $ref: '#/components/schemas/ResolvableTimeRange'\n        panels:\n          type: array\n          description: Panels in the dashboard.\n          items:\n            $ref: '#/components/schemas/Panel'\n        layout:\n          $ref: '#/components/schemas/Layout'\n        variables:\n          type: array\n          description: Variables to apply to the panels.\n          items:\n            $ref: '#/components/schemas/Variable'\n        theme:\n          pattern: ^(light|dark|Light|Dark)$\n          type: string\n          description: Theme for the dashboard. Either `Light` or `Dark`.\n          example: light\n          default: Light\n          x-pattern-message: \"Must be `Light`, or `Dark`\"\n    MonitorUsageInfo:\n      type: array\n      description: The usage info of logs and metrics monitors.\n      items:\n        $ref: '#/components/schemas/MonitorUsage'\n    MonitorUsage:\n      properties:\n        monitorType:\n          type: string\n          description: The type of monitor usage info (Logs or Metrics).\n          example: Logs\n          enum:\n          - Logs\n          - Metrics\n        usage:\n          type: integer\n          description: Current number of active Logs/Metrics monitors.\n          example: 100\n        limit:\n          type: integer\n          description: The limit of active Logs/Metrics monitors.\n          example: 100\n        total:\n          type: integer\n          description: The total number of monitors created. (Including both active\n            and disabled Logs/Metrics monitors)\n          example: 100\n      description: The usage info of monitors.\n    QueriesParametersResult:\n      type: object\n      properties:\n        isValid:\n          type: boolean\n          description: Whether or not if queries are valid.\n          example: false\n        errors:\n          type: array\n          description: Error messages from validation.\n          example:\n          - \"Field fieldName not found, please check the spelling and try again.\"\n          items:\n            type: string\n          default: []\n        logsOutlier:\n          $ref: '#/components/schemas/LogsOutlier'\n        metricsOutlier:\n          $ref: '#/components/schemas/MetricsOutlier'\n      description: Queries validation and extracted parameters result.\n    LogsOutlier:\n      type: object\n      properties:\n        trimmedQuery:\n          type: string\n          description: The query string after trimming out the outlier clause.\n          example: _sourceCategory=search error | timeslice 1m | count by _timeslice\n        window:\n          type: integer\n          description: Sets the trailing number of data points to calculate mean and\n            sigma.\n          format: int64\n          example: 15\n          default: 10\n        consecutive:\n          type: integer\n          description: Sets the required number of consecutive indicator data points\n            (outliers) to trigger a violation.\n          format: int64\n          example: 3\n          default: 1\n        direction:\n          $ref: '#/components/schemas/OutlierDirection'\n        threshold:\n          type: number\n          description: Sets the number of standard deviations for calculating violations.\n          format: double\n          example: 10.0\n          default: 3.0\n        field:\n          type: string\n          description: The name of the field that the trigger condition will alert\n            on.\n          example: _count\n      description: The parameters extracted from the logs outlier query.\n    OutlierDirection:\n      type: string\n      description: |-\n        Specifies which direction should trigger violations. Valid values:\n          1. `Both`: Both positive and negative deviations\n          2. `Up`: Positive deviations only\n          3. `Down`: Negative deviations only\n        example: \"Up\" pattern: \"^(Both|Up|Down)$\" default: \"Both\" x-pattern-message: \"should be one of the following: 'Both', 'Up', 'Down'\"\n    MetricsOutlier:\n      type: object\n      properties:\n        trimmedQuery:\n          type: string\n          description: The query string after trimming out the outlier clause.\n          example: _sourceHost=prod-search-1 metric=CPU_User\n        baselineWindow:\n          type: string\n          description: The time range used to compute the baseline.\n          example: 10m\n          default: 5m\n        baselineTimeRangeWindow:\n          $ref: '#/components/schemas/ResolvableTimeRange'\n        direction:\n          $ref: '#/components/schemas/OutlierDirection'\n        threshold:\n          type: number\n          description: How much should the indicator be different from the baseline\n            for each datapoint.\n          format: double\n          example: 10.0\n          default: 3.0\n      description: The parameters extracted from the metrics outlier query.\n    MonitorQueries:\n      required:\n      - monitorType\n      - queries\n      - timeRange\n      type: object\n      properties:\n        monitorType:\n          pattern: ^(Logs|Metrics)$\n          type: string\n          description: |-\n            The type of monitor. Valid values:\n              1. `Logs`: A logs query monitor.\n              2. `Metrics`: A metrics query monitor.\n          example: Logs\n          x-pattern-message: should be either 'Logs' or 'Metrics'\n        timeRange:\n          type: string\n          description: \"The relative time range of the monitor. Valid values of time\\\n            \\ ranges are `5m`, `10m`, `15m`, `30m`, `1h`, `3h`, `6h`, `12h`, or `24h`.\"\n          example: 15m\n        queries:\n          type: array\n          description: Queries to be validated.\n          items:\n            $ref: '#/components/schemas/UnvalidatedMonitorQuery'\n      description: Queries to be validated.\n    UnvalidatedMonitorQuery:\n      required:\n      - query\n      - rowId\n      type: object\n      properties:\n        rowId:\n          type: string\n          description: \"The unique identifier of the row. Defaults to sequential capital\\\n            \\ letters, `A`, `B`, `C`, etc.\"\n          example: A\n        query:\n          type: string\n          description: The logs or metrics query that defines the stream of data the\n            monitor runs on.\n          example: \"_sourceCategory=search error | timeslice 1m | count by _timeslice\\\n            \\ | outlier _count window=5,threshold=3,consecutive=2,direction=+\"\n      description: A search query.\n    SeriesData:\n      required:\n      - dataPoints\n      - name\n      - seriesAxisRange\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the series.\n          example: monitor-manager-cpu-1\n        dataPoints:\n          type: array\n          description: Data points of the series.\n          items:\n            $ref: '#/components/schemas/DataPoint'\n        seriesAxisRange:\n          $ref: '#/components/schemas/SeriesAxisRange'\n        aggregateInfo:\n          $ref: '#/components/schemas/VisualAggregateData'\n        seriesMetadata:\n          $ref: '#/components/schemas/SeriesMetadata'\n      description: The data for visualizing monitor chart.\n    DataPoint:\n      type: object\n      properties:\n        dataPointType:\n          pattern: ^(OutlierSeriesData|StaticSeriesData)$\n          type: string\n          description: Type of the data point.\n          example: OutlierSeriesData\n      description: Data for visualizing monitor chart.\n      discriminator:\n        propertyName: dataPointType\n    SeriesAxisRange:\n      type: object\n      properties:\n        x:\n          $ref: '#/components/schemas/AxisRange'\n        \"y\":\n          $ref: '#/components/schemas/AxisRange'\n      description: The axis limitation for chart data.\n    AxisRange:\n      type: object\n      properties:\n        min:\n          type: integer\n          description: minimum limit of x or y axis.\n          format: int64\n          example: 50\n        max:\n          type: integer\n          description: maximum limit of x or y axis.\n          format: int64\n          example: 100\n      description: \"The min and max of the x,y axis of the monitor chart.\"\n    SeriesMetadata:\n      type: object\n      properties:\n        rowId:\n          type: string\n          description: Row ID of the query this time series belongs to.\n          example: A\n        dimensions:\n          type: array\n          description: Dimensions for the time series.\n          items:\n            $ref: '#/components/schemas/DimensionKeyValue'\n      description: The metadata of time series for chart.\n    DimensionKeyValue:\n      type: object\n      properties:\n        key:\n          type: string\n          description: The key of the metric dimension.\n          example: region\n        value:\n          type: string\n          description: The value of the metric dimension.\n          example: us-east-1\n      description: The key and value pair for each metric dimension.\n    MonitorQuery:\n      required:\n      - query\n      - rowId\n      type: object\n      properties:\n        rowId:\n          type: string\n          description: \"The unique identifier of the row. Defaults to sequential capital\\\n            \\ letters, `A`, `B`, `C`, etc.\"\n          example: A\n        query:\n          type: string\n          description: The logs or metrics query that defines the stream of data the\n            monitor runs on.\n          example: _sourceCategory=search error\n      description: A search query.\n    LogSearchQuery:\n      required:\n      - queryString\n      type: object\n      properties:\n        queryString:\n          type: string\n          description: Query string for which to get log fields.\n          example: _sourceCategory=service\n      description: Query for which to get log fields.\n    GroupFieldsResponse:\n      required:\n      - groupFields\n      - isQueryAggregate\n      type: object\n      properties:\n        groupFields:\n          type: array\n          description: List of group fields\n          items:\n            type: string\n        isQueryAggregate:\n          type: boolean\n          description: Whether or not the queries are aggregate.\n          example: false\n          default: false\n      description: Group fields for the monitor\n    GroupFieldsRequest:\n      required:\n      - monitorType\n      - queries\n      type: object\n      properties:\n        queries:\n          uniqueItems: true\n          type: array\n          description: All queries from the monitor.\n          items:\n            $ref: '#/components/schemas/MonitorQuery'\n        monitorType:\n          pattern: ^(Logs|Metrics)$\n          type: string\n          description: |-\n            The type of monitor. Valid values:\n              1. `Logs`: A logs query monitor.\n              2. `Metrics`: A metrics query monitor.\n          example: Logs\n      description: Monitor type and queries\n    DisableMonitorResponse:\n      type: object\n      properties:\n        monitors:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/MonitorsLibraryMonitorResponse'\n          description: A map between an identifier and its monitor.\n        warnings:\n          type: array\n          description: Warnings from the operation.\n          items:\n            $ref: '#/components/schemas/DisableMonitorWarning'\n      description: Response for disabling monitors.\n    DisableMonitorWarning:\n      type: object\n      properties:\n        code:\n          type: string\n          description: A code for the warning message.\n          example: content:not_found\n        message:\n          type: string\n          description: A short message with details about the warning.\n          example: Monitor id=0000000000000001 not found.\n      description: Warning object from the operation providing details such as when\n        a given monitor to disable does not exist.\n    MonitorSubscriptionsListResponse:\n      required:\n      - exhaustive\n      - subscriptions\n      type: object\n      properties:\n        subscriptions:\n          type: array\n          description: List of existing subscriptions.\n          items:\n            $ref: '#/components/schemas/MonitorSubscription'\n        exhaustive:\n          type: boolean\n          description: \"If true, the list contains all existing subscriptions.\"\n          example: true\n      description: List of existing subscriptions.\n    MonitorSubscription:\n      type: object\n      properties:\n        targetId:\n          type: string\n          description: The id of the subscription target. It can be either a monitor\n            or a folder id.\n          example: 000000000000676F\n      description: The monitor subscription. Alerts can be filtered by a monitor subscription\n        status.\n    MonitorSubscriptionsTargetsInput:\n      maxItems: 100\n      minItems: 1\n      type: array\n      description: Input array with ids of monitors or monitor folders.\n      items:\n        type: string\n    MonitorSubscriptionsStatus:\n      required:\n      - status\n      - targetId\n      type: object\n      properties:\n        targetId:\n          type: string\n          description: Id of the subscription target.\n          example: 000000000000676F\n        status:\n          pattern: ^(Subscribed|SubscribedByAncestor|NotSubscribed)$\n          type: string\n          description: Status of the subscription.\n          example: Subscribed\n          x-pattern-message: \"should be one of the following: 'Subscribed', 'SubscribedByAncestor',\\\n            \\ 'NotSubscribed'\"\n      description: Subscription status of the element.\n    ListAlertsLibraryAlertResponse:\n      type: array\n      description: List of Alerts.\n      items:\n        $ref: '#/components/schemas/AlertsLibraryAlertResponse'\n    RelatedAlertsLibraryAlertResponse:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/RelatedAlert'\n      description: List of related Alerts.\n    RelatedAlert:\n      type: object\n      properties:\n        alert:\n          $ref: '#/components/schemas/AlertsLibraryAlertResponse'\n        relations:\n          type: array\n          description: Tags describing the relationship between the two alerts.\n          items:\n            $ref: '#/components/schemas/RelationTypeTag'\n      description: An alert and how it is related to the given alert\n    RelationTypeTag:\n      pattern: ^(Time|Entity)$\n      type: string\n      description: |-\n        The nature of the relationship between alerts. Valid values:\n          1. `Time`: Alerts are related by their time of creation.\n          2. `Entity`: Alerts are related by the entities linked to their queries.\n      example: Time\n      x-pattern-message: should be either 'Time' or 'Entity'\n    AlertsListPageResponse:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/AlertsListPageObject'\n      description: List of Alert list page objects.\n    AlertsListPageObject:\n      type: object\n      properties:\n        id:\n          type: string\n          description: Identifier of the alert.\n          example: 000000000000000A\n        name:\n          type: string\n          description: Name of the alert.\n          example: CPU Total above 90\n        severity:\n          pattern: ^(Critical|Warning|MissingData)$\n          type: string\n          description: |-\n            The severity of the Alert. Valid values:\n              1. `Critical`\n              2. `Warning`\n              3. `MissingData`\n          example: Warning\n          x-pattern-message: \"should be either 'Critical', 'Warning' or 'MissingData'\"\n        status:\n          pattern: ^(Active|Resolved)$\n          type: string\n          description: |-\n            The status of the Alert. Valid values:\n              1. `Active`\n              2. `Resolved`\n          example: Active\n          x-pattern-message: should be either 'Active' or 'Resolved'\n        entitiesInfo:\n          type: array\n          items:\n            $ref: '#/components/schemas/AlertEntityInfo'\n        violationCount:\n          type: string\n          description: The number of unique result groups that have met the alert\n            condition.\n          example: \"2\"\n        lastViolation:\n          type: string\n          description: The condition from the last alert violation.\n          example: greater than 90.0 for all of the last 5 minutes\n        duration:\n          type: string\n          description: The current duration of the alert.\n          example: 2 hours\n        createdAt:\n          type: string\n          description: The creation time of the alert.\n          example: \"11:11 AM August 25, 2021\"\n        lastUpdated:\n          type: string\n          description: The time when this alert was updated with the most recent violation.\n          example: \"1:11 PM August 25, 2021\"\n      description: Alert list page object.\n    AlertChartDataResult:\n      required:\n      - metadata\n      - series\n      type: object\n      properties:\n        series:\n          type: array\n          description: List of time series of the alert chart data.\n          items:\n            $ref: '#/components/schemas/SeriesData'\n        metadata:\n          $ref: '#/components/schemas/AlertChartMetadata'\n      description: Response for alert response chart data visualization.\n    AlertChartMetadata:\n      type: object\n      properties:\n        abnormalityStartTime:\n          type: integer\n          description: The time stamp at which abnomarlity started.\n          format: int64\n          example: 1630017549842\n        abnormalityEndTime:\n          type: integer\n          description: The time stamp at which abnomarlity ended.\n          format: int64\n          example: 1630017549842\n        evaluationDelay:\n          type: integer\n          description: The delay duration for evaluating the monitor (relative to\n            current time). The timerange of monitor will be shifted in the past by\n            this delay time.\n          format: int64\n          example: 1630017549842\n        alertCreatedAt:\n          type: integer\n          description: The time stamp at which the alert response page is created.\n          format: int64\n          example: 1630017549842\n        alertResolvedAt:\n          type: integer\n          description: The time stamp at which the alert response page is resolved.\n          format: int64\n          example: 1630017549842\n      description: The metadata timestamps of alert chart data\n    ActiveCount:\n      type: integer\n      description: The number of currently active alerts.\n      format: int32\n      example: 205\n    CompliancePeriodRef:\n      required:\n      - complianceRefType\n      type: object\n      properties:\n        complianceRefType:\n          pattern: ^(Relative)$\n          type: string\n          description: Type of reference to the compliance period. Must be `Relative`.\n          example: Relative\n          x-pattern-message: Must be `Relative`\n        relativeShift:\n          type: integer\n          description: Relative shift of compliance period from the latest/current\n            compliance period.\n          example: -1\n      description: Reference to the compliance period of the SLO.\n    DashboardSearchResult:\n      required:\n      - axes\n      - series\n      - status\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/DashboardSearchStatus'\n        axes:\n          $ref: '#/components/schemas/VisualDataAxes'\n        series:\n          type: array\n          description: The series returned from a search.\n          items:\n            $ref: '#/components/schemas/VisualDataSeries'\n        errors:\n          type: array\n          description: Errors returned by backend.\n          items:\n            $ref: '#/components/schemas/ErrorDescription'\n        timeRange:\n          $ref: '#/components/schemas/BeginBoundedTimeRange'\n        requestToken:\n          type: string\n          description: A user-generated string to uniquely identify the search request.\n            This field can be safely ignored if you don't intend to identify a search\n            request.\n        fieldOrdering:\n          type: array\n          description: |\n            The expected ordering of the column fields in tabular format. If null or empty, the ordering is unknown or indeterminate.\n          example:\n          - _timeslice\n          - _sourceHost\n          items:\n            type: string\n        infrequentScannedBytes:\n          type: number\n          description: The total number of scanned bytes from infrequent tier data\n            for the query in bytes.\n          format: int64\n          example: 350000\n        scannedBytes:\n          type: object\n          properties:\n            infrequent:\n              type: number\n              description: The total number of scanned bytes from infrequent tier\n                data for the query in bytes.\n              format: int64\n              example: 350000\n          description: The total number of scanned bytes from tiered data sources\n            (ex. infrequent).\n    DashboardSearchStatus:\n      required:\n      - state\n      type: object\n      properties:\n        state:\n          type: string\n          description: Current state of the search.\n        percentCompleted:\n          maximum: 100\n          minimum: 0\n          type: integer\n          description: Percentage of search completed.\n          format: int32\n    VisualDataAxes:\n      required:\n      - x\n      - \"y\"\n      type: object\n      properties:\n        x:\n          type: array\n          description: The data of the primary x axis.\n          items:\n            $ref: '#/components/schemas/VisualAxisData'\n        \"y\":\n          type: array\n          description: The data of the primary y axis.\n          items:\n            $ref: '#/components/schemas/VisualAxisData'\n        x2:\n          type: array\n          description: The data of the secondary x axis.\n          items:\n            $ref: '#/components/schemas/VisualAxisData'\n        y2:\n          type: array\n          description: The data of the secondary y axis.\n          items:\n            $ref: '#/components/schemas/VisualAxisData'\n    VisualAxisData:\n      type: object\n      properties:\n        index:\n          type: integer\n          description: The value of the axis labels.\n          format: int32\n          example: 0\n    VisualDataSeries:\n      required:\n      - dataPoints\n      - name\n      - queryId\n      type: object\n      properties:\n        queryId:\n          type: string\n          description: The id of the query.\n          example: A\n        name:\n          type: string\n          description: |\n            The meaning of 'name' depends on the series type.\n              - For results of type 'timeseries', it is the value of the 'metric' key.\n              - For results of type 'nontimeseries', it is the name of one of the fields that is not part of 'xAxisKeys'.\n              - For results of type 'table', it is the comma-separated string of names of all fields.\n          example: max(Disk_Used)\n        dataPoints:\n          type: array\n          description: A list of data points in the visual series.\n          items:\n            $ref: '#/components/schemas/VisualPointData'\n        aggregateInfo:\n          $ref: '#/components/schemas/VisualAggregateData'\n        metaData:\n          $ref: '#/components/schemas/VisualMetaData'\n        seriesType:\n          pattern: ^(timeseries|nontimeseries|table)$|^$\n          type: string\n          description: Type of the visual series.\n          example: timeseries\n        xAxisKeys:\n          type: array\n          description: Keys that will be plotted as a point on the x axis.\n          example:\n          - _sourceCategory\n          - _sourceHost\n          items:\n            type: string\n        valueType:\n          type: string\n          description: Value that represents if the series values are String or Double\n          example: Double\n        source:\n          pattern: ^(Logs|Metrics)$|^$\n          type: string\n          description: Source of the visual series.\n          example: Logs\n        xAxisKeyTypes:\n          type: object\n          additionalProperties:\n            type: string\n          description: Keys that will be plotted as a point on the x axis and their\n            data type\n          example:\n            _sourceCategory: String\n          default: {}\n        queryInfo:\n          $ref: '#/components/schemas/MetricsQueryResultInfo'\n    VisualPointData:\n      required:\n      - \"y\"\n      type: object\n      properties:\n        x:\n          type: number\n          description: Value that represents a point on the x axis.\n          format: double\n          example: 1.0\n        \"y\":\n          type: string\n          description: Value that represents a point on the y axis.\n          example: \"12.3\"\n        isFilled:\n          type: boolean\n          description: Whether the field is interpolated or extrapolated - not derived\n            from underlying data.\n          example: false\n          default: false\n        xAxisValues:\n          type: object\n          additionalProperties:\n            type: string\n          description: Values that represents a point on the x axis.\n          example:\n            _sourceCategory: collector\n            _collector: nite-index-7\n          default: {}\n        outlierData:\n          $ref: '#/components/schemas/VisualOutlierData'\n    VisualOutlierData:\n      required:\n      - anomalyScore\n      - baseline\n      - isOutlier\n      - lowerBound\n      - unit\n      - upperBound\n      type: object\n      properties:\n        anomalyScore:\n          type: number\n          description: A measure of how anomalous the data point is.\n          format: double\n          example: 12.3\n        baseline:\n          type: number\n          description: The estimated value of the data point.\n          format: double\n          example: 1.2\n        unit:\n          type: number\n          description: The variation in the estimated value of the data point.\n          format: double\n          example: 5.6\n        lowerBound:\n          type: number\n          description: The lower bound of the outlier band\n          format: double\n          example: 5.3\n        upperBound:\n          type: number\n          description: The upper bound of the outlier band\n          format: double\n          example: 6.3\n        isOutlier:\n          type: boolean\n          description: Indicates if the data point is outlier or not.\n          example: false\n    VisualAggregateData:\n      required:\n      - avg\n      - latest\n      - max\n      - min\n      - sum\n      type: object\n      properties:\n        max:\n          type: number\n          description: The maximum value in the series.\n          format: double\n          example: 10.0\n        min:\n          type: number\n          description: The minimum value in the series.\n          format: double\n          example: 1.2\n        avg:\n          type: number\n          description: The average value in the series.\n          format: double\n          example: 5.6\n        sum:\n          type: number\n          description: The sum of all the values in the series.\n          format: double\n          example: 123.4\n        latest:\n          type: number\n          description: The last value in the series.\n          format: double\n          example: 23.4\n        count:\n          type: number\n          description: The number of values in the series.\n          format: double\n          example: 600\n    VisualMetaData:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: object\n          additionalProperties:\n            type: string\n          description: The value of the metadata.\n          example:\n            deployment: dev\n            cluster: frontend\n            instance: frontend-12\n          default: {}\n    MetricsQueryResultInfo:\n      type: object\n      properties:\n        rowId:\n          type: string\n          description: Metrics Query row id.\n        resultContext:\n          $ref: '#/components/schemas/MetricsQueryResultContext'\n    MetricsQueryResultContext:\n      type: object\n      properties:\n        quantizationGranularity:\n          type: integer\n          description: Quantization granularity. Size of the quantization bucket/quant\n            in milliseconds.\n          format: int64\n          example: 30000\n        rollup:\n          pattern: ^(Avg|Sum|Min|Max|Count|Rate)$|^$\n          type: string\n          description: \"We use the term rollup to refer to the aggregation function\\\n            \\ Sumo Logic uses when quantizing metrics. Can be `Avg`, `Sum`, `Min`,\\\n            \\ `Max`, `Count` or `Rate`.\"\n          example: Avg\n        actualQueryTimeRange:\n          $ref: '#/components/schemas/Iso8601TimeRange'\n    CompliancePeriods:\n      required:\n      - periods\n      - timezone\n      type: object\n      properties:\n        timezone:\n          type: string\n          description: \"Time zone for the compliance periods as per the [IANA Time\\\n            \\ Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).\"\n          example: America/Los_Angeles\n        periods:\n          type: array\n          items:\n            $ref: '#/components/schemas/CompliancePeriodProgress'\n      description: Compliance periods along with SLO data availability progress.\n    CompliancePeriodProgress:\n      required:\n      - endTime\n      - irrecoverableError\n      - progress\n      - relativeReference\n      - startTime\n      type: object\n      properties:\n        relativeReference:\n          type: integer\n          description: Relative shift of compliance period from the latest/current\n            compliance period.\n          example: -1\n        startTime:\n          type: string\n          description: Start time of the compliance period.\n          format: date-time\n          example: 2018-10-16T09:10:00Z\n        endTime:\n          type: string\n          description: End time of the compliance period.\n          format: date-time\n          example: 2018-10-16T09:10:00Z\n        progress:\n          maximum: 100.0\n          minimum: 0.0\n          type: number\n          description: SLO data availability progress.\n          format: double\n          example: 50.0\n        irrecoverableError:\n          type: boolean\n          description: Whether a permanent error is encountered and no further progress\n            is expected.\n      description: SLO data availability progress of a compliance period.\n    SliQueriesValidationResult:\n      type: object\n      properties:\n        isValid:\n          type: boolean\n          description: Whether or not if queries are valid.\n          example: false\n        message:\n          type: string\n          description: Message from validation.\n          example: \"Field fieldName not found, please check the spelling and try again.\"\n          default: \"\"\n      description: Validation result for the SLI queries.\n    SliQueries:\n      required:\n      - queryGroup\n      - queryType\n      type: object\n      properties:\n        queryGroup:\n          $ref: '#/components/schemas/SliQueryGroup'\n        queryType:\n          pattern: ^(Logs|Metrics)$\n          type: string\n          description: Type of queries for SLI (Logs/Metrics).\n          example: Logs\n          x-pattern-message: Must be `Logs` or `Metrics`\n    IdToSliStatusMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/SliStatus'\n      description: Map of SLO identifier to SliStatus object.\n    SliStatus:\n      required:\n      - status\n      type: object\n      properties:\n        status:\n          pattern: ^(Success|Error|InProgress)$\n          type: string\n          description: Whether the SLI computation is complete / had an error / is\n            in progress.\n          example: Success\n        sliPercentage:\n          type: double\n          description: SLI percentage for the compliance period. Available if `status`\n            is `Success`.\n          example: 95.14\n        errorBudgetRemainingPercentage:\n          type: double\n          description: Percentage of error budget remaining for the compliance period.\n            Available if `status` is `Success`.\n          example: \"70.0, 0.0\"\n        absoluteErrorBudgetRemaining:\n          type: string\n          description: \"Formatted string for the absolute error budget remaining (time\\\n            \\ duration for window-based SLIs, request count for request-based SLIs).\\\n            \\ Available if `status` is `Success`.\"\n          example: \"1h56m, -3h45m, -241.3k req, 1.5k req\"\n        progressPercentage:\n          type: double\n          description: SLI computation progress.\n          example: \"50.0, 78.0, 99.9\"\n      description: \"Status of the SLI computation. If the status is successful, also\\\n        \\ contains the SLI value and error budget remaining for the current compliance\\\n        \\ period.\"\n    SloUsageInfo:\n      type: array\n      description: The usage info of logs and metrics SLOs.\n      items:\n        $ref: '#/components/schemas/SloUsage'\n    SloUsage:\n      properties:\n        sliQueryType:\n          pattern: ^(Logs|Metrics)$\n          type: string\n          description: The type of SLO usage info (Logs or Metrics based).\n          example: Logs\n          x-pattern-message: Either `Logs` or `Metrics`.\n        usage:\n          type: integer\n          description: Current number of active Logs/Metrics SLOs.\n          example: 100\n        limit:\n          type: integer\n          description: The limit of active Logs/Metrics SLOs.\n          example: 100\n      description: The usage info of SLOs.\n    PasswordPolicy:\n      type: object\n      properties:\n        minLength:\n          maximum: 128\n          minimum: 8\n          type: integer\n          description: The minimum length of the password.\n          format: int32\n          example: 8\n          default: 8\n        maxLength:\n          maximum: 128\n          minimum: 128\n          type: integer\n          description: The maximum length of the password. (Setting this to any value\n            other than 128 is no longer supported; this field may be deprecated in\n            the future.)\n          format: int32\n          example: 128\n          default: 128\n        mustContainLowercase:\n          type: boolean\n          description: If the password must contain lower case characters.\n          example: true\n          default: true\n        mustContainUppercase:\n          type: boolean\n          description: If the password must contain upper case characters.\n          example: true\n          default: true\n        mustContainDigits:\n          type: boolean\n          description: If the password must contain digits.\n          example: true\n          default: true\n        mustContainSpecialChars:\n          type: boolean\n          description: If the password must contain special characters.\n          example: true\n          default: true\n        maxPasswordAgeInDays:\n          maximum: 365\n          minimum: -1\n          type: integer\n          description: Maximum number of days that a password can be used before user\n            is required to change it. Put -1 if the user should not have to change\n            their password.\n          format: int32\n          example: 365\n          default: 365\n        minUniquePasswords:\n          maximum: 10\n          minimum: 4\n          type: integer\n          description: The minimum number of unique new passwords that a user must\n            use before an old password can be reused.\n          format: int32\n          example: 10\n          default: 10\n        accountLockoutThreshold:\n          maximum: 10\n          minimum: 3\n          type: integer\n          description: Number of failed login attempts allowed before account is locked-out.\n          format: int32\n          example: 6\n          default: 6\n        failedLoginResetDurationInMins:\n          maximum: 10\n          minimum: 1\n          type: integer\n          description: The duration of time in minutes that must elapse from the first\n            failed login attempt after which failed login count is reset to 0.\n          format: int32\n          example: 10\n          default: 10\n        accountLockoutDurationInMins:\n          maximum: 120\n          minimum: 30\n          type: integer\n          description: The duration of time in minutes that a locked-out account remained\n            locked before getting unlocked automatically.\n          format: int32\n          example: 30\n          default: 30\n        requireMfa:\n          type: boolean\n          description: \"If MFA should be required to log in. By default, this field\\\n            \\ is set to `false`.\"\n          example: false\n          default: false\n        rememberMfa:\n          type: boolean\n          description: If MFA should be remembered on the browser.\n          example: true\n          default: true\n      description: Password Policy\n    ConfidenceScoreResponse:\n      required:\n      - confidenceScore\n      type: object\n      properties:\n        confidenceScore:\n          type: string\n          description: List of confidence scores to the CSE Insights.\n      description: CSE insight confidence score.\n    CseInsightConfidenceRequest:\n      required:\n      - cseInsight\n      type: object\n      properties:\n        cseInsight:\n          type: string\n          description: List of CSE Insight Created logs for which the confidence score\n            should be calculated.\n          example: \"\\\"[{\\\\\\\"timestamp\\\\\\\":\\\\\\\"1605562085024\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"\\\n            event\\\\\\\",\\\\\\\"name\\\\\\\":\\\\\\\"insight_closed\\\\\\\",\\\\\\\"tenant_hash\\\\\\\":\\\\\\\"\\\n            d130a603dea563686c911aa5d3f196881b1e6e7a\\\\\\\",\\\\\\\"created\\\\\\\":1605550459107,\\\\\\\n            \\\"id\\\\\\\":\\\\\\\"ef444d0e-b1f0-351e-aae6-b608d2a4769c\\\\\\\",\\\\\\\"insight_threshold\\\\\\\n            \\\":12,\\\\\\\"insight_lookback_days\\\\\\\":14,\\\\\\\"resolution\\\\\\\":\\\\\\\"Resolved\\\\\\\n            \\\",\\\\\\\"source\\\\\\\":\\\\\\\"RULE\\\\\\\",\\\\\\\"entity_id\\\\\\\":\\\\\\\"2254232b-d7b4-567b-b4ce-61466b79e491\\\\\\\n            \\\",\\\\\\\"entity_type\\\\\\\":\\\\\\\"username\\\\\\\",\\\\\\\"rule_ids\\\\\\\":[\\\\\\\"MATCH-U00018\\\\\\\n            \\\"],\\\\\\\"mitre_tactics\\\\\\\":[\\\\\\\"Initial Access\\\\\\\"],\\\\\\\"signals\\\\\\\":[{\\\\\\\n            \\\"rule_id\\\\\\\":\\\\\\\"MATCH-U00018\\\\\\\",\\\\\\\"mitre_tactic\\\\\\\":\\\\\\\"Initial Access\\\\\\\n            \\\",\\\\\\\"timestamp\\\\\\\":\\\\\\\"1605549391000\\\\\\\",\\\\\\\"name_hash\\\\\\\":\\\\\\\"091d66fc35b6ad361d7525238d37319b06ff0bd5\\\\\\\n            \\\",\\\\\\\"severity\\\\\\\":5,\\\\\\\"vendors\\\\\\\":[\\\\\\\"Proofpoint\\\\\\\"],\\\\\\\"products\\\\\\\n            \\\":[\\\\\\\"Targeted Attack Protection\\\\\\\"],\\\\\\\"vendor_products\\\\\\\":[\\\\\\\"\\\n            Proofpoint Targeted Attack Protection\\\\\\\"],\\\\\\\"object_types\\\\\\\":[\\\\\\\"\\\n            Email\\\\\\\"]}]}]\\\"\"\n      description: CSE insight JSON object.\n    PaginatedListEndpoints:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: An array of endpoints.\n          items:\n            $ref: '#/components/schemas/EndpointResponse'\n        next:\n          type: string\n          description: Next continuation token.\n          example: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc\n      description: List of open analytics endpoints.\n    EndpointResponse:\n      required:\n      - id\n      - inputSchema\n      - name\n      - outputSchema\n      - url\n      properties:\n        id:\n          type: string\n          description: Identifier of endpoint.\n          example: 00000000000001A5\n        name:\n          type: string\n          description: Unique name of endpoint.\n          example: linear_regression\n        url:\n          type: string\n          description: Address of endpoint.\n          example: http://my-aws-lambda/linear-regression/predict\n        inputSchema:\n          type: string\n          description: Schema of the input table to endpoint.\n          example: \"[]\"\n        outputSchema:\n          type: string\n          description: Schema of the output table from endpoint.\n          example: \"[]\"\n      description: Endpoint response object.\n    EndpointDefinition:\n      required:\n      - headers\n      - inputSchema\n      - name\n      - outputSchema\n      - url\n      properties:\n        name:\n          type: string\n          description: Unique name of endpoint.\n          example: linear_regression\n        url:\n          type: string\n          description: Address of endpoint.\n          example: http://my-aws-lambda/linear-regression/predict\n        inputSchema:\n          type: string\n          description: Schema of the input table to endpoint.\n          example: \"[\\\"field1\\\", \\\"field2\\\"]\"\n        outputSchema:\n          type: string\n          description: Schema of the output table from endpoint.\n          example: \"[\\\"field1\\\", \\\"field2\\\", \\\"score\\\"]\"\n        headers:\n          type: string\n          description: HTTP headers for endpoint.\n          example: \"[{\\\"awsRegion\\\": \\\"us-west-2\\\"}, {\\\"serviceName\\\": \\\"execute-api\\\"\\\n            }, {\\\"accessKey\\\": \\\"myAccessKey\\\"}, {\\\"secretKey\\\": \\\"mySecretKey\\\"}]\"\n      description: Endpoint creation request object.\n    SignalsRequest:\n      required:\n      - signalContext\n      - signalTypes\n      type: object\n      properties:\n        signalTypes:\n          maxItems: 1\n          minItems: 1\n          type: array\n          description: |\n            A list of signal types to compute. Can be `LogFluctuation`, `DimensionalityExplanation`, `GisBenchmark` or `Anomalies`\n          items:\n            pattern: ^(LogFluctuation|DimensionalityExplanation|GisBenchmark|Anomalies)$|^$\n            type: string\n            x-pattern-message: \"Must be `LogFluctuation`, `DimensionalityExplanation`,\\\n              \\ `GisBenchmark` or `Anomalies`\"\n        signalContext:\n          $ref: '#/components/schemas/SignalContext'\n      description: Signal Request object.\n    SignalContext:\n      required:\n      - contextType\n      type: object\n      properties:\n        contextType:\n          pattern: ^(Alert)$|^$\n          type: string\n          description: Type of context of the request object.\n          x-pattern-message: Must be `Alert`\n      discriminator:\n        propertyName: contextType\n        mapping:\n          Alert: '#/components/schemas/AlertSignalContext'\n    SignalsJobResult:\n      required:\n      - isComplete\n      - signals\n      - warnings\n      type: object\n      properties:\n        isComplete:\n          type: boolean\n          description: Whether the signal computing job finished.\n          example: true\n        signals:\n          type: array\n          description: Sequence of computed signals.\n          items:\n            $ref: '#/components/schemas/SignalsResponse'\n        warnings:\n          type: array\n          description: List of warnings while computing signals.\n          items:\n            $ref: '#/components/schemas/WarningDetails'\n      description: \"The job result containing the job status, computed signals and\\\n        \\ any warnings.\"\n    SignalsResponse:\n      required:\n      - endTime\n      - openInQueries\n      - payload\n      - signalId\n      - signalType\n      - startTime\n      - summary\n      type: object\n      properties:\n        signalType:\n          pattern: ^(LogFluctuation|DimensionalityExplanation|GisBenchmark|Anomalies)$|^$\n          type: string\n          description: |\n            The type of the signal to compute. Can be `LogFluctuation`, `DimensionalityExplanation`, `GisBenchmark` or `Anomalies`\n          x-pattern-message: \"Must be `LogFluctuation`, `DimensionalityExplanation`,\\\n            \\ `GisBenchmark` or `Anomalies`\"\n        signalId:\n          type: string\n          description: The id for the signal result in hex format.\n          example: 00000000F5000634\n        startTime:\n          type: string\n          description: Start time of the signal.\n          format: date-time\n          example: 2018-10-16T09:10:00Z\n        endTime:\n          type: string\n          description: End time of the signal.\n          format: date-time\n          example: 2018-10-16T09:10:00Z\n        summary:\n          type: string\n          description: Description of the payload.\n          example: Variation in the logs\n        payload:\n          type: string\n          description: Json string for computed signal.\n        openInQueries:\n          type: array\n          description: Raw data queries for the computed signal.\n          items:\n            $ref: '#/components/schemas/OpenInQuery'\n      description: Signal response object.\n    OpenInQuery:\n      required:\n      - endTime\n      - query\n      - startTime\n      type: object\n      properties:\n        query:\n          $ref: '#/components/schemas/Query'\n        startTime:\n          type: string\n          description: Start time of the query.\n          format: date-time\n          example: 2018-10-16T09:10:00Z\n        endTime:\n          type: string\n          description: End time of the query.\n          format: date-time\n          example: 2018-10-16T09:10:00Z\n      description: Raw data query for the computed signal.\n    WarningDetails:\n      required:\n      - code\n      - detail\n      - message\n      type: object\n      properties:\n        code:\n          type: string\n          description: Warning code.\n        message:\n          type: string\n          description: Warning message.\n        detail:\n          type: string\n          description: Details related to warning.\n      description: Warning while computing signals.\n    MetricsQueryResponse:\n      required:\n      - errors\n      - queryResults\n      type: object\n      properties:\n        queryResult:\n          type: array\n          description: A list of the time series returned by metric query.\n          items:\n            $ref: '#/components/schemas/TimeSeriesRow'\n        errors:\n          $ref: '#/components/schemas/ErrorResponse'\n    TimeSeriesRow:\n      required:\n      - rowId\n      - timeSeriesList\n      type: object\n      properties:\n        rowId:\n          type: string\n          description: Row id for the query row as specified in the request.\n          example: A\n        timeSeriesList:\n          $ref: '#/components/schemas/TimeSeriesList'\n    TimeSeriesList:\n      required:\n      - timeSeries\n      type: object\n      properties:\n        timeSeries:\n          type: array\n          description: A list of timeseries returned by corresponding query.\n          items:\n            $ref: '#/components/schemas/TimeSeries'\n        unit:\n          type: string\n          description: Unit of the query.\n          example: 1/second\n        timeShiftLabel:\n          type: string\n          description: Time shift value if specified in request in human readable\n            format.\n          example: -1h\n    TimeSeries:\n      required:\n      - metricDefinition\n      - points\n      type: object\n      properties:\n        metricDefinition:\n          $ref: '#/components/schemas/MetricDefinition'\n        points:\n          $ref: '#/components/schemas/Points'\n    MetricDefinition:\n      type: object\n      properties:\n        metric:\n          type: string\n          description: Name of the metric returning the timeseries.\n          example: CPU_Total\n        dimensions:\n          type: object\n          additionalProperties:\n            type: string\n          description: Metric dimensions / metadata related to each timeseries.\n          example:\n            _sourceHost: us2-alert-1\n            _sourceCategory: alert\n    Points:\n      required:\n      - timestamps\n      - values\n      type: object\n      properties:\n        timestamps:\n          type: array\n          description: Array of timestamps of datapoints in milliseconds.\n          items:\n            type: integer\n            format: int64\n            example: 1623258710000\n        values:\n          type: array\n          description: Array of values of datapoints corresponding to timestamp array.\n          items:\n            type: number\n            format: double\n            example: 1.5\n      description: \"The `values` and `timestamps` are of the same length, and points\\\n        \\ are sorted by time ascending.\"\n    MetricsQueryRequest:\n      required:\n      - queries\n      - timeRange\n      type: object\n      properties:\n        queries:\n          minItems: 1\n          type: array\n          description: A list of metrics queries.\n          items:\n            $ref: '#/components/schemas/MetricsQueryRow'\n        timeRange:\n          $ref: '#/components/schemas/ResolvableTimeRange'\n      description: A list of metrics queries to run along with the time range for\n        the query.\n    MetricsQueryRow:\n      required:\n      - query\n      - rowId\n      type: object\n      properties:\n        rowId:\n          pattern: \"[A-Z]\"\n          type: string\n          description: \"Row id for the query row, A to Z letter.\"\n          example: A\n          x-pattern-message: Row id must be one character long and must be an upper\n            case letter between A and Z\n        query:\n          maxLength: 3000\n          minLength: 3\n          type: string\n          description: |-\n            A metric query consists of a metric, one or more filters and optionally, one or more [Metrics Operators](https://help.sumologic.com/?cid=10144). Strictly speaking, both filters and operators are optional.\n\n            Most of the [Metrics Operators](https://help.sumologic.com/?cid=10144) are allowed in the query string except `fillmissing`, `outlier`, `quantize` and `timeshift`.\n\n              * `fillmissing`: Not supported in API.\n              * `outlier`: Not supported in API.\n              * `quantize`: Only supported through `quantization` param.\n              * `timeshift`: Only supported through `timeshift` param.\n\n\n            In practice, your metric queries will almost always contain filters that narrow the scope of your query. For more information about the query language see [Metrics Queries](https://help.sumologic.com/?cid=1079).\n          example: metric=CPU_Idle\n        quantization:\n          minimum: 1\n          type: integer\n          description: \"Segregates time series data by time period. This allows you\\\n            \\ to create aggregated results in buckets of fixed intervals (for example,\\\n            \\ 5-minute intervals). The value is in milliseconds.\"\n          format: int64\n          example: 60000\n        rollup:\n          pattern: ^(Count|Min|Max|Sum|Avg|None)$|^$\n          type: string\n          description: \"We use the term rollup to refer to the aggregation function\\\n            \\ Sumo Logic uses when quantizing metrics. Can be `Avg`, `Sum`, `Min`,\\\n            \\ `Max`, `Count` or `None`.\"\n          example: Avg\n          x-pattern-message: \"Must be `Avg`, `Sum`, `Min`, `Max`, `Count` or `None`\"\n        timeshift:\n          type: integer\n          description: Shifts the time series from your metrics query by the specified\n            amount of time. This can help when comparing a time series across multiple\n            time periods. Specified as a signed duration in milliseconds.\n          format: int64\n          example: -3600000\n    CreateTraceQueryResponse:\n      required:\n      - queryId\n      type: object\n      properties:\n        queryId:\n          type: string\n          description: Id of the created query\n          example: cafaebf2f4f8320f\n    AsyncTraceQueryRequest:\n      required:\n      - queryRows\n      - timeRange\n      type: object\n      properties:\n        queryRows:\n          type: array\n          description: A list of trace queries.\n          items:\n            $ref: '#/components/schemas/AsyncTraceQueryRow'\n        timeRange:\n          $ref: '#/components/schemas/ResolvableTimeRange'\n    AsyncTraceQueryRow:\n      required:\n      - query\n      - rowId\n      type: object\n      properties:\n        query:\n          $ref: '#/components/schemas/TraceQueryExpression'\n        rowId:\n          maxLength: 16\n          type: string\n          description: \"An identifier used to reference this particular row of the\\\n            \\ query request while fetching a query result. Within a query, row ids\\\n            \\ must have distinct values.\"\n          example: '#A'\n        orderBy:\n          $ref: '#/components/schemas/OrderBy'\n    OrderBy:\n      required:\n      - fieldName\n      - order\n      type: object\n      properties:\n        fieldName:\n          maxLength: 32\n          minLength: 1\n          type: string\n          description: \"Field based on which results should be sorted. When not provided,\\\n            \\ the default behavior is to sort by timestamp descending. Sortable fields\\\n            \\ values: `trace_id`, `start_timestamp`, `duration`, `spans_number`, `errors`,\\\n            \\ `status_code`.\"\n          example: start_timestamp\n        order:\n          pattern: ^(Asc|Desc)$\n          type: string\n          description: Type of sorting values - descending or ascending.\n          example: Asc\n          default: Desc\n          x-pattern-message: should be either 'Asc' or 'Desc'\n    TraceQueryStatusResponse:\n      required:\n      - queryRows\n      - status\n      type: object\n      properties:\n        queryRows:\n          type: array\n          description: A list of trace queries.\n          items:\n            $ref: '#/components/schemas/TraceQueryRowStatus'\n        status:\n          pattern: ^(Processing|Finished|Error|Canceled)$\n          type: string\n          description: \"Status of the query. Possible values: `Processing`, `Finished`,\\\n            \\ `Error`, `Canceled`.\"\n          example: Processing\n          x-pattern-message: \"Should be either `Processing`, `Finished`, `Error`,\\\n            \\ `Canceled`.\"\n    TraceQueryRowStatus:\n      required:\n      - count\n      - rowId\n      - status\n      type: object\n      properties:\n        rowId:\n          type: string\n          description: A unique identifier of the query.\n          example: A\n        status:\n          pattern: ^(Processing|Finished|Error|Canceled)$\n          type: string\n          description: \"Status of the query. Possible values: `Processing`, `Finished`,\\\n            \\ `Error`, `Canceled`.\"\n          example: Processing\n          x-pattern-message: \"Should be either `Processing`, `Finished`, `Error`,\\\n            \\ `Canceled`.\"\n        statusMessage:\n          type: string\n          description: Descriptive message of the status\n          example: Finished successfully\n        count:\n          minimum: 0\n          type: integer\n          description: Number of results matching the query\n          format: int64\n          example: 3215\n    TraceQueryResultResponse:\n      required:\n      - results\n      type: object\n      properties:\n        results:\n          type: array\n          description: List of traces matching the query.\n          items:\n            $ref: '#/components/schemas/TraceDetail'\n        next:\n          type: string\n          description: Next continuation token.\n          example: \"10001\"\n    TraceDetail:\n      required:\n      - id\n      type: object\n      properties:\n        id:\n          type: string\n          description: Trace identifier.\n          example: 00000000000120CB\n        rootService:\n          type: string\n          description: \"Root service which started the trace. Examples: `user-service`,\\\n            \\ `authentication-service`, `payment-service`, `/shopping-cart`\"\n          example: user-service\n        rootResource:\n          type: string\n          description: \"Root resource on which the trace was started. Examples: `db.query`,\\\n            \\ `http.request`, `rpc.call`, `container`\"\n          example: http.request\n        rootStatus:\n          $ref: '#/components/schemas/TraceSpanStatus'\n        rootOperationName:\n          type: string\n          description: The name of the operation given to the root span.\n          example: retrieveAccount\n        metrics:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/DoubleTracingValue'\n          description: Calculated trace metrics.\n          example:\n            _duration: 143984411\n        startedAt:\n          type: string\n          description: \"Date and time the trace was started in [ISO 8601 / RFC3339](https://tools.ietf.org/html/rfc3339)\\\n            \\ format.\"\n          format: date-time\n          example: 2019-11-22T09:00:00Z\n        criticalPathServiceBreakdownSummary:\n          $ref: '#/components/schemas/CriticalPathServiceBreakdownSummary'\n    TraceSpanStatus:\n      required:\n      - code\n      type: object\n      properties:\n        code:\n          type: string\n          description: \"Status code of the span. Possible values: `OK`, `ERROR`, `UNKNOWN`.\"\n          example: OK\n        message:\n          type: string\n          description: \"Optional descriptive message about the status, could be an\\\n            \\ http status code or the kind of an error, e.g. OSError.\"\n          example: \"404\"\n    CriticalPathServiceBreakdownSummary:\n      required:\n      - elements\n      - idleTime\n      - otherServicesDuration\n      type: object\n      properties:\n        elements:\n          type: array\n          description: List of the elements representing the critical path service\n            duration breakdown - contains the first few services with the longest\n            overall duration of the spans contributing to the critical path.\n          items:\n            $ref: '#/components/schemas/CriticalPathServiceBreakdownElementBase'\n        otherServicesDuration:\n          type: integer\n          description: Overall processing time in nanoseconds consumed by the rest\n            of the spans in the critical path (a sum of the duration times of the\n            spans' critical path segments).\n          format: int64\n          example: 12957153\n        idleTime:\n          type: integer\n          description: Overall time in nanoseconds when no particular operation was\n            in progress.\n          format: int64\n          example: 60000000\n    CriticalPathServiceBreakdownElementBase:\n      required:\n      - duration\n      type: object\n      properties:\n        service:\n          type: string\n          description: The name of the service.\n          example: user-service\n        serviceColor:\n          type: string\n          description: Color hex code assigned to the service.\n          example: '#fa41c6'\n        duration:\n          type: integer\n          description: Overall processing time in nanoseconds consumed by the spans\n            belonging to this service in the critical path (a sum of the duration\n            times of the spans' critical path segments).\n          format: int64\n          example: 12957153\n    TraceMetricsResponse:\n      required:\n      - metrics\n      type: object\n      properties:\n        metrics:\n          type: array\n          description: List of trace metrics.\n          items:\n            $ref: '#/components/schemas/TraceMetricDetail'\n    TraceMetricDetail:\n      required:\n      - metric\n      - type\n      type: object\n      properties:\n        metric:\n          type: string\n          description: Trace metric name. In trace queries it can be used in `MetricTracingFilter.metric`.\n          example: _duration\n        description:\n          type: string\n          description: Short description of the metric.\n          example: The duration of a trace in nanoseconds.\n        type:\n          type: string\n          description: \"The type the values of this field will have. Possible values:\\\n            \\ `DoubleTracingValue`, `IntegerTracingValue`.\"\n          example: IntegerTracingValue\n    TraceFieldsResponse:\n      required:\n      - fields\n      type: object\n      properties:\n        fields:\n          type: array\n          description: List of filter fields.\n          items:\n            $ref: '#/components/schemas/TraceFieldDetail'\n    TraceFieldDetail:\n      required:\n      - field\n      - type\n      type: object\n      properties:\n        field:\n          type: string\n          description: Filter field name.\n          example: operation\n        valueListing:\n          type: boolean\n          description: Indicates whether values for this field can be listed.\n          example: false\n        description:\n          type: string\n          description: Short description of the field.\n          example: A piece of the workflow represented by a span\n        type:\n          type: string\n          description: \"The type the values of this field will have. Possible values:\\\n            \\ `DoubleTracingValue`, `IntegerTracingValue`, `StringTracingValue`, `DateTimeTracingValue`.\"\n          example: StringTracingValue\n        noValuesReason:\n          $ref: '#/components/schemas/NoTraceFieldValuesReason'\n    NoTraceFieldValuesReason:\n      required:\n      - code\n      - message\n      type: object\n      properties:\n        code:\n          pattern: ^(HighCardinalityField|AutocompleteDisabled)$\n          type: string\n          description: \"A code uniquely identifying the reason for the lack of trace\\\n            \\ field values. Possible values: `HighCardinalityField`, `AutocompleteDisabled`.\"\n          example: HighCardinalityField\n          x-pattern-message: \"Should be either `HighCardinalityField`, `AutocompleteDisabled`.\"\n        message:\n          type: string\n          description: A short English-language description of the reason.\n          example: Autocomplete has been disabled for this field due to high cardinality.\n    TraceFieldValuesResponse:\n      required:\n      - fieldValues\n      - totalCount\n      type: object\n      properties:\n        fieldValues:\n          type: array\n          description: List of filter field values.\n          items:\n            type: string\n        totalCount:\n          type: integer\n          description: Total number of values for a field matching the query. Can\n            be approximated when it's above 3000.\n          format: int64\n          example: 1234\n        next:\n          type: string\n          description: Next continuation token.\n          example: Mi93V0ZqTTBzaW89\n    CreateCpcQueryResponse:\n      required:\n      - queryId\n      type: object\n      properties:\n        queryId:\n          type: string\n          description: The id of the created query.\n          example: cafaebf2f4f8320f\n    CpcQueryRequest:\n      required:\n      - queryRows\n      - timeRange\n      type: object\n      properties:\n        queryRows:\n          type: array\n          description: A list of cpc queries.\n          items:\n            $ref: '#/components/schemas/CpcQueryRow'\n        timeRange:\n          $ref: '#/components/schemas/ResolvableTimeRange'\n    CpcQueryRow:\n      required:\n      - query\n      - rowId\n      type: object\n      properties:\n        query:\n          $ref: '#/components/schemas/TraceQueryExpression'\n        rowId:\n          maxLength: 16\n          type: string\n          description: \"An identifier used to reference this particular row of the\\\n            \\ query request while fetching a query result. Within a query, row ids\\\n            \\ must have distinct values.\"\n          example: '#A'\n    CpcQueryStatusResponse:\n      required:\n      - queryRows\n      - status\n      type: object\n      properties:\n        queryRows:\n          type: array\n          description: A list of statuses on a per query row basis.\n          items:\n            $ref: '#/components/schemas/CpcQueryRowStatus'\n        status:\n          pattern: ^(Processing|Finished|Error|Canceled)$\n          type: string\n          description: \"Status of the query. Possible values: `Processing`, `Finished`,\\\n            \\ `Error`, `Canceled`.\"\n          example: Processing\n          x-pattern-message: \"Should be either `Processing`, `Finished`, `Error`,\\\n            \\ `Canceled`.\"\n    CpcQueryRowStatus:\n      required:\n      - buckets\n      - rowId\n      - status\n      type: object\n      properties:\n        rowId:\n          type: string\n          description: A unique identifier of the query.\n          example: A\n        buckets:\n          type: array\n          description: A list of CPC query statuses on a per time bucket basis.  Each\n            status corresponds to the status of calculating aggregated CPC data from\n            a sample of traces  matching search criteria falling within a specific\n            time slice.\n          items:\n            $ref: '#/components/schemas/CpcQueryBucketStatus'\n        status:\n          pattern: ^(Processing|Finished|Error|Canceled)$\n          type: string\n          description: \"Status of the query. Possible values: `Processing`, `Finished`,\\\n            \\ `Error`, `Canceled`.\"\n          example: Processing\n          x-pattern-message: \"Should be either `Processing`, `Finished`, `Error`,\\\n            \\ `Canceled`.\"\n    CpcQueryBucketStatus:\n      required:\n      - bucketId\n      - status\n      type: object\n      properties:\n        bucketId:\n          type: string\n          description: A unique identifier of the bucket.\n          example: A\n        status:\n          pattern: ^(Processing|Finished|Error|Canceled)$\n          type: string\n          description: \"Status of the query. Possible values: `Processing`, `Finished`,\\\n            \\ `Error`, `Canceled`.\"\n          example: Processing\n          x-pattern-message: \"Should be either `Processing`, `Finished`, `Error`,\\\n            \\ `Canceled`.\"\n        statusMessage:\n          type: string\n          description: Descriptive message of the status.\n          example: Finished successfully\n    CpcQueryResultResponse:\n      required:\n      - buckets\n      type: object\n      properties:\n        buckets:\n          type: array\n          description: A list of CPC query results on a per time bucket basis.  Each\n            bucket result corresponds to the aggregated CPC data from a sample of\n            traces matching search criteria falling within a specific time slice.\n          items:\n            $ref: '#/components/schemas/CpcQueryBucketResult'\n    CpcQueryBucketResult:\n      required:\n      - avgTraceDuration\n      - bucketId\n      - idleTimeCpcSummary\n      - length\n      - otherServicesCpcSummary\n      - perServiceCpcSummaries\n      - startTimestamp\n      - totalNumOfTraces\n      type: object\n      properties:\n        bucketId:\n          type: string\n          description: A unique identifier of a time bucket.\n          example: bucket1\n        startTimestamp:\n          type: string\n          description: \"A start of the time bucket in the [ISO 8601 / RFC3339](https://tools.ietf.org/html/rfc3339)\\\n            \\ format.\"\n          format: date-time\n          example: 2021-04-19T17:36:57.47623Z\n        length:\n          type: integer\n          description: The length of a time bucket expressed in milliseconds.\n          format: int64\n          example: 60000\n        totalNumOfTraces:\n          type: integer\n          description: The total number of traces matching the search criteria based\n            on which the CPC data is aggregated.\n          format: int64\n          example: 500\n        avgTraceDuration:\n          type: number\n          description: The average duration in nanoseconds of the traces matching\n            the search criteria  based on which the CPC data is aggregated.\n          format: double\n          example: 5000\n        perServiceCpcSummaries:\n          type: array\n          description: The summary of aggregated Critical Path Contribution data on\n            a per service basis.  Each element of the array corresponds to a summary\n            for a specific service.\n          items:\n            $ref: '#/components/schemas/CpcServiceSummary'\n        otherServicesCpcSummary:\n          $ref: '#/components/schemas/CpcSummary'\n        idleTimeCpcSummary:\n          $ref: '#/components/schemas/CpcSummary'\n    CpcServiceSummary:\n      required:\n      - color\n      - cpcSummary\n      - service\n      type: object\n      properties:\n        service:\n          type: string\n          description: The name of the service.\n          example: user-service\n        color:\n          type: string\n          description: The color hex code assigned to the service.\n          example: '#fa41c6'\n        cpcSummary:\n          $ref: '#/components/schemas/CpcSummary'\n    CpcSummary:\n      required:\n      - avgPercentageInTrace\n      - avgTimeInTrace\n      - numOfTraces\n      - totalTimeTaken\n      type: object\n      properties:\n        numOfTraces:\n          type: integer\n          description: The total number of traces matching the search criteria for\n            a given service  based on which the CPC data is aggregated.\n          format: int64\n          example: 200\n        avgPercentageInTrace:\n          type: number\n          description: The total fraction (value between 0.0 and 1.0) of the trace\n            duration time consumed  by a given service (or a group of services) in\n            the critical path of analyzed traces.\n          format: double\n          example: 0.24\n        avgTimeInTrace:\n          type: number\n          description: The average time in nanoseconds spent by a given service (or\n            a group of services) in the critical path of analyzed traces.\n          format: double\n          example: 520000\n        totalTimeTaken:\n          type: integer\n          description: The total time in nanoseconds spent by a given service (or\n            a group of services) in the critical path  of analyzed traces.\n          format: int64\n          example: 600000\n    CpcQueryResultRequest:\n      required:\n      - bucketIds\n      type: object\n      properties:\n        bucketIds:\n          type: array\n          description: A list of the identifiers of CPC query buckets for which aggregated\n            Critical Path Contribution data should be fetched.\n          example:\n          - bucket1\n          - bucket2\n          items:\n            type: string\n    TraceExistsResponse:\n      required:\n      - exists\n      type: object\n      properties:\n        exists:\n          type: boolean\n          description: Indicates whether the trace with the given trace id exists.\n          example: true\n        url:\n          type: string\n          description: A path to the trace view page in Sumo Logic UI.\n          example: '#/trace/00000000000120CB'\n    TraceSpansResponse:\n      required:\n      - spans\n      - totalCount\n      type: object\n      properties:\n        spanPage:\n          type: array\n          description: List of trace spans.\n          items:\n            $ref: '#/components/schemas/TraceSpan'\n        totalCount:\n          type: integer\n          description: Total count of spans for this trace.\n          format: int64\n          example: 1234\n        next:\n          type: string\n          description: Next continuation token.\n          example: dlFXd0lhSkxzRjAwYnpVZkMrRmlhYnF4cGtNMWdnVEI\n    TraceSpan:\n      required:\n      - duration\n      - id\n      - operationName\n      - startedAt\n      - status\n      type: object\n      properties:\n        id:\n          type: string\n          description: Identifier of the span.\n          example: 00000000002317A9\n        parentId:\n          type: string\n          description: \"Identifier of the parent span, if any. If the span has no\\\n            \\ parent it's considered a root span.\"\n          example: 000000000003C7BE\n        operationName:\n          type: string\n          description: The name of the operation given to the span.\n          example: retrieveAccount\n        resource:\n          type: string\n          description: The name of the resource attached to the span.\n          example: http.request\n        service:\n          type: string\n          description: The name of the service this span is part of.\n          example: user-service\n        serviceColor:\n          type: string\n          description: Color hex code assigned to the service.\n          example: '#fa41c6'\n        serviceType:\n          $ref: '#/components/schemas/ServiceType'\n        duration:\n          type: integer\n          description: Number of nanoseconds the span lasted.\n          format: int64\n          example: 212957153\n        startedAt:\n          type: string\n          description: \"Date and time the span was started in the [ISO 8601 / RFC3339](https://tools.ietf.org/html/rfc3339)\\\n            \\ format.\"\n          format: date-time\n          example: 2019-11-22T09:00:00Z\n        status:\n          $ref: '#/components/schemas/TraceSpanStatus'\n        kind:\n          pattern: ^(CLIENT|SERVER|PRODUCER|CONSUMER|INTERNAL)$\n          type: string\n          description: \"Span kind describes the relationship between the Span, its\\\n            \\ parents, and its children in a Trace. Possible values: `CLIENT`, `SERVER`,\\\n            \\ `PRODUCER`, `CONSUMER`, `INTERNAL`.\"\n          example: SERVER\n          x-pattern-message: \"Should be either `CLIENT`, `SERVER`, `PRODUCER`, `CONSUMER`\\\n            \\ or `INTERNAL`.\"\n        remoteService:\n          type: string\n          description: Name of the possible remote span's service.\n          example: external-service\n        remoteServiceColor:\n          type: string\n          description: Color hex code assigned to the remote service.\n          example: '#fa41c6'\n        remoteServiceType:\n          $ref: '#/components/schemas/ServiceType'\n        info:\n          $ref: '#/components/schemas/TraceSpanInfo'\n        numberOfLinks:\n          type: integer\n          description: Number of span links in this span.\n          format: int32\n          example: 2\n    ServiceType:\n      pattern: ^(Db|HTTP|MQ|Web|Mixed|Unknown|Cpp|DotNET|Erlang|Go|Java|NodeJS|Php|Python|Ruby|WebJS|Swift|MSSQL|MySQL|Oracle|Db2|PostgreSQL|Redshift|Hive|Cloudscape|HSQLDB|Progress|MaxDB|HANADB|Ingres|FirstSQL|EnterpriseDB|Cache|Adabas|Firebird|ApacheDerby|FileMaker|Informix|InstantDB|InterBase|MariaDB|Netezza|PervasivePSQL|PointBase|SQLite|Sybase|Teradata|Vertica|H2|ColdFusion|Cassandra|HBase|MongoDB|Redis|Couchbase|CouchDB|CosmosDB|DynamoDB|Neo4j|Geode|Elasticsearch|Memcached|CockroachDB)$\n      type: string\n      description: Defines type of service.\n      example: HTTP\n      x-pattern-message: \"Should be either `Db`, `HTTP`, `MQ`, `Web`, `Mixed`, `Unknown`,\\\n        \\ `Cpp`, `DotNET`, `Erlang`, `Go`, `Java`, `NodeJS`, `Php`, `Python`, `Ruby`,\\\n        \\ `WebJS`, `Swift`, `MSSQL`, `MySQL`, `Oracle`, `Db2`, `PostgreSQL`, `Redshift`,\\\n        \\ `Hive`, `Cloudscape`, `HSQLDB`, `Progress`, `MaxDB`, `HANADB`, `Ingres`,\\\n        \\ `FirstSQL`, `EnterpriseDB`, `Cache`, `Adabas`, `Firebird`, `ApacheDerby`,\\\n        \\ `FileMaker`, `Informix`, `InstantDB`, `InterBase`, `MariaDB`, `Netezza`,\\\n        \\ `PervasivePSQL`, `PointBase`, `SQLite`, `Sybase`, `Teradata`, `Vertica`,\\\n        \\ `H2`, `ColdFusion`, `Cassandra`, `HBase`, `MongoDB`, `Redis`, `Couchbase`,\\\n        \\ `CouchDB`, `CosmosDB`, `DynamoDB`, `Neo4j`, `Geode`, `Elasticsearch`, `Memcached`\\\n        \\ or `CockroachDB`\"\n    TraceSpanInfo:\n      required:\n      - type\n      type: object\n      properties:\n        type:\n          type: string\n          description: \"Type of this span. Possible values: `TraceHttpSpanInfo`, `TraceDbSpanInfo`,\\\n            \\ `TraceMessageBusSpanInfo`.\"\n          example: TraceHttpSpanInfo\n      discriminator:\n        propertyName: type\n    TagsReversedIndexResponse:\n      type: object\n      properties:\n        tagsIndices:\n          maxItems: 1000\n          minItems: 0\n          type: array\n          description: List of spans tag values indices.\n          items:\n            $ref: '#/components/schemas/TagReversedIndex'\n        attributesIndices:\n          maxItems: 1000\n          minItems: 0\n          type: array\n          description: List of spans attribute values indices.\n          items:\n            $ref: '#/components/schemas/AttributeReversedIndex'\n        next:\n          type: string\n          description: Next continuation token.\n          example: dlFXd0lhSkxzRjAwYnpVZkMrRmlhYnF4cGtNMWdnVEI\n    TagReversedIndex:\n      required:\n      - tagName\n      - tagValueStatistics\n      type: object\n      properties:\n        tagName:\n          maxLength: 128\n          minLength: 1\n          type: string\n          description: Name of the tag.\n          example: k8s.container.name\n        tagValueStatistics:\n          maxItems: 1000\n          minItems: 1\n          type: array\n          description: List of value statistics of the given tag.\n          items:\n            $ref: '#/components/schemas/TagValueReversedIndex'\n    TagValueReversedIndex:\n      required:\n      - spanIds\n      - tagValue\n      type: object\n      properties:\n        tagValue:\n          maxLength: 128\n          minLength: 1\n          type: string\n          description: Value of the tag.\n          example: web-proxy\n        spanIds:\n          maxItems: 1000\n          minItems: 1\n          type: array\n          description: List of span ids which have the given tag and value.\n          example:\n          - 52c3f60425aba353\n          - 432630b74ac37c60\n          items:\n            type: string\n    AttributeReversedIndex:\n      required:\n      - attributeName\n      - attributeValueStatistics\n      type: object\n      properties:\n        attributeName:\n          maxLength: 128\n          minLength: 1\n          type: string\n          description: Name of the attribute.\n          example: service\n        attributeValueStatistics:\n          maxItems: 1000\n          minItems: 1\n          type: array\n          description: List of value statistics of the given attribute.\n          items:\n            $ref: '#/components/schemas/AttributeValueReversedIndex'\n    AttributeValueReversedIndex:\n      required:\n      - attributeValue\n      - spanIds\n      type: object\n      properties:\n        attributeValue:\n          maxLength: 128\n          minLength: 1\n          type: string\n          description: Value of the attribute.\n          example: rest-soa\n        spanIds:\n          maxItems: 1000\n          minItems: 1\n          type: array\n          description: List of span ids which have the given attribute and value.\n          example:\n          - 52c3f60425aba343\n          - 432630b74ac37c50\n          items:\n            type: string\n    TraceLightEventsResponse:\n      type: object\n      properties:\n        spanEvents:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/LightSpanEvent'\n          description: \"Map of span ids to lists of their events, without their attributes.\"\n        next:\n          type: string\n          description: Next continuation token.\n          example: dlFXd0lhSkxzRjAwYnpVZkMrRmlhYnF4cGtNMWdnVEI\n    LightSpanEvent:\n      required:\n      - name\n      - timestamp\n      type: object\n      properties:\n        timestamp:\n          type: string\n          description: \"Time when an event happened in the [ISO 8601 / RFC3339](https://tools.ietf.org/html/rfc3339)\\\n            \\ format.\"\n          format: date-time\n          example: 2021-04-19T17:36:57.47623Z\n        name:\n          type: string\n          description: Name of the event.\n          example: domContentLoadedEventStart\n      description: \"Light version of Span Event, without the attributes.\"\n    CriticalPathResponse:\n      required:\n      - segments\n      type: object\n      properties:\n        segments:\n          type: array\n          description: List of span segments from the critical path.\n          items:\n            $ref: '#/components/schemas/SpanPathSegment'\n        next:\n          type: string\n          description: Next continuation token.\n          example: Mi93V0ZqTTBzaW89\n    SpanPathSegment:\n      required:\n      - duration\n      - ratio\n      - spanId\n      - startOffset\n      type: object\n      properties:\n        spanId:\n          type: string\n          description: Span identifier.\n          example: 00000000000120CB\n        service:\n          type: string\n          description: The name of the service this span is part of.\n          example: user-service\n        serviceColor:\n          type: string\n          description: Color hex code assigned to the service.\n          example: '#fa41c6'\n        startOffset:\n          type: integer\n          description: Number of nanoseconds from the span startedAt the segment started.\n          format: int64\n          example: 311285715\n        duration:\n          type: integer\n          description: Number of nanoseconds the span segment lasted.\n          format: int64\n          example: 12957153\n        fraction:\n          type: number\n          description: The fraction (value between 0.0 and 1.0) from the trace duration\n            time this segment took.\n          format: double\n          example: 0.4\n    CriticalPathServiceBreakdownResponse:\n      required:\n      - elements\n      - idleTime\n      type: object\n      properties:\n        elements:\n          type: array\n          description: List of elements representing the critical path service breakdown.\n          items:\n            $ref: '#/components/schemas/CriticalPathServiceBreakdownElementDetail'\n        idleTime:\n          type: integer\n          description: Overall time in nanoseconds when no particular operation was\n            in progress.\n          format: int64\n          example: 60000000\n    CriticalPathServiceBreakdownElementDetail:\n      allOf:\n      - $ref: '#/components/schemas/CriticalPathServiceBreakdownElementBase'\n      - required:\n        - longestSegmentDuration\n        - numSpans\n        type: object\n        properties:\n          numSpans:\n            type: integer\n            description: Number of spans that are part of this service.\n            format: int32\n            example: 12957153\n          longestSegmentDuration:\n            type: integer\n            description: Number of nanoseconds the longest span segment in the critical\n              path lasted.\n            format: int64\n            example: 12957153\n    TraceSpanDetail:\n      allOf:\n      - $ref: '#/components/schemas/TraceSpan'\n      - type: object\n        properties:\n          errorMessage:\n            type: string\n            description: \"Produced error message (could be a stack trace, database\\\n              \\ error code, ..)\"\n            example: |\n              Exception in thread \"local[9]\" java.lang.OutOfMemoryError: Java heap space\n                  at my.app.force.fields.SpaceShipForceField.main(SpaceShipForceField.java:17)\n          fields:\n            type: object\n            additionalProperties:\n              $ref: '#/components/schemas/TracingValue'\n            description: Fields attached to this span.\n            example:\n              component:\n                type: StringTracingValue\n                value: http\n              http.method:\n                type: StringTracingValue\n                value: GET\n              http.url:\n                type: StringTracingValue\n                value: /v1/users/123\n              http.status_code:\n                type: StringTracingValue\n                value: \"200\"\n          criticalPathContribution:\n            $ref: '#/components/schemas/TraceSpanCriticalPathContribution'\n          logs:\n            type: array\n            description: Logs attached to this span.\n            example:\n            - \"[19/Dec/2019:10:58:21 +0000] 'GET /v1/users/123 HTTP/1.1' 200 8215\\\n              \\ 'http://111.111.11.1/' 'Mozilla/5.0 (Macintosh; Intel Mac OS X 11_11_1)\\\n              \\ AppleWebKit/111.11 (KHTML, like Gecko) Chrome/11.1.1111.11 Safari/111.11'\"\n            - \"[19/Dec/2019:10:58:24 +0000] 'GET /logo.png HTTP/1.1' 404 555 'http://111.111.11.1/'\\\n              \\ 'Mozilla/5.0 (Macintosh; Intel Mac OS X 11_11_1) AppleWebKit/111.11\\\n              \\ (KHTML, like Gecko) Chrome/11.1.1111.11 Safari/111.11'\"\n            items:\n              type: string\n          events:\n            type: array\n            description: Events attached to this span.\n            items:\n              $ref: '#/components/schemas/SpanEvent'\n          links:\n            type: array\n            description: List of casually related spans.\n            items:\n              $ref: '#/components/schemas/SpanLink'\n    TraceSpanCriticalPathContribution:\n      required:\n      - duration\n      - fraction\n      type: object\n      properties:\n        duration:\n          type: integer\n          description: Overall processing time in nanoseconds consumed by this span\n            in the critical path of its trace (a sum of the duration times of this\n            span's critical path segments).\n          format: int64\n          example: 12957153\n        fraction:\n          type: number\n          description: The total fraction (value between 0.0 and 1.0) of the trace\n            duration time consumed by this span in the critical path of its trace.\n          format: double\n          example: 0.4\n    SpanEvent:\n      description: Span event containing all information (in particular attributes).\n      allOf:\n      - $ref: '#/components/schemas/LightSpanEvent'\n      - type: object\n        properties:\n          attributes:\n            type: array\n            description: Span event attributes.\n            items:\n              $ref: '#/components/schemas/SpanEventAttribute'\n    SpanEventAttribute:\n      type: object\n      properties:\n        attributeName:\n          type: string\n          description: Name of the attribute.\n          example: message_details\n        attributeValue:\n          $ref: '#/components/schemas/EventAttributeValue'\n    SpanLink:\n      required:\n      - spanId\n      - traceId\n      type: object\n      properties:\n        traceId:\n          type: string\n          description: Trace identifier of the linked span.\n          example: 00000000002317A9\n        spanId:\n          type: string\n          description: Span identifier of the linked span.\n          example: 000000000003C7BE\n      description: Details of the linked span.\n    TraceSpanBillingInfo:\n      required:\n      - billedBytes\n      - billedFormat\n      type: object\n      properties:\n        billedBytes:\n          type: integer\n          description: Number of bytes that were charged for the span.\n          example: 502\n        billedFormat:\n          type: string\n          description: Billing format of the span. Number of bytes of this representation\n            of the span is equal to `billedBytes`.\n          example: traceId=2ff9c457b1aa00f4;spanId=97872e33215c4275;parentSpanId=98bcdfc5da874c40;operation=spanId-97872e33215c4275;startTimestamp=1603283111874000000;endTimestamp=1603283112268000000;service=ServiceA;status.code=ERROR;status.message=ERROR;kind=SERVER;custom-tag-2=value2;_sourcehost=127.0.0.1;http.url=/api/operation-x;message=Some\n            error message;_sourcecategory=Http Input;custom-tag-1=value1;error=true;_sourcename=Http\n            Input;error.kind=InvalidInput;_collector=trace-generator-collector;http.method=GET;\n    SpanQueryResponse:\n      required:\n      - queryId\n      - queryRows\n      type: object\n      properties:\n        queryId:\n          type: string\n          description: Id of the created query\n        queryRows:\n          type: array\n          description: A list of row responses with details about individual queries.\n          items:\n            $ref: '#/components/schemas/SpanQueryRowResponse'\n        hasErrors:\n          type: boolean\n          description: Indicates whether there was an error while executing the query.\n          example: true\n          default: false\n        timeRange:\n          $ref: '#/components/schemas/BeginBoundedTimeRange'\n    SpanQueryRowResponse:\n      required:\n      - isAggregation\n      - rowId\n      type: object\n      properties:\n        rowId:\n          type: string\n          description: A unique identifier of the query.\n          example: A\n        errors:\n          type: array\n          description: List of errors which occured when executing the query\n          items:\n            $ref: '#/components/schemas/SpanQueryRowError'\n        isAggregation:\n          type: boolean\n          description: Indicates whether this query is an aggregation\n          example: true\n          default: false\n        executedQuery:\n          type: string\n          description: The executed query after rewriting\n          example: _index=_trace_spans traceId=00000000002317A9\n    SpanQueryRowError:\n      required:\n      - code\n      - message\n      type: object\n      properties:\n        code:\n          type: string\n          description: The error code.\n          example: spanquery:query_validation_error\n        message:\n          type: string\n          description: Short description of the occured error.\n          example: Query A was invalid\n        details:\n          type: string\n          description: Details about the occured error.\n          example: \"[1.78] failure: '(' expected but ')' found.\"\n    SpanQueryRequest:\n      required:\n      - queryRows\n      - timeRange\n      type: object\n      properties:\n        queryRows:\n          type: array\n          description: A list of span analytics queries.\n          items:\n            $ref: '#/components/schemas/SpanQueryRow'\n        timeRange:\n          $ref: '#/components/schemas/ResolvableTimeRange'\n        timeZone:\n          type: string\n          description: \"Time zone for the query time ranges. Follow the format in\\\n            \\ the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).\"\n          example: America/Los_Angeles\n          default: UTC\n    SpanQueryRow:\n      required:\n      - queryString\n      - rowId\n      type: object\n      properties:\n        queryString:\n          type: string\n          description: Query string using the log search syntax.\n        rowId:\n          pattern: \"^[a-zA-Z0-9_]*$\"\n          type: string\n          description: \"An identifier used to reference this particular row of the\\\n            \\ query request. Within a query, row ids must have distinct values.\"\n          example: A\n    SpanQueryStatusResponse:\n      required:\n      - queryRows\n      - status\n      type: object\n      properties:\n        queryRows:\n          type: array\n          description: A list of span analytics queries.\n          items:\n            $ref: '#/components/schemas/SpanQueryRowStatus'\n        status:\n          pattern: ^(Processing|Finished|Error|Paused)$\n          type: string\n          description: \"Status of the query. Possible values: `Processing`, `Finished`,\\\n            \\ `Error`, `Paused`\"\n          example: Processing\n          x-pattern-message: \"Should be either `Processing`, `Finished`, `Error`,\\\n            \\ `Paused`.\"\n    SpanQueryRowStatus:\n      required:\n      - count\n      - rowId\n      - status\n      type: object\n      properties:\n        rowId:\n          type: string\n          description: A unique identifier of the query.\n          example: A\n        status:\n          pattern: ^(Processing|Finished|Error|Paused)$\n          type: string\n          description: \"Status of the query. Possible values: `Processing`, `Finished`,\\\n            \\ `Error`, `Paused`.\"\n          example: Processing\n          x-pattern-message: \"Should be either `Processing`, `Finished`, `Error`,\\\n            \\ `Paused`.\"\n        statusMessage:\n          type: string\n          description: Descriptive message of the status.\n          example: Finished successfully\n        count:\n          minimum: 0\n          type: integer\n          description: Number of restuls matching the query\n          format: int64\n          example: 3215\n        approximatedFieldCounts:\n          type: boolean\n          description: Indicates whether facet field cardinality counts are approximated\n            or not.\n          example: false\n        facetsCompleted:\n          type: boolean\n          description: Indicates whether facets calculation has completed.\n          example: false\n    SpanQueryResultSpansResponse:\n      required:\n      - spanPage\n      type: object\n      properties:\n        spanPage:\n          type: array\n          description: List of trace spans.\n          items:\n            $ref: '#/components/schemas/SpanQuerySpanData'\n        next:\n          type: string\n          description: Next continuation token.\n          example: Mi93V0ZqTTBzaW89\n    SpanQuerySpanData:\n      required:\n      - duration\n      - startedAt\n      type: object\n      properties:\n        spanId:\n          type: string\n          description: Identifier of the span.\n          example: 00000000002317A9\n        traceId:\n          type: string\n          description: Identifier of the trace.\n          example: 1BB004A0005213C2\n        parentSpanId:\n          type: string\n          description: \"Identifier of the parent span, if any. If the span has no\\\n            \\ parent it's considered a root span.\"\n          example: 000000000003C7BE\n        operationName:\n          type: string\n          description: The name of the operation given to the span.\n          example: retrieveAccount\n        service:\n          type: string\n          description: The name of the service this span is part of.\n          example: user-service\n        remoteService:\n          type: string\n          description: Name of the possible remote span's service.\n          example: external-service\n        duration:\n          type: integer\n          description: Number of nanoseconds the span lasted.\n          format: int64\n          example: 212957153\n        startedAt:\n          type: string\n          description: \"Date and time the span was started in [ISO 8601 / RFC3339](https://tools.ietf.org/html/rfc3339)\\\n            \\ format.\"\n          format: date-time\n          example: 2019-11-22T09:00:00Z\n        status:\n          $ref: '#/components/schemas/TraceSpanStatus'\n        kind:\n          pattern: ^(CLIENT|SERVER|PRODUCER|CONSUMER|INTERNAL)$\n          type: string\n          description: \"Span kind describes the relationship between the Span, its\\\n            \\ parents, and its children in a Trace. Possible values: `CLIENT`, `SERVER`,\\\n            \\ `PRODUCER`, `CONSUMER`, `INTERNAL`.\"\n          example: SERVER\n          x-pattern-message: \"Should be either `CLIENT`, `SERVER`, `PRODUCER`, `CONSUMER`\\\n            \\ or `INTERNAL`.\"\n        tagsJSON:\n          type: string\n          description: Tags attached to this span as JSON.\n          example: |-\n            {\n              \u0026quot;http.host\u0026quot;:\u0026quot;http://example.com\u0026quot;,\n              \u0026quot;http.method\u0026quot;:\u0026quot;GET\u0026quot;\n            }\n        metadata:\n          type: object\n          additionalProperties:\n            type: string\n          description: Metadata attached to the span.\n          example:\n            _sourceCategory: account-backend\n    SpanQueryResultFacetsResponse:\n      required:\n      - facets\n      type: object\n      properties:\n        facets:\n          type: array\n          description: List of facets.\n          items:\n            $ref: '#/components/schemas/SpanQueryRowFacet'\n    SpanQueryRowFacet:\n      required:\n      - cardinality\n      - dataType\n      - name\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the field facet.\n          example: _sourceHost\n        cardinality:\n          type: integer\n          description: The number of unique values this field occured.\n          format: int32\n          example: 3\n        dataType:\n          pattern: ^(String|Int|Long|Double|Boolean)$\n          type: string\n          description: Data type of the field.\n          example: String\n          x-pattern-message: \"Should be either `String`, `Int`, `Long`, `Double` or\\\n            \\ `Boolean`.\"\n        inSchema:\n          type: boolean\n          description: Indicates whether the field is available in the span schema.\n          example: false\n        valueFrequency:\n          type: object\n          additionalProperties:\n            type: integer\n            format: int64\n          description: Map of field value frequencies.\n          example:\n            _sourceHost: 34099\n    SpanQueryAggregateResponse:\n      required:\n      - result\n      type: object\n      properties:\n        result:\n          $ref: '#/components/schemas/SpanQueryAggregateResult'\n    SpanQueryAggregateResult:\n      required:\n      - series\n      - status\n      type: object\n      properties:\n        status:\n          pattern: ^(Processing|Finished|Error|Paused)$\n          type: string\n          description: \"Status of the query. Possible values: `Processing`, `Finished`,\\\n            \\ `Error`, `Paused`.\"\n          example: Processing\n          x-pattern-message: \"Should be either `Processing`, `Finished`, `Error`,\\\n            \\ `Paused`.\"\n        statusMessage:\n          type: string\n          description: Descriptive message of the status\n          example: Finished successfully\n        series:\n          type: array\n          description: The series returned from a search.\n          items:\n            $ref: '#/components/schemas/SpanQueryAggregateDataSeries'\n    SpanQueryAggregateDataSeries:\n      required:\n      - dataPoints\n      - name\n      - queryId\n      type: object\n      properties:\n        queryId:\n          type: string\n          description: The id of the query.\n          example: A\n        name:\n          type: string\n          description: |\n            The meaning of 'name' depends on the series type.\n              - For results of type 'timeseries', it is the value of the x axis 'field' key.\n              - For results of type 'nontimeseries', it is the name of one of the fields that is not part of 'xAxisKeys'.\n              - For results of type 'table', it is the comma-separated string of names of all fields.\n          example: max(Disk_Used)\n        dataPoints:\n          type: array\n          description: A list of data points in the series.\n          items:\n            $ref: '#/components/schemas/SpanQueryAggregatePointData'\n        aggregateInfo:\n          $ref: '#/components/schemas/SpanQueryAggregateAggregateData'\n        metaData:\n          $ref: '#/components/schemas/SpanQueryAggregateMetaData'\n        seriesType:\n          pattern: ^(TIMESERIES|NONTIMESERIES|TABLE)$\n          type: string\n          description: Type of the visual series.\n          example: TIMESERIES\n          x-pattern-message: \"Should be either `TIMESERIES`, `NONTIMESERIES`, `TABLE`.\"\n        xAxisKeys:\n          type: array\n          description: Keys that will be plotted as a point on the x axis.\n          example:\n          - _sourceCategory\n          - _sourceHost\n          items:\n            type: string\n        valueType:\n          pattern: ^(STRING|DOUBLE)$\n          type: string\n          description: Type of the values in the series.\n          example: DOUBLE\n          x-pattern-message: \"Should be either `STRING`, `DOUBLE`.\"\n    SpanQueryAggregatePointData:\n      required:\n      - \"y\"\n      type: object\n      properties:\n        x:\n          type: number\n          description: Value that represents a point on the x axis.\n          format: double\n          example: 1.0\n        \"y\":\n          type: string\n          description: Value that represents a point on the y axis.\n          example: \"12.3\"\n        xAxisValues:\n          type: object\n          additionalProperties:\n            type: string\n          description: Values that represents a point on the x axis.\n          example:\n            operation: /get/accounts\n            service: accountService\n          default: {}\n    SpanQueryAggregateAggregateData:\n      required:\n      - avg\n      - latest\n      - max\n      - min\n      - sum\n      type: object\n      properties:\n        max:\n          type: number\n          description: The maximum value in the series.\n          format: double\n          example: 10.0\n        min:\n          type: number\n          description: The minimum value in the series.\n          format: double\n          example: 1.2\n        avg:\n          type: number\n          description: The average value in the series.\n          format: double\n          example: 5.6\n        sum:\n          type: number\n          description: The sum of all the values in the series.\n          format: double\n          example: 123.4\n        latest:\n          type: number\n          description: The last value in the series.\n          format: double\n          example: 23.4\n        count:\n          type: number\n          description: The number of values in the series.\n          format: double\n          example: 600\n    SpanQueryAggregateMetaData:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: object\n          additionalProperties:\n            type: string\n          description: The value of the metadata.\n          example:\n            deployment: dev\n            cluster: frontend\n            instance: frontend-12\n          default: {}\n    SpanQueryFieldsResponse:\n      required:\n      - fields\n      type: object\n      properties:\n        fields:\n          type: array\n          description: List of span fields.\n          items:\n            $ref: '#/components/schemas/SpanQueryFieldDetail'\n    SpanQueryFieldDetail:\n      allOf:\n      - $ref: '#/components/schemas/TraceFieldDetail'\n      - required:\n        - inSchema\n        type: object\n        properties:\n          inSchema:\n            type: boolean\n            description: Indicates whether the field is available in the schema.\n            example: false\n    ServiceMapResponse:\n      required:\n      - edges\n      - nodes\n      type: object\n      properties:\n        nodes:\n          type: array\n          description: List of service map nodes.\n          items:\n            $ref: '#/components/schemas/ServiceMapNode'\n        edges:\n          type: array\n          description: List of service map edges.\n          items:\n            $ref: '#/components/schemas/ServiceMapEdge'\n    ServiceMapNode:\n      required:\n      - isRemote\n      - lastSeenAt\n      - serviceName\n      - serviceType\n      type: object\n      properties:\n        serviceName:\n          type: string\n          description: Name of a service in a service map.\n          example: service_name_1\n        lastSeenAt:\n          type: string\n          description: The last time in UTC a service has been seen. Formatted as\n            defined by date-time - RFC3339.\n          format: date-time\n          example: 2019-11-22T09:00:00Z\n        isRemote:\n          type: boolean\n          description: Indicates whether node comes from inferred remote service or\n            instrumented one.\n          example: true\n        serviceType:\n          $ref: '#/components/schemas/ServiceType'\n    ServiceMapEdge:\n      required:\n      - lastSeenAt\n      - source\n      - target\n      type: object\n      properties:\n        source:\n          type: string\n          description: Name of a source service. Edge is directed from source to target.\n          example: service_name_1\n        target:\n          type: string\n          description: Name of a target service. Edge is directed from source to target.\n          example: service_name_2\n        lastSeenAt:\n          type: string\n          description: The last time in UTC an edge has been seen. Formatted as defined\n            by date-time - RFC3339.\n          format: date-time\n          example: 2019-11-22T09:00:00Z\n    IdToAlertsLibraryBaseResponseMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/AlertsLibraryBaseResponse'\n    ListAlertsLibraryItemWithPath:\n      type: array\n      description: Multi-type list of types alert or folder.\n      items:\n        $ref: '#/components/schemas/AlertsLibraryItemWithPath'\n    AlertsLibraryItemWithPath:\n      required:\n      - item\n      - path\n      type: object\n      properties:\n        item:\n          $ref: '#/components/schemas/AlertsLibraryBaseResponse'\n        path:\n          type: string\n          description: Path of the alert or folder.\n          example: /Alerts/SampleFolder/TestAlert\n    Path:\n      required:\n      - path\n      - pathItems\n      type: object\n      properties:\n        pathItems:\n          type: array\n          description: Elements of the path.\n          items:\n            $ref: '#/components/schemas/PathItem'\n        path:\n          type: string\n          description: String representation of the path.\n    PathItem:\n      required:\n      - id\n      - name\n      type: object\n      properties:\n        id:\n          type: string\n          description: Identifier of the path element.\n        name:\n          type: string\n          description: Name of the path element.\n    ContentCopyParams:\n      required:\n      - parentId\n      type: object\n      properties:\n        parentId:\n          type: string\n          description: Identifier of the parent folder to copy to.\n        name:\n          type: string\n          description: Optionally provide a new name.\n        description:\n          type: string\n          description: Optionally provide a new description.\n    IdToMonitorsLibraryBaseResponseMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/MonitorsLibraryBaseResponse'\n    ListMonitorsLibraryItemWithPath:\n      type: array\n      description: Multi-type list of types monitor or folder.\n      items:\n        $ref: '#/components/schemas/MonitorsLibraryItemWithPath'\n    MonitorsLibraryItemWithPath:\n      required:\n      - item\n      - path\n      type: object\n      properties:\n        item:\n          $ref: '#/components/schemas/MonitorsLibraryBaseResponse'\n        path:\n          type: string\n          description: Path of the monitor or folder.\n          example: /Monitors/SampleFolder/TestMonitor\n    IdToSlosLibraryBaseResponseMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/SlosLibraryBaseResponse'\n    ListSlosLibraryItemWithPath:\n      type: array\n      description: Multi-type list of types slo or folder.\n      items:\n        $ref: '#/components/schemas/SlosLibraryItemWithPath'\n    SlosLibraryItemWithPath:\n      required:\n      - item\n      - path\n      type: object\n      properties:\n        item:\n          $ref: '#/components/schemas/SlosLibraryBaseResponse'\n        path:\n          type: string\n          description: Path of the slo or folder.\n          example: /Slos/SampleFolder/TestSlo\n    ConnectionType:\n      pattern: ^(AWSLambda|Azure|Datadog|HipChat|PagerDuty|Slack|Webhook|NewRelic|Jira|Opsgenie|MicrosoftTeams|ServiceNow|SumoCloudSOAR)$\n      type: string\n      description: \"Type of webhook connection. Valid values are `AWSLambda`, `Azure`,\\\n        \\ `Datadog`, `HipChat`, `Jira`, `NewRelic`, `Opsgenie`, `PagerDuty`, `Slack`,\\\n        \\ `MicrosoftTeams`, `ServiceNow`, `SumoCloudSOAR` and `Webhook`.\"\n      x-pattern-message: \"must be `AWSLambda`, `Azure`, `Datadog`, `HipChat`, `PagerDuty`,\\\n        \\ `Slack`, `Webhook`, `NewRelic`, `Jira`, `Opsgenie`, `MicrosoftTeams`, `ServiceNow`\\\n        \\ or `SumoCloudSOAR`\"\n    OperatorData:\n      required:\n      - operatorName\n      - parameters\n      type: object\n      properties:\n        operatorName:\n          type: string\n          description: The name of the metrics operator.\n          example: avg\n        parameters:\n          type: array\n          description: A list of operator parameters for the operator data.\n          items:\n            $ref: '#/components/schemas/OperatorParameter'\n      description: The operator data for metrics query.\n      example:\n        operatorName: avg\n        parameters:\n        - key: aggregator\n          value: max\n        - key: operation\n          value: \"\"\n        - key: value\n          value: 50\n    OperatorParameter:\n      required:\n      - key\n      - value\n      type: object\n      properties:\n        key:\n          type: string\n          description: The key of the operator parameter.\n          example: operation\n        value:\n          type: string\n          description: The value of the operator parameter.\n          example: '\u003e'\n      description: The operator parameter for operator data.\n      example:\n        key: aggregator\n        value: max\n    TracesQueryData:\n      required:\n      - filters\n      type: object\n      properties:\n        filters:\n          type: array\n          description: A list of filters for the traces query.\n          items:\n            $ref: '#/components/schemas/TracesFilter'\n      description: The data format describing a basic traces query.\n    TracesFilter:\n      required:\n      - type\n      type: object\n      properties:\n        type:\n          pattern: ^(FieldDescriptor|DurationMetricDescriptor|NumericMetricDescriptor|CPCOfFilterDescriptor|MaxCPCOfFilterDescriptor|MaxCPCFilterDescriptor)$|^$\n          type: string\n          description: The type of the filter.\n          example: FieldDescriptor\n          x-pattern-message: \"Must be `FieldDescriptor`, `DurationMetricDescriptor`,\\\n            \\ `NumericMetricDescriptor`, `CPCOfFilterDescriptor`, `MaxCPCOfFilterDescriptor`\\\n            \\ or `MaxCPCFilterDescriptor`\"\n      description: The filter for traces query.\n      discriminator:\n        propertyName: type\n    SpansFilter:\n      required:\n      - fieldName\n      - type\n      type: object\n      properties:\n        type:\n          pattern: ^(StandaloneKey|KeyValuePair)$\n          type: string\n          description: The spans filter type.\n          example: StandaloneKey\n          x-pattern-message: Must be `StandaloneKey` or `KeyValuePair`.\n        fieldName:\n          type: string\n          description: The name of the filtering field.\n          example: service\n      discriminator:\n        propertyName: type\n        mapping:\n          StandaloneKey: '#/components/schemas/SpansFilterStandaloneKey'\n          KeyValuePair: '#/components/schemas/SpansFilterKeyValuePair'\n    SpansVisualization:\n      required:\n      - name\n      - type\n      type: object\n      properties:\n        type:\n          pattern: ^(count|calculation)$\n          type: string\n          description: The visualization type.\n          example: count\n          x-pattern-message: Must be `count` or `calculation`\n        name:\n          type: string\n          description: A unique name of the visualization.\n          example: duration_pct_95\n      discriminator:\n        propertyName: type\n        mapping:\n          count: '#/components/schemas/SpansCountVisualization'\n          calculation: '#/components/schemas/SpansCalculationVisualization'\n    SpansGroupBy:\n      required:\n      - type\n      type: object\n      properties:\n        type:\n          pattern: ^(time|field)$\n          type: string\n          description: The type of the group-by clause.\n          example: time\n          x-pattern-message: Must be `time` or `field`\n      discriminator:\n        propertyName: type\n        mapping:\n          time: '#/components/schemas/SpansTimeGroupBy'\n          field: '#/components/schemas/SpansFieldGroupBy'\n    SpansLimitItem:\n      required:\n      - direction\n      - limitValue\n      type: object\n      properties:\n        direction:\n          pattern: ^(asc|desc)$\n          type: string\n          description: Describes whether the results should be sorted in an ascending\n            or a descending order.\n          example: asc\n          x-pattern-message: Must be `asc` or `desc`\n        limitValue:\n          type: integer\n          description: |\n            The number of aggregated results returned, e.g. if 10 is requested, then only the first 10 aggregated results are returned.\n          format: int32\n          example: 10\n      description: |\n        A representation of the limit operator which reduces the number of aggregate results returned:  either the top k results or bottom k results.\n    LinkedDashboard:\n      required:\n      - id\n      type: object\n      properties:\n        id:\n          type: string\n          description: Identifier of the linked dashboard.\n          example: B23OjNs5ZCyn5VdMwOBoLo3PjgRnJSAlNTKEDAcpuDG2CIgRe9KFXMofm2H2\n        relativePath:\n          type: string\n          description: Relative path of the linked dashboard to the dashboard of the\n            linking panel.\n          example: ./subdirectory/LinkedDashboard\n        includeTimeRange:\n          type: boolean\n          description: Include time range from the current dashboard to the linked\n            dashboard.\n          example: true\n          default: true\n        includeVariables:\n          type: boolean\n          description: Include variables from the current dashboard to the linked\n            dashboard.\n          example: true\n          default: true\n    VariableValuesData:\n      required:\n      - variableValues\n      type: object\n      properties:\n        variableValues:\n          type: array\n          description: Values for the variable.\n          example:\n          - myCluster\n          items:\n            type: string\n        status:\n          $ref: '#/components/schemas/DashboardSearchStatus'\n        variableType:\n          pattern: ^(LogQueryVariableSourceDefinition|MetadataVariableSourceDefinition|CsvVariableSourceDefinition)$\n          type: string\n          description: The type of the variable.\n          example: LogQueryVariableSourceDefinition\n          x-pattern-message: \"Must be `LogQueryVariableSourceDefinition`, `MetadataVariableSourceDefinition`\\\n            \\ or `CsvVariableSourceDefinition`.\"\n        valueType:\n          pattern: ^(String|Any)$\n          type: string\n          description: \"The type of value of the variable. Allowed values are `String`\\\n            \\ and Any`. `String` considers as a single phrase and will wrap in double-quotes,\\\n            \\ `Any` is all characters.\"\n          example: Any\n          default: Any\n          x-pattern-message: Only `String` and `Any` are allowed.\n        errors:\n          type: array\n          description: Generic errors returned by backend from downstream assemblies.\n            More specific errors will be thrown in the future.\n          items:\n            $ref: '#/components/schemas/ErrorDescription'\n      description: \"Variable values, status, type and errors for the variable values\\\n        \\ search.\"\n    ParameterAutoCompleteSyncDefinition:\n      required:\n      - autoCompleteType\n      type: object\n      properties:\n        autoCompleteType:\n          type: string\n          description: |-\n            The autocomplete parameter type. Supported values are:\n              1. `SKIP_AUTOCOMPLETE`\n              2. `CSV_AUTOCOMPLETE`\n              3. `AUTOCOMPLETE_KEY`\n              4. `VALUE_ONLY_AUTOCOMPLETE`\n              5. `VALUE_ONLY_LOOKUP_AUTOCOMPLETE`\n              6. `LABEL_VALUE_LOOKUP_AUTOCOMPLETE`\n        autoCompleteKey:\n          type: string\n          description: The autocomplete key to be used to fetch autocomplete values.\n          example: Ephemeral-3644138589235809747-1583470806220-parameter\n        autoCompleteValues:\n          type: array\n          description: The array of values of the corresponding autocomplete parameter.\n          items:\n            $ref: '#/components/schemas/AutoCompleteValueSyncDefinition'\n        lookupFileName:\n          type: string\n          description: The lookup file to use as a source for autocomplete values.\n        lookupLabelColumn:\n          type: string\n          description: The column from the lookup file to use for autocomplete labels.\n        lookupValueColumn:\n          type: string\n          description: The column from the lookup file to fill the actual value when\n            a particular label is selected.\n    AutoCompleteValueSyncDefinition:\n      required:\n      - label\n      - value\n      type: object\n      properties:\n        label:\n          type: string\n          description: The label of the autocomplete value.\n        value:\n          type: string\n          description: The value of the autocomplete value.\n    MetricsQuerySyncDefinition:\n      required:\n      - query\n      - rowId\n      type: object\n      properties:\n        query:\n          type: string\n          description: The text of a metrics query.\n        rowId:\n          type: string\n          description: A label referring to the query; used if other metrics queries\n            reference this one.\n    ReportAutoParsingInfo:\n      type: object\n      properties:\n        mode:\n          pattern: ^(intelligent|performance)$|^$\n          type: string\n          description: Can be `intelligent` or `performance`\n          example: performance\n          default: performance\n      description: Auto-parsing information for the panel. This information tells\n        us whether automatic field extraction from JSON log messages is enabled or\n        not\n    MetricsSavedSearchQuerySyncDefinition:\n      required:\n      - query\n      - rowId\n      type: object\n      properties:\n        rowId:\n          type: string\n          description: Row id. All rows ids are represented by subsequent upper case\n            letters starting with `A`.\n          example: A\n        query:\n          type: string\n          description: Metrics query.\n          example: my_metric | avg\n      description: Definition of a metrics query.\n    ResourceIdentity:\n      required:\n      - id\n      - type\n      type: object\n      properties:\n        id:\n          type: string\n          description: The unique identifier of the resource.\n          example: C03E086C137F38B4\n        name:\n          type: string\n          description: The name of the resource.\n          example: \"S3 Source, Scheduled View name.\"\n          default: Unknown\n        type:\n          type: string\n          description: \"-\u003e Resource type. Supported types are - `Collector`, `Source`,\\\n            \\ `IngestBudget` and `Organisation`.\"\n          example: Collector\n      discriminator:\n        propertyName: type\n        mapping:\n          Collector: '#/components/schemas/CollectorResourceIdentity'\n          Source: '#/components/schemas/SourceResourceIdentity'\n          IngestBudget: '#/components/schemas/IngestBudgetResourceIdentity'\n          Organisation: '#/components/schemas/OrgIdentity'\n          LogsToMetricsRule: '#/components/schemas/LogsToMetricsRuleIdentity'\n    TrackerIdentity:\n      required:\n      - description\n      - error\n      - trackerId\n      type: object\n      properties:\n        trackerId:\n          type: string\n          description: Name that uniquely identifies the health event. It focuses\n            on what happened rather than why.\n        error:\n          type: string\n          description: Description of the underlying reason for the event change.\n          example: Access denied to Amazon S3 bucket\n        description:\n          type: string\n          description: A more elaborate description of why the event occurred.\n          example: S3 collection is not working as expected because of access issues.\n      discriminator:\n        propertyName: description\n    DataIngestAffectedTracker:\n      type: object\n      properties:\n        eventType:\n          type: string\n          description: Event type.\n      discriminator:\n        propertyName: eventType\n    S3CollectionErrorTracker:\n      type: object\n      properties:\n        eventType:\n          type: string\n          description: Event type.\n      discriminator:\n        propertyName: eventType\n    FileCollectionErrorTracker:\n      type: object\n      properties:\n        eventType:\n          type: string\n          description: Event type.\n      discriminator:\n        propertyName: eventType\n    AwsCloudWatchCollectionErrorTracker:\n      type: object\n      properties:\n        eventType:\n          type: string\n          description: Event type.\n      discriminator:\n        propertyName: eventType\n    AwsInventoryCollectionErrorTracker:\n      type: object\n      properties:\n        eventType:\n          type: string\n          description: Event type.\n      discriminator:\n        propertyName: eventType\n    CSEWindowsErrorTracker:\n      type: object\n      properties:\n        eventType:\n          type: string\n          description: Event type.\n      discriminator:\n        propertyName: eventType\n    CSEWindowsAccessErrorTracker:\n      type: object\n      properties:\n        eventType:\n          type: string\n          description: Event type.\n      discriminator:\n        propertyName: eventType\n    CSEWindowsSensorOutOfStorageTracker:\n      type: object\n      properties:\n        eventType:\n          type: string\n          description: Event type.\n      discriminator:\n        propertyName: eventType\n    CSEWindowsParsingErrorTracker:\n      type: object\n      properties:\n        eventType:\n          type: string\n          description: Event type.\n      discriminator:\n        propertyName: eventType\n    CSEWindowsExcessiveBacklogTracker:\n      type: object\n      properties:\n        eventType:\n          type: string\n          description: Event type.\n      discriminator:\n        propertyName: eventType\n    MetricsMetadataKeyLengthLimitExceededTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/MetricsMetadataLimitsExceededTracker'\n    MetricsMetadataLimitsExceededTracker:\n      type: object\n      properties:\n        eventType:\n          type: string\n          description: Event type.\n      discriminator:\n        propertyName: eventType\n    MetricsMetadataValueLengthLimitExceededTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/MetricsMetadataLimitsExceededTracker'\n    MetricsMetadataKeyValuePairsLimitExceededTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/MetricsMetadataLimitsExceededTracker'\n    MetricsMetadataTotalMetadataSizeLimitExceededTracker:\n      allOf:\n      - $ref: '#/components/schemas/TrackerIdentity'\n      - $ref: '#/components/schemas/MetricsMetadataLimitsExceededTracker'\n    OTCReceiverErrorTracker:\n      type: object\n      properties:\n        eventType:\n          type: string\n          description: Event type.\n      discriminator:\n        propertyName: eventType\n    OTCExporterErrorTracker:\n      type: object\n      properties:\n        eventType:\n          type: string\n          description: Event type.\n      discriminator:\n        propertyName: eventType\n    OTCProcessErrorTracker:\n      type: object\n      properties:\n        eventType:\n          type: string\n          description: Event type.\n      discriminator:\n        propertyName: eventType\n    Action:\n      required:\n      - connectionType\n      type: object\n      properties:\n        connectionType:\n          pattern: ^(Email|AWSLambda|AzureFunctions|Datadog|HipChat|Jira|NewRelic|Opsgenie|PagerDuty|Slack|MicrosoftTeams|ServiceNow|SumoCloudSOAR|Webhook)$\n          type: string\n          description: |-\n            Connection type of the connection. Valid values:\n              1.  `Email`\n              2.  `AWSLambda`\n              3.  `AzureFunctions`\n              4.  `Datadog`\n              5.  `HipChat`\n              6.  `Jira`\n              7.  `NewRelic`\n              8.  `Opsgenie`\n              9.  `PagerDuty`\n              10. `Slack`\n              11. `MicrosoftTeams`\n              12. `ServiceNow`\n              13. `SumoCloudSOAR`\n              14. `Webhook`\n          x-pattern-message: \"should be one of the following: 'Email', 'AWSLambda',\\\n            \\ 'AzureFunctions', 'Datadog', 'HipChat', 'Jira', 'NewRelic', 'Opsgenie',\\\n            \\ 'PagerDuty', 'Slack', 'MicrosoftTeams', 'ServiceNow', 'SumoCloudSOAR'\\\n            \\ and 'Webhook'\"\n      description: The base class of all connection types.\n      discriminator:\n        propertyName: connectionType\n    OutlierDataValue:\n      type: object\n      properties:\n        baseline:\n          $ref: '#/components/schemas/OutlierBound'\n        critical:\n          $ref: '#/components/schemas/OutlierBound'\n        warning:\n          $ref: '#/components/schemas/OutlierBound'\n        value:\n          type: number\n          description: The value of outlier data point.\n          format: double\n          example: 70.0\n        violation:\n          pattern: ^(CriticalUpperViolation|CriticalLowerViolation|WarningUpperViolation|WarningLowerViolation|NoViolation)$\n          type: string\n          description: The type of violation.\n          example: CriticalUpperViolation\n          x-pattern-message: \"should be one of the following: 'CriticalUpperViolation',\\\n            \\ 'CriticalLowerViolation', 'WarningUpperViolation', 'WarningLowerViolation',\\\n            \\ 'NoViolation'\"\n      description: Data value and bounds of outlier data point.\n    OutlierBound:\n      type: object\n      properties:\n        lower:\n          type: number\n          description: Lower bond value.\n          format: double\n          example: 50.0\n        upper:\n          type: number\n          description: Upper bond value.\n          format: double\n          example: 100.0\n      description: The upper and lower bound of outlier/baseline.\n    StaticThreshold:\n      type: number\n      description: The data value for the condition. This defines the threshold for\n        when to trigger. Threshold value is not applicable for `MissingData` and `ResolvedMissingData`\n        triggerTypes and will be ignored if specified.\n      format: double\n      example: 50.0\n      default: 0.0\n    StaticThresholdType:\n      pattern: ^(LessThan|GreaterThan|LessThanOrEqual|GreaterThanOrEqual)$\n      type: string\n      description: |-\n        The comparison type for the `threshold` evaluation. This defines how you want the data value compared. Valid values:\n          1. `LessThan`: Less than than the configured threshold.\n          2. `GreaterThan`: Greater than the configured threshold.\n          3. `LessThanOrEqual`: Less than or equal to the configured threshold.\n          4. `GreaterThanOrEqual`: Greater than or equal to the configured threshold.\n        ThresholdType value is not applicable for `MissingData` and `ResolvedMissingData` triggerTypes and will be ignored if specified.\n      example: GreaterThanOrEqual\n      default: GreaterThanOrEqual\n      x-pattern-message: \"should be one of the following: 'LessThan', 'GreaterThan',\\\n        \\ 'LessThanOrEqual', or 'GreaterThanOrEqual'\"\n    OccurrenceType:\n      pattern: ^(AtLeastOnce|Always|ResultCount|MissingData)$\n      type: string\n      description: |-\n        The criteria to evaluate the threshold and thresholdType in the given time range. Valid values:\n          1. `AtLeastOnce`: Trigger if the threshold is met at least once. (NOTE: This is the only valid value if monitorType is `Metrics`.)\n          2. `Always`: Trigger if the threshold is met continuously. (NOTE: This is the only valid value if monitorType is `Metrics`.)\n          3. `ResultCount`: Trigger if the threshold is met against the count of results. (NOTE: This is the only valid value if monitorType is `Logs`.)\n          4. `MissingData`: Trigger if the data is missing. (NOTE: This is valid for both `Logs` and `Metrics` monitorTypes)\n      example: ResultCount\n      x-pattern-message: \"should be one of the following: 'AtLeastOnce', 'Always',\\\n        \\ 'ResultCount' or 'MissingData'\"\n    TriggerSource:\n      pattern: ^(AllTimeSeries|AnyTimeSeries|AllResults)$\n      type: string\n      description: |-\n        Determines which time series from queries to use for Metrics MissingData and ResolvedMissingData triggers Valid values:\n          1. `AllTimeSeries`: Evaluate the condition against all time series. (NOTE: This option is only valid if monitorType is `Metrics`)\n          2. `AnyTimeSeries`: Evaluate the condition against any time series. (NOTE: This option is only valid if monitorType is `Metrics`)\n          3. `AllResults`: Evaluate the condition against results from all queries. (NOTE: This option is only valid if monitorType is `Logs`)\n      example: AllResults\n      x-pattern-message: \"should be one of the following: 'AllTimeSeries', 'AnyTimeSeries',\\\n        \\ or 'AllResults'\"\n    OutlierDirection_1:\n      pattern: ^(Both|Up|Down)$\n      type: string\n      description: Specifies which direction should trigger violations.\n      example: Up\n      default: Both\n      x-pattern-message: \"should be one of the following: 'Both', 'Up', 'Down'\"\n    logs-data-forwarding-rule-management:\n      type: object\n    Metadata:\n      required:\n      - createdAt\n      - createdBy\n      - modifiedAt\n      - modifiedBy\n      type: object\n      properties:\n        createdAt:\n          type: string\n          description: \"Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\\\n            \\ format.\"\n          format: dateTime\n        createdBy:\n          type: string\n          description: Identifier of the user who created the resource.\n        modifiedAt:\n          type: string\n          description: Last modification timestamp in UTC.\n          format: dateTime\n        modifiedBy:\n          type: string\n          description: Identifier of the user who last modified the resource.\n    MetadataWithUserInfo:\n      required:\n      - createdAt\n      - createdByUser\n      - modifiedAt\n      - modifiedByUser\n      type: object\n      properties:\n        createdAt:\n          type: string\n          description: \"Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\\\n            \\ format.\"\n          format: date-time\n          nullable: true\n        createdByUser:\n          $ref: '#/components/schemas/UserInfo'\n        modifiedAt:\n          type: string\n          description: \"Last modification timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\\\n            \\ format.\"\n          format: date-time\n          nullable: true\n        modifiedByUser:\n          $ref: '#/components/schemas/UserInfo'\n    UserInfo:\n      required:\n      - email\n      - firstName\n      - id\n      - lastName\n      type: object\n      properties:\n        id:\n          type: string\n          description: User's identifier.\n          example: 0000000006743FDD\n        email:\n          type: string\n          description: User's email.\n          example: johndoe@acme.com\n        firstName:\n          type: string\n          description: User's first name.\n          example: John\n        lastName:\n          type: string\n          description: User's last name.\n          example: Doe\n    LogSearchQueryTimeRangeBase:\n      description: Definition of a log search with query and timerange.\n      allOf:\n      - $ref: '#/components/schemas/LogSearchQueryTimeRangeBaseExceptParsingMode'\n      - type: object\n        properties:\n          parsingMode:\n            type: string\n            description: |-\n              Define the parsing mode to scan the JSON format log messages. Possible values are:\n                1. `AutoParse`\n                2. `Manual`\n              In AutoParse mode, the system automatically figures out fields to parse based on the search query. While in the Manual mode, no fields are parsed out automatically. For more information see [Dynamic Parsing](https://help.sumologic.com/?cid=0011).\n            example: AutoParse\n            default: Manual\n    LogSearchQueryTimeRangeBaseExceptParsingMode:\n      required:\n      - queryString\n      - timeRange\n      type: object\n      properties:\n        queryString:\n          type: string\n          description: Query to perform.\n          example: error | count by _sourceCategory\n        timeRange:\n          $ref: '#/components/schemas/ResolvableTimeRange'\n        runByReceiptTime:\n          type: boolean\n          description: This has the value `true` if the search is to be run by receipt\n            time and `false` if it is to be run by message time.\n          example: false\n          default: false\n        queryParameters:\n          type: array\n          description: Definition of the query parameters.\n          items:\n            $ref: '#/components/schemas/LogSearchQueryParameterSyncDefinitionBase'\n      description: Definition of a log search with query and timerange.\n    LogSearchQueryParameterSyncDefinitionBase:\n      required:\n      - dataType\n      - name\n      - value\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the parameter.\n        description:\n          type: string\n          description: A description of the parameter.\n        dataType:\n          pattern: ^(NUMBER|STRING|QUERY_FRAGMENT|SEARCH_KEYWORD)$\n          type: string\n          description: |-\n            The data type of the parameter. Supported values are:\n              1. `NUMBER`\n              2. `STRING`\n              3. `QUERY_FRAGMENT`\n              4. `SEARCH_KEYWORD`\n        value:\n          type: string\n          description: A value for the parameter. Should be compatible with the type\n            set in dataType field.\n    TopologyLabelMap:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/TopologyLabelValuesList'\n          description: Map from topology labels to `TopologyLabelValuesList`.\n      description: |\n        Map of the topology labels. Each label has a key and a list of values. If a value is `*`, it means the label will match content for all values of its key.\n      example:\n        data:\n          service:\n          - kube-scheduler\n          - kube-dns\n    TopologyLabelValuesList:\n      type: array\n      description: List of values corresponding to a key of a label.\n      example: kube-scheduler\n      items:\n        type: string\n        description: Value of the label.\n      default: []\n    Iso8601TimeRange:\n      required:\n      - end\n      - start\n      type: object\n      properties:\n        start:\n          type: string\n          description: \"Start time in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\\\n            \\ format\"\n          format: date-time\n          example: 2018-10-16T09:10:00Z\n        end:\n          type: string\n          description: \"End time in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)\\\n            \\ format\"\n          format: date-time\n          example: 2018-10-16T09:20:00Z\n      description: |\n        A simple time range class, where the start and end points are specified in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\nx-tagGroups:\n- name: Archive Management\n  tags:\n  - archiveManagement\n- name: Health Events\n  tags:\n  - healthEvents\n- name: Infrequent Data Tier\n  tags:\n  - logSearchesEstimatedUsage\n- name: Ingest Budgets Management\n  tags:\n  - ingestBudgetManagementV1\n- name: Ingest Budgets Management V2\n  tags:\n  - ingestBudgetManagementV2\n- name: Library Management\n  tags:\n  - appManagement\n  - contentManagement\n  - dashboardManagement\n  - folderManagement\n  - lookupManagement\n  - contentPermissions\n- name: Metrics\n  tags:\n  - metricsSearchesManagement\n  - transformationRuleManagement\n  - metricsQuery\n- name: Security Management\n  tags:\n  - accessKeyManagement\n  - accountManagement\n  - passwordPolicy\n  - policiesManagement\n  - samlConfigurationManagement\n  - serviceAllowlistManagement\n- name: Settings Management\n  tags:\n  - connectionManagement\n  - dynamicParsingRuleManagement\n  - extractionRuleManagement\n  - fieldManagementV1\n  - partitionManagement\n  - scheduledViewManagement\n  - logsDataForwardingManagement\n- name: Tokens Management\n  tags:\n  - tokensLibraryManagement\n- name: Tracing\n  tags:\n  - traces\n  - spanAnalytics\n  - serviceMap\n- name: Users and Roles Management\n  tags:\n  - roleManagement\n  - userManagement\n- name: Monitor Management\n  tags:\n  - monitorsLibraryManagement\n- name: SLO Management\n  tags:\n  - slosLibraryManagement\n",
			"canonicalURL": "/github.com/SumoLogic/sumologic-documentation@0f86bbee360ff765db9cbc92cdd24d057bc70ba9/-/blob/sumologic-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/SumoLogic/sumologic-documentation/blob/0f86bbee360ff765db9cbc92cdd24d057bc70ba9/sumologic-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"DashboardSearchSessionIds\": resolve \"#/components/schemas/DashboardSearchSessionIds\": property \"data\": at sumologic-api.yaml:9249:20: parse default: unexpected type: \"object\""
}