{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dekaulitz/MockyUp"
		},
		"file": {
			"name": "swagger.json",
			"size": 0,
			"path": "com.github.mockyup/server/src/main/resources/public/swagger.json",
			"byteSize": 50325,
			"content": "{\n  \"openapi\": \"3.0.2\",\n  \"info\": {\n    \"description\": \"Mockup server base on openAPI vers 3.xx\",\n    \"version\": \"1\",\n    \"title\": \"Mockup Server | MockyUp\",\n    \"termsOfService\": \"\",\n    \"contact\": {\n      \"email\": \"sulaimanfahmi@gmail.com\"\n    }\n  },\n  \"servers\": [\n    {\n      \"url\": \"{host}\",\n      \"description\": \"mock api\",\n      \"variables\": {\n        \"host\": {\n          \"description\": \"your`e host application\",\n          \"default\": \"http://localhost:7070\"\n        }\n      }\n    },\n    {\n      \"url\": \"{host}/mocks/mocking/{mockId}?path=\",\n      \"description\": \"testing mock request\",\n      \"variables\": {\n        \"host\": {\n          \"description\": \"your`e host application\",\n          \"default\": \"http://localhost:7070\"\n        },\n        \"mockId\": {\n          \"description\": \"your`e mockId\",\n          \"default\": \"5e3aa62f11b5dc7e1bfaa1d6\"\n        }\n      }\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"auth\",\n      \"description\": \"User authentication\"\n    },\n    {\n      \"name\": \"users\",\n      \"description\": \"User data\"\n    },\n    {\n      \"name\": \"mocks\",\n      \"description\": \"Mocks data\"\n    },\n    {\n      \"name\": \"mocking\",\n      \"description\": \"Mocks data\"\n    }\n  ],\n  \"paths\": {\n    \"/mocks/login\": {\n      \"post\": {\n        \"summary\": \"for user login \",\n        \"tags\": [\n          \"auth\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/CLIENT_ID\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/REQUEST_AUTH_LOGIN\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"when request success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_AUTH_LOGIN\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"when user not found or invalid username or password\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"when the request is not valid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            },\n            \"description\": \"when something bad happen in our backend\"\n          }\n        }\n      }\n    },\n    \"/mocks/auth/refresh\": {\n      \"get\": {\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"summary\": \"for user refreshing new token\",\n        \"tags\": [\n          \"auth\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/CLIENT_ID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"when request success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_AUTH_LOGIN\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"when data not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"when user has expired token or invalid token\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            },\n            \"description\": \"when something bad happen in our backend\"\n          }\n        }\n      }\n    },\n    \"/mocks/page\": {\n      \"get\": {\n        \"summary\": \"for paging the mocks\",\n        \"tags\": [\n          \"mocks\"\n        ],\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/CLIENT_ID\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/SIZE\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/PAGE\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/SORT\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/SEARCH\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PAGING_MOCKS_RESPONSE\"\n                }\n              }\n            },\n            \"description\": \"when request success\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            },\n            \"description\": \"when user has expired token or using invalid token\"\n          },\n          \"403\": {\n            \"description\": \"when user has no access for viewing data \",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            },\n            \"description\": \"when something bad happen in our backend\"\n          }\n        }\n      }\n    },\n    \"/mocks/store\": {\n      \"post\": {\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"mocks\"\n        ],\n        \"summary\": \"for storing new mock\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/CLIENT_ID\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/REQUEST_STORE_NEW_MOCK\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_MOCK\"\n                }\n              }\n            },\n            \"description\": \"when request success\"\n          },\n          \"422\": {\n            \"description\": \"when the request is not valid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            },\n            \"description\": \"when user has expired token or using invalid token\"\n          },\n          \"403\": {\n            \"description\": \"when user has no access for viewing data \",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            },\n            \"description\": \"when something bad happen in our backend\"\n          }\n        }\n      }\n    },\n    \"/mocks/{dataId}/detailWithAccess\": {\n      \"get\": {\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"mocks\"\n        ],\n        \"summary\": \"get detail mockId with access permissions\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/DATA_ID\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/CLIENT_ID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"when request success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_MOCK\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"when data not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            },\n            \"description\": \"when user has expired token or using invalid token\"\n          },\n          \"403\": {\n            \"description\": \"when user has no access for viewing data \",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            },\n            \"description\": \"when something bad happen in our backend\"\n          }\n        }\n      }\n    },\n    \"/mocks/users/list\": {\n      \"get\": {\n        \"summary\": \"get user list that search from username\",\n        \"tags\": [\n          \"mocks\"\n        ],\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/SEARCH_NAME_USER\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/CLIENT_ID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"when request success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_MOCK_SEARCH_LIST_USERS\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            },\n            \"description\": \"when user has expired token or using invalid token\"\n          },\n          \"403\": {\n            \"description\": \"when user has no access for viewing data \",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            },\n            \"description\": \"when something bad happen in our backend\"\n          }\n        }\n      }\n    },\n    \"/mocks/{dataId}/histories\": {\n      \"get\": {\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"summary\": \"get mock history of mock\",\n        \"tags\": [\n          \"mocks\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/DATA_ID\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/CLIENT_ID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_MOCK_HISTORY\"\n                }\n              }\n            },\n            \"description\": \"when request success\"\n          },\n          \"422\": {\n            \"description\": \"when the request is not valid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            },\n            \"description\": \"when user has expired token or using invalid token\"\n          },\n          \"403\": {\n            \"description\": \"when user has no access for viewing data \",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            },\n            \"description\": \"when something bad happen in our backend\"\n          }\n        }\n      }\n    },\n    \"/mocks/{dataId}/addUser\": {\n      \"put\": {\n        \"summary\": \"add user access to mock\",\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/DATA_ID\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/CLIENT_ID\"\n          }\n        ],\n        \"tags\": [\n          \"mocks\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/REQUEST_ADD_ACCESS_USER_INTO_MOCK\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"when request succcess\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ADD_ACCESS_USER_INTO_MOCK\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/mocks/{dataId}/remove/{userId}\": {\n      \"delete\": {\n        \"summary\": \"remove user access from mock\",\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/DATA_ID\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/USER_ID\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/CLIENT_ID\"\n          }\n        ],\n        \"tags\": [\n          \"mocks\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"when request succcess\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ADD_ACCESS_USER_INTO_MOCK\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/mocks/{dataId}/users\": {\n      \"get\": {\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"mocks\"\n        ],\n        \"summary\": \"get user list that has access into mock\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/DATA_ID\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/CLIENT_ID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"when request success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_MOCK_LIST_USERS\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            },\n            \"description\": \"when user has expired token or using invalid token\"\n          },\n          \"403\": {\n            \"description\": \"when user has no access for viewing data \",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            },\n            \"description\": \"when something bad happen in our backend\"\n          }\n        }\n      }\n    },\n    \"/mocks/mocking/{dataId}\": {\n      \"post\": {\n        \"tags\": [\n          \"mocking\"\n        ],\n        \"summary\": \"this your`e mocking entry point\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/DATA_ID\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/PATH\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"when request success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"get\": {\n        \"tags\": [\n          \"mocking\"\n        ],\n        \"summary\": \"this your`e mocking entry point\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/DATA_ID\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/PATH\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"mocking\"\n        ],\n        \"summary\": \"this your`e mocking entry point\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/DATA_ID\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/PATH\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"mocking\"\n        ],\n        \"summary\": \"this your`e mocking entry point\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/DATA_ID\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/PATH\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"patch\": {\n        \"tags\": [\n          \"mocking\"\n        ],\n        \"summary\": \"this your`e mocking entry point\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/DATA_ID\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/PATH\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"options\": {\n        \"tags\": [\n          \"mocking\"\n        ],\n        \"summary\": \"this your`e mocking entry point\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/DATA_ID\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/PATH\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"head\": {\n        \"tags\": [\n          \"mocking\"\n        ],\n        \"summary\": \"this your`e mocking entry point\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/DATA_ID\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/PATH\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"trace\": {\n        \"tags\": [\n          \"mocking\"\n        ],\n        \"summary\": \"this your`e mocking entry point\",\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/DATA_ID\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/PATH\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/mocks/{dataId}/spec\": {\n      \"get\": {\n        \"summary\": \"get detail spec\",\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"mocks\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/DATA_ID\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/CLIENT_ID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"when request success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"description\": \"this youre openApi spec base on mockId\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"when data not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            },\n            \"description\": \"when user has expired token or using invalid token\"\n          },\n          \"403\": {\n            \"description\": \"when user has no access for viewing data \",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            },\n            \"description\": \"when something bad happen in our backend\"\n          }\n        }\n      }\n    },\n    \"/mocks/{dataId}/histories/{historyId}\": {\n      \"get\": {\n        \"summary\": \"get detail spec\",\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"mocks\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/DATA_ID\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/CLIENT_ID\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/HISTORY_ID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"when request success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"description\": \"this youre openApi spec base on mockId\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"when data not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            },\n            \"description\": \"when user has expired token or using invalid token\"\n          },\n          \"403\": {\n            \"description\": \"when user has no access for viewing data \",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            },\n            \"description\": \"when something bad happen in our backend\"\n          }\n        }\n      }\n    },\n    \"/mocks/users\": {\n      \"get\": {\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"summary\": \"for paging the users\",\n        \"tags\": [\n          \"users\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/SIZE\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/CLIENT_ID\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/PAGE\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/SORT\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/SEARCH\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PAGING_USERS_RESPONSE\"\n                }\n              }\n            },\n            \"description\": \"when request success\"\n          },\n          \"400\": {\n            \"description\": \"when data not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            },\n            \"description\": \"when user has expired token or using invalid token\"\n          },\n          \"403\": {\n            \"description\": \"when user has no access for viewing data \",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            },\n            \"description\": \"when something bad happen in our backend\"\n          }\n        }\n      }\n    },\n    \"/mocks/users/{dataId}/detail\": {\n      \"get\": {\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"summary\": \"for view user detail\",\n        \"tags\": [\n          \"users\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/CLIENT_ID\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/DATA_ID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"when request success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_USER_DETAIL\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"when data not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            },\n            \"description\": \"when user has expired token or using invalid token\"\n          },\n          \"403\": {\n            \"description\": \"when user has no access for viewing data \",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            },\n            \"description\": \"when something bad happen in our backend\"\n          }\n        }\n      }\n    },\n    \"/mocks/addUser\": {\n      \"post\": {\n        \"summary\": \"add user access\",\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"users\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/CLIENT_ID\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/REQUEST_ADD_UPDATE_USER\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_USER_DETAIL\"\n                }\n              }\n            },\n            \"description\": \"when request success\"\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            },\n            \"description\": \"when user has expired token or using invalid token\"\n          },\n          \"403\": {\n            \"description\": \"when user has no access for viewing data \",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            },\n            \"description\": \"when something bad happen in our backend\"\n          }\n        }\n      }\n    },\n    \"/mocks/users/{dataId}/update\": {\n      \"put\": {\n        \"summary\": \"update user information\",\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"users\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/DATA_ID\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/CLIENT_ID\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/REQUEST_ADD_UPDATE_USER\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_USER_DETAIL\"\n                }\n              }\n            },\n            \"description\": \"when request success\"\n          },\n          \"400\": {\n            \"description\": \"when data not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            },\n            \"description\": \"when user has expired token or using invalid token\"\n          },\n          \"403\": {\n            \"description\": \"when user has no access for viewing data \",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            },\n            \"description\": \"when something bad happen in our backend\"\n          }\n        }\n      }\n    },\n    \"/mocks/users/{dataId}/delete\": {\n      \"delete\": {\n        \"summary\": \"delete user\",\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"tags\": [\n          \"users\"\n        ],\n        \"parameters\": [\n          {\n            \"$ref\": \"#/components/parameters/DATA_ID\"\n          },\n          {\n            \"$ref\": \"#/components/parameters/CLIENT_ID\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"when request success\"\n          },\n          \"400\": {\n            \"description\": \"when data not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            },\n            \"description\": \"when user has expired token or using invalid token\"\n          },\n          \"403\": {\n            \"description\": \"when user has no access for viewing data \",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RESPONSE_ERROR\"\n                }\n              }\n            },\n            \"description\": \"when something bad happen in our backend\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"RESPONSE_ERROR\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"data\": {\n            \"type\": \"object\"\n          },\n          \"extraMessages\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"requestId\": {\n            \"type\": \"string\",\n            \"description\": \"this is the unique id for the request\"\n          },\n          \"response_code\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"MOCK010\",\n              \"MOCK011\",\n              \"MOCK012\",\n              \"MOCK014\",\n              \"MOCK015\",\n              \"MOCK020\",\n              \"MOCK021\",\n              \"MOCK022\",\n              \"MOCK023\",\n              \"MOCK024\",\n              \"MOCK025\",\n              \"MOCK026\",\n              \"MOCK027\",\n              \"MOCK028\",\n              \"MOCK001\",\n              \"MOCK002\"\n            ]\n          },\n          \"response_message\": {\n            \"type\": \"string\",\n            \"description\": \"this the information of failure\"\n          }\n        }\n      },\n      \"REQUEST_AUTH_LOGIN\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"username\",\n          \"password\"\n        ],\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RESPONSE_AUTH_LOGIN\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"user id from database\"\n          },\n          \"token\": {\n            \"type\": \"string\",\n            \"description\": \"this is the token from backend for authorization access and put on header as Authorization = Bearer {token}\"\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"description\": \"username of user\"\n          },\n          \"accessMenus\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MOCKS_READ\",\n                \"MOCKS_READ_WRITE\",\n                \"USERS_READ\",\n                \"USERS_READ_WRITE\"\n              ]\n            },\n            \"description\": \"this the scope of the user\"\n          }\n        }\n      },\n      \"PAGING_MOCKS_RESPONSE\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"page\": {\n            \"type\": \"number\",\n            \"format\": \"int32\",\n            \"description\": \"current page\"\n          },\n          \"pageCount\": {\n            \"type\": \"number\",\n            \"format\": \"int32\",\n            \"description\": \"total page\"\n          },\n          \"rowCount\": {\n            \"type\": \"number\",\n            \"format\": \"int32\",\n            \"description\": \"how much data that we got\"\n          },\n          \"rows\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"string\"\n                },\n                \"spec\": {\n                  \"type\": \"object\"\n                },\n                \"swagger\": {\n                  \"type\": \"object\"\n                },\n                \"title\": {\n                  \"type\": \"string\"\n                },\n                \"updatedBy\": {\n                  \"type\": \"string\"\n                },\n                \"updatedDate\": {\n                  \"type\": \"number\",\n                  \"format\": \"int64\"\n                },\n                \"users\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"userId\": {},\n                      \"access\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                          \"MOCKS_READ\",\n                          \"MOCKS_READ_WRITE\",\n                          \"USERS_READ\",\n                          \"USERS_READ_WRITE\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"size\": {\n            \"type\": \"number\",\n            \"format\": \"int32\",\n            \"description\": \"its how much data that we want to display\"\n          }\n        }\n      },\n      \"PAGING_USERS_RESPONSE\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"page\": {\n            \"type\": \"number\",\n            \"format\": \"int32\",\n            \"description\": \"current page\"\n          },\n          \"pageCount\": {\n            \"type\": \"number\",\n            \"format\": \"int32\",\n            \"description\": \"total page\"\n          },\n          \"rowCount\": {\n            \"type\": \"number\",\n            \"format\": \"int32\",\n            \"description\": \"how much data that we got\"\n          },\n          \"rows\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"accessList\": {\n                  \"type\": \"object\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"user id from database\"\n                },\n                \"updatedDate\": {\n                  \"type\": \"number\",\n                  \"format\": \"int64\"\n                },\n                \"username\": {\n                  \"type\": \"string\",\n                  \"description\": \"username of user\"\n                }\n              }\n            }\n          },\n          \"size\": {\n            \"type\": \"number\",\n            \"format\": \"int32\",\n            \"description\": \"its how much data that we want to display\"\n          }\n        }\n      },\n      \"REQUEST_STORE_NEW_MOCK\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"title\",\n          \"description\"\n        ],\n        \"properties\": {\n          \"title\": {\n            \"type\": \"string\",\n            \"description\": \"youre mocktitle\"\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"description\": \"description for your`e mock\"\n          },\n          \"spec\": {\n            \"type\": \"object\",\n            \"description\": \"this you api contract please using openapi v3.x\"\n          }\n        }\n      },\n      \"RESPONSE_MOCK\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"dateUpdated\": {\n            \"type\": \"number\",\n            \"format\": \"int64\"\n          },\n          \"spec\": {\n            \"type\": \"object\",\n            \"description\": \"this is your openapi contract\"\n          },\n          \"updatedBy\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"userId\": {\n                \"type\": \"string\"\n              },\n              \"username\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"currentAccessUser\": {\n            \"type\": \"object\",\n            \"description\": \"current access of users\",\n            \"properties\": {\n              \"access\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"MOCKS_READ\",\n                  \"MOCKS_READ_WRITE\"\n                ]\n              },\n              \"username\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        }\n      },\n      \"RESPONSE_MOCK_LIST_USERS\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"mock id\"\n          },\n          \"users\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/RESPONSE_USER_DETAIL\"\n            }\n          }\n        }\n      },\n      \"RESPONSE_MOCK_SEARCH_LIST_USERS\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/RESPONSE_USER_DETAIL\"\n        }\n      },\n      \"RESPONSE_MOCK_HISTORY\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"string\"\n            },\n            \"mockId\": {\n              \"type\": \"string\",\n              \"description\": \"mockId\"\n            },\n            \"title\": {\n              \"type\": \"string\"\n            },\n            \"description\": {\n              \"type\": \"string\"\n            },\n            \"users\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"userId\": {\n                    \"type\": \"string\"\n                  },\n                  \"access\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            },\n            \"swagger\": {\n              \"type\": \"string\",\n              \"description\": \"this your`e openApi in string raw\"\n            },\n            \"spec\": {\n              \"type\": \"string\",\n              \"description\": \"this is your`e openApi object class in string\"\n            },\n            \"updatedBy\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"userId\": {\n                  \"type\": \"string\"\n                },\n                \"userName\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"updatedDate\": {\n              \"type\": \"number\",\n              \"format\": \"int64\"\n            }\n          }\n        }\n      },\n      \"RESPONSE_USER_DETAIL\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"accessList\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MOCKS_READ\",\n                \"MOCKS_READ_WRITE\",\n                \"USERS_READ\",\n                \"USERS_READ_WRITE\"\n              ]\n            }\n          },\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"user id from database\"\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"description\": \"username of user\"\n          },\n          \"updatedDate\": {\n            \"type\": \"number\",\n            \"format\": \"int64\"\n          }\n        }\n      },\n      \"REQUEST_ADD_UPDATE_USER\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"accessList\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"MOCKS_READ\",\n                \"MOCKS_READ_WRITE\",\n                \"USERS_READ\",\n                \"USERS_READ_WRITE\"\n              ]\n            }\n          },\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"REQUEST_ADD_ACCESS_USER_INTO_MOCK\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"access\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"MOCKS_READ\",\n              \"MOCKS_READ_WRITE\"\n            ]\n          },\n          \"userId\": {\n            \"type\": \"string\",\n            \"description\": \"user id from database\"\n          }\n        }\n      },\n      \"RESPONSE_ADD_ACCESS_USER_INTO_MOCK\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"matchedCount\": {\n            \"type\": \"number\",\n            \"format\": \"int32\"\n          },\n          \"modifiedCount\": {\n            \"type\": \"number\",\n            \"format\": \"int32\"\n          },\n          \"upsertedId\": {\n            \"type\": \"string\"\n          },\n          \"modifiedCountAvailable\": {\n            \"type\": \"boolean\"\n          }\n        }\n      }\n    },\n    \"parameters\": {\n      \"SEARCH_NAME_USER\": {\n        \"name\": \"username\",\n        \"in\": \"query\",\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"DATA_ID\": {\n        \"name\": \"dataId\",\n        \"in\": \"path\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"description\": \"it can be your`e mockId, mockHistoryId, and userId\"\n      },\n      \"USER_ID\": {\n        \"name\": \"userId\",\n        \"in\": \"path\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"description\": \"it can be your`e userId as another param\"\n      },\n      \"PAGE\": {\n        \"name\": \"page\",\n        \"in\": \"query\",\n        \"schema\": {\n          \"type\": \"number\",\n          \"format\": \"int32\",\n          \"default\": \"1\"\n        }\n      },\n      \"SIZE\": {\n        \"name\": \"size\",\n        \"in\": \"query\",\n        \"schema\": {\n          \"type\": \"number\",\n          \"format\": \"int32\",\n          \"default\": \"10\"\n        }\n      },\n      \"SORT\": {\n        \"name\": \"sort\",\n        \"in\": \"query\",\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"description\": \"for sorting attribute example to use it [field_data]:[desc/asc]\",\n        \"example\": \"id:desc\"\n      },\n      \"SEARCH\": {\n        \"name\": \"q\",\n        \"in\": \"query\",\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"description\": \"for searching data example [field_data]:[your`e_query]\",\n        \"example\": \"username:root\"\n      },\n      \"CLIENT_ID\": {\n        \"name\": \"client-id\",\n        \"in\": \"header\",\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"description\": \"your`e client \",\n        \"example\": \"mockup-frontend\"\n      },\n      \"PATH\": {\n        \"name\": \"path\",\n        \"in\": \"query\",\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"description\": \"this your mocking endpoint\"\n      },\n      \"HISTORY_ID\": {\n        \"name\": \"historyId\",\n        \"in\": \"path\",\n        \"schema\": {\n          \"type\": \"string\"\n        },\n        \"description\": \"this is your`e historyId\",\n        \"required\": true\n      }\n    },\n    \"securitySchemes\": {\n      \"BearerAuth\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\"\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/dekaulitz/MockyUp@331c488a738565407bfc051fc3aa19699a526a3b/-/blob/com.github.mockyup/server/src/main/resources/public/swagger.json",
			"externalURLs": [
				{
					"url": "https://github.com/dekaulitz/MockyUp/blob/331c488a738565407bfc051fc3aa19699a526a3b/com.github.mockyup/server/src/main/resources/public/swagger.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"PAGE\": schema: at 1893:22: parse default: expected type \"number\", got \"string\""
}