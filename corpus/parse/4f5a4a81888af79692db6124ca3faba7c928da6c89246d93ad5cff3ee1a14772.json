{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/helgoboss/realearn"
		},
		"file": {
			"name": "realearn-simplified.yaml",
			"size": 0,
			"path": "api/src/schema/openapi/realearn-simplified.yaml",
			"byteSize": 97509,
			"content": "---\nopenapi: 3.0.0\ninfo:\n  title: ReaLearn\n  description: ReaLearn API without aliased types (for compatibility with swagger-dart-code-generator)\n  version: 0.1.0\npaths: {}\ncomponents:\n  schemas:\n    AbsoluteMode:\n      type: string\n      enum:\n        - Normal\n        - IncrementalButton\n        - ToggleButton\n        - MakeRelative\n        - PerformanceControl\n    ActionInvocationKind:\n      type: string\n      enum:\n        - Trigger\n        - Absolute14Bit\n        - Absolute7Bit\n        - Relative\n    ActivationCondition:\n      oneOf:\n        - type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - Modifier\n            modifiers:\n              type: array\n              items:\n                $ref: \"#/components/schemas/ModifierState\"\n        - type: object\n          required:\n            - bank_index\n            - kind\n            - parameter\n          properties:\n            bank_index:\n              type: integer\n              format: uint32\n              minimum: 0.0\n            kind:\n              type: string\n              enum:\n                - Bank\n            parameter:\n              $ref: \"#/components/schemas/ParamRef\"\n        - type: object\n          required:\n            - condition\n            - kind\n          properties:\n            condition:\n              type: string\n            kind:\n              type: string\n              enum:\n                - Eel\n        - type: object\n          required:\n            - condition\n            - kind\n          properties:\n            condition:\n              type: string\n            kind:\n              type: string\n              enum:\n                - Expression\n    AnyOnParameter:\n      type: string\n      enum:\n        - TrackSolo\n        - TrackMute\n        - TrackArm\n        - TrackSelection\n    AudioCacheBehavior:\n      oneOf:\n        - description: \"Loads directly from the disk.\\n\\nMight still pre-buffer some blocks but definitely won't put the complete audio data into memory.\"\n          type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - DirectFromDisk\n        - description: Loads the complete audio data into memory.\n          type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - CacheInMemory\n    AudioTimeStretchMode:\n      oneOf:\n        - description: \"Doesn't just stretch/squeeze the material but also changes the pitch.\\n\\nComparatively fast.\"\n          type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - VariSpeed\n        - description: \"Applies a real time-stretch algorithm to the material which keeps the pitch.\\n\\nComparatively slow.\"\n          type: object\n          required:\n            - kind\n            - mode\n          properties:\n            kind:\n              type: string\n              enum:\n                - KeepingPitch\n            mode:\n              $ref: \"#/components/schemas/VirtualTimeStretchMode\"\n    AutomationMode:\n      type: string\n      enum:\n        - TrimRead\n        - Read\n        - Touch\n        - Write\n        - Latch\n        - LatchPreview\n    AutomationModeOverride:\n      oneOf:\n        - type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - Bypass\n        - type: object\n          required:\n            - kind\n            - mode\n          properties:\n            kind:\n              type: string\n              enum:\n                - Mode\n            mode:\n              $ref: \"#/components/schemas/AutomationMode\"\n    BookmarkDescriptor:\n      oneOf:\n        - type: object\n          anyOf:\n            - type: object\n              required:\n                - id\n              properties:\n                id:\n                  type: integer\n                  format: uint32\n                  minimum: 0.0\n            - type: object\n              required:\n                - index\n              properties:\n                index:\n                  type: integer\n                  format: uint32\n                  minimum: 0.0\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - Marker\n        - type: object\n          anyOf:\n            - type: object\n              required:\n                - id\n              properties:\n                id:\n                  type: integer\n                  format: uint32\n                  minimum: 0.0\n            - type: object\n              required:\n                - index\n              properties:\n                index:\n                  type: integer\n                  format: uint32\n                  minimum: 0.0\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - Region\n    ButtonFilter:\n      type: string\n      enum:\n        - PressOnly\n        - ReleaseOnly\n    Clip:\n      type: object\n      required:\n        - audio_settings\n        - color\n        - looped\n        - midi_settings\n        - section\n        - source\n        - time_base\n        - volume\n      properties:\n        active_source:\n          description: Which of the sources is the active one.\n          default: Normal\n          allOf:\n            - $ref: \"#/components/schemas/SourceOrigin\"\n        audio_settings:\n          $ref: \"#/components/schemas/ClipAudioSettings\"\n        color:\n          description: Color of the clip.\n          allOf:\n            - $ref: \"#/components/schemas/ClipColor\"\n        frozen_source:\n          description: \"Source with effects \\\"rendered in\\\", usually audio.\"\n          allOf:\n            - $ref: \"#/components/schemas/Source\"\n        looped:\n          description: Whether the clip should be played repeatedly or as a single shot.\n          type: boolean\n        midi_settings:\n          $ref: \"#/components/schemas/ClipMidiSettings\"\n        name:\n          type: string\n        section:\n          description: Defines which portion of the original source should be played.\n          allOf:\n            - $ref: \"#/components/schemas/Section\"\n        source:\n          description: Source of the audio/MIDI material of this clip.\n          allOf:\n            - $ref: \"#/components/schemas/Source\"\n        start_timing:\n          description: \"Start timing override.\\n\\n`None` means it uses the column start timing.\"\n          allOf:\n            - $ref: \"#/components/schemas/ClipPlayStartTiming\"\n        stop_timing:\n          description: \"Stop timing override.\\n\\n`None` means it uses the column stop timing.\"\n          allOf:\n            - $ref: \"#/components/schemas/ClipPlayStopTiming\"\n        time_base:\n          description: Time base of the material provided by that source.\n          allOf:\n            - $ref: \"#/components/schemas/ClipTimeBase\"\n        volume:\n          description: Relative volume adjustment of clip.\n          type: number\n          format: double\n      additionalProperties: false\n    ClipAudioSettings:\n      type: object\n      required:\n        - apply_source_fades\n      properties:\n        apply_source_fades:\n          description: \"Defines whether to apply automatic fades in order to fix potentially non-optimized source material.\\n\\n## `false`\\n\\nDoesn't apply automatic fades for fixing non-optimized source material.\\n\\nThis only prevents source-fix fades. Fades that are not about fixing the source will still be applied if necessary in order to ensure a smooth playback, such as:\\n\\n- Section fades (start fade-in, end fade-out) - Interaction fades (resume-after-pause fade-in, immediate stop fade-out)\\n\\nFades don't overlap. Here's the order of priority (for fade-in and fade-out separately):\\n\\n- Interaction fades - Section fades - Source-fix fades\\n\\n## `true`\\n\\nApplies automatic fades to fix non-optimized source material, if necessary.\"\n          type: boolean\n        cache_behavior:\n          description: \"Whether to cache audio in memory.\\n\\n`None` means it uses the column cache behavior.\"\n          allOf:\n            - $ref: \"#/components/schemas/AudioCacheBehavior\"\n        resample_mode:\n          description: Overrides the column resample mode for clips in this column.\n          allOf:\n            - $ref: \"#/components/schemas/VirtualResampleMode\"\n        time_stretch_mode:\n          description: \"Defines how to adjust audio material.\\n\\nThis is usually used with the beat time base to match the tempo of the clip to the global tempo.\\n\\n`None` means it uses the column time stretch mode.\"\n          allOf:\n            - $ref: \"#/components/schemas/AudioTimeStretchMode\"\n      additionalProperties: false\n    ClipColor:\n      oneOf:\n        - description: \"Inherits the color of the column's play track.\"\n          type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - PlayTrackColor\n        - description: Assigns a very specific custom color.\n          type: object\n          required:\n            - kind\n            - value\n          properties:\n            kind:\n              type: string\n              enum:\n                - CustomColor\n            value:\n              type: integer\n              format: uint32\n              minimum: 0.0\n        - description: Uses a certain color from a palette.\n          type: object\n          required:\n            - index\n            - kind\n          properties:\n            index:\n              type: integer\n              format: uint32\n              minimum: 0.0\n            kind:\n              type: string\n              enum:\n                - PaletteColor\n    ClipColumnAction:\n      type: string\n      enum:\n        - Stop\n    ClipColumnDescriptor:\n      oneOf:\n        - type: object\n          required:\n            - address\n          properties:\n            address:\n              type: string\n              enum:\n                - Selected\n        - type: object\n          required:\n            - address\n            - index\n          properties:\n            address:\n              type: string\n              enum:\n                - ByIndex\n            index:\n              type: integer\n              format: uint\n              minimum: 0.0\n        - type: object\n          required:\n            - address\n            - expression\n          properties:\n            address:\n              type: string\n              enum:\n                - Dynamic\n            expression:\n              type: string\n    ClipColumnTrackContext:\n      type: string\n      enum:\n        - Playback\n        - Recording\n    ClipManagementAction:\n      oneOf:\n        - type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - ClearSlot\n        - type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - FillSlotWithSelectedItem\n        - type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - EditClip\n        - type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - CopyOrPasteClip\n        - type: object\n          required:\n            - factor\n            - kind\n          properties:\n            factor:\n              type: number\n              format: double\n            kind:\n              type: string\n              enum:\n                - AdjustClipSectionLength\n    ClipMatrixAction:\n      type: string\n      enum:\n        - Stop\n        - Undo\n        - Redo\n        - BuildScene\n    ClipMidiSettings:\n      type: object\n      required:\n        - interaction_reset_settings\n        - loop_reset_settings\n        - section_reset_settings\n        - source_reset_settings\n      properties:\n        interaction_reset_settings:\n          description: For fine-tuning instant start/stop of a MIDI clip when in the middle of a source or section.\n          allOf:\n            - $ref: \"#/components/schemas/MidiResetMessageRange\"\n        loop_reset_settings:\n          description: For fine-tuning the complete loop.\n          allOf:\n            - $ref: \"#/components/schemas/MidiResetMessageRange\"\n        section_reset_settings:\n          description: For fine-tuning the section.\n          allOf:\n            - $ref: \"#/components/schemas/MidiResetMessageRange\"\n        source_reset_settings:\n          description: For fixing the source itself.\n          allOf:\n            - $ref: \"#/components/schemas/MidiResetMessageRange\"\n      additionalProperties: false\n    ClipPlayStartTiming:\n      oneOf:\n        - description: Starts playing immediately.\n          type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - Immediately\n        - description: Starts playing according to the given quantization.\n          type: object\n          required:\n            - denominator\n            - kind\n            - numerator\n          properties:\n            denominator:\n              type: integer\n              format: uint32\n              minimum: 0.0\n            kind:\n              type: string\n              enum:\n                - Quantized\n            numerator:\n              type: integer\n              format: uint32\n              minimum: 0.0\n    ClipPlayStopTiming:\n      oneOf:\n        - description: Uses the play start timing.\n          type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - LikeClipStartTiming\n        - description: Stops playing immediately.\n          type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - Immediately\n        - description: Stops playing according to the given quantization.\n          type: object\n          required:\n            - denominator\n            - kind\n            - numerator\n          properties:\n            denominator:\n              type: integer\n              format: uint32\n              minimum: 0.0\n            kind:\n              type: string\n              enum:\n                - Quantized\n            numerator:\n              type: integer\n              format: uint32\n              minimum: 0.0\n        - description: Keeps playing until the end of the clip.\n          type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - UntilEndOfClip\n    ClipRecordStartTiming:\n      oneOf:\n        - description: Uses the inherited clip play start timing (from column or matrix).\n          type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - LikeClipPlayStartTiming\n        - description: Starts recording immediately.\n          type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - Immediately\n        - description: Starts recording according to the given quantization.\n          type: object\n          required:\n            - denominator\n            - kind\n            - numerator\n          properties:\n            denominator:\n              type: integer\n              format: uint32\n              minimum: 0.0\n            kind:\n              type: string\n              enum:\n                - Quantized\n            numerator:\n              type: integer\n              format: uint32\n              minimum: 0.0\n    ClipRecordStopTiming:\n      oneOf:\n        - description: Uses the record start timing.\n          type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - LikeClipRecordStartTiming\n        - description: Stops recording immediately.\n          type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - Immediately\n        - description: Stops recording according to the given quantization.\n          type: object\n          required:\n            - denominator\n            - kind\n            - numerator\n          properties:\n            denominator:\n              type: integer\n              format: uint32\n              minimum: 0.0\n            kind:\n              type: string\n              enum:\n                - Quantized\n            numerator:\n              type: integer\n              format: uint32\n              minimum: 0.0\n    ClipRecordTimeBase:\n      oneOf:\n        - description: Derives the time base of the resulting clip from the clip start timing.\n          type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - DeriveFromRecordTiming\n        - description: \"Sets the time base of the recorded clip to [`ClipTimeBase::Time`].\"\n          type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - Time\n        - description: \"Sets the time base of the recorded clip to [`ClipTimeBase::Beat`].\"\n          type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - Beat\n    ClipRowAction:\n      type: string\n      enum:\n        - PlayScene\n        - BuildScene\n        - ClearScene\n        - CopyOrPasteScene\n    ClipRowDescriptor:\n      oneOf:\n        - type: object\n          required:\n            - address\n          properties:\n            address:\n              type: string\n              enum:\n                - Selected\n        - type: object\n          required:\n            - address\n            - index\n          properties:\n            address:\n              type: string\n              enum:\n                - ByIndex\n            index:\n              type: integer\n              format: uint\n              minimum: 0.0\n        - type: object\n          required:\n            - address\n            - expression\n          properties:\n            address:\n              type: string\n              enum:\n                - Dynamic\n            expression:\n              type: string\n    ClipSettingOverrideAfterRecording_for_ClipPlayStartTiming:\n      oneOf:\n        - description: \"Doesn't apply any override.\"\n          type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - Inherit\n        - description: Overrides the setting with the given value.\n          type: object\n          required:\n            - kind\n            - value\n          properties:\n            kind:\n              type: string\n              enum:\n                - Override\n            value:\n              $ref: \"#/components/schemas/ClipPlayStartTiming\"\n        - description: \"Derives the setting from the record timing.\\n\\nIf the record timing is set to the global clip timing, that means it will not apply any override. If it's set to something specific, it will apply the appropriate override.\"\n          type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - DeriveFromRecordTiming\n    ClipSettingOverrideAfterRecording_for_ClipPlayStopTiming:\n      oneOf:\n        - description: \"Doesn't apply any override.\"\n          type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - Inherit\n        - description: Overrides the setting with the given value.\n          type: object\n          required:\n            - kind\n            - value\n          properties:\n            kind:\n              type: string\n              enum:\n                - Override\n            value:\n              $ref: \"#/components/schemas/ClipPlayStopTiming\"\n        - description: \"Derives the setting from the record timing.\\n\\nIf the record timing is set to the global clip timing, that means it will not apply any override. If it's set to something specific, it will apply the appropriate override.\"\n          type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - DeriveFromRecordTiming\n    ClipSlotDescriptor:\n      oneOf:\n        - type: object\n          required:\n            - address\n          properties:\n            address:\n              type: string\n              enum:\n                - Selected\n        - type: object\n          required:\n            - address\n            - column_index\n            - row_index\n          properties:\n            address:\n              type: string\n              enum:\n                - ByIndex\n            column_index:\n              type: integer\n              format: uint\n              minimum: 0.0\n            row_index:\n              type: integer\n              format: uint\n              minimum: 0.0\n        - type: object\n          required:\n            - address\n            - column_expression\n            - row_expression\n          properties:\n            address:\n              type: string\n              enum:\n                - Dynamic\n            column_expression:\n              type: string\n            row_expression:\n              type: string\n    ClipTimeBase:\n      description: Decides if the clip will be adjusted to the current tempo.\n      oneOf:\n        - description: \"Material which doesn't need to be adjusted to the current tempo.\"\n          type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - Time\n        - description: Material which needs to be adjusted to the current tempo.\n          type: object\n          required:\n            - downbeat\n            - kind\n            - time_signature\n          properties:\n            audio_tempo:\n              description: \"The clip's native tempo.\\n\\nMust be set for audio. Is ignored for MIDI.\\n\\nThis information is used by the clip engine to determine how much to speed up or slow down the material depending on the current project tempo.\"\n              type: number\n              format: double\n            downbeat:\n              description: Defines which position (in beats) is the downbeat.\n              type: number\n              format: double\n            kind:\n              type: string\n              enum:\n                - Beat\n            time_signature:\n              description: \"The time signature of this clip.\\n\\nIf provided, This information is used for certain aspects of the user interface.\"\n              allOf:\n                - $ref: \"#/components/schemas/TimeSignature\"\n    ClipTransportAction:\n      type: string\n      enum:\n        - PlayStop\n        - PlayPause\n        - Stop\n        - Pause\n        - RecordStop\n        - RecordPlayStop\n        - Looped\n    Column:\n      type: object\n      required:\n        - clip_play_settings\n        - clip_record_settings\n      properties:\n        clip_play_settings:\n          $ref: \"#/components/schemas/ColumnClipPlaySettings\"\n        clip_record_settings:\n          $ref: \"#/components/schemas/ColumnClipRecordSettings\"\n        slots:\n          description: \"Slots in this column.\\n\\nOnly filled slots need to be mentioned here.\"\n          type: array\n          items:\n            $ref: \"#/components/schemas/Slot\"\n      additionalProperties: false\n    ColumnClipPlayAudioSettings:\n      type: object\n      properties:\n        cache_behavior:\n          description: Overrides the matrix-global audio cache behavior for clips in this column.\n          allOf:\n            - $ref: \"#/components/schemas/AudioCacheBehavior\"\n        resample_mode:\n          description: Overrides the matrix-global resample mode for clips in this column.\n          allOf:\n            - $ref: \"#/components/schemas/VirtualResampleMode\"\n        time_stretch_mode:\n          description: Overrides the matrix-global audio time stretch mode for clips in this column.\n          allOf:\n            - $ref: \"#/components/schemas/AudioTimeStretchMode\"\n      additionalProperties: false\n    ColumnClipPlaySettings:\n      type: object\n      required:\n        - audio_settings\n      properties:\n        audio_settings:\n          $ref: \"#/components/schemas/ColumnClipPlayAudioSettings\"\n        mode:\n          $ref: \"#/components/schemas/ColumnPlayMode\"\n        start_timing:\n          description: \"Start timing override.\\n\\n`None` means it uses the matrix-global start timing.\"\n          allOf:\n            - $ref: \"#/components/schemas/ClipPlayStartTiming\"\n        stop_timing:\n          description: \"Stop timing override.\\n\\n`None` means it uses the matrix-global stop timing.\"\n          allOf:\n            - $ref: \"#/components/schemas/ClipPlayStopTiming\"\n        track:\n          description: \"REAPER track used for playing back clips in this column.\\n\\nUsually, each column should have a play track. But events might occur that leave a column in a \\\"track-less\\\" state, e.g. the deletion of a track. This column will be unusable until the user sets a play track again. We still want to be able to save the matrix in such a state, otherwise it could be really annoying. So we allow `None`.\"\n          type: string\n      additionalProperties: false\n    ColumnClipRecordSettings:\n      type: object\n      required:\n        - origin\n      properties:\n        origin:\n          $ref: \"#/components/schemas/RecordOrigin\"\n        track:\n          description: \"By default, Playtime records from the play track but this settings allows to override that.\"\n          type: string\n      additionalProperties: false\n    ColumnPlayMode:\n      oneOf:\n        - description: \"- Only one clip in the column can play at a certain point in time. - Clips are started/stopped if the corresponding scene is started/stopped.\"\n          type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - ExclusiveFollowingScene\n        - description: \"- Only one clip in the column can play at a certain point in time. - Clips are not started/stopped if the corresponding scene is started/stopped.\"\n          type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - ExclusiveIgnoringScene\n        - description: \"- Multiple clips can play simultaneously. - Clips are started/stopped if the corresponding scene is started/stopped (in an exclusive manner).\"\n          type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - NonExclusiveFollowingScene\n        - description: \"- Multiple clips can play simultaneously. - Clips are not started/stopped if the corresponding scene is started/stopped.\"\n          type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - Free\n    Compartment:\n      type: object\n      properties:\n        custom_data:\n          description: \"At the moment, custom data is only used in the controller compartment.\\n\\nAttention: Custom data in the main compartment is not fully supported, i.e. it's not saved together with the session.\"\n          type: object\n          additionalProperties: true\n        default_group:\n          $ref: \"#/components/schemas/Group\"\n        groups:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Group\"\n        mappings:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Mapping\"\n        parameters:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Parameter\"\n      additionalProperties: false\n    EncoderFilter:\n      type: string\n      enum:\n        - IncrementOnly\n        - DecrementOnly\n    Feedback:\n      oneOf:\n        - type: object\n          required:\n            - kind\n          properties:\n            background_color:\n              $ref: \"#/components/schemas/VirtualColor\"\n            color:\n              $ref: \"#/components/schemas/VirtualColor\"\n            kind:\n              type: string\n              enum:\n                - Numeric\n            transformation:\n              type: string\n        - type: object\n          required:\n            - kind\n          properties:\n            background_color:\n              $ref: \"#/components/schemas/VirtualColor\"\n            color:\n              $ref: \"#/components/schemas/VirtualColor\"\n            kind:\n              type: string\n              enum:\n                - Text\n            text_expression:\n              type: string\n    FeedbackBehavior:\n      type: string\n      enum:\n        - Normal\n        - SendFeedbackAfterControl\n        - PreventEchoFeedback\n    FeedbackResolution:\n      type: string\n      enum:\n        - Beat\n        - High\n    FeedbackValueTable:\n      oneOf:\n        - type: object\n          required:\n            - kind\n            - value\n          properties:\n            kind:\n              type: string\n              enum:\n                - FromTextToDiscrete\n            value:\n              type: object\n              additionalProperties:\n                type: integer\n                format: uint32\n                minimum: 0.0\n        - type: object\n          required:\n            - kind\n            - value\n          properties:\n            kind:\n              type: string\n              enum:\n                - FromTextToContinuous\n            value:\n              type: object\n              additionalProperties:\n                type: number\n                format: double\n    FireMode:\n      oneOf:\n        - type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - Normal\n            press_duration_interval:\n              $ref: \"#/components/schemas/Interval_for_uint32\"\n        - type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - AfterTimeout\n            timeout:\n              type: integer\n              format: uint32\n              minimum: 0.0\n        - type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - AfterTimeoutKeepFiring\n            rate:\n              type: integer\n              format: uint32\n              minimum: 0.0\n            timeout:\n              type: integer\n              format: uint32\n              minimum: 0.0\n        - type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - OnSinglePress\n            max_duration:\n              type: integer\n              format: uint32\n              minimum: 0.0\n        - type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - OnDoublePress\n    FxChainDescriptor:\n      oneOf:\n        - type: object\n          required:\n            - address\n          properties:\n            address:\n              type: string\n              enum:\n                - Track\n            chain:\n              $ref: \"#/components/schemas/TrackFxChain\"\n            track:\n              $ref: \"#/components/schemas/TrackDescriptor\"\n    FxDescriptor:\n      oneOf:\n        - type: object\n          required:\n            - address\n          properties:\n            address:\n              type: string\n              enum:\n                - This\n            fx_must_have_focus:\n              type: boolean\n        - type: object\n          required:\n            - address\n          properties:\n            address:\n              type: string\n              enum:\n                - Focused\n        - type: object\n          required:\n            - address\n            - chain\n            - expression\n          properties:\n            address:\n              type: string\n              enum:\n                - Dynamic\n            chain:\n              $ref: \"#/components/schemas/FxChainDescriptor\"\n            expression:\n              type: string\n            fx_must_have_focus:\n              type: boolean\n        - type: object\n          required:\n            - address\n            - chain\n          properties:\n            address:\n              type: string\n              enum:\n                - ById\n            chain:\n              $ref: \"#/components/schemas/FxChainDescriptor\"\n            fx_must_have_focus:\n              type: boolean\n            id:\n              type: string\n        - type: object\n          required:\n            - address\n            - chain\n            - index\n          properties:\n            address:\n              type: string\n              enum:\n                - ByIndex\n            chain:\n              $ref: \"#/components/schemas/FxChainDescriptor\"\n            fx_must_have_focus:\n              type: boolean\n            index:\n              type: integer\n              format: uint32\n              minimum: 0.0\n        - type: object\n          required:\n            - address\n            - chain\n            - name\n          properties:\n            address:\n              type: string\n              enum:\n                - ByName\n            allow_multiple:\n              type: boolean\n            chain:\n              $ref: \"#/components/schemas/FxChainDescriptor\"\n            fx_must_have_focus:\n              type: boolean\n            name:\n              type: string\n    FxDisplayKind:\n      type: string\n      enum:\n        - FloatingWindow\n        - Chain\n    FxParameterDescriptor:\n      oneOf:\n        - type: object\n          required:\n            - address\n            - expression\n          properties:\n            address:\n              type: string\n              enum:\n                - Dynamic\n            expression:\n              type: string\n            fx:\n              $ref: \"#/components/schemas/FxDescriptor\"\n        - type: object\n          required:\n            - address\n            - index\n          properties:\n            address:\n              type: string\n              enum:\n                - ById\n            fx:\n              $ref: \"#/components/schemas/FxDescriptor\"\n            index:\n              type: integer\n              format: uint32\n              minimum: 0.0\n        - type: object\n          required:\n            - address\n            - index\n          properties:\n            address:\n              type: string\n              enum:\n                - ByIndex\n            fx:\n              $ref: \"#/components/schemas/FxDescriptor\"\n            index:\n              type: integer\n              format: uint32\n              minimum: 0.0\n        - type: object\n          required:\n            - address\n            - name\n          properties:\n            address:\n              type: string\n              enum:\n                - ByName\n            fx:\n              $ref: \"#/components/schemas/FxDescriptor\"\n            name:\n              type: string\n    FxSnapshot:\n      type: object\n      required:\n        - content\n      properties:\n        content:\n          $ref: \"#/components/schemas/FxSnapshotContent\"\n        fx_kind:\n          type: string\n        fx_name:\n          type: string\n        preset_name:\n          type: string\n      additionalProperties: false\n    FxSnapshotContent:\n      oneOf:\n        - type: object\n          required:\n            - chunk\n            - kind\n          properties:\n            chunk:\n              type: string\n            kind:\n              type: string\n              enum:\n                - Chunk\n    Glue:\n      type: object\n      properties:\n        absolute_mode:\n          $ref: \"#/components/schemas/AbsoluteMode\"\n        button_filter:\n          $ref: \"#/components/schemas/ButtonFilter\"\n        control_transformation:\n          type: string\n        encoder_filter:\n          $ref: \"#/components/schemas/EncoderFilter\"\n        feedback:\n          $ref: \"#/components/schemas/Feedback\"\n        feedback_value_table:\n          $ref: \"#/components/schemas/FeedbackValueTable\"\n        fire_mode:\n          $ref: \"#/components/schemas/FireMode\"\n        interaction:\n          $ref: \"#/components/schemas/Interaction\"\n        jump_interval:\n          $ref: \"#/components/schemas/Interval_for_double\"\n        out_of_range_behavior:\n          $ref: \"#/components/schemas/OutOfRangeBehavior\"\n        relative_mode:\n          $ref: \"#/components/schemas/RelativeMode\"\n        reverse:\n          type: boolean\n        round_target_value:\n          type: boolean\n        source_interval:\n          $ref: \"#/components/schemas/Interval_for_double\"\n        step_factor_interval:\n          $ref: \"#/components/schemas/Interval_for_int32\"\n        step_size_interval:\n          $ref: \"#/components/schemas/Interval_for_double\"\n        takeover_mode:\n          $ref: \"#/components/schemas/TakeoverMode\"\n        target_interval:\n          $ref: \"#/components/schemas/Interval_for_double\"\n        target_value_sequence:\n          type: string\n        wrap:\n          type: boolean\n      additionalProperties: false\n    Group:\n      type: object\n      properties:\n        activation_condition:\n          $ref: \"#/components/schemas/ActivationCondition\"\n        control_enabled:\n          type: boolean\n        feedback_enabled:\n          type: boolean\n        id:\n          description: \"An optional ID that you can assign to this group in order to refer to it from somewhere else.\\n\\nThis ID should be unique within all groups in the same compartment.\"\n          type: string\n        name:\n          type: string\n        tags:\n          type: array\n          items:\n            type: string\n      additionalProperties: false\n    GroupMappingExclusivity:\n      type: string\n      enum:\n        - Exclusive\n    InstanceExclusivity:\n      type: string\n      enum:\n        - Exclusive\n        - ExclusiveOnOnly\n    Interaction:\n      type: string\n      enum:\n        - SameControl\n        - SameTargetValue\n        - InverseControl\n        - InverseTargetValue\n        - InverseTargetValueOnOnly\n    Interval_for_double:\n      type: array\n      items:\n        type: number\n        format: double\n      maxItems: 2\n      minItems: 2\n    Interval_for_int32:\n      type: array\n      items:\n        type: integer\n        format: int32\n      maxItems: 2\n      minItems: 2\n    Interval_for_uint32:\n      type: array\n      items:\n        type: integer\n        format: uint32\n        minimum: 0.0\n      maxItems: 2\n      minItems: 2\n    Keystroke:\n      type: object\n      required:\n        - key\n        - modifiers\n      properties:\n        key:\n          type: integer\n          format: uint16\n          minimum: 0.0\n        modifiers:\n          type: integer\n          format: uint8\n          minimum: 0.0\n      additionalProperties: false\n    LifecycleHook:\n      type: object\n      properties:\n        send_midi_feedback:\n          type: array\n          items:\n            $ref: \"#/components/schemas/SendMidiFeedbackAction\"\n    MackieSevenSegmentDisplayScope:\n      type: string\n      enum:\n        - All\n        - Assignment\n        - Tc\n        - TcHoursBars\n        - TcMinutesBeats\n        - TcSecondsSub\n        - TcFramesTicks\n    Mapping:\n      type: object\n      properties:\n        activation_condition:\n          $ref: \"#/components/schemas/ActivationCondition\"\n        control_enabled:\n          type: boolean\n        enabled:\n          type: boolean\n        feedback_enabled:\n          type: boolean\n        glue:\n          $ref: \"#/components/schemas/Glue\"\n        group:\n          type: string\n        id:\n          description: \"An optional ID that you can assign to this mapping in order to refer to it from somewhere else.\\n\\nThis ID should be unique within all mappings in the compartment.\"\n          type: string\n        name:\n          type: string\n        on_activate:\n          $ref: \"#/components/schemas/LifecycleHook\"\n        on_deactivate:\n          $ref: \"#/components/schemas/LifecycleHook\"\n        source:\n          $ref: \"#/components/schemas/Source\"\n        tags:\n          type: array\n          items:\n            type: string\n        target:\n          $ref: \"#/components/schemas/Target\"\n        unprocessed:\n          type: object\n          additionalProperties: true\n        visible_in_projection:\n          type: boolean\n      additionalProperties: false\n    MappingExclusivity:\n      type: string\n      enum:\n        - Exclusive\n        - ExclusiveOnOnly\n    Matrix:\n      type: object\n      required:\n        - clip_play_settings\n        - clip_record_settings\n        - common_tempo_range\n      properties:\n        clip_play_settings:\n          $ref: \"#/components/schemas/MatrixClipPlaySettings\"\n        clip_record_settings:\n          $ref: \"#/components/schemas/MatrixClipRecordSettings\"\n        columns:\n          description: All columns from left to right.\n          type: array\n          items:\n            $ref: \"#/components/schemas/Column\"\n        common_tempo_range:\n          $ref: \"#/components/schemas/TempoRange\"\n        rows:\n          description: All rows from top to bottom.\n          type: array\n          items:\n            $ref: \"#/components/schemas/Row\"\n      additionalProperties: false\n    MatrixClipPlayAudioSettings:\n      type: object\n      required:\n        - cache_behavior\n        - resample_mode\n        - time_stretch_mode\n      properties:\n        cache_behavior:\n          $ref: \"#/components/schemas/AudioCacheBehavior\"\n        resample_mode:\n          $ref: \"#/components/schemas/VirtualResampleMode\"\n        time_stretch_mode:\n          $ref: \"#/components/schemas/AudioTimeStretchMode\"\n      additionalProperties: false\n    MatrixClipPlaySettings:\n      description: Matrix-global settings related to playing clips.\n      type: object\n      required:\n        - audio_settings\n        - start_timing\n        - stop_timing\n      properties:\n        audio_settings:\n          $ref: \"#/components/schemas/MatrixClipPlayAudioSettings\"\n        start_timing:\n          $ref: \"#/components/schemas/ClipPlayStartTiming\"\n        stop_timing:\n          $ref: \"#/components/schemas/ClipPlayStopTiming\"\n      additionalProperties: false\n    MatrixClipRecordAudioSettings:\n      type: object\n      required:\n        - detect_downbeat\n        - detect_input\n      properties:\n        detect_downbeat:\n          description: \"If `true`, attempts to detect the actual start of the recorded audio material and derives the downbeat position from that.\"\n          type: boolean\n        detect_input:\n          description: Makes the global record button work for audio by allowing global input detection.\n          type: boolean\n      additionalProperties: false\n    MatrixClipRecordMidiSettings:\n      type: object\n      required:\n        - auto_quantize\n        - detect_downbeat\n        - detect_input\n        - record_mode\n      properties:\n        auto_quantize:\n          description: Applies quantization while recording using the current quantization settings.\n          type: boolean\n        clip_settings:\n          description: These are the MIDI settings each recorded clip will get.\n          default:\n            interaction_reset_settings:\n              left:\n                all_notes_off: false\n                all_sound_off: false\n                damper_pedal_off: false\n                on_notes_off: false\n                reset_all_controllers: false\n              right:\n                all_notes_off: false\n                all_sound_off: false\n                damper_pedal_off: false\n                on_notes_off: false\n                reset_all_controllers: false\n            loop_reset_settings:\n              left:\n                all_notes_off: false\n                all_sound_off: false\n                damper_pedal_off: false\n                on_notes_off: false\n                reset_all_controllers: false\n              right:\n                all_notes_off: false\n                all_sound_off: false\n                damper_pedal_off: false\n                on_notes_off: false\n                reset_all_controllers: false\n            section_reset_settings:\n              left:\n                all_notes_off: false\n                all_sound_off: false\n                damper_pedal_off: false\n                on_notes_off: false\n                reset_all_controllers: false\n              right:\n                all_notes_off: false\n                all_sound_off: false\n                damper_pedal_off: false\n                on_notes_off: false\n                reset_all_controllers: false\n            source_reset_settings:\n              left:\n                all_notes_off: false\n                all_sound_off: false\n                damper_pedal_off: false\n                on_notes_off: false\n                reset_all_controllers: false\n              right:\n                all_notes_off: false\n                all_sound_off: false\n                damper_pedal_off: false\n                on_notes_off: false\n                reset_all_controllers: false\n          allOf:\n            - $ref: \"#/components/schemas/ClipMidiSettings\"\n        detect_downbeat:\n          description: \"If `true`, attempts to detect the actual start of the recorded MIDI material and derives the downbeat position from that.\"\n          type: boolean\n        detect_input:\n          description: Makes the global record button work for MIDI by allowing global input detection.\n          type: boolean\n        record_mode:\n          $ref: \"#/components/schemas/MidiClipRecordMode\"\n      additionalProperties: false\n    MatrixClipRecordSettings:\n      description: Matrix-global settings related to recording clips.\n      type: object\n      required:\n        - audio_settings\n        - duration\n        - lead_tempo\n        - looped\n        - midi_settings\n        - play_start_timing\n        - play_stop_timing\n        - start_timing\n        - stop_timing\n        - time_base\n      properties:\n        audio_settings:\n          $ref: \"#/components/schemas/MatrixClipRecordAudioSettings\"\n        duration:\n          $ref: \"#/components/schemas/RecordLength\"\n        lead_tempo:\n          description: \"If `true`, sets the global tempo to the tempo of this clip right after recording.\"\n          type: boolean\n        looped:\n          description: \"If `true`, starts playing the clip right after recording.\"\n          type: boolean\n        midi_settings:\n          $ref: \"#/components/schemas/MatrixClipRecordMidiSettings\"\n        play_start_timing:\n          $ref: \"#/components/schemas/ClipSettingOverrideAfterRecording_for_ClipPlayStartTiming\"\n        play_stop_timing:\n          $ref: \"#/components/schemas/ClipSettingOverrideAfterRecording_for_ClipPlayStopTiming\"\n        start_timing:\n          $ref: \"#/components/schemas/ClipRecordStartTiming\"\n        stop_timing:\n          $ref: \"#/components/schemas/ClipRecordStopTiming\"\n        time_base:\n          $ref: \"#/components/schemas/ClipRecordTimeBase\"\n      additionalProperties: false\n    MidiClipRecordMode:\n      oneOf:\n        - description: Creates an empty clip and records MIDI material in it.\n          type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - Normal\n        - description: \"Records more material onto an existing clip, leaving existing material in place.\\n\\nFalls back to Normal when used on an empty slot.\"\n          type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - Overdub\n        - description: \"Records more material onto an existing clip, overwriting existing material.\\n\\nFalls back to Normal when used on an empty slot.\"\n          type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - Replace\n    MidiClockTransportMessage:\n      type: string\n      enum:\n        - Start\n        - Continue\n        - Stop\n    MidiDestination:\n      oneOf:\n        - type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - FxOutput\n        - type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - FeedbackOutput\n    MidiResetMessageRange:\n      type: object\n      required:\n        - left\n        - right\n      properties:\n        left:\n          description: Which MIDI reset messages to apply at the beginning.\n          allOf:\n            - $ref: \"#/components/schemas/MidiResetMessages\"\n        right:\n          description: Which MIDI reset messages to apply at the end.\n          allOf:\n            - $ref: \"#/components/schemas/MidiResetMessages\"\n      additionalProperties: false\n    MidiResetMessages:\n      type: object\n      required:\n        - all_notes_off\n        - all_sound_off\n        - damper_pedal_off\n        - reset_all_controllers\n      properties:\n        all_notes_off:\n          type: boolean\n        all_sound_off:\n          type: boolean\n        damper_pedal_off:\n          type: boolean\n        on_notes_off:\n          description: \"Only supported at \\\"right\\\" position at the moment.\"\n          default: false\n          type: boolean\n        reset_all_controllers:\n          type: boolean\n      additionalProperties: false\n    MidiScriptKind:\n      description: Kind of a MIDI script\n      type: string\n      enum:\n        - eel\n        - lua\n    ModifierState:\n      type: object\n      required:\n        - \"on\"\n        - parameter\n      properties:\n        \"on\":\n          type: boolean\n        parameter:\n          $ref: \"#/components/schemas/ParamRef\"\n      additionalProperties: false\n    MonitoringMode:\n      type: string\n      enum:\n        - \"Off\"\n        - Normal\n        - TapeStyle\n    OscArgKind:\n      type: string\n      enum:\n        - Float\n        - Double\n        - Bool\n        - Nil\n        - \"Inf\"\n        - Int\n        - String\n        - Blob\n        - Time\n        - Long\n        - Char\n        - Color\n        - Midi\n        - Array\n    OscArgument:\n      type: object\n      properties:\n        index:\n          type: integer\n          format: uint32\n          minimum: 0.0\n        kind:\n          $ref: \"#/components/schemas/OscArgKind\"\n        value_range:\n          $ref: \"#/components/schemas/Interval_for_double\"\n      additionalProperties: false\n    OscDestination:\n      oneOf:\n        - type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - FeedbackOutput\n        - type: object\n          required:\n            - id\n            - kind\n          properties:\n            id:\n              type: string\n            kind:\n              type: string\n              enum:\n                - Device\n    OutOfRangeBehavior:\n      type: string\n      enum:\n        - MinOrMax\n        - Min\n        - Ignore\n    ParamRef:\n      anyOf:\n        - type: integer\n          format: uint32\n          minimum: 0.0\n        - type: string\n    Parameter:\n      type: object\n      required:\n        - index\n      properties:\n        id:\n          description: \"An optional ID that you can assign to this parameter in order to refer to it from somewhere else.\\n\\nThis ID should be unique within all parameters in the same compartment.\"\n          type: string\n        index:\n          type: integer\n          format: uint32\n          minimum: 0.0\n        name:\n          type: string\n        value_count:\n          type: integer\n          format: uint32\n          minimum: 1.0\n        value_labels:\n          type: array\n          items:\n            type: string\n      additionalProperties: false\n    PropColor:\n      type: object\n      required:\n        - prop\n      properties:\n        prop:\n          type: string\n      additionalProperties: false\n    RawMidiMessage:\n      anyOf:\n        - type: string\n        - type: array\n          items:\n            type: integer\n            format: uint8\n            minimum: 0.0\n    ReaperCommand:\n      anyOf:\n        - type: integer\n          format: uint32\n          minimum: 0.0\n        - type: string\n    RecordLength:\n      oneOf:\n        - description: Records open-ended until the user decides to stop.\n          type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - OpenEnd\n        - description: Records exactly as much material as defined by the given quantization.\n          type: object\n          required:\n            - denominator\n            - kind\n            - numerator\n          properties:\n            denominator:\n              type: integer\n              format: uint32\n              minimum: 0.0\n            kind:\n              type: string\n              enum:\n                - Quantized\n            numerator:\n              type: integer\n              format: uint32\n              minimum: 0.0\n    RecordOrigin:\n      oneOf:\n        - description: Records using the hardware input set for the track (MIDI or stereo).\n          type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - TrackInput\n        - description: Captures audio from the output of the track.\n          type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - TrackAudioOutput\n        - description: Records audio flowing into the FX input.\n          type: object\n          required:\n            - channel_count\n            - first_channel_index\n            - kind\n          properties:\n            channel_count:\n              type: integer\n              format: uint32\n              minimum: 0.0\n            first_channel_index:\n              type: integer\n              format: uint32\n              minimum: 0.0\n            kind:\n              type: string\n              enum:\n                - FxAudioInput\n    RelativeMode:\n      type: string\n      enum:\n        - Normal\n        - MakeAbsolute\n    RgbColor:\n      type: array\n      items:\n        type: integer\n        format: uint8\n        minimum: 0.0\n      maxItems: 3\n      minItems: 3\n    RouteDescriptor:\n      oneOf:\n        - type: object\n          required:\n            - address\n            - expression\n          properties:\n            address:\n              type: string\n              enum:\n                - Dynamic\n            expression:\n              type: string\n            kind:\n              $ref: \"#/components/schemas/TrackRouteKind\"\n            track:\n              $ref: \"#/components/schemas/TrackDescriptor\"\n        - type: object\n          required:\n            - address\n          properties:\n            address:\n              type: string\n              enum:\n                - ById\n            id:\n              type: string\n            kind:\n              $ref: \"#/components/schemas/TrackRouteKind\"\n            track:\n              $ref: \"#/components/schemas/TrackDescriptor\"\n        - type: object\n          required:\n            - address\n            - index\n          properties:\n            address:\n              type: string\n              enum:\n                - ByIndex\n            index:\n              type: integer\n              format: uint32\n              minimum: 0.0\n            kind:\n              $ref: \"#/components/schemas/TrackRouteKind\"\n            track:\n              $ref: \"#/components/schemas/TrackDescriptor\"\n        - type: object\n          required:\n            - address\n            - name\n          properties:\n            address:\n              type: string\n              enum:\n                - ByName\n            kind:\n              $ref: \"#/components/schemas/TrackRouteKind\"\n            name:\n              type: string\n            track:\n              $ref: \"#/components/schemas/TrackDescriptor\"\n    Row:\n      description: \"A row represents a complete row in a matrix.\\n\\nA scene is a very related concept and sometimes used interchangeably with row because there's a one-to-one relationship between a row and a scene.\\n\\nThe difference between row and scene is of conceptual nature: A scene represents a part of a song that's played exclusively whereas a row is just a row in the clip matrix. This distinction results in some practical differences:\\n\\n- A column can be configured to not follow scenes. The clips in that column are of course still structured in rows, but they are not part of the scenes anymore. - In practice, this means that whenever you launch the scene, the clips in that independent column are not launched. Or when you clear the scene, the slots in that column are not cleared. - Whenever you read \\\"Scene\\\", it will only affect the columns that are configured to follow scenes. Whenever you read \\\"Row\\\", it will affect the complete matrix row, no matter the column type.\"\n      type: object\n      properties:\n        name:\n          type: string\n        tempo:\n          description: An optional tempo associated with this row.\n          type: number\n          format: double\n        time_signature:\n          description: An optional time signature associated with this row.\n          allOf:\n            - $ref: \"#/components/schemas/TimeSignature\"\n      additionalProperties: false\n    Section:\n      type: object\n      required:\n        - start_pos\n      properties:\n        length:\n          description: \"Length of the material to be played, starting from `start_pos`.\\n\\n- `None` means until original source end. - May exceed the end of the source. - If this makes the section end be located before the original source end, a fade-out will be used to avoid clicks.\"\n          type: number\n          format: double\n        start_pos:\n          description: \"Position in the source from which to start.\\n\\nIf this is greater than zero, a fade-in will be used to avoid clicks.\"\n          type: number\n          format: double\n      additionalProperties: false\n    SendMidiFeedbackAction:\n      oneOf:\n        - type: object\n          required:\n            - kind\n            - message\n          properties:\n            kind:\n              type: string\n              enum:\n                - Raw\n            message:\n              $ref: \"#/components/schemas/RawMidiMessage\"\n    Session:\n      type: object\n      properties:\n        clip_matrix:\n          $ref: \"#/components/schemas/Matrix\"\n        main_compartment:\n          $ref: \"#/components/schemas/Compartment\"\n      additionalProperties: false\n    Slot:\n      type: object\n      required:\n        - row\n      properties:\n        clip:\n          description: Clip which currently lives in this slot.\n          allOf:\n            - $ref: \"#/components/schemas/Clip\"\n        row:\n          description: \"Slot index within the column (= row), starting at zero.\"\n          type: integer\n          format: uint\n          minimum: 0.0\n      additionalProperties: false\n    SoloBehavior:\n      type: string\n      enum:\n        - InPlace\n        - IgnoreRouting\n        - ReaperPreference\n    Source:\n      oneOf:\n        - type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - None\n        - type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - MidiDeviceChanges\n        - type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - RealearnInstanceStart\n        - type: object\n          required:\n            - duration\n            - kind\n          properties:\n            duration:\n              type: integer\n              format: uint64\n              minimum: 0.0\n            kind:\n              type: string\n              enum:\n                - Timer\n        - type: object\n          required:\n            - kind\n          properties:\n            channel:\n              type: integer\n              format: uint8\n              minimum: 0.0\n            feedback_behavior:\n              $ref: \"#/components/schemas/FeedbackBehavior\"\n            key_number:\n              type: integer\n              format: uint8\n              minimum: 0.0\n            kind:\n              type: string\n              enum:\n                - MidiNoteVelocity\n        - type: object\n          required:\n            - kind\n          properties:\n            channel:\n              type: integer\n              format: uint8\n              minimum: 0.0\n            feedback_behavior:\n              $ref: \"#/components/schemas/FeedbackBehavior\"\n            kind:\n              type: string\n              enum:\n                - MidiNoteKeyNumber\n        - type: object\n          required:\n            - kind\n          properties:\n            channel:\n              type: integer\n              format: uint8\n              minimum: 0.0\n            feedback_behavior:\n              $ref: \"#/components/schemas/FeedbackBehavior\"\n            key_number:\n              type: integer\n              format: uint8\n              minimum: 0.0\n            kind:\n              type: string\n              enum:\n                - MidiPolyphonicKeyPressureAmount\n        - type: object\n          required:\n            - kind\n          properties:\n            channel:\n              type: integer\n              format: uint8\n              minimum: 0.0\n            character:\n              $ref: \"#/components/schemas/SourceCharacter\"\n            controller_number:\n              type: integer\n              format: uint8\n              minimum: 0.0\n            feedback_behavior:\n              $ref: \"#/components/schemas/FeedbackBehavior\"\n            fourteen_bit:\n              type: boolean\n            kind:\n              type: string\n              enum:\n                - MidiControlChangeValue\n        - type: object\n          required:\n            - kind\n          properties:\n            channel:\n              type: integer\n              format: uint8\n              minimum: 0.0\n            feedback_behavior:\n              $ref: \"#/components/schemas/FeedbackBehavior\"\n            kind:\n              type: string\n              enum:\n                - MidiProgramChangeNumber\n        - type: object\n          required:\n            - kind\n          properties:\n            channel:\n              type: integer\n              format: uint8\n              minimum: 0.0\n            feedback_behavior:\n              $ref: \"#/components/schemas/FeedbackBehavior\"\n            kind:\n              type: string\n              enum:\n                - MidiChannelPressureAmount\n        - type: object\n          required:\n            - kind\n          properties:\n            channel:\n              type: integer\n              format: uint8\n              minimum: 0.0\n            feedback_behavior:\n              $ref: \"#/components/schemas/FeedbackBehavior\"\n            kind:\n              type: string\n              enum:\n                - MidiPitchBendChangeValue\n        - type: object\n          required:\n            - kind\n          properties:\n            channel:\n              type: integer\n              format: uint8\n              minimum: 0.0\n            character:\n              $ref: \"#/components/schemas/SourceCharacter\"\n            feedback_behavior:\n              $ref: \"#/components/schemas/FeedbackBehavior\"\n            fourteen_bit:\n              type: boolean\n            kind:\n              type: string\n              enum:\n                - MidiParameterNumberValue\n            number:\n              type: integer\n              format: uint16\n              minimum: 0.0\n            registered:\n              type: boolean\n        - type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - MidiClockTempo\n        - type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - MidiClockTransport\n            message:\n              $ref: \"#/components/schemas/MidiClockTransportMessage\"\n        - type: object\n          required:\n            - kind\n          properties:\n            character:\n              $ref: \"#/components/schemas/SourceCharacter\"\n            feedback_behavior:\n              $ref: \"#/components/schemas/FeedbackBehavior\"\n            kind:\n              type: string\n              enum:\n                - MidiRaw\n            pattern:\n              type: string\n        - type: object\n          required:\n            - kind\n          properties:\n            kind:\n              $ref: \"#/components/schemas/MidiScriptKind\"\n            script:\n              type: string\n        - type: object\n          required:\n            - kind\n          properties:\n            channel:\n              type: integer\n              format: uint8\n              minimum: 0.0\n            kind:\n              type: string\n              enum:\n                - MackieLcd\n            line:\n              type: integer\n              format: uint8\n              minimum: 0.0\n        - type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - MackieSevenSegmentDisplay\n            scope:\n              $ref: \"#/components/schemas/MackieSevenSegmentDisplayScope\"\n        - type: object\n          required:\n            - kind\n          properties:\n            cell_index:\n              type: integer\n              format: uint8\n              minimum: 0.0\n            item_index:\n              type: integer\n              format: uint8\n              minimum: 0.0\n            kind:\n              type: string\n              enum:\n                - SiniConE24Display\n        - type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - LaunchpadProScrollingTextDisplay\n        - type: object\n          required:\n            - kind\n          properties:\n            address:\n              type: string\n            argument:\n              $ref: \"#/components/schemas/OscArgument\"\n            feedback_arguments:\n              type: array\n              items:\n                type: string\n            feedback_behavior:\n              $ref: \"#/components/schemas/FeedbackBehavior\"\n            kind:\n              type: string\n              enum:\n                - Osc\n            relative:\n              type: boolean\n        - type: object\n          required:\n            - kind\n          properties:\n            keystroke:\n              $ref: \"#/components/schemas/Keystroke\"\n            kind:\n              type: string\n              enum:\n                - Key\n        - type: object\n          required:\n            - id\n            - kind\n          properties:\n            character:\n              $ref: \"#/components/schemas/VirtualControlElementCharacter\"\n            id:\n              $ref: \"#/components/schemas/VirtualControlElementId\"\n            kind:\n              type: string\n              enum:\n                - Virtual\n    SourceCharacter:\n      type: string\n      enum:\n        - Range\n        - Button\n        - Relative1\n        - Relative2\n        - Relative3\n        - StatefulButton\n    SourceOrigin:\n      type: string\n      enum:\n        - Normal\n        - Frozen\n    TakeoverMode:\n      type: string\n      enum:\n        - PickUp\n        - LongTimeNoSee\n        - Parallel\n        - CatchUp\n    Target:\n      oneOf:\n        - type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - LastTouched\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - AutomationModeOverride\n            override:\n              $ref: \"#/components/schemas/AutomationModeOverride\"\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n          properties:\n            command:\n              $ref: \"#/components/schemas/ReaperCommand\"\n            invocation:\n              $ref: \"#/components/schemas/ActionInvocationKind\"\n            kind:\n              type: string\n              enum:\n                - ReaperAction\n            track:\n              $ref: \"#/components/schemas/TrackDescriptor\"\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - action\n            - kind\n          properties:\n            action:\n              $ref: \"#/components/schemas/TransportAction\"\n            kind:\n              type: string\n              enum:\n                - TransportAction\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n            - parameter\n          properties:\n            kind:\n              type: string\n              enum:\n                - AnyOn\n            parameter:\n              $ref: \"#/components/schemas/AnyOnParameter\"\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - CycleThroughTracks\n            scroll_arrange_view:\n              type: boolean\n            scroll_mixer:\n              type: boolean\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n          properties:\n            feedback_resolution:\n              $ref: \"#/components/schemas/FeedbackResolution\"\n            kind:\n              type: string\n              enum:\n                - Seek\n            move_view:\n              type: boolean\n            seek_play:\n              type: boolean\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n            use_loop_points:\n              type: boolean\n            use_project:\n              type: boolean\n            use_regions:\n              type: boolean\n            use_time_selection:\n              type: boolean\n        - type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - PlayRate\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - Tempo\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - bookmark\n            - kind\n          properties:\n            bookmark:\n              $ref: \"#/components/schemas/BookmarkDescriptor\"\n            kind:\n              type: string\n              enum:\n                - GoToBookmark\n            set_loop_points:\n              type: boolean\n            set_time_selection:\n              type: boolean\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n          properties:\n            exclusivity:\n              $ref: \"#/components/schemas/TrackExclusivity\"\n            kind:\n              type: string\n              enum:\n                - TrackArmState\n            track:\n              $ref: \"#/components/schemas/TrackDescriptor\"\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n          properties:\n            exclusivity:\n              $ref: \"#/components/schemas/TrackExclusivity\"\n            kind:\n              type: string\n              enum:\n                - AllTrackFxOnOffState\n            poll_for_feedback:\n              type: boolean\n            track:\n              $ref: \"#/components/schemas/TrackDescriptor\"\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n          properties:\n            exclusivity:\n              $ref: \"#/components/schemas/TrackExclusivity\"\n            kind:\n              type: string\n              enum:\n                - TrackMuteState\n            track:\n              $ref: \"#/components/schemas/TrackDescriptor\"\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - TrackPeak\n            track:\n              $ref: \"#/components/schemas/TrackDescriptor\"\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n          properties:\n            exclusivity:\n              $ref: \"#/components/schemas/TrackExclusivity\"\n            kind:\n              type: string\n              enum:\n                - TrackPhase\n            poll_for_feedback:\n              type: boolean\n            track:\n              $ref: \"#/components/schemas/TrackDescriptor\"\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n          properties:\n            exclusivity:\n              $ref: \"#/components/schemas/TrackExclusivity\"\n            kind:\n              type: string\n              enum:\n                - TrackSelectionState\n            scroll_arrange_view:\n              type: boolean\n            scroll_mixer:\n              type: boolean\n            track:\n              $ref: \"#/components/schemas/TrackDescriptor\"\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n            - mode\n          properties:\n            exclusivity:\n              $ref: \"#/components/schemas/TrackExclusivity\"\n            kind:\n              type: string\n              enum:\n                - TrackAutomationMode\n            mode:\n              $ref: \"#/components/schemas/AutomationMode\"\n            track:\n              $ref: \"#/components/schemas/TrackDescriptor\"\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n            - mode\n          properties:\n            exclusivity:\n              $ref: \"#/components/schemas/TrackExclusivity\"\n            kind:\n              type: string\n              enum:\n                - TrackMonitoringMode\n            mode:\n              $ref: \"#/components/schemas/MonitoringMode\"\n            track:\n              $ref: \"#/components/schemas/TrackDescriptor\"\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n            - touched_parameter\n          properties:\n            exclusivity:\n              $ref: \"#/components/schemas/TrackExclusivity\"\n            kind:\n              type: string\n              enum:\n                - TrackAutomationTouchState\n            touched_parameter:\n              $ref: \"#/components/schemas/TouchedTrackParameter\"\n            track:\n              $ref: \"#/components/schemas/TrackDescriptor\"\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - TrackPan\n            track:\n              $ref: \"#/components/schemas/TrackDescriptor\"\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - TrackWidth\n            track:\n              $ref: \"#/components/schemas/TrackDescriptor\"\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - TrackVolume\n            track:\n              $ref: \"#/components/schemas/TrackDescriptor\"\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - Track\n            track:\n              $ref: \"#/components/schemas/TrackDescriptor\"\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - area\n            - kind\n          properties:\n            area:\n              $ref: \"#/components/schemas/TrackArea\"\n            exclusivity:\n              $ref: \"#/components/schemas/TrackExclusivity\"\n            kind:\n              type: string\n              enum:\n                - TrackVisibility\n            poll_for_feedback:\n              type: boolean\n            track:\n              $ref: \"#/components/schemas/TrackDescriptor\"\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n          properties:\n            behavior:\n              $ref: \"#/components/schemas/SoloBehavior\"\n            exclusivity:\n              $ref: \"#/components/schemas/TrackExclusivity\"\n            kind:\n              type: string\n              enum:\n                - TrackSoloState\n            track:\n              $ref: \"#/components/schemas/TrackDescriptor\"\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - chain\n            - kind\n          properties:\n            chain:\n              $ref: \"#/components/schemas/FxChainDescriptor\"\n            display_kind:\n              $ref: \"#/components/schemas/FxDisplayKind\"\n            kind:\n              type: string\n              enum:\n                - CycleThroughFx\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n          properties:\n            fx:\n              $ref: \"#/components/schemas/FxDescriptor\"\n            kind:\n              type: string\n              enum:\n                - FxOnOffState\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n          properties:\n            fx:\n              $ref: \"#/components/schemas/FxDescriptor\"\n            kind:\n              type: string\n              enum:\n                - FxOnlineOfflineState\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n          properties:\n            fx:\n              $ref: \"#/components/schemas/FxDescriptor\"\n            kind:\n              type: string\n              enum:\n                - LoadFxSnapshot\n            snapshot:\n              $ref: \"#/components/schemas/FxSnapshot\"\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n          properties:\n            fx:\n              $ref: \"#/components/schemas/FxDescriptor\"\n            kind:\n              type: string\n              enum:\n                - CycleThroughFxPresets\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n          properties:\n            display_kind:\n              $ref: \"#/components/schemas/FxDisplayKind\"\n            fx:\n              $ref: \"#/components/schemas/FxDescriptor\"\n            kind:\n              type: string\n              enum:\n                - FxVisibility\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n            - parameter\n          properties:\n            kind:\n              type: string\n              enum:\n                - FxParameterValue\n            parameter:\n              $ref: \"#/components/schemas/FxParameterDescriptor\"\n            poll_for_feedback:\n              type: boolean\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n            - parameter\n          properties:\n            kind:\n              type: string\n              enum:\n                - FxParameterAutomationTouchState\n            parameter:\n              $ref: \"#/components/schemas/FxParameterDescriptor\"\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n            - mode\n            - route\n          properties:\n            kind:\n              type: string\n              enum:\n                - RouteAutomationMode\n            mode:\n              $ref: \"#/components/schemas/AutomationMode\"\n            poll_for_feedback:\n              type: boolean\n            route:\n              $ref: \"#/components/schemas/RouteDescriptor\"\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n            - route\n          properties:\n            kind:\n              type: string\n              enum:\n                - RouteMonoState\n            poll_for_feedback:\n              type: boolean\n            route:\n              $ref: \"#/components/schemas/RouteDescriptor\"\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n            - route\n          properties:\n            kind:\n              type: string\n              enum:\n                - RouteMuteState\n            poll_for_feedback:\n              type: boolean\n            route:\n              $ref: \"#/components/schemas/RouteDescriptor\"\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n            - route\n          properties:\n            kind:\n              type: string\n              enum:\n                - RoutePhase\n            poll_for_feedback:\n              type: boolean\n            route:\n              $ref: \"#/components/schemas/RouteDescriptor\"\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n            - route\n          properties:\n            kind:\n              type: string\n              enum:\n                - RoutePan\n            route:\n              $ref: \"#/components/schemas/RouteDescriptor\"\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n            - route\n          properties:\n            kind:\n              type: string\n              enum:\n                - RouteVolume\n            route:\n              $ref: \"#/components/schemas/RouteDescriptor\"\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n            - route\n            - touched_parameter\n          properties:\n            kind:\n              type: string\n              enum:\n                - RouteTouchState\n            route:\n              $ref: \"#/components/schemas/RouteDescriptor\"\n            touched_parameter:\n              $ref: \"#/components/schemas/TouchedRouteParameter\"\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - action\n            - kind\n            - slot\n          properties:\n            action:\n              $ref: \"#/components/schemas/ClipTransportAction\"\n            kind:\n              type: string\n              enum:\n                - ClipTransportAction\n            play_start_timing:\n              $ref: \"#/components/schemas/ClipPlayStartTiming\"\n            play_stop_timing:\n              $ref: \"#/components/schemas/ClipPlayStopTiming\"\n            record_only_if_track_armed:\n              type: boolean\n            slot:\n              $ref: \"#/components/schemas/ClipSlotDescriptor\"\n            stop_column_if_slot_empty:\n              type: boolean\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - action\n            - column\n            - kind\n          properties:\n            action:\n              $ref: \"#/components/schemas/ClipColumnAction\"\n            column:\n              $ref: \"#/components/schemas/ClipColumnDescriptor\"\n            kind:\n              type: string\n              enum:\n                - ClipColumnAction\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - action\n            - kind\n            - row\n          properties:\n            action:\n              $ref: \"#/components/schemas/ClipRowAction\"\n            kind:\n              type: string\n              enum:\n                - ClipRowAction\n            row:\n              $ref: \"#/components/schemas/ClipRowDescriptor\"\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - action\n            - kind\n          properties:\n            action:\n              $ref: \"#/components/schemas/ClipMatrixAction\"\n            kind:\n              type: string\n              enum:\n                - ClipMatrixAction\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n            - slot\n          properties:\n            feedback_resolution:\n              $ref: \"#/components/schemas/FeedbackResolution\"\n            kind:\n              type: string\n              enum:\n                - ClipSeek\n            slot:\n              $ref: \"#/components/schemas/ClipSlotDescriptor\"\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n            - slot\n          properties:\n            kind:\n              type: string\n              enum:\n                - ClipVolume\n            slot:\n              $ref: \"#/components/schemas/ClipSlotDescriptor\"\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - action\n            - kind\n            - slot\n          properties:\n            action:\n              $ref: \"#/components/schemas/ClipManagementAction\"\n            kind:\n              type: string\n              enum:\n                - ClipManagement\n            slot:\n              $ref: \"#/components/schemas/ClipSlotDescriptor\"\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n          properties:\n            destination:\n              $ref: \"#/components/schemas/MidiDestination\"\n            kind:\n              type: string\n              enum:\n                - SendMidi\n            message:\n              type: string\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n          properties:\n            address:\n              type: string\n            argument:\n              $ref: \"#/components/schemas/OscArgument\"\n            destination:\n              $ref: \"#/components/schemas/OscDestination\"\n            kind:\n              type: string\n              enum:\n                - SendOsc\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n          properties:\n            exclusivity:\n              $ref: \"#/components/schemas/InstanceExclusivity\"\n            kind:\n              type: string\n              enum:\n                - EnableInstances\n            tags:\n              type: array\n              items:\n                type: string\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n          properties:\n            exclusivity:\n              $ref: \"#/components/schemas/MappingExclusivity\"\n            kind:\n              type: string\n              enum:\n                - EnableMappings\n            tags:\n              type: array\n              items:\n                type: string\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n          properties:\n            active_mappings_only:\n              type: boolean\n            kind:\n              type: string\n              enum:\n                - LoadMappingSnapshots\n            tags:\n              type: array\n              items:\n                type: string\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - kind\n          properties:\n            exclusivity:\n              $ref: \"#/components/schemas/GroupMappingExclusivity\"\n            group:\n              type: string\n            kind:\n              type: string\n              enum:\n                - CycleThroughGroupMappings\n            unit:\n              $ref: \"#/components/schemas/TargetUnit\"\n        - type: object\n          required:\n            - id\n            - kind\n          properties:\n            character:\n              $ref: \"#/components/schemas/VirtualControlElementCharacter\"\n            id:\n              $ref: \"#/components/schemas/VirtualControlElementId\"\n            kind:\n              type: string\n              enum:\n                - Virtual\n    TargetUnit:\n      type: string\n      enum:\n        - Native\n        - Percent\n    TempoRange:\n      type: object\n      required:\n        - max\n        - min\n      properties:\n        max:\n          type: number\n          format: double\n        min:\n          type: number\n          format: double\n      additionalProperties: false\n    TimeSignature:\n      type: object\n      required:\n        - denominator\n        - numerator\n      properties:\n        denominator:\n          type: integer\n          format: uint32\n          minimum: 0.0\n        numerator:\n          type: integer\n          format: uint32\n          minimum: 0.0\n      additionalProperties: false\n    TouchedRouteParameter:\n      type: string\n      enum:\n        - Volume\n        - Pan\n    TouchedTrackParameter:\n      type: string\n      enum:\n        - Volume\n        - Pan\n        - Width\n    TrackArea:\n      type: string\n      enum:\n        - Tcp\n        - Mcp\n    TrackDescriptor:\n      oneOf:\n        - type: object\n          required:\n            - address\n          properties:\n            address:\n              type: string\n              enum:\n                - This\n            track_must_be_selected:\n              type: boolean\n        - type: object\n          required:\n            - address\n          properties:\n            address:\n              type: string\n              enum:\n                - Master\n            track_must_be_selected:\n              type: boolean\n        - type: object\n          required:\n            - address\n          properties:\n            address:\n              type: string\n              enum:\n                - Selected\n            allow_multiple:\n              type: boolean\n        - type: object\n          required:\n            - address\n            - expression\n          properties:\n            address:\n              type: string\n              enum:\n                - Dynamic\n            expression:\n              type: string\n            track_must_be_selected:\n              type: boolean\n        - type: object\n          required:\n            - address\n          properties:\n            address:\n              type: string\n              enum:\n                - ById\n            id:\n              type: string\n            track_must_be_selected:\n              type: boolean\n        - type: object\n          required:\n            - address\n            - index\n          properties:\n            address:\n              type: string\n              enum:\n                - ByIndex\n            index:\n              type: integer\n              format: uint32\n              minimum: 0.0\n            track_must_be_selected:\n              type: boolean\n        - type: object\n          required:\n            - address\n            - name\n          properties:\n            address:\n              type: string\n              enum:\n                - ByName\n            allow_multiple:\n              type: boolean\n            name:\n              type: string\n            track_must_be_selected:\n              type: boolean\n        - type: object\n          required:\n            - address\n            - column\n            - context\n          properties:\n            address:\n              type: string\n              enum:\n                - FromClipColumn\n            column:\n              $ref: \"#/components/schemas/ClipColumnDescriptor\"\n            context:\n              $ref: \"#/components/schemas/ClipColumnTrackContext\"\n            track_must_be_selected:\n              type: boolean\n    TrackExclusivity:\n      type: string\n      enum:\n        - WithinProject\n        - WithinFolder\n        - WithinProjectOnOnly\n        - WithinFolderOnOnly\n    TrackFxChain:\n      type: string\n      enum:\n        - Normal\n        - Input\n    TrackRouteKind:\n      type: string\n      enum:\n        - Send\n        - Receive\n        - HardwareOutput\n    TransportAction:\n      type: string\n      enum:\n        - PlayStop\n        - PlayPause\n        - Stop\n        - Pause\n        - Record\n        - Repeat\n    VirtualColor:\n      anyOf:\n        - $ref: \"#/components/schemas/RgbColor\"\n        - $ref: \"#/components/schemas/PropColor\"\n    VirtualControlElementCharacter:\n      type: string\n      enum:\n        - Multi\n        - Button\n    VirtualControlElementId:\n      anyOf:\n        - type: integer\n          format: uint32\n          minimum: 0.0\n        - type: string\n    VirtualResampleMode:\n      oneOf:\n        - description: Uses the resample mode set as default for this REAPER project.\n          type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - ProjectDefault\n        - description: Uses a specific resample mode.\n          type: object\n          required:\n            - kind\n            - mode\n          properties:\n            kind:\n              type: string\n              enum:\n                - ReaperMode\n            mode:\n              type: integer\n              format: uint32\n              minimum: 0.0\n    VirtualTimeStretchMode:\n      oneOf:\n        - description: Uses the pitch shift mode set as default for this REAPER project.\n          type: object\n          required:\n            - kind\n          properties:\n            kind:\n              type: string\n              enum:\n                - ProjectDefault\n        - description: Uses a specific REAPER pitch shift mode.\n          type: object\n          required:\n            - kind\n            - mode\n            - sub_mode\n          properties:\n            kind:\n              type: string\n              enum:\n                - ReaperMode\n            mode:\n              type: integer\n              format: uint32\n              minimum: 0.0\n            sub_mode:\n              type: integer\n              format: uint32\n              minimum: 0.0\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"MatrixClipRecordMidiSettings\": parse schema: property \"clip_settings\": parse schema: infer default type: invalid value \"{\\\"interaction_reset_settings\\\":{\\\"left\\\":{\\\"all_notes_off\\\":false,\\\"all_sound_off\\\":false,\\\"damper_pedal_off\\\":false,\\\"on_notes_off\\\":false,\\\"reset_all_controllers\\\":false},\\\"right\\\":{\\\"all_notes_off\\\":false,\\\"all_sound_off\\\":false,\\\"damper_pedal_off\\\":false,\\\"on_notes_off\\\":false,\\\"reset_all_controllers\\\":false}},\\\"loop_reset_settings\\\":{\\\"left\\\":{\\\"all_notes_off\\\":false,\\\"all_sound_off\\\":false,\\\"damper_pedal_off\\\":false,\\\"on_notes_off\\\":false,\\\"reset_all_controllers\\\":false},\\\"right\\\":{\\\"all_notes_off\\\":false,\\\"all_sound_off\\\":false,\\\"damper_pedal_off\\\":false,\\\"on_notes_off\\\":false,\\\"reset_all_controllers\\\":false}},\\\"section_reset_settings\\\":{\\\"left\\\":{\\\"all_notes_off\\\":false,\\\"all_sound_off\\\":false,\\\"damper_pedal_off\\\":false,\\\"on_notes_off\\\":false,\\\"reset_all_controllers\\\":false},\\\"right\\\":{\\\"all_notes_off\\\":false,\\\"all_sound_off\\\":false,\\\"damper_pedal_off\\\":false,\\\"on_notes_off\\\":false,\\\"reset_all_controllers\\\":false}},\\\"source_reset_settings\\\":{\\\"left\\\":{\\\"all_notes_off\\\":false,\\\"all_sound_off\\\":false,\\\"damper_pedal_off\\\":false,\\\"on_notes_off\\\":false,\\\"reset_all_controllers\\\":false},\\\"right\\\":{\\\"all_notes_off\\\":false,\\\"all_sound_off\\\":false,\\\"damper_pedal_off\\\":false,\\\"on_notes_off\\\":false,\\\"reset_all_controllers\\\":false}}}\""
}