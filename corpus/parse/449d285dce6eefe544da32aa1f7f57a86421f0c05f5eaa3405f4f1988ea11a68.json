{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/nasa-jpl/launchbox"
		},
		"file": {
			"name": "api-spec.yaml",
			"size": 0,
			"path": "docs/pages/reference/api-spec.yaml",
			"byteSize": 12228,
			"content": "openapi: 3.0.1\ninfo:\n  title: Launchbox - Management API\n  version: '0.8'\ntags:\n  - name: env\n  - name: auth\n  - name: sso\n  - name: search\n  - name: stats\n  - name: sites\n  - name: hostnames\n  - name: notes\n  - name: users\npaths:\n  /api/:\n    get:\n      tags:\n        - env\n      summary: Get environment\n      operationId: getAPI\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Env'\n          description: 'Success'\n  /api/auth/state:\n    get:\n      tags:\n        - auth\n      summary: Authentication state\n      operationId: authState\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                properties:\n                  user:\n                    $ref: '#/components/schemas/Auth'\n          description: 'Success'\n  /api/sso/acs:\n    post:\n      tags:\n        - sso\n      summary: SAML ACS\n      operationId: ssoACS\n      responses:\n        307:\n          description: Redirect\n          headers:\n            Location:\n              description: SAML Callback\n              schema:\n                type: URL\n  /api/sso/metadata:\n    get:\n      tags:\n        - sso\n      summary: SAML Metadata\n      operationId: ssoMetadata\n      responses:\n        200:\n          content:\n            text/xml: {}\n          description: 'Success'\n  /api/search/users/{query}:\n    get:\n      tags:\n        - search\n      summary: Search users via LDAP\n      operationId: searchUsers\n      parameters:\n        - name: query\n          in: path\n          description: First name, last name, username or badge number\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                properties:\n                  users:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/LDAPUser'\n          description: 'Success'\n        401:\n          description: 'Unauthorized'\n      security:\n        - api_key: []\n  /api/stats/latest:\n    get:\n      tags:\n        - stats\n      summary: Latest statistics\n      operationId: latestStats\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  latest:\n                    type: object\n          description: 'Success'\n        401:\n          description: 'Unauthorized'\n      security:\n        - api_key: []\n  /api/sites:\n    get:\n      tags:\n        - sites\n      summary: List sites\n      operationId: listSites\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                properties:\n                  sites:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Site'\n          description: 'Success'\n        401:\n          description: 'Unauthorized'\n      security:\n        - api_key: []\n  /api/sites/{alias}:\n    get:\n      tags:\n        - sites\n      summary: Get site\n      operationId: getSite\n      parameters:\n        - name: alias\n          in: path\n          description: Site identifier\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                properties:\n                  site:\n                    $ref: '#/components/schemas/SiteExt'\n          description: 'Success'\n        401:\n          description: 'Unauthorized'\n      security:\n        - api_key: []\n  /api/sites/{alias}/add:\n    post:\n      tags:\n        - sites\n      summary: Add site\n      operationId: addSite\n      parameters:\n        - name: alias\n          in: path\n          description: Site identifier\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: 'Success'\n        401:\n          description: 'Unauthorized'\n      security:\n        - api_key: []\n  /api/sites/{alias}/remove:\n    post:\n      tags:\n        - sites\n      summary: Remove site\n      operationId: removeSite\n      parameters:\n        - name: alias\n          in: path\n          description: Site identifier\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: 'Success'\n        401:\n          description: 'Unauthorized'\n      security:\n        - api_key: []\n  /api/sites/{alias}/update:\n    post:\n      tags:\n        - sites\n      summary: Update site attribute\n      operationId: updateSite\n      parameters:\n        - name: alias\n          in: path\n          description: Site identifier\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                attr:\n                  type: string\n                value:\n                  type: string\n      responses:\n        200:\n          description: 'Success'\n        401:\n          description: 'Unauthorized'\n      security:\n        - api_key: []\n  /api/sites/{alias}/hostnames:\n    get:\n      tags:\n        - hostnames\n      summary: List hostnames for site\n      operationId: getSiteHostnames\n      parameters:\n        - name: alias\n          in: path\n          description: Site identifier\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                properties:\n                  hostnames:                  \n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Hostname'\n          description: 'Success'\n        401:\n          description: 'Unauthorized'\n      security:\n        - api_key: []\n  /api/sites/{alias}/hostnames/add:\n    post:\n      tags:\n        - hostnames\n      summary: Add new hostname to site\n      operationId: addHostname\n      parameters:\n        - name: alias\n          in: path\n          description: Site identifier\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                hostname:\n                  type: string\n      responses:\n        200:\n          description: 'Success'\n        401:\n          description: 'Unauthorized'\n      security:\n        - api_key: []\n  /api/sites/{alias}/hostnames/primary:\n    post:\n      tags:\n        - hostnames\n      summary: Set primary hostname for site\n      operationId: primaryHostname\n      parameters:\n        - name: alias\n          in: path\n          description: Site identifier\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                hostname:\n                  type: string\n      responses:\n        200:\n          description: 'Success'\n        401:\n          description: 'Unauthorized'\n      security:\n        - api_key: []\n  /api/sites/{alias}/hostnames/remove:\n    post:\n      tags:\n        - hostnames\n      summary: Remove existing hostname from site\n      operationId: removeHostname\n      parameters:\n        - name: alias\n          in: path\n          description: Site identifier\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                hostname:\n                  type: string\n      responses:\n        200:\n          description: 'Success'\n        401:\n          description: 'Unauthorized'\n      security:\n        - api_key: []\n  /api/sites/{alias}/notes/add:\n    post:\n      tags:\n        - notes\n      summary: Add note to site\n      operationId: addNote\n      parameters:\n        - name: alias\n          in: path\n          description: Site identifier\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                text:\n                  type: string\n      responses:\n        200:\n          description: 'Success'\n        401:\n          description: 'Unauthorized'\n      security:\n        - api_key: []\n  /api/sites/{alias}/users:\n    post:\n      tags:\n        - users\n      summary: List users for site\n      operationId: listUsers\n      parameters:\n        - name: alias\n          in: path\n          description: Site identifier\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                properties:\n                  users:\n                    type: array\n                    $ref: '#/components/schemas/User'\n          description: 'Success'\n        401:\n          description: 'Unauthorized'\n      security:\n        - api_key: []\ncomponents:\n  schemas:\n    Auth:\n      type: object\n      properties:\n        user_id:\n          type: string\n          description: User ID\n        provider:\n          type: string\n          description: Auth Provider\n    Env:\n      type: object\n      properties:\n        api:\n          type: string\n          default: 'lb'\n        dns:\n          type: string\n          description: DNS Target\n        env:\n          type: string\n          description: Environment Type\n        root:\n          type: string\n          description: Root Hostname\n        version:\n          type: integer\n          format: int32\n          description: API Version\n    Site:\n      type: object\n      properties:\n        alias:\n          type: string\n        hostnames:\n          type: array\n          items:\n            $ref: '#/components/schemas/Hostname'\n    SiteExt:\n      allOf:\n        - $ref: '#/components/schemas/Site'\n      type: object\n      properties:\n        notes:\n          type: array\n          items:\n            $ref: '#/components/schemas/Note'\n    Hostname:\n      type: object\n      properties:\n        name:\n          type: string\n          format: hostname\n        primary:\n          type: boolean\n        ssl_cert:\n          type: boolean\n        ssl_expires:\n          type: number\n          description: Unix Timestamp\n        ssl_req_id:\n          type: string\n    LDAPUser:\n      type: object\n      properties:\n        username:\n          type: string\n        first_name:\n          type: string\n        middle_initial:\n          type: string\n        last_name:\n          type: string\n        display_name:\n          type: string\n        badge:\n          type: string\n        email:\n          type: string\n          format: email\n        phone:\n          type: string\n        dept:\n          type: string\n        title:\n          type: string\n    Note:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        username:\n          type: string\n        first_name:\n          type: string\n        last_name:\n          type: string\n        text:\n          type: string\n        timestamp:\n          type: number\n          description: Unix Timestamp\n    User:\n      type: object\n      properties:\n        $username:\n          type: object\n          properties:\n            first_name:\n              type: string\n            middle_initial:\n              type: string\n            last_name:\n              type: string\n            display_name:\n              type: string\n            is_active:\n              type: boolean\n            is_editor:\n              type: boolean\n            is_moderator:\n              type: boolean\n            is_superuser:\n              type: boolean\n  securitySchemes:\n    api_key:\n      type: apiKey\n      name: launchbox\n      in: cookie\n",
			"canonicalURL": "/github.com/nasa-jpl/launchbox@4a759d87d91be062fa1604ddee5b6be11d50f91e/-/blob/docs/pages/reference/api-spec.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/nasa-jpl/launchbox/blob/4a759d87d91be062fa1604ddee5b6be11d50f91e/docs/pages/reference/api-spec.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/api/sso/acs\": post: operation \"ssoACS\": responses: 307: headers: header \"Location\": parse schema: at docs/pages/reference/api-spec.yaml:57:23: type: unexpected schema type: \"URL\""
}