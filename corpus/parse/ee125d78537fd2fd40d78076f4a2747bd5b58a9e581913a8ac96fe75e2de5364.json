{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/johnanisere/hiring-platform"
		},
		"file": {
			"name": "doc.json",
			"size": 0,
			"path": "doc.json",
			"byteSize": 10467,
			"content": "{\n  \"openapi\": \"3.0.1\",\n  \"info\": {\n    \"title\": \"Decagon Hiring App\",\n    \"description\": \"This is all documentation of the APIs for the decagon hiring app.\",\n    \"version\": \"0.1.9\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://localhost:3005/api/v1\",\n      \"description\": \"server for localhost can be any port for testing (development).\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"user\",\n      \"description\": \"Operations about users\"\n    },\n    {\n      \"name\": \"interview\",\n      \"description\": \"Schedules of interviews\"\n    }\n  ],\n  \"paths\": {\n    \"/users/decadevs\": {\n      \"get\": {\n        \"tags\": [\"user\"],\n        \"summary\": \"Lists all decadevs on the platform\",\n        \"description\": \"Returns a JSON array list of all decadevs\",\n        \"operationId\": \"getAllDecadevs\",\n        \"consumes\": [\"application/json\"],\n        \"produces\": [\"application/json\"],\n        \"responses\": {\n          \"200\": {\n            \"summary\": \"Operation successful\",\n            \"description\": \"A JSON array list of all users(decadevs)\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/definitions/User\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"No Decadevs found\"\n          }\n        }\n      }\n    },\n    \"/users/signup\": {\n      \"post\": {\n        \"tags\": [\"user\"],\n        \"summary\": \"A user can sign up\",\n        \"description\": \"This enables a user decadev to sign up.\",\n        \"operationId\": \"signUp\",\n        \"consumes\": [\"application/json\"],\n        \"produces\": [\"application/json\"],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/definitions/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/definitions/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/definitions/User\"\n              }\n            },\n            \"text/plain\": {\n              \"schema\": {\n                \"$ref\": \"#/definitions/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Sign Up successful\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/definitions/User\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          }\n        }\n      }\n    },\n    \"/users/update-password/\": {\n      \"put\": {\n        \"tags\": [\"user\"],\n        \"summary\": \"Updates password\",\n        \"description\": \"Allows user to update password via email\",\n        \"operationId\": \"updatePassword\",\n        \"produces\": [\"application/json\"],\n        \"requestBody\": {\n          \"description\": \"The object of the user to be updated.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/definitions/Email\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/definitions/Email\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/definitions/Email\"\n              }\n            },\n            \"text/plain\": {\n              \"schema\": {\n                \"$ref\": \"#/definitions/Email\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"summary\": \"Returns a decadev object that has been updated.\",\n            \"description\": \"Operation successful\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/definitions/User\"\n                  }\n                }\n              }\n            }\n          },\n          \"201\": {\n            \"description\": \"Password updated.\"\n          },\n          \"400\": {\n            \"description\": \"The specified user email is invalid.\"\n          },\n          \"404\": {\n            \"description\": \"A user with the specified email was not found.\"\n          },\n          \"405\": {\n            \"description\": \"Validation exception.\"\n          }\n        }\n      }\n    },\n    \"/users/hiring-partner/invite\": {\n      \"post\": {\n        \"tags\": [\"user\"],\n        \"summary\": \"A hiring partner invite.\",\n        \"description\": \"The admin creates an invite for hiring partner.\",\n        \"operationId\": \"inviteHiringPartner\",\n        \"consumes\": [\"application/json\"],\n        \"produces\": [\"application/json\"],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/definitions/User\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/definitions/User\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/definitions/User\"\n              }\n            },\n            \"text/plain\": {\n              \"schema\": {\n                \"$ref\": \"#/definitions/User\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/definitions/User\"\n                  }\n                }\n              }\n            }\n          },\n          \"201\": {\n            \"description\": \"Created.\"\n          },\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        }\n      }\n    },\n    \"/interview/invite\": {\n      \"post\": {\n        \"tags\": [\"interview\"],\n        \"summary\": \"Schedules an interview by userId\",\n        \"description\": \"A hiring partner invites a decadev for interview.\",\n        \"operationId\": \"scheduleInterview\",\n        \"consumes\": [\"application/json\"],\n        \"produces\": [\"application/json\"],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/definitions/Interview\"\n              }\n            },\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"$ref\": \"#/definitions/Interview\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/definitions/Interview\"\n              }\n            },\n            \"text/plain\": {\n              \"schema\": {\n                \"$ref\": \"#/definitions/Interview\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/definitions/Interview\"\n                  }\n                }\n              }\n            }\n          },\n          \"201\": {\n            \"description\": \"Interview Scheduled\"\n          },\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        }\n      }\n    },\n    \"/interview/invite/{interviewId}\": {\n      \"put\": {\n        \"tags\": [\"interview\"],\n        \"summary\": \"Accept interview by userId\",\n        \"description\": \"A decadev responds to interview.\",\n        \"operationId\": \"acceptInterview\",\n        \"consumes\": [\"application/json\"],\n        \"produces\": [\"application/json\"],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"interviewId\",\n            \"description\": \"An interview Id.\",\n            \"required\": true,\n            \"schema\": {\n              \"$ref\": \"#/definitions/UserId\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/definitions/Interview\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"The specified interview ID is invalid (not a string).\"\n          },\n          \"404\": {\n            \"description\": \"An interview with the specified ID was not found.\"\n          },\n          \"405\": {\n            \"description\": \"Invalid input\"\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\"\n          }\n        }\n      }\n    }\n  },\n  \"definitions\": {\n    \"User\": {\n      \"type\": \"object\",\n      \"required\": [\"password\"],\n      \"properties\": {\n        \"id\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"email\": {\n          \"type\": \"string\"\n        },\n        \"password\": {\n          \"type\": \"string\"\n        },\n        \"phone\": {\n          \"type\": \"string\"\n        },\n        \"role\": {\n          \"type\": \"string\"\n        },\n        \"profilePhoto\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"Interview\": {\n      \"type\": \"object\",\n      \"required\": true,\n      \"properties\": {\n        \"id\": {\n          \"type\": \"string\"\n        },\n        \"hiringPartner\": {\n          \"type\": \"string\"\n        },\n        \"decaDev\": {\n          \"type\": \"string\"\n        },\n        \"profilePhoto\": {\n          \"type\": \"string\"\n        },\n        \"location\": {\n          \"type\": \"string\"\n        },\n        \"time\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"Email\": {\n      \"type\": \"object\",\n      \"required\": true,\n      \"properties\": {\n        \"email\": {\n          \"type\": \"string\"\n        },\n        \"newPassword\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"UserId\": {\n      \"type\": \"string\"\n    }\n  },\n  \"Error\": {\n    \"properties\": {\n      \"code\": {\n        \"type\": \"string\"\n      },\n      \"message\": {\n        \"type\": \"string\"\n      }\n    }\n  }\n}\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /interview/invite: post: operation \"scheduleInterview\": requestBody: content: \"application/x-www-form-urlencoded\": parse schema: parse schema: resolve \"#/definitions/Interview\": find schema: unmarshal: json: cannot unmarshal bool into Go struct field Alias.required of type []string"
}