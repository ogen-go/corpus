{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/SatoshiPortal/cyphernode"
		},
		"file": {
			"name": "cyphernode-api.yaml",
			"size": 0,
			"path": "doc/openapi/v0/cyphernode-api.yaml",
			"byteSize": 95607,
			"content": "openapi: 3.0.0\ninfo:\n  description: \"Cyphernode API v0\"\n  version: \"0.1.0\"\n  title: \"Cyphernode API\"\nexternalDocs:\n  description: \"Find out more about Swagger\"\n  url: \"http://swagger.io\"\nservers:\n  - url: /v0\n    description: authoring\n  - url: http://localhost:8888/v0\n    description: local cyphernode\nsecurity:\n  - BearerAuth: []\ntags:\n  - name: \"cyphernode\"\n    description: \"Everything bitcoin\"\n    externalDocs:\n      description: \"Find out more\"\n      url: \"http://cyphernode.io\"\n  - name: \"openapi generator\"\n    externalDocs:\n      description: \"Find out more\"\n      url: \"https://github.com/OpenAPITools/openapi-generator\"\n  - name: \"watching addresses\"\n  - name: \"block\"\n  - name: \"transaction\"\n  - name: \"spending wallet\"\n  - name: \"addresses\"\n  - name: \"lightning\"\n  - name: \"open timestamps client\"\n  - name: \"core features\"\n  - name: \"optional features\"\npaths:\n  /watch:\n    post:\n      tags:\n        - \"watching addresses\"\n        - \"core features\"\n      summary: \"Add a new Bitcoin address to be watched\"\n      description: \"Inserts the Bitcoin address and callbacks in the DB and imports the address to the Watching wallet.\"\n      operationId: \"addWatchedAddress\"\n      requestBody:\n        description: \"Bitcoin address that needs to be watched\"\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              required:\n                - \"address\"\n              properties:\n                address:\n                  $ref: '#/components/schemas/TypeAddressString'\n                unconfirmedCallbackURL:\n                  type: \"string\"\n                  format: \"url\"\n                confirmedCallbackURL:\n                  type: \"string\"\n                  format: \"url\"\n                eventMessage:\n                  description: \"Will be part of the published message on confirmations\"\n                  type: \"string\"\n      responses:\n        '200':\n          description: \"successfully created\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WatchedAddress'\n        '400':\n          $ref: '#/components/schemas/ApiResponseInvalidInput'\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /getactivewatches:\n    get:\n      tags:\n        - \"watching addresses\"\n        - \"core features\"\n      summary: \"Get list of watched Bitcoin addresses\"\n      description: \"Returns the list of currently watched Bitcoin addresses and callback information.\"\n      operationId: \"listWatchedAddress\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                required:\n                  - \"watches\"\n                properties:\n                  watches:\n                    type: \"array\"\n                    items:\n                      $ref: '#/components/schemas/WatchedAddress'\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /unwatch/{address}:\n    get:\n      parameters:\n        - in: \"path\"\n          name: \"address\"\n          description: \"Address\"\n          required: true\n          schema:\n            $ref: '#/components/schemas/TypeAddressString'\n      tags:\n        - \"watching addresses\"\n        - \"core features\"\n      summary: \"Stop watching a Bitcoin address\"\n      description: \"Updates the watched Bitcoin address row in DB so that callbacks won't be called on tx confirmations for that address.\"\n      operationId: \"deleteWatchedAddress\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                properties:\n                  event:\n                    type: \"string\"\n                  address:\n                    $ref: '#/components/schemas/TypeAddressString'\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '404':\n          $ref: '#/components/schemas/ApiResponseNotFound'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /unwatch:\n    post:\n      tags:\n        - \"watching addresses\"\n        - \"core features\"\n      summary: \"Stop watching a Bitcoin address\"\n      description: \"Updates the watched Bitcoin address row in DB so that callbacks won't be called on tx confirmations for that address for the specified URLs or id.\"\n      operationId: \"deleteWatchedAddress\"\n      requestBody:\n        description: \"Bitcoin address that needs to be watched\"\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              properties:\n                address:\n                  $ref: '#/components/schemas/TypeAddressString'\n                unconfirmedCallbackURL:\n                  type: \"string\"\n                  format: \"url\"\n                confirmedCallbackURL:\n                  type: \"string\"\n                  format: \"url\"\n                id:\n                  description: \"id returned by the corresponding watch\"\n                  type: \"string\"\n      responses:\n        '200':\n          description: \"successfully unwatched\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                properties:\n                  event:\n                    type: \"string\"\n                  address:\n                    $ref: '#/components/schemas/TypeAddressString'\n                  unconfirmedCallbackURL:\n                    type: \"string\"\n                    format: \"url\"\n                  confirmedCallbackURL:\n                    type: \"string\"\n                    format: \"url\"\n        '400':\n          $ref: '#/components/schemas/ApiResponseInvalidInput'\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /watchxpub:\n    post:\n      tags:\n        - \"watching addresses\"\n        - \"core features\"\n      summary: \"Add a new xpub to be watched\"\n      description: \"Inserts the xpub's Bitcoin addresses and callbacks in the DB and imports the addresses to the xpub Watching wallet.\"\n      operationId: \"addXpubWatch\"\n      requestBody:\n        description: \"Bitcoin xpub that needs to be watched\"\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              required:\n                - \"label\"\n                - \"pub32\"\n                - \"path\"\n                - \"nstart\"\n                - \"unconfirmedCallbackURL\"\n                - \"confirmedCallbackURL\"\n              properties:\n                label:\n                  description: \"Label for that xpub.  Can be used, instead for xpub, for future references in xpub-related endpoints.\"\n                  type: \"string\"\n                pub32:\n                  $ref: '#/components/schemas/TypeXpubString'\n                path:\n                  description: \"Derivation path to use when deriving addresses from xpub to be watched.  Must use variable n in the path for the index.\"\n                  type: \"string\"\n                nstart:\n                  description: \"Index number to start watching from.\"\n                  type: \"integer\"\n                unconfirmedCallbackURL:\n                  type: \"string\"\n                  format: \"url\"\n                confirmedCallbackURL:\n                  type: \"string\"\n                  format: \"url\"\n      responses:\n        '200':\n          description: \"successfully created\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WatchedAddress'\n        '400':\n          $ref: '#/components/schemas/ApiResponseInvalidInput'\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /unwatchxpubbyxpub/{xpub}:\n    get:\n      parameters:\n        - in: \"path\"\n          name: \"xpub\"\n          description: \"Xpub address\"\n          required: true\n          schema:\n            $ref: '#/components/schemas/TypeXpubString'\n      tags:\n        - \"watching addresses\"\n        - \"core features\"\n      summary: \"Stop watching a Bitcoin xpub address\"\n      description: \"Updates the watched xpub Bitcoin address row in DB so that callbacks won't be called on tx confirmations for the provided xpub addresses.\"\n      operationId: \"deleteWatchedXpubByXpub\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                properties:\n                  event:\n                    type: \"string\"\n                  xpub:\n                    $ref: '#/components/schemas/TypeXpubString'\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '404':\n          $ref: '#/components/schemas/ApiResponseNotFound'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /unwatchxpubbylabel/{label}:\n    get:\n      parameters:\n        - in: \"path\"\n          name: \"label\"\n          description: \"Xpub label\"\n          required: true\n          schema:\n            type: \"string\"\n      tags:\n        - \"watching addresses\"\n        - \"core features\"\n      summary: \"Stop watching a Bitcoin xpub address\"\n      description: \"Updates the watched xpub Bitcoin address row in DB so that callbacks won't be called on tx confirmations for the provided xpub addresses.\"\n      operationId: \"deleteWatchedXpubByLabel\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                properties:\n                  event:\n                    type: \"string\"\n                  label:\n                    type: \"string\"\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '404':\n          $ref: '#/components/schemas/ApiResponseNotFound'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /getactivewatchesbyxpub/{xpub}:\n    get:\n      parameters:\n        - in: \"path\"\n          name: \"xpub\"\n          description: \"Xpub address\"\n          required: true\n          schema:\n            $ref: '#/components/schemas/TypeXpubString'\n      tags:\n        - \"watching addresses\"\n        - \"core features\"\n      summary: \"Get list of watched-by-xpub Bitcoin addresses\"\n      description: \"Returns the list of currently watched-by-xpub Bitcoin addresses and callback information.\"\n      operationId: \"listWatchedByXpubAddressByXpub\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                required:\n                  - \"watches\"\n                properties:\n                  watches:\n                    type: \"array\"\n                    items:\n                      $ref: '#/components/schemas/WatchedByXpubAddress'\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /getactivewatchesbylabel/{label}:\n    get:\n      parameters:\n        - in: \"path\"\n          name: \"label\"\n          description: \"Xpub label\"\n          required: true\n          schema:\n            type: \"string\"\n      tags:\n        - \"watching addresses\"\n        - \"core features\"\n      summary: \"Get list of watched-by-xpub Bitcoin addresses by label\"\n      description: \"Returns the list of currently watched-by-xpub Bitcoin addresses, by label, and callback information.\"\n      operationId: \"listWatchedByXpubAddressByLabel\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                required:\n                  - \"watches\"\n                properties:\n                  watches:\n                    type: \"array\"\n                    items:\n                      $ref: '#/components/schemas/WatchedByXpubAddress'\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /get_txns_by_watchlabel/{label}:\n    get:\n      parameters:\n        - in: \"path\"\n          name: \"label\"\n          description: \"Xpub label\"\n          required: true\n          schema:\n            type: \"string\"\n      tags:\n        - \"transactions\"\n        - \"core features\"\n      summary: \"Get list of upto 10 transactions observed for addreses belonging to this label\"\n      description: \"Get list of transactions observed for addreses belonging to this label\"\n      operationId: \"get_txns_by_watchlabel\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                required:\n                  - \"label_txns\"\n                properties:\n                  watches:\n                    type: \"array\"\n                    items:\n                      $ref: '#/components/schemas/WatchXPubTxn'\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /get_txns_by_watchlabel/{label}/{count}:\n    get:\n      parameters:\n        - in: \"path\"\n          name: \"label\"\n          description: \"Xpub label\"\n          required: true\n          schema:\n            type: \"string\"\n        - in: \"path\"\n          name: \"count\"\n          description: \"Number of transactions to return\"\n          required: true\n          schema:\n            type: \"number\"\n      tags:\n        - \"transactions\"\n        - \"core features\"\n      summary: \"Get list of transactions observed for addreses belonging to this label\"\n      description: \"Get list of upto count number of transactions observed for addreses belonging to this label\"\n      operationId: \"get_txns_by_watchlabel_count\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                required:\n                  - \"label_txns\"\n                properties:\n                  watches:\n                    type: \"array\"\n                    items:\n                      $ref: '#/components/schemas/WatchXPubTxn'\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /get_txns_spending:\n    get:\n      tags:\n        - \"transactions\"\n        - \"core features\"\n      summary: \"Get list of upto 10 spending wallet transactions\"\n      description: \"Get list of upto 10 spending wallet transactions\"\n      operationId: \"get_txns_spending\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                required:\n                  - \"txns\"\n                properties:\n                  watches:\n                    type: \"array\"\n                    items:\n                      $ref: '#/components/schemas/TransactionsSpending'\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /get_txns_spending/{count}/:\n    get:\n      parameters:\n        - in: \"path\"\n          name: \"count\"\n          description: \"Number of txns to return\"\n          required: true\n          schema:\n            type: \"integer\"\n      tags:\n        - \"transactions\"\n        - \"core features\"\n      summary: \"Get list of upto count spending wallet transactions\"\n      description: \"Get list of upto count wallets transactions\"\n      operationId: \"get_txns_spending_count\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                required:\n                  - \"txns\"\n                properties:\n                  watches:\n                    type: \"array\"\n                    items:\n                      $ref: '#/components/schemas/TransactionsSpending'\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /get_txns_spending/{count}/{skip}:\n    get:\n      parameters:\n        - in: \"path\"\n          name: \"count\"\n          description: \"Number of txns to return\"\n          required: true\n          schema:\n            type: \"integer\"\n        - in: \"path\"\n          name: \"skip\"\n          description: \"Number of txns to skip (start from)\"\n          required: true\n          schema:\n            type: \"integer\"\n      tags:\n        - \"transactions\"\n        - \"core features\"\n      summary: \"Get list of upto count spending wallet transactions, skipping over the first {skip} number of transactions\"\n      description: \"Get list of upto count spending wallet transactions, skipping over the first {skip} number of transactions\"\n      operationId: \"get_txns_spending_count_skip\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                required:\n                  - \"txns\"\n                properties:\n                  watches:\n                    type: \"array\"\n                    items:\n                      $ref: '#/components/schemas/TransactionsSpending'\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /get_unused_addresses_by_watchlabel/{label}/:\n    get:\n      parameters:\n        - in: \"path\"\n          name: \"label\"\n          description: \"Xpub label\"\n          required: true\n          schema:\n            type: \"string\"\n      tags:\n        - \"watching addresses\"\n        - \"core features\"\n      summary: \"Get list of upto 10 unused derived addreses belonging to this label\"\n      description: \"Gets an unused subset of addreses from the set of derived addresses belonging to this label\"\n      operationId: \"get_unused_addresses_by_watchlabel\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                required:\n                  - \"label_unused_addresses\"\n                properties:\n                  watches:\n                    type: \"array\"\n                    items:\n                      $ref: '#/components/schemas/UnusedWatchXPubAddress'\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /get_unused_addresses_by_watchlabel/{label}/{count}:\n    get:\n      parameters:\n        - in: \"path\"\n          name: \"label\"\n          description: \"Xpub label\"\n          required: true\n          schema:\n            type: \"string\"\n        - in: \"path\"\n          name: \"count\"\n          description: \"Number of addresses to return\"\n          required: true\n          schema:\n            type: \"integer\"\n      tags:\n        - \"watching addresses\"\n        - \"core features\"\n      summary: \"Get list of unused upto to {count} derived addreses belonging to this label\"\n      description: \"Get list of unused upto to {count} derived addreses belonging to this label\"\n      operationId: \"get_unused_addresses_by_watchlabel_count\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                required:\n                  - \"label_unused_addresses\"\n                properties:\n                  watches:\n                    type: \"array\"\n                    items:\n                      $ref: '#/components/schemas/UnusedWatchXPubAddress'\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /getactivexpubwatches:\n    get:\n      tags:\n        - \"watching addresses\"\n        - \"core features\"\n      summary: \"Get list of watched-by-xpub Bitcoin xpub\"\n      description: \"Returns the list of currently watched xpub Bitcoin addresses and callback information.\"\n      operationId: \"listWatchedByXpubAddresses\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                required:\n                  - \"id\"\n                  - \"pub32\"\n                  - \"label\"\n                  - \"derivation_path\"\n                  - \"last_imported_n\"\n                  - \"unconfirmedCallbackURL\"\n                  - \"confirmedCallbackURL\"\n                  - \"watching_since\"\n                properties:\n                  watches:\n                    type: \"array\"\n                    items:\n                      $ref: '#/components/schemas/WatchedXpub'\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /watchtxid:\n    post:\n      tags:\n        - \"watching addresses\"\n        - \"core features\"\n      summary: \"Add a new txid to be watched\"\n      description: \"Inserts the transaction id and callbacks in the DB and check number of confirmations when a new block is added.  Will eventually execute callbacks when enough confirmations for the transaction.  Useful when we want to be notified when a LN channel is ready to use.\"\n      operationId: \"addWatchedTxid\"\n      requestBody:\n        description: \"Bitcoin txid that needs to be watched\"\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              required:\n                - \"txid\"\n                - \"confirmedCallbackURL\"\n                - \"xconfCallbackURL\"\n                - \"nbxconf\"\n              properties:\n                txid:\n                  $ref: '#/components/schemas/TypeHashString'\n                unconfirmedCallbackURL:\n                  type: \"string\"\n                  format: \"url\"\n                xconfCallbackURL:\n                  type: \"string\"\n                  format: \"url\"\n                nbxconf:\n                  type: \"integer\"\n      responses:\n        '200':\n          description: \"successfully created\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WatchedAddress'\n        '400':\n          $ref: '#/components/schemas/ApiResponseInvalidInput'\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n\n  /getblockhash/{height}:\n    get:\n      parameters:\n        - in: \"path\"\n          name: \"height\"\n          description: \"Blockhash\"\n          required: true\n          schema:\n           type: \"integer\"\n      tags:\n        - \"block\"\n        - \"core features\"\n      summary: \"Get block hash matching height provided.\"\n      description: \"Returns the block matching the height provided of the watching Bitcoin node.\"\n      operationId: \"getBlockHash\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                required:\n                  - \"result\"\n                properties:\n                  result:\n                    $ref: '#/components/schemas/TypeHashString'\n                  error:\n                    type: \"string\"\n                  id:\n                    type: \"string\"\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /getbestblockhash:\n    get:\n      tags:\n        - \"block\"\n        - \"core features\"\n      summary: \"Get the best block hash.\"\n      description: \"Returns the best block hash of the watching Bitcoin node.\"\n      operationId: \"getBestBlockHash\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                required:\n                  - \"result\"\n                properties:\n                  result:\n                    $ref: '#/components/schemas/TypeHashString'\n                  error:\n                    type: \"string\"\n                  id:\n                    type: \"string\"\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /getblockchaininfo:\n    get:\n      tags:\n        - \"stats\"\n        - \"core features\"\n      summary: \"Show blockchain info\"\n      description: \"Returns detailed blockchain information.\"\n      operationId: \"getBlockchainInfo\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlockchainInfo'\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '404':\n          $ref: '#/components/schemas/ApiResponseNotFound'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /getinstallation_info:\n    get:\n      tags:\n        - \"stats\"\n      summary: \"Show installation info\"\n      description: \"Returns detailed cyphernode installation information.\"\n      operationId: \"getInstallationInfo\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstallationInfo'\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '404':\n          $ref: '#/components/schemas/ApiResponseNotFound'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /getblockinfo/{blockHash}:\n    get:\n      parameters:\n        - in: \"path\"\n          name: \"blockHash\"\n          description: \"Blockhash\"\n          required: true\n          schema:\n            $ref: '#/components/schemas/TypeHashString'\n      tags:\n        - \"block\"\n        - \"core features\"\n      summary: \"Show block info\"\n      description: \"Returns detailed block information.\"\n      operationId: \"getBlockInfo\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                properties:\n                  result:\n                    $ref: '#/components/schemas/Block'\n                  error:\n                    type: \"string\"\n                  id:\n                    type: \"string\"\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '404':\n          $ref: '#/components/schemas/ApiResponseNotFound'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /getbestblockinfo:\n    get:\n      tags:\n        - \"block\"\n        - \"core features\"\n      summary: \"Get the best block info\"\n      description: \"Returns detailed block information for current best block.\"\n      operationId: \"getBestBlockInfo\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                properties:\n                  result:\n                    $ref: '#/components/schemas/Block'\n                  error:\n                    type: \"string\"\n                  id:\n                    type: \"string\"\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /gettransaction/{transactionHash}:\n    get:\n      parameters:\n        - in: \"path\"\n          name: \"transactionHash\"\n          description: \"Transaction id\"\n          required: true\n          schema:\n            $ref: '#/components/schemas/TypeHashString'\n      tags:\n        - \"transaction\"\n        - \"core features\"\n      summary: \"Get transaction info\"\n      description: \"Returns detailed transaction information.\"\n      operationId: \"getTransactionInfo\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                properties:\n                  result:\n                    $ref: '#/components/schemas/Transaction'\n                  error:\n                    type: \"string\"\n                  id:\n                    type: \"string\"\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '404':\n          $ref: '#/components/schemas/ApiResponseNotFound'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /getbalance:\n    get:\n      tags:\n        - \"spending wallet\"\n        - \"core features\"\n      summary: \"Get the spending wallet balance\"\n      description: \"Returns the spending wallet balance, in BTC.\"\n      operationId: \"getSpendingWalletBalance\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Balance'\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /getbalances:\n    get:\n      tags:\n        - \"spending wallet\"\n        - \"core features\"\n      summary: \"Get the spending wallet extended balances\"\n      description: \"Returns the spending wallet extended balances, in BTC.\"\n      operationId: \"getSpendingWalletBalances\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Balances'\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /getbalancebyxpub/{xpub}:\n    get:\n      parameters:\n        - in: \"path\"\n          name: \"xpub\"\n          description: \"Xpub address\"\n          required: true\n          schema:\n            $ref: '#/components/schemas/TypeXpubString'\n      tags:\n        - \"spending wallet\"\n        - \"core features\"\n      summary: \"Get the xpub balance\"\n      description: \"Returns the xpub balance, in BTC.\"\n      operationId: \"getXpubBalanceByXpub\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Balance'\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /getbalancebyxpublabel/{label}:\n    get:\n      parameters:\n        - in: \"path\"\n          name: \"label\"\n          description: \"Xpub label\"\n          required: true\n          schema:\n            type: \"string\"\n      tags:\n        - \"spending wallet\"\n        - \"core features\"\n      summary: \"Get the xpub balance by its label\"\n      description: \"Returns the xpub balance by its label, in BTC.\"\n      operationId: \"getXpubBalanceByLabel\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Balance'\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /getnewaddress:\n    get:\n      tags:\n        - \"spending wallet\"\n        - \"core features\"\n      summary: \"Generates a new address on the spending wallet\"\n      description: \"Generates a new address on the spending wallet. Useful to refill the spending wallet from cold wallet (ie Trezor).\"\n      operationId: \"getSpendingWalletNewAddress\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                properties:\n                  address:\n                    $ref: '#/components/schemas/TypeAddressString'\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /spend:\n    post:\n      tags:\n        - \"spending wallet\"\n        - \"core features\"\n      summary: \"Spend some amount to some address\"\n      description: \"Calls sendtoaddress RPC on the spending wallet with supplied info.\"\n      operationId: \"spend\"\n      requestBody:\n        description: \"Address and amount\"\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              required:\n                - \"address\"\n                - \"amount\"\n              properties:\n                address:\n                  $ref: '#/components/schemas/TypeAddressString'\n                amount:\n                  type: \"number\"\n                eventMessage:\n                  description: \"Will be part of the published message on spend\"\n                  type: \"string\"\n                confTarget:\n                  type: \"number\"\n                replaceable:\n                  type: \"boolean\"\n                subtractfeefromamount:\n                  type: \"boolean\"\n      responses:\n        '200':\n          description: \"operation successful\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                required:\n                  - \"status\"\n                  - \"hash\"\n                properties:\n                  status:\n                    type: \"string\"\n                  hash:\n                    $ref: '#/components/schemas/TypeHashString'\n                  details:\n                    type: \"object\"\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '405':\n          $ref: '#/components/schemas/ApiResponseInvalidInput'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /bumpfee:\n    post:\n      tags:\n        - \"spending wallet\"\n        - \"core features\"\n      summary: \"Bump the fees of an unconfirmed transaction\"\n      description: \"Calls bumpfee RPC on the spending wallet with supplied info.\"\n      operationId: \"bumpfee\"\n      requestBody:\n        description: \"txid and confirmation target\"\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              required:\n                - \"txid\"\n              properties:\n                txid:\n                  $ref: '#/components/schemas/TypeHashString'\n                confTarget:\n                  type: \"number\"\n      responses:\n        '200':\n          description: \"operation successful\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                required:\n                  - \"txid\"\n                  - \"origfee\"\n                  - \"fee\"\n                  - \"errors\"\n                properties:\n                  txid:\n                    $ref: '#/components/schemas/TypeHashString'\n                  origfee:\n                    type: \"number\"\n                  fee:\n                    type: \"number\"\n                  errors:\n                    type: \"array\"\n                    items:\n                      type: \"string\"\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '405':\n          $ref: '#/components/schemas/ApiResponseInvalidInput'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /createbatcher:\n    post:\n      tags:\n        - \"spending wallet\"\n        - \"core features\"\n        - \"batching\"\n      summary: \"Create a batching template, by setting a label and a default confTarget\"\n      description: \"Inserts batcher information to the DB.\"\n      operationId: \"createbatcher\"\n      requestBody:\n        description: \"Batcher label and conf target\"\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              properties:\n                batcherLabel:\n                  type: \"string\"\n                confTarget:\n                  type: \"number\"\n      responses:\n        '200':\n          description: \"operation successful\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      batcherId:\n                        type: \"number\"\n                  error:\n                    type: \"object\"\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '405':\n          $ref: '#/components/schemas/ApiResponseInvalidInput'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /updatebatcher:\n    post:\n      tags:\n        - \"spending wallet\"\n        - \"core features\"\n        - \"batching\"\n      summary: \"Update a batching template, by changing the label or the default confTarget\"\n      description: \"Updates batcher information to the DB.\"\n      operationId: \"updatebatcher\"\n      requestBody:\n        description: \"Batcher id, batcher label and conf target\"\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              properties:\n                batcherId:\n                  type: \"number\"\n                batcherLabel:\n                  type: \"string\"\n                confTarget:\n                  type: \"number\"\n      responses:\n        '200':\n          description: \"operation successful\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      batcherId:\n                        type: \"number\"\n                      batcherLabel:\n                        type: \"string\"\n                      confTarget:\n                        type: \"number\"\n                  error:\n                    type: \"object\"\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '405':\n          $ref: '#/components/schemas/ApiResponseInvalidInput'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /addtobatch:\n    post:\n      tags:\n        - \"spending wallet\"\n        - \"core features\"\n        - \"batching\"\n      summary: \"Adds spending of some amount to some address to the next batch\"\n      description: \"Inserts output information in the DB.  Used when batchspend is called later.\"\n      operationId: \"spendInNextBatch\"\n      requestBody:\n        description: \"Address, amount, batcherId, batcherLabel and webhookUrl\"\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              required:\n                - \"address\"\n                - \"amount\"\n              properties:\n                address:\n                  $ref: '#/components/schemas/TypeAddressString'\n                amount:\n                  type: \"number\"\n                batcherId:\n                  type: \"number\"\n                batcherLabel:\n                  type: \"string\"\n                webhookUrl:\n                  type: \"string\"\n                  format: \"url\"\n      responses:\n        '200':\n          description: \"operation successful\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      batcherId:\n                        type: \"number\"\n                      outputId:\n                        type: \"number\"\n                      nbOutputs:\n                        type: \"number\"\n                      oldest:\n                        type: \"string\"\n                      total:\n                        type: \"number\"\n                  error:\n                    type: \"object\"\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '405':\n          $ref: '#/components/schemas/ApiResponseInvalidInput'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /removefrombatch:\n    post:\n      tags:\n        - \"spending wallet\"\n        - \"core features\"\n        - \"batching\"\n      summary: \"Removes a previously added output from the next batch\"\n      description: \"Deletes output from the DB.\"\n      operationId: \"removeFromNextBatch\"\n      requestBody:\n        description: \"outputId returned by corresponding addtobatch\"\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              required:\n                - \"outputId\"\n              properties:\n                outputId:\n                  type: \"number\"\n      responses:\n        '200':\n          description: \"operation successful\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      batcherId:\n                        type: \"number\"\n                      outputId:\n                        type: \"number\"\n                      nbOutputs:\n                        type: \"number\"\n                      oldest:\n                        type: \"string\"\n                      total:\n                        type: \"number\"\n                  error:\n                    type: \"object\"\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '405':\n          $ref: '#/components/schemas/ApiResponseInvalidInput'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /batchspend:\n    post:\n      tags:\n        - \"spending wallet\"\n        - \"core features\"\n        - \"batching\"\n      summary: \"Spend previously added amounts/addresses in a batch\"\n      description: \"Creates a batched transaction whose outputs are the previously unspent addtobatch calls for the batcher.\"\n      operationId: \"batchSpend\"\n      requestBody:\n        description: \"batcherId or batcherLabel with an optional confTarget to override the batcher's default\"\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              properties:\n                batcherId:\n                  type: \"number\"\n                batcherLabel:\n                  type: \"string\"\n                confTarget:\n                  type: \"number\"\n      responses:\n        '200':\n          description: \"operation successful\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      batcherId:\n                        type: \"number\"\n                      confTarget:\n                        type: \"number\"\n                      nbOutputs:\n                        type: \"number\"\n                      oldest:\n                        type: \"string\"\n                      total:\n                        type: \"number\"\n                      txid:\n                        type: \"string\"\n                      hash:\n                        type: \"string\"\n                      details:\n                        type: \"object\"\n                      outputs:\n                        type: \"object\"\n                  error:\n                    type: \"object\"\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '405':\n          $ref: '#/components/schemas/ApiResponseInvalidInput'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /getbatcher:\n    post:\n      tags:\n        - \"spending wallet\"\n        - \"core features\"\n        - \"batching\"\n      summary: \"Returns current state/summary of the requested batching template\"\n      description: \"Get information from the batcher and recipient DB tables.\"\n      operationId: \"getBatcher\"\n      requestBody:\n        description: \"Optional batcherId or batcherLabel, default batcher if not supplied\"\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              properties:\n                batcherId:\n                  type: \"number\"\n                batcherLabel:\n                  type: \"string\"\n      responses:\n        '200':\n          description: \"operation successful\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      batcherId:\n                        type: \"number\"\n                      batcherLabel:\n                        type: \"string\"\n                      confTarget:\n                        type: \"number\"\n                      nbOutputs:\n                        type: \"number\"\n                      oldest:\n                        type: \"string\"\n                      total:\n                        type: \"number\"\n                  error:\n                    type: \"object\"\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '405':\n          $ref: '#/components/schemas/ApiResponseInvalidInput'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /getbatchdetails:\n    post:\n      tags:\n        - \"spending wallet\"\n        - \"core features\"\n        - \"batching\"\n      summary: \"Returns current state and details of the requested batch, including all outputs\"\n      description: \"Get detailed information from the batcher and recipient DB tables.\"\n      operationId: \"getBatcherDetails\"\n      requestBody:\n        description: \"Optional batcherId or batcherLabel and txid, default batcher if not supplied\"\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              properties:\n                batcherId:\n                  type: \"number\"\n                batcherLabel:\n                  type: \"string\"\n                txid:\n                  type: \"string\"\n      responses:\n        '200':\n          description: \"operation successful\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      batcherId:\n                        type: \"number\"\n                      batcherLabel:\n                        type: \"string\"\n                      confTarget:\n                        type: \"number\"\n                      nbOutputs:\n                        type: \"number\"\n                      oldest:\n                        type: \"string\"\n                      total:\n                        type: \"number\"\n                      txid:\n                        type: \"string\"\n                      hash:\n                        type: \"string\"\n                      details:\n                        type: \"object\"\n                      outputs:\n                        type: \"object\"\n                  error:\n                    type: \"object\"\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '405':\n          $ref: '#/components/schemas/ApiResponseInvalidInput'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /listbatchers:\n    get:\n      tags:\n        - \"spending wallet\"\n        - \"core features\"\n        - \"batching\"\n      summary: \"Get list of batchers, including the default batcher\"\n      description: \"Returns the list of batch templates.\"\n      operationId: \"listBatchers\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"array\"\n                  error:\n                    type: \"object\"\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /bitcoin_estimatesmartfee:\n    post:\n      tags:\n        - \"core features\"\n        - \"bitcoin\"\n      summary: \"Returns current fee estimation computed by Bitcoin Core's estimatesmartfee\"\n      description: \"Returns current fee estimation computed by Bitcoin Core's estimatesmartfee\"\n      operationId: \"estimateSmartFee\"\n      requestBody:\n        description: \"Conf Target\"\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              properties:\n                confTarget:\n                  type: \"number\"\n      responses:\n        '200':\n          description: \"operation successful\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      feerate:\n                        type: \"number\"\n                      blocks:\n                        type: \"number\"\n                  error:\n                    type: \"object\"\n                  id:\n                    type: \"number\"\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '405':\n          $ref: '#/components/schemas/ApiResponseInvalidInput'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /deriveindex/{indexSpecifier}:\n    get:\n      parameters:\n        - in: \"path\"\n          name: \"indexSpecifier\"\n          description: \"Index specifier. Either an integer or a range in the form n-m\"\n          required: true\n          schema:\n            type: \"string\"\n      tags:\n        - \"addresses\"\n        - \"core features\"\n      summary: \"Derive address(es) using configured xpub key and derivation path\"\n      description: \"Derives address(es) for supplied index. Must be used with derivation.pub32 and derivation.path properties in config.properties.\"\n      operationId: \"deriveIndex\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                properties:\n                  addresses:\n                    type: \"array\"\n                    items:\n                      type: \"object\"\n                      required:\n                        - \"address\"\n                      properties:\n                        address:\n                          $ref: '#/components/schemas/TypeAddressString'\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /derivepubpath:\n    post:\n      tags:\n        - \"addresses\"\n        - \"core features\"\n      summary: \"Derive address(es) using supplied xpub key and derivation path\"\n      description: \"Derives address(es) for supplied pub32 and path.  config.properties' derivation.pub32 and derivation.path are not used.\"\n      operationId: \"derivePubPath\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              required:\n                - \"pub32\"\n                - \"path\"\n              properties:\n                pub32:\n                  description: \"xpub/ypub/zpub/tpub/upub/vpub used to derive address(es)\"\n                  type: \"string\"\n                path:\n                  description: \"Derivation path including the index, in the form n or n-m (ex.: 0/44'/86 or 0/44'/62-77)\"\n                  type: \"string\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                properties:\n                  addresses:\n                    type: \"array\"\n                    items:\n                      type: \"object\"\n                      required:\n                        - \"address\"\n                      properties:\n                        address:\n                          $ref: '#/components/schemas/TypeAddressString'\n        '400':\n          $ref: '#/components/schemas/ApiResponseInvalidInput'\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /getmempoolinfo:\n    get:\n      tags:\n        - \"stats\"\n        - \"core features\"\n      summary: \"Show mempool info\"\n      description: \"Returns detailed mempool information.\"\n      operationId: \"getmempoolinfo\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MempoolInfo'\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '404':\n          $ref: '#/components/schemas/ApiResponseNotFound'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /ln_getinfo:\n    get:\n      tags:\n        - \"lightning\"\n        - \"optional features\"\n      summary: \"Get lightning node info\"\n      description: \"Calls getinfo from lightningd. Useful to let your users know where to connect to.\"\n      operationId: \"lightningGetNodeInfo\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                properties:\n                  id:\n                    type: \"string\"\n                  alias:\n                    type: \"string\"\n                  color:\n                    $ref: '#/components/schemas/TypeInt32HexString'\n                  version:\n                    type: \"string\"\n                  blockheight:\n                    type: \"integer\"\n                  network:\n                    type: \"string\"\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /ln_create_invoice:\n    post:\n      tags:\n        - \"lightning\"\n        - \"optional features\"\n      summary: \"Create lightning invoice\"\n      description: \"Returns a LN invoice.  Label must be unique.  Description will be used by your user for payment.  Expiry is in seconds.\"\n      operationId: \"lightningCreateInvoice\"\n      requestBody:\n        description: \"Information to create invoice\"\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              required:\n                - \"label\"\n                - \"description\"\n              properties:\n                msatoshi:\n                  type: \"integer\"\n                label:\n                  type: \"string\"\n                description:\n                  type: \"string\"\n                expiry:\n                  type: \"integer\"\n                callbackUrl:\n                  type: \"string\"\n                  format: \"url\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                properties:\n                  payment_hash:\n                    $ref: '#/components/schemas/TypeHashString'\n                  expires_at:\n                    type: \"integer\"\n                  bolt11:\n                    type: \"string\"\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /ln_pay:\n    post:\n      tags:\n        - \"lightning\"\n        - \"optional features\"\n      summary: \"Pay lightning invoice\"\n      description: \"Make a LN payment.  expected_msatoshi and expected_description are respectively the amount and description you gave your user for her to create the invoice; they must match the given bolt11 invoice supplied by your user.\"\n      operationId: \"lightningPayInvoice\"\n      requestBody:\n        description: \"Information to pay invoice\"\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              required:\n                - \"bolt11\"\n                - \"expected_msatoshi\"\n              properties:\n                bolt11:\n                  type: \"string\"\n                expected_msatoshi:\n                  type: \"integer\"\n                expected_description:\n                  type: \"string\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                properties:\n                  id:\n                    type: \"integer\"\n                  payment_hash:\n                    $ref: '#/components/schemas/TypeHashString'\n                  msatoshi:\n                    type: \"integer\"\n                  msatoshi_sent:\n                    type: \"integer\"\n                  created_at:\n                    type: \"integer\"\n                  status:\n                    type: \"string\"\n                  payment_preimage:\n                    $ref: '#/components/schemas/TypeHashString'\n                  description:\n                    type: \"string\"\n                  getroute_tries:\n                    type: \"integer\"\n                  sendpay_tries:\n                    type: \"integer\"\n                  route:\n                    type: \"array\"\n                    items:\n                      type: \"object\"\n                      properties:\n                        id:\n                          type: \"string\"\n                        channel:\n                          type: \"string\"\n                        msatoshi:\n                          type: \"integer\"\n                        delay:\n                          type: \"integer\"\n                  failures:\n                    type: \"array\"\n                    items:\n                      type: \"object\"\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /ln_newaddr:\n    get:\n      tags:\n        - \"lightning\"\n        - \"optional features\"\n      summary: \"Generates new address from the lightning node\"\n      description: \"Returns a Bitcoin bech32 address to fund your LN wallet.\"\n      operationId: \"lightningGetNewAddress\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                properties:\n                  address:\n                    type: \"string\"\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /ln_getconnectionstring:\n    get:\n      tags:\n        - \"lightning\"\n        - \"optional features\"\n      summary: \"Returns the connection string to the lightning node\"\n      description: \"Returns the connection string to the lightning node\"\n      operationId: \"lightningGetConnectionString\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                properties:\n                  connectstring:\n                    type: \"string\"\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /ln_decodebolt11/{bolt11}:\n    get:\n      parameters:\n        - in: \"path\"\n          name: \"bolt11\"\n          description: \"BOLT11 string to decode\"\n          required: true\n          schema:\n            type: \"string\"\n      tags:\n        - \"lightning\"\n        - \"optional features\"\n      summary: \"Get the detailed decoded bolt11 string info\"\n      description: \"Returns the detailed decoded bolt11 string info\"\n      operationId: \"getDecodedBolt11\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                # TODO: describe response\n                type: \"object\"\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /ln_getinvoice/{label}:\n    get:\n      parameters:\n        - in: \"path\"\n          name: \"label\"\n          description: \"Xpub label\"\n          required: true\n          schema:\n            type: \"string\"\n      tags:\n        - \"lightning\"\n        - \"optional features\"\n      summary: \"Get the LN invoice by its label\"\n      description: \"Returns the LN invoice by its label.\"\n      operationId: \"getLnInvoiceByLabel\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                # TODO: describe response\n                type: \"object\"\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /ln_connectfund:\n    post:\n      tags:\n        - \"lightning\"\n        - \"optional features\"\n      summary: \"Connect LN to a peer and fund a channel\"\n      description: \"Connect LN node to a peer.  Fund a channel.  When channel is ready, callback will be called.\"\n      operationId: \"lightningConnectFund\"\n      requestBody:\n        description: \"Information to connect, fund channel and be called back.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              required:\n                - \"peer\"\n                - \"msatoshi\"\n                - \"callbackUrl\"\n              properties:\n                peer:\n                  type: \"string\"\n                msatoshi:\n                  type: \"integer\"\n                callbackUrl:\n                  type: \"string\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"string\"\n                  txid:\n                    $ref: '#/components/schemas/TypeHashString'\n                  channel_id:\n                    type: \"string\"\n                  message:\n                    type: \"string\"\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /ln_listpeers:\n    get:\n      tags:\n        - \"lightning\"\n        - \"optional features\"\n      summary: \"Get lightning peer list\"\n      description: \"Calls listpeers from lightningd.  Returns the list of peers and the channels opened with them, even for currently offline peers.\"\n      operationId: \"lightningListPeers\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n                properties:\n                  id:\n                    type: \"string\"\n                  connected:\n                    type: \"boolean\"\n                  netaddr:\n                    $ref: 'string'\n                  channels:\n                    type: \"array\"\n                    items:\n                      type: \"string\"\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /ln_listfunds:\n    get:\n      tags:\n        - \"lightning\"\n        - \"optional features\"\n      summary: \"Get funds in Ln wallet\"\n      description: \"Calls listfunds from lightningd.  Returns list of funds in outputs and channels. Please check c-lightinig documentation for schema of outputs and channels\"\n      operationId: \"lightningListFunds\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items: \n                  type: object\n                  properties:\n                    outputs:\n                      type: \"array\"\n                      items:\n                        type: object\n                    channels:\n                      type: \"array\"\n                      items:\n                        type: object\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /ln_listpays:\n    get:\n      tags:\n        - \"lightning\"\n        - \"optional features\"\n      summary: \"Gets list of payments made\"\n      description: \"Calls listpays from lightningd.  Returns list of payments made. Please refer to c-lighting documentation for payload of pays.\"\n      operationId: \"lightningListPays\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  pays:\n                    type: \"array\"\n                    items: \n                      type: object\n\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /ln_getroute/{nodeId}/{amount}/{riskFactor}:\n    get:\n      parameters:\n        - in: \"path\"\n          name: \"nodeId\"\n          description: \"Ln nodeId to find route to. Can be 66 character nodeId or nodeId with address and port\"\n          required: true\n          schema:\n            type: \"string\"\n        - in: \"path\"\n          name: \"amount\"\n          description: \"Amount in MSAT needed to pass through the route\"\n          required: true\n          schema:\n            type: \"number\"\n        - in: \"path\"\n          name: \"riskFactor\"\n          description: \"Randomization/Fee combination to use when finding route. Refer to c-lighthing docs for more details\"\n          required: false\n          schema:\n            type: \"string\"        \n      tags:\n        - \"lightning\"\n        - \"optional features\"\n      summary: \"Gets a viable payment route to nodeId for amount (satoshi)\"\n      description: \"Calls getroute from lightningd.  Returns an array of nodes presenting a possible route to nodeId based on the amount and risk factor supplied. Please refer to c-lighitings documentation for more details on riskfactor and returned payload schema\"\n      operationId: \"lightningGetRoute\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  route:\n                    type: \"array\"\n                    items: \n                      type: object\n\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /ln_withdraw:\n    post:\n      tags:\n        - \"lightning\"\n        - \"optional features\"\n      summary: \"Withdraw funds from c-lightning wallet to an address of choice.\"\n      description: \"Withdraw outputs from c-lightning wallet to a destination of choice with confirmation targeting fees. Can either supply `satoshi` in SATS (integer), BTC (8 point decimal) or set `all` to true to withdraw all outputs. Please refer to c-lightining documentation on returned payload\"\n      operationId: \"LnWithdraw\"\n      requestBody:\n        description: \"Destination address, amounts and fees for withdraw\"\n        required: true\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/LnWithdrawSatoshiAmountPayload'\n                - $ref: '#/components/schemas/LnWithdrawAllPayload'\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"object\"\n\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /ots_stamp:\n    post:\n      tags:\n        - \"ots\"\n        - \"optional features\"\n      summary: \"Stamp a hash using OTS\"\n      description: \"Stamp supplied hash using OTS.  Callback called when stamping is completed.\"\n      operationId: \"otsStamp\"\n      requestBody:\n        description: \"Information to stamp and callback.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              required:\n                - \"hash\"\n                - \"callbackUrl\"\n              properties:\n                hash:\n                  $ref: '#/components/schemas/TypeHashString'\n                callbackUrl:\n                  type: \"string\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                # TODO: describe response\n                type: \"object\"\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /ots_verify:\n    post:\n      tags:\n        - \"ots\"\n        - \"optional features\"\n      summary: \"Verify an OTS file with hash\"\n      description: \"If base64 of the OTS file is not supplied, look for local OTS file named after the supplied hash suffixed with .ots.\"\n      operationId: \"otsVerify\"\n      requestBody:\n        description: \"JSON object containing hash and base64otsfile.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              required:\n                - \"hash\"\n              properties:\n                hash:\n                  $ref: '#/components/schemas/TypeHashString'\n                base64otsfile:\n                  type: \"string\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                # TODO: describe response\n                type: \"object\"\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /ots_info:\n    post:\n      tags:\n        - \"ots\"\n        - \"optional features\"\n      summary: \"Get information about an OTS file\"\n      description: \"If base64 of the OTS file is not supplied, look for local OTS file named after the supplied hash suffixed with .ots.\"\n      operationId: \"otsInfo\"\n      requestBody:\n        description: \"JSON object containing hash and/or base64otsfile.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              properties:\n                hash:\n                  $ref: '#/components/schemas/TypeHashString'\n                base64otsfile:\n                  type: \"string\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                # TODO: describe response\n                type: \"object\"\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\n  /ots_getfile/{hash}:\n    get:\n      parameters:\n        - in: \"path\"\n          name: \"hash\"\n          description: \"Stamped hash\"\n          required: true\n          schema:\n            type: \"string\"\n      tags:\n        - \"ots\"\n        - \"optional features\"\n      summary: \"Get the OTS file of the stamped hash.\"\n      description: \"Returns the OTS file of the stamped hash.\"\n      operationId: \"getOtsFile\"\n      responses:\n        '200':\n          description: \"successful operation\"\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '403':\n          $ref: '#/components/schemas/ApiResponseNotAllowed'\n        '503':\n          description: \"Resource temporarily unavailable\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiResponseTemporarilyUnavailable'\ncomponents:\n  schemas:\n    WatchedAddress:\n      type: \"object\"\n      required:\n        - \"address\"\n        - \"unconfirmedCallbackURL\"\n        - \"confirmedCallbackURL\"\n        - \"eventMessage\"\n      properties:\n        id:\n          type: \"string\"\n        event:\n          type: \"string\"\n        imported:\n          type: \"string\"\n          enum: [\"0\",\"1\"]\n        inserted:\n          type: \"string\"\n          enum: [\"0\",\"1\"]\n        address:\n          $ref: '#/components/schemas/TypeAddressString'\n        unconfirmedCallbackURL:\n          description: \"Async callback in case of activity on address\"\n          type: \"string\"\n          format: \"url\"\n        confirmedCallbackURL:\n          description: \"Async callback in case of activity on address\"\n          type: \"string\"\n          format: \"url\"\n        estimatesmartfee2blocks:\n          type: \"string\"\n        estimatesmartfee6blocks:\n          type: \"string\"\n        estimatesmartfee36blocks:\n          type: \"string\"\n        estimatesmartfee144blocks:\n          type: \"string\"\n        watching_since:\n          type: \"string\"\n        eventMessage:\n          type: \"string\"\n    WatchedByXpubAddress:\n      type: \"object\"\n      required:\n        - \"id\"\n        - \"address\"\n        - \"imported\"\n        - \"unconfirmedCallbackURL\"\n        - \"confirmedCallbackURL\"\n        - \"watching_since\"\n        - \"derivation_path\"\n        - \"pub32_index\"\n      properties:\n        id:\n          type: \"string\"\n        address:\n          $ref: '#/components/schemas/TypeAddressString'\n        imported:\n          type: \"string\"\n          enum: [\"0\",\"1\"]\n        unconfirmedCallbackURL:\n          description: \"Async callback in case of activity on address\"\n          type: \"string\"\n          format: \"url\"\n        confirmedCallbackURL:\n          description: \"Async callback in case of activity on address\"\n          type: \"string\"\n          format: \"url\"\n        watching_since:\n          type: \"string\"\n        derivation_path:\n          type: \"string\"\n        pub32_index:\n          type: \"string\"\n    UnusedWatchXPubAddress:\n      type: \"object\"\n      required:\n        - \"pub32_watch_id\"\n        - \"pub32_label\"\n        - \"pub32\"\n        - \"address_pub32_index\"\n        - \"address\"\n      properties:\n        pub32_watch_id:\n          type: \"string\"\n        address:\n          $ref: '#/components/schemas/TypeAddressString'\n        pub32:\n          $ref: '#/components/schemas/TypeXpubString'\n        pub32_label:\n          type: \"string\"\n        address_pub32_index:\n          type: \"string\"\n    TransactionsSpending:\n      type: \"object\"\n      required:\n        - \"address\"\n        - \"category\"\n        - \"amount\"\n        - \"label\"\n        - \"vout\"\n        - \"fee\"\n        - \"confirmations\"\n        - \"blockhash\"\n        - \"blockindex\"\n        - \"blocktime\"\n        - \"txid\"\n        - \"time\"\n        - \"timereceived\"\n        - \"comment\"\n        - \"bip125-replaceable\"\n        - \"abandoned\"\n      properties:\n        address:\n          $ref: '#/components/schemas/TypeAddressString'\n        category:\n          $ref: 'string'\n        amount:\n          type: \"number\"\n        label:\n          type: \"string\"\n        vout:\n          type: \"integer\"\n        fee:\n          type: \"number\"\n        confirmations:\n          type: \"integer\"\n        blockhash:\n          $ref: '#/components/schemas/TypeHashString'\n        blockindex:\n          $ref: 'number'\n        blocktime:\n          type: \"number\"\n        txid:\n          $ref: '#/components/schemas/TypeHashString'\n        time:\n          type: \"number\"\n        timereceived:\n          type: \"number\"\n        comment:\n          type: \"string\"\n        bip125-replaceable:\n          type: \"string\"\n        abandoned:\n          type: \"boolean\"\n    WatchXPubTxn:\n      type: \"object\"\n      required:\n        - \"label\"\n        - \"address\"\n        - \"txid\"\n        - \"confirmations\"\n        - \"blockheight\"\n        - \"v_out\"\n        - \"amount\"\n        - \"blockhash\"\n        - \"blocktime\"\n        - \"timereceived\"\n      properties:\n        label:\n          type: \"string\"\n        address:\n          $ref: '#/components/schemas/TypeAddressString'\n        txid:\n          $ref: '#/components/schemas/TypeHashString'\n        confirmations:\n          type: \"integer\"\n        v_out:\n          type: \"integer\"\n        amount:\n          type: \"number\"\n        blockhash:\n          $ref: '#/components/schemas/TypeHashString'\n        blocktime:\n          type: \"number\"\n        timereceived:\n          type: \"number\"\n    WatchedXpub:\n      type: \"object\"\n      required:\n        - \"id\"\n        - \"pub32\"\n        - \"label\"\n        - \"derivation_path\"\n        - \"last_imported_n\"\n        - \"unconfirmedCallbackURL\"\n        - \"confirmedCallbackURL\"\n        - \"watching_since\"\n      properties:\n        id:\n          type: \"string\"\n        pub32:\n          $ref: '#/components/schemas/TypeXpubString'\n        label:\n          type: \"string\"\n        derivation_path:\n          type: \"string\"\n        last_imported_n:\n          type: \"string\"\n        unconfirmedCallbackURL:\n          description: \"Async callback in case of activity on address\"\n          type: \"string\"\n          format: \"url\"\n        confirmedCallbackURL:\n          description: \"Async callback in case of activity on address\"\n          type: \"string\"\n          format: \"url\"\n        watching_since:\n          type: \"string\"\n    Balance:\n      type: \"object\"\n      required:\n        - \"balance\"\n      properties:\n        balance:\n          type: \"number\"\n    Balances:\n      type: \"object\"\n      required:\n        - \"balances\"\n      properties:\n        balances:\n          type: \"object\"\n    Block:\n      type: \"object\"\n      required:\n        - \"address\"\n        - \"callback\"\n      properties:\n        id:\n          type: \"integer\"\n        hash:\n          $ref: '#/components/schemas/TypeHashString'\n        confirmations:\n          type: \"integer\"\n        strippedsize:\n          type: \"integer\"\n        size:\n          type: \"integer\"\n        weight:\n          type: \"integer\"\n        height:\n          type: \"integer\"\n        version:\n          type: \"integer\"\n        versionHex:\n          $ref: '#/components/schemas/TypeInt32HexString'\n        merkleroot:\n          $ref: '#/components/schemas/TypeHashString'\n        tx:\n          type: \"array\"\n          items:\n            $ref: '#/components/schemas/TypeHashString'\n        time:\n          type: \"integer\"\n        mediantime:\n          type: \"integer\"\n        nonce:\n          type: \"integer\"\n        bits:\n          $ref: '#/components/schemas/TypeInt32HexString'\n        difficulty:\n          type: 'integer'\n        chainwork:\n          $ref: '#/components/schemas/TypeHashString'\n        nTx:\n          type: 'integer'\n        previousblockhash:\n          $ref: '#/components/schemas/TypeHashString'\n        nextblockhash:\n          $ref: '#/components/schemas/TypeHashString'\n    Transaction:\n      type: \"object\"\n      properties:\n        txid:\n          $ref: '#/components/schemas/TypeHashString'\n        hash:\n          $ref: '#/components/schemas/TypeHashString'\n        version:\n          type: \"integer\"\n        size:\n          type: \"integer\"\n        vsize:\n          type: \"integer\"\n        locktime:\n          type: \"integer\"\n        vin:\n          type: \"array\"\n          items:\n            $ref: '#/components/schemas/Input'\n        vout:\n          type: \"array\"\n          items:\n            $ref: '#/components/schemas/Output'\n        hex:\n          $ref: '#/components/schemas/TypeHexString'\n        blockhash:\n          $ref: '#/components/schemas/TypeHashString'\n        confirmations:\n          type: \"integer\"\n        time:\n          type: \"integer\"\n        blocktime:\n          type: \"integer\"\n    BlockchainInfo:\n      type: \"object\"\n      properties:\n        chain:\n          type: \"string\"\n          enum: [\"test\", \"main\"]\n        blocks:\n          type: \"integer\"\n        headers:\n          type: \"integer\"\n        bestblockhash:\n          $ref: '#/components/schemas/TypeHashString'\n        difficulty:\n          type: \"number\"\n        mediantime:\n          type: \"integer\"\n        verificationprogress:\n          type: \"number\"\n        initialblockdownload:\n          type: \"boolean\"\n        chainwork:\n          $ref: '#/components/schemas/TypeHashString'\n        size_on_disk:\n          type: \"integer\"\n        pruned:\n          type: \"boolean\"\n        warnings:\n          type: \"string\"\n        softforks:\n          type: \"array\"\n          items:\n            $ref: '#/components/schemas/TypeSoftFork'\n        bip9_softforks:\n          type: \"object\"\n          additionalProperties:\n            $ref: '#/components/schemas/TypeBip9SoftFork'\n    InstallationInfo:\n      type: \"object\"\n      properties:\n        api_versions:\n          type: \"array\"\n          items:\n            type: \"string\"\n        setup_version:\n          type: \"string\"\n        bitcoin_version:\n          type: \"string\"\n        features:\n          type: \"array\"\n          items:\n            type: \"object\"\n            properties:\n              name:\n                type: \"string\"\n              label:\n                type: \"string\"\n              host:\n                type: \"string\"\n              docker:\n                type: \"string\"\n              networks:\n                type: \"array\"\n                items:\n                  type: \"string\"\n              extra:\n                type: \"object\"\n        devmode:\n          type: \"boolean\"\n    Input:\n      type: \"object\"\n      properties:\n        txid:\n          $ref: '#/components/schemas/TypeHashString'\n        vout:\n          type: \"integer\"\n        scriptSig:\n          type: \"object\"\n          properties:\n            asm:\n              type: \"string\"\n            hex:\n              $ref: '#/components/schemas/TypeHexString'\n    Output:\n      type: \"object\"\n      properties:\n        value:\n          type: \"number\"\n        n:\n          type: \"integer\"\n        scriptPubKey:\n          type: \"object\"\n          properties:\n            asm:\n              type: \"string\"\n            hex:\n              $ref: '#/components/schemas/TypeHexString'\n            reqSigs:\n              type: \"integer\"\n            type:\n              type: \"string\"\n            addresses:\n              type: \"array\"\n              items:\n                $ref: '#/components/schemas/TypeAddressString'\n    MempoolInfo:\n      type: \"object\"\n      properties:\n        size:\n          type: \"integer\"\n        bytes:\n          type: \"integer\"\n        usage:\n          type: \"integer\"\n        maxmempool:\n          type: \"integer\"\n        mempoolminfee:\n          type: \"number\"\n        minrelaytxfee:\n          type: \"integer\"\n    TypeHexString:\n      description: \"variable length hex string\"\n      type: \"string\"\n      pattern: \"^[a-fA-F0-9]+$\"\n    TypeAddressString:\n      description: \"base58 check encoded address\"\n      type: \"string\"\n      pattern: \"^[a-km-zA-HJ-NP-Z1-9]{26,35}$\"\n    TypeXpubString:\n      description: \"base58 check encoded xpub\"\n      type: \"string\"\n      pattern: \"^[a-km-zA-HJ-NP-Z1-9]{78,112}$\"\n    TypeHashString:\n      description: \"64 character hex string\"\n      type: \"string\"\n      pattern: \"^[a-fA-F0-9]{64}$\"\n    TypeInt32HexString:\n      description: \"8 character hex string\"\n      type: \"string\"\n      pattern: \"^([a-fA-F0-9][a-fA-F0-9]){1,4}$\"\n    TypeSoftFork:\n      type: \"object\"\n      properties:\n        id:\n          type: \"string\"\n        version:\n          type: \"integer\"\n        reject:\n          type: \"object\"\n          properties:\n            status:\n              type: \"boolean\"\n    TypeBip9SoftFork:\n      type: \"object\"\n      properties:\n        status:\n          type: \"string\"\n        startTime:\n          type: \"integer\"\n        timeout:\n          type: \"integer\"\n        since:\n          type: \"integer\"\n    ApiResponseTemporarilyUnavailable:\n      type: \"object\"\n      properties:\n        reason:\n          type: \"string\"\n    ApiResponseNotAllowed:\n      description: Access token is missing or invalid\n    ApiResponseNotFound:\n      description: Not found\n    ApiResponseInvalidInput:\n      description: Invalid Input\n    LnWithdrawSatoshiAmountPayload:\n      type: \"object\"\n      properties:\n        destination:\n          type: string\n        satoshi:\n          type: number\n        feerate:\n          type: string\n          enum: \n            - urgent\n            - normal\n            - slow\n      required:\n        - destination\n        - satoshi\n    LnWithdrawAllPayload:\n      type: \"object\"\n      properties:\n        destination:\n          type: string\n        all:\n          type: boolean\n          enum: \n            - true\n        feerate:\n          type: string\n          enum: \n            - urgent\n            - normal\n            - slow\n      required:\n        - destination\n        - all\n  securitySchemes:\n    BearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n"
		}
	},
	"Error": "parse: parse spec: paths: /getbalancebyxpub/{xpub}: get: operation \"getXpubBalanceByXpub\": responses: 403: resolve \"#/components/schemas/ApiResponseNotAllowed\" reference: invalid response reference: \"#/components/schemas/ApiResponseNotAllowed\""
}