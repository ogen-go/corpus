{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hashicorp/consul-api-gateway"
		},
		"file": {
			"name": "v1.yaml",
			"size": 0,
			"path": "internal/api/schemas/v1.yaml",
			"byteSize": 23115,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: Consul API Gateway\n  description:\n   Consul API Gateway Management API\n  contact:\n    name: Consul API Gateway Team\n    email: consul-api-gateway@hashicorp.com\n    url: http://hashicorp.com\n  license:\n    name: Mozilla Public License 2.0\n    url: https://www.mozilla.org/en-US/MPL/2.0/\npaths:\n  \"/health\":\n    get:\n      description: 'Returns health status of all registered Gateways and controllers.'\n      operationId: health\n      responses:\n        '200':\n          description: health response\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/HealthStatus\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n  \"/namespaces/{namespace}/gateways\":\n    get:\n      description: 'Returns all configured gateways in the given namespace.'\n      operationId: listGatewaysInNamespace\n      parameters:\n      - name: namespace\n        in: path\n        description: Namespace of gateways to fetch\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: gateway response\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/GatewayPage\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n  \"/gateways\":\n    get:\n      description: 'Returns all configured gateways.'\n      operationId: listGateways\n      parameters:\n      - name: namespaces\n        in: query\n        description: The namespaces of gateways to list\n        schema:\n          type: string\n      responses:\n        '200':\n          description: gateway response\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/GatewayPage\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n    post:\n      description: 'Creates a new gateway.'\n      operationId: createGateway\n      requestBody:\n        description: Gateway to create\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Gateway\"\n      responses:\n        '201':\n          description: gateway response\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Gateway\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n  \"/namespaces/{namespace}/gateways/{name}\":\n    get:\n      description: Returns the gateway based off of its unique name.\n      operationId: getGatewayInNamespace\n      parameters:\n      - name: namespace\n        in: path\n        description: Namespace of gateway to fetch\n        required: true\n        schema:\n          type: string\n      - name: name\n        in: path\n        description: Name of gateway to fetch\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: gateway response\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Gateway\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n    delete:\n      description: deletes a single gateway based on the Name supplied\n      operationId: deleteGatewayInNamespace\n      parameters:\n      - name: namespace\n        in: path\n        description: Namespace of gateway to fetch\n        required: true\n        schema:\n          type: string\n      - name: name\n        in: path\n        description: Name of gateway to delete\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          description: gateway deleted\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n  \"/gateways/{name}\":\n    get:\n      description: Returns a gateway in the `\"default\"` namespace based off of its unique name.\n      operationId: getGateway\n      parameters:\n      - name: name\n        in: path\n        description: Name of gateway to fetch\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: gateway response\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Gateway\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n    delete:\n      description: deletes a single gateway in the `\"default\"` namespace based on the name supplied\n      operationId: deleteGateway\n      parameters:\n      - name: name\n        in: path\n        description: Name of gateway to delete\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          description: gateway deleted\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n  \"/http-routes\":\n    get:\n      description: 'Returns all http routes in the `\"default\"` namespace.'\n      operationId: listHTTPRoutes\n      parameters:\n      - name: namespaces\n        in: query\n        description: The namespaces of routes to list\n        schema:\n          type: string\n      responses:\n        '200':\n          description: route response\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/HTTPRoutePage\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n    post:\n      description: 'Creates a new http route.'\n      operationId: createHTTPRoute\n      requestBody:\n        description: HTTPRoute to add\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/HTTPRoute\"\n      responses:\n        '201':\n          description: route response\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/HTTPRoute\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n  \"/namespaces/{namespace}/http-routes\":\n    get:\n      description: 'Returns all http routes in a given namespace.'\n      operationId: listHTTPRoutesInNamespace\n      parameters:\n      - name: namespace\n        in: path\n        description: The namespace of routes to list\n        schema:\n          type: string\n      responses:\n        '200':\n          description: route response\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/HTTPRoutePage\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n  \"/namespaces/{namespace}/http-routes/{name}\":\n    get:\n      description: Returns the http route based off of its unique name.\n      operationId: getHTTPRouteInNamespace\n      parameters:\n      - name: namespace\n        in: path\n        description: Namespace of route to fetch\n        required: true\n        schema:\n          type: string\n      - name: name\n        in: path\n        description: Name of route to fetch\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: route response\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/HTTPRoute\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n    delete:\n      description: deletes a single http route in the given namespace based on the name supplied\n      operationId: deleteHTTPRouteInNamespace\n      parameters:\n      - name: namespace\n        in: path\n        description: Namespace of http route to fetch\n        required: true\n        schema:\n          type: string\n      - name: name\n        in: path\n        description: Name of http route to delete\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          description: route deleted\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n  \"/http-routes/{name}\":\n    get:\n      description: Returns the http route in the `\"default\"` namespace based off of its unique name.\n      operationId: getHTTPRoute\n      parameters:\n      - name: name\n        in: path\n        description: Name of route to fetch\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: route response\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/HTTPRoute\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n    delete:\n      description: deletes a single http route in the `\"default\"` namespace based on the name supplied\n      operationId: deleteHTTPRoute\n      parameters:\n      - name: name\n        in: path\n        description: Name of http route to delete\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          description: route deleted\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n  \"/namespaces/{namespace}/tcp-routes\":\n    get:\n      description: 'Returns all tcp routes in the given namespace.'\n      operationId: listTCPRoutesInNamespace\n      parameters:\n      - name: namespace\n        in: path\n        description: Namespace of routes to fetch\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: route response\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/TCPRoutePage\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n  \"/tcp-routes\":\n    get:\n      description: 'Returns all tcp routes in the `\"default\"` namespace.'\n      operationId: listTCPRoutes\n      parameters:\n      - name: namespaces\n        in: query\n        description: Namespaces of routes to fetch\n        schema:\n          type: string\n      responses:\n        '200':\n          description: route response\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/TCPRoutePage\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n    post:\n      description: 'Creates a new tcp route.'\n      operationId: createTCPRoute\n      requestBody:\n        description: TCPRoute to add\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/TCPRoute\"\n      responses:\n        '201':\n          description: route response\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/TCPRoute\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n  \"/namespaces/{namespace}/tcp-routes/{name}\":\n    get:\n      description: Returns the tcp route in the given namespace based off of its unique name.\n      operationId: getTCPRouteInNamespace\n      parameters:\n      - name: namespace\n        in: path\n        description: Namespace of route to fetch\n        required: true\n        schema:\n          type: string\n      - name: name\n        in: path\n        description: Name of route to fetch\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: route response\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/TCPRoute\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n    delete:\n      description: deletes a single tcp route in the given namespace based on the Name supplied\n      operationId: deleteTCPRouteInNamespace\n      parameters:\n      - name: namespace\n        in: path\n        description: Namespace of tcp route to fetch\n        required: true\n        schema:\n          type: string\n      - name: name\n        in: path\n        description: Name of tcp route to delete\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          description: route deleted\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n  \"/tcp-routes/{name}\":\n    get:\n      description: Returns the tcp route in the `\"default\"` namespace based off of its unique name.\n      operationId: getTCPRoute\n      parameters:\n      - name: name\n        in: path\n        description: Name of route to fetch\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: route response\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/TCPRoute\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n    delete:\n      description: deletes a single tcp route in the `\"default\"` namespace based on the Name supplied\n      operationId: deleteTCPRoute\n      parameters:\n      - name: name\n        in: path\n        description: Name of tcp route to delete\n        required: true\n        schema:\n          type: string\n      responses:\n        '204':\n          description: route deleted\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\ncomponents:\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      in: header\n      name: X-Consul-Token\n  schemas:\n    GatewayPage:\n      type: object\n      required:\n      - gateways\n      properties:\n        gateways:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/Gateway\"\n          minItems: 0\n        meta:\n          type: object\n    Gateway:\n      type: object\n      required:\n      - name\n      - listeners\n      properties:\n        name:\n          type: string\n          minLength: 1\n        namespace:\n          type: string\n        listeners:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/Listener\"\n          minItems: 1\n        meta:\n          type: object\n    Listener:\n      type: object\n      required:\n      - hostname\n      - port\n      - protocol\n      properties:\n        name:\n          type: string\n        hostname:\n          type: string\n          default: \"*\"\n        port:\n          type: integer\n          minimum: 1\n          maximum: 65535\n        protocol:\n          type: string\n          enum:\n          - http\n          - tcp\n        tls:\n          \"$ref\": \"#/components/schemas/TLSConfiguration\"\n    TLSConfiguration:\n      type: object\n      properties:\n        minVersion:\n          type: string\n        maxVersion:\n          type: string\n        cipherSuites:\n          type: array\n          items:\n            type: string\n        certificates:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/Certificate\"\n    Certificate:\n      type: object\n      properties:\n        vault:\n          \"$ref\": \"#/components/schemas/VaultCertificate\"\n    VaultCertificate:\n      type: object\n      required:\n        - path\n        - chainField\n        - privateKeyField\n      properties:\n        path:\n          type: string\n          minLength: 1\n        chainField:\n          type: string\n          minLength: 1\n        privateKeyField:\n          type: string\n          minLength: 1\n    HTTPRoutePage:\n      type: object\n      required:\n      - routes\n      properties:\n        routes:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/HTTPRoute\"\n        meta:\n          type: object\n    GatewayReference:\n      type: object\n      required:\n      - name\n      properties:\n        name:\n          type: string\n          minLength: 1\n        namespace:\n          type: string\n    HTTPRoute:\n      type: object\n      required:\n      - name\n      - gateways\n      properties:\n        name:\n          type: string\n          minLength: 1\n        namespace:\n          type: string\n        gateways:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/GatewayReference\"\n          minItems: 1\n        hostnames:\n          type: array\n          items:\n            type: string\n        rules:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/HTTPRouteRule\"\n    HTTPRouteRule:\n      type: object\n      properties:\n        matches:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/HTTPMatch\"\n        filters:\n          \"$ref\": \"#/components/schemas/HTTPFilters\"\n        services:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/HTTPService\"\n    HTTPService:\n      type: object\n      required:\n      - name\n      properties:\n        name:\n          type: string\n        namespace:\n          type: string\n        weight:\n          type: number\n        filters:\n          \"$ref\": \"#/components/schemas/HTTPFilters\"\n    HTTPFilters:\n      type: object\n      properties:\n        headers:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/HTTPHeaderFilter\"\n    HTTPHeaderFilter:\n      type: object\n      properties:\n        set:\n          type: object\n          additionalProperties:\n            type: string\n        add:\n          type: object\n          additionalProperties:\n            type: string\n        remove:\n          type: array\n          items:\n            type: string\n    HTTPMatch:\n      type: object\n      properties:\n        path:\n          \"$ref\": \"#/components/schemas/HTTPPathMatch\"\n        headers:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/HTTPHeaderMatch\"\n        query:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/HTTPQueryMatch\"\n        method:\n          type: string\n          enum:\n          - CONNECT\n          - DELETE\n          - GET\n          - HEAD\n          - OPTIONS\n          - PATCH\n          - POST\n          - PUT\n          - TRACE\n    HTTPPathMatch:\n      type: object\n      required:\n      - matchOn\n      - value\n      properties:\n        matchOn:\n          type: string\n          enum:\n          - exact\n          - prefix\n          - regularExpression\n        value:\n          type: string\n    HTTPHeaderMatch:\n      type: object\n      required:\n      - matchOn\n      - name\n      - value\n      properties:\n        matchOn:\n          type: string\n          enum:\n          - exact\n          - prefix\n          - suffix\n          - present\n          - regularExpression\n        name:\n          type: string\n        value:\n          type: string\n    HTTPQueryMatch:\n      type: object\n      required:\n      - matchOn\n      - name\n      - value\n      properties:\n        matchOn:\n          type: string\n          enum:\n          - exact\n          - present\n          - regularExpression\n        name:\n          type: string\n        value:\n          type: string\n    TCPRoutePage:\n      type: object\n      required:\n      - routes\n      properties:\n        routes:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/TCPRoute\"\n        meta:\n          type: object\n    TCPRoute:\n      type: object\n      required:\n      - name\n      - gateways\n      properties:\n        name:\n          type: string\n          minLength: 1\n        namespace:\n          type: string\n        gateways:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/GatewayReference\"\n          minItems: 1\n        services:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/TCPService\"\n          minItems: 1\n          maxItems: 1 # this is a max for now until we support TCP load balancing\n    TCPService:\n      type: object\n      required:\n      - name\n      properties:\n        name:\n          type: string\n          minLength: 1\n        namespace:\n          type: string\n        weight:\n          type: number\n    HealthStatus:\n      type: object\n      required:\n      - controllers\n      - gateways\n      properties:\n        controllers:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/ControllerHealth\"\n        gateways:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/GatewayHealth\"\n    ControllerHealth:\n      type: object\n      required:\n      - name\n      - id\n      - status\n      properties:\n        name:\n          type: string\n        id:\n          type: string\n        status:\n          type: string\n    GatewayHealth:\n      type: object\n      required:\n      - name\n      - id\n      - status\n      properties:\n        name:\n          type: string\n        id:\n          type: string\n        status:\n          type: string\n    Error:\n      type: object\n      required:\n      - message\n      - code\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n          minLength: 1",
			"canonicalURL": "/github.com/hashicorp/consul-api-gateway@2a062885dbfe434b79eb95d965ecdfa3eb818de9/-/blob/internal/api/schemas/v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/hashicorp/consul-api-gateway/blob/2a062885dbfe434b79eb95d965ecdfa3eb818de9/internal/api/schemas/v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/namespaces/{namespace}/http-routes\": get: operation \"listHTTPRoutesInNamespace\": parameters: parse parameter \"namespace\": at 1:12058: path parameters must be required"
}