{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/EICPCohort7/capstone-order-tracker"
		},
		"file": {
			"name": "CustomerRouterDocs.yml",
			"size": 0,
			"path": "docs/CustomerRouterDocs.yml",
			"byteSize": 5374,
			"content": "openapi: \"3.0.2\"\ninfo:\n  title: Order Tracker API\n  version: \"1.0\"\nservers:\n  - url: https://\npaths:\n  /customers:\n    get:\n      description: \"Returns a list of all active customers.\"\n      parameters: []\n      responses:\n        \"200\":\n          description: Successfully returned a list of active customers.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Customer\"\n\n        \"500\":\n          description: API server connection refused\n\n    post:\n      description: \"Let a user create a new customer\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Customer\"\n      responses:\n        \"201\":\n          description: Successfully added a new customer\n        \"500\":\n          description: Sequelize couldn't validate body, likely missing required object fields\n\n  /customers/{customer_id}:\n    get:\n      description: \"Obtain information about a customer from their unique customer_id\"\n      parameters:\n        - name: customer_id\n          in: path\n          required: true\n          schema:\n            type: string\n\n      responses:\n        \"200\":\n          description: Successfully returned the customer referenced by customer_id.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Customer\"\n\n        \"404\":\n          description: Customer with passed customer_id not found\n        \n    patch:\n      description: \"Edit the existing customer referenced by customer_id\"\n      parameters:\n        - name: customer_id\n          description: The customer id of the customer to be edited/patched.\n          in: path\n          required: true\n          schema:\n            type: string\n\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Customer\"\n      responses:\n        \"200\":\n          description: Successfully edited the customer referenced by customer_id.\n        \"404\":\n          description: Request successful but no customer found with matching customer_id\n\n    put:\n      description: \"Modify existing customer referenced by customer_id.\"\n      parameters:\n        - name: customer_id\n          description: The code of the customer to be modified.\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Customer\"\n      responses:\n        \"200\":\n          description: Successfully modified the customer referenced by customer_id.\n        \"404\":\n          description: Request successful but no customer found with matching customer_id\n\n    delete:\n      description: \"Delete a customer by customer_id\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n           schema:\n            $ref: \"#/components/schemas/Customer\"\n      responses:\n        \"204\":\n          description: Successfully deleted the customer referenced by customer_id.\n        \"404\":\n          description: Request successful but no customer found with matching customer_id\n\n  /customers/all:\n    get:\n      description: \"Returns a list of all customers (active and non-active).\"\n      parameters: []\n      responses:\n        \"200\":\n          description: Successfully returned a list of all customers.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Customer\"\n\n        \"500\":\n          description: API Server connection refused\n  \n  /customers/search?email=[email]:\n    get:\n      description: \"Search for customer by email.\"\n      parameters: \n        - name: email\n          description: The email of the customer to be found\n          in: query\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successfully found customer with passed email parameter.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Customer\"\n\n        \"404\":\n          description: Request successful but no customer found by the passed email parameter\n\n\ncomponents:\n  schemas:\n    Customer:\n      type: object\n      properties:\n        customer_id:\n          type: integer\n        first_name:\n          type: string\n        middle_initial:\n          type: string\n        last_name:\n          type: string\n        phone:\n          type: string\n        email:\n          type: string\n        customer_notes:\n          type: string\n        billing_address_id:\n          type: integer\n        is_active:\n          type: boolean\n    \n    Address:\n      type: object\n      properties:\n        address_id:\n          type: integer\n        street:\n          type: string\n        apt_num:\n          type: string\n        city:\n          type: string\n        state:\n          type: string\n        zip:\n          type: string\n        country:\n          type: string\n\n  \n",
			"canonicalURL": "/github.com/EICPCohort7/capstone-order-tracker@856fd04634cca676c6d5bf3a1fe3bfb01192c8a4/-/blob/docs/CustomerRouterDocs.yml",
			"externalURLs": [
				{
					"url": "https://github.com/EICPCohort7/capstone-order-tracker/blob/856fd04634cca676c6d5bf3a1fe3bfb01192c8a4/docs/CustomerRouterDocs.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/customers/search?email=[email]\": get: at docs/CustomerRouterDocs.yml:138:7: parse path \"/customers/search?email=[email]\": path MUST NOT contain a query string"
}