{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/amazonaws.com/ds/2015-04-16/openapi.yaml",
			"byteSize": 288257,
			"content": "openapi: 3.0.0\ninfo:\n  version: '2015-04-16'\n  x-release: v4\n  title: AWS Directory Service\n  description: '\u003cfullname\u003eDirectory Service\u003c/fullname\u003e \u003cp\u003eDirectory Service is a web service that makes it easy for you to setup and run directories in the Amazon Web Services cloud, or connect your Amazon Web Services resources with an existing self-managed Microsoft Active Directory. This guide provides detailed information about Directory Service operations, data types, parameters, and errors. For information about Directory Services features, see \u003ca href=\"https://aws.amazon.com/directoryservice/\"\u003eDirectory Service\u003c/a\u003e and the \u003ca href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html\"\u003eDirectory Service Administration Guide\u003c/a\u003e.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eAmazon Web Services provides SDKs that consist of libraries and sample code for various programming languages and platforms (Java, Ruby, .Net, iOS, Android, etc.). The SDKs provide a convenient way to create programmatic access to Directory Service and other Amazon Web Services services. For more information about the Amazon Web Services SDKs, including how to download and install them, see \u003ca href=\"http://aws.amazon.com/tools/\"\u003eTools for Amazon Web Services\u003c/a\u003e.\u003c/p\u003e \u003c/note\u003e'\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: ds\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/ds-2015-04-16.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/ds/'\nservers:\n  - url: 'http://ds.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The Directory Service multi-region endpoint\n  - url: 'https://ds.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The Directory Service multi-region endpoint\n  - url: 'http://ds.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Directory Service endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://ds.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Directory Service endpoint for China (Beijing) and China (Ningxia)\nx-hasEquivalentPaths: true\npaths:\n  /#X-Amz-Target=DirectoryService_20150416.AcceptSharedDirectory:\n    post:\n      operationId: AcceptSharedDirectory\n      description: Accepts a directory sharing request that was sent from the directory owner account.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AcceptSharedDirectoryResult'\n        '480':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '482':\n          description: DirectoryAlreadySharedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryAlreadySharedException'\n        '483':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '484':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AcceptSharedDirectoryRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.AcceptSharedDirectory\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.AddIpRoutes:\n    post:\n      operationId: AddIpRoutes\n      description: '\u003cp\u003eIf the DNS server for your self-managed domain uses a publicly addressable IP address, you must add a CIDR address block to correctly route traffic to and from your Microsoft AD on Amazon Web Services. \u003ci\u003eAddIpRoutes\u003c/i\u003e adds this address block. You can also use \u003ci\u003eAddIpRoutes\u003c/i\u003e to facilitate routing traffic that uses public IP ranges from your Microsoft AD on Amazon Web Services to a peer VPC. \u003c/p\u003e \u003cp\u003eBefore you call \u003ci\u003eAddIpRoutes\u003c/i\u003e, ensure that all of the required permissions have been explicitly granted through a policy. For details about what permissions are required to run the \u003ci\u003eAddIpRoutes\u003c/i\u003e operation, see \u003ca href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html\"\u003eDirectory Service API Permissions: Actions, Resources, and Conditions Reference\u003c/a\u003e.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AddIpRoutesResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: EntityAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityAlreadyExistsException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: DirectoryUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryUnavailableException'\n        '484':\n          description: IpRouteLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IpRouteLimitExceededException'\n        '485':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '486':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddIpRoutesRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.AddIpRoutes\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.AddRegion:\n    post:\n      operationId: AddRegion\n      description: Adds two domain controllers in the specified Region for the specified directory.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AddRegionResult'\n        '480':\n          description: DirectoryUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryUnavailableException'\n        '481':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '482':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '483':\n          description: DirectoryAlreadyInRegionException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryAlreadyInRegionException'\n        '484':\n          description: UnsupportedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedOperationException'\n        '485':\n          description: DirectoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryDoesNotExistException'\n        '486':\n          description: RegionLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegionLimitExceededException'\n        '487':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '488':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '489':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddRegionRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.AddRegion\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.AddTagsToResource:\n    post:\n      operationId: AddTagsToResource\n      description: Adds or overwrites one or more tags for the specified directory. Each directory can have a maximum of 50 tags. Each tag consists of a key and optional value. Tag keys must be unique to each resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AddTagsToResourceResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '482':\n          description: TagLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagLimitExceededException'\n        '483':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '484':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddTagsToResourceRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.AddTagsToResource\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.CancelSchemaExtension:\n    post:\n      operationId: CancelSchemaExtension\n      description: 'Cancels an in-progress schema extension to a Microsoft AD directory. Once a schema extension has started replicating to all domain controllers, the task can no longer be canceled. A schema extension can be canceled during any of the following states; \u003ccode\u003eInitializing\u003c/code\u003e, \u003ccode\u003eCreatingSnapshot\u003c/code\u003e, and \u003ccode\u003eUpdatingSchema\u003c/code\u003e.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CancelSchemaExtensionResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CancelSchemaExtensionRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.CancelSchemaExtension\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.ConnectDirectory:\n    post:\n      operationId: ConnectDirectory\n      description: '\u003cp\u003eCreates an AD Connector to connect to a self-managed directory.\u003c/p\u003e \u003cp\u003eBefore you call \u003ccode\u003eConnectDirectory\u003c/code\u003e, ensure that all of the required permissions have been explicitly granted through a policy. For details about what permissions are required to run the \u003ccode\u003eConnectDirectory\u003c/code\u003e operation, see \u003ca href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html\"\u003eDirectory Service API Permissions: Actions, Resources, and Conditions Reference\u003c/a\u003e.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConnectDirectoryResult'\n        '480':\n          description: DirectoryLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryLimitExceededException'\n        '481':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '482':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '483':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ConnectDirectoryRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.ConnectDirectory\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.CreateAlias:\n    post:\n      operationId: CreateAlias\n      description: '\u003cp\u003eCreates an alias for a directory and assigns the alias to the directory. The alias is used to construct the access URL for the directory, such as \u003ccode\u003ehttp://\u0026lt;alias\u0026gt;.awsapps.com\u003c/code\u003e.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eAfter an alias has been created, it cannot be deleted or reused, so this operation should only be used when absolutely necessary.\u003c/p\u003e \u003c/important\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateAliasResult'\n        '480':\n          description: EntityAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityAlreadyExistsException'\n        '481':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '484':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateAliasRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.CreateAlias\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.CreateComputer:\n    post:\n      operationId: CreateComputer\n      description: Creates an Active Directory computer object in the specified directory.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateComputerResult'\n        '480':\n          description: AuthenticationFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthenticationFailedException'\n        '481':\n          description: DirectoryUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryUnavailableException'\n        '482':\n          description: EntityAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityAlreadyExistsException'\n        '483':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '484':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '485':\n          description: UnsupportedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedOperationException'\n        '486':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '487':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateComputerRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.CreateComputer\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.CreateConditionalForwarder:\n    post:\n      operationId: CreateConditionalForwarder\n      description: Creates a conditional forwarder associated with your Amazon Web Services directory. Conditional forwarders are required in order to set up a trust relationship with another domain. The conditional forwarder points to the trusted domain.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateConditionalForwarderResult'\n        '480':\n          description: EntityAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityAlreadyExistsException'\n        '481':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '482':\n          description: DirectoryUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryUnavailableException'\n        '483':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '484':\n          description: UnsupportedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedOperationException'\n        '485':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '486':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateConditionalForwarderRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.CreateConditionalForwarder\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.CreateDirectory:\n    post:\n      operationId: CreateDirectory\n      description: '\u003cp\u003eCreates a Simple AD directory. For more information, see \u003ca href=\"https://docs.aws.amazon.com/directoryservice/latest/admin-guide/directory_simple_ad.html\"\u003eSimple Active Directory\u003c/a\u003e in the \u003ci\u003eDirectory Service Admin Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eBefore you call \u003ccode\u003eCreateDirectory\u003c/code\u003e, ensure that all of the required permissions have been explicitly granted through a policy. For details about what permissions are required to run the \u003ccode\u003eCreateDirectory\u003c/code\u003e operation, see \u003ca href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html\"\u003eDirectory Service API Permissions: Actions, Resources, and Conditions Reference\u003c/a\u003e.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateDirectoryResult'\n        '480':\n          description: DirectoryLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryLimitExceededException'\n        '481':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '482':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '483':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateDirectoryRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.CreateDirectory\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.CreateLogSubscription:\n    post:\n      operationId: CreateLogSubscription\n      description: Creates a subscription to forward real-time Directory Service domain controller security logs to the specified Amazon CloudWatch log group in your Amazon Web Services account.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateLogSubscriptionResult'\n        '480':\n          description: EntityAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityAlreadyExistsException'\n        '481':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '482':\n          description: UnsupportedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedOperationException'\n        '483':\n          description: InsufficientPermissionsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InsufficientPermissionsException'\n        '484':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '485':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateLogSubscriptionRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.CreateLogSubscription\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.CreateMicrosoftAD:\n    post:\n      operationId: CreateMicrosoftAD\n      description: '\u003cp\u003eCreates a Microsoft AD directory in the Amazon Web Services Cloud. For more information, see \u003ca href=\"https://docs.aws.amazon.com/directoryservice/latest/admin-guide/directory_microsoft_ad.html\"\u003eManaged Microsoft AD\u003c/a\u003e in the \u003ci\u003eDirectory Service Admin Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eBefore you call \u003ci\u003eCreateMicrosoftAD\u003c/i\u003e, ensure that all of the required permissions have been explicitly granted through a policy. For details about what permissions are required to run the \u003ci\u003eCreateMicrosoftAD\u003c/i\u003e operation, see \u003ca href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html\"\u003eDirectory Service API Permissions: Actions, Resources, and Conditions Reference\u003c/a\u003e.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateMicrosoftADResult'\n        '480':\n          description: DirectoryLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryLimitExceededException'\n        '481':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '482':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '483':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '484':\n          description: UnsupportedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedOperationException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateMicrosoftADRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.CreateMicrosoftAD\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.CreateSnapshot:\n    post:\n      operationId: CreateSnapshot\n      description: \u003cp\u003eCreates a snapshot of a Simple AD or Microsoft AD directory in the Amazon Web Services cloud.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eYou cannot take snapshots of AD Connector directories.\u003c/p\u003e \u003c/note\u003e\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateSnapshotResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '482':\n          description: SnapshotLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SnapshotLimitExceededException'\n        '483':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '484':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateSnapshotRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.CreateSnapshot\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.CreateTrust:\n    post:\n      operationId: CreateTrust\n      description: '\u003cp\u003eDirectory Service for Microsoft Active Directory allows you to configure trust relationships. For example, you can establish a trust between your Managed Microsoft AD directory, and your existing self-managed Microsoft Active Directory. This would allow you to provide users and groups access to resources in either domain, with a single set of credentials.\u003c/p\u003e \u003cp\u003eThis action initiates the creation of the Amazon Web Services side of a trust relationship between an Managed Microsoft AD directory and an external domain. You can create either a forest trust or an external trust.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateTrustResult'\n        '480':\n          description: EntityAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityAlreadyExistsException'\n        '481':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '484':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '485':\n          description: UnsupportedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedOperationException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateTrustRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.CreateTrust\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.DeleteConditionalForwarder:\n    post:\n      operationId: DeleteConditionalForwarder\n      description: Deletes a conditional forwarder that has been set up for your Amazon Web Services directory.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteConditionalForwarderResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: DirectoryUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryUnavailableException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: UnsupportedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedOperationException'\n        '484':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '485':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteConditionalForwarderRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.DeleteConditionalForwarder\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.DeleteDirectory:\n    post:\n      operationId: DeleteDirectory\n      description: '\u003cp\u003eDeletes an Directory Service directory.\u003c/p\u003e \u003cp\u003eBefore you call \u003ccode\u003eDeleteDirectory\u003c/code\u003e, ensure that all of the required permissions have been explicitly granted through a policy. For details about what permissions are required to run the \u003ccode\u003eDeleteDirectory\u003c/code\u003e operation, see \u003ca href=\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html\"\u003eDirectory Service API Permissions: Actions, Resources, and Conditions Reference\u003c/a\u003e.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteDirectoryResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteDirectoryRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.DeleteDirectory\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.DeleteLogSubscription:\n    post:\n      operationId: DeleteLogSubscription\n      description: Deletes the specified log subscription.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteLogSubscriptionResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: UnsupportedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedOperationException'\n        '482':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '483':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteLogSubscriptionRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.DeleteLogSubscription\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.DeleteSnapshot:\n    post:\n      operationId: DeleteSnapshot\n      description: Deletes a directory snapshot.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteSnapshotResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '482':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '483':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteSnapshotRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.DeleteSnapshot\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.DeleteTrust:\n    post:\n      operationId: DeleteTrust\n      description: Deletes an existing trust relationship between your Managed Microsoft AD directory and an external domain.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteTrustResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '482':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '483':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '484':\n          description: UnsupportedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedOperationException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteTrustRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.DeleteTrust\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.DeregisterCertificate:\n    post:\n      operationId: DeregisterCertificate\n      description: Deletes from the system the certificate that was registered for secure LDAP or client certificate authentication.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeregisterCertificateResult'\n        '480':\n          description: DirectoryUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryUnavailableException'\n        '481':\n          description: DirectoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryDoesNotExistException'\n        '482':\n          description: CertificateDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CertificateDoesNotExistException'\n        '483':\n          description: CertificateInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CertificateInUseException'\n        '484':\n          description: UnsupportedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedOperationException'\n        '485':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '486':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '487':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeregisterCertificateRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.DeregisterCertificate\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.DeregisterEventTopic:\n    post:\n      operationId: DeregisterEventTopic\n      description: Removes the specified directory as a publisher to the specified Amazon SNS topic.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeregisterEventTopicResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '482':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '483':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeregisterEventTopicRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.DeregisterEventTopic\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.DescribeCertificate:\n    post:\n      operationId: DescribeCertificate\n      description: Displays information about the certificate registered for secure LDAP or client certificate authentication.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeCertificateResult'\n        '480':\n          description: DirectoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryDoesNotExistException'\n        '481':\n          description: UnsupportedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedOperationException'\n        '482':\n          description: CertificateDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CertificateDoesNotExistException'\n        '483':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '484':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '485':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeCertificateRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.DescribeCertificate\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.DescribeClientAuthenticationSettings:\n    post:\n      operationId: DescribeClientAuthenticationSettings\n      description: 'Retrieves information about the type of client authentication for the specified directory, if the type is specified. If no type is specified, information about all client authentication types that are supported for the specified directory is retrieved. Currently, only \u003ccode\u003eSmartCard\u003c/code\u003e is supported. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeClientAuthenticationSettingsResult'\n        '480':\n          description: DirectoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryDoesNotExistException'\n        '481':\n          description: UnsupportedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedOperationException'\n        '482':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '483':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '484':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '485':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeClientAuthenticationSettingsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.DescribeClientAuthenticationSettings\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.DescribeConditionalForwarders:\n    post:\n      operationId: DescribeConditionalForwarders\n      description: '\u003cp\u003eObtains information about the conditional forwarders for this account.\u003c/p\u003e \u003cp\u003eIf no input parameters are provided for RemoteDomainNames, this request describes all conditional forwarders for the specified directory ID.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeConditionalForwardersResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: DirectoryUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryUnavailableException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: UnsupportedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedOperationException'\n        '484':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '485':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeConditionalForwardersRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.DescribeConditionalForwarders\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.DescribeDirectories:\n    post:\n      operationId: DescribeDirectories\n      description: '\u003cp\u003eObtains information about the directories that belong to this account.\u003c/p\u003e \u003cp\u003eYou can retrieve information about specific directories by passing the directory identifiers in the \u003ccode\u003eDirectoryIds\u003c/code\u003e parameter. Otherwise, all directories that belong to the current account are returned.\u003c/p\u003e \u003cp\u003eThis operation supports pagination with the use of the \u003ccode\u003eNextToken\u003c/code\u003e request and response parameters. If more results are available, the \u003ccode\u003eDescribeDirectoriesResult.NextToken\u003c/code\u003e member contains a token that you pass in the next call to \u003ca\u003eDescribeDirectories\u003c/a\u003e to retrieve the next set of items.\u003c/p\u003e \u003cp\u003eYou can also specify a maximum number of return results with the \u003ccode\u003eLimit\u003c/code\u003e parameter.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeDirectoriesResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '482':\n          description: InvalidNextTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidNextTokenException'\n        '483':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '484':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeDirectoriesRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.DescribeDirectories\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.DescribeDomainControllers:\n    post:\n      operationId: DescribeDomainControllers\n      description: Provides information about any domain controllers in your directory.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeDomainControllersResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: InvalidNextTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidNextTokenException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '484':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '485':\n          description: UnsupportedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedOperationException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeDomainControllersRequest'\n      parameters:\n        - name: Limit\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.DescribeDomainControllers\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.DescribeEventTopics:\n    post:\n      operationId: DescribeEventTopics\n      description: '\u003cp\u003eObtains information about which Amazon SNS topics receive status messages from the specified directory.\u003c/p\u003e \u003cp\u003eIf no input parameters are provided, such as DirectoryId or TopicName, this request describes all of the associations in the account.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeEventTopicsResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '482':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '483':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeEventTopicsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.DescribeEventTopics\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.DescribeLDAPSSettings:\n    post:\n      operationId: DescribeLDAPSSettings\n      description: Describes the status of LDAP security for the specified directory.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeLDAPSSettingsResult'\n        '480':\n          description: DirectoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryDoesNotExistException'\n        '481':\n          description: UnsupportedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedOperationException'\n        '482':\n          description: InvalidNextTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidNextTokenException'\n        '483':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '484':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '485':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeLDAPSSettingsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.DescribeLDAPSSettings\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.DescribeRegions:\n    post:\n      operationId: DescribeRegions\n      description: Provides information about the Regions that are configured for multi-Region replication.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeRegionsResult'\n        '480':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: DirectoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryDoesNotExistException'\n        '482':\n          description: UnsupportedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedOperationException'\n        '483':\n          description: InvalidNextTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidNextTokenException'\n        '484':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '485':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '486':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeRegionsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.DescribeRegions\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.DescribeSharedDirectories:\n    post:\n      operationId: DescribeSharedDirectories\n      description: 'Returns the shared directories in your account. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeSharedDirectoriesResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: InvalidNextTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidNextTokenException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: UnsupportedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedOperationException'\n        '484':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '485':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeSharedDirectoriesRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.DescribeSharedDirectories\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.DescribeSnapshots:\n    post:\n      operationId: DescribeSnapshots\n      description: '\u003cp\u003eObtains information about the directory snapshots that belong to this account.\u003c/p\u003e \u003cp\u003eThis operation supports pagination with the use of the \u003ci\u003eNextToken\u003c/i\u003e request and response parameters. If more results are available, the \u003ci\u003eDescribeSnapshots.NextToken\u003c/i\u003e member contains a token that you pass in the next call to \u003ca\u003eDescribeSnapshots\u003c/a\u003e to retrieve the next set of items.\u003c/p\u003e \u003cp\u003eYou can also specify a maximum number of return results with the \u003ci\u003eLimit\u003c/i\u003e parameter.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeSnapshotsResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '482':\n          description: InvalidNextTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidNextTokenException'\n        '483':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '484':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeSnapshotsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.DescribeSnapshots\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.DescribeTrusts:\n    post:\n      operationId: DescribeTrusts\n      description: '\u003cp\u003eObtains information about the trust relationships for this account.\u003c/p\u003e \u003cp\u003eIf no input parameters are provided, such as DirectoryId or TrustIds, this request describes all the trust relationships belonging to the account.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeTrustsResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: InvalidNextTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidNextTokenException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '484':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '485':\n          description: UnsupportedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedOperationException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeTrustsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.DescribeTrusts\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.DisableClientAuthentication:\n    post:\n      operationId: DisableClientAuthentication\n      description: 'Disables alternative client authentication methods for the specified directory. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DisableClientAuthenticationResult'\n        '480':\n          description: DirectoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryDoesNotExistException'\n        '481':\n          description: UnsupportedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedOperationException'\n        '482':\n          description: InvalidClientAuthStatusException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidClientAuthStatusException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '485':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DisableClientAuthenticationRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.DisableClientAuthentication\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.DisableLDAPS:\n    post:\n      operationId: DisableLDAPS\n      description: Deactivates LDAP secure calls for the specified directory.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DisableLDAPSResult'\n        '480':\n          description: DirectoryUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryUnavailableException'\n        '481':\n          description: DirectoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryDoesNotExistException'\n        '482':\n          description: InvalidLDAPSStatusException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidLDAPSStatusException'\n        '483':\n          description: UnsupportedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedOperationException'\n        '484':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '485':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '486':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DisableLDAPSRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.DisableLDAPS\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.DisableRadius:\n    post:\n      operationId: DisableRadius\n      description: Disables multi-factor authentication (MFA) with the Remote Authentication Dial In User Service (RADIUS) server for an AD Connector or Microsoft AD directory.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DisableRadiusResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DisableRadiusRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.DisableRadius\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.DisableSso:\n    post:\n      operationId: DisableSso\n      description: Disables single-sign on for a directory.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DisableSsoResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: InsufficientPermissionsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InsufficientPermissionsException'\n        '482':\n          description: AuthenticationFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthenticationFailedException'\n        '483':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '484':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DisableSsoRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.DisableSso\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.EnableClientAuthentication:\n    post:\n      operationId: EnableClientAuthentication\n      description: Enables alternative client authentication methods for the specified directory.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EnableClientAuthenticationResult'\n        '480':\n          description: DirectoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryDoesNotExistException'\n        '481':\n          description: UnsupportedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedOperationException'\n        '482':\n          description: InvalidClientAuthStatusException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidClientAuthStatusException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: NoAvailableCertificateException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NoAvailableCertificateException'\n        '485':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '486':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EnableClientAuthenticationRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.EnableClientAuthentication\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.EnableLDAPS:\n    post:\n      operationId: EnableLDAPS\n      description: Activates the switch for the specific directory to always use LDAP secure calls.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EnableLDAPSResult'\n        '480':\n          description: DirectoryUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryUnavailableException'\n        '481':\n          description: DirectoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryDoesNotExistException'\n        '482':\n          description: NoAvailableCertificateException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NoAvailableCertificateException'\n        '483':\n          description: InvalidLDAPSStatusException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidLDAPSStatusException'\n        '484':\n          description: UnsupportedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedOperationException'\n        '485':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '486':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '487':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EnableLDAPSRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.EnableLDAPS\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.EnableRadius:\n    post:\n      operationId: EnableRadius\n      description: Enables multi-factor authentication (MFA) with the Remote Authentication Dial In User Service (RADIUS) server for an AD Connector or Microsoft AD directory.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EnableRadiusResult'\n        '480':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: EntityAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityAlreadyExistsException'\n        '482':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '483':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '484':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EnableRadiusRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.EnableRadius\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.EnableSso:\n    post:\n      operationId: EnableSso\n      description: Enables single sign-on for a directory. Single sign-on allows users in your directory to access certain Amazon Web Services services from a computer joined to the directory without having to enter their credentials separately.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EnableSsoResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: InsufficientPermissionsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InsufficientPermissionsException'\n        '482':\n          description: AuthenticationFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthenticationFailedException'\n        '483':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '484':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EnableSsoRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.EnableSso\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.GetDirectoryLimits:\n    post:\n      operationId: GetDirectoryLimits\n      description: Obtains directory limit information for the current Region.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetDirectoryLimitsResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetDirectoryLimitsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.GetDirectoryLimits\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.GetSnapshotLimits:\n    post:\n      operationId: GetSnapshotLimits\n      description: Obtains the manual snapshot limits for a directory.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetSnapshotLimitsResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '482':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetSnapshotLimitsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.GetSnapshotLimits\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.ListCertificates:\n    post:\n      operationId: ListCertificates\n      description: 'For the specified directory, lists all the certificates registered for a secure LDAP or client certificate authentication.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListCertificatesResult'\n        '480':\n          description: DirectoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryDoesNotExistException'\n        '481':\n          description: UnsupportedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedOperationException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: InvalidNextTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidNextTokenException'\n        '484':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '485':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListCertificatesRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.ListCertificates\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.ListIpRoutes:\n    post:\n      operationId: ListIpRoutes\n      description: Lists the address blocks that you have added to a directory.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListIpRoutesResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: InvalidNextTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidNextTokenException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '484':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListIpRoutesRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.ListIpRoutes\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.ListLogSubscriptions:\n    post:\n      operationId: ListLogSubscriptions\n      description: Lists the active log subscriptions for the Amazon Web Services account.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListLogSubscriptionsResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: InvalidNextTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidNextTokenException'\n        '482':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '483':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListLogSubscriptionsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.ListLogSubscriptions\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.ListSchemaExtensions:\n    post:\n      operationId: ListSchemaExtensions\n      description: Lists all schema extensions applied to a Microsoft AD Directory.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListSchemaExtensionsResult'\n        '480':\n          description: InvalidNextTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidNextTokenException'\n        '481':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '482':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '483':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListSchemaExtensionsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.ListSchemaExtensions\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.ListTagsForResource:\n    post:\n      operationId: ListTagsForResource\n      description: Lists all tags on a directory.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTagsForResourceResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: InvalidNextTokenException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidNextTokenException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '484':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListTagsForResourceRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.ListTagsForResource\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.RegisterCertificate:\n    post:\n      operationId: RegisterCertificate\n      description: Registers a certificate for a secure LDAP or client certificate authentication.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegisterCertificateResult'\n        '480':\n          description: DirectoryUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryUnavailableException'\n        '481':\n          description: DirectoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryDoesNotExistException'\n        '482':\n          description: InvalidCertificateException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidCertificateException'\n        '483':\n          description: CertificateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CertificateLimitExceededException'\n        '484':\n          description: CertificateAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CertificateAlreadyExistsException'\n        '485':\n          description: UnsupportedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedOperationException'\n        '486':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '487':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '488':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegisterCertificateRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.RegisterCertificate\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.RegisterEventTopic:\n    post:\n      operationId: RegisterEventTopic\n      description: Associates a directory with an Amazon SNS topic. This establishes the directory as a publisher to the specified Amazon SNS topic. You can then receive email or text (SMS) messages when the status of your directory changes. You get notified if your directory goes from an Active status to an Impaired or Inoperable status. You also receive a notification when the directory returns to an Active status.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegisterEventTopicResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '482':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '483':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegisterEventTopicRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.RegisterEventTopic\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.RejectSharedDirectory:\n    post:\n      operationId: RejectSharedDirectory\n      description: Rejects a directory sharing request that was sent from the directory owner account.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RejectSharedDirectoryResult'\n        '480':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '482':\n          description: DirectoryAlreadySharedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryAlreadySharedException'\n        '483':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '484':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RejectSharedDirectoryRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.RejectSharedDirectory\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.RemoveIpRoutes:\n    post:\n      operationId: RemoveIpRoutes\n      description: Removes IP address blocks from a directory.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RemoveIpRoutesResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '482':\n          description: DirectoryUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryUnavailableException'\n        '483':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '484':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RemoveIpRoutesRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.RemoveIpRoutes\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.RemoveRegion:\n    post:\n      operationId: RemoveRegion\n      description: 'Stops all replication and removes the domain controllers from the specified Region. You cannot remove the primary Region with this operation. Instead, use the \u003ccode\u003eDeleteDirectory\u003c/code\u003e API.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RemoveRegionResult'\n        '480':\n          description: DirectoryUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryUnavailableException'\n        '481':\n          description: DirectoryDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryDoesNotExistException'\n        '482':\n          description: UnsupportedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedOperationException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '485':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RemoveRegionRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.RemoveRegion\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.RemoveTagsFromResource:\n    post:\n      operationId: RemoveTagsFromResource\n      description: Removes tags from a directory.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RemoveTagsFromResourceResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '482':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '483':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RemoveTagsFromResourceRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.RemoveTagsFromResource\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.ResetUserPassword:\n    post:\n      operationId: ResetUserPassword\n      description: '\u003cp\u003eResets the password for any user in your Managed Microsoft AD or Simple AD directory.\u003c/p\u003e \u003cp\u003eYou can reset the password for any user in your directory with the following exceptions:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eFor Simple AD, you cannot reset the password for any user that is a member of either the \u003cb\u003eDomain Admins\u003c/b\u003e or \u003cb\u003eEnterprise Admins\u003c/b\u003e group except for the administrator user.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eFor Managed Microsoft AD, you can only reset the password for a user that is in an OU based off of the NetBIOS name that you typed when you created your directory. For example, you cannot reset the password for a user in the \u003cb\u003eAmazon Web Services Reserved\u003c/b\u003e OU. For more information about the OU structure for an Managed Microsoft AD directory, see \u003ca href=\"https://docs.aws.amazon.com/directoryservice/latest/admin-guide/ms_ad_getting_started_what_gets_created.html\"\u003eWhat Gets Created\u003c/a\u003e in the \u003ci\u003eDirectory Service Administration Guide\u003c/i\u003e.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResetUserPasswordResult'\n        '480':\n          description: DirectoryUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryUnavailableException'\n        '481':\n          description: UserDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserDoesNotExistException'\n        '482':\n          description: InvalidPasswordException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidPasswordException'\n        '483':\n          description: UnsupportedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedOperationException'\n        '484':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '485':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '486':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResetUserPasswordRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.ResetUserPassword\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.RestoreFromSnapshot:\n    post:\n      operationId: RestoreFromSnapshot\n      description: '\u003cp\u003eRestores a directory using an existing directory snapshot.\u003c/p\u003e \u003cp\u003eWhen you restore a directory from a snapshot, any changes made to the directory after the snapshot date are overwritten.\u003c/p\u003e \u003cp\u003eThis action returns as soon as the restore operation is initiated. You can monitor the progress of the restore operation by calling the \u003ca\u003eDescribeDirectories\u003c/a\u003e operation with the directory identifier. When the \u003cb\u003eDirectoryDescription.Stage\u003c/b\u003e value changes to \u003ccode\u003eActive\u003c/code\u003e, the restore operation is complete.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestoreFromSnapshotResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '482':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '483':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RestoreFromSnapshotRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.RestoreFromSnapshot\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.ShareDirectory:\n    post:\n      operationId: ShareDirectory\n      description: '\u003cp\u003eShares a specified directory (\u003ccode\u003eDirectoryId\u003c/code\u003e) in your Amazon Web Services account (directory owner) with another Amazon Web Services account (directory consumer). With this operation you can use your directory from any Amazon Web Services account and from any Amazon VPC within an Amazon Web Services Region.\u003c/p\u003e \u003cp\u003eWhen you share your Managed Microsoft AD directory, Directory Service creates a shared directory in the directory consumer account. This shared directory contains the metadata to provide access to the directory within the directory owner account. The shared directory is visible in all VPCs in the directory consumer account.\u003c/p\u003e \u003cp\u003eThe \u003ccode\u003eShareMethod\u003c/code\u003e parameter determines whether the specified directory can be shared between Amazon Web Services accounts inside the same Amazon Web Services organization (\u003ccode\u003eORGANIZATIONS\u003c/code\u003e). It also determines whether you can share the directory with any other Amazon Web Services account either inside or outside of the organization (\u003ccode\u003eHANDSHAKE\u003c/code\u003e).\u003c/p\u003e \u003cp\u003eThe \u003ccode\u003eShareNotes\u003c/code\u003e parameter is only used when \u003ccode\u003eHANDSHAKE\u003c/code\u003e is called, which sends a directory sharing request to the directory consumer. \u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ShareDirectoryResult'\n        '480':\n          description: DirectoryAlreadySharedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryAlreadySharedException'\n        '481':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '482':\n          description: InvalidTargetException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidTargetException'\n        '483':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '484':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '485':\n          description: ShareLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ShareLimitExceededException'\n        '486':\n          description: OrganizationsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrganizationsException'\n        '487':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '488':\n          description: UnsupportedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedOperationException'\n        '489':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ShareDirectoryRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.ShareDirectory\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.StartSchemaExtension:\n    post:\n      operationId: StartSchemaExtension\n      description: Applies a schema extension to a Microsoft AD directory.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StartSchemaExtensionResult'\n        '480':\n          description: DirectoryUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryUnavailableException'\n        '481':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: SnapshotLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SnapshotLimitExceededException'\n        '484':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '485':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StartSchemaExtensionRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.StartSchemaExtension\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.UnshareDirectory:\n    post:\n      operationId: UnshareDirectory\n      description: 'Stops the directory sharing between the directory owner and consumer accounts. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnshareDirectoryResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: InvalidTargetException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidTargetException'\n        '482':\n          description: DirectoryNotSharedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryNotSharedException'\n        '483':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '484':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UnshareDirectoryRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.UnshareDirectory\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.UpdateConditionalForwarder:\n    post:\n      operationId: UpdateConditionalForwarder\n      description: Updates a conditional forwarder that has been set up for your Amazon Web Services directory.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateConditionalForwarderResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: DirectoryUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryUnavailableException'\n        '482':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '483':\n          description: UnsupportedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedOperationException'\n        '484':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '485':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateConditionalForwarderRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.UpdateConditionalForwarder\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.UpdateNumberOfDomainControllers:\n    post:\n      operationId: UpdateNumberOfDomainControllers\n      description: 'Adds or removes domain controllers to or from the directory. Based on the difference between current value and new value (provided through this API call), domain controllers will be added or removed. It may take up to 45 minutes for any new domain controllers to become fully active once the requested number of domain controllers is updated. During this time, you cannot make another update request.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateNumberOfDomainControllersResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: DirectoryUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirectoryUnavailableException'\n        '482':\n          description: DomainControllerLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DomainControllerLimitExceededException'\n        '483':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '484':\n          description: UnsupportedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedOperationException'\n        '485':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '486':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateNumberOfDomainControllersRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.UpdateNumberOfDomainControllers\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.UpdateRadius:\n    post:\n      operationId: UpdateRadius\n      description: Updates the Remote Authentication Dial In User Service (RADIUS) server information for an AD Connector or Microsoft AD directory.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateRadiusResult'\n        '480':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '481':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '482':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '483':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateRadiusRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.UpdateRadius\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.UpdateTrust:\n    post:\n      operationId: UpdateTrust\n      description: Updates the trust that has been set up between your Managed Microsoft AD directory and an self-managed Active Directory.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateTrustResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '482':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '483':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateTrustRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.UpdateTrust\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DirectoryService_20150416.VerifyTrust:\n    post:\n      operationId: VerifyTrust\n      description: \u003cp\u003eDirectory Service for Microsoft Active Directory allows you to configure and verify trust relationships.\u003c/p\u003e \u003cp\u003eThis action verifies a trust relationship between your Managed Microsoft AD directory and an external domain.\u003c/p\u003e\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VerifyTrustResult'\n        '480':\n          description: EntityDoesNotExistException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityDoesNotExistException'\n        '481':\n          description: InvalidParameterException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterException'\n        '482':\n          description: ClientException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClientException'\n        '483':\n          description: ServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceException'\n        '484':\n          description: UnsupportedOperationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedOperationException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VerifyTrustRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DirectoryService_20150416.VerifyTrust\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    AcceptSharedDirectoryResult:\n      type: object\n      properties:\n        SharedDirectory:\n          allOf:\n            - $ref: '#/components/schemas/SharedDirectory'\n            - description: The shared directory in the directory consumer account.\n    AcceptSharedDirectoryRequest:\n      type: object\n      required:\n        - SharedDirectoryId\n      title: AcceptSharedDirectoryRequest\n      properties:\n        SharedDirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: 'Identifier of the shared directory in the directory consumer account. This identifier is different for each directory owner account. '\n    InvalidParameterException: {}\n    EntityDoesNotExistException: {}\n    DirectoryAlreadySharedException: {}\n    ClientException: {}\n    ServiceException: {}\n    AddIpRoutesResult:\n      type: object\n      properties: {}\n    AddIpRoutesRequest:\n      type: object\n      required:\n        - DirectoryId\n        - IpRoutes\n      title: AddIpRoutesRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: Identifier (ID) of the directory to which to add the address block.\n        IpRoutes:\n          allOf:\n            - $ref: '#/components/schemas/IpRoutes'\n            - description: 'IP address blocks, using CIDR format, of the traffic to route. This is often the IP address block of the DNS server used for your self-managed domain.'\n        UpdateSecurityGroupForDirectoryControllers:\n          allOf:\n            - $ref: '#/components/schemas/UpdateSecurityGroupForDirectoryControllers'\n            - description: '\u003cp\u003eIf set to true, updates the inbound and outbound rules of the security group that has the description: \"Amazon Web Services created security group for \u003ci\u003edirectory ID\u003c/i\u003e directory controllers.\" Following are the new rules: \u003c/p\u003e \u003cp\u003eInbound:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eType: Custom UDP Rule, Protocol: UDP, Range: 88, Source: 0.0.0.0/0\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eType: Custom UDP Rule, Protocol: UDP, Range: 123, Source: 0.0.0.0/0\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eType: Custom UDP Rule, Protocol: UDP, Range: 138, Source: 0.0.0.0/0\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eType: Custom UDP Rule, Protocol: UDP, Range: 389, Source: 0.0.0.0/0\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eType: Custom UDP Rule, Protocol: UDP, Range: 464, Source: 0.0.0.0/0\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eType: Custom UDP Rule, Protocol: UDP, Range: 445, Source: 0.0.0.0/0\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eType: Custom TCP Rule, Protocol: TCP, Range: 88, Source: 0.0.0.0/0\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eType: Custom TCP Rule, Protocol: TCP, Range: 135, Source: 0.0.0.0/0\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eType: Custom TCP Rule, Protocol: TCP, Range: 445, Source: 0.0.0.0/0\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eType: Custom TCP Rule, Protocol: TCP, Range: 464, Source: 0.0.0.0/0\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eType: Custom TCP Rule, Protocol: TCP, Range: 636, Source: 0.0.0.0/0\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eType: Custom TCP Rule, Protocol: TCP, Range: 1024-65535, Source: 0.0.0.0/0\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eType: Custom TCP Rule, Protocol: TCP, Range: 3268-33269, Source: 0.0.0.0/0\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eType: DNS (UDP), Protocol: UDP, Range: 53, Source: 0.0.0.0/0\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eType: DNS (TCP), Protocol: TCP, Range: 53, Source: 0.0.0.0/0\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eType: LDAP, Protocol: TCP, Range: 389, Source: 0.0.0.0/0\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eType: All ICMP, Protocol: All, Range: N/A, Source: 0.0.0.0/0\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp/\u003e \u003cp\u003eOutbound:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eType: All traffic, Protocol: All, Range: All, Destination: 0.0.0.0/0\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eThese security rules impact an internal network interface that is not exposed publicly.\u003c/p\u003e'\n    EntityAlreadyExistsException: {}\n    DirectoryUnavailableException: {}\n    IpRouteLimitExceededException: {}\n    AddRegionResult:\n      type: object\n      properties: {}\n    AddRegionRequest:\n      type: object\n      required:\n        - DirectoryId\n        - RegionName\n        - VPCSettings\n      title: AddRegionRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The identifier of the directory to which you want to add Region replication.\n        RegionName:\n          allOf:\n            - $ref: '#/components/schemas/RegionName'\n            - description: 'The name of the Region where you want to add domain controllers for replication. For example, \u003ccode\u003eus-east-1\u003c/code\u003e.'\n        VPCSettings:\n          $ref: '#/components/schemas/DirectoryVpcSettings'\n    DirectoryAlreadyInRegionException: {}\n    UnsupportedOperationException: {}\n    DirectoryDoesNotExistException: {}\n    RegionLimitExceededException: {}\n    AccessDeniedException: {}\n    AddTagsToResourceResult:\n      type: object\n      properties: {}\n    AddTagsToResourceRequest:\n      type: object\n      required:\n        - ResourceId\n        - Tags\n      title: AddTagsToResourceRequest\n      properties:\n        ResourceId:\n          allOf:\n            - $ref: '#/components/schemas/ResourceId'\n            - description: Identifier (ID) for the directory to which to add the tag.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: The tags to be assigned to the directory.\n    TagLimitExceededException: {}\n    CancelSchemaExtensionResult:\n      type: object\n      properties: {}\n    CancelSchemaExtensionRequest:\n      type: object\n      required:\n        - DirectoryId\n        - SchemaExtensionId\n      title: CancelSchemaExtensionRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The identifier of the directory whose schema extension will be canceled.\n        SchemaExtensionId:\n          allOf:\n            - $ref: '#/components/schemas/SchemaExtensionId'\n            - description: The identifier of the schema extension that will be canceled.\n    ConnectDirectoryResult:\n      type: object\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The identifier of the new directory.\n      description: Contains the results of the \u003ca\u003eConnectDirectory\u003c/a\u003e operation.\n    ConnectDirectoryRequest:\n      type: object\n      required:\n        - Name\n        - Password\n        - Size\n        - ConnectSettings\n      title: ConnectDirectoryRequest\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryName'\n            - description: 'The fully qualified name of your self-managed directory, such as \u003ccode\u003ecorp.example.com\u003c/code\u003e.'\n        ShortName:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryShortName'\n            - description: 'The NetBIOS name of your self-managed directory, such as \u003ccode\u003eCORP\u003c/code\u003e.'\n        Password:\n          allOf:\n            - $ref: '#/components/schemas/ConnectPassword'\n            - description: The password for your self-managed user account.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: A description for the directory.\n        Size:\n          allOf:\n            - $ref: '#/components/schemas/DirectorySize'\n            - description: The size of the directory.\n        ConnectSettings:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryConnectSettings'\n            - description: A \u003ca\u003eDirectoryConnectSettings\u003c/a\u003e object that contains additional information for the operation.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: The tags to be assigned to AD Connector.\n      description: Contains the inputs for the \u003ca\u003eConnectDirectory\u003c/a\u003e operation.\n    DirectoryLimitExceededException: {}\n    CreateAliasResult:\n      type: object\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The identifier of the directory.\n        Alias:\n          allOf:\n            - $ref: '#/components/schemas/AliasName'\n            - description: The alias for the directory.\n      description: Contains the results of the \u003ca\u003eCreateAlias\u003c/a\u003e operation.\n    CreateAliasRequest:\n      type: object\n      required:\n        - DirectoryId\n        - Alias\n      title: CreateAliasRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The identifier of the directory for which to create the alias.\n        Alias:\n          allOf:\n            - $ref: '#/components/schemas/AliasName'\n            - description: \u003cp\u003eThe requested alias.\u003c/p\u003e \u003cp\u003eThe alias must be unique amongst all aliases in Amazon Web Services. This operation throws an \u003ccode\u003eEntityAlreadyExistsException\u003c/code\u003e error if the alias already exists.\u003c/p\u003e\n      description: Contains the inputs for the \u003ca\u003eCreateAlias\u003c/a\u003e operation.\n    CreateComputerResult:\n      type: object\n      properties:\n        Computer:\n          allOf:\n            - $ref: '#/components/schemas/Computer'\n            - description: A \u003ca\u003eComputer\u003c/a\u003e object that represents the computer account.\n      description: Contains the results for the \u003ca\u003eCreateComputer\u003c/a\u003e operation.\n    CreateComputerRequest:\n      type: object\n      required:\n        - DirectoryId\n        - ComputerName\n        - Password\n      title: CreateComputerRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The identifier of the directory in which to create the computer account.\n        ComputerName:\n          allOf:\n            - $ref: '#/components/schemas/ComputerName'\n            - description: The name of the computer account.\n        Password:\n          allOf:\n            - $ref: '#/components/schemas/ComputerPassword'\n            - description: 'A one-time password that is used to join the computer to the directory. You should generate a random, strong password to use for this parameter.'\n        OrganizationalUnitDistinguishedName:\n          allOf:\n            - $ref: '#/components/schemas/OrganizationalUnitDN'\n            - description: The fully-qualified distinguished name of the organizational unit to place the computer account in.\n        ComputerAttributes:\n          allOf:\n            - $ref: '#/components/schemas/Attributes'\n            - description: An array of \u003ca\u003eAttribute\u003c/a\u003e objects that contain any LDAP attributes to apply to the computer account.\n      description: Contains the inputs for the \u003ca\u003eCreateComputer\u003c/a\u003e operation.\n    AuthenticationFailedException: {}\n    CreateConditionalForwarderResult:\n      type: object\n      properties: {}\n      description: The result of a CreateConditinalForwarder request.\n    CreateConditionalForwarderRequest:\n      type: object\n      required:\n        - DirectoryId\n        - RemoteDomainName\n        - DnsIpAddrs\n      title: CreateConditionalForwarderRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The directory ID of the Amazon Web Services directory for which you are creating the conditional forwarder.\n        RemoteDomainName:\n          allOf:\n            - $ref: '#/components/schemas/RemoteDomainName'\n            - description: The fully qualified domain name (FQDN) of the remote domain with which you will set up a trust relationship.\n        DnsIpAddrs:\n          allOf:\n            - $ref: '#/components/schemas/DnsIpAddrs'\n            - description: The IP addresses of the remote DNS server associated with RemoteDomainName.\n      description: Initiates the creation of a conditional forwarder for your Directory Service for Microsoft Active Directory. Conditional forwarders are required in order to set up a trust relationship with another domain.\n    CreateDirectoryResult:\n      type: object\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The identifier of the directory that was created.\n      description: Contains the results of the \u003ca\u003eCreateDirectory\u003c/a\u003e operation.\n    CreateDirectoryRequest:\n      type: object\n      required:\n        - Name\n        - Password\n        - Size\n      title: CreateDirectoryRequest\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryName'\n            - description: 'The fully qualified name for the directory, such as \u003ccode\u003ecorp.example.com\u003c/code\u003e.'\n        ShortName:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryShortName'\n            - description: 'The NetBIOS name of the directory, such as \u003ccode\u003eCORP\u003c/code\u003e.'\n        Password:\n          allOf:\n            - $ref: '#/components/schemas/Password'\n            - description: '\u003cp\u003eThe password for the directory administrator. The directory creation process creates a directory administrator account with the user name \u003ccode\u003eAdministrator\u003c/code\u003e and this password.\u003c/p\u003e \u003cp\u003eIf you need to change the password for the administrator account, you can use the \u003ca\u003eResetUserPassword\u003c/a\u003e API call.\u003c/p\u003e \u003cp\u003eThe regex pattern for this string is made up of the following conditions:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eLength (?=^.{8,64}$) – Must be between 8 and 64 characters\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eAND any 3 of the following password complexity rules required by Active Directory:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eNumbers and upper case and lowercase (?=.*\\d)(?=.*[A-Z])(?=.*[a-z])\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eNumbers and special characters and lower case (?=.*\\d)(?=.*[^A-Za-z0-9\\s])(?=.*[a-z])\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eSpecial characters and upper case and lower case (?=.*[^A-Za-z0-9\\s])(?=.*[A-Z])(?=.*[a-z])\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eNumbers and upper case and special characters (?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9\\s])\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eFor additional information about how Active Directory passwords are enforced, see \u003ca href=\"https://docs.microsoft.com/en-us/windows/security/threat-protection/security-policy-settings/password-must-meet-complexity-requirements\"\u003ePassword must meet complexity requirements\u003c/a\u003e on the Microsoft website.\u003c/p\u003e'\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: A description for the directory.\n        Size:\n          allOf:\n            - $ref: '#/components/schemas/DirectorySize'\n            - description: The size of the directory.\n        VpcSettings:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryVpcSettings'\n            - description: A \u003ca\u003eDirectoryVpcSettings\u003c/a\u003e object that contains additional information for the operation.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: The tags to be assigned to the Simple AD directory.\n      description: 'Contains the inputs for the \u003ca\u003eCreateDirectory\u003c/a\u003e operation. '\n    CreateLogSubscriptionResult:\n      type: object\n      properties: {}\n    CreateLogSubscriptionRequest:\n      type: object\n      required:\n        - DirectoryId\n        - LogGroupName\n      title: CreateLogSubscriptionRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: Identifier of the directory to which you want to subscribe and receive real-time logs to your specified CloudWatch log group.\n        LogGroupName:\n          allOf:\n            - $ref: '#/components/schemas/LogGroupName'\n            - description: The name of the CloudWatch log group where the real-time domain controller logs are forwarded.\n    InsufficientPermissionsException: {}\n    CreateMicrosoftADResult:\n      type: object\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The identifier of the directory that was created.\n      description: Result of a CreateMicrosoftAD request.\n    CreateMicrosoftADRequest:\n      type: object\n      required:\n        - Name\n        - Password\n        - VpcSettings\n      title: CreateMicrosoftADRequest\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryName'\n            - description: 'The fully qualified domain name for the Managed Microsoft AD directory, such as \u003ccode\u003ecorp.example.com\u003c/code\u003e. This name will resolve inside your VPC only. It does not need to be publicly resolvable.'\n        ShortName:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryShortName'\n            - description: 'The NetBIOS name for your domain, such as \u003ccode\u003eCORP\u003c/code\u003e. If you don''t specify a NetBIOS name, it will default to the first part of your directory DNS. For example, \u003ccode\u003eCORP\u003c/code\u003e for the directory DNS \u003ccode\u003ecorp.example.com\u003c/code\u003e. '\n        Password:\n          allOf:\n            - $ref: '#/components/schemas/Password'\n            - description: '\u003cp\u003eThe password for the default administrative user named \u003ccode\u003eAdmin\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eIf you need to change the password for the administrator account, you can use the \u003ca\u003eResetUserPassword\u003c/a\u003e API call.\u003c/p\u003e'\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: A description for the directory. This label will appear on the Amazon Web Services console \u003ccode\u003eDirectory Details\u003c/code\u003e page after the directory is created.\n        VpcSettings:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryVpcSettings'\n            - description: Contains VPC information for the \u003ca\u003eCreateDirectory\u003c/a\u003e or \u003ca\u003eCreateMicrosoftAD\u003c/a\u003e operation.\n        Edition:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryEdition'\n            - description: 'Managed Microsoft AD is available in two editions: \u003ccode\u003eStandard\u003c/code\u003e and \u003ccode\u003eEnterprise\u003c/code\u003e. \u003ccode\u003eEnterprise\u003c/code\u003e is the default.'\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: The tags to be assigned to the Managed Microsoft AD directory.\n      description: Creates an Managed Microsoft AD directory.\n    CreateSnapshotResult:\n      type: object\n      properties:\n        SnapshotId:\n          allOf:\n            - $ref: '#/components/schemas/SnapshotId'\n            - description: The identifier of the snapshot that was created.\n      description: Contains the results of the \u003ca\u003eCreateSnapshot\u003c/a\u003e operation.\n    CreateSnapshotRequest:\n      type: object\n      required:\n        - DirectoryId\n      title: CreateSnapshotRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The identifier of the directory of which to take a snapshot.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/SnapshotName'\n            - description: The descriptive name to apply to the snapshot.\n      description: Contains the inputs for the \u003ca\u003eCreateSnapshot\u003c/a\u003e operation.\n    SnapshotLimitExceededException: {}\n    CreateTrustResult:\n      type: object\n      properties:\n        TrustId:\n          allOf:\n            - $ref: '#/components/schemas/TrustId'\n            - description: A unique identifier for the trust relationship that was created.\n      description: The result of a CreateTrust request.\n    CreateTrustRequest:\n      type: object\n      required:\n        - DirectoryId\n        - RemoteDomainName\n        - TrustPassword\n        - TrustDirection\n      title: CreateTrustRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The Directory ID of the Managed Microsoft AD directory for which to establish the trust relationship.\n        RemoteDomainName:\n          allOf:\n            - $ref: '#/components/schemas/RemoteDomainName'\n            - description: The Fully Qualified Domain Name (FQDN) of the external domain for which to create the trust relationship.\n        TrustPassword:\n          allOf:\n            - $ref: '#/components/schemas/TrustPassword'\n            - description: The trust password. The must be the same password that was used when creating the trust relationship on the external domain.\n        TrustDirection:\n          allOf:\n            - $ref: '#/components/schemas/TrustDirection'\n            - description: The direction of the trust relationship.\n        TrustType:\n          allOf:\n            - $ref: '#/components/schemas/TrustType'\n            - description: The trust relationship type. \u003ccode\u003eForest\u003c/code\u003e is the default.\n        ConditionalForwarderIpAddrs:\n          allOf:\n            - $ref: '#/components/schemas/DnsIpAddrs'\n            - description: The IP addresses of the remote DNS server associated with RemoteDomainName.\n        SelectiveAuth:\n          allOf:\n            - $ref: '#/components/schemas/SelectiveAuth'\n            - description: Optional parameter to enable selective authentication for the trust.\n      description: '\u003cp\u003eDirectory Service for Microsoft Active Directory allows you to configure trust relationships. For example, you can establish a trust between your Managed Microsoft AD directory, and your existing self-managed Microsoft Active Directory. This would allow you to provide users and groups access to resources in either domain, with a single set of credentials.\u003c/p\u003e \u003cp\u003eThis action initiates the creation of the Amazon Web Services side of a trust relationship between an Managed Microsoft AD directory and an external domain.\u003c/p\u003e'\n    DeleteConditionalForwarderResult:\n      type: object\n      properties: {}\n      description: The result of a DeleteConditionalForwarder request.\n    DeleteConditionalForwarderRequest:\n      type: object\n      required:\n        - DirectoryId\n        - RemoteDomainName\n      title: DeleteConditionalForwarderRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The directory ID for which you are deleting the conditional forwarder.\n        RemoteDomainName:\n          allOf:\n            - $ref: '#/components/schemas/RemoteDomainName'\n            - description: The fully qualified domain name (FQDN) of the remote domain with which you are deleting the conditional forwarder.\n      description: Deletes a conditional forwarder.\n    DeleteDirectoryResult:\n      type: object\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The directory identifier.\n      description: Contains the results of the \u003ca\u003eDeleteDirectory\u003c/a\u003e operation.\n    DeleteDirectoryRequest:\n      type: object\n      required:\n        - DirectoryId\n      title: DeleteDirectoryRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The identifier of the directory to delete.\n      description: Contains the inputs for the \u003ca\u003eDeleteDirectory\u003c/a\u003e operation.\n    DeleteLogSubscriptionResult:\n      type: object\n      properties: {}\n    DeleteLogSubscriptionRequest:\n      type: object\n      required:\n        - DirectoryId\n      title: DeleteLogSubscriptionRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: Identifier of the directory whose log subscription you want to delete.\n    DeleteSnapshotResult:\n      type: object\n      properties:\n        SnapshotId:\n          allOf:\n            - $ref: '#/components/schemas/SnapshotId'\n            - description: The identifier of the directory snapshot that was deleted.\n      description: Contains the results of the \u003ca\u003eDeleteSnapshot\u003c/a\u003e operation.\n    DeleteSnapshotRequest:\n      type: object\n      required:\n        - SnapshotId\n      title: DeleteSnapshotRequest\n      properties:\n        SnapshotId:\n          allOf:\n            - $ref: '#/components/schemas/SnapshotId'\n            - description: The identifier of the directory snapshot to be deleted.\n      description: Contains the inputs for the \u003ca\u003eDeleteSnapshot\u003c/a\u003e operation.\n    DeleteTrustResult:\n      type: object\n      properties:\n        TrustId:\n          allOf:\n            - $ref: '#/components/schemas/TrustId'\n            - description: The Trust ID of the trust relationship that was deleted.\n      description: The result of a DeleteTrust request.\n    DeleteTrustRequest:\n      type: object\n      required:\n        - TrustId\n      title: DeleteTrustRequest\n      properties:\n        TrustId:\n          allOf:\n            - $ref: '#/components/schemas/TrustId'\n            - description: The Trust ID of the trust relationship to be deleted.\n        DeleteAssociatedConditionalForwarder:\n          allOf:\n            - $ref: '#/components/schemas/DeleteAssociatedConditionalForwarder'\n            - description: Delete a conditional forwarder as part of a DeleteTrustRequest.\n      description: Deletes the local side of an existing trust relationship between the Managed Microsoft AD directory and the external domain.\n    DeregisterCertificateResult:\n      type: object\n      properties: {}\n    DeregisterCertificateRequest:\n      type: object\n      required:\n        - DirectoryId\n        - CertificateId\n      title: DeregisterCertificateRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The identifier of the directory.\n        CertificateId:\n          allOf:\n            - $ref: '#/components/schemas/CertificateId'\n            - description: The identifier of the certificate.\n    CertificateDoesNotExistException: {}\n    CertificateInUseException: {}\n    DeregisterEventTopicResult:\n      type: object\n      properties: {}\n      description: The result of a DeregisterEventTopic request.\n    DeregisterEventTopicRequest:\n      type: object\n      required:\n        - DirectoryId\n        - TopicName\n      title: DeregisterEventTopicRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The Directory ID to remove as a publisher. This directory will no longer send messages to the specified Amazon SNS topic.\n        TopicName:\n          allOf:\n            - $ref: '#/components/schemas/TopicName'\n            - description: The name of the Amazon SNS topic from which to remove the directory as a publisher.\n      description: Removes the specified directory as a publisher to the specified Amazon SNS topic.\n    DescribeCertificateResult:\n      type: object\n      properties:\n        Certificate:\n          allOf:\n            - $ref: '#/components/schemas/Certificate'\n            - description: 'Information about the certificate, including registered date time, certificate state, the reason for the state, expiration date time, and certificate common name.'\n    DescribeCertificateRequest:\n      type: object\n      required:\n        - DirectoryId\n        - CertificateId\n      title: DescribeCertificateRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The identifier of the directory.\n        CertificateId:\n          allOf:\n            - $ref: '#/components/schemas/CertificateId'\n            - description: The identifier of the certificate.\n    DescribeClientAuthenticationSettingsResult:\n      type: object\n      properties:\n        ClientAuthenticationSettingsInfo:\n          allOf:\n            - $ref: '#/components/schemas/ClientAuthenticationSettingsInfo'\n            - description: 'Information about the type of client authentication for the specified directory. The following information is retrieved: The date and time when the status of the client authentication type was last updated, whether the client authentication type is enabled or disabled, and the type of client authentication.'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: The next token used to retrieve the client authentication settings if the number of setting types exceeds page limit and there is another page.\n    DescribeClientAuthenticationSettingsRequest:\n      type: object\n      required:\n        - DirectoryId\n      title: DescribeClientAuthenticationSettingsRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The identifier of the directory for which to retrieve information.\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/ClientAuthenticationType'\n            - description: 'The type of client authentication for which to retrieve information. If no type is specified, a list of all client authentication types that are supported for the specified directory is retrieved.'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: The \u003ci\u003eDescribeClientAuthenticationSettingsResult.NextToken\u003c/i\u003e value from a previous call to \u003ca\u003eDescribeClientAuthenticationSettings\u003c/a\u003e. Pass null if this is the first call.\n        Limit:\n          allOf:\n            - $ref: '#/components/schemas/PageLimit'\n            - description: 'The maximum number of items to return. If this value is zero, the maximum number of items is specified by the limitations of the operation. '\n    DescribeConditionalForwardersResult:\n      type: object\n      properties:\n        ConditionalForwarders:\n          allOf:\n            - $ref: '#/components/schemas/ConditionalForwarders'\n            - description: The list of conditional forwarders that have been created.\n      description: The result of a DescribeConditionalForwarder request.\n    DescribeConditionalForwardersRequest:\n      type: object\n      required:\n        - DirectoryId\n      title: DescribeConditionalForwardersRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The directory ID for which to get the list of associated conditional forwarders.\n        RemoteDomainNames:\n          allOf:\n            - $ref: '#/components/schemas/RemoteDomainNames'\n            - description: 'The fully qualified domain names (FQDN) of the remote domains for which to get the list of associated conditional forwarders. If this member is null, all conditional forwarders are returned.'\n      description: Describes a conditional forwarder.\n    DescribeDirectoriesResult:\n      type: object\n      properties:\n        DirectoryDescriptions:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryDescriptions'\n            - description: '\u003cp\u003eThe list of \u003ca\u003eDirectoryDescription\u003c/a\u003e objects that were retrieved.\u003c/p\u003e \u003cp\u003eIt is possible that this list contains less than the number of items specified in the \u003ccode\u003eLimit\u003c/code\u003e member of the request. This occurs if there are less than the requested number of items left to retrieve, or if the limitations of the operation have been exceeded.\u003c/p\u003e'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'If not null, more results are available. Pass this value for the \u003ccode\u003eNextToken\u003c/code\u003e parameter in a subsequent call to \u003ca\u003eDescribeDirectories\u003c/a\u003e to retrieve the next set of items.'\n      description: Contains the results of the \u003ca\u003eDescribeDirectories\u003c/a\u003e operation.\n    DescribeDirectoriesRequest:\n      type: object\n      title: DescribeDirectoriesRequest\n      properties:\n        DirectoryIds:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryIds'\n            - description: '\u003cp\u003eA list of identifiers of the directories for which to obtain the information. If this member is null, all directories that belong to the current account are returned.\u003c/p\u003e \u003cp\u003eAn empty list results in an \u003ccode\u003eInvalidParameterException\u003c/code\u003e being thrown.\u003c/p\u003e'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: The \u003ccode\u003eDescribeDirectoriesResult.NextToken\u003c/code\u003e value from a previous call to \u003ca\u003eDescribeDirectories\u003c/a\u003e. Pass null if this is the first call.\n        Limit:\n          allOf:\n            - $ref: '#/components/schemas/Limit'\n            - description: 'The maximum number of items to return. If this value is zero, the maximum number of items is specified by the limitations of the operation.'\n      description: Contains the inputs for the \u003ca\u003eDescribeDirectories\u003c/a\u003e operation.\n    InvalidNextTokenException: {}\n    DescribeDomainControllersResult:\n      type: object\n      properties:\n        DomainControllers:\n          allOf:\n            - $ref: '#/components/schemas/DomainControllers'\n            - description: List of the \u003ca\u003eDomainController\u003c/a\u003e objects that were retrieved.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'If not null, more results are available. Pass this value for the \u003ccode\u003eNextToken\u003c/code\u003e parameter in a subsequent call to \u003ca\u003eDescribeDomainControllers\u003c/a\u003e retrieve the next set of items.'\n    DescribeDomainControllersRequest:\n      type: object\n      required:\n        - DirectoryId\n      title: DescribeDomainControllersRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: Identifier of the directory for which to retrieve the domain controller information.\n        DomainControllerIds:\n          allOf:\n            - $ref: '#/components/schemas/DomainControllerIds'\n            - description: A list of identifiers for the domain controllers whose information will be provided.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'The \u003ci\u003eDescribeDomainControllers.NextToken\u003c/i\u003e value from a previous call to \u003ca\u003eDescribeDomainControllers\u003c/a\u003e. Pass null if this is the first call. '\n        Limit:\n          allOf:\n            - $ref: '#/components/schemas/Limit'\n            - description: The maximum number of items to return.\n    DescribeEventTopicsResult:\n      type: object\n      properties:\n        EventTopics:\n          allOf:\n            - $ref: '#/components/schemas/EventTopics'\n            - description: A list of Amazon SNS topic names that receive status messages from the specified Directory ID.\n      description: The result of a DescribeEventTopic request.\n    DescribeEventTopicsRequest:\n      type: object\n      title: DescribeEventTopicsRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: 'The Directory ID for which to get the list of associated Amazon SNS topics. If this member is null, associations for all Directory IDs are returned.'\n        TopicNames:\n          allOf:\n            - $ref: '#/components/schemas/TopicNames'\n            - description: '\u003cp\u003eA list of Amazon SNS topic names for which to obtain the information. If this member is null, all associations for the specified Directory ID are returned.\u003c/p\u003e \u003cp\u003eAn empty list results in an \u003ccode\u003eInvalidParameterException\u003c/code\u003e being thrown.\u003c/p\u003e'\n      description: Describes event topics.\n    DescribeLDAPSSettingsResult:\n      type: object\n      properties:\n        LDAPSSettingsInfo:\n          allOf:\n            - $ref: '#/components/schemas/LDAPSSettingsInfo'\n            - description: 'Information about LDAP security for the specified directory, including status of enablement, state last updated date time, and the reason for the state.'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: The next token used to retrieve the LDAPS settings if the number of setting types exceeds page limit and there is another page.\n    DescribeLDAPSSettingsRequest:\n      type: object\n      required:\n        - DirectoryId\n      title: DescribeLDAPSSettingsRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The identifier of the directory.\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/LDAPSType'\n            - description: The type of LDAP security to enable. Currently only the value \u003ccode\u003eClient\u003c/code\u003e is supported.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: The type of next token used for pagination.\n        Limit:\n          allOf:\n            - $ref: '#/components/schemas/PageLimit'\n            - description: Specifies the number of items that should be displayed on one page.\n    DescribeRegionsResult:\n      type: object\n      properties:\n        RegionsDescription:\n          allOf:\n            - $ref: '#/components/schemas/RegionsDescription'\n            - description: List of Region information related to the directory for each replicated Region.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'If not null, more results are available. Pass this value for the \u003ccode\u003eNextToken\u003c/code\u003e parameter in a subsequent call to \u003ca\u003eDescribeRegions\u003c/a\u003e to retrieve the next set of items.'\n    DescribeRegionsRequest:\n      type: object\n      required:\n        - DirectoryId\n      title: DescribeRegionsRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The identifier of the directory.\n        RegionName:\n          allOf:\n            - $ref: '#/components/schemas/RegionName'\n            - description: 'The name of the Region. For example, \u003ccode\u003eus-east-1\u003c/code\u003e.'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: The \u003ccode\u003eDescribeRegionsResult.NextToken\u003c/code\u003e value from a previous call to \u003ca\u003eDescribeRegions\u003c/a\u003e. Pass null if this is the first call.\n    DescribeSharedDirectoriesResult:\n      type: object\n      properties:\n        SharedDirectories:\n          allOf:\n            - $ref: '#/components/schemas/SharedDirectories'\n            - description: A list of all shared directories in your account.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'If not null, token that indicates that more results are available. Pass this value for the \u003ccode\u003eNextToken\u003c/code\u003e parameter in a subsequent call to \u003ca\u003eDescribeSharedDirectories\u003c/a\u003e to retrieve the next set of items.'\n    DescribeSharedDirectoriesRequest:\n      type: object\n      required:\n        - OwnerDirectoryId\n      title: DescribeSharedDirectoriesRequest\n      properties:\n        OwnerDirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: 'Returns the identifier of the directory in the directory owner account. '\n        SharedDirectoryIds:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryIds'\n            - description: 'A list of identifiers of all shared directories in your account. '\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'The \u003ccode\u003eDescribeSharedDirectoriesResult.NextToken\u003c/code\u003e value from a previous call to \u003ca\u003eDescribeSharedDirectories\u003c/a\u003e. Pass null if this is the first call. '\n        Limit:\n          allOf:\n            - $ref: '#/components/schemas/Limit'\n            - description: The number of shared directories to return in the response object.\n    DescribeSnapshotsResult:\n      type: object\n      properties:\n        Snapshots:\n          allOf:\n            - $ref: '#/components/schemas/Snapshots'\n            - description: '\u003cp\u003eThe list of \u003ca\u003eSnapshot\u003c/a\u003e objects that were retrieved.\u003c/p\u003e \u003cp\u003eIt is possible that this list contains less than the number of items specified in the \u003ci\u003eLimit\u003c/i\u003e member of the request. This occurs if there are less than the requested number of items left to retrieve, or if the limitations of the operation have been exceeded.\u003c/p\u003e'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'If not null, more results are available. Pass this value in the \u003ci\u003eNextToken\u003c/i\u003e member of a subsequent call to \u003ca\u003eDescribeSnapshots\u003c/a\u003e.'\n      description: Contains the results of the \u003ca\u003eDescribeSnapshots\u003c/a\u003e operation.\n    DescribeSnapshotsRequest:\n      type: object\n      title: DescribeSnapshotsRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The identifier of the directory for which to retrieve snapshot information.\n        SnapshotIds:\n          allOf:\n            - $ref: '#/components/schemas/SnapshotIds'\n            - description: 'A list of identifiers of the snapshots to obtain the information for. If this member is null or empty, all snapshots are returned using the \u003ci\u003eLimit\u003c/i\u003e and \u003ci\u003eNextToken\u003c/i\u003e members.'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: The \u003ci\u003eDescribeSnapshotsResult.NextToken\u003c/i\u003e value from a previous call to \u003ca\u003eDescribeSnapshots\u003c/a\u003e. Pass null if this is the first call.\n        Limit:\n          allOf:\n            - $ref: '#/components/schemas/Limit'\n            - description: The maximum number of objects to return.\n      description: Contains the inputs for the \u003ca\u003eDescribeSnapshots\u003c/a\u003e operation.\n    DescribeTrustsResult:\n      type: object\n      properties:\n        Trusts:\n          allOf:\n            - $ref: '#/components/schemas/Trusts'\n            - description: '\u003cp\u003eThe list of Trust objects that were retrieved.\u003c/p\u003e \u003cp\u003eIt is possible that this list contains less than the number of items specified in the \u003ci\u003eLimit\u003c/i\u003e member of the request. This occurs if there are less than the requested number of items left to retrieve, or if the limitations of the operation have been exceeded.\u003c/p\u003e'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'If not null, more results are available. Pass this value for the \u003ci\u003eNextToken\u003c/i\u003e parameter in a subsequent call to \u003ca\u003eDescribeTrusts\u003c/a\u003e to retrieve the next set of items.'\n      description: The result of a DescribeTrust request.\n    DescribeTrustsRequest:\n      type: object\n      title: DescribeTrustsRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The Directory ID of the Amazon Web Services directory that is a part of the requested trust relationship.\n        TrustIds:\n          allOf:\n            - $ref: '#/components/schemas/TrustIds'\n            - description: '\u003cp\u003eA list of identifiers of the trust relationships for which to obtain the information. If this member is null, all trust relationships that belong to the current account are returned.\u003c/p\u003e \u003cp\u003eAn empty list results in an \u003ccode\u003eInvalidParameterException\u003c/code\u003e being thrown.\u003c/p\u003e'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: The \u003ci\u003eDescribeTrustsResult.NextToken\u003c/i\u003e value from a previous call to \u003ca\u003eDescribeTrusts\u003c/a\u003e. Pass null if this is the first call.\n        Limit:\n          allOf:\n            - $ref: '#/components/schemas/Limit'\n            - description: The maximum number of objects to return.\n      description: 'Describes the trust relationships for a particular Managed Microsoft AD directory. If no input parameters are provided, such as directory ID or trust ID, this request describes all the trust relationships.'\n    DisableClientAuthenticationResult:\n      type: object\n      properties: {}\n    DisableClientAuthenticationRequest:\n      type: object\n      required:\n        - DirectoryId\n        - Type\n      title: DisableClientAuthenticationRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: 'The identifier of the directory '\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/ClientAuthenticationType'\n            - description: 'The type of client authentication to disable. Currently, only the parameter, \u003ccode\u003eSmartCard\u003c/code\u003e is supported.'\n    InvalidClientAuthStatusException: {}\n    DisableLDAPSResult:\n      type: object\n      properties: {}\n    DisableLDAPSRequest:\n      type: object\n      required:\n        - DirectoryId\n        - Type\n      title: DisableLDAPSRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The identifier of the directory.\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/LDAPSType'\n            - description: The type of LDAP security to enable. Currently only the value \u003ccode\u003eClient\u003c/code\u003e is supported.\n    InvalidLDAPSStatusException: {}\n    DisableRadiusResult:\n      type: object\n      properties: {}\n      description: Contains the results of the \u003ca\u003eDisableRadius\u003c/a\u003e operation.\n    DisableRadiusRequest:\n      type: object\n      required:\n        - DirectoryId\n      title: DisableRadiusRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The identifier of the directory for which to disable MFA.\n      description: Contains the inputs for the \u003ca\u003eDisableRadius\u003c/a\u003e operation.\n    DisableSsoResult:\n      type: object\n      properties: {}\n      description: Contains the results of the \u003ca\u003eDisableSso\u003c/a\u003e operation.\n    DisableSsoRequest:\n      type: object\n      required:\n        - DirectoryId\n      title: DisableSsoRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The identifier of the directory for which to disable single-sign on.\n        UserName:\n          allOf:\n            - $ref: '#/components/schemas/UserName'\n            - description: '\u003cp\u003eThe username of an alternate account to use to disable single-sign on. This is only used for AD Connector directories. This account must have privileges to remove a service principal name.\u003c/p\u003e \u003cp\u003eIf the AD Connector service account does not have privileges to remove a service principal name, you can specify an alternate account with the \u003ci\u003eUserName\u003c/i\u003e and \u003ci\u003ePassword\u003c/i\u003e parameters. These credentials are only used to disable single sign-on and are not stored by the service. The AD Connector service account is not changed.\u003c/p\u003e'\n        Password:\n          allOf:\n            - $ref: '#/components/schemas/ConnectPassword'\n            - description: 'The password of an alternate account to use to disable single-sign on. This is only used for AD Connector directories. For more information, see the \u003ci\u003eUserName\u003c/i\u003e parameter.'\n      description: Contains the inputs for the \u003ca\u003eDisableSso\u003c/a\u003e operation.\n    EnableClientAuthenticationResult:\n      type: object\n      properties: {}\n    EnableClientAuthenticationRequest:\n      type: object\n      required:\n        - DirectoryId\n        - Type\n      title: EnableClientAuthenticationRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: 'The identifier of the specified directory. '\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/ClientAuthenticationType'\n            - description: 'The type of client authentication to enable. Currently only the value \u003ccode\u003eSmartCard\u003c/code\u003e is supported. Smart card authentication in AD Connector requires that you enable Kerberos Constrained Delegation for the Service User to the LDAP service in your self-managed AD. '\n    NoAvailableCertificateException: {}\n    EnableLDAPSResult:\n      type: object\n      properties: {}\n    EnableLDAPSRequest:\n      type: object\n      required:\n        - DirectoryId\n        - Type\n      title: EnableLDAPSRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The identifier of the directory.\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/LDAPSType'\n            - description: The type of LDAP security to enable. Currently only the value \u003ccode\u003eClient\u003c/code\u003e is supported.\n    EnableRadiusResult:\n      type: object\n      properties: {}\n      description: Contains the results of the \u003ca\u003eEnableRadius\u003c/a\u003e operation.\n    EnableRadiusRequest:\n      type: object\n      required:\n        - DirectoryId\n        - RadiusSettings\n      title: EnableRadiusRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The identifier of the directory for which to enable MFA.\n        RadiusSettings:\n          allOf:\n            - $ref: '#/components/schemas/RadiusSettings'\n            - description: A \u003ca\u003eRadiusSettings\u003c/a\u003e object that contains information about the RADIUS server.\n      description: Contains the inputs for the \u003ca\u003eEnableRadius\u003c/a\u003e operation.\n    EnableSsoResult:\n      type: object\n      properties: {}\n      description: Contains the results of the \u003ca\u003eEnableSso\u003c/a\u003e operation.\n    EnableSsoRequest:\n      type: object\n      required:\n        - DirectoryId\n      title: EnableSsoRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The identifier of the directory for which to enable single-sign on.\n        UserName:\n          allOf:\n            - $ref: '#/components/schemas/UserName'\n            - description: '\u003cp\u003eThe username of an alternate account to use to enable single-sign on. This is only used for AD Connector directories. This account must have privileges to add a service principal name.\u003c/p\u003e \u003cp\u003eIf the AD Connector service account does not have privileges to add a service principal name, you can specify an alternate account with the \u003ci\u003eUserName\u003c/i\u003e and \u003ci\u003ePassword\u003c/i\u003e parameters. These credentials are only used to enable single sign-on and are not stored by the service. The AD Connector service account is not changed.\u003c/p\u003e'\n        Password:\n          allOf:\n            - $ref: '#/components/schemas/ConnectPassword'\n            - description: 'The password of an alternate account to use to enable single-sign on. This is only used for AD Connector directories. For more information, see the \u003ci\u003eUserName\u003c/i\u003e parameter.'\n      description: Contains the inputs for the \u003ca\u003eEnableSso\u003c/a\u003e operation.\n    GetDirectoryLimitsResult:\n      type: object\n      properties:\n        DirectoryLimits:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryLimits'\n            - description: A \u003ca\u003eDirectoryLimits\u003c/a\u003e object that contains the directory limits for the current Region.\n      description: Contains the results of the \u003ca\u003eGetDirectoryLimits\u003c/a\u003e operation.\n    GetDirectoryLimitsRequest:\n      type: object\n      title: GetDirectoryLimitsRequest\n      properties: {}\n      description: Contains the inputs for the \u003ca\u003eGetDirectoryLimits\u003c/a\u003e operation.\n    GetSnapshotLimitsResult:\n      type: object\n      properties:\n        SnapshotLimits:\n          allOf:\n            - $ref: '#/components/schemas/SnapshotLimits'\n            - description: A \u003ca\u003eSnapshotLimits\u003c/a\u003e object that contains the manual snapshot limits for the specified directory.\n      description: Contains the results of the \u003ca\u003eGetSnapshotLimits\u003c/a\u003e operation.\n    GetSnapshotLimitsRequest:\n      type: object\n      required:\n        - DirectoryId\n      title: GetSnapshotLimitsRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: Contains the identifier of the directory to obtain the limits for.\n      description: Contains the inputs for the \u003ca\u003eGetSnapshotLimits\u003c/a\u003e operation.\n    ListCertificatesResult:\n      type: object\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: Indicates whether another page of certificates is available when the number of available certificates exceeds the page limit.\n        CertificatesInfo:\n          allOf:\n            - $ref: '#/components/schemas/CertificatesInfo'\n            - description: 'A list of certificates with basic details including certificate ID, certificate common name, certificate state.'\n    ListCertificatesRequest:\n      type: object\n      required:\n        - DirectoryId\n      title: ListCertificatesRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The identifier of the directory.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: A token for requesting another page of certificates if the \u003ccode\u003eNextToken\u003c/code\u003e response element indicates that more certificates are available. Use the value of the returned \u003ccode\u003eNextToken\u003c/code\u003e element in your request until the token comes back as \u003ccode\u003enull\u003c/code\u003e. Pass \u003ccode\u003enull\u003c/code\u003e if this is the first call.\n        Limit:\n          allOf:\n            - $ref: '#/components/schemas/PageLimit'\n            - description: The number of items that should show up on one page\n    ListIpRoutesResult:\n      type: object\n      properties:\n        IpRoutesInfo:\n          allOf:\n            - $ref: '#/components/schemas/IpRoutesInfo'\n            - description: A list of \u003ca\u003eIpRoute\u003c/a\u003es.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'If not null, more results are available. Pass this value for the \u003ci\u003eNextToken\u003c/i\u003e parameter in a subsequent call to \u003ca\u003eListIpRoutes\u003c/a\u003e to retrieve the next set of items.'\n    ListIpRoutesRequest:\n      type: object\n      required:\n        - DirectoryId\n      title: ListIpRoutesRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: Identifier (ID) of the directory for which you want to retrieve the IP addresses.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: The \u003ci\u003eListIpRoutes.NextToken\u003c/i\u003e value from a previous call to \u003ca\u003eListIpRoutes\u003c/a\u003e. Pass null if this is the first call.\n        Limit:\n          allOf:\n            - $ref: '#/components/schemas/Limit'\n            - description: 'Maximum number of items to return. If this value is zero, the maximum number of items is specified by the limitations of the operation.'\n    ListLogSubscriptionsResult:\n      type: object\n      properties:\n        LogSubscriptions:\n          allOf:\n            - $ref: '#/components/schemas/LogSubscriptions'\n            - description: A list of active \u003ca\u003eLogSubscription\u003c/a\u003e objects for calling the Amazon Web Services account.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: The token for the next set of items to return.\n    ListLogSubscriptionsRequest:\n      type: object\n      title: ListLogSubscriptionsRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: 'If a \u003ci\u003eDirectoryID\u003c/i\u003e is provided, lists only the log subscription associated with that directory. If no \u003ci\u003eDirectoryId\u003c/i\u003e is provided, lists all log subscriptions associated with your Amazon Web Services account. If there are no log subscriptions for the Amazon Web Services account or the directory, an empty list will be returned.'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: The token for the next set of items to return.\n        Limit:\n          allOf:\n            - $ref: '#/components/schemas/Limit'\n            - description: The maximum number of items returned.\n    ListSchemaExtensionsResult:\n      type: object\n      properties:\n        SchemaExtensionsInfo:\n          allOf:\n            - $ref: '#/components/schemas/SchemaExtensionsInfo'\n            - description: Information about the schema extensions applied to the directory.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'If not null, more results are available. Pass this value for the \u003ccode\u003eNextToken\u003c/code\u003e parameter in a subsequent call to \u003ccode\u003eListSchemaExtensions\u003c/code\u003e to retrieve the next set of items.'\n    ListSchemaExtensionsRequest:\n      type: object\n      required:\n        - DirectoryId\n      title: ListSchemaExtensionsRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The identifier of the directory from which to retrieve the schema extension information.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: The \u003ccode\u003eListSchemaExtensions.NextToken\u003c/code\u003e value from a previous call to \u003ccode\u003eListSchemaExtensions\u003c/code\u003e. Pass null if this is the first call.\n        Limit:\n          allOf:\n            - $ref: '#/components/schemas/Limit'\n            - description: The maximum number of items to return.\n    ListTagsForResourceResult:\n      type: object\n      properties:\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: List of tags returned by the ListTagsForResource operation.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: Reserved for future use.\n    ListTagsForResourceRequest:\n      type: object\n      required:\n        - ResourceId\n      title: ListTagsForResourceRequest\n      properties:\n        ResourceId:\n          allOf:\n            - $ref: '#/components/schemas/ResourceId'\n            - description: Identifier (ID) of the directory for which you want to retrieve tags.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: Reserved for future use.\n        Limit:\n          allOf:\n            - $ref: '#/components/schemas/Limit'\n            - description: Reserved for future use.\n    RegisterCertificateResult:\n      type: object\n      properties:\n        CertificateId:\n          allOf:\n            - $ref: '#/components/schemas/CertificateId'\n            - description: The identifier of the certificate.\n    RegisterCertificateRequest:\n      type: object\n      required:\n        - DirectoryId\n        - CertificateData\n      title: RegisterCertificateRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The identifier of the directory.\n        CertificateData:\n          allOf:\n            - $ref: '#/components/schemas/CertificateData'\n            - description: The certificate PEM string that needs to be registered.\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/CertificateType'\n            - description: The function that the registered certificate performs. Valid values include \u003ccode\u003eClientLDAPS\u003c/code\u003e or \u003ccode\u003eClientCertAuth\u003c/code\u003e. The default value is \u003ccode\u003eClientLDAPS\u003c/code\u003e.\n        ClientCertAuthSettings:\n          allOf:\n            - $ref: '#/components/schemas/ClientCertAuthSettings'\n            - description: A \u003ccode\u003eClientCertAuthSettings\u003c/code\u003e object that contains client certificate authentication settings.\n    InvalidCertificateException: {}\n    CertificateLimitExceededException: {}\n    CertificateAlreadyExistsException: {}\n    RegisterEventTopicResult:\n      type: object\n      properties: {}\n      description: The result of a RegisterEventTopic request.\n    RegisterEventTopicRequest:\n      type: object\n      required:\n        - DirectoryId\n        - TopicName\n      title: RegisterEventTopicRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The Directory ID that will publish status messages to the Amazon SNS topic.\n        TopicName:\n          allOf:\n            - $ref: '#/components/schemas/TopicName'\n            - description: The Amazon SNS topic name to which the directory will publish status messages. This Amazon SNS topic must be in the same region as the specified Directory ID.\n      description: Registers a new event topic.\n    RejectSharedDirectoryResult:\n      type: object\n      properties:\n        SharedDirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: Identifier of the shared directory in the directory consumer account.\n    RejectSharedDirectoryRequest:\n      type: object\n      required:\n        - SharedDirectoryId\n      title: RejectSharedDirectoryRequest\n      properties:\n        SharedDirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: Identifier of the shared directory in the directory consumer account. This identifier is different for each directory owner account.\n    RemoveIpRoutesResult:\n      type: object\n      properties: {}\n    RemoveIpRoutesRequest:\n      type: object\n      required:\n        - DirectoryId\n        - CidrIps\n      title: RemoveIpRoutesRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: Identifier (ID) of the directory from which you want to remove the IP addresses.\n        CidrIps:\n          allOf:\n            - $ref: '#/components/schemas/CidrIps'\n            - description: IP address blocks that you want to remove.\n    RemoveRegionResult:\n      type: object\n      properties: {}\n    RemoveRegionRequest:\n      type: object\n      required:\n        - DirectoryId\n      title: RemoveRegionRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The identifier of the directory for which you want to remove Region replication.\n    RemoveTagsFromResourceResult:\n      type: object\n      properties: {}\n    RemoveTagsFromResourceRequest:\n      type: object\n      required:\n        - ResourceId\n        - TagKeys\n      title: RemoveTagsFromResourceRequest\n      properties:\n        ResourceId:\n          allOf:\n            - $ref: '#/components/schemas/ResourceId'\n            - description: Identifier (ID) of the directory from which to remove the tag.\n        TagKeys:\n          allOf:\n            - $ref: '#/components/schemas/TagKeys'\n            - description: The tag key (name) of the tag to be removed.\n    ResetUserPasswordResult:\n      type: object\n      properties: {}\n    ResetUserPasswordRequest:\n      type: object\n      required:\n        - DirectoryId\n        - UserName\n        - NewPassword\n      title: ResetUserPasswordRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: Identifier of the Managed Microsoft AD or Simple AD directory in which the user resides.\n        UserName:\n          allOf:\n            - $ref: '#/components/schemas/CustomerUserName'\n            - description: The user name of the user whose password will be reset.\n        NewPassword:\n          allOf:\n            - $ref: '#/components/schemas/UserPassword'\n            - description: The new password that will be reset.\n    UserDoesNotExistException: {}\n    InvalidPasswordException: {}\n    RestoreFromSnapshotResult:\n      type: object\n      properties: {}\n      description: Contains the results of the \u003ca\u003eRestoreFromSnapshot\u003c/a\u003e operation.\n    RestoreFromSnapshotRequest:\n      type: object\n      required:\n        - SnapshotId\n      title: RestoreFromSnapshotRequest\n      properties:\n        SnapshotId:\n          allOf:\n            - $ref: '#/components/schemas/SnapshotId'\n            - description: The identifier of the snapshot to restore from.\n      description: An object representing the inputs for the \u003ca\u003eRestoreFromSnapshot\u003c/a\u003e operation.\n    ShareDirectoryResult:\n      type: object\n      properties:\n        SharedDirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: Identifier of the directory that is stored in the directory consumer account that is shared from the specified directory (\u003ccode\u003eDirectoryId\u003c/code\u003e).\n    ShareDirectoryRequest:\n      type: object\n      required:\n        - DirectoryId\n        - ShareTarget\n        - ShareMethod\n      title: ShareDirectoryRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: Identifier of the Managed Microsoft AD directory that you want to share with other Amazon Web Services accounts.\n        ShareNotes:\n          allOf:\n            - $ref: '#/components/schemas/Notes'\n            - description: A directory share request that is sent by the directory owner to the directory consumer. The request includes a typed message to help the directory consumer administrator determine whether to approve or reject the share invitation.\n        ShareTarget:\n          allOf:\n            - $ref: '#/components/schemas/ShareTarget'\n            - description: Identifier for the directory consumer account with whom the directory is to be shared.\n        ShareMethod:\n          allOf:\n            - $ref: '#/components/schemas/ShareMethod'\n            - description: The method used when sharing a directory to determine whether the directory should be shared within your Amazon Web Services organization (\u003ccode\u003eORGANIZATIONS\u003c/code\u003e) or with any Amazon Web Services account by sending a directory sharing request (\u003ccode\u003eHANDSHAKE\u003c/code\u003e).\n    InvalidTargetException: {}\n    ShareLimitExceededException: {}\n    OrganizationsException: {}\n    StartSchemaExtensionResult:\n      type: object\n      properties:\n        SchemaExtensionId:\n          allOf:\n            - $ref: '#/components/schemas/SchemaExtensionId'\n            - description: The identifier of the schema extension that will be applied.\n    StartSchemaExtensionRequest:\n      type: object\n      required:\n        - DirectoryId\n        - CreateSnapshotBeforeSchemaExtension\n        - LdifContent\n        - Description\n      title: StartSchemaExtensionRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The identifier of the directory for which the schema extension will be applied to.\n        CreateSnapshotBeforeSchemaExtension:\n          allOf:\n            - $ref: '#/components/schemas/CreateSnapshotBeforeSchemaExtension'\n            - description: 'If true, creates a snapshot of the directory before applying the schema extension.'\n        LdifContent:\n          allOf:\n            - $ref: '#/components/schemas/LdifContent'\n            - description: 'The LDIF file represented as a string. To construct the LdifContent string, precede each line as it would be formatted in an ldif file with \\n. See the example request below for more details. The file size can be no larger than 1MB.'\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: A description of the schema extension.\n    UnshareDirectoryResult:\n      type: object\n      properties:\n        SharedDirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: Identifier of the directory stored in the directory consumer account that is to be unshared from the specified directory (\u003ccode\u003eDirectoryId\u003c/code\u003e).\n    UnshareDirectoryRequest:\n      type: object\n      required:\n        - DirectoryId\n        - UnshareTarget\n      title: UnshareDirectoryRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The identifier of the Managed Microsoft AD directory that you want to stop sharing.\n        UnshareTarget:\n          allOf:\n            - $ref: '#/components/schemas/UnshareTarget'\n            - description: Identifier for the directory consumer account with whom the directory has to be unshared.\n    DirectoryNotSharedException: {}\n    UpdateConditionalForwarderResult:\n      type: object\n      properties: {}\n      description: The result of an UpdateConditionalForwarder request.\n    UpdateConditionalForwarderRequest:\n      type: object\n      required:\n        - DirectoryId\n        - RemoteDomainName\n        - DnsIpAddrs\n      title: UpdateConditionalForwarderRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The directory ID of the Amazon Web Services directory for which to update the conditional forwarder.\n        RemoteDomainName:\n          allOf:\n            - $ref: '#/components/schemas/RemoteDomainName'\n            - description: The fully qualified domain name (FQDN) of the remote domain with which you will set up a trust relationship.\n        DnsIpAddrs:\n          allOf:\n            - $ref: '#/components/schemas/DnsIpAddrs'\n            - description: The updated IP addresses of the remote DNS server associated with the conditional forwarder.\n      description: Updates a conditional forwarder.\n    UpdateNumberOfDomainControllersResult:\n      type: object\n      properties: {}\n    UpdateNumberOfDomainControllersRequest:\n      type: object\n      required:\n        - DirectoryId\n        - DesiredNumber\n      title: UpdateNumberOfDomainControllersRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: Identifier of the directory to which the domain controllers will be added or removed.\n        DesiredNumber:\n          allOf:\n            - $ref: '#/components/schemas/DesiredNumberOfDomainControllers'\n            - description: The number of domain controllers desired in the directory.\n    DomainControllerLimitExceededException: {}\n    UpdateRadiusResult:\n      type: object\n      properties: {}\n      description: Contains the results of the \u003ca\u003eUpdateRadius\u003c/a\u003e operation.\n    UpdateRadiusRequest:\n      type: object\n      required:\n        - DirectoryId\n        - RadiusSettings\n      title: UpdateRadiusRequest\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The identifier of the directory for which to update the RADIUS server information.\n        RadiusSettings:\n          allOf:\n            - $ref: '#/components/schemas/RadiusSettings'\n            - description: A \u003ca\u003eRadiusSettings\u003c/a\u003e object that contains information about the RADIUS server.\n      description: Contains the inputs for the \u003ca\u003eUpdateRadius\u003c/a\u003e operation.\n    UpdateTrustResult:\n      type: object\n      properties:\n        RequestId:\n          $ref: '#/components/schemas/RequestId'\n        TrustId:\n          allOf:\n            - $ref: '#/components/schemas/TrustId'\n            - description: Identifier of the trust relationship.\n    UpdateTrustRequest:\n      type: object\n      required:\n        - TrustId\n      title: UpdateTrustRequest\n      properties:\n        TrustId:\n          allOf:\n            - $ref: '#/components/schemas/TrustId'\n            - description: Identifier of the trust relationship.\n        SelectiveAuth:\n          allOf:\n            - $ref: '#/components/schemas/SelectiveAuth'\n            - description: Updates selective authentication for the trust.\n    VerifyTrustResult:\n      type: object\n      properties:\n        TrustId:\n          allOf:\n            - $ref: '#/components/schemas/TrustId'\n            - description: The unique Trust ID of the trust relationship that was verified.\n      description: Result of a VerifyTrust request.\n    VerifyTrustRequest:\n      type: object\n      required:\n        - TrustId\n      title: VerifyTrustRequest\n      properties:\n        TrustId:\n          allOf:\n            - $ref: '#/components/schemas/TrustId'\n            - description: The unique Trust ID of the trust relationship to verify.\n      description: Initiates the verification of an existing trust relationship between an Managed Microsoft AD directory and an external domain.\n    DirectoryId:\n      type: string\n      pattern: '^d-[0-9a-f]{10}$'\n    SharedDirectory:\n      type: object\n      properties:\n        OwnerAccountId:\n          allOf:\n            - $ref: '#/components/schemas/CustomerId'\n            - description: 'Identifier of the directory owner account, which contains the directory that has been shared to the consumer account.'\n        OwnerDirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: 'Identifier of the directory in the directory owner account. '\n        ShareMethod:\n          allOf:\n            - $ref: '#/components/schemas/ShareMethod'\n            - description: The method used when sharing a directory to determine whether the directory should be shared within your Amazon Web Services organization (\u003ccode\u003eORGANIZATIONS\u003c/code\u003e) or with any Amazon Web Services account by sending a shared directory request (\u003ccode\u003eHANDSHAKE\u003c/code\u003e).\n        SharedAccountId:\n          allOf:\n            - $ref: '#/components/schemas/CustomerId'\n            - description: Identifier of the directory consumer account that has access to the shared directory (\u003ccode\u003eOwnerDirectoryId\u003c/code\u003e) in the directory owner account.\n        SharedDirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: Identifier of the shared directory in the directory consumer account. This identifier is different for each directory owner account.\n        ShareStatus:\n          allOf:\n            - $ref: '#/components/schemas/ShareStatus'\n            - description: Current directory status of the shared Managed Microsoft AD directory.\n        ShareNotes:\n          allOf:\n            - $ref: '#/components/schemas/Notes'\n            - description: A directory share request that is sent by the directory owner to the directory consumer. The request includes a typed message to help the directory consumer administrator determine whether to approve or reject the share invitation.\n        CreatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/CreatedDateTime'\n            - description: The date and time that the shared directory was created.\n        LastUpdatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/LastUpdatedDateTime'\n            - description: The date and time that the shared directory was last updated.\n      description: Details about the shared directory in the directory owner account for which the share request in the directory consumer account has been accepted.\n    AccessUrl:\n      type: string\n      minLength: 1\n      maxLength: 128\n    IpRoutes:\n      type: array\n      items:\n        $ref: '#/components/schemas/IpRoute'\n    UpdateSecurityGroupForDirectoryControllers:\n      type: boolean\n    RegionName:\n      type: string\n      minLength: 8\n      maxLength: 32\n    DirectoryVpcSettings:\n      type: object\n      required:\n        - VpcId\n        - SubnetIds\n      properties:\n        VpcId:\n          allOf:\n            - $ref: '#/components/schemas/VpcId'\n            - description: The identifier of the VPC in which to create the directory.\n        SubnetIds:\n          allOf:\n            - $ref: '#/components/schemas/SubnetIds'\n            - description: The identifiers of the subnets for the directory servers. The two subnets must be in different Availability Zones. Directory Service creates a directory server and a DNS server in each of these subnets.\n      description: Contains VPC information for the \u003ca\u003eCreateDirectory\u003c/a\u003e or \u003ca\u003eCreateMicrosoftAD\u003c/a\u003e operation.\n    ResourceId:\n      type: string\n      pattern: '^[d]-[0-9a-f]{10}$'\n    Tags:\n      type: array\n      items:\n        $ref: '#/components/schemas/Tag'\n    AddedDateTime:\n      type: string\n      format: date-time\n    AdditionalRegions:\n      type: array\n      items:\n        $ref: '#/components/schemas/RegionName'\n    AliasName:\n      type: string\n      pattern: '^(?!D-|d-)([\\da-zA-Z]+)([-]*[\\da-zA-Z])*'\n      minLength: 1\n      maxLength: 62\n    AttributeName:\n      type: string\n      minLength: 1\n    AttributeValue:\n      type: string\n    Attribute:\n      type: object\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/AttributeName'\n            - description: The name of the attribute.\n        Value:\n          allOf:\n            - $ref: '#/components/schemas/AttributeValue'\n            - description: The value of the attribute.\n      description: Represents a named directory attribute.\n    Attributes:\n      type: array\n      items:\n        $ref: '#/components/schemas/Attribute'\n    AvailabilityZone:\n      type: string\n    AvailabilityZones:\n      type: array\n      items:\n        $ref: '#/components/schemas/AvailabilityZone'\n    SchemaExtensionId:\n      type: string\n      pattern: '^e-[0-9a-f]{10}$'\n    CertificateId:\n      type: string\n      pattern: '^c-[0-9a-f]{10}$'\n    CertificateState:\n      type: string\n      enum:\n        - Registering\n        - Registered\n        - RegisterFailed\n        - Deregistering\n        - Deregistered\n        - DeregisterFailed\n    CertificateStateReason:\n      type: string\n    CertificateCN:\n      type: string\n    CertificateRegisteredDateTime:\n      type: string\n      format: date-time\n    CertificateExpiryDateTime:\n      type: string\n      format: date-time\n    CertificateType:\n      type: string\n      enum:\n        - ClientCertAuth\n        - ClientLDAPS\n    ClientCertAuthSettings:\n      type: object\n      properties:\n        OCSPUrl:\n          allOf:\n            - $ref: '#/components/schemas/OCSPUrl'\n            - description: Specifies the URL of the default OCSP server used to check for revocation status. A secondary value to any OCSP address found in the AIA extension of the user certificate.\n      description: 'Contains information about the client certificate authentication settings for the \u003ccode\u003eRegisterCertificate\u003c/code\u003e and \u003ccode\u003eDescribeCertificate\u003c/code\u003e operations. '\n    Certificate:\n      type: object\n      properties:\n        CertificateId:\n          allOf:\n            - $ref: '#/components/schemas/CertificateId'\n            - description: The identifier of the certificate.\n        State:\n          allOf:\n            - $ref: '#/components/schemas/CertificateState'\n            - description: The state of the certificate.\n        StateReason:\n          allOf:\n            - $ref: '#/components/schemas/CertificateStateReason'\n            - description: Describes a state change for the certificate.\n        CommonName:\n          allOf:\n            - $ref: '#/components/schemas/CertificateCN'\n            - description: The common name for the certificate.\n        RegisteredDateTime:\n          allOf:\n            - $ref: '#/components/schemas/CertificateRegisteredDateTime'\n            - description: The date and time that the certificate was registered.\n        ExpiryDateTime:\n          allOf:\n            - $ref: '#/components/schemas/CertificateExpiryDateTime'\n            - description: The date and time when the certificate will expire.\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/CertificateType'\n            - description: The function that the registered certificate performs. Valid values include \u003ccode\u003eClientLDAPS\u003c/code\u003e or \u003ccode\u003eClientCertAuth\u003c/code\u003e. The default value is \u003ccode\u003eClientLDAPS\u003c/code\u003e.\n        ClientCertAuthSettings:\n          allOf:\n            - $ref: '#/components/schemas/ClientCertAuthSettings'\n            - description: A \u003ccode\u003eClientCertAuthSettings\u003c/code\u003e object that contains client certificate authentication settings.\n      description: Information about the certificate.\n    CertificateData:\n      type: string\n      minLength: 1\n      maxLength: 8192\n    CertificateInfo:\n      type: object\n      properties:\n        CertificateId:\n          allOf:\n            - $ref: '#/components/schemas/CertificateId'\n            - description: The identifier of the certificate.\n        CommonName:\n          allOf:\n            - $ref: '#/components/schemas/CertificateCN'\n            - description: The common name for the certificate.\n        State:\n          allOf:\n            - $ref: '#/components/schemas/CertificateState'\n            - description: The state of the certificate.\n        ExpiryDateTime:\n          allOf:\n            - $ref: '#/components/schemas/CertificateExpiryDateTime'\n            - description: The date and time when the certificate will expire.\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/CertificateType'\n            - description: The function that the registered certificate performs. Valid values include \u003ccode\u003eClientLDAPS\u003c/code\u003e or \u003ccode\u003eClientCertAuth\u003c/code\u003e. The default value is \u003ccode\u003eClientLDAPS\u003c/code\u003e.\n      description: Contains general information about a certificate.\n    CertificatesInfo:\n      type: array\n      items:\n        $ref: '#/components/schemas/CertificateInfo'\n    CidrIp:\n      type: string\n      pattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([1-9]|[1-2][0-9]|3[0-2]))$'\n    CidrIps:\n      type: array\n      items:\n        $ref: '#/components/schemas/CidrIp'\n    ClientAuthenticationType:\n      type: string\n      enum:\n        - SmartCard\n    ClientAuthenticationStatus:\n      type: string\n      enum:\n        - Enabled\n        - Disabled\n    LastUpdatedDateTime:\n      type: string\n      format: date-time\n    ClientAuthenticationSettingInfo:\n      type: object\n      properties:\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/ClientAuthenticationType'\n            - description: 'The type of client authentication for the specified directory. If no type is specified, a list of all client authentication types that are supported for the directory is retrieved. '\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/ClientAuthenticationStatus'\n            - description: Whether the client authentication type is enabled or disabled for the specified directory.\n        LastUpdatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/LastUpdatedDateTime'\n            - description: The date and time when the status of the client authentication type was last updated.\n      description: Contains information about a client authentication method for a directory.\n    ClientAuthenticationSettingsInfo:\n      type: array\n      items:\n        $ref: '#/components/schemas/ClientAuthenticationSettingInfo'\n    OCSPUrl:\n      type: string\n      pattern: '^(https?|ftp|file|ldaps?)://[-a-zA-Z0-9+\u0026@#/%?=~_|!:,.;()]*[-a-zA-Z0-9+\u0026@#/%=~_|()]'\n      minLength: 1\n      maxLength: 1024\n    CloudOnlyDirectoriesLimitReached:\n      type: boolean\n    SID:\n      type: string\n      pattern: '[\u0026\\w+-.@]+'\n      minLength: 1\n      maxLength: 256\n    ComputerName:\n      type: string\n      minLength: 1\n      maxLength: 15\n    Computer:\n      type: object\n      properties:\n        ComputerId:\n          allOf:\n            - $ref: '#/components/schemas/SID'\n            - description: The identifier of the computer.\n        ComputerName:\n          allOf:\n            - $ref: '#/components/schemas/ComputerName'\n            - description: The computer name.\n        ComputerAttributes:\n          allOf:\n            - $ref: '#/components/schemas/Attributes'\n            - description: An array of \u003ca\u003eAttribute\u003c/a\u003e objects containing the LDAP attributes that belong to the computer account.\n      description: Contains information about a computer account in a directory.\n    ComputerPassword:\n      type: string\n      pattern: '[\\u0020-\\u00FF]+'\n      minLength: 8\n      maxLength: 64\n      format: password\n    RemoteDomainName:\n      type: string\n      pattern: '^([a-zA-Z0-9]+[\\\\.-])+([a-zA-Z0-9])+[.]?$'\n    DnsIpAddrs:\n      type: array\n      items:\n        $ref: '#/components/schemas/IpAddr'\n    ReplicationScope:\n      type: string\n      enum:\n        - Domain\n    ConditionalForwarder:\n      type: object\n      properties:\n        RemoteDomainName:\n          allOf:\n            - $ref: '#/components/schemas/RemoteDomainName'\n            - description: The fully qualified domain name (FQDN) of the remote domains pointed to by the conditional forwarder.\n        DnsIpAddrs:\n          allOf:\n            - $ref: '#/components/schemas/DnsIpAddrs'\n            - description: The IP addresses of the remote DNS server associated with RemoteDomainName. This is the IP address of the DNS server that your conditional forwarder points to.\n        ReplicationScope:\n          allOf:\n            - $ref: '#/components/schemas/ReplicationScope'\n            - description: 'The replication scope of the conditional forwarder. The only allowed value is \u003ccode\u003eDomain\u003c/code\u003e, which will replicate the conditional forwarder to all of the domain controllers for your Amazon Web Services directory.'\n      description: Points to a remote domain with which you are setting up a trust relationship. Conditional forwarders are required in order to set up a trust relationship with another domain.\n    ConditionalForwarders:\n      type: array\n      items:\n        $ref: '#/components/schemas/ConditionalForwarder'\n    DirectoryName:\n      type: string\n      pattern: '^([a-zA-Z0-9]+[\\\\.-])+([a-zA-Z0-9])+$'\n    DirectoryShortName:\n      type: string\n      pattern: '^[^\\\\/:*?\"\u003c\u003e|.]+[^\\\\/:*?\"\u003c\u003e|]*$'\n    ConnectPassword:\n      type: string\n      minLength: 1\n      maxLength: 128\n      format: password\n    Description:\n      type: string\n      pattern: '^([a-zA-Z0-9_])[\\\\a-zA-Z0-9_@#%*+=:?./!\\s-]*$'\n      minLength: 0\n      maxLength: 128\n    DirectorySize:\n      type: string\n      enum:\n        - Small\n        - Large\n    DirectoryConnectSettings:\n      type: object\n      required:\n        - VpcId\n        - SubnetIds\n        - CustomerDnsIps\n        - CustomerUserName\n      properties:\n        VpcId:\n          allOf:\n            - $ref: '#/components/schemas/VpcId'\n            - description: The identifier of the VPC in which the AD Connector is created.\n        SubnetIds:\n          allOf:\n            - $ref: '#/components/schemas/SubnetIds'\n            - description: A list of subnet identifiers in the VPC in which the AD Connector is created.\n        CustomerDnsIps:\n          allOf:\n            - $ref: '#/components/schemas/DnsIpAddrs'\n            - description: A list of one or more IP addresses of DNS servers or domain controllers in your self-managed directory.\n        CustomerUserName:\n          allOf:\n            - $ref: '#/components/schemas/UserName'\n            - description: '\u003cp\u003eThe user name of an account in your self-managed directory that is used to connect to the directory. This account must have the following permissions:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eRead users and groups\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eCreate computer objects\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eJoin computers to the domain\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      description: Contains information for the \u003ca\u003eConnectDirectory\u003c/a\u003e operation when an AD Connector directory is being created.\n    ConnectedDirectoriesLimitReached:\n      type: boolean\n    OrganizationalUnitDN:\n      type: string\n      minLength: 1\n      maxLength: 2000\n    Password:\n      type: string\n      pattern: '(?=^.{8,64}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9\\s])(?=.*[a-z])|(?=.*[^A-Za-z0-9\\s])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9\\s]))^.*'\n      format: password\n    LogGroupName:\n      type: string\n      pattern: '[-._/#A-Za-z0-9]+'\n      minLength: 1\n      maxLength: 512\n    DirectoryEdition:\n      type: string\n      enum:\n        - Enterprise\n        - Standard\n    CreateSnapshotBeforeSchemaExtension:\n      type: boolean\n    SnapshotName:\n      type: string\n      pattern: '^([a-zA-Z0-9_])[\\\\a-zA-Z0-9_@#%*+=:?./!\\s-]*$'\n      minLength: 0\n      maxLength: 128\n    SnapshotId:\n      type: string\n      pattern: '^s-[0-9a-f]{10}$'\n    TrustPassword:\n      type: string\n      pattern: (.|\\s)*\\S(.|\\s)*\n      minLength: 1\n      maxLength: 128\n      format: password\n    TrustDirection:\n      type: string\n      enum:\n        - 'One-Way: Outgoing'\n        - 'One-Way: Incoming'\n        - Two-Way\n    TrustType:\n      type: string\n      enum:\n        - Forest\n        - External\n    SelectiveAuth:\n      type: string\n      enum:\n        - Enabled\n        - Disabled\n    TrustId:\n      type: string\n      pattern: '^t-[0-9a-f]{10}$'\n    CreatedDateTime:\n      type: string\n      format: date-time\n    CustomerId:\n      type: string\n      pattern: '^(\\d{12})$'\n    CustomerUserName:\n      type: string\n      pattern: '^(?!.*\\\\|.*\"|.*\\/|.*\\[|.*\\]|.*:|.*;|.*\\||.*=|.*,|.*\\+|.*\\*|.*\\?|.*\u003c|.*\u003e|.*@).*$'\n      minLength: 1\n      maxLength: 64\n    DeleteAssociatedConditionalForwarder:\n      type: boolean\n    TopicName:\n      type: string\n      pattern: '[a-zA-Z0-9_-]+'\n      minLength: 1\n      maxLength: 256\n    NextToken:\n      type: string\n    PageLimit:\n      type: integer\n      minimum: 1\n      maximum: 50\n    RemoteDomainNames:\n      type: array\n      items:\n        $ref: '#/components/schemas/RemoteDomainName'\n    DirectoryIds:\n      type: array\n      description: A list of directory identifiers.\n      items:\n        $ref: '#/components/schemas/DirectoryId'\n    Limit:\n      type: integer\n      minimum: 0\n    DirectoryDescriptions:\n      type: array\n      description: A list of directory descriptions.\n      items:\n        $ref: '#/components/schemas/DirectoryDescription'\n    DomainControllerIds:\n      type: array\n      items:\n        $ref: '#/components/schemas/DomainControllerId'\n    DomainControllers:\n      type: array\n      items:\n        $ref: '#/components/schemas/DomainController'\n    TopicNames:\n      type: array\n      items:\n        $ref: '#/components/schemas/TopicName'\n    EventTopics:\n      type: array\n      items:\n        $ref: '#/components/schemas/EventTopic'\n    LDAPSType:\n      type: string\n      enum:\n        - Client\n    LDAPSSettingsInfo:\n      type: array\n      items:\n        $ref: '#/components/schemas/LDAPSSettingInfo'\n    RegionsDescription:\n      type: array\n      items:\n        $ref: '#/components/schemas/RegionDescription'\n    SharedDirectories:\n      type: array\n      items:\n        $ref: '#/components/schemas/SharedDirectory'\n    SnapshotIds:\n      type: array\n      description: A list of directory snapshot identifiers.\n      items:\n        $ref: '#/components/schemas/SnapshotId'\n    Snapshots:\n      type: array\n      description: A list of descriptions of directory snapshots.\n      items:\n        $ref: '#/components/schemas/Snapshot'\n    TrustIds:\n      type: array\n      items:\n        $ref: '#/components/schemas/TrustId'\n    Trusts:\n      type: array\n      items:\n        $ref: '#/components/schemas/Trust'\n    DesiredNumberOfDomainControllers:\n      type: integer\n      minimum: 2\n    VpcId:\n      type: string\n      pattern: '^(vpc-[0-9a-f]{8}|vpc-[0-9a-f]{17})$'\n    SubnetIds:\n      type: array\n      items:\n        $ref: '#/components/schemas/SubnetId'\n    UserName:\n      type: string\n      pattern: '[a-zA-Z0-9._-]+'\n      minLength: 1\n    SecurityGroupId:\n      type: string\n      pattern: '^(sg-[0-9a-f]{8}|sg-[0-9a-f]{17})$'\n    IpAddrs:\n      type: array\n      items:\n        $ref: '#/components/schemas/IpAddr'\n    DirectoryConnectSettingsDescription:\n      type: object\n      properties:\n        VpcId:\n          allOf:\n            - $ref: '#/components/schemas/VpcId'\n            - description: The identifier of the VPC that the AD Connector is in.\n        SubnetIds:\n          allOf:\n            - $ref: '#/components/schemas/SubnetIds'\n            - description: A list of subnet identifiers in the VPC that the AD Connector is in.\n        CustomerUserName:\n          allOf:\n            - $ref: '#/components/schemas/UserName'\n            - description: The user name of the service account in your self-managed directory.\n        SecurityGroupId:\n          allOf:\n            - $ref: '#/components/schemas/SecurityGroupId'\n            - description: The security group identifier for the AD Connector directory.\n        AvailabilityZones:\n          allOf:\n            - $ref: '#/components/schemas/AvailabilityZones'\n            - description: A list of the Availability Zones that the directory is in.\n        ConnectIps:\n          allOf:\n            - $ref: '#/components/schemas/IpAddrs'\n            - description: The IP addresses of the AD Connector servers.\n      description: Contains information about an AD Connector directory.\n    DirectoryStage:\n      type: string\n      enum:\n        - Requested\n        - Creating\n        - Created\n        - Active\n        - Inoperable\n        - Impaired\n        - Restoring\n        - RestoreFailed\n        - Deleting\n        - Deleted\n        - Failed\n    ShareStatus:\n      type: string\n      enum:\n        - Shared\n        - PendingAcceptance\n        - Rejected\n        - Rejecting\n        - RejectFailed\n        - Sharing\n        - ShareFailed\n        - Deleted\n        - Deleting\n    ShareMethod:\n      type: string\n      enum:\n        - ORGANIZATIONS\n        - HANDSHAKE\n    Notes:\n      type: string\n      maxLength: 1024\n      format: password\n    LaunchTime:\n      type: string\n      format: date-time\n    DirectoryType:\n      type: string\n      enum:\n        - SimpleAD\n        - ADConnector\n        - MicrosoftAD\n        - SharedMicrosoftAD\n    DirectoryVpcSettingsDescription:\n      type: object\n      properties:\n        VpcId:\n          allOf:\n            - $ref: '#/components/schemas/VpcId'\n            - description: The identifier of the VPC that the directory is in.\n        SubnetIds:\n          allOf:\n            - $ref: '#/components/schemas/SubnetIds'\n            - description: The identifiers of the subnets for the directory servers.\n        SecurityGroupId:\n          allOf:\n            - $ref: '#/components/schemas/SecurityGroupId'\n            - description: The domain controller security group identifier for the directory.\n        AvailabilityZones:\n          allOf:\n            - $ref: '#/components/schemas/AvailabilityZones'\n            - description: The list of Availability Zones that the directory is in.\n      description: Contains information about the directory.\n    RadiusSettings:\n      type: object\n      properties:\n        RadiusServers:\n          allOf:\n            - $ref: '#/components/schemas/Servers'\n            - description: 'An array of strings that contains the fully qualified domain name (FQDN) or IP addresses of the RADIUS server endpoints, or the FQDN or IP addresses of your RADIUS server load balancer.'\n        RadiusPort:\n          allOf:\n            - $ref: '#/components/schemas/PortNumber'\n            - description: The port that your RADIUS server is using for communications. Your self-managed network must allow inbound traffic over this port from the Directory Service servers.\n        RadiusTimeout:\n          allOf:\n            - $ref: '#/components/schemas/RadiusTimeout'\n            - description: 'The amount of time, in seconds, to wait for the RADIUS server to respond.'\n        RadiusRetries:\n          allOf:\n            - $ref: '#/components/schemas/RadiusRetries'\n            - description: The maximum number of times that communication with the RADIUS server is attempted.\n        SharedSecret:\n          allOf:\n            - $ref: '#/components/schemas/RadiusSharedSecret'\n            - description: Required for enabling RADIUS on the directory.\n        AuthenticationProtocol:\n          allOf:\n            - $ref: '#/components/schemas/RadiusAuthenticationProtocol'\n            - description: The protocol specified for your RADIUS endpoints.\n        DisplayLabel:\n          allOf:\n            - $ref: '#/components/schemas/RadiusDisplayLabel'\n            - description: Not currently used.\n        UseSameUsername:\n          allOf:\n            - $ref: '#/components/schemas/UseSameUsername'\n            - description: Not currently used.\n      description: Contains information about a Remote Authentication Dial In User Service (RADIUS) server.\n    RadiusStatus:\n      type: string\n      enum:\n        - Creating\n        - Completed\n        - Failed\n    StageReason:\n      type: string\n    SsoEnabled:\n      type: boolean\n    OwnerDirectoryDescription:\n      type: object\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: Identifier of the Managed Microsoft AD directory in the directory owner account.\n        AccountId:\n          allOf:\n            - $ref: '#/components/schemas/CustomerId'\n            - description: Identifier of the directory owner account.\n        DnsIpAddrs:\n          allOf:\n            - $ref: '#/components/schemas/DnsIpAddrs'\n            - description: IP address of the directory’s domain controllers.\n        VpcSettings:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryVpcSettingsDescription'\n            - description: Information about the VPC settings for the directory.\n        RadiusSettings:\n          allOf:\n            - $ref: '#/components/schemas/RadiusSettings'\n            - description: A \u003ca\u003eRadiusSettings\u003c/a\u003e object that contains information about the RADIUS server.\n        RadiusStatus:\n          allOf:\n            - $ref: '#/components/schemas/RadiusStatus'\n            - description: Information about the status of the RADIUS server.\n      description: Describes the directory owner account details that have been shared to the directory consumer account.\n    RegionsInfo:\n      type: object\n      properties:\n        PrimaryRegion:\n          allOf:\n            - $ref: '#/components/schemas/RegionName'\n            - description: The Region where the Managed Microsoft AD directory was originally created.\n        AdditionalRegions:\n          allOf:\n            - $ref: '#/components/schemas/AdditionalRegions'\n            - description: 'Lists the Regions where the directory has been replicated, excluding the primary Region.'\n      description: Provides information about the Regions that are configured for multi-Region replication.\n    DirectoryDescription:\n      type: object\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The directory identifier.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryName'\n            - description: The fully qualified name of the directory.\n        ShortName:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryShortName'\n            - description: The short name of the directory.\n        Size:\n          allOf:\n            - $ref: '#/components/schemas/DirectorySize'\n            - description: The directory size.\n        Edition:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryEdition'\n            - description: The edition associated with this directory.\n        Alias:\n          allOf:\n            - $ref: '#/components/schemas/AliasName'\n            - description: 'The alias for the directory. If no alias has been created for the directory, the alias is the directory identifier, such as \u003ccode\u003ed-XXXXXXXXXX\u003c/code\u003e.'\n        AccessUrl:\n          allOf:\n            - $ref: '#/components/schemas/AccessUrl'\n            - description: 'The access URL for the directory, such as \u003ccode\u003ehttp://\u0026lt;alias\u0026gt;.awsapps.com\u003c/code\u003e. If no alias has been created for the directory, \u003ccode\u003e\u0026lt;alias\u0026gt;\u003c/code\u003e is the directory identifier, such as \u003ccode\u003ed-XXXXXXXXXX\u003c/code\u003e.'\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description for the directory.\n        DnsIpAddrs:\n          allOf:\n            - $ref: '#/components/schemas/DnsIpAddrs'\n            - description: 'The IP addresses of the DNS servers for the directory. For a Simple AD or Microsoft AD directory, these are the IP addresses of the Simple AD or Microsoft AD directory servers. For an AD Connector directory, these are the IP addresses of the DNS servers or domain controllers in your self-managed directory to which the AD Connector is connected.'\n        Stage:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryStage'\n            - description: The current stage of the directory.\n        ShareStatus:\n          allOf:\n            - $ref: '#/components/schemas/ShareStatus'\n            - description: Current directory status of the shared Managed Microsoft AD directory.\n        ShareMethod:\n          allOf:\n            - $ref: '#/components/schemas/ShareMethod'\n            - description: The method used when sharing a directory to determine whether the directory should be shared within your Amazon Web Services organization (\u003ccode\u003eORGANIZATIONS\u003c/code\u003e) or with any Amazon Web Services account by sending a shared directory request (\u003ccode\u003eHANDSHAKE\u003c/code\u003e).\n        ShareNotes:\n          allOf:\n            - $ref: '#/components/schemas/Notes'\n            - description: A directory share request that is sent by the directory owner to the directory consumer. The request includes a typed message to help the directory consumer administrator determine whether to approve or reject the share invitation.\n        LaunchTime:\n          allOf:\n            - $ref: '#/components/schemas/LaunchTime'\n            - description: Specifies when the directory was created.\n        StageLastUpdatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/LastUpdatedDateTime'\n            - description: The date and time that the stage was last updated.\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryType'\n            - description: The directory size.\n        VpcSettings:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryVpcSettingsDescription'\n            - description: A \u003ca\u003eDirectoryVpcSettingsDescription\u003c/a\u003e object that contains additional information about a directory. This member is only present if the directory is a Simple AD or Managed Microsoft AD directory.\n        ConnectSettings:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryConnectSettingsDescription'\n            - description: A \u003ca\u003eDirectoryConnectSettingsDescription\u003c/a\u003e object that contains additional information about an AD Connector directory. This member is only present if the directory is an AD Connector directory.\n        RadiusSettings:\n          allOf:\n            - $ref: '#/components/schemas/RadiusSettings'\n            - description: A \u003ca\u003eRadiusSettings\u003c/a\u003e object that contains information about the RADIUS server configured for this directory.\n        RadiusStatus:\n          allOf:\n            - $ref: '#/components/schemas/RadiusStatus'\n            - description: The status of the RADIUS MFA server connection.\n        StageReason:\n          allOf:\n            - $ref: '#/components/schemas/StageReason'\n            - description: Additional information about the directory stage.\n        SsoEnabled:\n          allOf:\n            - $ref: '#/components/schemas/SsoEnabled'\n            - description: 'Indicates if single sign-on is enabled for the directory. For more information, see \u003ca\u003eEnableSso\u003c/a\u003e and \u003ca\u003eDisableSso\u003c/a\u003e.'\n        DesiredNumberOfDomainControllers:\n          allOf:\n            - $ref: '#/components/schemas/DesiredNumberOfDomainControllers'\n            - description: The desired number of domain controllers in the directory if the directory is Microsoft AD.\n        OwnerDirectoryDescription:\n          allOf:\n            - $ref: '#/components/schemas/OwnerDirectoryDescription'\n            - description: Describes the Managed Microsoft AD directory in the directory owner account.\n        RegionsInfo:\n          allOf:\n            - $ref: '#/components/schemas/RegionsInfo'\n            - description: Lists the Regions where the directory has replicated.\n      description: Contains information about an Directory Service directory.\n    DirectoryLimits:\n      type: object\n      properties:\n        CloudOnlyDirectoriesLimit:\n          allOf:\n            - $ref: '#/components/schemas/Limit'\n            - description: The maximum number of cloud directories allowed in the Region.\n        CloudOnlyDirectoriesCurrentCount:\n          allOf:\n            - $ref: '#/components/schemas/Limit'\n            - description: The current number of cloud directories in the Region.\n        CloudOnlyDirectoriesLimitReached:\n          allOf:\n            - $ref: '#/components/schemas/CloudOnlyDirectoriesLimitReached'\n            - description: Indicates if the cloud directory limit has been reached.\n        CloudOnlyMicrosoftADLimit:\n          allOf:\n            - $ref: '#/components/schemas/Limit'\n            - description: The maximum number of Managed Microsoft AD directories allowed in the region.\n        CloudOnlyMicrosoftADCurrentCount:\n          allOf:\n            - $ref: '#/components/schemas/Limit'\n            - description: The current number of Managed Microsoft AD directories in the region.\n        CloudOnlyMicrosoftADLimitReached:\n          allOf:\n            - $ref: '#/components/schemas/CloudOnlyDirectoriesLimitReached'\n            - description: Indicates if the Managed Microsoft AD directory limit has been reached.\n        ConnectedDirectoriesLimit:\n          allOf:\n            - $ref: '#/components/schemas/Limit'\n            - description: The maximum number of connected directories allowed in the Region.\n        ConnectedDirectoriesCurrentCount:\n          allOf:\n            - $ref: '#/components/schemas/Limit'\n            - description: The current number of connected directories in the Region.\n        ConnectedDirectoriesLimitReached:\n          allOf:\n            - $ref: '#/components/schemas/ConnectedDirectoriesLimitReached'\n            - description: Indicates if the connected directory limit has been reached.\n      description: Contains directory limit information for a Region.\n    IpAddr:\n      type: string\n      pattern: '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'\n    DomainControllerId:\n      type: string\n      pattern: '^dc-[0-9a-f]{10}$'\n    SubnetId:\n      type: string\n      pattern: '^(subnet-[0-9a-f]{8}|subnet-[0-9a-f]{17})$'\n    DomainControllerStatus:\n      type: string\n      enum:\n        - Creating\n        - Active\n        - Impaired\n        - Restoring\n        - Deleting\n        - Deleted\n        - Failed\n    DomainControllerStatusReason:\n      type: string\n    DomainController:\n      type: object\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: Identifier of the directory where the domain controller resides.\n        DomainControllerId:\n          allOf:\n            - $ref: '#/components/schemas/DomainControllerId'\n            - description: Identifies a specific domain controller in the directory.\n        DnsIpAddr:\n          allOf:\n            - $ref: '#/components/schemas/IpAddr'\n            - description: The IP address of the domain controller.\n        VpcId:\n          allOf:\n            - $ref: '#/components/schemas/VpcId'\n            - description: The identifier of the VPC that contains the domain controller.\n        SubnetId:\n          allOf:\n            - $ref: '#/components/schemas/SubnetId'\n            - description: Identifier of the subnet in the VPC that contains the domain controller.\n        AvailabilityZone:\n          allOf:\n            - $ref: '#/components/schemas/AvailabilityZone'\n            - description: The Availability Zone where the domain controller is located.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/DomainControllerStatus'\n            - description: The status of the domain controller.\n        StatusReason:\n          allOf:\n            - $ref: '#/components/schemas/DomainControllerStatusReason'\n            - description: A description of the domain controller state.\n        LaunchTime:\n          allOf:\n            - $ref: '#/components/schemas/LaunchTime'\n            - description: Specifies when the domain controller was created.\n        StatusLastUpdatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/LastUpdatedDateTime'\n            - description: The date and time that the status was last updated.\n      description: Contains information about the domain controllers for a specified directory.\n    EndDateTime:\n      type: string\n      format: date-time\n    TopicArn:\n      type: string\n    TopicStatus:\n      type: string\n      enum:\n        - Registered\n        - Topic not found\n        - Failed\n        - Deleted\n    EventTopic:\n      type: object\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The Directory ID of an Directory Service directory that will publish status messages to an Amazon SNS topic.\n        TopicName:\n          allOf:\n            - $ref: '#/components/schemas/TopicName'\n            - description: The name of an Amazon SNS topic the receives status messages from the directory.\n        TopicArn:\n          allOf:\n            - $ref: '#/components/schemas/TopicArn'\n            - description: The Amazon SNS topic ARN (Amazon Resource Name).\n        CreatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/CreatedDateTime'\n            - description: The date and time of when you associated your directory with the Amazon SNS topic.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/TopicStatus'\n            - description: The topic registration status.\n      description: Information about Amazon SNS topic and Directory Service directory associations.\n    SnapshotLimits:\n      type: object\n      properties:\n        ManualSnapshotsLimit:\n          allOf:\n            - $ref: '#/components/schemas/Limit'\n            - description: The maximum number of manual snapshots allowed.\n        ManualSnapshotsCurrentCount:\n          allOf:\n            - $ref: '#/components/schemas/Limit'\n            - description: The current number of manual snapshots of the directory.\n        ManualSnapshotsLimitReached:\n          allOf:\n            - $ref: '#/components/schemas/ManualSnapshotsLimitReached'\n            - description: Indicates if the manual snapshot limit has been reached.\n      description: Contains manual snapshot limit information for a directory.\n    IpRoute:\n      type: object\n      properties:\n        CidrIp:\n          allOf:\n            - $ref: '#/components/schemas/CidrIp'\n            - description: 'IP address block using CIDR format, for example 10.0.0.0/24. This is often the address block of the DNS server used for your self-managed domain. For a single IP address use a CIDR address block with /32. For example 10.0.0.0/32.'\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: Description of the address block.\n      description: 'IP address block. This is often the address block of the DNS server used for your self-managed domain. '\n    IpRouteStatusMsg:\n      type: string\n      enum:\n        - Adding\n        - Added\n        - Removing\n        - Removed\n        - AddFailed\n        - RemoveFailed\n    IpRouteStatusReason:\n      type: string\n    IpRouteInfo:\n      type: object\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: Identifier (ID) of the directory associated with the IP addresses.\n        CidrIp:\n          allOf:\n            - $ref: '#/components/schemas/CidrIp'\n            - description: IP address block in the \u003ca\u003eIpRoute\u003c/a\u003e.\n        IpRouteStatusMsg:\n          allOf:\n            - $ref: '#/components/schemas/IpRouteStatusMsg'\n            - description: The status of the IP address block.\n        AddedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/AddedDateTime'\n            - description: The date and time the address block was added to the directory.\n        IpRouteStatusReason:\n          allOf:\n            - $ref: '#/components/schemas/IpRouteStatusReason'\n            - description: The reason for the IpRouteStatusMsg.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: Description of the \u003ca\u003eIpRouteInfo\u003c/a\u003e.\n      description: Information about one or more IP address blocks.\n    IpRoutesInfo:\n      type: array\n      items:\n        $ref: '#/components/schemas/IpRouteInfo'\n    LDAPSStatus:\n      type: string\n      enum:\n        - Enabling\n        - Enabled\n        - EnableFailed\n        - Disabled\n    LDAPSStatusReason:\n      type: string\n    LDAPSSettingInfo:\n      type: object\n      properties:\n        LDAPSStatus:\n          allOf:\n            - $ref: '#/components/schemas/LDAPSStatus'\n            - description: The state of the LDAPS settings.\n        LDAPSStatusReason:\n          allOf:\n            - $ref: '#/components/schemas/LDAPSStatusReason'\n            - description: Describes a state change for LDAPS.\n        LastUpdatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/LastUpdatedDateTime'\n            - description: The date and time when the LDAPS settings were last updated.\n      description: Contains general information about the LDAPS settings.\n    LdifContent:\n      type: string\n      minLength: 1\n      maxLength: 500000\n    LogSubscriptions:\n      type: array\n      items:\n        $ref: '#/components/schemas/LogSubscription'\n    SchemaExtensionsInfo:\n      type: array\n      items:\n        $ref: '#/components/schemas/SchemaExtensionInfo'\n    SubscriptionCreatedDateTime:\n      type: string\n      format: date-time\n    LogSubscription:\n      type: object\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: Identifier (ID) of the directory that you want to associate with the log subscription.\n        LogGroupName:\n          allOf:\n            - $ref: '#/components/schemas/LogGroupName'\n            - description: The name of the log group.\n        SubscriptionCreatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/SubscriptionCreatedDateTime'\n            - description: The date and time that the log subscription was created.\n      description: 'Represents a log subscription, which tracks real-time data from a chosen log group to a specified destination.'\n    ManualSnapshotsLimitReached:\n      type: boolean\n    PortNumber:\n      type: integer\n      minimum: 1025\n      maximum: 65535\n    RadiusAuthenticationProtocol:\n      type: string\n      enum:\n        - PAP\n        - CHAP\n        - MS-CHAPv1\n        - MS-CHAPv2\n    RadiusDisplayLabel:\n      type: string\n      minLength: 1\n      maxLength: 64\n    RadiusRetries:\n      type: integer\n      minimum: 0\n      maximum: 10\n    Servers:\n      type: array\n      items:\n        $ref: '#/components/schemas/Server'\n    RadiusTimeout:\n      type: integer\n      minimum: 1\n      maximum: 20\n    RadiusSharedSecret:\n      type: string\n      pattern: '^(\\p{LD}|\\p{Punct}| )+$'\n      minLength: 8\n      maxLength: 512\n      format: password\n    UseSameUsername:\n      type: boolean\n    RegionType:\n      type: string\n      enum:\n        - Primary\n        - Additional\n    StateLastUpdatedDateTime:\n      type: string\n      format: date-time\n    RegionDescription:\n      type: object\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The identifier of the directory.\n        RegionName:\n          allOf:\n            - $ref: '#/components/schemas/RegionName'\n            - description: 'The name of the Region. For example, \u003ccode\u003eus-east-1\u003c/code\u003e.'\n        RegionType:\n          allOf:\n            - $ref: '#/components/schemas/RegionType'\n            - description: Specifies whether the Region is the primary Region or an additional Region.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryStage'\n            - description: The status of the replication process for the specified Region.\n        VpcSettings:\n          $ref: '#/components/schemas/DirectoryVpcSettings'\n        DesiredNumberOfDomainControllers:\n          allOf:\n            - $ref: '#/components/schemas/DesiredNumberOfDomainControllers'\n            - description: The desired number of domain controllers in the specified Region for the specified directory.\n        LaunchTime:\n          allOf:\n            - $ref: '#/components/schemas/LaunchTime'\n            - description: Specifies when the Region replication began.\n        StatusLastUpdatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/StateLastUpdatedDateTime'\n            - description: The date and time that the Region status was last updated.\n        LastUpdatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/LastUpdatedDateTime'\n            - description: The date and time that the Region description was last updated.\n      description: The replicated Region information for a directory.\n    TagKeys:\n      type: array\n      items:\n        $ref: '#/components/schemas/TagKey'\n    RequestId:\n      type: string\n      pattern: '^([A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12})$'\n      description: The Amazon Web Services request identifier.\n    UserPassword:\n      type: string\n      minLength: 1\n      maxLength: 127\n      format: password\n    SchemaExtensionStatus:\n      type: string\n      enum:\n        - Initializing\n        - CreatingSnapshot\n        - UpdatingSchema\n        - Replicating\n        - CancelInProgress\n        - RollbackInProgress\n        - Cancelled\n        - Failed\n        - Completed\n    SchemaExtensionStatusReason:\n      type: string\n    StartDateTime:\n      type: string\n      format: date-time\n    SchemaExtensionInfo:\n      type: object\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The identifier of the directory to which the schema extension is applied.\n        SchemaExtensionId:\n          allOf:\n            - $ref: '#/components/schemas/SchemaExtensionId'\n            - description: The identifier of the schema extension.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: A description of the schema extension.\n        SchemaExtensionStatus:\n          allOf:\n            - $ref: '#/components/schemas/SchemaExtensionStatus'\n            - description: The current status of the schema extension.\n        SchemaExtensionStatusReason:\n          allOf:\n            - $ref: '#/components/schemas/SchemaExtensionStatusReason'\n            - description: The reason for the \u003ccode\u003eSchemaExtensionStatus\u003c/code\u003e.\n        StartDateTime:\n          allOf:\n            - $ref: '#/components/schemas/StartDateTime'\n            - description: The date and time that the schema extension started being applied to the directory.\n        EndDateTime:\n          allOf:\n            - $ref: '#/components/schemas/EndDateTime'\n            - description: The date and time that the schema extension was completed.\n      description: Information about a schema extension.\n    Server:\n      type: string\n      minLength: 1\n      maxLength: 256\n    ShareTarget:\n      type: object\n      required:\n        - Id\n        - Type\n      properties:\n        Id:\n          allOf:\n            - $ref: '#/components/schemas/TargetId'\n            - description: Identifier of the directory consumer account.\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/TargetType'\n            - description: Type of identifier to be used in the \u003ccode\u003eId\u003c/code\u003e field.\n      description: Identifier that contains details about the directory consumer account.\n    TargetId:\n      type: string\n      minLength: 1\n      maxLength: 64\n    TargetType:\n      type: string\n      enum:\n        - ACCOUNT\n    SnapshotType:\n      type: string\n      enum:\n        - Auto\n        - Manual\n    SnapshotStatus:\n      type: string\n      enum:\n        - Creating\n        - Completed\n        - Failed\n    StartTime:\n      type: string\n      format: date-time\n    Snapshot:\n      type: object\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The directory identifier.\n        SnapshotId:\n          allOf:\n            - $ref: '#/components/schemas/SnapshotId'\n            - description: The snapshot identifier.\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/SnapshotType'\n            - description: The snapshot type.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/SnapshotName'\n            - description: The descriptive name of the snapshot.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/SnapshotStatus'\n            - description: The snapshot status.\n        StartTime:\n          allOf:\n            - $ref: '#/components/schemas/StartTime'\n            - description: The date and time that the snapshot was taken.\n      description: Describes a directory snapshot.\n    TagKey:\n      type: string\n      pattern: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$'\n      minLength: 1\n      maxLength: 128\n    TagValue:\n      type: string\n      pattern: '^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$'\n      minLength: 0\n      maxLength: 256\n    Tag:\n      type: object\n      required:\n        - Key\n        - Value\n      properties:\n        Key:\n          allOf:\n            - $ref: '#/components/schemas/TagKey'\n            - description: 'Required name of the tag. The string value can be Unicode characters and cannot be prefixed with \"aws:\". The string can contain only the set of Unicode letters, digits, white-space, ''_'', ''.'', ''/'', ''='', ''+'', ''-'' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").'\n        Value:\n          allOf:\n            - $ref: '#/components/schemas/TagValue'\n            - description: 'The optional value of the tag. The string value can be Unicode characters. The string can contain only the set of Unicode letters, digits, white-space, ''_'', ''.'', ''/'', ''='', ''+'', ''-'' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\").'\n      description: Metadata assigned to a directory consisting of a key-value pair.\n    TrustState:\n      type: string\n      enum:\n        - Creating\n        - Created\n        - Verifying\n        - VerifyFailed\n        - Verified\n        - Updating\n        - UpdateFailed\n        - Updated\n        - Deleting\n        - Deleted\n        - Failed\n    TrustStateReason:\n      type: string\n    Trust:\n      type: object\n      properties:\n        DirectoryId:\n          allOf:\n            - $ref: '#/components/schemas/DirectoryId'\n            - description: The Directory ID of the Amazon Web Services directory involved in the trust relationship.\n        TrustId:\n          allOf:\n            - $ref: '#/components/schemas/TrustId'\n            - description: The unique ID of the trust relationship.\n        RemoteDomainName:\n          allOf:\n            - $ref: '#/components/schemas/RemoteDomainName'\n            - description: The Fully Qualified Domain Name (FQDN) of the external domain involved in the trust relationship.\n        TrustType:\n          allOf:\n            - $ref: '#/components/schemas/TrustType'\n            - description: The trust relationship type. \u003ccode\u003eForest\u003c/code\u003e is the default.\n        TrustDirection:\n          allOf:\n            - $ref: '#/components/schemas/TrustDirection'\n            - description: The trust relationship direction.\n        TrustState:\n          allOf:\n            - $ref: '#/components/schemas/TrustState'\n            - description: The trust relationship state.\n        CreatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/CreatedDateTime'\n            - description: The date and time that the trust relationship was created.\n        LastUpdatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/LastUpdatedDateTime'\n            - description: The date and time that the trust relationship was last updated.\n        StateLastUpdatedDateTime:\n          allOf:\n            - $ref: '#/components/schemas/StateLastUpdatedDateTime'\n            - description: The date and time that the TrustState was last updated.\n        TrustStateReason:\n          allOf:\n            - $ref: '#/components/schemas/TrustStateReason'\n            - description: The reason for the TrustState.\n        SelectiveAuth:\n          allOf:\n            - $ref: '#/components/schemas/SelectiveAuth'\n            - description: Current state of selective authentication for the trust.\n      description: Describes a trust relationship between an Managed Microsoft AD directory and an external domain.\n    UnshareTarget:\n      type: object\n      required:\n        - Id\n        - Type\n      properties:\n        Id:\n          allOf:\n            - $ref: '#/components/schemas/TargetId'\n            - description: Identifier of the directory consumer account.\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/TargetType'\n            - description: Type of identifier to be used in the \u003ci\u003eId\u003c/i\u003e field.\n      description: Identifier that contains details about the directory consumer account with whom the directory is being unshared.\nsecurity:\n  - hmac: []\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@20502d3674db5fa060375c4cf54d52234b351baf/-/blob/APIs/amazonaws.com/ds/2015-04-16/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/20502d3674db5fa060375c4cf54d52234b351baf/APIs/amazonaws.com/ds/2015-04-16/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: at 1:119094: duplicate path: \"/#X-Amz-Target=DirectoryService_20150416.AddIpRoutes\""
}