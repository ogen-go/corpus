{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/SCADA-LTS/Scada-LTS"
		},
		"file": {
			"name": "ScadaLTS_API_OAS3.yaml",
			"size": 0,
			"path": "doc/RESTAPI/ScadaLTS_API_OAS3.yaml",
			"byteSize": 74705,
			"content": "openapi: 3.0.0\nservers:\n  - url: 'http://localhost:8080/ScadaBR/api'\n    description: 'Scada development Server'\n    variables: {}\ninfo:\n  version: 2.6.0\n  title: Scada-LTS API\n  description: 'Scada-LTS OpenAPI Specification. REST API interface description with examples and request structure. It can be easily imported into Postman or Swagger application.'\n  termsOfService: ''\n  contact:\n    name: 'Radek - SoftQ Developer'\n    email: 'rjajko@softq.pl'\n  license:\n    name: 'GPL-2.0'\npaths:\n  /auth/{username}/{password}:\n    get:\n      tags:\n        - AuthenticationAPI\n      summary: 'Authenticate to the Scada-LTS'\n      description: 'Login user to the ScadaLTS'\n      operationId: 'loginUser'\n      parameters:\n        - name: username\n          in: 'path'\n          required: true\n          schema:\n            type: 'string'\n        - name: 'password'\n          in: 'path'\n          required: true\n          schema:\n            type: 'string'\n      responses:\n        '200':\n          description: 'Logged successful'\n          headers: {}\n  /auth/logout/{username}:\n    get:\n      tags:\n        - AuthenticationAPI\n      summary: 'Logout from Scada-LTS'\n      description: 'Logout user from Scada-LTS'\n      operationId: 'logoutUser'\n      parameters:\n        - name: 'username'\n          in: 'path'\n          required: true\n          schema:\n            type: 'string'\n      responses:\n        '200':\n          description: 'Logged out succesful'\n          headers: {}\n  /auth/isLogged/{username}:\n    get:\n      tags:\n        - AuthenticationAPI\n      summary: 'Check if user is logged in'\n      description: 'Check if user is logged in'\n      operationId: 'http://localhost:8080/ScadaBR/api/auth/isLogged/admin'\n      parameters:\n        - name: 'username'\n          in: 'path'\n          required: true\n          schema:\n            type: 'string'\n      responses:\n        '200':\n          description: ''\n          headers: {}\n  /auth/isRoleAdmin:\n    get:\n      tags:\n        - AuthenticationAPI\n      summary: 'Check if user has admin rights'\n      description: 'Check if user has admin rights'\n      operationId: 'isRoleAdmin'\n      responses:\n        '200':\n          description: ''\n          headers: {}\n  /auth/isRoleUser:\n    get:\n      tags:\n        - AuthenticationAPI\n      summary: 'Check if user has no admin rights'\n      description: 'Check if user has no admin rights'\n      operationId: 'isRoleUser'\n      responses:\n        '200':\n          description: ''\n          headers: {}\n  /auth/user:\n    get:\n      tags:\n        - AuthenticationAPI\n      summary: 'Get basic user info'\n      description: 'Fetch basic user information'\n      operationId: 'getUser'\n      responses:\n        '200':\n          description: 'Simple User Information'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonUser'\n  /config/replacealert:\n    get:\n      tags:\n        - ConfigAPI\n      responses:\n        '200':\n          description: ''\n  /datapoint:\n    get:\n      tags:\n        - DataPointAPI\n      parameters:\n        - name: 'id'\n          description: 'DataPoint ID'\n          in: 'query'\n          required: false\n          schema:\n            type: number\n        - name: 'xid'\n          description: 'DataPoint Export ID'\n          in: 'query'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Get complete Data Point object'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DataPointVO'\n  /datapoints:\n    get:\n      tags:\n        - DataPointAPI\n      responses:\n        '200':\n          description: 'Get more detailed Data Point object'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/JsonDataPoint'\n  /datapoints/datasource:\n    get:\n      tags:\n        - DataPointAPI\n      parameters:\n        - name: 'id'\n          description: 'DataSource ID'\n          in: 'query'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: 'Get more detailed Data Point object'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/JsonDataPoint'\n  /datapoint/getAll:\n    get:\n      tags:\n        - DataPointAPI\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: number\n                    name:\n                      type: string\n                    xid:\n                      type: string\n                    description:\n                      type: string\n  /datapoint/{datasourceId}/getAllPlc:\n    get:\n      tags:\n        - DataPointAPI\n      parameters:\n        - name: 'datasourceId'\n          description: 'DataSource ID'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: number\n                    name:\n                      type: string\n                    xid:\n                      type: string\n                    description:\n                      type: string\n  /datasource:\n    get:\n      tags:\n        - DataSourceAPI\n      parameters:\n      - name: 'xid'\n        description: 'DataSource XID'\n        in: 'path'\n        required: true\n        schema:\n          type: number\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  enabled:\n                    type: boolean\n                  xid:\n                    type: string\n                  id:\n                    type: number\n                  name:\n                    type: string\n  /datasource/getAll:\n    get:\n      tags:\n        - DataSourceAPI\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ScadaObjectIdentifier'\n  /userProfiles/:\n    get:\n      tags:\n        - UserProfilesAPI\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ScadaObjectIdentifier'\n    post:\n      tags:\n        - UserProfilesAPI\n      requestBody:\n        description: User Profile creation\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserProfileVO'\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserProfileVO'\n    put:\n      tags:\n        - UserProfilesAPI\n      requestBody:\n        description: User Profile update\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserProfileVO'\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserProfileVO'\n  /userProfiles/{id}:\n    get:\n      tags:\n        - UserProfilesAPI\n      parameters:\n        - name: 'id'\n          description: 'User Profile ID'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserProfileVO'\n    delete:\n      tags:\n        - UserProfilesAPI\n      parameters:\n        - name: 'id'\n          description: 'User Profile ID'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: number\n  /userProfiles/generateXid:\n    get:\n      tags:\n        - UserProfilesAPI\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: string\n  /events/datapoint/{id}:\n    get:\n      tags:\n        - EventsAPI\n      parameters:\n        - name: 'id'\n          description: 'DataPoint ID'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n        - name: 'limit'\n          description: 'Limit the result set (DEFAULT 1000)'\n          in: 'query'\n          schema:\n            type: number\n        - name: 'offset'\n          description: 'Offset the result set (DEFAULT 0)'\n          in: 'query'\n          schema:\n            type: number\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/EventDTO'\n  /events/ack/{id}:\n    get:\n      tags:\n        - EventsAPI\n      parameters:\n        - name: 'id'\n          description: 'Event ID'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: ''\n  /view/getAll:\n    get:\n      tags:\n        - ViewAPI\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ScadaObjectIdentifier'\n\n  /view/getByXid/{xid}:\n    get:\n      tags:\n        - ViewAPI\n      parameters:\n        - name: 'xid'\n          in: 'path'\n          required: true\n          schema:\n            type: 'string'\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: number\n                    xid:\n                      type: string\n  /view/createView:\n    post:\n      tags:\n        - ViewAPI\n      requestBody:\n        description: Event Handler with Point properties\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                xid:\n                  type: string\n                imagePath:\n                  type: string\n                size:\n                  type: number\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  name:\n                    type: string\n                  xid:\n                    type: string\n                  userId:\n                    type: string\n                  resolution:\n                    type: number\n                  filename:\n                    type: string\n  /pointHierarchy/pointMoveTo/{xid_point}/{xid_folder}:\n    put:\n      tags:\n        - PointHierarchyAPI\n      parameters:\n        - name: 'xid_point'\n          in: 'path'\n          required: true\n          schema:\n            type: 'string'\n        - name: 'xid_folder'\n          in: 'path'\n          required: true\n          schema:\n            type: 'string'\n      responses:\n        '200':\n          description: ''\n  /pointHierarchy/folderMoveTo/{xid_folder}/{new_parent_xid_folder}:\n    put:\n      tags:\n        - PointHierarchyAPI\n      parameters:\n        - name: 'xid_folder'\n          in: 'path'\n          required: true\n          schema:\n            type: 'string'\n        - name: 'new_parent_xid_folder'\n          in: 'path'\n          required: true\n          schema:\n            type: 'string'\n      responses:\n        '200':\n          description: ''\n  /pointHierarchy/changeName/{xid_folder}/{new_name}:\n    put:\n      tags:\n        - PointHierarchyAPI\n      parameters:\n        - name: 'xid_folder'\n          in: 'path'\n          required: true\n          schema:\n            type: 'string'\n        - name: 'new_name'\n          in: 'path'\n          required: true\n          schema:\n            type: 'string'\n      responses:\n        '200':\n          description: ''\n  /pointHierarchy/folderAdd:\n    post:\n      tags:\n        - PointHierarchyAPI\n      requestBody:\n        description: Folder structure\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                id:\n                  type: number\n                xid:\n                  type: string\n                name:\n                  type: string\n                parentId:\n                  type: number\n                parentXid:\n                  type: string\n                pointXids:\n                  type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: ''\n  /pointHierarchy/folderCheckExist/{xid_folder}:\n    get:\n      tags:\n        - PointHierarchyAPI\n      parameters:\n        - name: 'xid_folder'\n          in: 'path'\n          required: true\n          schema:\n            type: 'string'\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: number\n                  xid:\n                    type: string\n                  name:\n                    type: string\n                  parentId:\n                    type: number\n                  parentXid:\n                    type: string\n                  pointXids:\n                    type: array\n                    items:\n                      type: string\n  /pointHierarchy/export:\n    get:\n      tags:\n        - PointHierarchyAPI\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    name:\n                      type: string\n                    xidFolder:\n                      type: string\n                    parentXid:\n                      type: string\n                    pointXids:\n                      type: array\n                      items:\n                        type: string\n  /pointHierarchy/deleteFolder/{xid_folder}:\n    post:\n      tags:\n        - PointHierarchyAPI\n      parameters:\n        - name: 'xid_folder'\n          in: 'path'\n          required: true\n          schema:\n            type: 'string'\n      responses:\n        '200':\n          description: ''\n  /pointHierarchy/cacheRefresh:\n    post:\n      tags:\n        - PointHierarchyAPI\n      responses:\n        '200':\n          description: ''\n  /pointHierarchy/checkConsitencyPointHierarchy:\n    get:\n      tags:\n        - PointHierarchyAPI\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    xidPoint:\n                      type: string\n                    xidFolder:\n                      type: string\n                    idFolder:\n                      type: number\n                    folderExist:\n                      type: boolean\n  /point_value/getValue/{xid}:\n    get:\n      tags:\n        - PointValueAPI\n      parameters:\n        - name: 'xid'\n          in: 'path'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  name:\n                    type: string\n                  xid:\n                    type: string\n                  value:\n                    type: string\n                  formattedValue:\n                    type: string\n                  ts:\n                    type: number\n                  type:\n                    type: string\n                  textRenderer:\n                    type: object\n                  chartColour:\n                    type: string\n  /point_value/getValue/id/{id}:\n    get:\n      tags:\n        - PointValueAPI\n      parameters:\n        - name: 'id'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  name:\n                    type: string\n                  xid:\n                    type: string\n                  value:\n                    type: string\n                  formattedValue:\n                    type: string\n                  ts:\n                    type: number\n                  type:\n                    type: string\n                  textRenderer:\n                    type: object\n                  chartColour:\n                    type: string\n  /point_value/setValue/{xid}/{type}/{value}:\n    post:\n      tags:\n        - PointValueAPI\n      deprecated: true\n      parameters:\n        - name: 'xid'\n          in: 'path'\n          required: true\n          schema:\n            type: string\n        - name: 'type'\n          description: 'Type 0 -\u003e unknown, 1 -\u003e binary, 2 -\u003e Multistate, 3 -\u003e Double, 4 -\u003e String'\n          in: 'path'\n          required: true\n          schema:\n            type: string\n        - name: 'value'\n          description: 'For binary data acceptable only 0 or 1 value'\n          in: 'path'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n  /point_value/setValue/{xid}/{type}/:\n    post:\n      tags:\n        - PointValueAPI\n      description: 'New set value method that set up value using request body'\n      parameters:\n        - name: 'xid'\n          in: 'path'\n          required: true\n          schema:\n            type: string\n        - name: 'type'\n          description: 'Type [0|1|2|3|4] maps to DP type: [unknown|binary|multistate|double|string]'\n          in: 'path'\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          raw:\n            schema:\n              type: string\n      responses:\n        '200':\n          description: ''\n  /point_value/getValuesFromTime/{ts}/{xid}:\n    get:\n      tags:\n        - PointValueAPI\n      parameters:\n        - name: 'ts'\n          description: 'Time value in Timestamp'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n        - name: 'xid'\n          in: 'path'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PointValuesJSON'\n  /point_value/getValuesFromTime/id/{ts}/{id}:\n    get:\n      tags:\n        - PointValueAPI\n      parameters:\n        - name: 'ts'\n          description: 'Time value in Timestamp'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n        - name: 'id'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PointValuesJSON'\n  /point_value/getValuesFromTimePeriod/xid/{xid}/{sts}/{ets}:\n    get:\n      tags:\n        - PointValueAPI\n      parameters:\n        - name: 'xid'\n          in: 'path'\n          required: true\n          schema:\n            type: string\n        - name: 'sts'\n          in: 'path'\n          description: 'Start TimeStamp (sts)'\n          required: true\n          schema:\n            type: number\n        - name: 'ets'\n          in: 'path'\n          description: 'End TimeStamp (ets)'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PointValuesJSON'\n  /point_value/getValuesFromTimePeriod/{id}/{sts}/{ets}:\n    get:\n      tags:\n        - PointValueAPI\n      parameters:\n        - name: 'id'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n        - name: 'sts'\n          in: 'path'\n          description: 'Start TimeStamp (sts)'\n          required: true\n          schema:\n            type: number\n        - name: 'ets'\n          in: 'path'\n          description: 'End TimeStamp (ets)'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PointValuesJSON'\n  /point_value/updateMetaDataPointByScript/{xid}:\n    get:\n      tags:\n        - PointValueAPI\n      parameters:\n        - name: 'xid'\n          in: 'path'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n  /point_value/updateMetaDataPointsByScript/{xid}:\n    get:\n      tags:\n        - PointValueAPI\n      parameters:\n        - name: 'xid'\n          in: 'path'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n  /point_value/updateAllMetaDataPointsByScript:\n    get:\n      tags:\n        - PointValueAPI\n      responses:\n        '200':\n          description: ''\n  /users/:\n    get:\n      tags:\n        - UsersAPI\n      responses:\n        '200':\n          description: 'Simple list of basic users info'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/JsonUserInfo'\n    post:\n      tags:\n        - UsersAPI\n      requestBody:\n        description: 'User Object with Password'\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JsonUserPassword'\n      responses:\n        '200':\n          description: 'Create User'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/JsonUser'\n    put:\n      tags:\n        - UsersAPI\n      requestBody:\n        description: 'User Object'\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JsonUser'\n      responses:\n        '200':\n          description: 'Create User'\n          content:\n            application/json:\n              schema:\n                type: number\n  /users/{id}:\n    get:\n      tags:\n        - UsersAPI\n      parameters:\n        - name: 'id'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: 'User Details'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonUser'\n    delete:\n      tags:\n        - UsersAPI\n      parameters:\n        - name: 'id'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: 'User Details'\n          content:\n            application/json:\n              schema:\n                type: number\n\n  /users/password:\n    put:\n      tags:\n        - UsersAPI\n      requestBody:\n        description: 'User Object'\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                userId:\n                  type: number\n                password:\n                  type: string\n                oldPassword:\n                  description: 'Old Password is required only for non admin users'\n                  type: number\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: number\n  /watch-lists:\n    get:\n      tags:\n        - WatchListAPI\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: number\n                    xid:\n                      type: string\n                    name:\n                      type: string\n  /watch-lists/{id}:\n    get:\n      tags:\n        - WatchListAPI\n      parameters:\n        - name: 'id'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: number\n                  xid:\n                    type: string\n                  name:\n                    type: string\n                  userId:\n                    type: number\n                  pointList:\n                    type: array\n                    items:\n                      type: object\n                  watchListUsers:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        userId:\n                          type: number\n                        accessType:\n                          type: number\n  /watch-lists/xid/{xid}:\n    get:\n      tags:\n        - WatchListAPI\n      parameters:\n        - name: 'xid'\n          in: 'path'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: number\n                  xid:\n                    type: string\n                  name:\n                    type: string\n                  userId:\n                    type: number\n                  pointList:\n                    type: array\n                    items:\n                      type: object\n                  watchListUsers:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        userId:\n                          type: number\n                        accessType:\n                          type: number\n  /watch-lists/getNames:\n    get:\n      tags:\n        - WatchListAPI\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: number\n                    name:\n                      type: string\n  /watch-lists/getPoints/{xid}:\n    get:\n      tags:\n        - WatchListAPI\n      parameters:\n        - name: 'xid'\n          in: 'path'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: number\n                    name:\n                      type: string\n  /watch-lists/getChartData/{xid}/{fromData}/{toData}:\n    get:\n      tags:\n        - WatchListAPI\n      parameters:\n        - name: 'xid'\n          in: 'path'\n          required: true\n          schema:\n            type: string\n        - name: 'fromData'\n          in: 'path'\n          required: true\n          schema:\n            type: string\n        - name: 'toData'\n          in: 'path'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  name:\n                    type: string\n                  xid:\n                    type: string\n                  values:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        name:\n                          type: string\n                        xid:\n                          type: string\n                        type:\n                          type: string\n                        formatedValue:\n                          type: string\n                        value:\n                          type: string\n                        textRenderer:\n                          type: object\n                        chartColour:\n                          type: string\n  /point_properties/getProperties/{xid}:\n    get:\n      tags:\n        - PointPropertiesAPI\n      parameters:\n        - name: 'xid'\n          in: 'path'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PointPropertiesJSON'\n  /point_properties/getPropertiesBaseOnId/{id}:\n    get:\n      tags:\n        - PointPropertiesAPI\n      parameters:\n        - name: 'id'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PointPropertiesJSON'\n  /point_properties/{id}/purge:\n    patch:\n      tags:\n        - PointPropertiesAPI\n      parameters:\n        - name: 'id'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n        - name: 'all'\n          in: 'query'\n          schema:\n            type: boolean\n        - name: 'type'\n          in: 'query'\n          schema:\n            type: number\n        - name: 'period'\n          in: 'query'\n          schema:\n            type: number\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  deleted:\n                    type: number\n  /point_properties/{id}/purgeNowPeriod:\n    patch:\n      tags:\n        - PointPropertiesAPI\n      parameters:\n        - name: 'id'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n        - name: 'type'\n          in: 'query'\n          required: true\n          schema:\n            type: number\n        - name: 'period'\n          in: 'query'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  deleted:\n                    type: number\n  /point_properties/{id}/purgeNowAll:\n    patch:\n      tags:\n        - PointPropertiesAPI\n      parameters:\n        - name: 'id'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  deleted:\n                    type: number\n  /point_properties/{id}/purgeNowLimit:\n    patch:\n      tags:\n        - PointPropertiesAPI\n      parameters:\n        - name: 'id'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n        - name: 'limit'\n          in: 'query'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  deleted:\n                    type: number\n  /point_properties/{id}/clearcache:\n    patch:\n      tags:\n        - PointPropertiesAPI\n      parameters:\n        - name: 'id'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: string\n\n  /point_properties/{id}/toggle:\n    patch:\n      tags:\n        - PointPropertiesAPI\n      parameters:\n        - name: 'id'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  enabled:\n                    type: string\n  /point_properties/updateProperties:\n    put:\n      tags:\n        - PointPropertiesAPI\n      parameters:\n        - name: 'id'\n          in: 'query'\n          required: false\n          schema:\n            type: number\n        - name: 'xid'\n          in: 'query'\n          required: false\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                description:\n                  type: string\n                enabled:\n                  type: boolean\n                loggingtype:\n                  type: number\n                intervalLoggingPeriodType:\n                  type: number\n                intervalLoggingPeriod:\n                  type: number\n                intervalLoggingType:\n                  type: number\n                tolerance:\n                  type: number\n                purgeType:\n                  type: number\n                purgePeriod:\n                  type: number\n                eventTextRenderer:\n                  type: object\n                textRenderer:\n                  type: object\n                chartRenderer:\n                  type: object\n                defaultCacheSize:\n                  type: number\n                discardExtremeValues:\n                  type: boolean\n                discardLowLimit:\n                  type: number\n                discardHighLimit:\n                  type: number\n                engineeringUnits:\n                  type: number\n                chartColour:\n                  type: string\n      responses:\n        '200':\n          description: \"Put successful\"\n          headers: { }\n  /point_properties/getPointDescription:\n    get:\n      tags:\n        - PointPropertiesAPI\n      parameters:\n        - name: 'id'\n          in: 'query'\n          required: false\n          schema:\n            type: number\n        - name: 'xid'\n          in: 'query'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Get successful'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonDescription'\n  /point_properties/getBinaryEventRenderer:\n    get:\n      tags:\n        - PointPropertiesAPI\n      parameters:\n        - name: 'id'\n          in: 'query'\n          required: false\n          schema:\n            type: number\n        - name: 'xid'\n          in: 'query'\n          required: false\n          schema:\n            type: string\n        - name: 'value'\n          in: 'query'\n          schema:\n            type: number\n      responses:\n        '200':\n          description: 'Get successful'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JsonBinaryEventTextRenderer'\n\n  /check-time-reactivation/{idDs}:\n    get:\n      tags:\n        - ReactivationDsAPI\n      parameters:\n        - name: 'idDs'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: ''\n  /check-enable-reactivation/{idDs}:\n    get:\n      tags:\n        - ReactivationDsAPI\n      parameters:\n        - name: 'idDs'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: ''\n  /disable-reactivation/{idDs}:\n    get:\n      tags:\n        - ReactivationDsAPI\n      parameters:\n        - name: 'idDs'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: ''\n  /enable-reactivation/{idDs}:\n    get:\n      tags:\n        - ReactivationDsAPI\n      parameters:\n        - name: 'idDs'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: ''\n  /resources/imagesRefresh:\n    get:\n      tags:\n        - ResourcesAPI\n      responses:\n        '200':\n          description: ''\n  /view_hierarchy/getAll:\n    get:\n      tags:\n        - ViewHierarchyAPI\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    title:\n                      type: string\n                    key:\n                      type: number\n                    folder:\n                      type: boolean\n                    children:\n                      type: array\n                      items:\n                        type: object\n  /view_hierarchy/createFolder/{name}/{parentId}:\n    get:\n      tags:\n        - ViewHierarchyAPI\n      parameters:\n        - name: 'name'\n          in: 'path'\n          required: true\n          schema:\n            type: string\n        - name: 'parentId'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: number\n                  parentId:\n                    type: number\n                  name:\n                    type: string\n  /view_hierarchy/editFolder/{name}/{key}:\n    get:\n      tags:\n        - ViewHierarchyAPI\n      parameters:\n        - name: 'name'\n          in: 'path'\n          required: true\n          schema:\n            type: string\n        - name: 'key'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: number\n                  parentId:\n                    type: number\n                  name:\n                    type: string\n  /view_hierarchy/deleteFolder/{id}:\n    get:\n      tags:\n        - ViewHierarchyAPI\n      parameters:\n        - name: 'id'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: ''\n  /view_hierarchy/deleteView/{id}:\n    get:\n      tags:\n        - ViewHierarchyAPI\n      parameters:\n        - name: 'id'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: ''\n  /view_hierarchy/moveFolder/{id}/{newParentId}:\n    get:\n      tags:\n        - ViewHierarchyAPI\n      parameters:\n        - name: 'id'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n        - name: 'newParentId'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: ''\n  /view_hierarchy/moveView/{id}/{newParentId}:\n    get:\n      tags:\n        - ViewHierarchyAPI\n      parameters:\n        - name: 'id'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n        - name: 'newParentId'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: ''\n  /view_hierarchy/getFirsViewId:\n    get:\n      tags:\n        - ViewHierarchyAPI\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  key:\n                    type: number\n                  title:\n                    type: string\n                  folder:\n                    type: boolean\n                  children:\n                    type: array\n                    items:\n                      type: object\n  /alarms/acknowledge/{id}:\n    post:\n      tags:\n        - PlcAlarmsAPI\n      parameters:\n        - name: 'id'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: number\n                  request:\n                    type: string\n                  error:\n                    type: string\n  /alarms/live/{offset}/{limit}:\n    get:\n      tags:\n        - PlcAlarmsAPI\n      parameters:\n        - name: 'offset'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n        - name: 'limit'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: number\n                    name:\n                      type: string\n                    level:\n                      type: number\n                    activation-time:\n                      type: string\n                    inactivation-time:\n                      type: string\n  /alarms/history/{day_date}/{data_point_name_filter_regex}/{offset}/{limit}:\n    get:\n      tags:\n        - PlcAlarmsAPI\n      parameters:\n        - name: 'day_date'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n        - name: 'data_point_name_filter_regex'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n        - name: 'offset'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n        - name: 'limit'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: number\n                    name:\n                      type: string\n                    level:\n                      type: number\n                    activation-time:\n                      type: string\n                    inactivation-time:\n                      type: string\n  //pointHierarchy/{key}:\n    get:\n      tags:\n        - PointHierarchyController\n      parameters:\n        - name: 'key'\n          in: 'path'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    key:\n                      type: number\n                    title:\n                      type: string\n                    xid:\n                      type: string\n                    folder:\n                      type: boolean\n                    parentId:\n                      type: number\n                    lazy:\n                      type: boolean\n                    pointHierarchyDataSource:\n                      type: object\n  //pointHierarchy/del/{parentId}/{key}/{isFolder}:\n    post:\n      tags:\n        - PointHierarchyController\n      parameters:\n        - name: 'parentId'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n        - name: 'key'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n        - name: 'isFolder'\n          in: 'path'\n          required: true\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: ''\n  //pointHierarchy/new/{newParentId}/{newTitle}:\n    post:\n      tags:\n        - PointHierarchyController\n      parameters:\n        - name: 'newParentId'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n        - name: 'newTitle'\n          in: 'path'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n  //pointHierarchy/edit/{parentId}/{key}/{newTitle}:\n    post:\n      tags:\n        - PointHierarchyController\n      parameters:\n        - name: 'parentId'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n        - name: 'key'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n        - name: 'newTitle'\n          in: 'path'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n  //pointHierarchy/move/{key}/{oldParentId}/{newParentId}/{isFolder}:\n    post:\n      tags:\n        - PointHierarchyController\n      parameters:\n        - name: 'key'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n        - name: 'oldParentId'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n        - name: 'newParentId'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n        - name: 'isFolder'\n          in: 'path'\n          required: true\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: ''\n  /systemSettings/getSettings:\n    get:\n      tags:\n        - SystemSettingsAPI\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  databaseType:\n                    type: object\n                  systemEventTypes:\n                    type: array\n                    items:\n                      type: object\n                  auditEventTypes:\n                    type: array\n                    items:\n                      type: object\n                  emailSettings:\n                    type: object\n                  scadaConfig:\n                    type: object\n                  systemInfoSettings:\n                    type: object\n                  httpSettings:\n                    type: object\n                  miscSettings:\n                    type: object\n  /systemSettings/getEmail:\n    get:\n      tags:\n        - SystemSettingsAPI\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SettingsEmailJSON'\n  /systemSettings/saveEmail:\n    post:\n      tags:\n        - SystemSettingsAPI\n      requestBody:\n        description: ''\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SettingsEmailJSON'\n      responses:\n        '200':\n          description: ''\n  /systemSettings/sendTestEmail:\n    get:\n      tags:\n        - SystemSettingsAPI\n      responses:\n        '200':\n          description: ''\n  /systemSettings/getHttp:\n    get:\n      tags:\n        - SystemSettingsAPI\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SettingsHttpJSON'\n  /systemSettings/saveHttp:\n    post:\n      tags:\n        - SystemSettingsAPI\n      requestBody:\n        description: ''\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SettingsHttpJSON'\n      responses:\n        '200':\n          description: ''\n  /systemSettings/getMisc:\n    get:\n      tags:\n        - SystemSettingsAPI\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SettingsMiscJSON'\n  /systemSettings/saveMisc:\n    post:\n      tags:\n        - SystemSettingsAPI\n      requestBody:\n        description: ''\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SettingsMiscJSON'\n      responses:\n        '200':\n          description: ''\n  /systemSettings/getAuditEventAlarmLevels:\n    get:\n      tags:\n        - SystemSettingsAPI\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SettingsDualJSON'\n  /systemSettings/saveAuditEventAlarmLevels:\n    post:\n      tags:\n        - SystemSettingsAPI\n      requestBody:\n        description: ''\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/SettingsEmailJSON'\n      responses:\n        '200':\n          description: ''\n  /systemSettings/getSystemEventAlarmLevels:\n    get:\n      tags:\n        - SystemSettingsAPI\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SettingsDualJSON'\n  /systemSettings/saveSystemEventAlarmLevels:\n    post:\n      tags:\n        - SystemSettingsAPI\n      requestBody:\n        description: ''\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/SettingsEmailJSON'\n      responses:\n        '200':\n          description: ''\n  /systemSettings/getSystemInfo:\n    get:\n      tags:\n        - SystemSettingsAPI\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SettingsSystemInfoJSON'\n  /systemSettings/saveSystemInfo:\n    post:\n      tags:\n        - SystemSettingsAPI\n      requestBody:\n        description: ''\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SettingsSystemInfoJSON'\n      responses:\n        '200':\n          description: ''\n  /systemSettings/getDatabaseType:\n    get:\n      tags:\n        - SystemSettingsAPI\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  databaseType:\n                    type: string\n  /systemSettings/saveDatabaseType/{databaseType}:\n    get:\n      tags:\n        - SystemSettingsAPI\n      parameters:\n        - name: 'databaseType'\n          in: 'path'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: string\n  /systemSettings/getDatabaseSize:\n    get:\n      tags:\n        - SystemSettingsAPI\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  totalSize:\n                    type: string\n                  filedataSize:\n                    type: number\n                  topPoints:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        pointId:\n                          type: number\n                        pointName:\n                          type: string\n                        count:\n                          type: number\n  /systemSettings/purgeData:\n    get:\n      tags:\n        - SystemSettingsAPI\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n  /systemSettings/getStartupTime:\n    get:\n      tags:\n        - SystemSettingsAPI\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  startupTime:\n                    type: string\n  /systemSettings/getSchemaVersion:\n    get:\n      tags:\n        - SystemSettingsAPI\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  schemaVersion:\n                    type: string\n  /systemSettings/getScadaConfig:\n    get:\n      tags:\n        - SystemSettingsAPI\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SystemScadaConfigJSON'\n  /synoptic-panels:\n    get:\n      tags:\n        - SynopticPanelAPI\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ScadaObjectIdentifier'\n    post:\n      tags:\n        - SynopticPanelAPI\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SynopticPanelJSON'\n      responses:\n        '201':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SynopticPanelJSON'\n    put:\n      tags:\n        - SynopticPanelAPI\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SynopticPanelJSON'\n      responses:\n        '201':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SynopticPanelJSON'\n  /synoptic-panels/{id}:\n    get:\n      tags:\n        - SynopticPanelAPI\n      parameters:\n        - name: 'id'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: 'Synoptic Panel Item'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SynopticPanelJSON'\n        '204':\n          description: 'No content'\n    delete:\n      tags:\n        - SynopticPanelAPI\n      parameters:\n        - name: 'id'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: string\n  /userComment/{typeId}/{refId}:\n    post:\n      tags:\n        - UserCommentAPI\n      parameters:\n        - name: 'typeId'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n        - name: 'refId'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n      requestBody:\n        description: UserComment properties\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserComment'\n      responses:\n        '200':\n          description: ''\n  /userComment/{typeId}/{refId}/{userId}/{ts}:\n    delete:\n      tags:\n        - UserCommentAPI\n      parameters:\n        - name: 'typeId'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n        - name: 'refId'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n        - name: 'userId'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n        - name: 'ts'\n          in: 'path'\n          required: true\n          schema:\n            type: number\n      responses:\n        '200':\n          description: ''\n\ncomponents:\n  schemas:\n    JsonDataPoint:\n      type: object\n      properties:\n        id:\n          type: number\n        name:\n          type: string\n        xid:\n          type: string\n        enabled:\n          type: boolean\n        description:\n          type: string\n        datasourceName:\n          type: string\n        typeId:\n          type: number\n        settable:\n          type: boolean\n    EventDTO:\n      type: object\n      properties:\n        id:\n          type: number\n        typeId:\n          type: number\n        typeRef1:\n          type: number\n        typeRef2:\n          type: number\n        activeTs:\n          type: number\n        rtnApplicable:\n          type: boolean\n        rtnTs:\n          type: number\n        rtnCause:\n          type: number\n        alarmLevel:\n          type: number\n        message:\n          type: string\n        ackTs:\n          type: number\n        username:\n          type: string\n        ackAlternateSource:\n          type: number\n        userComments:\n          type: object\n    DataPointVO:\n      type: object\n      properties:\n        id:\n          type: number\n        xid:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        dataSourceId:\n          type: number\n        deviceName:\n          type: string\n        enabled:\n          type: boolean\n        pointFolderId:\n          type: number\n        loggingType:\n          type: number\n        intervalLoggingPeriodType:\n          type: number\n        intervalLoggingPeriod:\n          type: number\n        intervalLoggingType:\n          type: number\n        tolerance:\n          type: number\n        purgeType:\n          type: number\n        purgePeriod:\n          type: number\n        eventTextRenderer:\n          type: object\n        textRenderer:\n          type: object\n        chartRenderer:\n          type: object\n        eventDetectors:\n          type: array\n          items:\n            type: object\n        comments:\n          type: array\n          items:\n            type: object\n        defaultCacheSize:\n          type: number\n        discardExtremeValues:\n          type: boolean\n        discardLowLimit:\n          type: string\n        discardHighLimit:\n          type: number\n        engineeringUnits:\n          type: number\n        chartColour:\n          type: string\n    PointValuesJSON:\n      type: object\n      properties:\n        name:\n          type: string\n        xid:\n          type: string\n        type:\n          type: string\n        fromTs:\n          type: number\n        toTs:\n          type: number\n        textRenderer:\n          type: object\n        chartColour:\n          type: string\n        values:\n          type: array\n          items:\n            type: object\n            properties:\n              value:\n                type: string\n              ts:\n                type: number\n    PointPropertiesJSON:\n      type: object\n      properties:\n        name:\n          type: string\n        extendedName:\n          type: string\n        deviceName:\n          type: string\n        intervalLoggingType:\n          type: number\n        intervalLoggingPeriod:\n          type: number\n        intervalLoggingPeriodType:\n          type: number\n        purgeType:\n          type: number\n        purgePeriod:\n          type: string\n        descConfiguration:\n          type: string\n        dataSourceName:\n          type: string\n        dataSourceXId:\n          type: string\n        dataTypeMessage:\n          type: string\n        chartColour:\n          type: string\n        chartRenderer:\n          type: object\n        discardLowLimit:\n          type: number\n        discardHighLimit:\n          type: number\n        textRenderer:\n          type: string\n        tolerance:\n          type: number\n        typeKey:\n          type: string\n        engineeringUnits:\n          type: number\n    SettingsEmailJSON:\n      type: object\n      properties:\n        auth:\n          type: boolean\n        tls:\n          type: boolean\n        contentType:\n          type: number\n        port:\n          type: number\n        from:\n          type: string\n        host:\n          type: string\n        name:\n          type: string\n        username:\n          type: string\n        password:\n          type: string\n    SettingsHttpJSON:\n      type: object\n      properties:\n        useProxy:\n          type: boolean\n        port:\n          type: number\n        host:\n          type: string\n        username:\n          type: string\n        password:\n          type: string\n    SettingsMiscJSON:\n      type: object\n      properties:\n        groveLogging:\n          type: boolean\n        eventPurgePeriodType:\n          type: number\n        eventPurgePeriods:\n          type: number\n        reportPurgePeriodType:\n          type: number\n        reportPurgePeriods:\n          type: number\n        uiPerformance:\n          type: number\n        futureDateLimitPeriodType:\n          type: number\n        futureDateLimitPeriods:\n          type: number\n    SettingsDualJSON:\n      type: object\n      properties:\n        i1:\n          type: number\n        i2:\n          type: number\n        translation:\n          type: string\n    SettingsSystemInfoJSON:\n      type: object\n      properties:\n        newVersionNotficationLevel:\n          type: string\n        instanceDescription:\n          type: string\n        language:\n          type: string\n    SystemScadaConfigJSON:\n      type: object\n      properties:\n        apiReplaceAlertOnView:\n          type: boolean\n        cacheEnable:\n          type: boolean\n        startUpdateUnsilencedAlarmLevel:\n          type: number\n        startUpdateEventDetectors:\n          type: number\n        startUpdatePendingEvents:\n          type: number\n        millisSecondsPeriodUpdateUnsilencedAlarmLevel:\n          type: number\n        millisSecondsPeriodUpdateEventDetectors:\n          type: number\n        millisSecondsPeriodUpdatePendingEvents:\n          type: number\n        croneUpdateCachePointHierarchy:\n          type: string\n        croneUpdateDataSourcesPoints:\n          type: string\n        useCacheDataSourcePointsWhenSystemIsReady:\n          type: boolean\n        useAcl:\n          type: boolean\n        aclServer:\n          type: string\n        doNotCreateEventsForEmailError:\n          type: boolean\n        httpRetriverSleepCheckToReactivationWhenStart:\n          type: boolean\n        httpRetriverDoNotAllowEnableReactivation:\n          type: boolean\n\n    EventHandlerPlcDTO:\n      type: object\n      properties:\n        id:\n          type: number\n        xid:\n          type: string\n        alias:\n          type: string\n        eventTypeId:\n          type: number\n        eventTypeRef1:\n          type: number\n        eventTypeRef2:\n          type: number\n        recipients:\n          type: array\n          items:\n            type: object\n            properties:\n              recipientType:\n                type: number\n              referenceId:\n                type: number\n              referenceAddress:\n                type: string\n    EventHandlerVO:\n      type: object\n      properties:\n        id:\n          type: number\n        xid:\n          type: string\n        alias:\n          type: string\n        handlerType:\n          type: number\n        disabled:\n          type: boolean\n        targetPointId:\n          type: number\n        activeAction:\n          type: number\n        activeValueToSet:\n          type: string\n        activePointId:\n          type:  number\n        inactiveAction:\n          type: number\n        inactiveValueToSet:\n          type: string\n        inactivePointId:\n          type: number\n        activeRecipients:\n          type: array\n          items:\n            type: object\n            properties:\n              recipientType:\n                type: number\n              referenceId:\n                type: number\n              referenceAddress:\n                type: string\n        sendEscalation:\n          type: boolean\n        escalationDelayType:\n          type: number\n        escalationDelay:\n          type: number\n        escalationRecipients:\n          type: array\n          items:\n            type: string\n        sendInactive:\n          type: boolean\n        inactiveOverride:\n          type: boolean\n        inactiveRecipients:\n          type: array\n          items:\n            type: string\n        activeProcessCommand:\n          type: string\n        inactiveProcessCommand:\n          type: string\n        activeScriptCommand:\n          type: number\n        inactiveScriptCommand:\n          type: number\n        typeKey:\n          type: string\n        message:\n          type: object\n          properties:\n            key:\n              type: string\n            args:\n              type: array\n              items:\n                type: string\n    PointEventDetectorVO:\n      type: object\n      properties:\n        id:\n          type: number\n        xid:\n          type: string\n        alias:\n          type: string\n        detectorType:\n          type: number\n        alarmLevel:\n          type: number\n        limit:\n          type: number\n        duration:\n          type: number\n        durationType:\n          type: number\n        binaryState:\n          type: boolean\n        multistateState:\n          type: number\n        changeCount:\n          type: number\n        alphanumericState:\n          type: number\n        weight:\n          type: number\n        description:\n          type: object\n          properties:\n            key:\n              type: string\n            args:\n              type: array\n              items:\n                type: string\n        eventType:\n          type: object\n          properties:\n            typeId:\n              type: number\n            typeRef1:\n              type: number\n            typeRef2:\n              type: number\n            description:\n              type: object\n              properties:\n                key:\n                  type: string\n                args:\n                  type: array\n                  items:\n                    type: string\n            handlers:\n              type: object\n            alarmLevel:\n              type: number\n            eventDetectorKey:\n              type: string\n        rtnApplicable:\n          type: boolean\n        eventDetectorKey:\n          type: string\n        def:\n          type: object\n          properties:\n            id:\n              type: number\n            name:\n              type: string\n            exportName:\n              type: string\n            nameKey:\n              type: string\n            supportedDataTypes:\n              type: array\n              items:\n                type: number\n        typeKey:\n          type: string\n        durationDescription:\n          type: object\n          properties:\n            key:\n              type: string\n            args:\n              type: array\n              items:\n                type: object\n    MailingList:\n      type: object\n      properties:\n        id:\n          type: number\n        xid:\n          type: string\n        entries:\n          type: array\n          items:\n            type: object\n        inactiveIntervals:\n          type: array\n          items:\n            type: object\n        recipientType:\n          type: number\n        referenceId:\n          type: number\n        referenceAddress:\n          type: string\n    JsonUser:\n      type: object\n      properties:\n        id:\n          type: number\n        username:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n        email:\n          type: string\n        phone:\n          type: string\n        admin:\n          type: boolean\n        disabled:\n          type: boolean\n        homeUrl:\n          type: string\n        lastLogin:\n          type: number\n        receiveAlarmEmails:\n          type: number\n        receiveOwnAuditEvents:\n          type: boolean\n        theme:\n          type: string\n        hideMenu:\n          type: boolean\n        userProfile:\n          type: number\n    JsonUserPassword:\n      type: object\n      properties:\n        id:\n          type: number\n        username:\n          type: string\n        password:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n        email:\n          type: string\n        phone:\n          type: string\n        admin:\n          type: boolean\n        disabled:\n          type: boolean\n        homeUrl:\n          type: string\n        lastLogin:\n          type: number\n        receiveAlarmEmails:\n          type: number\n        receiveOwnAuditEvents:\n          type: boolean\n        theme:\n          type: string\n        hideMenu:\n          type: boolean\n        userProfile:\n          type: number\n    JsonDescription:\n      type: object\n      properties:\n        description:\n          type: string\n    JsonBinaryEventTextRenderer:\n      type: object\n      properties:\n        eventText:\n          type: string\n    UserComment:\n      type: object\n      properties:\n        userId:\n          type: number\n        ts:\n          type: number\n        comment:\n          type: string\n        username:\n          type: string\n    ScadaObjectIdentifier:\n      type: object\n      properties:\n        id:\n          type: number\n        xid:\n          type: string\n        name:\n          type: string\n    JsonUserInfo:\n      type: object\n      properties:\n        id:\n          type: number\n        username:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n        phone:\n          type: string\n        email:\n          type: string\n        admin:\n          type: boolean\n        disabled:\n          type: boolean\n    SynopticPanelJSON:\n      type: object\n      properties:\n        id:\n          type: number\n        xid:\n          type: string\n        name:\n          type: string\n        componentData:\n          type: string\n        vectorImage:\n          type: string\n    UserProfileVO:\n      type: object\n      properties:\n        id:\n          type: number\n        xid:\n          type: string\n        name:\n          type: string\n        dataSourcePermissions:\n          type: array\n          items:\n            type: number\n        dataPointPermissions:\n          type: array\n          items:\n            type: object\n            properties:\n              dataPointId:\n                type: number\n              permission:\n                type: number\n        watchlistPermissions:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: number\n              permission:\n                type: number\n        viewPermissions:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: number\n              permission:\n                type: number\n  parameters:\n    Authorization:\n      name: Authorization\n      in: header\n      required: true\n      style: simple\n      schema:\n        type: string\n        example: Basic YWRtaW46YWRtaW4=\n      description: ''\n    Content-Type:\n      name: Content-Type\n      in: header\n      required: true\n      style: simple\n      schema:\n        type: string\n        example: application/json\nsecurity: []\ntags: []\nexternalDocs:\n  url: 'https://scada-lts.atlassian.net/wiki/spaces/APIDOC/pages/178716812/REST+API+Documentation'\n  description: 'Confluence API main page'",
			"canonicalURL": "/github.com/SCADA-LTS/Scada-LTS@fd98195e33f0ba067b8152d0b08d51f8331a2490/-/blob/doc/RESTAPI/ScadaLTS_API_OAS3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/SCADA-LTS/Scada-LTS/blob/fd98195e33f0ba067b8152d0b08d51f8331a2490/doc/RESTAPI/ScadaLTS_API_OAS3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: at 1:12771: path MUST be relative"
}