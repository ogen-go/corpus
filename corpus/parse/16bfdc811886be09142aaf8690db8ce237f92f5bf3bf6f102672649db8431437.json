{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/apigee/devrel"
		},
		"file": {
			"name": "apigeemock-v3.yaml",
			"size": 0,
			"path": "tools/oas-configurable-proxy/test/oas/apigeemock-v3.yaml",
			"byteSize": 5193,
			"content": "# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n---\nopenapi: 3.0.0\ninfo:\n  description: \"OpenAPI Specification for the Apigee mock\n    target service endpoint.\"\n  version: 1.0.0\n  title: Mock Target API\n\nsecurity:\n  - apiKeyAuth: []\n\npaths:\n  /:\n    get:\n      summary: View personalized greeting\n      operationId: View a personalized greeting\n      description: View a personalized greeting for the specified or guest user.\n      parameters:\n        - name: user\n          in: query\n          description: Your user name.\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n  /help:\n    get:\n      summary: Get help\n      operationId: Get help\n      description: \"View help information about\n        available resources in HTML format.\"\n      responses:\n        \"200\":\n          description: Success\n  /user:\n    get:\n      summary: View personalized greeting\n      operationId: View personalized greeting\n      description: View a personalized greeting for the specified or guest user.\n      security:\n        - apiKeyQuery: []\n      parameters:\n        - name: user\n          in: query\n          description: Your user name.\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n  /iloveapis:\n    get:\n      summary: View API affirmation\n      operationId: View API affirmation\n      description: View API affirmation in HTML format.\n      responses:\n        \"200\":\n          description: Success\n  /ip:\n    get:\n      summary: View IP address\n      operationId: View IP address\n      description: View the IP address of the client in JSON format.\n      responses:\n        \"200\":\n          description: Success\n  /xml:\n    get:\n      summary: View XML response\n      operationId: View XML response\n      description: View a sample response in XML format.\n      responses:\n        \"200\":\n          description: Success\n  /json:\n    get:\n      summary: View JSON response\n      operationId: View JSON response\n      description: View a sample response in JSON format.\n      responses:\n        \"200\":\n          description: Success\n  /echo:\n    get:\n      summary: View request headers and body\n      operationId: View request headers and body\n      description: View the request headers and body in JSON format.\n      responses:\n        \"200\":\n          description: Success\n    post:\n      summary: Send request and view request headers and body\n      operationId: Send request and view request headers and body\n      description: \"Send a request and view the resulting request headers\n        and body in JSON format. The request payload can be specified using\n        one of the following formats: application/json,\n        application/x-www-form-urlencoded, or application/xml.\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/request-body\"\n        description: Request payload in application/json,\n          application/x-www-form-urlencoded, or application/xml format.\n        required: true\n      responses:\n        \"200\":\n          description: Success\n  \"/statuscode/{code}\":\n    get:\n      summary: View status code and message\n      operationId: View status code and message\n      description: View status code and message for the specified value.\n      parameters:\n        - name: code\n          in: path\n          description: HTTP status code.\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success\n  /auth:\n    get:\n      security:\n        - basicAuth: []\n      summary: Validate access using basic authentication\n      operationId: Validate access using basic authentication\n      description: Validate access using basic authentication.\n      responses:\n        \"200\":\n          description: Success\nservers:\n  - url: http://mocktarget.apigee.net\n  - url: https://mocktarget.apigee.net\ncomponents:\n  securitySchemes:\n    basicAuth:\n      type: http\n      description: HTTP Basic Authentication.\n      scheme: basic\n            application/x-www-form-urlencoded, or application/xml format.\n    apiKeyAuth:        # arbitrary name for the security scheme\n      type: apiKey\n      in: header       # can be \"header\", \"query\" or \"cookie\"\n      name: X-API-KEY\n    apiKeyQuery:\n      type: apiKey\n      in: query       # can be \"header\", \"query\" or \"cookie\"\n      name: apikey\n  schemas:\n    request-body:\n      properties:\n        replace-me:\n          type: object\n          description: Replace with request payload in application/json,\n",
			"canonicalURL": "/github.com/apigee/devrel@1813c623c45c8adf3fbc0eacd4f9ccc5fd16debb/-/blob/tools/oas-configurable-proxy/test/oas/apigeemock-v3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/apigee/devrel/blob/1813c623c45c8adf3fbc0eacd4f9ccc5fd16debb/tools/oas-configurable-proxy/test/oas/apigeemock-v3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/auth\": get: operation \"Validate access using basic authentication\": security: parse security scheme \"basicAuth\": http: at tools/oas-configurable-proxy/test/oas/apigeemock-v3.yaml:158:15: invalid \"scheme\": \"basic application/x-www-form-urlencoded, or application/xml format.\""
}