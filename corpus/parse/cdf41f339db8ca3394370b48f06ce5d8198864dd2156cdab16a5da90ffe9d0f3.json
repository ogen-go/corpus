{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/plantbreeding/BrAPI"
		},
		"file": {
			"name": "ScaleBaseClass.yaml",
			"size": 0,
			"path": "Specification/Components/Schemas/ScaleBaseClass.yaml",
			"byteSize": 2018,
			"content": "info:\n  title: BrAPI\n  version: ''\nopenapi: 3.0.0\npaths: {}\ncomponents:\n  schemas:\n    ScaleBaseClass:\n      type: object\n      description: Scale metadata\n      required:\n      - scaleName\n      properties:\n        additionalInfo:\n          additionalProperties:\n            type: string\n          description: Additional arbitrary info\n          type: object\n        dataType:\n          $ref: '#/components/schemas/TraitDataType'\n        decimalPlaces:\n          description: For numerical, number of decimal places to be reported\n          type: integer\n          example: 2\n        ontologyReference:\n          $ref: '#/components/schemas/OntologyReference'\n        scaleName:\n          description: |- \n            Name of the scale\n            \n            MIAPPE V1.1 (DM-92) Scale Name of the scale associated with the variable\n          type: string\n          example: Meters\n        validValues:\n          type: object\n          properties:\n            categories: \n              description: List of possible values with optional labels\n              items:\n                type: object\n                properties:\n                  label:\n                    type: string \n                    description: A text label for a category\n                  value:\n                    type: string\n                    description: The actual value for a category\n              type: array\n              example: \n                - value: \"0\"\n                  label: \"low\"\n                - value: \"5\"\n                  label: \"medium\"\n                - value: \"10\"\n                  label: \"high\"\n            max:\n              description: Maximum value (used for field data capture control).\n              type: integer\n              example: 9999\n            min:\n              description: Minimum value (used for data capture control) for numerical and date scales\n              type: integer\n              example: 2\n        externalReferences: \n          $ref: '#/components/schemas/ExternalReferences'\n\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"ScaleBaseClass\": parse schema: property \"dataType\": parse schema: resolve \"#/components/schemas/TraitDataType\": find schema: resolve \"#/components/schemas/TraitDataType\": can't find value for \"components/schemas/TraitDataType\""
}