{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mindsdb/mindsdb"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "mindsdb/api/http/openapi.yml",
			"byteSize": 14172,
			"content": "openapi: 3.0.0\ninfo:\n  title: MindsDB API\n  description: \u003e-\n    OpenAPI Specification for MindsDB's REST API. Each API Endpoint corresponds\n    to a specific SQL Statement e.g POST /model =\u003e CREATE MODEL\n  version: 0.0.1\n  contact:\n    email: admin@mindsdb.com\n  license:\n    name: GNU General Public License v3.0\n    url: 'https://github.com/mindsdb/mindsdb/blob/staging/LICENSE'\nservers:\n  - url: 'https://cloud.mindsdb.com/v1/api'\n    description: MindsDB Production cloud server\n  - url: 'http://alpha.mindsdb.com/v1/api'\n    description: MindsDB Alpha cloud server\n  - url: 'http://127.0.0.1/v1/api'\n    description: MindsDB local deployments\ncomponents:\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      in: header\n      name: X-API-KEY\npaths:\n  /databases:\n    get:\n      security:\n        - ApiKeyAuth: []\n      summary: Returns a list of database names.\n      description: This endpoint retrieves all databases created by the user.\n      responses:\n        '200':\n          description: A JSON array of database names\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n                  example: 'database name'\n        '401':\n          description: Invalid API key error message\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: string\n        '500':\n          description: Server error\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: string\n    post:\n      security:\n        - ApiKeyAuth: []\n      summary: Creates a new database connection.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                engine:\n                  type: string\n                user:\n                  type: string\n                password:\n                  type: string\n                host:\n                  type: string\n                port:\n                  type: string\n                database:\n                  type: string\n      responses:\n        '201':\n          description: Database was succesfully created\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: string\n        '401':\n          description: Invalid API key error message\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: string\n        '500':\n          description: Server error\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: string\n    put:\n      security:\n        - ApiKeyAuth: []\n      summary: Updates an existing database connection.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                user:\n                  type: string\n                password:\n                  type: string\n                host:\n                  type: string\n                port:\n                  type: string\n                database:\n                  type: string\n      responses:\n        '201':\n          description: Database was succesfully updated\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: string\n        '401':\n          description: Invalid API key error message\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: string\n        '500':\n          description: Server error\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: string\n  '/databases/{databaseName}':\n    get:\n      security:\n        - ApiKeyAuth: []\n      summary: Gets info about existing database.\n      description: This endpoint retrieves a specific database info.\n      parameters:\n        - name: databaseName\n          in: path\n          description: databaseName to select\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: A JSON object with database informations\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: string\n        '401':\n          description: Invalid API key error message\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: string\n        '404':\n          description: Database not found\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: string\n        '500':\n          description: Server error\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: string\n    delete:\n      security:\n        - ApiKeyAuth: []\n      summary: Deletes an existing database.\n      description: This endpoint deletes a database connection.\n      parameters:\n        - name: databaseName\n          in: path\n          description: databaseName to delete\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: A JSON array of database names\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n        '401':\n          description: Invalid API key error message\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: string\n        '404':\n          description: Database not found\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: string\n        '500':\n          description: Server error\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: string\n  /models:\n    post:\n      security:\n        - ApiKeyAuth: []\n      summary: This endpoint trains a new ML Model.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                project_name:\n                  type: string\n                  description: Name of the project where the model is created\n                predictor_name:\n                  type: string\n                  description: Name of the model to be created.\n                integration_name:\n                  type: string\n                  description: Name of the database integration created\n                target_column:\n                  type: string\n                  description: Column to be predicted.\n                query:\n                  type: string\n                  description: The SQL query to get the data\n      responses:\n        '200':\n          description: Model training started\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: string\n        '401':\n          description: Invalid API key error message\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: string\n        '500':\n          description: Server error\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: string\n    get:\n      security:\n        - ApiKeyAuth: []\n      summary: Returns a list of models.\n      description: This endpoint retrieves the status of all models.\n      responses:\n        '200':\n          description: A JSON array of models names\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n                  example: 'model name'\n        '401':\n          description: Invalid API key error message\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: string\n        '500':\n          description: Server error\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: string\n  '/models/{modelName}':\n    get:\n      security:\n        - ApiKeyAuth: []\n      summary: Gets info about specific model.\n      description: This endpoint retrieves the status of a specific model.\n      parameters:\n        - name: modelName\n          in: path\n          description: The name of the model\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: A JSON object with database informations\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: string\n        '401':\n          description: Invalid API key error message\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: string\n        '404':\n          description: Model not found\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: string\n        '500':\n          description: Server error\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: string\n    post:\n      security:\n        - ApiKeyAuth: []\n      summary: This endpoint fetches predictions from the model.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                model_name:\n                  type: string\n                  description: Name of the project where the model is created\n                data:\n                  type: string\n                  description: The data for querying the model as SQL Statment or FILE\n      responses:\n        '200':\n          description: Prediction data\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: string\n        '401':\n          description: Invalid API key error message\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: string\n        '500':\n          description: Server error\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: str\n    delete:\n      security:\n        - ApiKeyAuth: []\n      summary: Deletes an existing model.\n      description: This endpoint deletes a model.\n      parameters:\n        - name: modelName\n          in: path\n          description: modelName to delete\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: A JSON array of database names\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n        '401':\n          description: Invalid API key error message\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: string\n        '404':\n          description: Database not found\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: string\n        '500':\n          description: Server error\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: string                \n  '/models/{modelName}/describe':\n    get:\n      security:\n        - ApiKeyAuth: []\n      summary: Describe a model\n      description: This endpoint returns the attributes of a specific model.\n      parameters:\n        - name: modelName\n          in: path\n          description: The name of the model\n          required: true\n          schema:\n            type: string\n        - name: features\n          in: query\n          description: Include how the model encoded data info\n          required: false\n          schema:\n            type: boolean\n            default: false\n      responses:\n        '200':\n          description: A JSON object with model informations\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: string\n        '401':\n          description: Invalid API key error message\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: string\n        '404':\n          description: Model not found\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: string\n        '500':\n          description: Server error\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  type: string",
			"canonicalURL": "/github.com/mindsdb/mindsdb@03a75e3640d76583527d0f1c8ccc7b10a3d07baa/-/blob/mindsdb/api/http/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/mindsdb/mindsdb/blob/03a75e3640d76583527d0f1c8ccc7b10a3d07baa/mindsdb/api/http/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/databases\": get: responses: 401: content: application/json: schema: parse schema: at mindsdb/api/http/openapi.yml:50:19: items: object cannot contain 'items' field"
}