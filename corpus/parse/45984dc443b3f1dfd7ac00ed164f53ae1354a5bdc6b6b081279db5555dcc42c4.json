{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/sourcefuse/loopback4-microservice-catalog"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "services/video-conferencing-service/openapi.json",
			"byteSize": 12774,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Video Conferencing Service\",\n    \"version\": \"1.0.0\",\n    \"description\": \"Microservice providing Video-Conferencing functionality\",\n    \"contact\": {\n      \"name\": \"Sourcefuse\"\n    }\n  },\n  \"paths\": {\n    \"/archives/storage-target\": {\n      \"put\": {\n        \"x-controller-name\": \"VideoChatArchiveController\",\n        \"x-operation-name\": \"setUploadTarget\",\n        \"tags\": [\n          \"VideoChatArchiveController\"\n        ],\n        \"description\": \"Configures custom storage target to a custom Amazon s3 bucket or Microsoft Azure Storage.\\n\\n| Permissions |\\n| ------- |\\n| SetMeetingUploadTarget   |\\n\",\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"text\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"operationId\": \"VideoChatArchiveController.setUploadTarget\"\n      }\n    },\n    \"/archives/{archiveId}\": {\n      \"get\": {\n        \"x-controller-name\": \"VideoChatArchiveController\",\n        \"x-operation-name\": \"getArchive\",\n        \"tags\": [\n          \"VideoChatArchiveController\"\n        ],\n        \"description\": \"Used to fetch a specific archive w.r.t archiveId. If archive is not present, it will throw HTTP Not Found Error.\\n\\n| Permissions |\\n| ------- |\\n| GetMeetingArchives   |\\n\",\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"archiveId\",\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          }\n        ],\n        \"operationId\": \"VideoChatArchiveController.getArchive\"\n      },\n      \"delete\": {\n        \"x-controller-name\": \"VideoChatArchiveController\",\n        \"x-operation-name\": \"deleteArchive\",\n        \"tags\": [\n          \"VideoChatArchiveController\"\n        ],\n        \"description\": \"Used to delete a specific archive w.r.t archiveId. If archive is not present, it will throw HTTP Not Found Error.\\n\\n| Permissions |\\n| ------- |\\n| DeleteMeetingArchive   |\\n\",\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"text\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"archiveId\",\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          }\n        ],\n        \"operationId\": \"VideoChatArchiveController.deleteArchive\"\n      }\n    },\n    \"/archives\": {\n      \"get\": {\n        \"x-controller-name\": \"VideoChatArchiveController\",\n        \"x-operation-name\": \"getArchives\",\n        \"tags\": [\n          \"VideoChatArchiveController\"\n        ],\n        \"description\": \"Used to fetch a list of archives (meetings that were recorded).\\n\\n| Permissions |\\n| ------- |\\n| GetMeetingArchives   |\\n\",\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        },\n        \"operationId\": \"VideoChatArchiveController.getArchives\"\n      }\n    },\n    \"/session/{meetingLinkId}/attendees\": {\n      \"get\": {\n        \"x-controller-name\": \"VideoChatSessionController\",\n        \"x-operation-name\": \"getAttendeesList\",\n        \"tags\": [\n          \"VideoChatSessionController\"\n        ],\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"meetingLinkId\",\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          },\n          {\n            \"name\": \"active\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"array\"\n                }\n              }\n            }\n          }\n        },\n        \"description\": \"\\n\\n| Permissions |\\n| ------- |\\n| GetMeetingAttendees   |\\n\",\n        \"operationId\": \"VideoChatSessionController.getAttendeesList\"\n      }\n    },\n    \"/session/{meetingLinkId}/end\": {\n      \"patch\": {\n        \"x-controller-name\": \"VideoChatSessionController\",\n        \"x-operation-name\": \"endSession\",\n        \"tags\": [\n          \"VideoChatSessionController\"\n        ],\n        \"description\": \"Used to stop the current active meeting. Meeting cannot be stopped again if it is \\n      already stopped. Successful execution will add the endTime attribute to a recently \\n      ending session.\\n\\n| Permissions |\\n| ------- |\\n| StopMeeting   |\\n\",\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"MessageRecipient PATCH success\"\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"meetingLinkId\",\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          }\n        ],\n        \"operationId\": \"VideoChatSessionController.endSession\"\n      }\n    },\n    \"/session/{meetingLinkId}/token\": {\n      \"post\": {\n        \"x-controller-name\": \"VideoChatSessionController\",\n        \"x-operation-name\": \"getMeetingToken\",\n        \"tags\": [\n          \"VideoChatSessionController\"\n        ],\n        \"description\": \"Used for Generating token, which is used for connecting to a room/session on a client side. \\n      In vonage, there are three different roles (Moderator, Subscriber, Publisher). \\n      We can use expire time for limited validity of a token. Successful \\n      execution will send a token.\\n\\n| Permissions |\\n| ------- |\\n| GenerateMeetingToken   |\\n\",\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"sessionId\": \"string\",\n                  \"token\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"meetingLinkId\",\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"operationId\": \"VideoChatSessionController.getMeetingToken\"\n      }\n    },\n    \"/session/{meetingLinkId}\": {\n      \"patch\": {\n        \"x-controller-name\": \"VideoChatSessionController\",\n        \"x-operation-name\": \"editMeeting\",\n        \"tags\": [\n          \"VideoChatSessionController\"\n        ],\n        \"description\": \"Used for editing the meeting\\n\\n| Permissions |\\n| ------- |\\n| EditMeeting   |\\n\",\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Session details PATCH success\"\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"meetingLinkId\",\n            \"in\": \"path\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/VideoChatSessionPartial\"\n              }\n            }\n          },\n          \"x-parameter-index\": 1\n        },\n        \"operationId\": \"VideoChatSessionController.editMeeting\"\n      }\n    },\n    \"/session\": {\n      \"post\": {\n        \"x-controller-name\": \"VideoChatSessionController\",\n        \"x-operation-name\": \"getMeetingLink\",\n        \"tags\": [\n          \"VideoChatSessionController\"\n        ],\n        \"description\": \"Used for Creating a session with options such as end to end encryption, archive mode. \\n      Note: Archiving Option cannot be enabled while using end to end encryption, otherwise \\n      an Error will be thrown. Successful execution will send a meeting link \\n      id which can be used to amend in client url.\\n\\n| Permissions |\\n| ------- |\\n| CreateMeetingSession   |\\n\",\n        \"security\": [\n          {\n            \"HTTPBearer\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"operationId\": \"VideoChatSessionController.getMeetingLink\"\n      }\n    },\n    \"/webhooks/session\": {\n      \"post\": {\n        \"x-controller-name\": \"VideoChatSessionController\",\n        \"x-operation-name\": \"checkWebhookPayload\",\n        \"tags\": [\n          \"VideoChatSessionController\"\n        ],\n        \"description\": \"Webhook API hit from a third party to add/update session attendees in a meeting.\",\n        \"responses\": {\n          \"204\": {\n            \"description\": \"POST /webhooks/session Success\"\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"operationId\": \"VideoChatSessionController.checkWebhookPayload\"\n      }\n    }\n  },\n  \"components\": {\n    \"securitySchemes\": {\n      \"HTTPBearer\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\",\n        \"bearerFormat\": \"JWT\"\n      }\n    },\n    \"schemas\": {\n      \"VideoChatSessionPartial\": {\n        \"title\": \"VideoChatSessionPartial\",\n        \"type\": \"object\",\n        \"description\": \"(tsType: Partial\u003cVideoChatSession\u003e, schemaOptions: { partial: true })\",\n        \"properties\": {\n          \"deleted\": {\n            \"type\": \"boolean\"\n          },\n          \"deletedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"deletedBy\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"createdOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"modifiedOn\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"createdBy\": {\n            \"type\": \"string\"\n          },\n          \"modifiedBy\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"number\"\n          },\n          \"sessionId\": {\n            \"type\": \"string\"\n          },\n          \"meetingLink\": {\n            \"type\": \"string\"\n          },\n          \"isScheduled\": {\n            \"type\": \"boolean\"\n          },\n          \"scheduleTime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"isArchived\": {\n            \"type\": \"boolean\"\n          },\n          \"archiveId\": {\n            \"type\": \"string\"\n          },\n          \"uploadTarget\": {\n            \"type\": \"string\"\n          },\n          \"startTime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"endTime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"extId\": {\n            \"type\": \"string\"\n          },\n          \"extMetadata\": {\n            \"type\": \"object\"\n          }\n        },\n        \"additionalProperties\": false,\n        \"x-typescript-type\": \"Partial\u003cVideoChatSession\u003e\"\n      }\n    }\n  },\n  \"servers\": [\n    {\n      \"url\": \"/\"\n    }\n  ]\n}",
			"canonicalURL": "/github.com/sourcefuse/loopback4-microservice-catalog@44797547778bf85c16daaebc6dbbc0b9ee466dbe/-/blob/services/video-conferencing-service/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/sourcefuse/loopback4-microservice-catalog/blob/44797547778bf85c16daaebc6dbbc0b9ee466dbe/services/video-conferencing-service/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/archives/storage-target\": put: operation \"VideoChatArchiveController.setUploadTarget\": responses: 200: content: text/plain: schema: parse schema: at 30:27: unexpected schema type: \"text\""
}