{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/open-education-api/specification"
		},
		"file": {
			"name": "spec.yaml",
			"size": 0,
			"path": "v5-rc/spec.yaml",
			"byteSize": 16164,
			"content": "openapi: \"3.1.0\"\ninfo:\n  version: \"5.0.0 RC2\"\n  title: Open Education API\n  description: |\n    OpenAPI (fka Swagger) specification for the Open Education API.\n\n    <figure>\n    \t<a target=\"_blank\" href=\"OOAPIv5_model.png\">\n      <img src=\"OOAPIv5_model.png\" alt=\"OOAPI information model that feeds OOAPI specification\" width=\"70%\" class=\"img-responsive\">\n      </a>\n      <figcaption> OOAPI information model that feeds OOAPI specification (click to enlage)</figcaption>\n    </figure>\n\n    The model provides an overview of how the objects on which the API is specified are related. The overarching concept educations is not found in the in the end points of the API. The smaller concepts of programOffering, courseOffering and conceptOffering are all found in the offering endpoint. The different types of association can all be found in the association endpoint.\n    \n    The original file for this model can be found <a target=\"_blank\" href=\"OOAPIv5_model_v0.4.drawio\">here</a>\n\n    The program relations object is not found as a separate endpoint but relations between programs can be found within the program endpoint by expanding that endpoint.\n\n    Information about earlier meetings and presentations can be found <a target=\"_blank\" href=\"https://github.com/open-education-api/notulen\">here</a>\n\n    Information on the EDU-API model that was also used for this api is shown <a target=\"_blank\" href=\"eduapi.png\">here</a>\n\n\n\n  x-logo:\n    url: ../logo.png\n\nservers:\n  - url: http://demo01.eduapi.nl/v5\n    description: SURF demo implementation\n\ntags:\n  - name: service metadata\n    description: The service API provides additional metadata needed to make the OOAPI fit for this organization.\n  - name: academic sessions\n    description: The academic sessions API provides information about the different time periods a program can be offered.\n  - name: associations\n    description: |\n      The associations API provides information about the association between an offering and a person (e.g. students, lecturers, etc).\n      Associations can be posted between institutions This requires information details on the offering and the persons.\n      To allow for this information a complete person object and offering object can be part of the API.\n      The structure is explained in the following model:\n      <table>\n        <tr>\n         <td></td>\n         <td colspan=3 align=center>offering</td>\n        </tr>\n        <tr>\n         <td rowspan=3>student</td>\n         <td></td>\n         <!-- <td>internal</td>\n         -->\n         <td>external</td>\n        </tr>\n        <tr>\n         <td>internal</td>\n         <!-- <td>POST <a href=\"#tag/offerings/paths/~1offerings~1{offeringId}~1associations~1external/post\">/offerings/{offeringId}/associations/me</a> local enrollment based on selected offering\n          This call will allow for a local student using his .wellknown credentials to enroll for the offering identified by the offeringId\n          <br>Alternatively the association can also be created through POST <a href=\"#tag/associations/paths/~1associations~1me/post\">/associations/me</a>\n         </td>\n         -->\n         <td>POST <a href=\"#tag/associations/paths/~1associations~1external~1me/post\">/associations/external/me</a> gets student details from .wellknown at home institution. It passes offering details (provided by external institution) to the home institution so the home institution can create a placeholder for the offering and its results. \n         </td>\n        </tr>\n        <tr>\n         <td>external</td>\n          <!--\n          <td>\n          This method is not yet implemented it requires full student details and offering details. This would mean the \n          OOAPI message would contain more than one resource in the message. At the moment the student mobility project is looking into\n          a sollution.\n          <br> Alternatively it could be achieved through using two calls:\n          <ul>\n           <li>create student with POST <a href=\"#tag/persons/paths/~1persons~1{personId}/post\">/persons</a></li>\n           <li><a href=\"#tag/offerings/paths/~1offerings~1{offeringId}~1associations~1external/post\">/offerings/{offeringId}/associations/me</a></li>\n          </ul>\n          for the enrollment\n         </td>\n          -->\n         <td>no support needed</td>\n        </tr>\n      </table>\n      Direct update of current information: <a href=\"#tag/associations/paths/~1associations~1{associationId}/patch\"> PATCH /associations/{associationId}</a>\n      This call is currently limited to passing results and a remote state. For future use other association resource information could be passed. \n      More information on the support for student mobility can be found \n      <a href=\"https://swimlanes.io/d/s5mfpj7Si\">here</a>\n\n  - name: buildings\n    description: The building API provides a building that is currently used by the organization. Including all location details.\n  - name: courses\n    description: The courses API provides a self-contained and formally structured learning experience. Aimed at providing learning outcomes to students. Usually placed in the context of a program.\n  - name: components\n    description: The components API provides information about components being part of parent courses.\n  - name: education specifications\n    description: |\n      The education specification API provides information on the specification of an education object.\n      This specification allows for other education objects to be derived from it.\n      It is used to aggregate education objects from a supplying institution.\n      It clusters programs to a main educationSpecification that is used in registries such as RIO.\n  - name: groups\n    description: The groups API provides information about groups that are related to organizations, persons and offerings. Groups of students that are related to an offering are typically used for rostering. The rostering application assigns students based on these groups. For example, class 1b will be assigned to the course offering on monday morning. Not all groups are related to an offering. A group of people can also be a team that is working on a task outside the OOAPI scope. These can be teams of students, but also teams of employees.\n  - name: news\n    description: The news API provides news feeds and items regarding a specific subject.\n  - name: offerings\n    description: The offerings API provides information about offerings which have a global timeframe, e.g. a period to which students can enroll.\n  - name: organizations\n    description: The organizations API provides the organizations that are responsible for the execution and recognition of education.\n  - name: persons\n    description: The persons API provides information about persons related to an organization.\n  - name: programs\n    description: The programs API provides a coherent set of educational components, aimed at the realization of competences or objectives in the field of knowledge, insight, attitudes and skills that the person who completes the program must have.\n  - name: rooms\n    description: The rooms API provides the part of a building where an activity can take place. Including detail information on the resources available, number of seats, etc. (Updated continuously)\n\n  - name: service_model\n    x-displayName: Service\n    description: |\n      <SchemaDefinition schemaRef=\"#/components/schemas/Service\" />\n  - name: education_specification_model\n    x-displayName: EducationSpecification\n    description: |\n      <SchemaDefinition schemaRef=\"#/components/schemas/EducationSpecification\" />\n  - name: program_model\n    x-displayName: Program\n    description: |\n      <SchemaDefinition schemaRef=\"#/components/schemas/Program\" />\n  - name: course_model\n    x-displayName: Course\n    description: |\n      <SchemaDefinition schemaRef=\"#/components/schemas/Course\" />\n  - name: component_model\n    x-displayName: Component\n    description: |\n      <SchemaDefinition schemaRef=\"#/components/schemas/Component\" />\n  - name: program_offering_model\n    x-displayName: ProgramOffering\n    description: |\n      <SchemaDefinition schemaRef=\"#/components/schemas/ProgramOffering\" />\n  - name: course_offering_model\n    x-displayName: CourseOffering\n    description: |\n      <SchemaDefinition schemaRef=\"#/components/schemas/CourseOffering\" />\n  - name: component_offering_model\n    x-displayName: ComponentOffering\n    description: |\n      <SchemaDefinition schemaRef=\"#/components/schemas/ComponentOffering\" />\n  - name: association_model\n    x-displayName: Association\n    description: |\n      <SchemaDefinition schemaRef=\"#/components/schemas/Association\" />\n  - name: person_model\n    x-displayName: Person\n    description: |\n      <SchemaDefinition schemaRef=\"#/components/schemas/Person\" />\n  - name: group_model\n    x-displayName: Group\n    description: |\n      <SchemaDefinition schemaRef=\"#/components/schemas/Group\" />\n  - name: person_model\n    x-displayName: Person\n    description: |\n      <SchemaDefinition schemaRef=\"#/components/schemas/Person\" />\n  - name: academic_session_model\n    x-displayName: AcademicSession\n    description: |\n      <SchemaDefinition schemaRef=\"#/components/schemas/AcademicSession\" />\n  - name: organization_model\n    x-displayName: Organization\n    description: |\n      <SchemaDefinition schemaRef=\"#/components/schemas/Organization\" />\n  - name: building_model\n    x-displayName: Building\n    description: |\n      <SchemaDefinition schemaRef=\"#/components/schemas/Building\" />\n  - name: room_model\n    x-displayName: Room\n    description: |\n      <SchemaDefinition schemaRef=\"#/components/schemas/Room\" />\n  - name: news_feed_model\n    x-displayName: NewsFeed\n    description: |\n      <SchemaDefinition schemaRef=\"#/components/schemas/NewsFeed\" />\n  - name: news_item_model\n    x-displayName: NewsItem\n    description: |\n      <SchemaDefinition schemaRef=\"#/components/schemas/NewsItem\" />\n\nx-tagGroups:\n  - name: Requests and respones\n    tags: \n      - service metadata\n      - academic sessions\n      - associations\n      - buildings\n      - courses\n      - components\n      - education specifications\n      - groups\n      - news\n      - offerings\n      - organizations\n      - persons\n      - programs\n      - rooms\n  - name: Models\n    tags:\n      - service_model\n      - academic_session_model\n      - association_model\n      - building_model\n      - component_model\n      - component_offering_model\n      - course_model\n      - course_offering_model\n      - education_specification_model\n      - group_model\n      - news_feed_model\n      - news_item_model\n      - organization_model\n      - person_model\n      - program_model\n      - program_offering_model\n      - room_model\n\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n    openId:\n      type: openIdConnect\n      openIdConnectUrl: https://example.nl/.well-known/openid-configuration\n  schemas:\n    Service:\n      allOf:\n        - $ref: schemas/Service.yaml\n    AcademicSession:\n      allOf:\n        - $ref: schemas/AcademicSession.yaml\n    Association:\n      allOf:\n        - $ref: schemas/AssociationFull.yaml\n    Building:\n      allOf:\n        - $ref: schemas/Building.yaml\n    Component: \n      allOf:\n        - $ref: schemas/Component.yaml\n    ComponentOffering:\n      allOf:\n        - $ref: schemas/ComponentOffering.yaml\n    Course:\n      allOf:\n        - $ref: schemas/Course.yaml\n    CourseOffering:\n      allOf:\n        - $ref: schemas/CourseOffering.yaml\n    EducationSpecification:\n      allOf:\n        - $ref: schemas/EducationSpecification.yaml\n    Group:\n      allOf:\n        - $ref: schemas/Group.yaml\n    NewsFeed:\n      allOf:\n        - $ref: schemas/NewsFeed.yaml\n    NewsItem:\n      allOf:\n        - $ref: schemas/NewsItem.yaml\n    Organization:\n      allOf:\n        - $ref: schemas/Organization.yaml\n    Person:\n      allOf:\n        - $ref: schemas/Person.yaml\n    Program:\n      allOf:\n        - $ref: schemas/Program.yaml\n    ProgramOffering:\n      allOf:\n        - $ref: schemas/ProgramOffering.yaml\n    Room:\n      allOf:\n        - $ref: schemas/Room.yaml\n\npaths:\n  /:\n    $ref: paths/Service.yaml\n  /persons:\n    $ref: paths/PersonCollection.yaml\n  /persons/me:\n    $ref: paths/PersonMe.yaml\n  /persons/{personId}:\n    $ref: paths/PersonInstance.yaml\n  /persons/{personId}/associations:\n    $ref: paths/PersonAssociationCollection.yaml\n  /persons/{personId}/groups:\n    $ref: paths/PersonGroupCollection.yaml\n  /organizations:\n    $ref: paths/OrganizationCollection.yaml\n  /organizations/{organizationId}:\n    $ref: paths/OrganizationInstance.yaml\n  /organizations/{organizationId}/programs:\n    $ref: paths/OrganizationProgramCollection.yaml\n  /organizations/{organizationId}/courses:\n    $ref: paths/OrganizationCourseCollection.yaml\n  /organizations/{organizationId}/components:\n    $ref: paths/OrganizationComponentCollection.yaml\n  /organizations/{organizationId}/offerings:\n    $ref: paths/OrganizationOfferingCollection.yaml\n  /organizations/{organizationId}/groups:\n    $ref: paths/OrganizationGroupCollection.yaml\n  /organizations/{organizationId}/education-specifications:\n    $ref: paths/OrganizationEducationSpecificationCollection.yaml\n  /academic-sessions:\n    $ref: paths/AcademicSessionCollection.yaml\n  /academic-sessions/{academicSessionId}:\n    $ref: paths/AcademicSessionInstance.yaml\n  /academic-sessions/{academicSessionId}/offerings:\n    $ref: paths/AcademicSessionOfferingCollection.yaml\n  /programs:\n    $ref: paths/ProgramCollection.yaml\n  /programs/{programId}:\n    $ref: paths/ProgramInstance.yaml\n  /programs/{programId}/programs:\n    $ref: paths/ProgramProgramCollection.yaml\n  /programs/{programId}/courses:\n    $ref: paths/ProgramCourseCollection.yaml\n  /programs/{programId}/offerings:\n    $ref: paths/ProgramOfferingCollection.yaml\n  /courses:\n    $ref: paths/CourseCollection.yaml\n  /courses/{courseId}:\n    $ref: paths/CourseInstance.yaml\n  /courses/{courseId}/components:\n    $ref: paths/CourseComponentCollection.yaml\n  /courses/{courseId}/offerings:\n    $ref: paths/CourseOfferingCollection.yaml\n  /components/{componentId}:\n    $ref: paths/ComponentInstance.yaml\n  /components/{componentId}/offerings:\n    $ref: paths/ComponentOfferingCollection.yaml\n  /offerings/{offeringId}:\n    $ref: paths/OfferingInstance.yaml\n  /offerings/{offeringId}/associations:\n    $ref: paths/OfferingAssociationCollection.yaml\n  # /offerings/{offeringId}/associations/me:\n  #   $ref: paths/OfferingAssociationInstanceMe.yaml\n  /offerings/{offeringId}/groups:\n    $ref: paths/OfferingGroupCollection.yaml\n  /associations/{associationId}:\n    $ref: paths/AssociationInstance.yaml\n  # /associations/me:\n  #   $ref: paths/AssociationInstanceMe.yaml\n  /associations/external/me:\n    $ref: paths/AssociationInstanceExternalMe.yaml\n  /buildings:\n    $ref: paths/BuildingCollection.yaml\n  /buildings/{buildingId}:\n    $ref: paths/BuildingInstance.yaml\n  /buildings/{buildingId}/rooms:\n    $ref: paths/BuildingRoomCollection.yaml\n  /rooms:\n    $ref: paths/RoomCollection.yaml\n  /rooms/{roomId}:\n    $ref: paths/RoomInstance.yaml\n  /news-feeds:\n    $ref: paths/NewsFeedCollection.yaml\n  /news-feeds/{newsFeedId}:\n    $ref: paths/NewsFeedInstance.yaml\n  /news-feeds/{newsFeedId}/news-items:\n    $ref: paths/NewsFeedItemCollection.yaml\n  /news-items/{newsItemId}:\n    $ref: paths/NewsItemInstance.yaml\n  /education-specifications:\n    $ref: paths/EducationSpecificationCollection.yaml\n  /education-specifications/{educationSpecificationId}:\n    $ref: paths/EducationSpecificationInstance.yaml\n  /education-specifications/{educationSpecificationId}/education-specifications:\n    $ref: paths/EducationSpecificationEducationSpecificationCollection.yaml\n  /education-specifications/{educationSpecificationId}/courses:\n    $ref: paths/EducationSpecificationCourseCollection.yaml\n  /education-specifications/{educationSpecificationId}/programs:\n    $ref: paths/EducationSpecificationProgramCollection.yaml\n  /groups:\n    $ref: paths/GroupCollection.yaml\n  /groups/{groupId}:\n    $ref: paths/GroupInstance.yaml\n  /groups/{groupId}/persons:\n    $ref: paths/GroupPersonCollection.yaml\n",
			"canonicalURL": "/github.com/open-education-api/specification@e9b85752d0504ed075b5b7b1a0036cad5c914719/-/blob/v5-rc/spec.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/open-education-api/specification/blob/e9b85752d0504ed075b5b7b1a0036cad5c914719/v5-rc/spec.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: schemas: \"Component\": parse schema: allOf: [0]: at 1:241: parse schema: resolve \"schemas/Component.yaml\": external \"schemas/Component.yaml\": file: local file reference is not allowed"
}