{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "amazonaws.com-iotanalytics-2017-11-27-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/amazonaws.com-iotanalytics-2017-11-27-swagger.yaml",
			"byteSize": 132663,
			"content": "openapi: 3.0.0\ninfo:\n  version: 2017-11-27\n  x-release: v4\n  title: AWS IoT Analytics\n  description: \u003cp\u003eAWS IoT Analytics allows you to collect large amounts of device data,\n    process messages, and store them. You can then query the data and run\n    sophisticated analytics on it. AWS IoT Analytics enables advanced data\n    exploration through integration with Jupyter Notebooks and data\n    visualization through integration with Amazon QuickSight.\u003c/p\u003e \u003cp\u003eTraditional\n    analytics and business intelligence tools are designed to process structured\n    data. IoT data often comes from devices that record noisy processes (such as\n    temperature, motion, or sound). As a result the data from these devices can\n    have significant gaps, corrupted messages, and false readings that must be\n    cleaned up before analysis can occur. Also, IoT data is often only\n    meaningful in the context of other data from external sources. \u003c/p\u003e \u003cp\u003eAWS\n    IoT Analytics automates the steps required to analyze data from IoT devices.\n    AWS IoT Analytics filters, transforms, and enriches IoT data before storing\n    it in a time-series data store for analysis. You can set up the service to\n    collect only the data you need from your devices, apply mathematical\n    transforms to process the data, and enrich the data with device-specific\n    metadata such as device type and location before storing it. Then, you can\n    analyze your data by running queries using the built-in SQL query engine, or\n    perform more complex analytics and machine learning inference. AWS IoT\n    Analytics includes pre-built models for common IoT use cases so you can\n    answer questions like which devices are about to fail or which customers are\n    at risk of abandoning their wearable devices.\u003c/p\u003e\n  x-logo:\n    url: https://twitter.com/awscloud/profile_image?size=original\n    backgroundColor: \"#FFFFFF\"\n  termsOfService: https://aws.amazon.com/service-terms/\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: https://github.com/mermade/aws2openapi\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: http://www.apache.org/licenses/\n  x-providerName: amazonaws.com\n  x-serviceName: iotanalytics\n  x-origin:\n    - contentType: application/json\n      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iotanalytics-2017-11-27.normal.json\n      converter:\n        url: https://github.com/mermade/aws2openapi\n        version: 1.0.0\n      x-apisguru-direct: true\n  x-apiClientRegistration:\n    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: https://docs.aws.amazon.com/iotanalytics/\nx-hasEquivalentPaths: true\nsecurity:\n  - hmac: []\npaths:\n  /messages/batch:\n    post:\n      operationId: BatchPutMessage\n      description: Sends messages to a channel.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BatchPutMessageResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"484\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - channelName\n                - messages\n              properties:\n                channelName:\n                  description: The name of the channel where the messages are sent.\n                  type: string\n                  pattern: ^[a-zA-Z0-9_]+$\n                  minLength: 1\n                  maxLength: 128\n                messages:\n                  description: \"\u003cp\u003eThe list of messages to be sent. Each message has\n                    format: '{ \\\"messageId\\\": \\\"string\\\", \\\"payload\\\":\n                    \\\"string\\\"}'.\u003c/p\u003e \u003cp\u003eNote that the field names of message\n                    payloads (data) that you send to AWS IoT Analytics:\u003c/p\u003e \u003cul\u003e\n                    \u003cli\u003e \u003cp\u003eMust contain only alphanumeric characters and\n                    undescores (_); no other special characters are allowed.\u003c/p\u003e\n                    \u003c/li\u003e \u003cli\u003e \u003cp\u003eMust begin with an alphabetic character or\n                    single underscore (_).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eCannot contain\n                    hyphens (-).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIn regular expression terms:\n                    \\\"^[A-Za-z_]([A-Za-z0-9]*|[A-Za-z0-9][A-Za-z0-9_]*)$\\\". \u003c/p\u003e\n                    \u003c/li\u003e \u003cli\u003e \u003cp\u003eCannot be greater than 255 characters.\u003c/p\u003e\n                    \u003c/li\u003e \u003cli\u003e \u003cp\u003eAre case-insensitive. (Fields named \\\"foo\\\"\n                    and \\\"FOO\\\" in the same payload are considered\n                    duplicates.)\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eFor example, {\\\"temp_01\\\":\n                    29} or {\\\"_temp_01\\\": 29} are valid, but {\\\"temp-01\\\": 29},\n                    {\\\"01_temp\\\": 29} or {\\\"__temp_01\\\": 29} are invalid in\n                    message payloads. \u003c/p\u003e\"\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/Message\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/pipelines/{pipelineName}/reprocessing/{reprocessingId}\":\n    delete:\n      operationId: CancelPipelineReprocessing\n      description: Cancels the reprocessing of data through the pipeline.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CancelPipelineReprocessingResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"484\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: pipelineName\n          in: path\n          required: true\n          description: The name of pipeline for which data reprocessing is canceled.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: ^[a-zA-Z0-9_]+$\n        - name: reprocessingId\n          in: path\n          required: true\n          description: The ID of the reprocessing task (returned by\n            \"StartPipelineReprocessing\").\n          schema:\n            type: string\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /channels:\n    post:\n      operationId: CreateChannel\n      description: Creates a channel. A channel collects data from an MQTT topic and\n        archives the raw, unprocessed messages before publishing the data to a\n        pipeline.\n      responses:\n        \"201\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateChannelResponse\"\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: ResourceAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceAlreadyExistsException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"484\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"485\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - channelName\n              properties:\n                channelName:\n                  description: The name of the channel.\n                  type: string\n                  pattern: ^[a-zA-Z0-9_]+$\n                  minLength: 1\n                  maxLength: 128\n                channelStorage:\n                  description: Where channel data is stored.\n                  type: object\n                  properties:\n                    serviceManagedS3:\n                      $ref: \"#/components/schemas/ServiceManagedChannelS3Storage\"\n                    customerManagedS3:\n                      $ref: \"#/components/schemas/CustomerManagedChannelS3Storage\"\n                retentionPeriod:\n                  description: How long, in days, message data is kept.\n                  type: object\n                  properties:\n                    unlimited:\n                      $ref: \"#/components/schemas/UnlimitedRetentionPeriod\"\n                    numberOfDays:\n                      $ref: \"#/components/schemas/RetentionPeriodInDays\"\n                tags:\n                  description: Metadata which can be used to manage the channel.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/Tag\"\n                  minItems: 1\n                  maxItems: 50\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: ListChannels\n      description: Retrieves a list of channels.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListChannelsResponse\"\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"482\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"483\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: nextToken\n          in: query\n          required: false\n          description: The token for the next set of results.\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: \u003cp\u003eThe maximum number of results to return in this request.\u003c/p\u003e\n            \u003cp\u003eThe default value is 100.\u003c/p\u003e\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 250\n  /datasets:\n    post:\n      operationId: CreateDataset\n      description: Creates a data set. A data set stores data retrieved from a data store\n        by applying a \"queryAction\" (a SQL query) or a \"containerAction\"\n        (executing a containerized application). This operation creates the\n        skeleton of a data set. The data set can be populated manually by\n        calling \"CreateDatasetContent\" or automatically according to a \"trigger\"\n        you specify.\n      responses:\n        \"201\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateDatasetResponse\"\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: ResourceAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceAlreadyExistsException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"484\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"485\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - datasetName\n                - actions\n              properties:\n                datasetName:\n                  description: The name of the data set.\n                  type: string\n                  pattern: ^[a-zA-Z0-9_]+$\n                  minLength: 1\n                  maxLength: 128\n                actions:\n                  description: A list of actions that create the data set contents.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/DatasetAction\"\n                  minItems: 1\n                  maxItems: 1\n                triggers:\n                  description: A list of triggers. A trigger causes data set contents to be\n                    populated at a specified time interval or when another data\n                    set's contents are created. The list of triggers can be\n                    empty or contain up to five \u003cb\u003eDataSetTrigger\u003c/b\u003e objects.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/DatasetTrigger\"\n                  minItems: 0\n                  maxItems: 5\n                contentDeliveryRules:\n                  description: When data set contents are created they are delivered to\n                    destinations specified here.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/DatasetContentDeliveryRule\"\n                  minItems: 0\n                  maxItems: 20\n                retentionPeriod:\n                  description: How long, in days, message data is kept.\n                  type: object\n                  properties:\n                    unlimited:\n                      $ref: \"#/components/schemas/UnlimitedRetentionPeriod\"\n                    numberOfDays:\n                      $ref: \"#/components/schemas/RetentionPeriodInDays\"\n                versioningConfiguration:\n                  description: Information about the versioning of data set contents.\n                  type: object\n                  properties:\n                    unlimited:\n                      $ref: \"#/components/schemas/UnlimitedVersioning\"\n                    maxVersions:\n                      $ref: \"#/components/schemas/MaxVersions\"\n                tags:\n                  description: Metadata which can be used to manage the data set.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/Tag\"\n                  minItems: 1\n                  maxItems: 50\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: ListDatasets\n      description: Retrieves information about data sets.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListDatasetsResponse\"\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"482\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"483\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: nextToken\n          in: query\n          required: false\n          description: The token for the next set of results.\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: \u003cp\u003eThe maximum number of results to return in this request.\u003c/p\u003e\n            \u003cp\u003eThe default value is 100.\u003c/p\u003e\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 250\n  \"/datasets/{datasetName}/content\":\n    post:\n      operationId: CreateDatasetContent\n      description: Creates the content of a data set by applying a \"queryAction\" (a SQL\n        query) or a \"containerAction\" (executing a containerized application).\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateDatasetContentResponse\"\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"484\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: datasetName\n          in: path\n          required: true\n          description: The name of the data set.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: ^[a-zA-Z0-9_]+$\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    delete:\n      operationId: DeleteDatasetContent\n      description: Deletes the content of the specified data set.\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"484\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: datasetName\n          in: path\n          required: true\n          description: The name of the data set whose content is deleted.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: ^[a-zA-Z0-9_]+$\n        - name: versionId\n          in: query\n          required: false\n          description: The version of the data set whose content is deleted. You can also\n            use the strings \"$LATEST\" or \"$LATEST_SUCCEEDED\" to delete the\n            latest or latest successfully completed data set. If not specified,\n            \"$LATEST_SUCCEEDED\" is the default.\n          schema:\n            type: string\n            minLength: 7\n            maxLength: 36\n    get:\n      operationId: GetDatasetContent\n      description: Retrieves the contents of a data set as pre-signed URIs.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetDatasetContentResponse\"\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"484\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: datasetName\n          in: path\n          required: true\n          description: The name of the data set whose contents are retrieved.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: ^[a-zA-Z0-9_]+$\n        - name: versionId\n          in: query\n          required: false\n          description: The version of the data set whose contents are retrieved. You can\n            also use the strings \"$LATEST\" or \"$LATEST_SUCCEEDED\" to retrieve\n            the contents of the latest or latest successfully completed data\n            set. If not specified, \"$LATEST_SUCCEEDED\" is the default.\n          schema:\n            type: string\n            minLength: 7\n            maxLength: 36\n  /datastores:\n    post:\n      operationId: CreateDatastore\n      description: Creates a data store, which is a repository for messages.\n      responses:\n        \"201\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateDatastoreResponse\"\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: ResourceAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceAlreadyExistsException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"484\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"485\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - datastoreName\n              properties:\n                datastoreName:\n                  description: The name of the data store.\n                  type: string\n                  pattern: ^[a-zA-Z0-9_]+$\n                  minLength: 1\n                  maxLength: 128\n                datastoreStorage:\n                  description: Where data store data is stored.\n                  type: object\n                  properties:\n                    serviceManagedS3:\n                      $ref: \"#/components/schemas/ServiceManagedDatastoreS3Storage\"\n                    customerManagedS3:\n                      $ref: \"#/components/schemas/CustomerManagedDatastoreS3Storage\"\n                retentionPeriod:\n                  description: How long, in days, message data is kept.\n                  type: object\n                  properties:\n                    unlimited:\n                      $ref: \"#/components/schemas/UnlimitedRetentionPeriod\"\n                    numberOfDays:\n                      $ref: \"#/components/schemas/RetentionPeriodInDays\"\n                tags:\n                  description: Metadata which can be used to manage the data store.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/Tag\"\n                  minItems: 1\n                  maxItems: 50\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: ListDatastores\n      description: Retrieves a list of data stores.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListDatastoresResponse\"\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"482\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"483\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: nextToken\n          in: query\n          required: false\n          description: The token for the next set of results.\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: \u003cp\u003eThe maximum number of results to return in this request.\u003c/p\u003e\n            \u003cp\u003eThe default value is 100.\u003c/p\u003e\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 250\n  /pipelines:\n    post:\n      operationId: CreatePipeline\n      description: Creates a pipeline. A pipeline consumes messages from one or more\n        channels and allows you to process the messages before storing them in a\n        data store. You must specify both a \u003ccode\u003echannel\u003c/code\u003e and a\n        \u003ccode\u003edatastore\u003c/code\u003e activity and, optionally, as many as 23\n        additional activities in the \u003ccode\u003epipelineActivities\u003c/code\u003e array.\n      responses:\n        \"201\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreatePipelineResponse\"\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: ResourceAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceAlreadyExistsException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"484\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"485\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - pipelineName\n                - pipelineActivities\n              properties:\n                pipelineName:\n                  description: The name of the pipeline.\n                  type: string\n                  pattern: ^[a-zA-Z0-9_]+$\n                  minLength: 1\n                  maxLength: 128\n                pipelineActivities:\n                  description: '\u003cp\u003eA list of \"PipelineActivity\" objects. Activities perform\n                    transformations on your messages, such as removing, renaming\n                    or adding message attributes; filtering messages based on\n                    attribute values; invoking your Lambda functions on messages\n                    for advanced processing; or performing mathematical\n                    transformations to normalize device data.\u003c/p\u003e \u003cp\u003eThe list\n                    can be 2-25 \u003cb\u003ePipelineActivity\u003c/b\u003e objects and must contain\n                    both a \u003ccode\u003echannel\u003c/code\u003e and a \u003ccode\u003edatastore\u003c/code\u003e\n                    activity. Each entry in the list must contain only one\n                    activity, for example:\u003c/p\u003e \u003cp\u003e \u003ccode\u003epipelineActivities = [\n                    { \"channel\": { ... } }, { \"lambda\": { ... } }, ... ]\u003c/code\u003e\n                    \u003c/p\u003e'\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/PipelineActivity\"\n                  minItems: 1\n                  maxItems: 25\n                tags:\n                  description: Metadata which can be used to manage the pipeline.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/Tag\"\n                  minItems: 1\n                  maxItems: 50\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: ListPipelines\n      description: Retrieves a list of pipelines.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListPipelinesResponse\"\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"482\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"483\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: nextToken\n          in: query\n          required: false\n          description: The token for the next set of results.\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: \u003cp\u003eThe maximum number of results to return in this request.\u003c/p\u003e\n            \u003cp\u003eThe default value is 100.\u003c/p\u003e\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 250\n  \"/channels/{channelName}\":\n    delete:\n      operationId: DeleteChannel\n      description: Deletes the specified channel.\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"484\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: channelName\n          in: path\n          required: true\n          description: The name of the channel to delete.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: ^[a-zA-Z0-9_]+$\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: DescribeChannel\n      description: Retrieves information about a channel.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeChannelResponse\"\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"484\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: channelName\n          in: path\n          required: true\n          description: The name of the channel whose information is retrieved.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: ^[a-zA-Z0-9_]+$\n        - name: includeStatistics\n          in: query\n          required: false\n          description: If true, additional statistical information about the channel is\n            included in the response.\n          schema:\n            type: boolean\n    put:\n      operationId: UpdateChannel\n      description: Updates the settings of a channel.\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"484\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: channelName\n          in: path\n          required: true\n          description: The name of the channel to be updated.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: ^[a-zA-Z0-9_]+$\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                channelStorage:\n                  description: Where channel data is stored.\n                  type: object\n                  properties:\n                    serviceManagedS3:\n                      $ref: \"#/components/schemas/ServiceManagedChannelS3Storage\"\n                    customerManagedS3:\n                      $ref: \"#/components/schemas/CustomerManagedChannelS3Storage\"\n                retentionPeriod:\n                  description: How long, in days, message data is kept.\n                  type: object\n                  properties:\n                    unlimited:\n                      $ref: \"#/components/schemas/UnlimitedRetentionPeriod\"\n                    numberOfDays:\n                      $ref: \"#/components/schemas/RetentionPeriodInDays\"\n        required: true\n  \"/datasets/{datasetName}\":\n    delete:\n      operationId: DeleteDataset\n      description: \u003cp\u003eDeletes the specified data set.\u003c/p\u003e \u003cp\u003eYou do not have to delete the\n        content of the data set before you perform this operation.\u003c/p\u003e\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"484\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: datasetName\n          in: path\n          required: true\n          description: The name of the data set to delete.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: ^[a-zA-Z0-9_]+$\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: DescribeDataset\n      description: Retrieves information about a data set.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeDatasetResponse\"\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"484\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: datasetName\n          in: path\n          required: true\n          description: The name of the data set whose information is retrieved.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: ^[a-zA-Z0-9_]+$\n    put:\n      operationId: UpdateDataset\n      description: Updates the settings of a data set.\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"484\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: datasetName\n          in: path\n          required: true\n          description: The name of the data set to update.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: ^[a-zA-Z0-9_]+$\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - actions\n              properties:\n                actions:\n                  description: A list of \"DatasetAction\" objects.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/DatasetAction\"\n                  minItems: 1\n                  maxItems: 1\n                triggers:\n                  description: A list of \"DatasetTrigger\" objects. The list can be empty or\n                    can contain up to five \u003cb\u003eDataSetTrigger\u003c/b\u003e objects.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/DatasetTrigger\"\n                  minItems: 0\n                  maxItems: 5\n                contentDeliveryRules:\n                  description: When data set contents are created they are delivered to\n                    destinations specified here.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/DatasetContentDeliveryRule\"\n                  minItems: 0\n                  maxItems: 20\n                retentionPeriod:\n                  description: How long, in days, message data is kept.\n                  type: object\n                  properties:\n                    unlimited:\n                      $ref: \"#/components/schemas/UnlimitedRetentionPeriod\"\n                    numberOfDays:\n                      $ref: \"#/components/schemas/RetentionPeriodInDays\"\n                versioningConfiguration:\n                  description: Information about the versioning of data set contents.\n                  type: object\n                  properties:\n                    unlimited:\n                      $ref: \"#/components/schemas/UnlimitedVersioning\"\n                    maxVersions:\n                      $ref: \"#/components/schemas/MaxVersions\"\n        required: true\n  \"/datastores/{datastoreName}\":\n    delete:\n      operationId: DeleteDatastore\n      description: Deletes the specified data store.\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"484\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: datastoreName\n          in: path\n          required: true\n          description: The name of the data store to delete.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: ^[a-zA-Z0-9_]+$\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: DescribeDatastore\n      description: Retrieves information about a data store.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeDatastoreResponse\"\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"484\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: datastoreName\n          in: path\n          required: true\n          description: The name of the data store\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: ^[a-zA-Z0-9_]+$\n        - name: includeStatistics\n          in: query\n          required: false\n          description: If true, additional statistical information about the datastore is\n            included in the response.\n          schema:\n            type: boolean\n    put:\n      operationId: UpdateDatastore\n      description: Updates the settings of a data store.\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"484\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: datastoreName\n          in: path\n          required: true\n          description: The name of the data store to be updated.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: ^[a-zA-Z0-9_]+$\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                retentionPeriod:\n                  description: How long, in days, message data is kept.\n                  type: object\n                  properties:\n                    unlimited:\n                      $ref: \"#/components/schemas/UnlimitedRetentionPeriod\"\n                    numberOfDays:\n                      $ref: \"#/components/schemas/RetentionPeriodInDays\"\n                datastoreStorage:\n                  description: Where data store data is stored.\n                  type: object\n                  properties:\n                    serviceManagedS3:\n                      $ref: \"#/components/schemas/ServiceManagedDatastoreS3Storage\"\n                    customerManagedS3:\n                      $ref: \"#/components/schemas/CustomerManagedDatastoreS3Storage\"\n        required: true\n  \"/pipelines/{pipelineName}\":\n    delete:\n      operationId: DeletePipeline\n      description: Deletes the specified pipeline.\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"484\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: pipelineName\n          in: path\n          required: true\n          description: The name of the pipeline to delete.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: ^[a-zA-Z0-9_]+$\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: DescribePipeline\n      description: Retrieves information about a pipeline.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribePipelineResponse\"\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"484\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: pipelineName\n          in: path\n          required: true\n          description: The name of the pipeline whose information is retrieved.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: ^[a-zA-Z0-9_]+$\n    put:\n      operationId: UpdatePipeline\n      description: Updates the settings of a pipeline. You must specify both a\n        \u003ccode\u003echannel\u003c/code\u003e and a \u003ccode\u003edatastore\u003c/code\u003e activity and,\n        optionally, as many as 23 additional activities in the\n        \u003ccode\u003epipelineActivities\u003c/code\u003e array.\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"484\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"485\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n      parameters:\n        - name: pipelineName\n          in: path\n          required: true\n          description: The name of the pipeline to update.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: ^[a-zA-Z0-9_]+$\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - pipelineActivities\n              properties:\n                pipelineActivities:\n                  description: '\u003cp\u003eA list of \"PipelineActivity\" objects. Activities perform\n                    transformations on your messages, such as removing, renaming\n                    or adding message attributes; filtering messages based on\n                    attribute values; invoking your Lambda functions on messages\n                    for advanced processing; or performing mathematical\n                    transformations to normalize device data.\u003c/p\u003e \u003cp\u003eThe list\n                    can be 2-25 \u003cb\u003ePipelineActivity\u003c/b\u003e objects and must contain\n                    both a \u003ccode\u003echannel\u003c/code\u003e and a \u003ccode\u003edatastore\u003c/code\u003e\n                    activity. Each entry in the list must contain only one\n                    activity, for example:\u003c/p\u003e \u003cp\u003e \u003ccode\u003epipelineActivities = [\n                    { \"channel\": { ... } }, { \"lambda\": { ... } }, ... ]\u003c/code\u003e\n                    \u003c/p\u003e'\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/PipelineActivity\"\n                  minItems: 1\n                  maxItems: 25\n        required: true\n  /logging:\n    get:\n      operationId: DescribeLoggingOptions\n      description: Retrieves the current settings of the AWS IoT Analytics logging options.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DescribeLoggingOptionsResponse\"\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"484\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    put:\n      operationId: PutLoggingOptions\n      description: \u003cp\u003eSets or updates the AWS IoT Analytics logging options.\u003c/p\u003e \u003cp\u003eNote\n        that if you update the value of any \u003ccode\u003eloggingOptions\u003c/code\u003e field,\n        it takes up to one minute for the change to take effect. Also, if you\n        change the policy attached to the role you specified in the roleArn\n        field (for example, to correct an invalid policy) it takes up to 5\n        minutes for that change to take effect. \u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"482\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"483\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - loggingOptions\n              properties:\n                loggingOptions:\n                  description: Information about logging options.\n                  type: object\n                  properties:\n                    roleArn:\n                      $ref: \"#/components/schemas/RoleArn\"\n                    level:\n                      $ref: \"#/components/schemas/LoggingLevel\"\n                    enabled:\n                      $ref: \"#/components/schemas/LoggingEnabled\"\n        required: true\n  \"/datasets/{datasetName}/contents\":\n    get:\n      operationId: ListDatasetContents\n      description: Lists information about data set contents that have been created.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListDatasetContentsResponse\"\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"482\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"483\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"484\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n      parameters:\n        - name: datasetName\n          in: path\n          required: true\n          description: The name of the data set whose contents information you want to list.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: ^[a-zA-Z0-9_]+$\n        - name: nextToken\n          in: query\n          required: false\n          description: The token for the next set of results.\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of results to return in this request.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 250\n        - name: scheduledOnOrAfter\n          in: query\n          required: false\n          description: A filter to limit results to those data set contents whose creation\n            is scheduled on or after the given time. See the field\n            \u003ccode\u003etriggers.schedule\u003c/code\u003e in the CreateDataset request.\n            (timestamp)\n          schema:\n            type: string\n            format: date-time\n        - name: scheduledBefore\n          in: query\n          required: false\n          description: A filter to limit results to those data set contents whose creation\n            is scheduled before the given time. See the field\n            \u003ccode\u003etriggers.schedule\u003c/code\u003e in the CreateDataset request.\n            (timestamp)\n          schema:\n            type: string\n            format: date-time\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /tags#resourceArn:\n    get:\n      operationId: ListTagsForResource\n      description: Lists the tags (metadata) which you have assigned to the resource.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListTagsForResourceResponse\"\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"482\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"483\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"484\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"485\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n      parameters:\n        - name: resourceArn\n          in: query\n          required: true\n          description: The ARN of the resource whose tags you want to list.\n          schema:\n            type: string\n            minLength: 20\n            maxLength: 2048\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      operationId: TagResource\n      description: Adds to or modifies the tags of the given resource. Tags are metadata\n        which can be used to manage a resource.\n      responses:\n        \"204\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TagResourceResponse\"\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"482\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"483\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"484\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"485\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n      parameters:\n        - name: resourceArn\n          in: query\n          required: true\n          description: The ARN of the resource whose tags you want to modify.\n          schema:\n            type: string\n            minLength: 20\n            maxLength: 2048\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - tags\n              properties:\n                tags:\n                  description: The new or modified tags for the resource.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/Tag\"\n                  minItems: 1\n                  maxItems: 50\n        required: true\n  /pipelineactivities/run:\n    post:\n      operationId: RunPipelineActivity\n      description: Simulates the results of running a pipeline activity on a message\n        payload.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RunPipelineActivityResponse\"\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"482\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"483\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - pipelineActivity\n                - payloads\n              properties:\n                pipelineActivity:\n                  description: An activity that performs a transformation on a message.\n                  type: object\n                  properties:\n                    channel:\n                      $ref: \"#/components/schemas/ChannelActivity\"\n                    lambda:\n                      $ref: \"#/components/schemas/LambdaActivity\"\n                    datastore:\n                      $ref: \"#/components/schemas/DatastoreActivity\"\n                    addAttributes:\n                      $ref: \"#/components/schemas/AddAttributesActivity\"\n                    removeAttributes:\n                      $ref: \"#/components/schemas/RemoveAttributesActivity\"\n                    selectAttributes:\n                      $ref: \"#/components/schemas/SelectAttributesActivity\"\n                    filter:\n                      $ref: \"#/components/schemas/FilterActivity\"\n                    math:\n                      $ref: \"#/components/schemas/MathActivity\"\n                    deviceRegistryEnrich:\n                      $ref: \"#/components/schemas/DeviceRegistryEnrichActivity\"\n                    deviceShadowEnrich:\n                      $ref: \"#/components/schemas/DeviceShadowEnrichActivity\"\n                payloads:\n                  description: The sample message payloads on which the pipeline activity\n                    is run.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/MessagePayload\"\n                  minItems: 1\n                  maxItems: 10\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/channels/{channelName}/sample\":\n    get:\n      operationId: SampleChannelData\n      description: Retrieves a sample of messages from the specified channel ingested\n        during the specified timeframe. Up to 10 messages can be retrieved.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SampleChannelDataResponse\"\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"484\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: channelName\n          in: path\n          required: true\n          description: The name of the channel whose message samples are retrieved.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: ^[a-zA-Z0-9_]+$\n        - name: maxMessages\n          in: query\n          required: false\n          description: The number of sample messages to be retrieved. The limit is 10, the\n            default is also 10.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 10\n        - name: startTime\n          in: query\n          required: false\n          description: The start of the time window from which sample messages are\n            retrieved.\n          schema:\n            type: string\n            format: date-time\n        - name: endTime\n          in: query\n          required: false\n          description: The end of the time window from which sample messages are retrieved.\n          schema:\n            type: string\n            format: date-time\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/pipelines/{pipelineName}/reprocessing\":\n    post:\n      operationId: StartPipelineReprocessing\n      description: Starts the reprocessing of raw message data through the pipeline.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StartPipelineReprocessingResponse\"\n        \"480\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n        \"481\":\n          description: ResourceAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceAlreadyExistsException\"\n        \"482\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"483\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"484\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"485\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n      parameters:\n        - name: pipelineName\n          in: path\n          required: true\n          description: The name of the pipeline on which to start reprocessing.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 128\n            pattern: ^[a-zA-Z0-9_]+$\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                startTime:\n                  description: The start time (inclusive) of raw message data that is\n                    reprocessed.\n                  type: string\n                  format: date-time\n                endTime:\n                  description: The end time (exclusive) of raw message data that is\n                    reprocessed.\n                  type: string\n                  format: date-time\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /tags#resourceArn\u0026tagKeys:\n    delete:\n      operationId: UntagResource\n      description: Removes the given tags (metadata) from the resource.\n      responses:\n        \"204\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UntagResourceResponse\"\n        \"480\":\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvalidRequestException\"\n        \"481\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"482\":\n          description: ServiceUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServiceUnavailableException\"\n        \"483\":\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThrottlingException\"\n        \"484\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"485\":\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceNotFoundException\"\n      parameters:\n        - name: resourceArn\n          in: query\n          required: true\n          description: The ARN of the resource whose tags you want to remove.\n          schema:\n            type: string\n            minLength: 20\n            maxLength: 2048\n        - name: tagKeys\n          in: query\n          required: true\n          description: The keys of those tags which you want to remove.\n          schema:\n            type: array\n            items:\n              type: string\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\nservers:\n  - url: http://iotanalytics.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The AWS IoT Analytics multi-region endpoint\n  - url: https://iotanalytics.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The AWS IoT Analytics multi-region endpoint\n  - url: http://iotanalytics.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS IoT Analytics endpoint for China (Beijing) and China (Ningxia)\n  - url: https://iotanalytics.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS IoT Analytics endpoint for China (Beijing) and China (Ningxia)\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      required: false\n      schema:\n        type: string\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    BatchPutMessageResponse:\n      type: object\n      properties:\n        batchPutMessageErrorEntries:\n          $ref: \"#/components/schemas/BatchPutMessageErrorEntries\"\n    Message:\n      type: object\n      required:\n        - messageId\n        - payload\n      properties:\n        messageId:\n          $ref: \"#/components/schemas/MessageId\"\n        payload:\n          $ref: \"#/components/schemas/MessagePayload\"\n      description: Information about a message.\n    ResourceNotFoundException: {}\n    InvalidRequestException: {}\n    InternalFailureException: {}\n    ServiceUnavailableException: {}\n    ThrottlingException: {}\n    CancelPipelineReprocessingResponse:\n      type: object\n      properties: {}\n    CreateChannelResponse:\n      type: object\n      properties:\n        channelName:\n          $ref: \"#/components/schemas/ChannelName\"\n        channelArn:\n          $ref: \"#/components/schemas/ChannelArn\"\n        retentionPeriod:\n          $ref: \"#/components/schemas/RetentionPeriod\"\n    ServiceManagedChannelS3Storage:\n      type: object\n      properties: {}\n      description: Use this to store channel data in an S3 bucket managed by the AWS IoT\n        Analytics service.\n    CustomerManagedChannelS3Storage:\n      type: object\n      required:\n        - bucket\n        - roleArn\n      properties:\n        bucket:\n          $ref: \"#/components/schemas/BucketName\"\n        keyPrefix:\n          $ref: \"#/components/schemas/S3KeyPrefix\"\n        roleArn:\n          $ref: \"#/components/schemas/RoleArn\"\n      description: Use this to store channel data in an S3 bucket that you manage.\n    UnlimitedRetentionPeriod:\n      type: boolean\n    RetentionPeriodInDays:\n      type: integer\n      minimum: 1\n    Tag:\n      type: object\n      required:\n        - key\n        - value\n      properties:\n        key:\n          $ref: \"#/components/schemas/TagKey\"\n        value:\n          $ref: \"#/components/schemas/TagValue\"\n      description: A set of key/value pairs which are used to manage the resource.\n    ResourceAlreadyExistsException: {}\n    LimitExceededException: {}\n    CreateDatasetResponse:\n      type: object\n      properties:\n        datasetName:\n          $ref: \"#/components/schemas/DatasetName\"\n        datasetArn:\n          $ref: \"#/components/schemas/DatasetArn\"\n        retentionPeriod:\n          $ref: \"#/components/schemas/RetentionPeriod\"\n    DatasetAction:\n      type: object\n      properties:\n        actionName:\n          $ref: \"#/components/schemas/DatasetActionName\"\n        queryAction:\n          $ref: \"#/components/schemas/SqlQueryDatasetAction\"\n        containerAction:\n          $ref: \"#/components/schemas/ContainerDatasetAction\"\n      description: A \"DatasetAction\" object that specifies how data set contents are\n        automatically created.\n    DatasetTrigger:\n      type: object\n      properties:\n        schedule:\n          $ref: \"#/components/schemas/Schedule\"\n        dataset:\n          $ref: \"#/components/schemas/TriggeringDataset\"\n      description: The \"DatasetTrigger\" that specifies when the data set is automatically\n        updated.\n    DatasetContentDeliveryRule:\n      type: object\n      required:\n        - destination\n      properties:\n        entryName:\n          $ref: \"#/components/schemas/EntryName\"\n        destination:\n          $ref: \"#/components/schemas/DatasetContentDeliveryDestination\"\n      description: When data set contents are created they are delivered to destination\n        specified here.\n    UnlimitedVersioning:\n      type: boolean\n    MaxVersions:\n      type: integer\n      minimum: 1\n      maximum: 1000\n    CreateDatasetContentResponse:\n      type: object\n      properties:\n        versionId:\n          $ref: \"#/components/schemas/DatasetContentVersion\"\n    CreateDatastoreResponse:\n      type: object\n      properties:\n        datastoreName:\n          $ref: \"#/components/schemas/DatastoreName\"\n        datastoreArn:\n          $ref: \"#/components/schemas/DatastoreArn\"\n        retentionPeriod:\n          $ref: \"#/components/schemas/RetentionPeriod\"\n    ServiceManagedDatastoreS3Storage:\n      type: object\n      properties: {}\n      description: Use this to store data store data in an S3 bucket managed by the AWS IoT\n        Analytics service.\n    CustomerManagedDatastoreS3Storage:\n      type: object\n      required:\n        - bucket\n        - roleArn\n      properties:\n        bucket:\n          $ref: \"#/components/schemas/BucketName\"\n        keyPrefix:\n          $ref: \"#/components/schemas/S3KeyPrefix\"\n        roleArn:\n          $ref: \"#/components/schemas/RoleArn\"\n      description: Use this to store data store data in an S3 bucket that you manage.\n    CreatePipelineResponse:\n      type: object\n      properties:\n        pipelineName:\n          $ref: \"#/components/schemas/PipelineName\"\n        pipelineArn:\n          $ref: \"#/components/schemas/PipelineArn\"\n    PipelineActivity:\n      type: object\n      properties:\n        channel:\n          $ref: \"#/components/schemas/ChannelActivity\"\n        lambda:\n          $ref: \"#/components/schemas/LambdaActivity\"\n        datastore:\n          $ref: \"#/components/schemas/DatastoreActivity\"\n        addAttributes:\n          $ref: \"#/components/schemas/AddAttributesActivity\"\n        removeAttributes:\n          $ref: \"#/components/schemas/RemoveAttributesActivity\"\n        selectAttributes:\n          $ref: \"#/components/schemas/SelectAttributesActivity\"\n        filter:\n          $ref: \"#/components/schemas/FilterActivity\"\n        math:\n          $ref: \"#/components/schemas/MathActivity\"\n        deviceRegistryEnrich:\n          $ref: \"#/components/schemas/DeviceRegistryEnrichActivity\"\n        deviceShadowEnrich:\n          $ref: \"#/components/schemas/DeviceShadowEnrichActivity\"\n      description: An activity that performs a transformation on a message.\n    DescribeChannelResponse:\n      type: object\n      properties:\n        channel:\n          $ref: \"#/components/schemas/Channel\"\n        statistics:\n          $ref: \"#/components/schemas/ChannelStatistics\"\n    DescribeDatasetResponse:\n      type: object\n      properties:\n        dataset:\n          $ref: \"#/components/schemas/Dataset\"\n    DescribeDatastoreResponse:\n      type: object\n      properties:\n        datastore:\n          $ref: \"#/components/schemas/Datastore\"\n        statistics:\n          $ref: \"#/components/schemas/DatastoreStatistics\"\n    DescribeLoggingOptionsResponse:\n      type: object\n      properties:\n        loggingOptions:\n          $ref: \"#/components/schemas/LoggingOptions\"\n    DescribePipelineResponse:\n      type: object\n      properties:\n        pipeline:\n          $ref: \"#/components/schemas/Pipeline\"\n    GetDatasetContentResponse:\n      type: object\n      properties:\n        entries:\n          $ref: \"#/components/schemas/DatasetEntries\"\n        timestamp:\n          $ref: \"#/components/schemas/Timestamp\"\n        status:\n          $ref: \"#/components/schemas/DatasetContentStatus\"\n    ListChannelsResponse:\n      type: object\n      properties:\n        channelSummaries:\n          $ref: \"#/components/schemas/ChannelSummaries\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    ListDatasetContentsResponse:\n      type: object\n      properties:\n        datasetContentSummaries:\n          $ref: \"#/components/schemas/DatasetContentSummaries\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    ListDatasetsResponse:\n      type: object\n      properties:\n        datasetSummaries:\n          $ref: \"#/components/schemas/DatasetSummaries\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    ListDatastoresResponse:\n      type: object\n      properties:\n        datastoreSummaries:\n          $ref: \"#/components/schemas/DatastoreSummaries\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    ListPipelinesResponse:\n      type: object\n      properties:\n        pipelineSummaries:\n          $ref: \"#/components/schemas/PipelineSummaries\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    ListTagsForResourceResponse:\n      type: object\n      properties:\n        tags:\n          $ref: \"#/components/schemas/TagList\"\n    RoleArn:\n      type: string\n      minLength: 20\n      maxLength: 2048\n    LoggingLevel:\n      type: string\n      enum:\n        - ERROR\n    LoggingEnabled:\n      type: boolean\n    RunPipelineActivityResponse:\n      type: object\n      properties:\n        payloads:\n          $ref: \"#/components/schemas/MessagePayloads\"\n        logResult:\n          $ref: \"#/components/schemas/LogResult\"\n    ChannelActivity:\n      type: object\n      required:\n        - name\n        - channelName\n      properties:\n        name:\n          $ref: \"#/components/schemas/ActivityName\"\n        channelName:\n          $ref: \"#/components/schemas/ChannelName\"\n        next:\n          $ref: \"#/components/schemas/ActivityName\"\n      description: The activity that determines the source of the messages to be processed.\n    LambdaActivity:\n      type: object\n      required:\n        - name\n        - lambdaName\n        - batchSize\n      properties:\n        name:\n          $ref: \"#/components/schemas/ActivityName\"\n        lambdaName:\n          $ref: \"#/components/schemas/LambdaName\"\n        batchSize:\n          $ref: \"#/components/schemas/ActivityBatchSize\"\n        next:\n          $ref: \"#/components/schemas/ActivityName\"\n      description: An activity that runs a Lambda function to modify the message.\n    DatastoreActivity:\n      type: object\n      required:\n        - name\n        - datastoreName\n      properties:\n        name:\n          $ref: \"#/components/schemas/ActivityName\"\n        datastoreName:\n          $ref: \"#/components/schemas/DatastoreName\"\n      description: The 'datastore' activity that specifies where to store the processed\n        data.\n    AddAttributesActivity:\n      type: object\n      required:\n        - name\n        - attributes\n      properties:\n        name:\n          $ref: \"#/components/schemas/ActivityName\"\n        attributes:\n          $ref: \"#/components/schemas/AttributeNameMapping\"\n        next:\n          $ref: \"#/components/schemas/ActivityName\"\n      description: An activity that adds other attributes based on existing attributes in\n        the message.\n    RemoveAttributesActivity:\n      type: object\n      required:\n        - name\n        - attributes\n      properties:\n        name:\n          $ref: \"#/components/schemas/ActivityName\"\n        attributes:\n          $ref: \"#/components/schemas/AttributeNames\"\n        next:\n          $ref: \"#/components/schemas/ActivityName\"\n      description: An activity that removes attributes from a message.\n    SelectAttributesActivity:\n      type: object\n      required:\n        - name\n        - attributes\n      properties:\n        name:\n          $ref: \"#/components/schemas/ActivityName\"\n        attributes:\n          $ref: \"#/components/schemas/AttributeNames\"\n        next:\n          $ref: \"#/components/schemas/ActivityName\"\n      description: Creates a new message using only the specified attributes from the\n        original message.\n    FilterActivity:\n      type: object\n      required:\n        - name\n        - filter\n      properties:\n        name:\n          $ref: \"#/components/schemas/ActivityName\"\n        filter:\n          $ref: \"#/components/schemas/FilterExpression\"\n        next:\n          $ref: \"#/components/schemas/ActivityName\"\n      description: An activity that filters a message based on its attributes.\n    MathActivity:\n      type: object\n      required:\n        - name\n        - attribute\n        - math\n      properties:\n        name:\n          $ref: \"#/components/schemas/ActivityName\"\n        attribute:\n          $ref: \"#/components/schemas/AttributeName\"\n        math:\n          $ref: \"#/components/schemas/MathExpression\"\n        next:\n          $ref: \"#/components/schemas/ActivityName\"\n      description: An activity that computes an arithmetic expression using the message's\n        attributes.\n    DeviceRegistryEnrichActivity:\n      type: object\n      required:\n        - name\n        - attribute\n        - thingName\n        - roleArn\n      properties:\n        name:\n          $ref: \"#/components/schemas/ActivityName\"\n        attribute:\n          $ref: \"#/components/schemas/AttributeName\"\n        thingName:\n          $ref: \"#/components/schemas/AttributeName\"\n        roleArn:\n          $ref: \"#/components/schemas/RoleArn\"\n        next:\n          $ref: \"#/components/schemas/ActivityName\"\n      description: An activity that adds data from the AWS IoT device registry to your\n        message.\n    DeviceShadowEnrichActivity:\n      type: object\n      required:\n        - name\n        - attribute\n        - thingName\n        - roleArn\n      properties:\n        name:\n          $ref: \"#/components/schemas/ActivityName\"\n        attribute:\n          $ref: \"#/components/schemas/AttributeName\"\n        thingName:\n          $ref: \"#/components/schemas/AttributeName\"\n        roleArn:\n          $ref: \"#/components/schemas/RoleArn\"\n        next:\n          $ref: \"#/components/schemas/ActivityName\"\n      description: An activity that adds information from the AWS IoT Device Shadows\n        service to a message.\n    MessagePayload:\n      type: string\n    SampleChannelDataResponse:\n      type: object\n      properties:\n        payloads:\n          $ref: \"#/components/schemas/MessagePayloads\"\n    StartPipelineReprocessingResponse:\n      type: object\n      properties:\n        reprocessingId:\n          $ref: \"#/components/schemas/ReprocessingId\"\n    TagResourceResponse:\n      type: object\n      properties: {}\n    UntagResourceResponse:\n      type: object\n      properties: {}\n    TagKey:\n      type: string\n      minLength: 1\n      maxLength: 256\n    ActivityBatchSize:\n      type: integer\n      minimum: 1\n      maximum: 1000\n    ActivityName:\n      type: string\n      minLength: 1\n      maxLength: 128\n    AttributeNameMapping:\n      type: object\n      minProperties: 1\n      maxProperties: 50\n      additionalProperties:\n        $ref: \"#/components/schemas/AttributeName\"\n    AttributeName:\n      type: string\n      minLength: 1\n      maxLength: 256\n    AttributeNames:\n      type: array\n      items:\n        $ref: \"#/components/schemas/AttributeName\"\n      minItems: 1\n      maxItems: 50\n    BatchPutMessageErrorEntry:\n      type: object\n      properties:\n        messageId:\n          $ref: \"#/components/schemas/MessageId\"\n        errorCode:\n          $ref: \"#/components/schemas/ErrorCode\"\n        errorMessage:\n          $ref: \"#/components/schemas/ErrorMessage\"\n      description: Contains informations about errors.\n    BatchPutMessageErrorEntries:\n      type: array\n      items:\n        $ref: \"#/components/schemas/BatchPutMessageErrorEntry\"\n    MessageId:\n      type: string\n      minLength: 1\n      maxLength: 128\n    ErrorCode:\n      type: string\n    ErrorMessage:\n      type: string\n    ChannelName:\n      type: string\n      pattern: ^[a-zA-Z0-9_]+$\n      minLength: 1\n      maxLength: 128\n    Messages:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Message\"\n    BatchPutMessageRequest:\n      type: object\n      required:\n        - channelName\n        - messages\n      properties:\n        channelName:\n          $ref: \"#/components/schemas/ChannelName\"\n        messages:\n          $ref: \"#/components/schemas/Messages\"\n    BucketKeyExpression:\n      type: string\n      pattern: ^[a-zA-Z0-9!_.*'()/{}:-]*$\n      minLength: 1\n      maxLength: 255\n    BucketName:\n      type: string\n      pattern: ^[a-zA-Z0-9.\\-_]*$\n      minLength: 3\n      maxLength: 255\n    PipelineName:\n      type: string\n      pattern: ^[a-zA-Z0-9_]+$\n      minLength: 1\n      maxLength: 128\n    ReprocessingId:\n      type: string\n    CancelPipelineReprocessingRequest:\n      type: object\n      properties: {}\n    ChannelStorage:\n      type: object\n      properties:\n        serviceManagedS3:\n          $ref: \"#/components/schemas/ServiceManagedChannelS3Storage\"\n        customerManagedS3:\n          $ref: \"#/components/schemas/CustomerManagedChannelS3Storage\"\n      description: Where channel data is stored.\n    ChannelArn:\n      type: string\n    ChannelStatus:\n      type: string\n      enum:\n        - CREATING\n        - ACTIVE\n        - DELETING\n    RetentionPeriod:\n      type: object\n      properties:\n        unlimited:\n          $ref: \"#/components/schemas/UnlimitedRetentionPeriod\"\n        numberOfDays:\n          $ref: \"#/components/schemas/RetentionPeriodInDays\"\n      description: How long, in days, message data is kept.\n    Timestamp:\n      type: string\n      format: date-time\n    Channel:\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/ChannelName\"\n        storage:\n          $ref: \"#/components/schemas/ChannelStorage\"\n        arn:\n          $ref: \"#/components/schemas/ChannelArn\"\n        status:\n          $ref: \"#/components/schemas/ChannelStatus\"\n        retentionPeriod:\n          $ref: \"#/components/schemas/RetentionPeriod\"\n        creationTime:\n          $ref: \"#/components/schemas/Timestamp\"\n        lastUpdateTime:\n          $ref: \"#/components/schemas/Timestamp\"\n      description: A collection of data from an MQTT topic. Channels archive the raw,\n        unprocessed messages before publishing the data to a pipeline.\n    EstimatedResourceSize:\n      type: object\n      properties:\n        estimatedSizeInBytes:\n          $ref: \"#/components/schemas/SizeInBytes\"\n        estimatedOn:\n          $ref: \"#/components/schemas/Timestamp\"\n      description: The estimated size of the resource.\n    ChannelStatistics:\n      type: object\n      properties:\n        size:\n          $ref: \"#/components/schemas/EstimatedResourceSize\"\n      description: Statistics information about the channel.\n    ServiceManagedChannelS3StorageSummary:\n      type: object\n      properties: {}\n      description: Used to store channel data in an S3 bucket managed by the AWS IoT\n        Analytics service.\n    CustomerManagedChannelS3StorageSummary:\n      type: object\n      properties:\n        bucket:\n          $ref: \"#/components/schemas/BucketName\"\n        keyPrefix:\n          $ref: \"#/components/schemas/S3KeyPrefix\"\n        roleArn:\n          $ref: \"#/components/schemas/RoleArn\"\n      description: Used to store channel data in an S3 bucket that you manage.\n    ChannelStorageSummary:\n      type: object\n      properties:\n        serviceManagedS3:\n          $ref: \"#/components/schemas/ServiceManagedChannelS3StorageSummary\"\n        customerManagedS3:\n          $ref: \"#/components/schemas/CustomerManagedChannelS3StorageSummary\"\n      description: Where channel data is stored.\n    ChannelSummary:\n      type: object\n      properties:\n        channelName:\n          $ref: \"#/components/schemas/ChannelName\"\n        channelStorage:\n          $ref: \"#/components/schemas/ChannelStorageSummary\"\n        status:\n          $ref: \"#/components/schemas/ChannelStatus\"\n        creationTime:\n          $ref: \"#/components/schemas/Timestamp\"\n        lastUpdateTime:\n          $ref: \"#/components/schemas/Timestamp\"\n      description: A summary of information about a channel.\n    ChannelSummaries:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ChannelSummary\"\n    ComputeType:\n      type: string\n      enum:\n        - ACU_1\n        - ACU_2\n    Image:\n      type: string\n      maxLength: 255\n    ResourceConfiguration:\n      type: object\n      required:\n        - computeType\n        - volumeSizeInGB\n      properties:\n        computeType:\n          $ref: \"#/components/schemas/ComputeType\"\n        volumeSizeInGB:\n          $ref: \"#/components/schemas/VolumeSizeInGB\"\n      description: The configuration of the resource used to execute the \"containerAction\".\n    Variables:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Variable\"\n      minItems: 0\n      maxItems: 50\n    ContainerDatasetAction:\n      type: object\n      required:\n        - image\n        - executionRoleArn\n        - resourceConfiguration\n      properties:\n        image:\n          $ref: \"#/components/schemas/Image\"\n        executionRoleArn:\n          $ref: \"#/components/schemas/RoleArn\"\n        resourceConfiguration:\n          $ref: \"#/components/schemas/ResourceConfiguration\"\n        variables:\n          $ref: \"#/components/schemas/Variables\"\n      description: Information needed to run the \"containerAction\" to produce data set\n        contents.\n    TagList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Tag\"\n      minItems: 1\n      maxItems: 50\n    CreateChannelRequest:\n      type: object\n      required:\n        - channelName\n      properties:\n        channelName:\n          $ref: \"#/components/schemas/ChannelName\"\n        channelStorage:\n          $ref: \"#/components/schemas/ChannelStorage\"\n        retentionPeriod:\n          $ref: \"#/components/schemas/RetentionPeriod\"\n        tags:\n          $ref: \"#/components/schemas/TagList\"\n    DatasetName:\n      type: string\n      pattern: ^[a-zA-Z0-9_]+$\n      minLength: 1\n      maxLength: 128\n    CreateDatasetContentRequest:\n      type: object\n      properties: {}\n    DatasetContentVersion:\n      type: string\n      minLength: 7\n      maxLength: 36\n    DatasetActions:\n      type: array\n      items:\n        $ref: \"#/components/schemas/DatasetAction\"\n      minItems: 1\n      maxItems: 1\n    DatasetTriggers:\n      type: array\n      items:\n        $ref: \"#/components/schemas/DatasetTrigger\"\n      minItems: 0\n      maxItems: 5\n    DatasetContentDeliveryRules:\n      type: array\n      items:\n        $ref: \"#/components/schemas/DatasetContentDeliveryRule\"\n      minItems: 0\n      maxItems: 20\n    VersioningConfiguration:\n      type: object\n      properties:\n        unlimited:\n          $ref: \"#/components/schemas/UnlimitedVersioning\"\n        maxVersions:\n          $ref: \"#/components/schemas/MaxVersions\"\n      description: Information about the versioning of data set contents.\n    CreateDatasetRequest:\n      type: object\n      required:\n        - datasetName\n        - actions\n      properties:\n        datasetName:\n          $ref: \"#/components/schemas/DatasetName\"\n        actions:\n          $ref: \"#/components/schemas/DatasetActions\"\n        triggers:\n          $ref: \"#/components/schemas/DatasetTriggers\"\n        contentDeliveryRules:\n          $ref: \"#/components/schemas/DatasetContentDeliveryRules\"\n        retentionPeriod:\n          $ref: \"#/components/schemas/RetentionPeriod\"\n        versioningConfiguration:\n          $ref: \"#/components/schemas/VersioningConfiguration\"\n        tags:\n          $ref: \"#/components/schemas/TagList\"\n    DatasetArn:\n      type: string\n    DatastoreName:\n      type: string\n      pattern: ^[a-zA-Z0-9_]+$\n      minLength: 1\n      maxLength: 128\n    DatastoreStorage:\n      type: object\n      properties:\n        serviceManagedS3:\n          $ref: \"#/components/schemas/ServiceManagedDatastoreS3Storage\"\n        customerManagedS3:\n          $ref: \"#/components/schemas/CustomerManagedDatastoreS3Storage\"\n      description: Where data store data is stored.\n    CreateDatastoreRequest:\n      type: object\n      required:\n        - datastoreName\n      properties:\n        datastoreName:\n          $ref: \"#/components/schemas/DatastoreName\"\n        datastoreStorage:\n          $ref: \"#/components/schemas/DatastoreStorage\"\n        retentionPeriod:\n          $ref: \"#/components/schemas/RetentionPeriod\"\n        tags:\n          $ref: \"#/components/schemas/TagList\"\n    DatastoreArn:\n      type: string\n    PipelineActivities:\n      type: array\n      items:\n        $ref: \"#/components/schemas/PipelineActivity\"\n      minItems: 1\n      maxItems: 25\n    CreatePipelineRequest:\n      type: object\n      required:\n        - pipelineName\n        - pipelineActivities\n      properties:\n        pipelineName:\n          $ref: \"#/components/schemas/PipelineName\"\n        pipelineActivities:\n          $ref: \"#/components/schemas/PipelineActivities\"\n        tags:\n          $ref: \"#/components/schemas/TagList\"\n    PipelineArn:\n      type: string\n    S3KeyPrefix:\n      type: string\n      pattern: ^[a-zA-Z0-9!_.*'()/{}:-]*/$\n      minLength: 1\n      maxLength: 255\n    CustomerManagedDatastoreS3StorageSummary:\n      type: object\n      properties:\n        bucket:\n          $ref: \"#/components/schemas/BucketName\"\n        keyPrefix:\n          $ref: \"#/components/schemas/S3KeyPrefix\"\n        roleArn:\n          $ref: \"#/components/schemas/RoleArn\"\n      description: Used to store data store data in an S3 bucket that you manage.\n    DatasetStatus:\n      type: string\n      enum:\n        - CREATING\n        - ACTIVE\n        - DELETING\n    Dataset:\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/DatasetName\"\n        arn:\n          $ref: \"#/components/schemas/DatasetArn\"\n        actions:\n          $ref: \"#/components/schemas/DatasetActions\"\n        triggers:\n          $ref: \"#/components/schemas/DatasetTriggers\"\n        contentDeliveryRules:\n          $ref: \"#/components/schemas/DatasetContentDeliveryRules\"\n        status:\n          $ref: \"#/components/schemas/DatasetStatus\"\n        creationTime:\n          $ref: \"#/components/schemas/Timestamp\"\n        lastUpdateTime:\n          $ref: \"#/components/schemas/Timestamp\"\n        retentionPeriod:\n          $ref: \"#/components/schemas/RetentionPeriod\"\n        versioningConfiguration:\n          $ref: \"#/components/schemas/VersioningConfiguration\"\n      description: Information about a data set.\n    DatasetActionName:\n      type: string\n      pattern: ^[a-zA-Z0-9_]+$\n      minLength: 1\n      maxLength: 128\n    SqlQueryDatasetAction:\n      type: object\n      required:\n        - sqlQuery\n      properties:\n        sqlQuery:\n          $ref: \"#/components/schemas/SqlQuery\"\n        filters:\n          $ref: \"#/components/schemas/QueryFilters\"\n      description: The SQL query to modify the message.\n    DatasetActionSummary:\n      type: object\n      properties:\n        actionName:\n          $ref: \"#/components/schemas/DatasetActionName\"\n        actionType:\n          $ref: \"#/components/schemas/DatasetActionType\"\n      description: Information about the action which automatically creates the data set's\n        contents.\n    DatasetActionSummaries:\n      type: array\n      items:\n        $ref: \"#/components/schemas/DatasetActionSummary\"\n      minItems: 1\n      maxItems: 1\n    DatasetActionType:\n      type: string\n      enum:\n        - QUERY\n        - CONTAINER\n    IotEventsDestinationConfiguration:\n      type: object\n      required:\n        - inputName\n        - roleArn\n      properties:\n        inputName:\n          $ref: \"#/components/schemas/IotEventsInputName\"\n        roleArn:\n          $ref: \"#/components/schemas/RoleArn\"\n      description: Configuration information for delivery of data set contents to AWS IoT\n        Events.\n    S3DestinationConfiguration:\n      type: object\n      required:\n        - bucket\n        - key\n        - roleArn\n      properties:\n        bucket:\n          $ref: \"#/components/schemas/BucketName\"\n        key:\n          $ref: \"#/components/schemas/BucketKeyExpression\"\n        glueConfiguration:\n          $ref: \"#/components/schemas/GlueConfiguration\"\n        roleArn:\n          $ref: \"#/components/schemas/RoleArn\"\n      description: Configuration information for delivery of data set contents to Amazon S3.\n    DatasetContentDeliveryDestination:\n      type: object\n      properties:\n        iotEventsDestinationConfiguration:\n          $ref: \"#/components/schemas/IotEventsDestinationConfiguration\"\n        s3DestinationConfiguration:\n          $ref: \"#/components/schemas/S3DestinationConfiguration\"\n      description: The destination to which data set contents are delivered.\n    EntryName:\n      type: string\n    DatasetContentState:\n      type: string\n      enum:\n        - CREATING\n        - SUCCEEDED\n        - FAILED\n    Reason:\n      type: string\n    DatasetContentStatus:\n      type: object\n      properties:\n        state:\n          $ref: \"#/components/schemas/DatasetContentState\"\n        reason:\n          $ref: \"#/components/schemas/Reason\"\n      description: The state of the data set contents and the reason they are in this state.\n    DatasetContentSummary:\n      type: object\n      properties:\n        version:\n          $ref: \"#/components/schemas/DatasetContentVersion\"\n        status:\n          $ref: \"#/components/schemas/DatasetContentStatus\"\n        creationTime:\n          $ref: \"#/components/schemas/Timestamp\"\n        scheduleTime:\n          $ref: \"#/components/schemas/Timestamp\"\n      description: Summary information about data set contents.\n    DatasetContentSummaries:\n      type: array\n      items:\n        $ref: \"#/components/schemas/DatasetContentSummary\"\n    DatasetContentVersionValue:\n      type: object\n      required:\n        - datasetName\n      properties:\n        datasetName:\n          $ref: \"#/components/schemas/DatasetName\"\n      description: The data set whose latest contents are used as input to the notebook or\n        application.\n    DatasetEntry:\n      type: object\n      properties:\n        entryName:\n          $ref: \"#/components/schemas/EntryName\"\n        dataURI:\n          $ref: \"#/components/schemas/PresignedURI\"\n      description: The reference to a data set entry.\n    DatasetEntries:\n      type: array\n      items:\n        $ref: \"#/components/schemas/DatasetEntry\"\n    PresignedURI:\n      type: string\n    DatasetSummary:\n      type: object\n      properties:\n        datasetName:\n          $ref: \"#/components/schemas/DatasetName\"\n        status:\n          $ref: \"#/components/schemas/DatasetStatus\"\n        creationTime:\n          $ref: \"#/components/schemas/Timestamp\"\n        lastUpdateTime:\n          $ref: \"#/components/schemas/Timestamp\"\n        triggers:\n          $ref: \"#/components/schemas/DatasetTriggers\"\n        actions:\n          $ref: \"#/components/schemas/DatasetActionSummaries\"\n      description: A summary of information about a data set.\n    DatasetSummaries:\n      type: array\n      items:\n        $ref: \"#/components/schemas/DatasetSummary\"\n    Schedule:\n      type: object\n      properties:\n        expression:\n          $ref: \"#/components/schemas/ScheduleExpression\"\n      description: The schedule for when to trigger an update.\n    TriggeringDataset:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          $ref: \"#/components/schemas/DatasetName\"\n      description: Information about the data set whose content generation triggers the new\n        data set content generation.\n    DatastoreStatus:\n      type: string\n      enum:\n        - CREATING\n        - ACTIVE\n        - DELETING\n    Datastore:\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/DatastoreName\"\n        storage:\n          $ref: \"#/components/schemas/DatastoreStorage\"\n        arn:\n          $ref: \"#/components/schemas/DatastoreArn\"\n        status:\n          $ref: \"#/components/schemas/DatastoreStatus\"\n        retentionPeriod:\n          $ref: \"#/components/schemas/RetentionPeriod\"\n        creationTime:\n          $ref: \"#/components/schemas/Timestamp\"\n        lastUpdateTime:\n          $ref: \"#/components/schemas/Timestamp\"\n      description: Information about a data store.\n    DatastoreStatistics:\n      type: object\n      properties:\n        size:\n          $ref: \"#/components/schemas/EstimatedResourceSize\"\n      description: Statistical information about the data store.\n    ServiceManagedDatastoreS3StorageSummary:\n      type: object\n      properties: {}\n      description: Used to store data store data in an S3 bucket managed by the AWS IoT\n        Analytics service.\n    DatastoreStorageSummary:\n      type: object\n      properties:\n        serviceManagedS3:\n          $ref: \"#/components/schemas/ServiceManagedDatastoreS3StorageSummary\"\n        customerManagedS3:\n          $ref: \"#/components/schemas/CustomerManagedDatastoreS3StorageSummary\"\n      description: Where data store data is stored.\n    DatastoreSummary:\n      type: object\n      properties:\n        datastoreName:\n          $ref: \"#/components/schemas/DatastoreName\"\n        datastoreStorage:\n          $ref: \"#/components/schemas/DatastoreStorageSummary\"\n        status:\n          $ref: \"#/components/schemas/DatastoreStatus\"\n        creationTime:\n          $ref: \"#/components/schemas/Timestamp\"\n        lastUpdateTime:\n          $ref: \"#/components/schemas/Timestamp\"\n      description: A summary of information about a data store.\n    DatastoreSummaries:\n      type: array\n      items:\n        $ref: \"#/components/schemas/DatastoreSummary\"\n    DeleteChannelRequest:\n      type: object\n      properties: {}\n    DeleteDatasetContentRequest:\n      type: object\n      properties: {}\n    DeleteDatasetRequest:\n      type: object\n      properties: {}\n    DeleteDatastoreRequest:\n      type: object\n      properties: {}\n    DeletePipelineRequest:\n      type: object\n      properties: {}\n    OffsetSeconds:\n      type: integer\n    TimeExpression:\n      type: string\n    DeltaTime:\n      type: object\n      required:\n        - offsetSeconds\n        - timeExpression\n      properties:\n        offsetSeconds:\n          $ref: \"#/components/schemas/OffsetSeconds\"\n        timeExpression:\n          $ref: \"#/components/schemas/TimeExpression\"\n      description: Used to limit data to that which has arrived since the last execution of\n        the action.\n    IncludeStatisticsFlag:\n      type: boolean\n    DescribeChannelRequest:\n      type: object\n      properties: {}\n    DescribeDatasetRequest:\n      type: object\n      properties: {}\n    DescribeDatastoreRequest:\n      type: object\n      properties: {}\n    DescribeLoggingOptionsRequest:\n      type: object\n      properties: {}\n    LoggingOptions:\n      type: object\n      required:\n        - roleArn\n        - level\n        - enabled\n      properties:\n        roleArn:\n          $ref: \"#/components/schemas/RoleArn\"\n        level:\n          $ref: \"#/components/schemas/LoggingLevel\"\n        enabled:\n          $ref: \"#/components/schemas/LoggingEnabled\"\n      description: Information about logging options.\n    DescribePipelineRequest:\n      type: object\n      properties: {}\n    Pipeline:\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/PipelineName\"\n        arn:\n          $ref: \"#/components/schemas/PipelineArn\"\n        activities:\n          $ref: \"#/components/schemas/PipelineActivities\"\n        reprocessingSummaries:\n          $ref: \"#/components/schemas/ReprocessingSummaries\"\n        creationTime:\n          $ref: \"#/components/schemas/Timestamp\"\n        lastUpdateTime:\n          $ref: \"#/components/schemas/Timestamp\"\n      description: Contains information about a pipeline.\n    DoubleValue:\n      type: number\n      format: double\n    EndTime:\n      type: string\n      format: date-time\n    SizeInBytes:\n      type: number\n      format: double\n    FilterExpression:\n      type: string\n      minLength: 1\n      maxLength: 256\n    GetDatasetContentRequest:\n      type: object\n      properties: {}\n    GlueTableName:\n      type: string\n      minLength: 1\n      maxLength: 150\n      x-pattern: \"[\\\\u0020-\\\\uD7FF\\\\uE000-\\\\uFFFD\\\\uD800\\\\uDC00-\\\\uDBFF\\\\uDFFF\\\\t]*\"\n    GlueDatabaseName:\n      type: string\n      minLength: 1\n      maxLength: 150\n      x-pattern: \"[\\\\u0020-\\\\uD7FF\\\\uE000-\\\\uFFFD\\\\uD800\\\\uDC00-\\\\uDBFF\\\\uDFFF\\\\t]*\"\n    GlueConfiguration:\n      type: object\n      required:\n        - tableName\n        - databaseName\n      properties:\n        tableName:\n          $ref: \"#/components/schemas/GlueTableName\"\n        databaseName:\n          $ref: \"#/components/schemas/GlueDatabaseName\"\n      description: Configuration information for coordination with the AWS Glue ETL\n        (extract, transform and load) service.\n    IotEventsInputName:\n      type: string\n      pattern: ^[a-zA-Z][a-zA-Z0-9_]*$\n      minLength: 1\n      maxLength: 128\n    LambdaName:\n      type: string\n      pattern: ^[a-zA-Z0-9_-]+$\n      minLength: 1\n      maxLength: 64\n    NextToken:\n      type: string\n    MaxResults:\n      type: integer\n      minimum: 1\n      maximum: 250\n    ListChannelsRequest:\n      type: object\n      properties: {}\n    ListDatasetContentsRequest:\n      type: object\n      properties: {}\n    ListDatasetsRequest:\n      type: object\n      properties: {}\n    ListDatastoresRequest:\n      type: object\n      properties: {}\n    ListPipelinesRequest:\n      type: object\n      properties: {}\n    PipelineSummaries:\n      type: array\n      items:\n        $ref: \"#/components/schemas/PipelineSummary\"\n    ResourceArn:\n      type: string\n      minLength: 20\n      maxLength: 2048\n    ListTagsForResourceRequest:\n      type: object\n      properties: {}\n    LogResult:\n      type: string\n    MathExpression:\n      type: string\n      minLength: 1\n      maxLength: 256\n    MaxMessages:\n      type: integer\n      minimum: 1\n      maximum: 10\n    MessagePayloads:\n      type: array\n      items:\n        $ref: \"#/components/schemas/MessagePayload\"\n      minItems: 1\n      maxItems: 10\n    OutputFileName:\n      type: string\n      pattern: \"[\\\\w\\\\.-]{1,255}\"\n    OutputFileUriValue:\n      type: object\n      required:\n        - fileName\n      properties:\n        fileName:\n          $ref: \"#/components/schemas/OutputFileName\"\n      description: The value of the variable as a structure that specifies an output file\n        URI.\n    ReprocessingSummaries:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ReprocessingSummary\"\n    PipelineSummary:\n      type: object\n      properties:\n        pipelineName:\n          $ref: \"#/components/schemas/PipelineName\"\n        reprocessingSummaries:\n          $ref: \"#/components/schemas/ReprocessingSummaries\"\n        creationTime:\n          $ref: \"#/components/schemas/Timestamp\"\n        lastUpdateTime:\n          $ref: \"#/components/schemas/Timestamp\"\n      description: A summary of information about a pipeline.\n    PutLoggingOptionsRequest:\n      type: object\n      required:\n        - loggingOptions\n      properties:\n        loggingOptions:\n          $ref: \"#/components/schemas/LoggingOptions\"\n    QueryFilter:\n      type: object\n      properties:\n        deltaTime:\n          $ref: \"#/components/schemas/DeltaTime\"\n      description: Information which is used to filter message data, to segregate it\n        according to the time frame in which it arrives.\n    QueryFilters:\n      type: array\n      items:\n        $ref: \"#/components/schemas/QueryFilter\"\n      minItems: 0\n      maxItems: 1\n    ReprocessingStatus:\n      type: string\n      enum:\n        - RUNNING\n        - SUCCEEDED\n        - CANCELLED\n        - FAILED\n    ReprocessingSummary:\n      type: object\n      properties:\n        id:\n          $ref: \"#/components/schemas/ReprocessingId\"\n        status:\n          $ref: \"#/components/schemas/ReprocessingStatus\"\n        creationTime:\n          $ref: \"#/components/schemas/Timestamp\"\n      description: Information about pipeline reprocessing.\n    VolumeSizeInGB:\n      type: integer\n      minimum: 1\n      maximum: 50\n    RunPipelineActivityRequest:\n      type: object\n      required:\n        - pipelineActivity\n        - payloads\n      properties:\n        pipelineActivity:\n          $ref: \"#/components/schemas/PipelineActivity\"\n        payloads:\n          $ref: \"#/components/schemas/MessagePayloads\"\n    StartTime:\n      type: string\n      format: date-time\n    SampleChannelDataRequest:\n      type: object\n      properties: {}\n    ScheduleExpression:\n      type: string\n    SqlQuery:\n      type: string\n    StartPipelineReprocessingRequest:\n      type: object\n      properties:\n        startTime:\n          $ref: \"#/components/schemas/StartTime\"\n        endTime:\n          $ref: \"#/components/schemas/EndTime\"\n    StringValue:\n      type: string\n      minLength: 0\n      maxLength: 1024\n    TagValue:\n      type: string\n      minLength: 1\n      maxLength: 256\n    TagKeyList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/TagKey\"\n      minItems: 1\n      maxItems: 50\n    TagResourceRequest:\n      type: object\n      required:\n        - tags\n      properties:\n        tags:\n          $ref: \"#/components/schemas/TagList\"\n    UntagResourceRequest:\n      type: object\n      properties: {}\n    UpdateChannelRequest:\n      type: object\n      properties:\n        channelStorage:\n          $ref: \"#/components/schemas/ChannelStorage\"\n        retentionPeriod:\n          $ref: \"#/components/schemas/RetentionPeriod\"\n    UpdateDatasetRequest:\n      type: object\n      required:\n        - actions\n      properties:\n        actions:\n          $ref: \"#/components/schemas/DatasetActions\"\n        triggers:\n          $ref: \"#/components/schemas/DatasetTriggers\"\n        contentDeliveryRules:\n          $ref: \"#/components/schemas/DatasetContentDeliveryRules\"\n        retentionPeriod:\n          $ref: \"#/components/schemas/RetentionPeriod\"\n        versioningConfiguration:\n          $ref: \"#/components/schemas/VersioningConfiguration\"\n    UpdateDatastoreRequest:\n      type: object\n      properties:\n        retentionPeriod:\n          $ref: \"#/components/schemas/RetentionPeriod\"\n        datastoreStorage:\n          $ref: \"#/components/schemas/DatastoreStorage\"\n    UpdatePipelineRequest:\n      type: object\n      required:\n        - pipelineActivities\n      properties:\n        pipelineActivities:\n          $ref: \"#/components/schemas/PipelineActivities\"\n    VariableName:\n      type: string\n      minLength: 1\n      maxLength: 256\n    Variable:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          $ref: \"#/components/schemas/VariableName\"\n        stringValue:\n          $ref: \"#/components/schemas/StringValue\"\n        doubleValue:\n          $ref: \"#/components/schemas/DoubleValue\"\n        datasetContentVersionValue:\n          $ref: \"#/components/schemas/DatasetContentVersionValue\"\n        outputFileUriValue:\n          $ref: \"#/components/schemas/OutputFileUriValue\"\n      description: An instance of a variable to be passed to the \"containerAction\"\n        execution. Each variable must have a name and a value given by one of\n        \"stringValue\", \"datasetContentVersionValue\", or \"outputFileUriValue\".\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/amazonaws.com-iotanalytics-2017-11-27-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/amazonaws.com-iotanalytics-2017-11-27-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /tags#resourceArn\u0026tagKeys: delete: operation \"UntagResource\": parse path \"/tags#resourceArn\u0026tagKeys\": path MUST NOT contain a fragment"
}