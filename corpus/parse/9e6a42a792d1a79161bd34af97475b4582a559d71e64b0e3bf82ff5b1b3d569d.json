{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cablelabs/lpwanserver"
		},
		"file": {
			"name": "user.yml",
			"size": 0,
			"path": "docs/openapi/endpoints/user.yml",
			"byteSize": 6561,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.2.1\n  title: An include file to define user endpoints\n  license:\n    name: Apache 2.0\npaths:\n  /api/users:\n    post:\n      operationId: createUser\n      summary: Create a User\n      description: Create a User, available only to system administrators\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - User\n      requestBody:\n        $ref: '#/components/requestBodies/CreateUserInput'\n      responses:\n        '200':\n          description: User created\n          content:\n            application/json:\n              schema:\n                $ref: '../api.yml#/components/schemas/ResourceCreatedResponse'\n        '403':\n          description: Authenticated user not allowed to perform this operation\n        '400':\n          description: Bad request\n    get:\n      operationId: listUsers\n      summary: List Users\n      description: List Users, available only to system administrators\n      parameters:\n        - $ref: '../api.yml#/components/parameters/offsetParam'\n        - $ref: '../api.yml#/components/parameters/limitParam'\n        - name: companyId\n          in: query\n          description: The ID of the Users' company\n          required: false\n          schema:\n            type: string\n        - name: search\n          in: query\n          description: Search for a string within username\n          required: false\n          schema:\n            type: string\n      security:\n        - bearer_token: []\n      tags:\n        - User\n      responses:\n        '200':\n          description: Query response with totalCount and list of records\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListUserResponse'\n        '403':\n          description: Authenticated user not allowed to perform this operation\n        '400':\n          description: Bad request\n  /api/users/{id}:\n    parameters:\n      - $ref: '../api.yml#/components/parameters/idParam'\n    get:\n      operationId: loadUser\n      summary: Get User\n      description: Get User\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - User\n      responses:\n        '200':\n          description: User record\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserResponse'\n        '403':\n          description: Authenticated user not allowed to perform this operation\n        '404':\n          description: User not found\n    put:\n      operationId: updateUser\n      summary: Update User\n      description: Update User, available only to system administrators\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - User\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateUserInput'\n      responses:\n        '204':\n          description: User update succeeded\n        '400':\n          description: Bad request\n        '403':\n          description: Authenticated user not allowed to perform this operation\n        '404':\n          description: User not found\n    delete:\n      operationId: deleteUser\n      summary: Delete User\n      description: Delete User, available only to system administrators\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - User\n      responses:\n        '204':\n          description: User record was deleted\n        '403':\n          description: Authenticated user not allowed to perform this operation\n        '404':\n          description: User not found\n  /api/users/me:\n    get:\n      operationId: loadMyUser\n      summary: Load my user\n      description: Load the record of the session user\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - User\n      responses:\n        '200':\n          description: User record\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserResponse'\n        '404':\n          description: User not found\n  /api/users/verifyEmail/{uuid}:\n    parameters:\n      - name: uuid\n        in: path\n        description: Email verification link ID\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: verifyUserEmail\n      summary: Verify user email\n      description: Endpoint for email verification links\n      parameteters:\n        - name: function\n          in: query\n          description: Accept or reject new email\n          required: true\n          schema:\n            type: string\n            enum:\n              - accept\n              - reject\n      security:\n        - bearer_token: []\n      tags:\n        - User\n      responses:\n        '204':\n          description: Email address was successfully verified or rejected\n        '400':\n          description: Bad request\n        '403':\n          description: Authenticated user not allowed to perform this operation\n        '404':\n          description: Invalid uuid\ncomponents:\n  schemas:\n    User:\n      type: object\n      properties:\n        username:\n          type: string\n        role:\n          type: string\n          enum:\n            - ADMIN\n            - USER\n        email:\n          type: string\n          format: email\n        companyId:\n          type: string\n    UserResponse:\n       allOf:\n        - $ref: '#/components/schemas/User'\n        - type: object\n          properties:\n            id:\n              type: string\n    ListUserResponse:\n      allOf:\n        - $ref: '../api.yml#/components/schemas/ListResponse'\n        - type: object\n          properties:\n            records:\n              type: array\n              items:\n                $ref: '#/components/schemas/UserResponse'\n              default: []\n  requestBodies:\n    CreateUserInput:\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/User'\n              - type: object\n                required:\n                  - username\n                  - password\n                  - role\n                  - companyId\n                properties:\n                  password:\n                    type: string\n      description: User to be created\n      required: true\n    UpdateCompanyInput:\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/User'\n              - type: object\n                properties:\n                  password:\n                    type: string\n      description: User properties to be updated\n      required: true\n"
		}
	},
	"Error": "parse: parse spec: paths: /api/users/me: get: operation \"loadMyUser\": security: unknown security schema \"bearer_token\""
}