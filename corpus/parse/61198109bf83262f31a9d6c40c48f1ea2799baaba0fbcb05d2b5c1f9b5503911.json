{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/datablade-io/daisy"
		},
		"file": {
			"name": "ddl-service.yaml",
			"size": 0,
			"path": "spec/rest-api/ddl-service.yaml",
			"byteSize": 22518,
			"content": "openapi: 3.0.0\n\nservers:\n  - url: http://{host}:{port}/dae/v1/ddl\ninfo:\n  version: \"1.0.0\"\n  title: \"DDL service\"\n  description: 'Rest API for DDL service, including CRUD operation on tables (tabular table, rawstore table) and columns.'\npaths:\n  /tables:\n    post:\n      summary: Create a tabular table\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/tabularTable'\n      parameters:\n        - name: x-daisy-request-id\n          in: header\n          required: false\n          description: the unique id to identify a ddl request\n          schema:\n            type: string\n        - name: x-daisy-query-id\n          in: header\n          required: false\n          description: the unique id to identify a ddl request\n          schema:\n            type: string\n        - name: user\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-user\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: password\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-key\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: quota_key\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-quota\n          in: header\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/generalResp\"\n    get:\n      summary: Get list of tabular tables\n      parameters:\n        - name: x-daisy-request-id\n          in: header\n          required: false\n          description: the unique id to identify a ddl request\n          schema:\n            type: string\n        - name: x-daisy-query-id\n          in: header\n          required: false\n          description: the unique id to identify a ddl request\n          schema:\n            type: string\n        - name: user\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-user\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: password\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-key\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: quota_key\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-quota\n          in: header\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/tabularTableListResp\"\n\n  /tables/{table_name}:\n    patch:\n      summary: Update an existed tabular table named table_name\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/updateTable\"\n      parameters:\n        - name: table_name\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: x-daisy-request-id\n          in: header\n          required: false\n          description: the unique id to identify a ddl request\n          schema:\n            type: string\n        - name: x-daisy-query-id\n          in: header\n          required: false\n          description: the unique id to identify a ddl request\n          schema:\n            type: string\n        - name: user\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-user\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: password\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-key\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: quota_key\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-quota\n          in: header\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/generalResp\"\n    delete:\n      summary: Drop an existed tabular table named table_name\n      parameters:\n        - name: table_name\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: x-daisy-request-id\n          in: header\n          required: false\n          description: the unique id to identify a ddl request\n          schema:\n            type: string\n        - name: x-daisy-query-id\n          in: header\n          required: false\n          description: the unique id to identify a ddl request\n          schema:\n            type: string\n        - name: user\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-user\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: password\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-key\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: quota_key\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-quota\n          in: header\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/generalResp\"\n\n  /rawstores:\n    post:\n      summary: Create a rawstore table\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/rawstoreTable\"\n      parameters:\n        - name: x-daisy-request-id\n          in: header\n          required: false\n          description: the unique id to identify a ddl request\n          schema:\n            type: string\n        - name: x-daisy-query-id\n          in: header\n          required: false\n          description: the unique id to identify a ddl request\n          schema:\n            type: string\n        - name: user\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-user\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: password\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-key\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: quota_key\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-quota\n          in: header\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/generalResp\"\n    get:\n      summary: Get list of rawstore tables\n      parameters:\n        - name: x-daisy-request-id\n          in: header\n          required: false\n          description: the unique id to identify a ddl request\n          schema:\n            type: string\n        - name: x-daisy-query-id\n          in: header\n          required: false\n          description: the unique id to identify a ddl request\n          schema:\n            type: string\n        - name: user\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-user\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: password\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-key\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: quota_key\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-quota\n          in: header\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/rawstoreTableListResp\"\n\n  /rawstores/{table_name}:\n    patch:\n      summary: Update an existed rawstore table named table_name\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/updateTable\"\n      parameters:\n        - name: table_name\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: x-daisy-request-id\n          in: header\n          required: false\n          description: the unique id to identify a ddl request\n          schema:\n            type: string\n        - name: x-daisy-query-id\n          in: header\n          required: false\n          description: the unique id to identify a ddl request\n          schema:\n            type: string\n        - name: user\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-user\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: password\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-key\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: quota_key\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-quota\n          in: header\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/generalResp\"\n    delete:\n      summary: Drop an existed rawstore table named table_name\n      parameters:\n        - name: table_name\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: x-daisy-request-id\n          in: header\n          required: false\n          description: the unique id to identify a ddl request\n          schema:\n            type: string\n        - name: x-daisy-query-id\n          in: header\n          required: false\n          description: the unique id to identify a ddl request\n          schema:\n            type: string\n        - name: user\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-user\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: password\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-key\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: quota_key\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-quota\n          in: header\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/generalResp\"\n\n  /{table_name}/columns:\n    post:\n      summary: Add a column to existed table named table_name\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/column\"\n      parameters:\n        - name: table_name\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: x-daisy-request-id\n          in: header\n          required: false\n          description: the unique id to identify a ddl request\n          schema:\n            type: string\n        - name: x-daisy-query-id\n          in: header\n          required: false\n          description: the unique id to identify a ddl request\n          schema:\n            type: string\n        - name: user\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-user\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: password\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-key\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: quota_key\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-quota\n          in: header\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/generalResp\"\n\n  /{table_name}/columns/{column_name}:\n    patch:\n      summary: Update the column column_name in tabular table table_name\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/updateColumn\"\n      parameters:\n        - name: table_name\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: column_name\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: x-daisy-request-id\n          in: header\n          required: false\n          description: the unique id to identify a ddl request\n          schema:\n            type: string\n        - name: x-daisy-query-id\n          in: header\n          required: false\n          description: the unique id to identify a ddl request\n          schema:\n            type: string\n        - name: user\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-user\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: password\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-key\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: quota_key\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-quota\n          in: header\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/generalResp\"\n    delete:\n      summary: Drop an existed column column_name in tabular table named table_name\n      parameters:\n        - name: table_name\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: column_name\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: x-daisy-request-id\n          in: header\n          required: false\n          description: the unique id to identify a ddl request\n          schema:\n            type: string\n        - name: x-daisy-query-id\n          in: header\n          required: false\n          description: the unique id to identify a ddl request\n          schema:\n            type: string\n        - name: user\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-user\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: password\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-key\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: quota_key\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: x-daisy-quota\n          in: header\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/generalResp\"\n\ncomponents:\n  schemas:\n    tabularTable:\n      type: object\n      required:\n        - \"name\"\n        - \"columns\"\n      properties:\n        name:\n          type: string\n          description: Table name\n        columns:\n          type: array\n          items:\n            $ref: \"#/components/schemas/column\"\n        shards:\n          type: integer\n          default: 1\n          description: Number of shards of the table.\n        replication_factor:\n          type: integer\n          default: 1\n          description: Number of replicas of per shard.\n        _time_column:\n          type: string\n          description: Which column shall be used for internal time partitioning in Daisy. Default is now() if it is not sepcified.\n        order_by_expression:\n          type: string\n          description: The first order by column is specified with order_by_granularity. It will append other expressions if it is specified.\n        order_by_granularity:\n          type: string\n          description: time granularity applied to _time column. It supports month(M), day(D), hour(H) and minute(m)\n          default: \"D\"\n          enum:\n            - \"M\"\n            - \"D\"\n            - \"H\"\n            - \"m\"\n        partition_by_granularity:\n          type: string\n          description: time granularity applied to _time column used in partition_by expression. It supports month(M), day(D), hour(H) and minute(m)\n          default: \"M\"\n          enum:\n            - \"M\"\n            - \"D\"\n            - \"H\"\n            - \"m\"\n        ttl_expression:\n          type: string\n\n    rawstoreTable:\n      type: object\n      required:\n        - \"name\"\n      properties:\n        name:\n          type: string\n          description: Table name\n        shards:\n          type: integer\n          default: 1\n          description: Number of shards of the table.\n        replication_factor:\n          type: integer\n          default: 1\n          description: Number of replicas of per shard.\n        order_by_granularity:\n          type: string\n          description: time granularity applied to _time column. It supports month(M), day(D), hour(H) and minute(m)\n          default: \"D\"\n          enum:\n            - \"M\"\n            - \"D\"\n            - \"H\"\n            - \"m\"\n        partition_by_granularity:\n          type: string\n          description: time granularity applied to _time column used in partition_by expression. It supports month(M), day(D), hour(H) and minute(m)\n          default: \"M\"\n          enum:\n            - \"M\"\n            - \"D\"\n            - \"H\"\n            - \"m\"\n        ttl_expression:\n          type: string\n\n    updateTable:\n      type: \"object\"\n      properties:\n        ttl_expression:\n          type: string\n\n    column:\n      type: object\n      required:\n        - \"name\"\n        - \"type\"\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n        nullable:\n          type: boolean\n        default:\n          type: string\n        compression_codec:\n          type: string\n        ttl_expression:\n          type: string\n        skipping_index_expression:\n          type: string\n\n    updateColumn:\n      type: object\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n        default:\n          type: string\n        comment:\n          type: string\n        ttl_expression:\n          type: string\n        skipping_index_expression:\n          type: string\n\n    generalResp:\n      type: object\n      properties:\n        request_id:\n          type: string\n\n    tabularTableListResp:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: \"#/components/schemas/tabularTableResp\"\n        request_id:\n          type: string\n\n    tabularTableResp:\n      type: object\n      required:\n        - \"name\"\n        - \"engine\"\n        - \"order_by_expression\"\n        - \"partition_by_expression\"\n        - \"columns\"\n      properties:\n        name:\n          type: string\n        engine:\n          type: string\n        order_by_expression:\n          type: string\n        partition_by_expression:\n          type: string\n        ttl:\n          type: string\n        columns:\n          type: array\n          items:\n            $ref: \"#/components/schemas/columnResp\"\n\n    rawstoreTableListResp:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: \"#/components/schemas/rawstoreTableResp\"\n        request_id:\n          type: string\n\n    rawstoreTableResp:\n      type: object\n      required:\n        - \"name\"\n        - \"engine\"\n        - \"order_by_expression\"\n        - \"partition_by_expression\"\n      properties:\n        name:\n          type: string\n        engine:\n          type: string\n        order_by_expression:\n          type: string\n        partition_by_expression:\n          type: string\n        ttl:\n          type: string\n\n    columnResp:\n      type: object\n      required:\n        - \"name\"\n        - \"type\"\n        - \"nullable\"\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n        nullable:\n          type: boolean\n        default:\n          type: string\n        alias:\n          type: string\n        comment:\n          type: string\n        codec:\n          type: string\n        ttl:\n          type: string\n",
			"canonicalURL": "/github.com/datablade-io/daisy@b5c9b7b1cc496c1fd45cb5678c273b089d899c63/-/blob/spec/rest-api/ddl-service.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/datablade-io/daisy/blob/b5c9b7b1cc496c1fd45cb5678c273b089d899c63/spec/rest-api/ddl-service.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse servers: at spec/rest-api/ddl-service.yaml:4:10: path parameter not specified: \"host\""
}