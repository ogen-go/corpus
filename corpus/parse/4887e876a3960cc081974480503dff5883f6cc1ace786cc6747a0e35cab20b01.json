{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/plantbreeding/BrAPI"
		},
		"file": {
			"name": "Ontologies_OntologyDbId_GET_PUT.yaml",
			"size": 0,
			"path": "Specification/BrAPI-Phenotyping/Ontologies/Ontologies_OntologyDbId_GET_PUT.yaml",
			"byteSize": 2910,
			"content": "info:\n  title: BrAPI\n  version: ''\nopenapi: 3.0.0\npaths:\n  /ontologies/{ontologyDbId}:\n    get:\n      summary: Get a specific Ontology record by its ontologyDbId\n      description: |-\n        Use this endpoint to retrieve a specific Ontology record by its ontologyDbId. \n        Each Ontology record describes the metadata of an existing ontology, it does not include all the terms that are part of that ontology.\n      parameters:\n      - description: |-\n          The unique identifier for an ontology definition. Use this parameter to filter results based on a specific ontology \n\n          Use `GET /ontologies` to find the list of available ontologies on a server.\n        in: path\n        name: ontologyDbId\n        required: true\n        schema:\n          type: string\n      - $ref: '#/components/parameters/authorizationHeader'\n      responses:\n        '200':\n          $ref: '#/components/responses/OntologySingleResponse'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n      tags:\n      - Ontologies\n    put:\n      summary: Update a specific Ontology record\n      description: |-\n        Use this endpoint to update a specific Ontology record. \n        Each Ontology record describes the metadata of an existing ontology, it does not include all the terms that are part of that ontology.\n      parameters:\n      - description: |-\n          The unique identifier for an ontology definition. Use this parameter to filter results based on a specific ontology \n\n          Use `GET /ontologies` to find the list of available ontologies on a server.\n        in: path\n        name: ontologyDbId\n        required: true\n        schema:\n          type: string\n      - $ref: '#/components/parameters/authorizationHeader'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OntologyNewRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/OntologySingleResponse'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n      tags:\n      - Ontologies\ncomponents:\n  responses:\n    OntologySingleResponse:\n      content:\n        application/json:\n          schema:\n            title: OntologySingleResponse\n            type: object\n            properties:\n              '@context':\n                $ref: '#/components/schemas/Context'\n              metadata:\n                $ref: '#/components/schemas/metadata'\n              result:\n                $ref: '#/components/schemas/Ontology'\n            required:\n            - metadata\n            - result\n      description: OK\n      headers: {}\n",
			"canonicalURL": "/github.com/plantbreeding/BrAPI@99a2ff6e980fc6b34c5675fe27b7608d0bbf2d4e/-/blob/Specification/BrAPI-Phenotyping/Ontologies/Ontologies_OntologyDbId_GET_PUT.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/plantbreeding/BrAPI/blob/99a2ff6e980fc6b34c5675fe27b7608d0bbf2d4e/Specification/BrAPI-Phenotyping/Ontologies/Ontologies_OntologyDbId_GET_PUT.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: responses: \"OntologySingleResponse\": content: application/json: schema: parse schema: property \"@context\": at Specification/BrAPI-Phenotyping/Ontologies/Ontologies_OntologyDbId_GET_PUT.yaml:76:23: $ref: resolve \"#/components/schemas/Context\": resolve: can't find value for \"components/schemas/Context\""
}