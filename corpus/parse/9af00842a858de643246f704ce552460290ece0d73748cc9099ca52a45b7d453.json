{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/FacturAPI/facturapi-docs"
		},
		"file": {
			"name": "openapi_v1.yaml",
			"size": 0,
			"path": "website/openapi_v1.yaml",
			"byteSize": 258994,
			"content": "openapi: \"3.0.1\"\nservers:\n  - url: https://www.facturapi.io/v1\ninfo:\n  title: Facturapi\n  version: \"1.0\"\n  contact:\n    name: Facturapi\n    url: https://www.facturapi.io\n    email: \"soporte@facturapi.io\"\n  x-logo:\n    url: https://www.facturapi.io/img/logo.svg\n    altText: Facturapi\n  description: |\n    # Aviso sobre /v1\n    La versión 1 de la API (`/v1`) **no** debe usarse para nuevos proyectos.\n    En su lugar utiliza la [versión 2](/api), que te permite emitir CFDI v4.0.\n\n    La versión 1 de la API dejará de estar disponible cuando el SAT\n    termine la vigencia del CFDI 3.3.\n\ntags:\n  - name: tools\n    x-displayName: Herramientas\n  - name: customer\n    x-displayName: Clientes\n  - name: product\n    x-displayName: Productos\n  - name: invoice\n    x-displayName: Facturas\n  - name: receipt\n    x-displayName: Recibos\n  - name: retention\n    x-displayName: Retenciones\n  - name: organization\n    x-displayName: Organizaciones\n  - name: sat_keys\n    x-displayName: Claves de catálogos\n    description: |\n      Principales catálogos del SAT, incluídos aquí por conveniencia. Puedes consultar estos y más catálogos desde el portal oficial del SAT: http://omawww.sat.gob.mx/tramitesyservicios/Paginas/anexo_20_version3-3.htm\n\n      ### Forma de pago\n\n      Código | Descripción\n      :-----:| -----------\n      \"01\" | Efectivo\n      \"02\" | Cheque nominativo\n      \"03\" | Transferencia electrónica de fondos\n      \"04\" | Tarjeta de crédito\n      \"05\" | Monedero electrónico\n      \"06\" | Dinero electrónico\n      \"08\" | Vales de despensa\n      \"12\" | Dación en pago\n      \"13\" | Pago por subrogación\n      \"14\" | Pago por consignación\n      \"15\" | Condonación\n      \"17\" | Compensación\n      \"23\" | Novación\n      \"24\" | Confusión\n      \"25\" | Remisión de deuda\n      \"26\" | Prescripción o caducidad\n      \"27\" | A satisfacción del acreedor\n      \"28\" | Tarjeta de débito\n      \"29\" | Tarjeta de servicios\n      \"30\" | Aplicación de anticipos\n      \"31\" | Intermediario pagos\n      \"99\" | Por definir\n\n      ### Método de pago\n\n      Código | Descripción\n      :-----:| -----------\n      \"PUE\" | Pago en una sola exhibición (de contado).\n      \"PPD\" | Pago en parcialidades o diferido (total o parcialmente a crédito). Requiere expedir un comprobante de pago cuando se reciba un pago subsecuente.\n\n      ### Uso CFDI\n\n      Código | Descripción\n      :-----:| -----------\n      \"G01\" |\tAdquisición de mercancias.\n      \"G02\" |\tDevoluciones, descuentos o bonificaciones.\n      \"G03\" |\tGastos en general.\n      \"I01\" |\tConstrucciones.\n      \"I02\" |\tMobilario y equipo de oficina por inversiones.\n      \"I03\" |\tEquipo de transporte.\n      \"I04\" |\tEquipo de computo y accesorios.\n      \"I05\" |\tDados, troqueles, moldes, matrices y herramental.\n      \"I06\" |\tComunicaciones telefónicas.\n      \"I07\" |\tComunicaciones satelitales.\n      \"I08\" |\tOtra maquinaria y equipo.\n      \"D01\" |\tHonorarios médicos, dentales y gastos hospitalarios.\n      \"D02\" |\tGastos médicos por incapacidad o discapacidad.\n      \"D03\" |\tGastos funerales.\n      \"D04\" |\tDonativos.\n      \"D05\" |\tIntereses reales efectivamente pagados por créditos hipotecarios (casa habitación).\n      \"D06\" |\tAportaciones voluntarias al SAR.\n      \"D07\" |\tPrimas por seguros de gastos médicos.\n      \"D08\" |\tGastos de transportación escolar obligatoria.\n      \"D09\" |\tDepósitos en cuentas para el ahorro, primas que tengan como base planes de pensiones.\n      \"D10\" |\tPagos por servicios educativos (colegiaturas).\n      \"P01\" |\tPor definir.\n\n      ### Relación entre facturas\n\n      Código | Descripción\n      :-----:| -----------\n      \"01\" | Nota de crédito de los documentos relacionados\n      \"02\" | Nota de débito de los documentos relacionados\n      \"03\" | Devolución de mercancía sobre facturas o traslados previos\n      \"04\" | Sustitución de los CFDI previos\n      \"05\" | Traslados de mercancias facturados previamente\n      \"06\" | Factura generada por los traslados previos\n      \"07\" | CFDI por aplicación de anticipo\n      \"08\" | Factura generada por pagos en parcialidades\n      \"09\" | Factura generada por pagos diferidos\n\n      ### Régimen Fiscal\n\n      Código | Descripción\n      :-----:| -----------\n      \"601\" |\tGeneral de Ley Personas Morales\n      \"603\" |\tPersonas Morales con Fines no Lucrativos\n      \"605\" |\tSueldos y Salarios e Ingresos Asimilados a Salarios\n      \"606\" |\tArrendamiento\n      \"608\" |\tDemás ingresos\n      \"609\" |\tConsolidación\n      \"610\" |\tResidentes en el Extranjero sin Establecimiento Permanente en México\n      \"611\" |\tIngresos por Dividendos (socios y accionistas)\n      \"612\" |\tPersonas Físicas con Actividades Empresariales y Profesionales\n      \"614\" |\tIngresos por intereses\n      \"616\" |\tSin obligaciones fiscales\n      \"620\" |\tSociedades Cooperativas de Producción que optan por diferir sus ingresos\n      \"621\" |\tIncorporación Fiscal\n      \"622\" |\tActividades Agrícolas, Ganaderas, Silvícolas y Pesqueras\n      \"623\" |\tOpcional para Grupos de Sociedades\n      \"624\" |\tCoordinados\n      \"628\" |\tHidrocarburos\n      \"607\" |\tRégimen de Enajenación o Adquisición de Bienes\n      \"629\" |\tDe los Regímenes Fiscales Preferentes y de las Empresas Multinacionales\n      \"630\" |\tEnajenación de acciones en bolsa de valores\n      \"615\" |\tRégimen de los ingresos por obtención de premios\n      \"625\" |\tRégimen de las Actividades Empresariales con ingresos a través de Plataformas Tecnológicas\n      \"626\" | Régimen Simplificado de Confianza\n\n      ### Tipo de Contrato\n\n      Código | Descripción\n      :-----:| -----------\n      \"01\" | Contrato de trabajo por tiempo indeterminado\n      \"02\" | Contrato de trabajo para obra determinada\n      \"03\" | Contrato de trabajo por tiempo determinado\n      \"04\" | Contrato de trabajo por temporada\n      \"05\" | Contrato de trabajo sujeto a prueba\n      \"06\" | Contrato de trabajo con capacitación inicial\n      \"07\" | Modalidad de contratación por pago de hora laborada\n      \"08\" | Modalidad de trabajo por comisión laboral\n      \"09\" | Modalidades de contratación donde no existe relación de trabajo\n      \"10\" | Jubilación, pensión, retiro.\n      \"99\" | Otro contrato\n\n      ### Tipo de Jornada\n\n      Código | Descripción\n      :-----:| -----------\n      \"01\" | Diurna\n      \"02\" | Nocturna\n      \"03\" | Mixta\n      \"04\" | Por hora\n      \"05\" | Reducida\n      \"06\" | Continuada\n      \"07\" | Partida\n      \"08\" | Por turnos\n      \"99\" | Otra Jornada\n\n      ### Tipo de Régimen\n\n      Código | Descripción\n      :-----:| -----------\n      \"02\" | Sueldos (Incluye ingresos señalados en la fracción I del artículo 94 de LISR)\n      \"03\" | Jubilados\n      \"04\" | Pensionados\n      \"05\" | Asimilados Miembros Sociedades Cooperativas Produccion\n      \"06\" | Asimilados Integrantes Sociedades Asociaciones Civiles\n      \"07\" | Asimilados Miembros consejos\n      \"08\" | Asimilados comisionistas\n      \"09\" | Asimilados Honorarios\n      \"10\" | Asimilados acciones\n      \"11\" | Asimilados otros\n      \"12\" | Jubilados o Pensionados\n      \"13\" | Indemnización o Separación\n      \"99\" | Otro Regimen\n\n      ### Riesgo del Puesto\n\n      Código | Descripción\n      :-----:| -----------\n      \"1\" | Clase I\n      \"2\" | Clase II\n      \"3\" | Clase III\n      \"4\" | Clase IV\n      \"5\" | Clase V\n      \"99\" | No aplica\n\n      ### Periodicidad del Pago\n\n      Código | Descripción\n      :-----:| -----------\n      \"01\" | Diario\n      \"02\" | Semanal\n      \"03\" | Catorcenal\n      \"04\" | Quincenal\n      \"05\" | Mensual\n      \"06\" | Bimestral\n      \"07\" | Unidad obra\n      \"08\" | Comisión\n      \"09\" | Precio alzado\n      \"10\" | Decenal\n      \"99\" | Otra Periodicidad\n\n      ### Tipo de Percepción\n\n      Código | Descripción\n      :-----:| -----------\n      \"001\" | Sueldos, Salarios  Rayas y Jornales\n      \"002\" | Gratificación Anual (Aguinaldo)\n      \"003\" | Participación de los Trabajadores en las Utilidades PTU\n      \"004\" | Reembolso de Gastos Médicos Dentales y Hospitalarios\n      \"005\" | Fondo de Ahorro\n      \"006\" | Caja de ahorro\n      \"009\" | Contribuciones a Cargo del Trabajador Pagadas por el Patrón\n      \"010\" | Premios por puntualidad\n      \"011\" | Prima de Seguro de vida\n      \"012\" | Seguro de Gastos Médicos Mayores\n      \"013\" | Cuotas Sindicales Pagadas por el Patrón\n      \"014\" | Subsidios por incapacidad\n      \"015\" | Becas para trabajadores y/o hijos\n      \"019\" | Horas extra\n      \"020\" | Prima dominical\n      \"021\" | Prima vacacional\n      \"022\" | Prima por antigüedad\n      \"023\" | Pagos por separación\n      \"024\" | Seguro de retiro\n      \"025\" | Indemnizaciones\n      \"026\" | Reembolso por funeral\n      \"027\" | Cuotas de seguridad social pagadas por el patrón\n      \"028\" | Comisiones\n      \"029\" | Vales de despensa\n      \"030\" | Vales de restaurante\n      \"031\" | Vales de gasolina\n      \"032\" | Vales de ropa\n      \"033\" | Ayuda para renta\n      \"034\" | Ayuda para artículos escolares\n      \"035\" | Ayuda para anteojos\n      \"036\" | Ayuda para transporte\n      \"037\" | Ayuda para gastos de funeral\n      \"038\" | Otros ingresos por salarios\n      \"039\" | Jubilaciones, pensiones o haberes de retiro\n      \"044\" | Jubilaciones, pensiones o haberes de retiro en parcialidades\n      \"045\" | Ingresos en acciones o títulos valor que representan bienes\n      \"046\" | Ingresos asimilados a salarios\n      \"047\" | Alimentación diferentes a los establecidos en el Art 94 último párrafo LISR\n      \"048\" | Habitación\n      \"049\" | Premios por asistencia\n      \"050\" | Viáticos\n      \"051\" | Pagos por gratificaciones, primas, compensaciones, recompensas u otros en parcialidades\n      \"052\" | Pagos por jubilación en parcialidades derivados de una resolución judicial\n      \"053\" | Pagos por jubilación en una sola exhibición derivados de la ejecución de una resolución judicial\n\n      ### Tipo de Horas\n\n      Código | Descripción\n      :-----:| -----------\n      \"01\" | Dobles\n      \"02\" | Triples\n      \"03\" | Simples\n\n      ### Tipo de Deducción\n\n      Código | Descripción\n      :-----:| -----------\n      \"001\" | Seguridad social\n      \"002\" | ISR\n      \"003\" | Aportaciones a retiro, cesantía en edad avanzada y vejez.\n      \"004\" | Otros\n      \"005\" | Aportaciones a Fondo de vivienda\n      \"006\" | Descuento por incapacidad\n      \"007\" | Pensión alimenticia\n      \"008\" | Renta\n      \"009\" | Préstamos provenientes del Fondo Nacional de la Vivienda para los Trabajadores\n      \"010\" | Pago por crédito de vivienda\n      \"011\" | Pago de abonos INFONACOT\n      \"012\" | Anticipo de salarios\n      \"013\" | Pagos hechos con exceso al trabajador\n      \"014\" | Errores\n      \"015\" | Pérdidas\n      \"016\" | Averías\n      \"017\" | Adquisición de artículos producidos por la empresa o establecimiento\n      \"018\" | Cuotas para la constitución y fomento de sociedades cooperativas y de cajas de ahorro\n      \"019\" | Cuotas sindicales\n      \"020\" | Ausencia (Ausentismo)\n      \"021\" | Cuotas obrero patronales\n      \"022\" | Impuestos Locales\n      \"023\" | Aportaciones voluntarias\n      \"024\" | Ajuste en Gratificación Anual (Aguinaldo) Exento\n      \"025\" | Ajuste en Gratificación Anual (Aguinaldo) Gravado\n      \"026\" | Ajuste en Participación de los Trabajadores en las Utilidades PTU Exento\n      \"027\" | Ajuste en Participación de los Trabajadores en las Utilidades PTU Gravado\n      \"028\" | Ajuste en Reembolso de Gastos Médicos Dentales y Hospitalarios Exento\n      \"029\" | Ajuste en Fondo de ahorro Exento\n      \"030\" | Ajuste en Caja de ahorro Exento\n      \"031\" | Ajuste en Contribuciones a Cargo del Trabajador Pagadas por el Patrón Exento\n      \"032\" | Ajuste en Premios por puntualidad Gravado\n      \"033\" | Ajuste en Prima de Seguro de vida Exento\n      \"034\" | Ajuste en Seguro de Gastos Médicos Mayores Exento\n      \"035\" | Ajuste en Cuotas Sindicales Pagadas por el Patrón Exento\n      \"036\" | Ajuste en Subsidios por incapacidad Exento\n      \"037\" | Ajuste en Becas para trabajadores y/o hijos Exento\n      \"038\" | Ajuste en Horas extra Exento\n      \"039\" | Ajuste en Horas extra Gravado\n      \"040\" | Ajuste en Prima dominical Exento\n      \"041\" | Ajuste en Prima dominical Gravado\n      \"042\" | Ajuste en Prima vacacional Exento\n      \"043\" | Ajuste en Prima vacacional Gravado\n      \"044\" | Ajuste en Prima por antigüedad Exento\n      \"045\" | Ajuste en Prima por antigüedad Gravado\n      \"046\" | Ajuste en Pagos por separación Exento\n      \"047\" | Ajuste en Pagos por separación Gravado\n      \"048\" | Ajuste en Seguro de retiro Exento\n      \"049\" | Ajuste en Indemnizaciones Exento\n      \"050\" | Ajuste en Indemnizaciones Gravado\n      \"051\" | Ajuste en Reembolso por funeral Exento\n      \"052\" | Ajuste en Cuotas de seguridad social pagadas por el patrón Exento\n      \"053\" | Ajuste en Comisiones Gravado\n      \"054\" | Ajuste en Vales de despensa Exento\n      \"055\" | Ajuste en Vales de restaurante Exento\n      \"056\" | Ajuste en Vales de gasolina Exento\n      \"057\" | Ajuste en Vales de ropa Exento\n      \"058\" | Ajuste en Ayuda para renta Exento\n      \"059\" | Ajuste en Ayuda para artículos escolares Exento\n      \"060\" | Ajuste en Ayuda para anteojos Exento\n      \"061\" | Ajuste en Ayuda para transporte Exento\n      \"062\" | Ajuste en Ayuda para gastos de funeral Exento\n      \"063\" | Ajuste en Otros ingresos por salarios Exento\n      \"064\" | Ajuste en Otros ingresos por salarios Gravado\n      \"065\" | Ajuste en Jubilaciones, pensiones o haberes de retiro en una sola exhibición Exento\n      \"066\" | Ajuste en Jubilaciones, pensiones o haberes de retiro en una sola exhibición Gravado\n      \"067\" | Ajuste en Pagos por separación Acumulable\n      \"068\" | Ajuste en Pagos por separación No acumulable\n      \"069\" | Ajuste en Jubilaciones, pensiones o haberes de retiro en parcialidades Exento\n      \"070\" | Ajuste en Jubilaciones, pensiones o haberes de retiro en parcialidades Gravado\n      \"071\" | Ajuste en Subsidio para el empleo (efectivamente entregado al trabajador)\n      \"072\" | Ajuste en Ingresos en acciones o títulos valor que representan bienes Exento\n      \"073\" | Ajuste en Ingresos en acciones o títulos valor que representan bienes Gravado\n      \"074\" | Ajuste en Alimentación Exento\n      \"075\" | Ajuste en Alimentación Gravado\n      \"076\" | Ajuste en Habitación Exento\n      \"077\" | Ajuste en Habitación Gravado\n      \"078\" | Ajuste en Premios por asistencia\n      \"079\" | Ajuste en Pagos distintos a los listados\n      \"080\" | Ajuste en Viáticos gravados\n      \"081\" | Ajuste en Viáticos (entregados al trabajador)\n      \"082\" | Ajuste en Fondo de ahorro Gravado\n      \"083\" | Ajuste en Caja de ahorro Gravado\n      \"084\" | Ajuste en Prima de Seguro de vida Gravado\n      \"085\" | Ajuste en Seguro de Gastos Médicos Mayores Gravado\n      \"086\" | Ajuste en Subsidios por incapacidad Gravado\n      \"087\" | Ajuste en Becas para trabajadores y/o hijos Gravado\n      \"088\" | Ajuste en Seguro de retiro Gravado\n      \"089\" | Ajuste en Vales de despensa Gravado\n      \"090\" | Ajuste en Vales de restaurante Gravado\n      \"091\" | Ajuste en Vales de gasolina Gravado\n      \"092\" | Ajuste en Vales de ropa Gravado\n      \"093\" | Ajuste en Ayuda para renta Gravado\n      \"094\" | Ajuste en Ayuda para artículos escolares Gravado\n      \"095\" | Ajuste en Ayuda para anteojos Gravado\n      \"096\" | Ajuste en Ayuda para transporte Gravado\n      \"097\" | Ajuste en Ayuda para gastos de funeral Gravado\n      \"098\" | Ajuste a ingresos asimilados a salarios gravados\n      \"099\" | Ajuste a ingresos por sueldos y salarios gravados\n      \"100\" | Ajuste en Viáticos exentos\n      \"101\" | ISR Retenido de ejercicio anterior\n      \"102\" | Ajuste a pagos por gratificaciones, primas, compensaciones, recompensas u otros\n      \"103\" | Ajuste a pagos en parcialidades derivados de una resolución judicial gravados\n      \"104\" | Ajuste a pagos en parcialidades derivados de una resolución judicial exentos\n      \"105\" | Ajuste a pagos en una sola exhibición derivados de una resolución judicial gravados\n      \"106\" | Ajuste a pagos en una sola exhibición derivados de una resolución judicial exentos\n      \"107\" | Ajuste al Subsidio Causado\n\n      ### Tipo de Otro Pago\n\n      Código | Descripción\n      :-----:| -----------\n      \"001\" | Reintegro de ISR pagado en exceso.\n      \"002\" | Subsidio para el empleo (efectivamente entregado al trabajador).\n      \"003\" | Viáticos (entregados al trabajador).\n      \"004\" | Aplicación de saldo a favor por compensación anual.\n      \"005\" | Reintegro de ISR retenido en exceso de ejercicio anterior\n      \"006\" | Alimentos en bienes (Servicios de comedor y comida).\n      \"007\" | ISR ajustado por subsidio.\n      \"008\" | Subsidio efectivamente entregado que no correspondía.\n      \"009\" | Reembolso de descuentos efectuados para el crédito de vivienda.\n      \"999\" | Pagos distintos a los listados.\n\n      ### Tipo de Incapacidad\n\n      Código | Descripción\n      :-----:| -----------\n      \"01\" | Riesgo de trabajo.\n      \"02\" | Enfermedad en general.\n      \"03\" | Maternidad.\n      \"04\" | Licencia por cuidados médicos de hijos diagnosticados con cáncer.\n\n      ### Clave de retención\n\n      Código | Descripción\n      :-----:| -----------\n      \"01\" | Servicios profesionales.\n      \"02\" | Regalías por derechos de autor.\n      \"03\" | Autotransporte terrestre de carga.\n      \"04\" | Servicios prestados por comisionistas.\n      \"05\" | Arrendamiento.\n      \"06\" | Enajenación de acciones.\n      \"07\" | Enajenación de bienes objeto de la LIEPS, a través de mediadores, agentes, representantes, corredores, consignatarios o distribuidores.\n      \"08\" | Enajenación de bienes inmuebles consignada en escritura pública.\n      \"09\" | Enajenación de otros bienes, no consignada en escritura pública.\n      \"10\" | Adquisición de desperdicios industriales.\n      \"11\" | Adquisición de bienes consignada en escritura pública.\n      \"12\" | Adquisición de otros bienes, no consignada en escritura pública.\n      \"13\" | Otros retiros de AFORE.\n      \"14\" | Dividendos o utilidades distribuidas.\n      \"15\" | Remanente distribuible.\n      \"16\" | Intereses.\n      \"17\" | Arrendamiento en fideicomiso.\n      \"18\" | Pagos realizados a favor de residentes en el extranjero.\n      \"19\" | Enajenación de acciones u operaciones en bolsa de valores.\n      \"20\" | Obtención de premios.\n      \"21\" | Fideicomisos que no realizan actividades empresariales.\n      \"22\" | Planes personales de retiro.\n      \"23\" | Intereses reales deducibles por créditos hipotecarios.\n      \"24\" | Operaciones Financieras Derivadas de Capital.\n      \"25\" | Otro tipo de retenciones.\n      \"26\" | Servicios mediante Plataformas Tecnológicas\n\n      ### Validez de obligaciones\n\n      | Validez | IVA Exento | Tasa 0% | Tasa 8% Fronteriza Norte | Tasa 8% Fronteriza Sur | Tasa 16%\n      |:-------:|:----------:|:-------:|:------------------------:|:----------------------:|:--------\n      | \"0\" \u003ctd colspan=\"5\"\u003eEl contribuyente no está autorizado para emitir facturas\u003c/td\u003e\n      | \"1\" | Sí | Sí | No | No | Sí\n      | \"2\" | Sí | Sí | Sí | No | Sí\n      | \"3\" | Sí | Sí | No | Sí | Sí\n      | \"4\" | Sí | Sí | Sí | Sí | Sí\n\n      #### Situación del contribuyente\n\n      | Valor | Explicación\n      |:-----:|:-----------\n      | \"Previsto\" | Vía buzón tributario o notificaciones por estrados, el contribuyente recibe un oficio en el que se establece su situación y se le solicita que demuestre la materialidad de las operaciones facturadas.\n      | \"Presunto\" | El contribuyente notificado se considera presunto cuando, en su página web, la autoridad emite sus datos dentro de la relación de los EFOS, es decir, en las listas negras del SAT.\n      | \"Desvirtuado\" | En este caso, el contribuyente acusado de operaciones inexistentes ya aportó a la autoridad la documentación e información pertinente para desvirtuar los hechos que llevaron a notificarlo.\n      | \"Definitivo\" | En este caso, el EFO no atendió el llamado de la autoridad en el plazo de 15 días, a partir de la última notificación; o bien, no pudo desvirtuar los hechos imputados.\n      | \"Sentencia favorable\" | Los contribuyentes EFOS “definitivos” que se inconforman e interponen algún medio de defensa, el cual concluye a su favor, son clasificados en la lista de “sentencia favorable”.\n      | \"EFOS de información suprimida\" | En esta categoría, se encuentran los EFOS “presuntos” y “definitivos” que presentaron algún medio de defensa (amparo, juicio de nulidad) y, por lo tanto, un juez ordenó suprimir sus datos de la lista, sin ser eliminados.\n\n  - name: customer_model\n    x-displayName: Objeto Customer\n    description: |\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Customer\" /\u003e\n  - name: product_model\n    x-displayName: Objeto Product\n    description: |\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Product\" /\u003e\n  - name: invoice_model\n    x-displayName: Objeto Invoice\n    description: |\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Invoice\" /\u003e\n  - name: receipt_model\n    x-displayName: Objeto Receipt\n    description: |\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Receipt\" /\u003e\n  - name: retention_model\n    x-displayName: Objeto Retention\n    description: |\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Retention\" /\u003e\n  - name: organization_model\n    x-displayName: Objeto Organización\n    description: |\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Organization\" /\u003e\n\nx-tagGroups:\n  - name: Recursos\n    tags:\n      - customer\n      - product\n      - invoice\n      - receipt\n      - retention\n      - organization\n  - name: Herramientas\n    tags:\n      - tools\n      - sat_keys\n  - name: Modelos\n    tags:\n      - customer_model\n      - product_model\n      - invoice_model\n      - receipt_model\n      - retention_model\n      - organization_model\n\npaths:\n  /customers:\n    post:\n      operationId: createCustomer\n      tags:\n        - customer\n      summary: Crear cliente\n      description: |\n        Registra un nuevo cliente en Facturapi.\n\n        Puedes usar el ID de un cliente para crear facturas sin tener que enviar todos los datos fiscales cada vez.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/customers \\\n              -H \"Authorization: Bearer sk_test_API_KEY\" \\\n              -H \"Content-Type: application/json\" \\\n              -d '{\n                    \"legal_name\": \"Dunder Mifflin S.A. de C.V.\",\n                    \"email\": \"email@example.com\",\n                    \"tax_id\": \"ABC101010111\"\n                  }'\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n            const customer = await facturapi.customers.create({\n              legal_name: 'Dunder Mifflin S.A. de C.V.',\n              email: 'email@example.com',\n              tax_id: 'ABC101010111'\n            });\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_test_API_KEY\");\n            var customer = await facturapi.Customer.CreateAsync(new Dictionary\u003cstring, object\u003e\n            {\n              [\"legal_name\"] = \"Dunder Mifflin S.A. de C.V.\",\n              [\"email\"] = \"email@example.com\",\n              [\"tax_id\"] = \"ABC101010111\"\n            });\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_test_API_KEY\" );\n            $customer = $facturapi-\u003eCustomers-\u003ecreate([\n              \"email\" =\u003e \"email@example.com\",\n              \"legal_name\" =\u003e \"Dunder Mifflin S.A. de C.V.\",\n              \"tax_id\" =\u003e \"ABC101010111\"\n            ]);\n      requestBody:\n        $ref: \"#/components/requestBodies/CustomerCreate\"\n      security:\n        - \"Secret Live Key\": []\n        - \"Secret Test Key\": []\n      responses:\n        \"201\":\n          description: Nuevo objeto `Customer` creado\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Customer\"\n        \"200\":\n          description: Un objeto `Customer` con la misma información ya existía\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Customer\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n    get:\n      operationId: listCustomers\n      tags:\n        - customer\n      summary: Listar clientes\n      description: Regresa una lista paginada de todos los clientes de una organización o realiza una búsqueda de acuerdo a parámetros\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/customers \\\n              -H \"Authorization: Bearer sk_test_API_KEY\"\n              -G\n              -d 'q=Dunder'\n              -d 'date[gt]=2021-07-14T06:00:00.000Z'\n              -d 'date[lt]=2021-08-14T06:00:00.000Z'\n              -d 'page=1'\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n            const searchResult = await facturapi.customers.list({\n              q: 'Dunder',\n              date: {\n                gt: new Date('2021-07-14T06:00:00.000Z'),\n                lt: new Date('2021-08-14T06:00:00.000Z')\n              },\n              page: 1\n            });\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_test_API_KEY\");\n            var searchResult = await facturapi.Customer.ListAsync(new Dictionary\u003cstring, object\u003e\n            {\n              [\"q\"] = \"Dunder\",\n              [\"date\"] = new Dictionary\u003cstring, object\u003e\n                {\n                  [\"gt\"] = new DateTime(\"2021-07-14T06:00:00.000Z\"),\n                  [\"lt\"] = new DateTime(\"2021-08-14T06:00:00.000Z\")\n                },\n              [\"page\"] = 1\n            });\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_test_API_KEY\" );\n            $searchResult = $facturapi-\u003eCustomers-\u003eall([\n              \"q\" =\u003e \"Dunder\",\n              \"date\" =\u003e [\n                \"gt\" =\u003e new DateTime(\"2021-07-14T06:00:00.000Z\"),\n                \"lt\" =\u003e new DateTime(\"2021-08-14T06:00:00.000Z\")\n              ],\n              \"page\" =\u003e 1\n            ]);\n      parameters:\n        - in: query\n          name: q\n          schema:\n            type: string\n          description: Consulta. Texto a buscar en `legal_name` (nombre fiscal) o en `tax_id` (RFC).\n        - $ref: \"#/components/parameters/SearchDate\"\n        - $ref: \"#/components/parameters/SearchPage\"\n        - $ref: \"#/components/parameters/SearchLimit\"\n      security:\n        - \"Secret Live Key\": []\n        - \"Secret Test Key\": []\n      responses:\n        \"200\":\n          description: Resultado de la búsqueda\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CustomerSearchResult\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n  /customers/{customer_id}:\n    get:\n      operationId: getCustomer\n      tags:\n        - customer\n      summary: Obtener cliente por ID\n      description: Regresa el objeto 'Customer' relacionado al `id` especificado.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/customers/590ce6c56d04f840aa8438af \\\n              -H \"Authorization: Bearer sk_test_API_KEY\"\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n            const customer = await facturapi.customers.retrieve('590ce6c56d04f840aa8438af');\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_test_API_KEY\");\n            var customer = await facturapi.Customer.RetrieveAsync(\"590ce6c56d04f840aa8438af\");\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_test_API_KEY\" );\n            $customer = $facturapi-\u003eCustomers-\u003eretrieve( \"5a3ee743f508333611ad6b3c\" );\n      parameters:\n        - in: path\n          name: customer_id\n          schema:\n            type: string\n          required: true\n          description: ID del objeto a obtener\n      security:\n        - \"Secret Live Key\": []\n        - \"Secret Test Key\": []\n      responses:\n        \"200\":\n          description: Objeto `Customer`\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Customer\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n    put:\n      operationId: editCustomer\n      tags:\n        - customer\n      summary: Editar cliente\n      description: Actualiza la información de un cliente existente, asignando los valores de los parámetros enviados. Los parámetros que no se envíen en la petición no se modificarán.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/customers/590ce6c56d04f840aa8438af \\\n              -X PUT\n              -H \"Authorization: Bearer sk_test_API_KEY\" \\\n              -H \"Content-Type: application/json\" \\\n              -d '{\n                    \"email\": \"jdoe@example.com\",\n                    \"address\": {\n                      \"street\": \"Santa Monica Ave.\"\n                    }\n                  }'\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n            const customer = await facturapi.customers.update(\n              '590ce6c56d04f840aa8438af',\n              {\n                email: 'jdoe@example.com',\n                address: {\n                  street: 'Santa Monica Ave.'\n                }\n              }\n            );\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_test_API_KEY\");\n            var customer = await facturapi.Customer.UpdateAsync(\n              \"590ce6c56d04f840aa8438af\",\n              new Dictionary\u003cstring, object\u003e\n              {\n                [\"email\"] = \"jdoe@example.com\",\n                [\"address\"] = new Dictionary\u003cstring, object\u003e\n                {\n                  [\"street\"] = \"Santa Monica Ave.\"\n                }\n              }\n            );\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_test_API_KEY\" );\n            $customer = $facturapi-\u003eCustomers-\u003eupdate(\"590ce6c56d04f840aa8438af\", [\n              \"email\" =\u003e \"jdoe@example.com\",\n              \"legal_name\" =\u003e \"Dunder Mifflin S.A. de C.V.\",\n              \"address\" =\u003e [\n                \"street\" =\u003e \"Santa Monica Ave.\"\n              ]\n            ]);\n      parameters:\n        - in: path\n          name: customer_id\n          schema:\n            type: string\n          required: true\n          description: ID del objeto a editar\n      requestBody:\n        $ref: \"#/components/requestBodies/CustomerEdit\"\n      security:\n        - \"Secret Live Key\": []\n        - \"Secret Test Key\": []\n      responses:\n        \"200\":\n          description: Objeto `Customer` eliminado correctamente\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Customer\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n    delete:\n      operationId: deleteCustomer\n      tags:\n        - customer\n      summary: Eliminar cliente\n      description: Elimina el cliente de tu organización. Las facturas asociadas al cliente **no** se eliminarán.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/customers/590ce6c56d04f840aa8438af \\\n              -X DELETE \\\n              -H \"Authorization: Bearer sk_test_API_KEY\"\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n            const removedCustomer = await facturapi.customers.del('590ce6c56d04f840aa8438af');\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_test_API_KEY\");\n            var customer = await facturapi.Customer.DeleteAsync(\"590ce6c56d04f840aa8438af\");\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_test_API_KEY\" );\n            $facturapi-\u003eCustomers-\u003edelete( \"5a3fefd9f508333611ad6b43\" );\n      parameters:\n        - in: path\n          name: customer_id\n          schema:\n            type: string\n          required: true\n          description: ID del objeto a eliminar\n      security:\n        - \"Secret Live Key\": []\n        - \"Secret Test Key\": []\n      responses:\n        \"200\":\n          description: Objeto `Customer` eliminado correctamente\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Customer\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n  /products:\n    post:\n      operationId: createProduct\n      tags:\n        - product\n      summary: Crear producto\n      description: |\n        Registra un nuevo producto o servicio en tu catálogo de Facturapi.\n\n        Puedes usar el ID del producto para crear facturas sin tener que enviar todos los datos del producto cada vez.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/products \\\n              -H \"Authorization: Bearer sk_test_API_KEY\" \\\n              -H \"Content-Type: application/json\" \\\n              -d '{\n                    \"description\": \"Ukelele\",\n                    \"product_key\": \"60131324\",\n                    \"price\": 345.60,\n                    \"sku\": \"ABC1234\"\n                }'\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n            const product = await facturapi.products.create({\n              description: 'Ukelele',\n              product_key: '60131324',\n              price: 345.60,\n              sku: 'ABC1234'\n            });\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_test_API_KEY\");\n            var product = await facturapi.Product.CreateAsync(new Dictionary\u003cstring, object\u003e\n            {\n              [\"description\"] = \"Ukelele\",\n              [\"product_key\"] = \"60131324\",\n              [\"price\"] = 345.60,\n              [\"sku\"] = \"ABC1234\"\n            });\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_test_API_KEY\" );\n            $product = $facturapi-\u003eProducts-\u003ecreate([\n              \"description\" =\u003e \"Ukelele\",\n              \"product_key\" =\u003e \"60131324\",\n              \"price\" =\u003e 345.60,\n              \"sku\" =\u003e \"ABC1234\"\n            ]);\n      requestBody:\n        $ref: \"#/components/requestBodies/ProductCreate\"\n      security:\n        - \"Secret Live Key\": []\n        - \"Secret Test Key\": []\n      responses:\n        \"200\":\n          description: Nuevo objeto `Product` creado\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Product\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n    get:\n      operationId: listProducts\n      tags:\n        - product\n      summary: Listar productos\n      description: Regresa una lista paginada de todos los productos de una organización o realiza una búsqueda de acuerdo a parámetros\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/products \\\n              -H \"Authorization: Bearer sk_test_API_KEY\"\n              -G\n              -d 'q=ukelele'\n              -d 'page=1'\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n            const searchResult = await facturapi.products.list({\n              q: 'ukelele',\n              page: 1\n            });\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_test_API_KEY\");\n            var searchResult = await facturapi.Product.ListAsync(new Dictionary\u003cstring, object\u003e\n            {\n              [\"q\"] = \"ukelele\",\n              [\"date\"] = new Dictionary\u003cstring, object\u003e\n                {\n                  [\"gt\"] = new DateTime(\"2021-07-14T06:00:00.000Z\"),\n                  [\"lt\"] = new DateTime(\"2021-08-14T06:00:00.000Z\")\n                },\n              [\"page\"] = 1\n            });\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_test_API_KEY\" );\n            $searchResult = $facturapi-\u003eProducts-\u003eall([\n              \"q\" =\u003e \"ukelele\",\n              \"page\" =\u003e 1\n            ]);\n      parameters:\n        - in: query\n          name: q\n          schema:\n            type: string\n          description: Consulta.  Texto a buscar en la descripción del producto o SKU.\n        - $ref: \"#/components/parameters/SearchPage\"\n        - $ref: \"#/components/parameters/SearchLimit\"\n      security:\n        - \"Secret Live Key\": []\n        - \"Secret Test Key\": []\n      responses:\n        \"200\":\n          description: Resultado de la búsqueda\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProductSearchResult\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n  /products/{product_id}:\n    get:\n      operationId: getProduct\n      tags:\n        - product\n      summary: Obtener producto por ID\n      description: Regresa el objeto `Product` relacionado al `id` especificado.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/products/590e22c26d04f840aa8438b2 \\\n              -H \"Authorization: Bearer sk_test_API_KEY\"\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n            const product = await facturapi.products.retrieve('590e22c26d04f840aa8438b2');\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_test_API_KEY\");\n            var product = await facturapi.Product.RetrieveAsync(\"590e22c26d04f840aa8438b2\");\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_test_API_KEY\" );\n            $product = $facturapi-\u003eProduct-\u003eretrieve( \"590e22c26d04f840aa8438b2\" );\n      parameters:\n        - in: path\n          name: product_id\n          schema:\n            type: string\n          required: true\n          description: ID del objeto a obtener\n      security:\n        - \"Secret Live Key\": []\n        - \"Secret Test Key\": []\n      responses:\n        \"200\":\n          description: Objeto `Product`\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Product\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n    put:\n      operationId: editProduct\n      tags:\n        - product\n      summary: Editar producto\n      description: Actualiza la información de un producto existente, asignando los valores de los parámetros enviados. Los parámetros que no se envíen en la petición no se modificarán.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/products/590e22c26d04f840aa8438b2 \\\n              -X PUT\n              -H \"Authorization: Bearer sk_test_API_KEY\" \\\n              -H \"Content-Type: application/json\" \\\n              -d '{\n                    \"price\": 456.70\n                  }'\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n            const product = await facturapi.products.update(\n              '590e22c26d04f840aa8438b2',\n              {\n                email: 'jdoe@example.com',\n                address: {\n                  street: 'Santa Monica Ave.'\n                }\n              }\n            );\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_test_API_KEY\");\n            var product = await facturapi.Product.UpdateAsync(\n              \"590e22c26d04f840aa8438b2\",\n              new Dictionary\u003cstring, object\u003e\n              {\n                [\"price\"] = 456.70\n              }\n            );\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_test_API_KEY\" );\n            $product = $facturapi-\u003eProducts-\u003eupdate(\"590e22c26d04f840aa8438b2\", [\n              \"price\" =\u003e 456.70\n            ]);\n      parameters:\n        - in: path\n          name: product_id\n          schema:\n            type: string\n          required: true\n          description: ID del objeto a editar\n      requestBody:\n        $ref: \"#/components/requestBodies/ProductEdit\"\n      security:\n        - \"Secret Live Key\": []\n        - \"Secret Test Key\": []\n      responses:\n        \"200\":\n          description: Objeto `Product` eliminado correctamente\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Product\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n    delete:\n      operationId: deleteProduct\n      tags:\n        - product\n      summary: Eliminar producto\n      description: Elimina el producto de tu organización. Las facturas asociadas al producto **no** se eliminarán.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/products/590e22c26d04f840aa8438b2 \\\n              -X DELETE \\\n              -H \"Authorization: Bearer sk_test_API_KEY\"\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n            const removedProduct = await facturapi.products.del('590e22c26d04f840aa8438b2');\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_test_API_KEY\");\n            var product = await facturapi.Product.DeleteAsync(\"590e22c26d04f840aa8438b2\");\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_test_API_KEY\" );\n            $facturapi-\u003eProducts-\u003edelete( \"590e22c26d04f840aa8438b2\" );\n      parameters:\n        - in: path\n          name: product_id\n          schema:\n            type: string\n          required: true\n          description: ID del objeto a eliminar\n      security:\n        - \"Secret Live Key\": []\n        - \"Secret Test Key\": []\n      responses:\n        \"200\":\n          description: Objeto `Product` eliminado correctamente\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Product\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n  /invoices:\n    post:\n      operationId: createInvoice\n      tags:\n        - invoice\n      summary: Crear factura (CFDI)\n      description: |\n        Crea una nueva Factura. Si la factura es creada en ambiente Live, ésta será **timbrada y enviada al SAT**.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/invoices \\\n              -H \"Authorization: Bearer sk_test_API_KEY\" \\\n              -H \"Content-Type: application/json\" \\\n              -d '{\n                \"customer\": {\n                  \"legal_name\": \"Dunder Mifflin S.A. de C.V.\",\n                  \"email\": \"email@example.com\",\n                  \"tax_id\": \"ABC101010111\"\n                },\n                \"items\": [{\n                  \"quantity\": 2,\n                  \"product\": {\n                    \"description\": \"Ukelele\",\n                    \"product_key\": \"60131324\",\n                    \"price\": 345.60\n                  }\n                }],\n                \"payment_form\": \"06\",\n                \"folio_number\": 914,\n                \"series\": \"F\"\n              }'\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n            const invoice = await facturapi.invoices.create({\n              customer: {\n                legal_name: 'Dunder Mifflin S.A. de C.V.',\n                email: 'email@example.com',\n                tax_id: 'ABC101010111'\n              },\n              items: [{\n                quantity: 2,\n                product: {\n                  description: 'Ukelele',\n                  product_key: '60131324',\n                  price: 345.60\n                }\n              }],\n              payment_form: Facturapi.PaymentForm.DINERO_ELECTRONICO,\n              folio_number: 914,\n              series: 'F'\n            });\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_test_API_KEY\");\n            var invoice = await facturapi.Invoice.CreateAsync(new Dictionary\u003cstring, object\u003e\n            {\n              [\"customer\"] = new Dictionary\u003cstring, object\u003e\n              {\n                [\"legal_name\"] = \"Dunder Mifflin S.A. de C.V.\",\n                [\"email\"] = \"email@example.com\",\n                [\"tax_id\"] = \"ABC101010111\"\n              },\n              [\"items\"] = new Dictionary\u003cstring, object\u003e[]\n              {\n                new Dictionary\u003cstring, object\u003e\n                {\n                  [\"product\"] = new Dictionary\u003cstring, object\u003e\n                  {\n                    [\"description\"] = \"Ukelele\",\n                    [\"product_key\"] = \"60131324\",\n                    [\"price\"] = 345.60\n                  }\n                }\n              },\n              [\"payment_form\"] = Facturapi.PaymentForm.DINERO_ELECTRONICO,\n              [\"folio_number\"] = 914,\n              [\"series\"] = \"F\"\n            });\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_test_API_KEY\" );\n            $invoice = $facturapi-\u003eInvoices-\u003ecreate([\n              \"customer\" =\u003e [\n                \"legal_name\" =\u003e \"Dunder Mifflin S.A. de C.V.\",\n                \"email\" =\u003e \"email@example.com\",\n                \"tax_id\" =\u003e \"ABC101010111\"\n              ],\n              \"items\" =\u003e [\n                [\n                  \"quantity\" =\u003e 2,\n                  \"product\" =\u003e [\n                    \"description\" =\u003e \"Ukelele\",\n                    \"product_key\" =\u003e \"60131324\",\n                    \"price\" =\u003e 420.69,\n                    \"sku\" =\u003e \"ABC4567\"\n                  ]\n                ] // Add as many products as you want to include in your invoice\n              ],\n              \"payment_form\" =\u003e \\Facturapi\\PaymentForm::EFECTIVO,\n              \"folio_number\" =\u003e 581,\n              \"series\" =\u003e \"F\"\n            ]);\n      requestBody:\n        $ref: \"#/components/requestBodies/InvoiceCreate\"\n      security:\n        - \"Secret Live Key\": []\n        - \"Secret Test Key\": []\n      responses:\n        \"200\":\n          description: Nuevo objeto `Invoice` creado\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n    get:\n      operationId: listInvoices\n      tags:\n        - invoice\n      summary: Listar facturas\n      description: Regresa una lista paginada de todas las facturas de una organización o realiza una búsqueda de acuerdo a parámetros\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            # Todas las facturas de la organización\n            curl \"https://www.facturapi.io/v1/invoices\" \\\n              -G \\\n              -H \"Authorization: Bearer sk_test_API_KEY\"\n\n            # Todas las facturas emitidas para cierto cliente\n            curl \"https://www.facturapi.io/v1/invoices\" \\\n              -G \\\n              -H \"Authorization: Bearer sk_test_API_KEY\" \\\n              -d \"customer=58e93bd8e86eb318b0197456\"\n\n            # Página 3 de los resultados de búsqueda de texto libre\n            # de facturas emitidas por cierto cliente entre 2017 y 2019\n            curl \"https://www.facturapi.io/v1/invoices\" \\\n              -G \\\n              -H \"Authorization: Bearer sk_test_API_KEY\" \\\n              -d \"q=Aspiradora+Robot\u0026customer=58e93bd8e86eb318b0197456\u0026date[gte]=2017-01-01T00:00:00.000Z\u0026date[lt]=2020-01-01T00:00:00.000Z\u0026page=3\u0026limit=10\"\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n\n            // Todas las facturas de la organización\n            const invoiceSearch = await facturapi.invoices.list();\n\n            // Todas las facturas emitidas para cierto cliente\n            const invoiceSearch = await facturapi.invoices.list({\n              customer: '590ce6c56d04f840aa8438af'\n            });\n\n            // Página 3 de los resultados de búsqueda de texto libre\n            // de facturas emitidas por cierto cliente entre 2017 y 2019\n            const invoiceSearch = await facturapi.invoices.list({\n              q: 'Aspiradora Robot',\n              customer: '590ce6c56d04f840aa8438af',\n              date: {\n                gte: new Date('2017-01-01T00:00:00.000Z'),\n                lt: new Date('2020-01-01T00:00:00.000Z')\n              },\n              page: 3,\n              limit: 10,\n            });\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_test_API_KEY\");\n\n            // Todas las facturas de la organización\n            var searchResult = await facturapi.Invoice.ListAsync();\n\n            // Todas las facturas emitidas para cierto cliente\n            var searchResult = await facturapi.Invoice.ListAsync(\n              new Dictionary\u003cstring, object\u003e\n              {\n                [\"customer\"] = \"590ce6c56d04f840aa8438af\"\n              }\n            );\n\n            // Página 3 de los resultados de búsqueda de texto libre\n            // de facturas emitidas por cierto cliente entre 2017 y 2019\n            var searchResult = await facturapi.Invoice.ListAsync(\n              new Dictionary\u003cstring, object\u003e\n              {\n                [\"q\"] = \"Aspiradora Robot\",\n                [\"customer\"] = \"590ce6c56d04f840aa8438af\",  \n                [\"date\"] = new Dictionary\u003cstring, object\u003e\n                  {\n                    [\"gte\"] = new DateTime(\"2017-01-01T00:00:00.000Z\"),\n                    [\"lt\"] = new DateTime(\"2020-01-01T00:00:00.000Z\")\n                  },\n                [\"page\"] = 3,\n                [\"limit\"] = 10,\n              }\n            );\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_test_API_KEY\" );\n\n            // Todas las facturas de la organización\n            $invoices = $facturapi-\u003eInvoices-\u003eall();\n\n            // Todas las facturas emitidas para cierto cliente\n            $invoices = $facturapi-\u003eInvoices-\u003eall([\n              customer =\u003e \"590ce6c56d04f840aa8438af\"\n            ]);\n\n            // Página 3 de los resultados de búsqueda de texto libre\n            // de facturas emitidas por cierto cliente entre 2017 y 2019\n            $invoices = $facturapi-\u003eInvoices-\u003eall([\n              q =\u003e \"Aspiradora Robot\",\n              customer =\u003e \"590ce6c56d04f840aa8438af\"\n              date =\u003e [\n                gte =\u003e new DateTime(\"2017-01-01T00:00:00.000Z\"),\n                lt =\u003e new DateTime(\"2020-01-01T00:00:00.000Z\")\n              ],\n              page =\u003e 3,\n              limit =\u003e 10,\n            ]);\n      parameters:\n        - in: query\n          name: q\n          schema:\n            type: string\n          description: |\n            Consulta. Texto a buscar en la factura.\n\n            La búsqueda se realizará por coincidencias **parciales** en los campos:\n\n            - `items[].product.description`\n            - `customer.legal_name`\n\n            Y por coincidencias **exactas** en los campos:\n\n            - `id`\n            - `uuid`\n            - `customer.tax_id`\n            - `folio_number`\n            - `total`\n        - in: query\n          name: customer\n          schema:\n            type: string\n          description: Identificador del cliente. Útil para obtener las facturas emitidas a un sólo cliente.\n        - $ref: \"#/components/parameters/SearchDate\"\n        - $ref: \"#/components/parameters/SearchPage\"\n        - $ref: \"#/components/parameters/SearchLimit\"\n      security:\n        - \"Secret Live Key\": []\n        - \"Secret Test Key\": []\n      responses:\n        \"200\":\n          description: Resultado de la búsqueda\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InvoiceSearchResult\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n  /invoices/{invoice_id}:\n    get:\n      operationId: getInvoice\n      tags:\n        - invoice\n      summary: Obtener factura por ID\n      description: Regresa el objeto 'Invoice' relacionado al `id` especificado.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/invoices/58e93bd8e86eb318b019743d \\\n              -H \"Authorization: Bearer sk_test_API_KEY\"\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n            const invoice = await facturapi.invoices.retrieve('58e93bd8e86eb318b019743d');\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_test_API_KEY\");\n            var invoice = await facturapi.Invoice.RetrieveAsync(\"58e93bd8e86eb318b019743d\");\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_test_API_KEY\" );\n            $invoice = $facturapi-\u003eInvoices-\u003eretrieve( \"58e93bd8e86eb318b019743d\" );\n      parameters:\n        - in: path\n          name: invoice_id\n          schema:\n            type: string\n          required: true\n          description: ID del objeto a obtener\n      security:\n        - \"Secret Live Key\": []\n        - \"Secret Test Key\": []\n      responses:\n        \"200\":\n          description: Objeto `Invoice`\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n    delete:\n      operationId: cancelInvoice\n      tags:\n        - invoice\n      summary: Cancelar factura\n      description: |\n        Realiza una solicitud de cancelación de factura ante el SAT, soportando el esquema de cancelación 2022.\n\n        Al usar este método pueden ocurrir 3 posibles resultados:\n\n        - Que la llamada regrese un error con la explicación de por qué no se pudo cancelar.\n        - Que la llamada sea satisfactoria y regrese un objeto `invoice` con la propiedad `status: \"canceled\"`.\n        - Que la llamada sea satisfactoria, pero que la cancelación requiera de confirmación de parte de tu cliente, en cuyo caso se obtendrá como respuesta el objeto `invoice` con las propiedades `status: \"valid\"` y `cancellation_status: \"pending\"`.\n\n        En el tercer escenario, el valor de `cancellation_status` será actualizado automáticamente por Facturapi cuando tu cliente acepte, rechace o deje expirar la solicitud, de tal manera que al consultar una factura (usando [Obtener Factura](#operation/getInvoice)), la propiedad `cancellation_status` reflejará el estado más reciente de la soliitud.\n\n        Consulta los valores posibles de `cancellation_status` más abajo.\n\n        Después de la cancelación la factura ya no tendrá validez, el objeto cambiará su `status` a `\"canceled\"` y seguirá estando disponible para futuras consultas.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/invoices/58e93bd8e86eb318b019743d?motive=02 \\\n              -H \"Authorization: Bearer sk_test_API_KEY\" \\\n              -X DELETE\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n            const invoice = await facturapi.invoices.cancel(\n              '58e93bd8e86eb318b019743d',\n              { motive: '02' }\n            );\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_test_API_KEY\");\n            var invoice = await facturapi.Invoice.CancelAsync(\n              \"58e93bd8e86eb318b019743d\",\n              new Dictionary\u003cstring, object\u003e\n              {\n                [\"motive\"] = \"02\"\n              }\n            );\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_test_API_KEY\" );\n            $facturapi-\u003eInvoices-\u003ecancel(\n              \"58e93bd8e86eb318b019743d\",\n              [\n                \"motive\" =\u003e \"02\"\n              ]\n            );\n      parameters:\n        - in: path\n          name: invoice_id\n          schema:\n            type: string\n          required: true\n          description: ID de la factura a cancelar\n        - in: query\n          name: motive\n          required: true\n          schema:\n            type: string\n            enum:\n              - \"01\"\n              - \"02\"\n              - \"03\"\n              - \"04\"\n          description: |\n            Clave que representa el motivo de la cancelación de la factura.\n\n            - `01`: **Comprobante emitido con errores con relación**. Cuando la\n              factura contiene algún error en las cantidades, claves o cualquier otro dato y ya\n              se ha emitido el comprobante que la sustituye, el cual deberá indicarse por medio\n              del atributo `substitution`.\n            - `02`: **Comprobante emitido con errores sin relación**. Cuando la\n              factura contiene algún error en las cantidades, claves o cualquier otro dato y no\n              se requiere relacionar con otra factura.\n            - `03`: **No se llevó a cabo la operación**. Cuando la venta o transacción no se concretó.\n            - `04`: **Operación nominativa relacionada en la factura global**. Cuando se requiere cancelar\n              una factura al público en general porque el cliente solicita su comprobante.\n        - in: query\n          name: substitution\n          required: false\n          schema:\n            type: string\n          description: |\n            ID de la factura que sustituye a la factura que se está cancelando.\n\n            Puedes usar el ID de Facturapi o el folio fiscal (UUID).\n      security:\n        - \"Secret Live Key\": []\n        - \"Secret Test Key\": []\n      responses:\n        \"200\":\n          description: Solicitud de cancelación exitosa\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n  /invoices/{invoice_id}/{format}:\n    get:\n      operationId: downloadInvoice\n      tags:\n        - invoice\n      summary: Descargar factura\n      description: Descarga tu Factura en PDF, XML o ambos en un archivo comprimido ZIP.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            ## Descargar PDF y XML comprimidos en archivo ZIP\n            curl https://www.facturapi.io/v1/invoices/58e93bd8e86eb318b019743d/zip \\\n              -H \"Authorization: Bearer sk_test_API_KEY\"\n\n            ## Descargar sólo el PDF\n            curl https://www.facturapi.io/v1/invoices/58e93bd8e86eb318b019743d/pdf \\\n              -H \"Authorization: Bearer sk_test_API_KEY\"\n\n            ## Descargar sólo el XML\n            curl https://www.facturapi.io/v1/invoices/58e93bd8e86eb318b019743d/xml \\\n              -H \"Authorization: Bearer sk_test_API_KEY\"\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const fs = require('fs');\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n\n            // Descargar PDF y XML comprimidos en archivo ZIP\n            const zipStream = await facturapi.invoices.downloadZip('58e93bd8e86eb318b019743d');\n            const zipFile = fs.createWriteStream('./factura.zip');\n            zipStream.pipe(zipFile);\n\n            // Descargar sólo el PDF\n            const pdfStream = await facturapi.invoices.downloadPdf('58e93bd8e86eb318b019743d');\n            const pdfFile = fs.createWriteStream('./factura.pdf');\n            pdfStream.pipe(pdfFile);\n\n            // Descargar sólo el XML\n            const xmlStream = await facturapi.invoices.downloadXml('58e93bd8e86eb318b019743d');\n            const xmlFile = fs.createWriteStream('./factura.xml');\n            xmlStream.pipe(xmlFile);\n        - lang: csharp\n          label: C#\n          source: |\n            // Descargar PDF y XML comprimidos en archivo ZIP\n            var zipStream = await facturapi.Invoice.DownloadZipAsync(\"58e93bd8e86eb318b019743d\");\n            // Descargar sólo el XML\n            var xmlStream = await facturapi.Invoice.DownloadXmlAsync(\"58e93bd8e86eb318b019743d\");\n            // Descargar sólo el PDF\n            var pdfStream = await facturapi.Invoice.DownloadPdfAsync(\"58e93bd8e86eb318b019743d\");\n\n            // Para guardar la descarga en un archivo\n            var file = new System.IO.FileStream(\"C:\\\\route\\\\to\\\\save\\\\invoice.zip\", FileMode.Create);\n            zipStream.CopyTo(file);\n            file.Close();\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_test_API_KEY\" );\n\n            // stream containing the PDF and XML as a ZIP file\n            $zip = $facturapi-\u003eInvoices-\u003edownload_zip(\"58e93bd8e86eb318b019743d\");\n            // stream containing the PDF file\n            $pdf = $facturapi-\u003eInvoices-\u003edownload_pdf(\"58e93bd8e86eb318b019743d\"); \n            // stream containing the XML file\n            $xml = $facturapi-\u003eInvoices-\u003edownload_xml(\"58e93bd8e86eb318b019743d\");\n      parameters:\n        - in: path\n          name: invoice_id\n          schema:\n            type: string\n          required: true\n          description: ID del objeto a descargar\n        - in: path\n          name: format\n          schema:\n            type: string\n            enum:\n              - xml\n              - pdf\n              - zip\n          required: true\n          description: Formato del archivo de descarga\n      security:\n        - \"Secret Live Key\": []\n        - \"Secret Test Key\": []\n      responses:\n        \"200\":\n          description: Archivo del comprobante CFDI en el formato solicitado\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n  /invoices/{invoice_id}/email:\n    post:\n      operationId: sendInvoiceByEmail\n      tags:\n        - invoice\n      summary: Enviar factura por correo electrónico\n      description: Envía un correo electrónico a la dirección de tu cliente, con los archivos XML y PDF adjuntos al mensaje.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            # Enviar al correo del cliente\n            curl https://www.facturapi.io/v1/invoices/58e93bd8e86eb318b019743d/email \\\n              -H \"Authorization: Bearer sk_test_API_KEY\"\n              -X POST\n\n            # Enviar a otro correo\n            curl https://www.facturapi.io/v1/invoices/58e93bd8e86eb318b019743d/email \\\n              -H \"Authorization: Bearer sk_test_API_KEY\"\n              -X POST\n              -H \"Content-Type: application/json\" \\\n              -d '{\n                    \"email\": \"another_email@example.com\"\n                  }'\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n\n            // Enviar al correo del cliente\n            await facturapi.invoices.sendByEmail('58e93bd8e86eb318b019743d');\n\n            // Enviar a otro correo\n            await facturapi.invoices.sendByEmail(\n              '58e93bd8e86eb318b019743d',\n              { email: 'otro@correo.com' }\n            );\n\n            // Enviar a más de un correo (máx. 10)\n            await facturapi.invoices.sendByEmail(\n              '58e93bd8e86eb318b019743d',\n              { \n                email: [\n                  'primer@correo.com',\n                  'segundo@correo.com'\n                ]\n              }\n            );\n        - lang: csharp\n          label: C#\n          source: |\n            // Enviar al correo del cliente\n            await facturapi.Invoice.SendByEmailAsync(\"58e93bd8e86eb318b019743d\");\n\n            // Enviar a otro correo\n            await facturapi.Invoice.SendByEmailAsync(\n              \"58e93bd8e86eb318b019743d\",\n              new Dictionary\u003cstring, object\u003e\n              {\n                [\"email\"] = \"otro@correo.com\"\n              }\n            );\n\n            // Enviar a más de un correo\n            await facturapi.Invoice.SendByEmailAsync(\n              \"58e93bd8e86eb318b019743d\",\n              new Dictionary\u003cstring, object\u003e\n              {\n                [\"email\"] = new String[]\n                {\n                  \"primer@correo.com\",\n                  \"segundo@correo.com\"\n                }\n              }\n            );\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_test_API_KEY\" );\n\n            // Enviar al correo del cliente\n            $facturapi-\u003eInvoices-\u003esend_by_email(\"58e93bd8e86eb318b019743d\");\n\n            // Enviar a otro correo\n            $facturapi-\u003eInvoices-\u003esend_by_email(\n              \"58e93bd8e86eb318b019743d\",\n              \"otro@correo.com\"\n            );\n\n            // Enviar a más de un correo (máx 10)\n            $facturapi-\u003eInvoices-\u003esend_by_email(\n              \"58e93bd8e86eb318b019743d\",\n              [\n                \"primer@correo.com\",\n                \"segundo@correo.com\"\n              ]\n            );\n      parameters:\n        - in: path\n          name: invoice_id\n          schema:\n            type: string\n          required: true\n          description: ID del objeto a obtener\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                email:\n                  description: Dirección de correo electrónico a enviar la factura. Si no se envía este parámetro, la factura será enviada al correo que el cliente tenga registrado.\n                  oneOf:\n                    - type: string\n                      format: email\n                      description: Dirección de correo eletrónico\n                      example: otro@correo.com\n                    - type: array\n                      example: [\"primer@correo.com\", \"segundo@correo.com\"]\n                      description: Lista de direcciones de correo que recibirán la factura.\n                      maxLength: 10\n                      items:\n                        type: string\n                        format: email\n      security:\n        - \"Secret Live Key\": []\n        - \"Secret Test Key\": []\n      responses:\n        \"200\":\n          description: Archivo del comprobante CFDI en el formato solicitado\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n\n  /receipts:\n    post:\n      operationId: createReceipt\n      tags:\n        - receipt\n      summary: Crear recibo\n      description: |\n        Crea un nuevo Recibo, el cual funge como nota de venta.\n\n        Todos los recibos generan una URL de autofactura que cliente puede\n        visitar para llenar sus datos fiscales en un micrositio con el branding\n        de la organización.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/receipts \\\n              -H \"Authorization: Bearer sk_test_API_KEY\" \\\n              -H \"Content-Type: application/json\" \\\n              -d '{\n                    \"folio_number\": 1234,\n                    \"payment_form\": \"03\",\n                    \"items\": [{\n                      \"quantity\": 1,\n                      \"product\": {\n                        \"description\": \"Ukelele\",\n                        \"product_key\": \"60131324\",\n                        \"price\": 345.60,\n                        \"sku\": \"ABC1234\"\n                      }\n                    }]\n                  }'\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n\n            const receipt = await facturapi.receipts.create({\n              folio_number: 1234,\n              payment_form: Facturapi.PaymentForm.DINERO_ELECTRONICO,\n              items: [{\n                quantity: 1,\n                product: {\n                  description: 'Ukelele',\n                  product_key: '60131324',\n                  price: 345.60,\n                  sku: 'ABC1234'\n                }\n              }]\n            });\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_test_API_KEY\");\n            var receipt = await facturapi.Receipt.CreateAsync(new Dictionary\u003cstring, object\u003e\n            {\n              [\"folio_number\"] = 1234,\n              [\"payment_form\"] = Facturapi.PaymentForm.DINERO_ELECTRONICO,\n              [\"items\"] = new Dictionary\u003cstring, object\u003e[]\n              {\n                new Dictionary\u003cstring, object\u003e {\n                  [\"description\"] = \"Ukelele\",\n                  [\"product_key\"] = \"60131324\",\n                  [\"price\"] = 345.60,\n                  [\"sku\"] = \"ABC1234\"\n                }\n              }\n            });\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_test_API_KEY\" );\n\n            $receipt = $facturapi-\u003eReceipts-\u003ecreate([\n              \"folio_number\" =\u003e 1234,\n              \"payment_form\" =\u003e \"03\",\n              \"items\" =\u003e [\n                [\n                  \"product\" =\u003e [\n                    \"description\" =\u003e \"Ukelele\",\n                    \"product_key\" =\u003e \"60131324\",\n                    \"price\" =\u003e 345.60,\n                    \"sku\" =\u003e \"ABC1234\"\n                  ]\n                ]\n              ]\n            ]);\n      requestBody:\n        $ref: \"#/components/requestBodies/ReceiptCreate\"\n      security:\n        - \"Secret User Key\": []\n      responses:\n        \"200\":\n          description: Nuevo objeto `Receipt` creado\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Receipt\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n    get:\n      operationId: listReceipts\n      tags:\n        - receipt\n      summary: Listar recibos\n      description: Regresa una lista paginada de todos los recibos de una organización o realiza una búsqueda de acuerdo a parámetros\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            # Todos los recibos de la organización\n            curl \"https://www.facturapi.io/v1/receipts\" \\\n              -G \\\n              -H \"Authorization: Bearer sk_test_API_KEY\"\n\n            # Página 3 de los resultados de búsqueda de texto libre\n            # de recibos creados entre 2017 y 2019\n            curl \"https://www.facturapi.io/v1/receipts\" \\\n              -G \\\n              -H \"Authorization: Bearer sk_test_API_KEY\" \\\n              -d \"q=Aspiradora+Robot\u0026date[gte]=2017-01-01T00:00:00.000Z\u0026date[lt]=2020-01-01T00:00:00.000Z\u0026page=3\u0026limit=10\"\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n\n            // Todos los recibos de la organización\n            const receiptSearch = await facturapi.receipts.list();\n\n            // Página 3 de los resultados de búsqueda de texto libre\n            // de recibos creados entre 2017 y 2019\n            const receiptSearch = await facturapi.receipts.list({\n              q: 'Aspiradora Robot',\n              date: {\n                gte: new Date('2017-01-01T00:00:00.000Z'),\n                lt: new Date('2020-01-01T00:00:00.000Z')\n              },\n              page: 3,\n              limit: 10,\n            });\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_test_API_KEY\");\n\n            // Todos los recibos de la organización\n            var searchResult = await facturapi.Receipt.ListAsync();\n\n            // Página 3 de los resultados de búsqueda de texto libre\n            // de recibos creados entre 2017 y 2019\n            var searchResult = await facturapi.Receipt.ListAsync(\n              new Dictionary\u003cstring, object\u003e\n              {\n                [\"q\"] = \"Aspiradora Robot\",\n                [\"date\"] = new Dictionary\u003cstring, object\u003e\n                  {\n                    [\"gte\"] = new DateTime(\"2017-01-01T00:00:00.000Z\"),\n                    [\"lt\"] = new DateTime(\"2020-01-01T00:00:00.000Z\")\n                  },\n                [\"page\"] = 3,\n                [\"limit\"] = 10,\n              }\n            );\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_test_API_KEY\" );\n\n            // Todos los recibos de la organización\n            $searchResult = $facturapi-\u003eReceipts-\u003eall();\n\n            // Página 3 de los resultados de búsqueda de texto libre\n            // de recibos creados entre 2017 y 2019\n            $searchResult = $facturapi-\u003eReceipts-\u003eall([\n              q =\u003e \"Aspiradora Robot\",\n              date =\u003e [\n                gte =\u003e new DateTime(\"2017-01-01T00:00:00.000Z\"),\n                lt =\u003e new DateTime(\"2020-01-01T00:00:00.000Z\")\n              ],\n              page =\u003e 3,\n              limit =\u003e 10,\n            ]);\n      parameters:\n        - in: query\n          name: q\n          schema:\n            type: string\n          description: |\n            Consulta. Texto a buscar en la descripción de los conceptos del recibo o el SKU.\n        - $ref: \"#/components/parameters/SearchDate\"\n        - $ref: \"#/components/parameters/SearchPage\"\n        - $ref: \"#/components/parameters/SearchLimit\"\n      security:\n        - \"Secret Live Key\": []\n        - \"Secret Test Key\": []\n      responses:\n        \"200\":\n          description: Resultado de la búsqueda\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReceiptSearchResult\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n  /receipts/{receipt_id}:\n    get:\n      operationId: getReceipt\n      tags:\n        - receipt\n      summary: Obtener recibo por ID\n      description: Regresa el objeto 'Receipt' relacionado al `id` especificado.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/receipts/58e93bd8e86eb318b019743d \\\n              -H \"Authorization: Bearer sk_test_API_KEY\"\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n            const receipt = await facturapi.receipts.retrieve('58e93bd8e86eb318b019743d');\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_test_API_KEY\");\n            var receipt = await facturapi.Receipt.RetrieveAsync(\"58e93bd8e86eb318b019743d\");\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_test_API_KEY\" );\n            $receipt = $facturapi-\u003eReceipts-\u003eretrieve( \"58e93bd8e86eb318b019743d\" );\n      parameters:\n        - in: path\n          name: receipt_id\n          schema:\n            type: string\n          required: true\n          description: ID del objeto a obtener\n      security:\n        - \"Secret Live Key\": []\n        - \"Secret Test Key\": []\n      responses:\n        \"200\":\n          description: Objeto `Receipt`\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Receipt\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n    delete:\n      operationId: cancelReceipt\n      tags:\n        - receipt\n      summary: Cancelar recibo\n      description: |\n        Marca un recibo como cancelado, cambiando su propiedad `status` a `\"canceled\"`.\n\n        Una vez cancelado, el recibo no podrá ser facturado.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/receipts/5ebd8e56f5687a013ca0df46 \\\n              -X DELETE \\\n              -H \"Authorization: Bearer sk_test_API_KEY\"\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n            const receipt = await facturapi.receipts.cancel('5ebd8e56f5687a013ca0df46');\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_test_API_KEY\");\n            var receipt = await facturapi.Receipt.CancelAsync(\"5ebd8e56f5687a013ca0df46\");\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_test_API_KEY\" );\n            $facturapi-\u003eReceipts-\u003ecancel(\"5ebd8e56f5687a013ca0df46\");\n      parameters:\n        - in: path\n          name: receipt_id\n          schema:\n            type: string\n          required: true\n          description: ID del recibo a cancelar\n      security:\n        - \"Secret Live Key\": []\n        - \"Secret Test Key\": []\n      responses:\n        \"200\":\n          description: Objeto 'Receipt' cancelado exitosamente\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Receipt\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n  /receipts/{receipt_id}/invoice:\n    post:\n      operationId: invoiceReceipt\n      tags:\n        - receipt\n      summary: Facturar recibo\n      description: |\n        Crea una factura a partir de un recibo.\n\n        Sólo pueden facturarse recibos abiertos (`status = \"open\"`)\n\n        Una vez facturado, el `status` del recibo cambiará a `\"invoiced_to_customer\"`.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/receipts/5ebd8e56f5687a013ca0df46/invoice \\\n              -H \"Authorization: Bearer sk_test_API_KEY\" \\\n              -H \"Content-Type: application/json\" \\\n              -d '{\n                    \"customer\": \"58e93bd8e86eb318b0197456\",\n                    \"folio_number\": 914,\n                    \"series\": \"F\"\n                }'\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n\n            const invoice = await facturapi.receipts.invoice('5ebd8e56f5687a013ca0df46', {\n              customer: '58e93bd8e86eb318b0197456',\n              folio_number: 914,\n              series: 'F'\n            });\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_test_API_KEY\");\n            var invoice = await facturapi.Receipt.InvoiceAsync(\"5ebd8e56f5687a013ca0df46\", new Dictionary\u003cstring, object\u003e\n            {\n              [\"customer\"] = \"58e93bd8e86eb318b0197456\",\n              [\"folio_number\"] = 914,\n              [\"series\"] = \"F\"\n            });\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi(\"sk_test_API_KEY\");\n\n            $invoice = $facturapi-\u003eReceipts-\u003einvoice(\"5a3f3e35f508333611ad6b3e\", [\n              \"customer\" =\u003e \"58e93bd8e86eb318b0197456\",\n              \"folio_number\" =\u003e 914,\n              \"series\" =\u003e \"F\"\n            ]);\n      requestBody:\n        $ref: \"#/components/requestBodies/ReceiptInvoice\"\n      security:\n        - \"Secret Live Key\": []\n        - \"Secret Test Key\": []\n      responses:\n        \"200\":\n          description: Nuevo objeto `Invoice` creado\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n  /receipts/global-invoice:\n    post:\n      operationId: createGlobalInvoice\n      tags:\n        - receipt\n      summary: Crear factura global\n      description: |\n        Crea una factura global por los recibos abiertos (con `status = “open”`) de un cierto periodo.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/receipts/global-invoice \\\n              -H \"Authorization: Bearer sk_test_API_KEY\" \\\n              -H \"Content-Type: application/json\" \\\n              -d '{\n                    \"from\": \"2020-12-01T05:00:00.000Z\",\n                    \"to\": \"2020-12-31T04:59:59.999Z\",\n                    \"folio_number\": 1234,\n                    \"series\": \"G\"\n                }'\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n\n            const invoice = await facturapi.receipts.createGlobalInvoice({\n              from: '2020-12-01T05:00:00.000Z',\n              to: '2020-12-31T04:59:59.999Z',\n              folio_number: 1234,\n              series: 'G'\n            });\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_test_API_KEY\");\n            var invoice = await facturapi.Receipt.CreateGlobalInvoiceAsync(new Dictionary\u003cstring, object\u003e\n            {\n              [\"from\"] = \"2020-12-01T05:00:00.000Z\",\n              [\"to\"] = \"2020-12-31T04:59:59.999Z\",\n              [\"folio_number\"] = 1234,\n              [\"series\"] = \"G\"\n            });\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi(\"sk_test_API_KEY\");\n\n            $invoice = $facturapi-\u003eReceipts-\u003ecreateGlobalInvoice([\n              \"from\" =\u003e \"2020-12-01T05:00:00.000Z\",\n              \"to\" =\u003e \"2020-12-31T04:59:59.999Z\",\n              \"folio_number\" =\u003e 1234,\n              \"series\" =\u003e \"G\"\n            ]);\n      requestBody:\n        $ref: \"#/components/requestBodies/ReceiptCreateGlobalInvoice\"\n      security:\n        - \"Secret Live Key\": []\n        - \"Secret Test Key\": []\n      responses:\n        \"200\":\n          description: Nuevo objeto `Invoice` creado\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Invoice\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n\n  /retentions:\n    post:\n      operationId: createRetention\n      tags:\n        - retention\n      summary: Crear retención\n      description: |\n        Crea una nueva Retención. Si el comprobante es creado en ambiente Live, ésta será **timbrado y enviado al SAT**.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/retentions \\\n              -H \"Authorization: Bearer sk_test_API_KEY\" \\\n              -H \"Content-Type: application/json\" \\\n              -d '{\n                    \"customer\": \"58e93bd8e86eb318b0197456\",\n                    \"cve_retenc\": \"26\",\n                    \"periodo\": {\n                      \"mes_ini\": 1,\n                      \"mes_fin\": 12,\n                      \"ejerc\": 2020\n                    },\n                    \"totales\": {\n                      \"monto_tot_operacion\": 244.654321,\n                      \"monto_tot_exent\": 145.123456,\n                      \"imp_retenidos\": [\n                        {\n                          \"monto_ret\": 40,\n                          \"base_ret\": 250\n                        }\n                      ]\n                    }\n                  }'\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n            const retention = await facturapi.retentions.create({\n              customer: '58e93bd8e86eb318b0197456',\n              cve_retenc: '26',\n              periodo: {\n                mes_ini: 1,\n                mes_fin: 12,\n                ejerc: 2020\n              },\n              totales: {\n                monto_tot_operacion: 244.654321,\n                monto_tot_exent: 145.123456,\n                imp_retenidos: [\n                  {\n                    monto_ret: 40,\n                    base_ret: 250\n                  }\n                ]\n              }\n            });\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_test_API_KEY\");\n            var retention = await facturapi.Retention.CreateAsync(new Dictionary\u003cstring, object\u003e\n            {\n              [\"customer\"] = \"58e93bd8e86eb318b0197456\",\n              [\"cve_retenc\"] = \"26\",\n              [\"periodo\"] = new Dictionary\u003cstring, object\u003e\n              {\n                [\"mes_ini\"] = 1,\n                [\"mes_fin\"] = 12,\n                [\"ejerc\"] = 2020\n              },\n              [\"totales\"] = new Dictionary\u003cstring, object\u003e\n              {\n                [\"monto_tot_operacion\"] = 244.654321,\n                [\"monto_tot_exent\"] = 145.123456,\n                [\"imp_retenidos\"] = new Dictionary\u003cstring, object\u003e[]\n                {\n                  new Dictionary\u003cstring, object\u003e\n                  {\n                    [\"]\n                    [\"monto_ret\"] = 40,\n                    [\"base_ret\"] = 250\n                  }\n                }\n              }\n            });\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_test_API_KEY\" );\n            $retention = $facturapi-\u003eRetentions-\u003ecreate([\n              \"customer\" =\u003e \"58e93bd8e86eb318b0197456\",\n              \"cve_retenc\" =\u003e \"26\",\n              \"periodo\" =\u003e [\n                \"mes_ini\" =\u003e 1,\n                \"mes_fin\" =\u003e 12,\n                \"ejerc\" =\u003e 2020\n              ],\n              \"totales\" =\u003e [\n                \"monto_tot_operacion\" =\u003e 244.654321,\n                \"monto_tot_exent\" =\u003e 145.123456,\n                \"imp_retenidos\" =\u003e [\n                  [\n                    \"impuesto\" =\u003e \"ISR\",\n                    \"monto_ret\" =\u003e 40,\n                    \"base_ret\" =\u003e 250\n                  ]\n                ]\n              ]\n            ]);\n      requestBody:\n        $ref: \"#/components/requestBodies/RetentionCreate\"\n      security:\n        - \"Secret Live Key\": []\n        - \"Secret Test Key\": []\n      responses:\n        \"200\":\n          description: Nuevo objeto `Retention` creado\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Retention\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n    get:\n      operationId: listRetentions\n      tags:\n        - retention\n      summary: Listar retenciones\n      description: Regresa una lista paginada de todas las retenciones de una organización o realiza una búsqueda de acuerdo a parámetros\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            # Todas las retenciones de la organización\n            curl https://www.facturapi.io/v1/retentions \\\n              -H \"Authorization: Bearer sk_test_API_KEY\"\n\n            # Todas las retenciones emitidas para cierto cliente\n            curl \"https://www.facturapi.io/v1/retentions\" \\\n              -G \\\n              -H \"Authorization: Bearer sk_test_API_KEY\" \\\n              -d \"customer=58e93bd8e86eb318b0197456\"\n\n            # Página 3 de los resultados de búsqueda de texto libre\n            # de retenciones emitidas entre 2017 y 2019\n            curl \"https://www.facturapi.io/v1/retentions\" \\\n              -G \\\n              -H \"Authorization: Bearer sk_test_API_KEY\" \\\n              -d \"q=John+Doe6\u0026date[gte]=2017-01-01T00:00:00.000Z\u0026date[lt]=2020-01-01T00:00:00.000Z\u0026page=3\u0026limit=10\"\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n\n            // Todas las retenciones de la organización\n            const retentionSearch = await facturapi.retentions.list();\n\n            // Todas las retenciones emitidas para cierto cliente\n            const retentionSearch = await facturapi.retentions.list({\n              customer: '590ce6c56d04f840aa8438af'\n            });\n\n            // Página 3 de los resultados de búsqueda de texto libre\n            // de retenciones emitidas entre 2017 y 2019\n            const retentionSearch = await facturapi.retentions.list({\n              q: 'John Doe',\n              date: {\n                gte: new Date('2017-01-01T00:00:00.000Z'),\n                lt: new Date('2020-01-01T00:00:00.000Z')\n              },\n              page: 3,\n              limit: 10,\n            });\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_test_API_KEY\");\n\n            // Todas las retenciones de la organización\n            var searchResult = await facturapi.Retention.ListAsync();\n\n            // Todas las retenciones emitidas para cierto cliente\n            var searchResult = await facturapi.Retention.ListAsync(\n              new Dictionary\u003cstring, object\u003e\n              {\n                [\"customer\"] = \"590ce6c56d04f840aa8438af\"\n              }\n            );\n\n            // Página 3 de los resultados de búsqueda de texto libre\n            // de retenciones emitidas entre 2017 y 2019\n            var searchResult = await facturapi.Retention.ListAsync(\n              new Dictionary\u003cstring, object\u003e\n              {\n                [\"q\"] = \"John Doe\",\n                [\"date\"] = new Dictionary\u003cstring, object\u003e\n                  {\n                    [\"gte\"] = new DateTime(\"2017-01-01T00:00:00.000Z\"),\n                    [\"lt\"] = new DateTime(\"2020-01-01T00:00:00.000Z\")\n                  },\n                [\"page\"] = 3,\n                [\"limit\"] = 10,\n              }\n            );\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_test_API_KEY\" );\n\n            // Todas las retenciones de la organización\n            $retentions = $facturapi-\u003eRetentions-\u003eall();\n\n            // Todas las retenciones emitidas para cierto cliente\n            $retentions = $facturapi-\u003eRetentions-\u003eall([\n              customer =\u003e \"590ce6c56d04f840aa8438af\"\n            ]);\n\n            // Página 3 de los resultados de búsqueda de texto libre\n            // de retenciones emitidas entre 2017 y 2019\n            $retentions = $facturapi-\u003eRetentions-\u003eall([\n              q =\u003e \"John Doe\",\n              date =\u003e [\n                gte =\u003e new DateTime(\"2017-01-01T00:00:00.000Z\"),\n                lt =\u003e new DateTime(\"2020-01-01T00:00:00.000Z\")\n              ],\n              page =\u003e 3,\n              limit =\u003e 10,\n            ]);\n      parameters:\n        - in: query\n          name: q\n          schema:\n            type: string\n          description: Consulta. Texto a buscar en el nombre fiscal del cliente o su RFC.\n        - in: query\n          name: customer\n          schema:\n            type: string\n          description: Identificador del cliente. Útil para obtener las retenciones emitidas a un sólo cliente.\n        - $ref: \"#/components/parameters/SearchDate\"\n        - $ref: \"#/components/parameters/SearchPage\"\n        - $ref: \"#/components/parameters/SearchLimit\"\n      security:\n        - \"Secret Live Key\": []\n        - \"Secret Test Key\": []\n      responses:\n        \"200\":\n          description: Resultado de la búsqueda\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RetentionSearchResult\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n  /retentions/{retention_id}:\n    get:\n      operationId: getRetention\n      tags:\n        - retention\n      summary: Obtener retención por ID\n      description: Regresa el objeto 'Retention' relacionado al `id` especificado.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/retentions/6062d9fb226600001cd22f71 \\\n              -H \"Authorization: Bearer sk_test_API_KEY\"\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n            const retention = await facturapi.retentions.retrieve('6062d9fb226600001cd22f71');\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_test_API_KEY\");\n            var retention = await facturapi.Retention.RetrieveAsync(\"6062d9fb226600001cd22f71\");\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_test_API_KEY\" );\n            $retention = $facturapi-\u003eRetentions-\u003eretrieve( \"6062d9fb226600001cd22f71\" );\n      parameters:\n        - in: path\n          name: retention_id\n          schema:\n            type: string\n          required: true\n          description: ID del objeto a obtener\n      security:\n        - \"Secret Live Key\": []\n        - \"Secret Test Key\": []\n      responses:\n        \"200\":\n          description: Objeto `Retention`\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Retention\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n    delete:\n      operationId: cancelRetention\n      tags:\n        - retention\n      summary: Cancelar retención\n      description: |\n        Realiza una solicitud de cancelación de retención ante el SAT.\n\n        A diferencia de las facturas comúnes, la cancelación de la retención es inmediata y no requiere autorización de parte del receptor.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/retentions/6062d9fb226600001cd22f71 \\\n              -H \"Authorization: Bearer sk_test_API_KEY\" \\\n              -X DELETE\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n            const canceledRetention = await facturapi.retentions.cancel('6062d9fb226600001cd22f71');\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_test_API_KEY\");\n            var canceledRetention = await facturapi.Retention.CancelAsync(\"6062d9fb226600001cd22f71\");\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_test_API_KEY\" );\n            $canceledRetention = $facturapi-\u003eRetentions-\u003ecancel(\"6062d9fb226600001cd22f71\");\n      parameters:\n        - in: path\n          name: retention_id\n          schema:\n            type: string\n          required: true\n          description: ID de la retención a cancelar\n      security:\n        - \"Secret Live Key\": []\n        - \"Secret Test Key\": []\n      responses:\n        \"200\":\n          description: Objeto `Retention` cancelado exitosamente\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Retention\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n  /retentions/{retention_id}/{format}:\n    get:\n      operationId: downloadRetention\n      tags:\n        - retention\n      summary: Descargar retención\n      description: Descarga una retención en PDF, XML o ambos en un archivo comprimido ZIP.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            ## Descargar PDF y XML comprimidos en archivo ZIP\n            curl https://www.facturapi.io/v1/retentions/58e93bd8e86eb318b019743d/zip \\\n              -H \"Authorization: Bearer sk_test_API_KEY\"\n\n            ## Descargar sólo el PDF\n            curl https://www.facturapi.io/v1/retentions/58e93bd8e86eb318b019743d/pdf \\\n              -H \"Authorization: Bearer sk_test_API_KEY\"\n\n            ## Descargar sólo el XML\n            curl https://www.facturapi.io/v1/retentions/58e93bd8e86eb318b019743d/xml \\\n              -H \"Authorization: Bearer sk_test_API_KEY\"\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const fs = require('fs');\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n\n            // Descargar PDF y XML comprimidos en archivo ZIP\n            const zipStream = await facturapi.retentions.downloadZip('58e93bd8e86eb318b019743d');\n            const zipFile = fs.createWriteStream('./retencion.zip');\n            zipStream.pipe(zipFile);\n\n            // Descargar sólo el PDF\n            const pdfStream = await facturapi.retentions.downloadPdf('58e93bd8e86eb318b019743d');\n            const pdfFile = fs.createWriteStream('./retencion.pdf');\n            pdfStream.pipe(pdfFile);\n\n            // Descargar sólo el XML\n            const xmlStream = await facturapi.retentions.downloadXml('58e93bd8e86eb318b019743d');\n            const xmlFile = fs.createWriteStream('./retencion.xml');\n            xmlStream.pipe(xmlFile);\n        - lang: csharp\n          label: C#\n          source: |\n            // Descargar PDF y XML comprimidos en archivo ZIP\n            var zipStream = await facturapi.Retention.DownloadZipAsync(\"58e93bd8e86eb318b019743d\");\n            // Descargar sólo el XML\n            var xmlStream = await facturapi.Retention.DownloadXmlAsync(\"58e93bd8e86eb318b019743d\");\n            // Descargar sólo el PDF\n            var pdfStream = await facturapi.Retention.DownloadPdfAsync(\"58e93bd8e86eb318b019743d\");\n\n            // Para guardar la descarga en un archivo\n            var file = new System.IO.FileStream(\"C:\\\\route\\\\to\\\\save\\\\retention.zip\", FileMode.Create);\n            zipStream.CopyTo(file);\n            file.Close();\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_test_API_KEY\" );\n\n            // stream containing the PDF and XML as a ZIP file\n            $zip = $facturapi-\u003eRetentions-\u003edownload_zip(\"58e93bd8e86eb318b019743d\");\n            // stream containing the PDF file\n            $pdf = $facturapi-\u003eRetentions-\u003edownload_pdf(\"58e93bd8e86eb318b019743d\"); \n            // stream containing the XML file\n            $xml = $facturapi-\u003eRetentions-\u003edownload_xml(\"58e93bd8e86eb318b019743d\");\n      parameters:\n        - in: path\n          name: retention_id\n          schema:\n            type: string\n          required: true\n          description: ID del objeto a descargar\n        - in: path\n          name: format\n          schema:\n            type: string\n            enum:\n              - xml\n              - pdf\n              - zip\n          required: true\n          description: Formato del archivo de descarga\n      security:\n        - \"Secret Live Key\": []\n        - \"Secret Test Key\": []\n      responses:\n        \"200\":\n          description: Archivo del comprobante CFDI en el formato solicitado\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n  /retentions/{retention_id}/email:\n    post:\n      operationId: sendRetentionByEmail\n      tags:\n        - retention\n      summary: Enviar retención por correo electrónico\n      description: Envía un correo electrónico a la dirección de tu cliente, con los archivos XML y PDF adjuntos al mensaje.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            # Enviar al correo del cliente\n            curl https://www.facturapi.io/v1/retentions/58e93bd8e86eb318b019743d/email \\\n              -H \"Authorization: Bearer sk_test_API_KEY\"\n              -X POST\n\n            # Enviar a otro correo\n            curl https://www.facturapi.io/v1/retentions/58e93bd8e86eb318b019743d/email \\\n              -H \"Authorization: Bearer sk_test_API_KEY\"\n              -X POST\n              -H \"Content-Type: application/json\" \\\n              -d '{\n                    \"email\": \"another_email@example.com\"\n                  }'\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n\n            // Enviar al correo del cliente\n            await facturapi.retentions.sendByEmail('58e93bd8e86eb318b019743d');\n\n            // Enviar a otro correo\n            await facturapi.retentions.sendByEmail(\n              '58e93bd8e86eb318b019743d',\n              { email: 'otro@correo.com' }\n            );\n\n            // Enviar a más de un correo (máx. 10)\n            await facturapi.retentions.sendByEmail(\n              '58e93bd8e86eb318b019743d',\n              { \n                email: [\n                  'primer@correo.com',\n                  'segundo@correo.com'\n                ]\n              }\n            );\n        - lang: csharp\n          label: C#\n          source: |\n            // Enviar al correo del cliente\n            await facturapi.Retention.SendByEmailAsync(\"58e93bd8e86eb318b019743d\");\n\n            // Enviar a otro correo\n            await facturapi.Retention.SendByEmailAsync(\n              \"58e93bd8e86eb318b019743d\",\n              new Dictionary\u003cstring, object\u003e\n              {\n                [\"email\"] = \"otro@correo.com\"\n              }\n            );\n\n            // Enviar a más de un correo\n            await facturapi.Retention.SendByEmailAsync(\n              \"58e93bd8e86eb318b019743d\",\n              new Dictionary\u003cstring, object\u003e\n              {\n                [\"email\"] = new String[]\n                {\n                  \"primer@correo.com\",\n                  \"segundo@correo.com\"\n                }\n              }\n            );\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_test_API_KEY\" );\n\n            // Enviar al correo del cliente\n            $facturapi-\u003eRetentions-\u003esend_by_email(\"58e93bd8e86eb318b019743d\");\n\n            // Enviar a otro correo\n            $facturapi-\u003eRetentions-\u003esend_by_email(\n              \"58e93bd8e86eb318b019743d\",\n              \"otro@correo.com\"\n            );\n\n            // Enviar a más de un correo (máx 10)\n            $facturapi-\u003eRetentions-\u003esend_by_email(\n              \"58e93bd8e86eb318b019743d\",\n              [\n                \"primer@correo.com\",\n                \"segundo@correo.com\"\n              ]\n            );\n      parameters:\n        - in: path\n          name: retention_id\n          schema:\n            type: string\n          required: true\n          description: ID del objeto a obtener\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                email:\n                  description: Dirección de correo electrónico a enviar la retención. Si no se envía este parámetro, la retención será enviada al correo que el cliente tenga registrado.\n                  oneOf:\n                    - type: string\n                      format: email\n                      description: Dirección de correo eletrónico\n                      example: otro@correo.com\n                    - type: array\n                      example: [\"primer@correo.com\", \"segundo@correo.com\"]\n                      description: Lista de direcciones de correo que recibirán la retención.\n                      maxLength: 10\n                      items:\n                        type: string\n                        format: email\n      security:\n        - \"Secret Live Key\": []\n        - \"Secret Test Key\": []\n      responses:\n        \"200\":\n          description: Archivo del comprobante en el formato solicitado\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n\n  /organizations:\n    post:\n      operationId: createOrganization\n      tags:\n        - organization\n      summary: Crear organización\n      description: |\n        Crea una nueva Organización que pertenecerá a tu cuenta de usuario.\n\n        Después de crear la organización y antes de poder emitir facturas con\n        la organización, deberás de terminar de configurarla llamando a los\n        métodos de [Actualizar datos fiscales](#operation/editOrganizationLegal) y\n        [Subir certificados (CSD)](#operation/uploadOrganizationCertificate)\n\n        Recuerda que los folios de tu suscripción podrán ser consumidos por\n        cualquiera de las organizaaciones registradas bajo tu cuenta.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/organizations \\\n              -H \"Authorization: Bearer sk_user_API_KEY\" \\\n              -H \"Content-Type: application/json\" \\\n              -d '{\n                  \"name\": \"Skynet\"\n                }'\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_user_API_KEY');\n            const organization = await facturapi.organizations.create({\n              name: 'Skynet'\n            });\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_user_API_KEY\");\n            var organization = await facturapi.Organization.CreateAsync(new Dictionary\u003cstring, object\u003e\n            {\n              [\"name\"] = \"Skynet\"\n            });\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi(\"sk_user_API_KEY\");\n            $organization = $facturapi-\u003eOrganizations-\u003ecreate([\n              \"name\" =\u003e \"Skynet\"\n            ]);\n      requestBody:\n        $ref: \"#/components/requestBodies/OrganizationCreate\"\n      security:\n        - \"Secret User Key\": []\n      responses:\n        \"200\":\n          description: Nuevo objeto `Organization` creado\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Organization\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n    get:\n      operationId: listOrganizations\n      tags:\n        - organization\n      summary: Listar organizaciones\n      description: Regresa una lista paginada de todas las organizationes registradas bajo tu cuenta, o realiza una búsqueda de acuerdo a parámetros.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/organizations \\\n              -H \"Authorization: Bearer sk_user_API_KEY\"\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n\n            const organizationResults = await facturapi.organizations.list();\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_test_API_KEY\");\n\n            var searchResult = await facturapi.Organization.ListAsync();\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_test_API_KEY\" );\n\n            $organizations = $facturapi-\u003eOrganizations-\u003eall()\n      parameters:\n        - in: query\n          name: q\n          schema:\n            type: string\n          description: Consulta. Texto a buscar en `name` (nombre comercial), `legal_name` (nombre fiscal) o en `tax_id` (RFC).\n        - $ref: \"#/components/parameters/SearchDate\"\n        - $ref: \"#/components/parameters/SearchPage\"\n        - $ref: \"#/components/parameters/SearchLimit\"\n      security:\n        - \"Secret User Key\": []\n      responses:\n        \"200\":\n          description: Resultado de la búsqueda\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OrganizationSearchResult\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n  /organizations/{organization_id}/legal:\n    put:\n      operationId: editOrganizationLegal\n      tags:\n        - organization\n      summary: Editar datos fiscales\n      description: |\n        Actualiza los datos fiscales de la organización.\n\n        Si estás buscando cómo editar el RFC, recuerda que la propiedad\n        `tax_id` se asigna automáticamente al subir los Certificados de Sello\n        Digital.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/organizations/5a2a307be93a2f00129ea035/legal \\\n              -X PUT \\\n              -H \"Authorization: Bearer sk_user_API_KEY\" \\\n              -H \"Content-Type: application/json\" \\\n              -d '{\n                    \"name\": \"Skynet\",\n                    \"legal_name\": \"Skynet S.A. de C.V.\",\n                    \"tax_system\": \"601\",\n                    \"website\": \"www.sky.net\",\n                    \"phone\": \"555-555-5555\",\n                    \"address\": {\n                      \"exterior\": \"1414\",\n                      \"interior\": \"12\",\n                      \"zip\": \"44940\",\n                      \"neighborhood\": \"Villa Toscana\",\n                      \"city\": \"Guadalajara\",\n                      \"municipality\": \"Guadalajara\",\n                      \"state\": \"Jalisco\",\n                      \"country\": \"México\"\n                    }\n                }'\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_user_API_KEY');\n            const organization = await facturapi.organizations.updateLegal(\n              '5a2a307be93a2f00129ea035',\n              {\n                name: 'Skynet',\n                legal_name: 'Skynet S.A. de C.V.',\n                tax_system: Facturapi.TaxSystem.GENERAL_LEY_DE_PERSONAS_MORALES,\n                website: 'www.sky.net',\n                phone: '555-555-5555',\n                address: {\n                  exterior: '1414',\n                  interior: '12',\n                  zip: '44940',\n                  neighborhood: 'Villa Toscana',\n                  city: 'Guadalajara',\n                  municipality: 'Guadalajara',\n                  state: 'Jalisco',\n                  country: 'México'\n                }\n              }\n            );\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_user_API_KEY\");\n            var organization = await facturapi.Organization.UpdateLegalAsync(\n              \"5a2a307be93a2f00129ea035\",\n              new Dictionary\u003cstring, object\u003e\n              {\n                [\"name\"] = \"Skynet\",\n                [\"legal_name\"] = \"Skynet S.A. de C.V.\",\n                [\"tax_system\"] = \"601\",\n                [\"website\"] = \"www.sky.net\",\n                [\"phone\"] = \"555-555-5555\",\n                [\"address\"] = new Dictionary\u003cstring, object\u003e\n                {\n                  [\"exterior\"] = \"1414\",\n                  [\"interior\"] = \"12\",\n                  [\"zip\"] = \"44940\",\n                  [\"neighborhood\"] = \"Villa Toscana\",\n                  [\"city\"] = \"Guadalajara\",\n                  [\"municipality\"] = \"Guadalajara\",\n                  [\"state\"] = \"Jalisco\",\n                  [\"country\"] = \"México\"\n                }\n              }\n            );\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi(\"sk_user_API_KEY\");\n            $organization = $facturapi-\u003eOrganizations-\u003eupdateLegal(\n              \"5a2a307be93a2f00129ea035\", [\n                \"name\" =\u003e \"Skynet\",\n                \"legal_name\" =\u003e \"Skynet S.A. de C.V.\",\n                \"tax_system\" =\u003e \"601\",\n                \"website\" =\u003e \"www.sky.net\",\n                \"phone\" =\u003e \"555-555-5555\",\n                \"address\" =\u003e [\n                  \"exterior\" =\u003e \"1414\",\n                  \"interior\" =\u003e \"12\",\n                  \"zip\" =\u003e \"44940\",\n                  \"neighborhood\" =\u003e \"Villa Toscana\",\n                  \"city\" =\u003e \"Guadalajara\",\n                  \"municipality\" =\u003e \"Guadalajara\",\n                  \"state\" =\u003e \"Jalisco\",\n                  \"country\" =\u003e \"México\"\n                )\n              ]\n            ];\n      parameters:\n        - in: path\n          name: organization_id\n          schema:\n            type: string\n          required: true\n          description: ID de la organización\n      requestBody:\n        $ref: \"#/components/requestBodies/OrganizationEditLegal\"\n      security:\n        - \"Secret User Key\": []\n      responses:\n        \"200\":\n          description: Objeto `Organization` modificado\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Organization\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n  /organizations/{organization_id}/certificate:\n    put:\n      operationId: uploadOrganizationCertificate\n      tags:\n        - organization\n      summary: Subir certificados (CSD)\n      description: |\n        Sube los archivos del Certificado de Sello Digital (CSD) proporcionado\n        por el SAT. Esta llamada también debe usarse para reemplazar los\n        certificados existentes en caso de solicitar nuevos.\n\n        Al actualizar tus certificados se leerá el RFC y asignará\n        automáticamente a `legal.tax_id`.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/organizations/5a2a307be93a2f00129ea035/certificate \\\n              -X PUT \\\n              -H \"Authorization: Bearer sk_user_API_KEY\" \\\n              -H \"Content-Type: mutipart/form-data\" \\\n              -F 'cer=@/path/to/your/CSD.cer' \\\n              -F 'key=@/path/to/your/CSD.key' \\\n              -F 'password=CONTRASEÑA_DEL_CERTIFICADO'\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const fs = require('fs');\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_user_API_KEY');\n\n            const cerFileStream = fs.createReadStream('/path/to/your/CSD.cer');\n            const keyFileStream = fs.createReadStream('/path/to/your/CSD.key');\n\n            const organization = await facturapi.organizations.uploadCertificate(\n              '5a2a307be93a2f00129ea035',\n              cerFileStream,\n              keyFileStream,\n              'CONTRASEÑA_DEL_CERTIFICADO'\n            );\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_user_API_KEY\");\n\n            var cerFileStream = File.OpenRead(@\"C:\\path\\to\\your\\CSD.cer\");\n            var keyFileStream = File.OpenRead(@\"C:\\path\\to\\your\\CSD.key\");\n\n            var organization = await facturapi.Organization.UploadCertificateAsync(\n              \"5a2a307be93a2f00129ea035\",\n              cerFileStream,\n              keyFileStream,\n              \"CONTRASEÑA_DEL_CERTIFICADO\"\n            );\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi(\"sk_user_API_KEY\");\n\n            $organization = $facturapi-\u003eOrganizations-\u003euploadCertificate(\n              \"5a2a307be93a2f00129ea035\",\n              [\n                \"cerFile\" =\u003e \"/path/to/CSD.cer\",\n                \"keyFile\" =\u003e \"/path/to/CSD.key\",\n                \"password\" =\u003e \"mYp455w0rD1553cUr3!\"\n              ]\n            );\n      parameters:\n        - in: path\n          name: organization_id\n          schema:\n            type: string\n          required: true\n          description: ID de la organización\n      requestBody:\n        $ref: \"#/components/requestBodies/OrganizationUploadCerts\"\n      security:\n        - \"Secret User Key\": []\n      responses:\n        \"200\":\n          description: Objeto `Organization` modificado\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Organization\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n  /organizations/{organization_id}/logo:\n    put:\n      operationId: uploadOrganizationLogo\n      tags:\n        - organization\n      summary: Subir logotipo\n      description: |\n        Sube el logotipo de la organización que será colocado en el PDF y en\n        los correos que se envían al cliente con la factura adjunta.\n\n        El archivo debe ser una imagen en formato JPG o PNG y tener un tamaño\n        no mayor a 500 KB. Las dimensiones recomendadas son 800 × 500px.\n\n        Si la organización ya tiene un logotipo, esta llamada reemplaza el\n        logotipo anterior.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/organizations/5a2a307be93a2f00129ea035/logo \\\n              -X PUT \\\n              -H \"Authorization: Bearer sk_user_API_KEY\" \\\n              -H \"Content-Type: mutipart/form-data\" \\\n              -F 'file=@/path/to/your/logo.jpg'\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const fs = require('fs');\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_user_API_KEY');\n\n            const fileStream = fs.createReadStream('/path/to/your/logo.jpg');\n            const organization = await facturapi.organizations.uploadLogo(\n              '5a2a307be93a2f00129ea035',\n              fileStream\n            );\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_user_API_KEY\");\n\n            var fileStream = File.OpenRead(@\"C:\\path\\to\\your\\logo.jpg\");\n\n            var organization = await facturapi.Organization.UploadLogoAsync(\n              \"5a2a307be93a2f00129ea035\",\n              fileStream\n            );\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi(\"sk_user_API_KEY\");\n\n            $organization = $facturapi-\u003eOrganizations-\u003euploadLogo(\n              \"5a2a307be93a2f00129ea035\",\n              \"/path/to/logo.jpg\"\n            ));\n      parameters:\n        - in: path\n          name: organization_id\n          schema:\n            type: string\n          required: true\n          description: ID de la organización\n      requestBody:\n        $ref: \"#/components/requestBodies/OrganizationUploadLogo\"\n      security:\n        - \"Secret User Key\": []\n      responses:\n        \"200\":\n          description: Objeto `Organization` modificado\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Organization\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n  /organizations/{organization_id}/customization:\n    put:\n      operationId: editOrganizationCustomization\n      tags:\n        - organization\n      summary: Editar personalización\n      description: |\n        Actualiza la información relacionada con la identidad o branding de la organización.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/organizations/5a2a307be93a2f00129ea035/customization \\\n              -X PUT \\\n              -H \"Authorization: Bearer sk_user_API_KEY\" \\\n              -H \"Content-Type: application/json\" \\\n              -d '{\n                    \"color\": \"#BADA55\",\n                    \"pdf_extra\": {\n                      \"codes\": false,\n                      \"product_key\": true\n                    }\n                }'\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_user_API_KEY');\n\n            const organization = await facturapi.organizations.updateCustomization(\n              '5a2a307be93a2f00129ea035',\n              {\n                color: '#BADA55',\n                pdf_extra: {\n                  codes: false,\n                  product_key: true\n                }\n              }\n            );\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_user_API_KEY\");\n\n            var organization = await facturapi.Organization.UpdateCustomizationAsync(\n              \"5a2a307be93a2f00129ea035\",\n              new Dictionary\u003cstring, object\u003e\n              {\n                [\"color\"] = \"#BADA55\",\n                [\"pdf_extra\"] = new Dictionary\u003cstring, object\u003e\n                {\n                  [\"codes\"] = false,\n                  [\"product_key\"] = true\n                }\n              }\n            );\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi(\"sk_user_API_KEY\");\n\n            $organization = $facturapi-\u003eOrganizations-\u003eupdateCustomization(\n              \"5a2a307be93a2f00129ea035\",\n              array(\n                \"color\" =\u003e \"#BADA55\",\n                \"pdf_extra\" =\u003e array(\n                  \"codes\" =\u003e false,\n                  \"product_key\" =\u003e true\n                )\n              )\n            );\n      parameters:\n        - in: path\n          name: organization_id\n          schema:\n            type: string\n          required: true\n          description: ID de la organización\n      requestBody:\n        $ref: \"#/components/requestBodies/OrganizationEditCustomization\"\n      security:\n        - \"Secret User Key\": []\n      responses:\n        \"200\":\n          description: Objeto `Organization` modificado\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Organization\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n  /organizations/{organization_id}/receipts:\n    put:\n      operationId: editOrganizationReceiptsSettings\n      tags:\n        - organization\n      summary: Editar config. recibos\n      description: |\n        Actualiza la configuración de recibos de la organización.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/organizations/5a2a307be93a2f00129ea035/receipts \\\n              -X PUT \\\n              -H \"Authorization: Bearer sk_user_API_KEY\" \\\n              -H \"Content-Type: application/json\" \\\n              -d '{\n                    \"invoicing_period\": \"month\",\n                    \"duration_days\": 14,\n                    \"next_folio_number\": 100,\n                    \"ask_address\": \"hidden\"\n                }'\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_user_API_KEY');\n\n            const organization = await facturapi.organizations.updateReceiptSettings(\n              '5a2a307be93a2f00129ea035',\n              {\n                invoicing_period: \"month\",\n                duration_days: 14,\n                next_folio_number: 100,\n                ask_address: 'hidden'\n              }\n            );\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_user_API_KEY\");\n\n            var organization = await facturapi.Organization.UpdateReceiptSettingsAsync(\n              \"5a2a307be93a2f00129ea035\",\n              new Dictionary\u003cstring, object\u003e\n              {\n                [\"invoicing_period\"] = \"month\",\n                [\"duration_days\"] = 14,\n                [\"next_folio_number\"] = 100,\n                [\"ask_address\"] = \"hidden\"\n              }\n            );\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi(\"sk_user_API_KEY\");\n\n            $organization = $facturapi-\u003eOrganizations-\u003eupdateReceiptSettings(\n              \"5a2a307be93a2f00129ea035\",\n              [\n                \"invoicing_period\" =\u003e \"month\",\n                \"duration_days\" =\u003e 14,\n                \"next_folio_number\" =\u003e 100,\n                \"ask_address\" =\u003e \"hidden\"\n              ]\n            );\n      parameters:\n        - in: path\n          name: organization_id\n          schema:\n            type: string\n          required: true\n          description: ID de la organización\n      requestBody:\n        $ref: \"#/components/requestBodies/OrganizationEditReceiptsSettings\"\n      security:\n        - \"Secret User Key\": []\n      responses:\n        \"200\":\n          description: Objeto `Organization` modificado\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Organization\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n  /organizations/domain-check:\n    get:\n      operationId: checkDomainAvailability\n      tags:\n        - organization\n      summary: Revisar dominio disponible\n      description: Revisa si un identificador está disponible para elegir como dominio para el portal de autofactura.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/organizations/domain-check?domain=empresa-demo \\\n              -H \"Authorization: Bearer sk_user_API_KEY\"\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n\n            const organization = await facturapi.organizations.checkDomainIsAvailable({\n              domain: 'empresa-demo'\n            });\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_test_API_KEY\");\n            var organization = await facturapi.Organization.CheckDomainIsAvailableAsync(\n              new Dictionary\u003cstring, object\u003e\n              {\n                [\"domain\"] = \"empresa-demo\"\n              }\n            );\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_test_API_KEY\" );\n            $organization = $facturapi-\u003eOrganizations-\u003echeckDomainIsAvailable(\n              [\"domain\" =\u003e \"empresa-demo\"]\n            );\n      parameters:\n        - in: query\n          name: domain\n          schema:\n            $ref: \"#/components/schemas/DomainField\"\n      security:\n        - \"Secret User Key\": []\n      responses:\n        \"200\":\n          description: Objeto `Organization`\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  available:\n                    type: boolean\n                    example: true\n                    description: Indica si el dominio está diponible\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n  /organizations/{organization_id}/domain:\n    put:\n      operationId: editOrganizationDomain\n      tags:\n        - organization\n      summary: Elegir dominio de autofactura\n      description: |\n        Elige el dominio que utilizará esta organización en su micrositio de\n        autofactura. Una vez elegido el dominio, deberás ponerte en contacto\n        con nosotros si necesitas cambiarlo.\n\n        El dominio que elijas será el que aparecerá en el campo\n        `self_invoice_url` al crear un nuevo recibo, de la siguiente manera:\n\n        `https://factura.space/{DOMAIN}/{RECEIPT_KEY}`\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/organizations/5a2a307be93a2f00129ea035/domain \\\n              -X PUT \\\n              -H \"Authorization: Bearer sk_user_API_KEY\" \\\n              -H \"Content-Type: application/json\" \\\n              -d '{\n                    \"domain\": \"empresa-demo\"\n                }'\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_user_API_KEY');\n\n            const organization = await facturapi.organizations.updateDomain(\n              '5a2a307be93a2f00129ea035',\n              { domain: 'empresa-demo' }\n            );\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_user_API_KEY\");\n\n            var organization = await facturapi.Organization.UpdateDomainAsync(\n              \"5a2a307be93a2f00129ea035\",\n              new Dictionary\u003cstring, object\u003e\n              {\n                [\"domain\"] = \"empresa-demo\"\n              }\n            );\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi(\"sk_user_API_KEY\");\n\n            $organization = $facturapi-\u003eOrganizations-\u003eupdateDomain(\n              \"5a2a307be93a2f00129ea035\",\n              array( \"domain\" =\u003e \"empresa-demo\" )\n            );\n      parameters:\n        - in: path\n          name: organization_id\n          schema:\n            type: string\n          required: true\n          description: ID de la organización\n      requestBody:\n        $ref: \"#/components/requestBodies/OrganizationEditDomain\"\n      security:\n        - \"Secret User Key\": []\n      responses:\n        \"200\":\n          description: Objeto `Organization` modificado\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Organization\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n  /organizations/{organization_id}:\n    get:\n      operationId: getOrganization\n      tags:\n        - organization\n      summary: Obtener organización por ID\n      description: Regresa el objeto 'Organization' relacionado al `id` especificado.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/organizations/5a2a307be93a2f00129ea035 \\\n              -H \"Authorization: Bearer sk_user_API_KEY\"\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n            const organization = await facturapi.organizations.retrieve(\n              '5a2a307be93a2f00129ea035'\n            );\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_test_API_KEY\");\n            var organization = await facturapi.Organization.RetrieveAsync(\n              \"5a2a307be93a2f00129ea035\"\n            );\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_test_API_KEY\" );\n            $organization = $facturapi-\u003eOrganizations-\u003eretrieve(\"5a2a307be93a2f00129ea035\");\n      parameters:\n        - in: path\n          name: organization_id\n          schema:\n            type: string\n          required: true\n          description: ID de la organización\n      security:\n        - \"Secret User Key\": []\n      responses:\n        \"200\":\n          description: Objeto `Organization`\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Organization\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n    delete:\n      operationId: deleteOrganization\n      tags:\n        - organization\n      summary: Eliminar organización\n      description: |\n        Elimina la organización de tu cuenta de Facturapi. Una vez eliminada,\n        ya no podrás acceder a sus recursos, tales como clientes, productos,\n        facturas, recibos o retenciones.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/organizations/5a2a307be93a2f00129ea035 \\\n              -X DELETE \\\n              -H \"Authorization: Bearer sk_user_API_KEY\"\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_user_API_KEY');\n            const organization = await facturapi.organizations.del(\n              '5a2a307be93a2f00129ea035'\n            );\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_user_API_KEY\");\n            var organization = await facturapi.Organization.DeleteAsync(\n              \"5a2a307be93a2f00129ea035\"\n            );\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_user_API_KEY\" );\n            $organization = $facturapi-\u003eOrganizations-\u003edelete(\n              \"5a2a307be93a2f00129ea035\"\n            );\n      parameters:\n        - in: path\n          name: organization_id\n          schema:\n            type: string\n          required: true\n          description: ID del objeto a eliminar\n      security:\n        - \"Secret User Key\": []\n      responses:\n        \"200\":\n          description: Objeto `Organization` eliminado correctamente\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Organization\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n  /organizations/{organization_id}/apikeys:\n    get:\n      operationId: getOrganizationApiKeys\n      tags:\n        - organization\n      summary: Obtener Api Keys\n      description: Obtiene las llaves secretas de ambiente Test y Live de la organización.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/organizations/5a2a307be93a2f00129ea035/apikeys \\\n              -H \"Authorization: Bearer sk_user_API_KEY\"\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n\n            const apiKeys = await facturapi.organizations.getApiKeys(\n              '5a2a307be93a2f00129ea035'\n            );\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_test_API_KEY\");\n            var apiKeys = await facturapi.Organization.GetApiKeysAsync(\n              \"5a2a307be93a2f00129ea035\"\n            );\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_test_API_KEY\" );\n            $organization = $facturapi-\u003eOrganizations-\u003egetApiKeys(\n              \"5a2a307be93a2f00129ea035\"\n            );\n      parameters:\n        - in: path\n          name: organization_id\n          schema:\n            type: string\n          required: true\n          description: ID de la organización\n      security:\n        - \"Secret User Key\": []\n      responses:\n        \"200\":\n          description: Objeto `Organization`\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OrganizationApiKeys\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n\n  /check:\n    get:\n      tags:\n        - tools\n      summary: Health check (Pulso)\n      description: Indica el estatus de disponibilidad de la API.\n      security:\n        - \"Secret Live Key\": []\n        - \"Secret Test Key\": []\n      responses:\n        \"200\":\n          description: La API está operando con normalidad.\n          content:\n            application/json:\n              schema:\n                description: a\n                type: object\n                properties:\n                  ok:\n                    type: boolean\n                    example: true\n        \"401\":\n          description: Error de autenticación. Asegúrate de estar usando tu llave secreta.\n        \"502\":\n          description: Servicio temporalmente no disponible.\n  /tools/tax_id_validation:\n    get:\n      tags:\n        - tools\n      summary: Validar RFC\n      description: |\n        Consulta el estado de un RFC en la lista de **EFOS** (Empresas que\n        Facturan Operaciones Simuladas). Al aparecer en esta lista, el RFC es o\n        fue sospechoso de incurrir en simulación de operaciones fiscales\n        (empresas factureras).\n\n        La respuesta (detallada más abajo) incluye los resultados de esta\n        validación. Se incluye la propiedad\n        booleana `is_valid`, que Facturapi resuelve interpretando la respuesta.\n        Un valor de `true` para esta propiedad indica que el RFC no tiene asuntos\n        por resolver y está libre de problemas; y lo contrario para `false`.\n        Adicionalmente puedes consultar la propiedad data para ver los valores\n        en bruto de la consulta al SAT.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/tools/tax_id_validation?tax_id=BBA830831LJ2 \\\n              -H \"Authorization: Bearer sk_test_API_KEY\"\n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n\n            const validation = await facturapi.tools.validateTaxId('BBA830831LJ2');\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_test_API_KEY\");\n            \n            var customer = await facturapi.Tools.ValidateTaxIdAsync(\"BBA830831LJ2\");\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_test_API_KEY\" );\n            \n            $customer = $facturapi-\u003eTools-\u003evalidateTaxId(\"BBA830831LJ2\");\n      parameters:\n        - in: query\n          name: tax_id\n          required: true\n          schema:\n            type: string\n            description: RFC a validar\n            example: BBA830831LJ2\n      security:\n        - \"Secret Live Key\": []\n        - \"Secret Test Key\": []\n      responses:\n        \"200\":\n          description: Resultado de la validación\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaxIdValidationResult\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n  \n  /catalogs/products:\n    get:\n      tags:\n        - sat_keys\n      summary: Producto/Servicio\n      description: Busca en el catálogo Productos/Servicios del SAT, el cual contiene la clave a incluir en la factura.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/catalogs/products?q=ukelele \\\n              -H \"Authorization: Bearer sk_test_API_KEY\" \n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n\n            const searchResult = await facturapi.catalogs.searchProducts({\n              q: 'ukelele'\n            });\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_test_API_KEY\");\n\n            var searchResult = await facturapi.Catalog.SearchProducts(\n              new Dictionary\u003cstring, object\u003e\n              {\n                [\"q\"] = \"ukelele\"\n              }\n            );\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_test_API_KEY\" );\n\n            $result = $facturapi-\u003eCatalogs-\u003esearchProducts([\n              \"q\" =\u003e \"ukelele\"\n            ]);\n      parameters:\n        - in: query\n          name: q\n          schema:\n            type: string\n          description: Consulta. Texto a buscar en la descripción de la categoría.\n        - $ref: \"#/components/parameters/SearchPage\"\n        - $ref: \"#/components/parameters/SearchLimit\"\n      security:\n        - \"Secret Live Key\": []\n        - \"Secret Test Key\": []\n      responses:\n        \"200\":\n          description: Resultado de la búsqueda\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProductCatalogSearchResult\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\n  /catalogs/units:\n    get:\n      tags:\n        - sat_keys\n      summary: Unidades de medida\n      description: Busca en el catálogo de Unidades de Medida del SAT.\n      x-codeSamples:\n        - lang: Bash\n          label: cURL\n          source: |\n            curl https://www.facturapi.io/v1/catalogs/units?q=pulgada \\\n              -H \"Authorization: Bearer sk_test_API_KEY\" \n        - lang: JavaScript\n          label: Node.js\n          source: |\n            const Facturapi = require('facturapi');\n            const facturapi = new Facturapi('sk_test_API_KEY');\n\n            const searchResult = await facturapi.catalogs.searchUnits({\n              q: 'pulgada'\n            });\n        - lang: csharp\n          label: C#\n          source: |\n            var facturapi = new FacturapiClient(\"sk_test_API_KEY\");\n\n            var searchResult = await facturapi.Catalog.SearchUnits(\n              new Dictionary\u003cstring, object\u003e\n              {\n                [\"q\"] = \"pulgada\"\n              }\n            );\n        - lang: PHP\n          source: |\n            $facturapi = new Facturapi( \"sk_test_API_KEY\" );\n\n            $result = $facturapi-\u003eCatalogs-\u003esearchUnits([\n              \"q\" =\u003e \"pulgada\"\n            ]);\n      parameters:\n        - in: query\n          name: q\n          schema:\n            type: string\n          description: Consulta. Texto a buscar en la descripción de la unidad de medida.\n        - $ref: \"#/components/parameters/SearchPage\"\n        - $ref: \"#/components/parameters/SearchLimit\"\n      security:\n        - \"Secret Live Key\": []\n        - \"Secret Test Key\": []\n      responses:\n        \"200\":\n          description: Resultado de la búsqueda\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnitCatalogSearchResult\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthenticated\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"500\":\n          $ref: \"#/components/responses/UnexpectedError\"\ncomponents:\n  responses:\n    BadRequest:\n      description: Error en parámetros de la petición\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GenericError\"\n    Unauthenticated:\n      description: Error de autenticación\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GenericError\"\n    NotFound:\n      description: No se encontró el recurso especificado.\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GenericError\"\n    UnexpectedError:\n      description: Error inesperado\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GenericError\"\n\n  requestBodies:\n    CustomerCreate:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/CustomerCreateInput\"\n    CustomerEdit:\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/CustomerProperties\"\n    ProductCreate:\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/ProductRequiredProperties\"\n              - $ref: \"#/components/schemas/ProductProperties\"\n    ProductEdit:\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: \"#/components/schemas/ProductProperties\"\n    InvoiceCreate:\n      content:\n        application/json:\n          schema:\n            oneOf:\n              - $ref: \"#/components/schemas/InvoiceIngresoInput\"\n              - $ref: \"#/components/schemas/InvoiceEgresoInput\"\n              - $ref: \"#/components/schemas/InvoicePagoInput\"\n              - $ref: \"#/components/schemas/InvoiceNominaInput\"\n              - $ref: \"#/components/schemas/InvoiceTrasladoInput\"\n    ReceiptCreate:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ReceiptInput\"\n    ReceiptInvoice:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/InvoiceReceiptInput\"\n    ReceiptCreateGlobalInvoice:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/GlobalInvoiceInput\"\n    RetentionCreate:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/RetentionInput\"\n    OrganizationCreate:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/OrganizationCreateInput\"\n    OrganizationEditLegal:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/OrganizationLegalInput\"\n    OrganizationUploadCerts:\n      content:\n        multipart/form-data:\n          schema:\n            $ref: \"#/components/schemas/OrganizationCertsInput\"\n    OrganizationUploadLogo:\n      content:\n        multipart/form-data:\n          schema:\n            $ref: \"#/components/schemas/OrganizationLogoInput\"\n    OrganizationEditCustomization:\n      content:\n        multipart/form-data:\n          schema:\n            $ref: \"#/components/schemas/OrganizationCustomizationInput\"\n    OrganizationEditReceiptsSettings:\n      content:\n        multipart/form-data:\n          schema:\n            $ref: \"#/components/schemas/OrganizationReceiptsInput\"\n    OrganizationEditDomain:\n      content:\n        multipart/form-data:\n          schema:\n            $ref: \"#/components/schemas/OrganizationDomainInput\"\n\n  parameters:\n    SearchDate:\n      in: query\n      name: date\n      style: deepObject\n      schema:\n        $ref: \"#/components/schemas/DateRange\"\n      description: Objeto con rango de fechas solicitado.\n    SearchPage:\n      in: query\n      name: page\n      schema:\n        type: integer\n        minimum: 1\n      description: Página de resultados a regresar, empezando desde la página 1.\n    SearchLimit:\n      in: query\n      name: limit\n      schema:\n        type: integer\n        minimum: 1\n        maximum: 50\n      description: Número del 1 al 50 que representa la cantidad máxima de resultados a regresar con motivos de paginación.\n\n  schemas:\n    DateRange:\n      type: object\n      properties:\n        gt:\n          type: string\n          format: date-time\n          title: Greater than\n          description: Límite inferior exclusivo del rango de fechas a solicitar.\n        gte:\n          type: string\n          format: date-time\n          title: Greater than or equals\n          description: Límite inferior inclusivo del rango de fechas a solicitar.\n        lt:\n          type: string\n          format: date-time\n          title: Lesser than\n          description: Límite superior exclusivo del rango de fechas a solicitar.\n        lte:\n          type: string\n          format: date-time\n          title: Lesser than or equals\n          description: Límite superior inclusivo del rango de fechas a solicitar.\n    GenericError:\n      type: object\n      properties:\n        message:\n          type: string\n          title: Descripción del error\n          description: Indica qué salió mal y puede incluir una sugerencia sobre cómo solucionar el error.\n\n    # Common base objects\n    SearchResult:\n      type: object\n      properties:\n        page:\n          type: integer\n          example: 1\n          title: Página\n          description: Número de página de resultados\n        total_pages:\n          type: integer\n          example: 1\n          title: Páginas totales\n          description: Número total de páginas de resultados\n        total_results:\n          type: integer\n          example: 1\n          title: Resultados totales\n          description: Número de elementos individuales en todas las páginas de resultados\n    ResourceAutoGeneratedProps:\n      type: object\n      properties:\n        id:\n          type: string\n          description: ID del objeto\n          example: \"590ce6c56d04f840aa8438af\"\n        created_at:\n          type: string\n          format: date-time\n          description: Fecha de registro\n          example: \"2017-05-05T20:55:33.468Z\"\n        livemode:\n          type: boolean\n          description: Si el valor es `true`, indica que el objeto fue creado en ambiente Live; o si es `false`, en ambiente Test.\n          example: false\n\n    # Global objects\n    TaxIdValidationResult:\n      type: object\n      properties:\n        efos:\n          type: object\n          description: |\n            Resultado de la validación en la lista de Empresas que\n            Facturan Operaciones Simuladas del SAT.\n          properties:\n            is_valid:\n              type: boolean\n              example: true\n              description: |\n                Indica si el RFC tiene algún asunto relacionado con esta lista.\n                `true`: El RFC no está en la lista de EFOS o su situación fue\n                apelada y resultó favorable. `false`: El RFC está registrado como\n                “Presunto” o “Definitivo” en la lista de EFOS.\n            data:\n              type: object\n              description: |\n                Objeto con el resultado de la búqueda ante el SAT.\n                Toda la información contenida en este objeto proviene del SAT.\n              properties:\n                mensaje:\n                  type: string\n                  description: |\n                    Disponible sólo cuando el RFC no fue encontrado en la lista,\n                    lo cual es bueno.\n                fechaLista:\n                  type: string\n                  example: Información actualizada al 17 de septiembre de 2021\n                  description: Texto que indica la fecha de actualización de la lista.\n                detalles:\n                  type: array\n                  description: Arreglo con los resultados de la búsqueda en la lista de EFOS.\n                  items:\n                    type: object\n                    properties:\n                      rfc:\n                        type: string\n                        example: NOR170627727\n                        description: El RFC consultado, a manera de confirmación.\n                      razonSocial:\n                        type: string\n                        example: NORMANDIA FERRE, S.A. DE C.V.\n                        description: Razón social del contribuyente.\n                      situacionContribuyente:\n                        type: string\n                        example: Definitivo\n                        description: |\n                          Texto que indica la situación actual. Consulta\n                          [esta tabla](#situación-del-contribuyente) para ver\n                          el detalle de los distintos valores.\n                      numFechaPresuncion:\n                        type: string\n                        example: 500-05-2020-23758 de fecha 03 de noviembre de 2020\n                        description: Texto con identificador y fecha del reporte de presunción.\n                      pubFechaSatPresuntos:\n                        type: string\n                        format: \"DD/MM/YYYY\"\n                        example:  03/11/2020\n                        description: Fecha de publicación de presunción.\n                      numGlobalPresuncion:\n                        type: string\n                        example: 500-05-2020-23758 de fecha 03 de noviembre de 2020\n                        description: Texto con identificador y fecha de publicación en el listado global de presunción.\n                      pubFechaDofPresuntos:\n                        type: string\n                        format: \"DD/MM/YYYY\"\n                        example: 18/11/2020\n                        description: Fecha de publicación en el Diario Oficial de la Federación (DOF).\n                      pubSatDefinitivos: \n                        type: string\n                        example: 500-05-2021-151\n                        description: Identificador de la publicación de estado “Definitivo”.\n                      pubDofDefinitivos: \n                        type: string\n                        format: \"DD/MM/YYYY\"\n                        example: 25/05/2021\n                        description: Fecha de la publicación de estado “Definitivo” en el DOF.\n                      numFechaSentFav:\n                        type: string\n                        example: 500-05-2021-15156 de fecha 25 de mayo de 2021\n                        description: Texto con identificador y fecha de sentencia favorable.\n                      pubSatSentFav: \n                        type: string\n                        example: 08/06/2021\n                        format: \"DD/MM/YYYY\"\n                        description: Fecha de sentencia favorable\n                      \n    ProductCatalogResult:\n      type: object\n      properties:\n        key:\n          type: string\n          description: Clave del catálogo\n          example: 60131324\n        description:\n          type: string\n          description: Descripción\n          example: Ukelele\n        score:\n          type: number\n          description: |\n            Número del 0 al 1 que representa el nivel de coincidencia del\n            resultado con respecto a la consulta de búsqueda.\n          example: 0.8\n    UnitCatalogResult:\n      type: object\n      properties:\n        key:\n          type: string\n          description: Clave del catálogo\n          example: INH\n        description:\n          type: string\n          description: Descripción\n          example: Pulgada\n        score:\n          type: number\n          description: |\n            Número del 0 al 1 que representa el nivel de coincidencia del\n            resultado con respecto a la consulta de búsqueda.\n          example: 0.9\n\n    ProductCatalogSearchResult:\n      allOf:\n        - $ref: \"#/components/schemas/SearchResult\"\n        - type: object\n          properties:\n            data:\n              type: array\n              items:\n                $ref: \"#/components/schemas/ProductCatalogResult\"\n    UnitCatalogSearchResult:\n      allOf:\n        - $ref: \"#/components/schemas/SearchResult\"\n        - type: object\n          properties:\n            data:\n              type: array\n              items:\n                $ref: \"#/components/schemas/UnitCatalogResult\"\n\n    \n    LocalTax:\n      type: object\n      required:\n        - rate\n        - type\n      properties:\n        rate:\n          type: number\n          description: Tasa del impuesto\n        type:\n          type: string\n          description: Nombre del impuesto. Texto libre.\n        withholding:\n          type: boolean\n          default: false\n          description: Indica si se trata de un impuesto retenido (`true`), o un impuesto trasladado (`false`)\n    BaseTax:\n      title: Tax\n      type: object\n      discriminator:\n        propertyName: type\n        mapping:\n          IVA: \"#/components/schemas/BaseTax\"\n          ISR: \"#/components/schemas/BaseTax\"\n          IEPS: \"#/components/schemas/IepsTax\"\n      properties:\n        rate:\n          type: number\n          default: 0.16\n          description: Tasa del impuesto\n        type:\n          type: string\n          default: IVA\n          description: Tipo de impuesto.\n          enum:\n            - IVA\n            - ISR\n            - IEPS\n        factor:\n          type: string\n          default: Tasa\n          enum:\n            - Tasa\n            - Cuota\n            - Exento\n          description: Tipo factor\n        withholding:\n          type: boolean\n          default: false\n          description: Indica si se trata de un impuesto retenido (`true`), o un impuesto trasladado (`false`)\n    IepsTax:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/BaseTax\"\n        - type: object\n          properties:\n            ieps_mode:\n              type: string\n              default: sum_before_taxes\n              enum:\n                - sum_before_taxes\n                - break_down\n                - unit\n              description: |\n                Indica la manera de cobrar el impuesto, y puede tener los valores:\n\n                `\"sum_before_taxes\"`: Aplica primero el IEPS al subtotal y usa el resultado como base del resto de impuestos en el producto.\n\n                `\"break_down\"`: Cobra y desgloza el IEPS al mismo nivel que el resto de los impuestos en el producto.\n\n                `\"unit\"`: Aplica el IEPS antes del precio unitario, y usa el precio unitario original como base para el resto de impuestos.\n\n                Consulta con tu contador qué caso aplica para tu giro de empresa y producto.\n\n    Stamp:\n      type: object\n      description: Información sobre el timbre fiscal digital agregado por el PAC.\n      properties:\n        signature:\n          type: string\n          description: Sello digital del comprobante fiscal.\n        date:\n          type: string\n          format: date-time\n          description: Fecha de timbrado en formato ISO8601 (UTC String).\n        sat_cert_number:\n          type: string\n          description: Número de serie del certificado del SAT usado para timbrar.\n        sat_signature:\n          type: string\n          description: Sello digital del timbre fiscal digital.\n\n    LineItem:\n      type: object\n      properties:\n        quantity:\n          type: number\n          description: Cantidad de unidades incluídas del mismo concepto.\n          example: 1\n        discount:\n          type: number\n          description: Monto total de descuento aplicado a este concepto.\n          example: 0\n        product:\n          $ref: \"#/components/schemas/LineItemProduct\"\n          # description: Objeto con información del producto o servicio facturado.\n    LineItemInput:\n      title: LineItem\n      required:\n        - product\n      type: object\n      description: Conceptos incluidos en el documento\n      properties:\n        quantity:\n          type: number\n          default: 1\n          description: Cantidad de unidades incluídas del mismo concepto.\n          example: 1\n        discount:\n          type: number\n          description: Monto total de descuento aplicado a este concepto.\n          default: 0\n          example: 0\n        product:\n          description: Objeto con información del producto o servicio facturado.\n          oneOf:\n            - $ref: \"#/components/schemas/LineItemProductInput\"\n            - type: string\n              title: product_id\n              description: ID de un producto previamente registrado en Facturapi\n        customs_keys:\n          type: array\n          items:\n            type: string\n          description: Números de pedimento asociados a este concepto.\n        complement:\n          type: string\n          format: xml\n          description: Código XML de tu complemento. Recuerda que debes añadir el prefijo y las URLs usando el parámetro namespaces.\n        parts:\n          type: array\n          items:\n            $ref: \"#/components/schemas/PartInput\"\n    LineItemTrasladoInput:\n      title: LineItem\n      required:\n        - product\n      type: object\n      description: Conceptos incluidos en el documento\n      properties:\n        quantity:\n          type: number\n          default: 1\n          description: Cantidad de unidades incluídas del mismo concepto.\n          example: 1\n        product:\n          description: Objeto con información del producto o servicio facturado.\n          oneOf:\n            - $ref: \"#/components/schemas/LineItemTrasladoProductInput\"\n            - type: string\n              title: product_id\n              description: ID de un producto previamente registrado en Facturapi\n        customs_keys:\n          type: array\n          items:\n            type: string\n          description: Números de pedimento asociados a este concepto.\n        complement:\n          type: string\n          format: xml\n          description: Código XML de tu complemento. Recuerda que debes añadir el prefijo y las URLs usando el parámetro namespaces.\n        parts:\n          type: array\n          items:\n            $ref: \"#/components/schemas/PartInput\"\n\n    CustomComplementProperties:\n      title: CustomComplement\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - custom\n          description: Tipo de complemento.\n        data:\n          type: string\n          format: xml\n          description: Código XML de tu complemento tal cual como quieres que se inserte en el XML. Debe contener sólamente un nodo XML raíz.\n    CustomComplementInput:\n      title: CustomComplement\n      allOf:\n        - type: object\n          required:\n            - type\n            - data\n        - $ref: \"#/components/schemas/CustomComplementProperties\"\n\n    NominaComplementDataInput:\n      title: NominaComplementData\n      description: Objeto con la información del complemento de nómina.\n      allOf:\n        - type: object\n          required:\n            - fecha_inicial_pago\n            - fecha_final_pago\n            - num_dias_pagados\n            - receptor\n            - percepciones\n        - $ref: \"#/components/schemas/NominaComplementDataDirectProperties\"\n        - $ref: \"#/components/schemas/NominaComplementDataNestedInput\"\n    NominaComplementDataProperties:\n      description: Complemento de Nómina.\n      allOf:\n        - $ref: \"#/components/schemas/NominaComplementDataDirectProperties\"\n        - $ref: \"#/components/schemas/NominaComplementDataNestedProperties\"\n    NominaComplementDataDirectProperties:\n      type: object\n      properties:\n        tipo_nomina:\n          type: string\n          default: O\n          enum:\n            - O\n            - E\n          description: |\n            Tipo de nómina.\n            - `“O”` (Ordinaria): Cuando corresponde a un pago que se realiza de manera habitual, como sueldos.\n            - `“E”` (Extraordinaria): Para pagos fuera de lo habitual, como liquidaciones, aguinaldos o bonos.\n        fecha_pago:\n          type: string\n          format: date\n          default: now\n          description: Fecha de pago de la nómina al trabajador.\n        fecha_inicial_pago:\n          type: string\n          format: date\n          description: Fecha inicial del periodo de pago.\n        fecha_final_pago:\n          type: string\n          format: date\n          description: Fecha final del periodo de pago.\n        num_dias_pagados:\n          type: number\n          minimum: 0\n          exclusiveMinimum: true\n          description: Número de días pagados. Puede ser entero o fracción.\n    NominaComplementDataNestedInput:\n      type: object\n      properties:\n        emisor:\n          $ref: \"#/components/schemas/NominaEmisorProperties\"\n        receptor:\n          $ref: \"#/components/schemas/NominaReceptorInput\"\n        percepciones:\n          $ref: \"#/components/schemas/NominaPercepcionesInput\"\n        deducciones:\n          type: array\n          description: Arreglo de objetos donde se expresan las deducciones aplicables.\n          items:\n            $ref: \"#/components/schemas/NominaDeduccionInput\"\n        otros_pagos:\n          type: array\n          description: Arreglo de objetos para expresar otros pagos aplicables.\n          items:\n            title: OtroPago\n            allOf:\n              - $ref: \"#/components/schemas/NominaOtroPagoInput\"\n              - type: object\n                properties:\n                  compensacion_saldos_a_favor:\n                    $ref: \"#/components/schemas/NominaCompensacionInput\"\n        incapacidades:\n          type: array\n          description: Arreglo de objetos con información de incapacidades.\n          items:\n            $ref: \"#/components/schemas/NominaIncapacidadInput\"\n    NominaComplementDataNestedProperties:\n      type: object\n      properties:\n        emisor:\n          $ref: \"#/components/schemas/NominaEmisorProperties\"\n        receptor:\n          $ref: \"#/components/schemas/NominaReceptorProperties\"\n        percepciones:\n          $ref: \"#/components/schemas/NominaPercepcionesProperties\"\n        deducciones:\n          type: array\n          description: Arreglo de objetos donde se expresan las deducciones aplicables.\n          items:\n            $ref: \"#/components/schemas/NominaDeduccionProperties\"\n        otros_pagos:\n          type: array\n          description: Arreglo de objetos para expresar otros pagos aplicables.\n          items:\n            allOf:\n              - $ref: \"#/components/schemas/NominaOtroPagoDirectProperties\"\n              - type: object\n                properties:\n                  compensacion_saldos_a_favor:\n                    $ref: \"#/components/schemas/NominaCompensacionProperties\"\n        incapacidades:\n          type: array\n          description: Arreglo de objetos con información de incapacidades.\n          items:\n            $ref: \"#/components/schemas/NominaIncapacidadProperties\"\n\n    NominaIncapacidadInput:\n      title: Incapacidad\n      allOf:\n        - type: object\n          required:\n            - dias_incapacidad\n            - tipo_incapacidad\n        - $ref: \"#/components/schemas/NominaIncapacidadProperties\"\n    NominaIncapacidadProperties:\n      type: object\n      properties:\n        dias_incapacidad:\n          type: integer\n          description: Número de días enteros que el trabajador se incapacitó en el periodo.\n        tipo_incapacidad:\n          type: string\n          description: Clave del catálogo [Tipo de Incapacidad](#tipo-de-incapacidad).\n        importe_monetario:\n          type: number\n          description: Monto del importe monetario de la incapacidad.\n    NominaOtroPagoInput:\n      title: OtroPago\n      allOf:\n        - type: object\n          required:\n            - tipo_otro_pago\n            - clave\n            - importe\n        - $ref: \"#/components/schemas/NominaOtroPagoDirectProperties\"\n        - type: object\n          properties:\n            compensacion_saldos_a_favor:\n              $ref: \"#/components/schemas/NominaCompensacionInput\"\n    NominaOtroPagoDirectProperties:\n      type: object\n      properties:\n        tipo_otro_pago:\n          type: string\n          description: Clave del catálogo [Tipo de Otro Pago](#tipo-de-otro-pago).\n        clave:\n          type: string\n          minLength: 3\n          maxLength: 15\n          description: Clave de otro pago de nómina propia de la contabilidad de cada patrón.\n        concepto:\n          type: string\n          description: Descripción alternativa correspondiente a la clave utilizada.\n        importe:\n          type: number\n          description: Importe por concepto de otro pago.\n        subsidio_causado:\n          type: number\n          description: |\n            Subsudio causado conforme a la tabla del subsidio para el empleo\n            publicada en el Anexo 8 de la Resolución Miscelánea Fiscal vigente.\n\n            Este valor será insertado dentro del nodo `SubsidioAlEmpleo`, y es\n            requerido cuando el valor de `tipo_otro_pago` es `\"002\"`.\n    NominaCompensacionInput:\n      allOf:\n        - type: object\n          required:\n            - saldo_a_favor\n            - ano\n            - remanente_sal_fav\n        - $ref: \"#/components/schemas/NominaCompensacionProperties\"\n    NominaCompensacionProperties:\n      type: object\n      description: Objeto con información referente a la compensación de saldos a favor de un trabajador.\n      properties:\n        saldo_a_favor:\n          type: number\n          description: Monto por saldo a favor determinado por el patrón al trabajador en periodos o ejercicios anteriores.\n        ano:\n          type: integer\n          description: Año en que se determinó el saldo a favor del trabajador.\n        remanente_sal_fav:\n          type: number\n          description: Remanente del saldo a favor del trabajador.\n    NominaDeduccionInput:\n      title: Deduccion\n      allOf:\n        - type: object\n          required:\n            - tipo_deduccion\n            - clave\n            - importe\n        - $ref: \"#/components/schemas/NominaDeduccionProperties\"\n    NominaDeduccionProperties:\n      type: object\n      properties:\n        tipo_deduccion:\n          type: string\n          description: Clave del catálogo [Tipo de deducción](#tipo-de-deducción).\n        concepto:\n          type: string\n          description: Concepto de la deducción. Si no se envía, se utilizará la descripción del catálogo del tipo de deducción.\n        clave:\n          type: string\n          minLength: 3\n          maxLength: 15\n          description: Clave de control interno que asigna el patrón a cada deducción (descuento) de nómina propia de su contabilidad.\n        importe:\n          type: number\n          description: Importe del concepto de deducción.\n    NominaPercepcionesInput:\n      type: object\n      title: Percepciones\n      description: Objeto para indicar las percepciones aplicables.\n      required:\n        - percepcion\n      properties:\n        percepcion:\n          type: array\n          description: Objeto con información detallada de cada percepción.\n          items:\n            $ref: \"#/components/schemas/NominaPercepcionInput\"\n        jubilacion_pension_retiro:\n          $ref: \"#/components/schemas/NominaJubilacionInput\"\n        separacion_indemnizacion:\n          $ref: \"#/components/schemas/NominaSeparacionInput\"\n    NominaPercepcionesProperties:\n      type: object\n      title: Percepciones\n      description: Objeto para indicar las percepciones aplicables.\n      properties:\n        percepcion:\n          type: array\n          description: Objeto con información detallada de cada percepción.\n          items:\n            $ref: \"#/components/schemas/NominaPercepcionProperties\"\n        jubilacion_pension_retiro:\n          $ref: \"#/components/schemas/NominaJubilacionProperties\"\n        separacion_indemnizacion:\n          $ref: \"#/components/schemas/NominaSeparacionProperties\"\n    NominaSeparacionInput:\n      title: Separacion\n      allOf:\n        - type: object\n          required:\n            - total_pagado\n            - num_anos_servicio\n            - ultimo_sueldo_mens_ord\n            - ingreso_acumulable\n            - ingreso_no_acumulable\n        - $ref: \"#/components/schemas/NominaSeparacionProperties\"\n    NominaSeparacionProperties:\n      type: object\n      title: Jubilacion\n      description: Objeto con información detallada de pagos por separación (despido) o indemnización.\n      properties:\n        total_pagado:\n          type: number\n          description: Monto total pagado por concepto de separación o indemnización.\n        num_anos_servicio:\n          type: integer\n          description: Años de servicio que laboró el trabajador, redondeado al entero inmediato superior.\n        ultimo_sueldo_mens_ord:\n          type: number\n          description: Último sueldo mensual ordinario percibido por el trabajador.\n        ingreso_acumulable:\n          type: number\n          description: Monto por ingresos acumulables.\n        ingreso_no_acumulable:\n          type: number\n          description: Monto por ingresos no acumulables.\n    NominaJubilacionInput:\n      title: Jubilacion\n      allOf:\n        - type: object\n          required:\n            - ingreso_acumulable\n            - ingreso_no_acumulable\n        - $ref: \"#/components/schemas/NominaJubilacionProperties\"\n    NominaJubilacionProperties:\n      type: object\n      description: Objeto con información detallada de pagos por jubilación, pensiones o haberes de retiro.\n      properties:\n        total_una_exhibicion:\n          type: number\n          description: Monto total del pago entregado en una sola exhibición.\n        total_parcialidad:\n          type: number\n          description: Monto total del pago entregado en parcialidades.\n        monto_diario:\n          type: number\n          description: Monto diario percibido por el trabajador cuando el pago se realiza en parcialidades.\n        ingreso_acumulable:\n          type: number\n          description: Ingresos acumulables percibidos por el trabajador.\n        ingreso_no_acumulable:\n          type: number\n          description: Ingresos no acumulables percibidos por el trabajador.\n    NominaPercepcionProperties:\n      title: Percepcion\n      allOf:\n        - $ref: \"#/components/schemas/NominaPercepcionDirectProperties\"\n        - $ref: \"#/components/schemas/NominaPercepcionNestedProperties\"\n    NominaPercepcionInput:\n      title: Percepcion\n      allOf:\n        - type: object\n          required:\n            - tipo_percepcion\n            - clave\n            - importe_gravado\n            - importe_exento\n        - $ref: \"#/components/schemas/NominaPercepcionDirectProperties\"\n        - $ref: \"#/components/schemas/NominaPercepcionNestedInput\"\n    NominaPercepcionDirectProperties:\n      type: object\n      properties:\n        tipo_percepcion:\n          type: string\n          description: Clave del catálogo [Tipo de percepción](#tipo-de-percepcion).\n        concepto:\n          type: string\n          description: Concepto de la percepción. Si no se envía, se utilizará la descripción del catálogo del tipo de percepción.\n        clave:\n          type: string\n          minLength: 3\n          maxLength: 15\n          description: Clave de control interno que asigna el patrón a cada percepción de nómina propia de su contabilidad.\n        importe_gravado:\n          type: number\n          description: Importe gravado por el concepto indicado en el tipo de percepción.\n        importe_exento:\n          type: number\n          description: Importe exento por el concepto indicado en el tipo de percepción.\n    NominaPercepcionNestedInput:\n      type: object\n      properties:\n        acciones_o_titulos:\n          $ref: \"#/components/schemas/NominaAccionesInput\"\n        horas_extra:\n          type: array\n          description: Arreglo de objetos para expresar las horas extra aplicables. Requerido cuando el tipo de percepción es “019” (Horas extras).\n          items:\n            $ref: \"#/components/schemas/NominaHorasExtraInput\"\n    NominaPercepcionNestedProperties:\n      type: object\n      properties:\n        acciones_o_titulos:\n          $ref: \"#/components/schemas/NominaAccionesProperties\"\n        horas_extra:\n          type: array\n          description: Arreglo de objetos para expresar las horas extra aplicables. Requerido cuando el tipo de percepción es “019” (Horas extras).\n          items:\n            $ref: \"#/components/schemas/NominaHorasExtraProperties\"\n    NominaHorasExtraInput:\n      title: HorasExtra\n      allOf:\n        - type: object\n          required:\n            - dias\n            - tipo_horas\n            - horas_extra\n            - importe_pagado\n        - $ref: \"#/components/schemas/NominaHorasExtraProperties\"\n    NominaHorasExtraProperties:\n      type: object\n      title: HorasExtra\n      properties:\n        dias:\n          type: integer\n          description: Número de días en que el trabajador laboró horas extra adicionales a su jornada normal de trabajo.\n        tipo_horas:\n          type: string\n          description: Clave del catálogo [Tipo de Horas](#tipo-de-Horas).\n        horas_extra:\n          type: integer\n          description: Número de horas extra trabajadas en el periodo.\n        importe_pagado:\n          type: number\n          description: Importe pagado por las horas extra.\n    NominaAccionesInput:\n      title: Accion\n      allOf:\n        - type: object\n          required:\n            - valor_mercado\n            - precio_al_otorgarse\n        - $ref: \"#/components/schemas/NominaAccionesProperties\"\n    NominaAccionesProperties:\n      type: object\n      title: Accion\n      description: Objeto para expresar ingresos por acciones o títulos valor que representan bienes. Es requerido cuando existan ingresos por sueldos derivados de adquisición de acciones o títulos.\n      properties:\n        valor_mercado:\n          type: number\n          description: Valor de mercado de las Acciones o Títulos valor al ejercer la opción.\n        precio_al_otorgarse:\n          type: number\n          description: Precio establecido al otorgarse la opción de ingresos en acciones o títulos valor.\n    NominaReceptorProperties:\n      type: object\n      title: Receptor\n      description: Información del trabajador.\n      allOf:\n        - $ref: \"#/components/schemas/NominaReceptorDirectProperties\"\n        - $ref: \"#/components/schemas/NominaReceptorNestedProperties\"\n    NominaReceptorInput:\n      type: object\n      title: Receptor\n      description: Información del trabajador.\n      allOf:\n        - type: object\n          required:\n            - curp\n            - tipo_contrato\n            - tipo_regimen\n            - num_empleado\n            - periodicidad_pago\n            - clave_ent_fed\n        - $ref: \"#/components/schemas/NominaReceptorDirectProperties\"\n        - $ref: \"#/components/schemas/NominaReceptorNestedInput\"\n    NominaReceptorDirectProperties:\n      type: object\n      properties:\n        curp:\n          type: string\n          description: CURP del trabajador.\n        num_seguridad_social:\n          type: string\n          description: Número de seguridad social.\n        fecha_inicio_rel_laboral:\n          type: string\n          format: date\n          description: Fecha de inicio de la relación laboral entre el empleador y el empleado.\n        antiguedad:\n          oneOf:\n            - type: string\n            - type: boolean\n          default: true\n          description: Antigüedad del empleado en el formato especificado por el SAT. Si se envía un `string`, se espera que éste contenga la antigüedad en el formato que especifica el SAT. Si se envía el valor booleano `false`, este campo no se incluirá en la factura. Si se envía el valor booleano `true` y `fecha_inicio_rel_laboral` existe, este valor se calculará con la diferencia entre la fecha de inicio de relación laboral y la fecha de pago.\n        tipo_contrato:\n          type: string\n          description: Clave del catálogo del SAT [Tipo de Contrato](#tipo-de-contrato).\n        sindicalizado:\n          type: boolean\n          default: false\n          description: Indica si el trabajador está asociado a un sindicato.\n        tipo_jornada:\n          type: string\n          description: Clave del catálogo del SAT [Tipo de Jornada](#tipo-de-jornada).\n        tipo_regimen:\n          type: string\n          description: Clave del catálogo del SAT [Tipo de Régimen](#tipo-de-régimen).\n        num_empleado:\n          type: string\n          minLength: 1\n          maxLength: 15\n          description: Número interno de empleado, asignado por el empleador.\n        departamento:\n          type: string\n          description: Nombre del departamento o área a la que pertenece el trabajador.\n        puesto:\n          type: string\n          description: Nombre del puesto asignado al empleado o el nombre de la actividad que realiza.\n        riesgo_puesto:\n          type: string\n          description: Clave del catálogo del SAT [Riesgo del Puesto](#riesgo-del-puesto).\n        periodicidad_pago:\n          type: string\n          description: Clave del catálogo del SAT [Periodicidad de Pago](#periodicidad-del-pago).\n        banco:\n          type: string\n          description: Clave del banco de acuerdo al catálogo del SAT “Bancos” que puedes consultar utilizando nuestra [herramienta de búsqueda](https://www.facturapi.io/dashboard/catalogs/bank).\n        cuenta_bancaria:\n          type: string\n          description: |\n            Número de cuenta bancaria (11 caracteres) o número de teléfono celular (10 caracteres) o número de tarjeta (15 ó 16 caracteres) o la CLABE (18 caracteres) o número de monedero electrónico donde se realiza el depósito de nómina.\n        salario_base_cot_apor:\n          type: number\n          description: Importe de la retribución en efectivo por cuota diaria, gratificaciones, percepciones, alimentación, habitación, primas, comisiones, prestaciones en especie, etc.\n        salario_diario_integrado:\n          type: number\n          description: Salario que se integra con los pagos hechos en efectivo por cuota diaria, gratificaciones, percepciones, habitación, primas, comisiones, prestaciones en especie y cualquier otra cantidad o prestación que se entregue al trabajador por su trabajo.\n        clave_ent_fed:\n          type: string\n          description: Clave de la entidad federativa en donde el trabajador prestó sus servicios al empleador, que puedes consultar utilizando nuestra [herramienta de búsqueda](https://www.facturapi.io/dashboard/catalogs/state).\n    NominaReceptorNestedProperties:\n      type: object\n      properties:\n        sub_contratacion:\n          type: array\n          description: Arreglo de objetos para expresar información sobre la empresa que se beneficia del trabajo del empleado, en casos donde el emisor preste servicios de subcontratación.\n          items:\n            $ref: \"#/components/schemas/NominaSubContratacionProperties\"\n    NominaReceptorNestedInput:\n      type: object\n      properties:\n        sub_contratacion:\n          type: array\n          description: Arreglo de objetos para expresar información sobre la empresa que se beneficia del trabajo del empleado, en casos donde el emisor preste servicios de subcontratación.\n          items:\n            allOf:\n              - $ref: \"#/components/schemas/NominaSubContratacionRequiredProperties\"\n              - $ref: \"#/components/schemas/NominaSubContratacionProperties\"\n    NominaSubContratacionRequiredProperties:\n      type: object\n      required:\n        - rfc_labora\n        - porcentaje_tiempo\n    NominaSubContratacionProperties:\n      type: object\n      properties:\n        rfc_labora:\n          type: string\n          description: RFC de la persona o empresa que subcontrata, es decir, de la persona o empresa en donde el trabajador prestó directamente sus servicios.\n        porcentaje_tiempo:\n          type: number\n          minimum: 0.001\n          maximum: 100.000\n          description: Porcentaje de tiempo en que el trabajador prestó sus servicios a la persona o empresa que lo subcontrató.\n    NominaEmisorProperties:\n      type: object\n      title: Emisor\n      description: Información del emisor, en caso de ser requerida.\n      properties:\n        curp:\n          type: string\n          minLength: 18\n          maxLength: 18\n          description: Requerido cuando el empleador es persona física. CURP del empleador.\n        registro_patronal:\n          type: string\n          description: Clave de registro patronal asignada por la institución de seguridad social al patrón.\n        rfc_patron_origen:\n          minLength: 12\n          maxLength: 13\n          type: string\n          description: RFC de la persona que fungió como patrón. Se usa cuando el pago se realiza a través de un tercero.\n        entidad_sncf:\n          type: object\n          description: Información para que las entidades adheridas al Sistema Nacional de Coordinación Fiscal realicen la identificación del origen de los recursos.\n          properties:\n            origen_recurso:\n              type: string\n              enum:\n                - IP\n                - IF\n                - IM\n              description: |\n                Clave de origen de recurso.\n\n                - `“IP”`: Ingresos Propios\n                - `“IF”`: Ingresos Federales\n                - `“IM”`: Ingresos mixtos.\n            monto_recurso_propio:\n              type: number\n              description: |\n                Inporte de recursos propios. Requerido cuando el origen del recurso es por ingresos mixtos.\n\n    NominaOrCustomComplementProperties:\n      title: Complement\n      type: object\n      discriminator:\n        propertyName: type\n        mapping:\n          nomina: \"#/components/schemas/NominaComplementProperties\"\n          custom: \"#/components/schemas/CustomComplementProperties\"\n      properties:\n        type:\n          type: string\n          enum:\n            - nomina\n            - custom\n          description: Tipo de complemento.\n\n    NominaOrCustomComplementInput:\n      type: object\n      title: Complement\n      discriminator:\n        propertyName: type\n        mapping:\n          nomina: \"#/components/schemas/NominaComplementInput\"\n          custom: \"#/components/schemas/CustomComplementInput\"\n      required:\n        - type\n        - data\n      properties:\n        type:\n          type: string\n          enum:\n            - nomina\n            - custom\n          description: Tipo de complemento.\n    NominaComplementProperties:\n      allOf:\n        - $ref: \"#/components/schemas/NominaOrCustomComplementProperties\"\n        - type: object\n          properties:\n            data:\n              $ref: \"#/components/schemas/NominaComplementDataProperties\"\n    NominaComplementInput:\n      allOf:\n        - $ref: \"#/components/schemas/NominaOrCustomComplementInput\"\n        - type: object\n          properties:\n            data:\n              $ref: \"#/components/schemas/NominaComplementDataInput\"\n    NamespaceRequiredProperties:\n      type: object\n      required:\n        - prefix\n        - uri\n        - schema_location\n    NamespaceProperties:\n      type: object\n      title: Namespace\n      properties:\n        prefix:\n          type: string\n          description: Prefijo o nombre del namespace.\n          example: iedu\n        uri:\n          type: string\n          format: url\n          description: Dirección URL asociada al namespace.\n          example: http://www.sat.gob.mx/iedu\n        schema_location:\n          type: string\n          format: url\n          example: http://www.sat.gob.mx/sitio_interet/cfd/iedu/iedu.xsd\n          description: Dirección URL del esquema de validación XSD.\n\n    CommonAddressProperties:\n      type: object\n      properties:\n        street:\n          type: string\n          description: Nombre de la calle\n          example: Blvd. Atardecer\n        exterior:\n          type: string\n          description: Número exterior.\n          example: 142\n        interior:\n          type: string\n          description: Número interior.\n          example: 4\n        neighborhood:\n          type: string\n          description: Colonia\n          example: Villas del Marro\n        city:\n          type: string\n          description: Ciudad\n          example: Huatabampo\n        municipality:\n          type: string\n          description: Municipio o delegación\n          example: Huatabampo\n        zip:\n          type: string\n          description: Código postal\n          example: 86500\n\n    # Main resources\n    Customer:\n      title: Objeto Customer\n      allOf:\n        - $ref: \"#/components/schemas/ResourceAutoGeneratedProps\"\n        - $ref: \"#/components/schemas/CustomerProperties\"\n    CustomerSearchResult:\n      allOf:\n        - $ref: \"#/components/schemas/SearchResult\"\n        - type: object\n          properties:\n            data:\n              type: array\n              items:\n                $ref: \"#/components/schemas/Customer\"\n    CustomerRequiredProperties:\n      type: object\n      required:\n        - legal_name\n        - tax_id\n    CustomerProperties:\n      type: object\n      properties:\n        legal_name:\n          type: string\n          description: Nombre Fiscal o Razón Social del cliente.\n          example: Dunder Mifflin S.A. de C.V.\n        tax_id:\n          type: string\n          example: ABC101010111\n          description: En clientes de México contiene el RFC del cliente. Para extranjeros es opcional y representa el número de registro de identificacón tributaria, es decir, el equivalente al RFC en el país del cliente.\n        email:\n          type: string\n          format: email\n          description: Dirección de correo electrónico al cual enviar las facturas generadas.\n          example: email@example.com\n        phone:\n          type: string\n          description: Teléfono del cliente.\n          example: 6474010101\n        address:\n          allOf:\n            - $ref: \"#/components/schemas/CommonAddressProperties\"\n            - type: object\n              description: Domicilio fiscal.\n              properties:\n                state:\n                  type: string\n                  description: Si el país es México (\"MEX\"), contiene el nombre del Estado o Entidad Federativa. Para extranjeros contiene el código de Estado de acuerdo al estándar [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2), que puedes consultar en nuestro [Catálogo de Estados](https://www.facturapi.io/dashboard/catalogs/state).\n                  example: Sonora\n                country:\n                  type: string\n                  description: Código de país acorde al estándar [ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3), del [Catálogo de Países](https://www.facturapi.io/dashboard/catalogs/country).\n                  example: MEX\n                  default: MEX\n    CustomerCreateInput:\n      title: Customer\n      allOf:\n        - $ref: \"#/components/schemas/CustomerRequiredProperties\"\n        - $ref: \"#/components/schemas/CustomerProperties\"\n\n    LineItemProductInput:\n      title: Product\n      allOf:\n        - $ref: \"#/components/schemas/ProductRequiredProperties\"\n        - $ref: \"#/components/schemas/ProductProperties\"\n\n    LineItemTrasladoProductInput:\n      title: Product\n      required:\n        - description\n      type: object\n      properties:\n        description:\n          type: string\n          description: Descripción del bien o servicio como aparecerá en la factura.\n          example: Ukelele\n        product_key:\n          type: string\n          description: Clave de producto/servicio, del catálogo del SAT. Nosotros te proporcionamos una manera más conveniente de encontrarlo utilizando nuestra [herramienta de búsqueda de claves](https://www.facturapi.io/dashboard/tools/keys).\n          example: 60131324\n        unit_key:\n          type: string\n          default: H87\n          description: |\n            Clave de unidad de medida, del catálogo del SAT. El valor por default `\"H87\"` (elemento) es la clave para representar una pieza o unidad de venta (lápiz, cuaderno, televisión, etc).\n            Si la unidad de tu producto es kilogramos, litros, horas u otra unidad, te proporcionamos una manera conveniente de encontrar la clave utilizando nuestra [herramienta de búsqueda de claves](https://www.facturapi.io/dashboard/tools/keys).\n        unit_name:\n          type: string\n          default: Elemento\n          description: Palabra que representa la unidad de medida de tu producto. Debe estar relacionada con la clave de unidad `unit_key`.\n        sku:\n          type: string\n          description: Identificador de uso interno designado por la empresa. Puede tener cualquier valor.\n\n    LineItemProductEgresoInput:\n      title: Product\n      allOf:\n        - $ref: \"#/components/schemas/ProductEgresoRequiredProperties\"\n        - $ref: \"#/components/schemas/ProductEgresoProperties\"\n\n    LineItemProduct:\n      allOf:\n        - type: object\n          properties:\n            id:\n              nullable: true\n              type: string\n              description: ID del producto base. Sólo presente si se utilizó como base un objeto `Product` guardado previamente.\n              example: 58e93bd8e86eb318b0197454\n        - $ref: \"#/components/schemas/ProductProperties\"\n    PartInput:\n      type: object\n      required:\n        - description\n        - product_key\n      properties:\n        description:\n          type: string\n          description: Descripción del producto o servicio.\n        product_key:\n          type: string\n          description: Clave de producto/servicio, del catálogo del SAT. Nosotros te proporcionamos una manera más conveniente de encontrarlo utilizando nuestra herramienta de búsqueda de claves.\n        quantity:\n          type: number\n          description: Cantidad\n          example: 1\n        sku:\n          type: string\n          description: Identificador de uso interno designado por la empresa. Puede tener cualquier valor.\n        unit_price:\n          type: number\n          description: Precio unitario\n        unit_name:\n          type: string\n          description: Nombre de la unidad de medida que expresa la cantidad.\n        customs_keys:\n          type: array\n          items:\n            type: string\n          description: Números de pedimento aduanal asociados a esta parte.\n\n    Product:\n      title: Objeto Product\n      allOf:\n        - $ref: \"#/components/schemas/ResourceAutoGeneratedProps\"\n        - $ref: \"#/components/schemas/ProductProperties\"\n    ProductSearchResult:\n      allOf:\n        - $ref: \"#/components/schemas/SearchResult\"\n        - type: object\n          properties:\n            data:\n              type: array\n              items:\n                $ref: \"#/components/schemas/Product\"\n    ProductRequiredProperties:\n      type: object\n      required:\n        - description\n        - product_key\n        - price\n    ProductEgresoRequiredProperties:\n      type: object\n      required:\n        - description\n        - price\n    ProductProperties:\n      type: object\n      properties:\n        description:\n          type: string\n          description: Descripción del bien o servicio como aparecerá en la factura.\n          example: Ukelele\n        product_key:\n          type: string\n          description: Clave de producto/servicio, del catálogo del SAT. Nosotros te proporcionamos una manera más conveniente de encontrarlo utilizando nuestra [herramienta de búsqueda de claves](https://www.facturapi.io/dashboard/tools/keys).\n          example: 60131324\n        price:\n          type: number\n          description: Precio por unidad del bien o servicio. Este valor representará el precio con IVA incluído o sin él, dependiendo del valor de `tax_included`.\n          example: 345.60\n        tax_included:\n          type: boolean\n          default: true\n          description: |\n            `true`: Indica que todos los impuestos aplicables están incluídos en el precio (atributo price) y se desglosarán automáticamente al emitir la factura.\n\n            `false`: Indica que el atributo price no incluye impuestos, por lo que aquellos impuestos a aplicar se sumarán en el precio final.\n        taxes:\n          type: array\n          default: IVA trasladado 16%\n          description: Lista de impuestos que deberán aplicarse a este producto. Si el parámetro se omite o es nulo, se guardará con un elemento que representa el IVA trasladado del 16%, que es el impuesto más común. En caso de mandar explícitamente un arreglo vacío, se entiende que el producto está exento de impuestos.\n          items:\n            $ref: \"#/components/schemas/BaseTax\"\n        local_taxes:\n          type: array\n          description: Arreglo de impuestos locales (estatales o municipales), en caso de haberlos.\n          default: []\n          items:\n            $ref: \"#/components/schemas/LocalTax\"\n        unit_key:\n          type: string\n          default: H87\n          description: |\n            Clave de unidad de medida, del catálogo del SAT. El valor por default `\"H87\"` (elemento) es la clave para representar una pieza o unidad de venta (lápiz, cuaderno, televisión, etc).\n            Si la unidad de tu producto es kilogramos, litros, horas u otra unidad, te proporcionamos una manera conveniente de encontrar la clave utilizando nuestra [herramienta de búsqueda de claves](https://www.facturapi.io/dashboard/tools/keys).\n        unit_name:\n          type: string\n          default: Elemento\n          description: Palabra que representa la unidad de medida de tu producto. Debe estar relacionada con la clave de unidad `unit_key`.\n        sku:\n          type: string\n          description: Identificador de uso interno designado por la empresa. Puede tener cualquier valor.\n    ProductEgresoProperties:\n      type: object\n      properties:\n        description:\n          type: string\n          description: Resumen de la operación en una sola descripción. Deben mencionarse cada uno de los productos que contempla el descuento, devolución o bonificación aplicada y que contienen las facturas relacionadas. Si el egreso está basado en un pocentaje (como al aplicar un 30% de descuento), dicho porcentaje debe incluirse en la descripción junto al nombre del producto que corresponda.\n          example: Ukelele\n        price:\n          type: number\n          description: Suma total de la cantidad devuelta, descontada o bonificada.\n          example: 345.60\n        tax_included:\n          type: boolean\n          default: true\n          description: |\n            `true`: Indica que todos los impuestos aplicables están incluídos en el precio (atributo price) y se desglosarán automáticamente al emitir la factura.\n\n            `false`: Indica que el atributo price no incluye impuestos, por lo que aquellos impuestos a aplicar se sumarán en el precio final.\n        taxes:\n          type: array\n          default: IVA trasladado 16%\n          description: Lista de impuestos que deberán aplicarse a este producto. Si el parámetro se omite o es nulo, se guardará con un elemento que representa el IVA trasladado del 16%, que es el impuesto más común. En caso de mandar explícitamente un arreglo vacío, se entiende que el producto está exento de impuestos.\n          items:\n            $ref: \"#/components/schemas/BaseTax\"\n        local_taxes:\n          type: array\n          description: Arreglo de impuestos locales (estatales o municipales), en caso de haberlos.\n          default: []\n          items:\n            $ref: \"#/components/schemas/LocalTax\"\n    PaymentInput:\n      title: Payment\n      required:\n        - payment_form\n        - related\n      type: object\n      properties:\n        payment_form:\n          type: string\n          description: Código de la forma de pago según el [catálogo del SAT](#forma-de-pago). También puedes utilizar la constante `PaymentForm` incluída en nuestras librerías.\n        related:\n          type: array\n          description: Arreglo que incluye un elemento por cada comprobante de ingreso relacionado a este pago. Lo más común es que el pago esté relacionado a un sólo comprobante de ingreso. Un caso en el que se agrega más de un elemento es cuando se recibe (por ejemplo) un sólo depósito que ampara el pago de 2 facturas relacionadas. En lugar de expedir un comprobante de recepción de pago por cada factura, debes expedir sólo uno relacionando los 2 comprobantes.\n          items:\n            type: object\n            required:\n              - uuid\n              - amount\n              - installment\n              - last_balance\n            properties:\n              uuid:\n                type: string\n                format: uuid\n                description: Folio fiscal ó UUID del comprobante de ingreso relacionado.\n              amount:\n                type: number\n                description: |\n                  Cantidad del pago correspondiente al comprobante relacionado,\n                  usando el método de pago indicado en este elemento del arreglo\n                  `payments`. Este valor debe ser expresado en la moneda definida\n                  en `payments[].related_documents[].currency`.\n              installment:\n                type: integer\n                description: Número de parcialidad del pago.\n              last_balance:\n                type: number\n                description: Cantidad que estaba pendiente por pagar antes de recibir este pago. Este valor se expresa en la moneda definida en `payments[].related[].currency`.\n              currency:\n                type: string\n                minLength: 3\n                maxLength: 3\n                default: MXN\n                description: Si la moneda utilizada en la factura relacionada no es moneda nacional (MXN), debe especificarse su valor acorde al estándar [ISO 4217](https://es.wikipedia.org/wiki/ISO_4217).\n              exchange:\n                type: number\n                description: |\n                  Obligatorio cuando la moneda del documento relacionado es distinta a la moneda de pago. Tipo de cambio entre las dos monedas al momento del pago. Ejemplo: La factura de iingreso relacionada se registra en USD, mientras que el pago actual se realiza en MXN, este atributo debería registrarse como `0.45` (USD/MXN).\n              folio_number:\n                type: integer\n                description: Opcionalmente se puede incluir el número de folio del documento relacionado.\n              series:\n                type: string\n                description: Opcionalmente se puede incluir la serie del documento relacionado.\n        currency:\n          type: string\n          minLength: 3\n          maxLength: 3\n          default: MXN\n          description: Código de la moneda, acorde al estándar [ISO 4217](https://es.wikipedia.org/wiki/ISO_4217).\n        exchange:\n          type: number\n          default: 1\n          description: Tipo de cambio conforme a la moneda usada. Representa el número de pesos mexicanos que equivalen a una unidad de la divisa señalada en el atributo `currency`.\n        date:\n          type: string\n          format: date-time\n          default: now\n          description: Fecha en que se recibió el pago. Sólo es necesario incluirla si el pago se efectuó en una fecha anterior a la emisión de este comprobante. No se permiten fechas futuras.\n        numOperacion:\n          type: string\n          description: Número de cheque, de autorización, de referencia, clave de rastreo SPEI, línea de captura o algún número de referencia que permita identificar la operación correspondiente al pago efectuado.\n        rfcEmisorCtaOrd:\n          type: string\n          description: RFC de la entidad emisora de la cuenta de origen, es decir, la operadora, banco, institución financiera, emisor de monedero electrónico, etc.\n        nomBancoOrdExt:\n          type: string\n          description: Nombre del banco ordenante.\n        ctaOrdenante:\n          type: string\n          description: Número de cuenta con la que se realizó el pago.\n        rfcEmisorCtaBen:\n          type: string\n          description: RFC de la entidad de la cuenta operadora destino, es decir, la operadora, banco, institución financiera, emisor de monedero electrónico, etc.\n        ctaBeneficiario:\n          type: string\n          description: Número de cuenta donde se recibió el pago.\n        tipoCadPago:\n          type: string\n          description: Clave del tipo de cadena de pago que genera la entidad receptora del pago. Si existe este campo, es obligatorio registrar los campos `certPago`, `cadPago` y `selloPago`.\n        certPago:\n          type: string\n          format: base64\n          description: Certificado que corresponde al pago, como una cadena de texto en formato base 64.\n        cadPago:\n          type: string\n          description: Cadena original del comprobante de pago generado por la entidad emisora de la cuenta beneficiaria.\n        selloPago:\n          type: string\n          format: base64\n          description: Sello digital que se asocie al pago expresado como una cadena de texto en formato base 64.\n\n    CustomerInfo:\n      type: object\n      description: Objeto con información parcial del cliente receptor del comprobante. Para obtener el objeto `Customer` completo, deberás consultarlo con el método de [Obtener Cliente]('#/operation/getCustomer').\n      properties:\n        id:\n          type: string\n          description: ID del objeto `customer` relacionado a la factura, en caso de no haber sido eliminado\n          example: 58e93bd8e86eb318b0197456\n        legal_name:\n          type: string\n          description: Nombre Fiscal o Razón Social del cliente.\n          example: Dunder Mifflin S.A. de C.V.\n        tax_id:\n          type: string\n          description: RFC del cliente.\n          example: ABC101010111\n        address:\n          type: object\n          properties:\n            country:\n              type: string\n              format: ISO 3166-1 alpha-3\n              description: Código de País acorde al estándar ISO 3166-1 alpha-3, del Catálogo de Países.\n              example: MEX\n\n    Invoice:\n      title: Objeto Invoice\n      allOf:\n        - $ref: \"#/components/schemas/ResourceAutoGeneratedProps\"\n        - $ref: \"#/components/schemas/InvoiceProperties\"\n    InvoiceSearchResult:\n      allOf:\n        - $ref: \"#/components/schemas/SearchResult\"\n        - type: object\n          properties:\n            data:\n              type: array\n              items:\n                $ref: \"#/components/schemas/Invoice\"\n    InvoiceRequiredProperties:\n      type: object\n      required:\n        - description\n        - invoice_key\n        - price\n    InvoiceProperties:\n      type: object\n      properties:\n        status:\n          type: string\n          enum:\n            - valid\n            - canceled\n          description: |\n            Estado actual de la factura.\n          example: valid\n        cancellation_status:\n          type: string\n          enum:\n            - none\n            - pending\n            - accepted\n            - rejected\n            - expired\n          description: |\n            Estado actual de la solicitud de cancelación, en caso de haberla realizado. Puedes leer más a detalle en la sección de [Cancelar Factura](#operation/deleteInvoice)).\n          example: none\n        verification_url:\n          type: string\n          format: uri\n          description: Dirección URL para verificar el estado del CFDI en el portal del SAT. Este link es el mismo que aparece en el código QR, en el PDF de la factura.\n          example: https://verificacfdi.facturaelectronica.sat.gob.mx/default.aspx?id=45BEC0CA-5F1E-491E-9417-698EA48C382A\u0026re=AAA010101AAA\u0026rr=ABC101010111\u0026tt=345.600000\u0026fe=bWApPw==\n        cancellation_receipt:\n          type: string\n          format: xml\n          description: Si el comprobante fue cancelado, este campo contiene el acuse de recibo de cancelación en formato XML.\n        type:\n          type: string\n          enum:\n            - I\n            - E\n            - P\n            - N\n            - T\n          description: |\n            Tipo de comprobante. Puede tener los valores `\"I\"`: Ingreso, `\"P\"`: Pago, `\"E\"`: Egreso, `\"N\"`: Nómina, `\"T\"`: Traslado.\n        customer:\n          $ref: \"#/components/schemas/CustomerInfo\"\n        total:\n          type: number\n          description: Monto total facturado.\n          example: 10944.82\n        uuid:\n          type: string\n          format: uuid\n          description: Folio fiscal de la factura, asignado por el SAT.\n          example: 39c85a3f-275b-4341-b259-e8971d9f8a94\n        folio_number:\n          type: integer\n          description: Número de folio autoincremental para control interno y sin validez fiscal.\n          example: 914\n        series:\n          type: string\n          description: Serie. Caracteres designados por la empresa para control interno y sin validez fiscal. En el PDF se imprime junto al //www.facturapi.io/img/logo.svg\n          example: F\n        external_id:\n          type: string\n          description: Identificador opcional que puedes usar para relacionar esta factura con tus registros para después buscar por este número.\n        payment_form:\n          type: string\n          description: Código que representa la forma de pago, de acuerdo al [catálogo del SAT](#forma-de-pago).\n          example: 06\n        items:\n          type: array\n          description: Conceptos incluidos en el documento\n          items:\n            $ref: \"#/components/schemas/LineItem\"\n        related:\n          type: array\n          items:\n            type: string\n            format: uuid\n          description: Folios fiscales de los CFDIs relacionados.\n        relation:\n          type: string\n          description: Clave de relación del catálogo del SAT.\n        currency:\n          type: string\n          example: MXN\n          description: Código de la moneda, acorde al estándar [ISO 4217](https://es.wikipedia.org/wiki/ISO_4217).\n        exchange:\n          type: number\n          minimum: 0\n          example: 1\n          description: Tipo de cambio conforme a la moneda usada. Representa el número de pesos mexicanos que equivalen a una unidad de la divisa señalada en el atributo `currency`.\n        complements:\n          type: array\n          default: []\n          items:\n            $ref: \"#/components/schemas/NominaOrCustomComplementProperties\"\n          description: Complementos a incluir en la factura.\n        pdf_custom_section:\n          type: string\n          format: html\n          description: En caso de que necesites incluir más información en el PDF, este campo te permite insertar código HTML con tu propio contenido.\n        addenda:\n          type: string\n          format: xml\n          description: Código XML con la Addenda que se necesite agregar a la factura.\n        namespaces:\n          type: array\n          description: Namespaces a insertar en el nodo raíz de la factura. Requerido en complementos y addenda.\n          items:\n            $ref: \"#/components/schemas/NamespaceProperties\"\n        stamp:\n          $ref: \"#/components/schemas/Stamp\"\n\n    InvoiceableCommonInput:\n      type: object\n      properties:\n        folio_number:\n          type: integer\n          default: autoincremental\n          description: Número de folio asignado por la empresa para control interno. Si se omite, se asignará el valor autoincremental de la organización.\n        series:\n          type: string\n          maxLength: 25\n          nullable: true\n          description: Serie. Caracteres designados por la empresa para control interno y sin validez fiscal.\n        pdf_custom_section:\n          type: string\n          nullable: true\n          format: xml\n          description: |\n            En caso de que necesites incluir más información en el PDF, este campo te permite enviar código HTML con tu propio contenido.\n\n            Por seguridad, el código que puedes enviar está limitado a las siguientes etiquetas: `h1`, `h2`, `h3`, `h4`, `h5`, `h6`, `div`, `p`, `span`, `small`, `br`, `b`, `i`, `ul`, `ol`, `li`, `strong`, `table`, `thead`, `tbody`, `tfoot`, `tr`, `th` y `td`. No se permiten atributos ni estilos.\n        addenda:\n          type: string\n          nullable: true\n          format: xml\n          description: Código XML con la Addenda que se necesite agregar a la factura.\n        namespaces:\n          type: array\n          default: []\n          description: Si icluiste uno de los parámetros `addenda`, `complements`, o `items[].complement` y éstos incluyen un namespace especial, debes enviar la información necesaria para incluir estos namespaces en el XML de la factura.\n          items:\n            allOf:\n              - $ref: \"#/components/schemas/NamespaceRequiredProperties\"\n              - $ref: \"#/components/schemas/NamespaceProperties\"\n    InvoiceCommonInputProperties:\n      allOf:\n        - type: object\n          properties:\n            customer:\n              description: Cliente receptor de la factura.\n              oneOf:\n                - $ref: \"#/components/schemas/CustomerCreateInput\"\n                - type: string\n                  title: customer_id\n                  description: ID del objeto 'customer' previamente registrado en Facturapi.\n                  example: 58e93bd8e86eb318b0197456\n            date:\n              type: string\n              format: date-time\n              default: now\n              description: Fecha de expedición del comprobante en formato ISO8601 (UTC String). No puede ser anterior a 72 horas en el pasado, ni posterior al presente.\n            external_id:\n              type: string\n              nullable: true\n              description: Identificador opcional que puedes usar para relacionar esta factura con tus registros y poder hacer búsquedas usando este identificador. Facturapi no valida que este campo sea único.\n        - $ref: \"#/components/schemas/InvoiceableCommonInput\"\n    InvoiceIngresoInput:\n      title: Ingreso\n      required:\n        - customer\n        - items\n        - payment_form\n      allOf:\n        - type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - I\n              default: I\n              description: Tipo de comprobante. El valor default es `“I”` (Ingreso).\n            items:\n              type: array\n              description: Conceptos a incluir en la factura.\n              items:\n                $ref: \"#/components/schemas/LineItemInput\"\n            payment_form:\n              type: string\n              minLength: 2\n              maxLength: 2\n              description: Código que representa la forma de pago, de acuerdo al [catálogo del SAT](#forma-de-pago).\n            payment_method:\n              type: string\n              default: PUE\n              enum:\n                - PUE\n                - PPD\n              description: |\n                Código del método de pago según el catálogo del SAT.\n\n                - `PUE`: Pago en Una sola Exhibición\n                - `PPD`: Pago en Parcialidades o Diferido\n            use:\n              type: string\n              default: G01\n              description: Código de Uso CFDI según el catálogo del SAT. Puedes ver los códigos en [esta tabla](#uso-cfdi), o utilizar las constantes incluídas en nuestras librerías.\n            currency:\n              type: string\n              default: MXN\n              description: Código de la moneda, acorde al estándar [ISO 4217](https://es.wikipedia.org/wiki/ISO_4217).\n            exchange:\n              type: number\n              default: 1\n              description: Tipo de cambio conforme a la moneda usada. Representa el número de pesos mexicanos (MXN) que equivalen a una unidad de la divisa señalada en el atributo `currency`.\n            conditions:\n              type: string\n              nullable: true\n              minLength: 1\n              maxLength: 1000\n              description: Condiciones de pago\n            related:\n              type: array\n              default: []\n              items:\n                type: string\n              description: Folios fiscales (UUID) de facturas relacionadas.\n            relation:\n              type: string\n              nullable: true\n              description: Clave de relación del catálogo del SAT (que puedes consultar en [esta tabla](#relacion-entre-facturas)). Es requerido cuando se envíe el parámetro `related`.\n            complements:\n              type: array\n              default: []\n              items:\n                $ref: \"#/components/schemas/CustomComplementInput\"\n              description: Complementos a incluir en la factura. Puedes incluir cualquier complemento en la factura si tú mismo construyes el nodo XML del complemento y usas el tipo `custom`. No olvides que **es necesario agregar el prefijo y las URLs necesarias usando el parámetro `namespaces`**. También recuerda agregar la información del complemento al PDF usando el parámetro `pdf_custom_section`.\n        - $ref: \"#/components/schemas/InvoiceCommonInputProperties\"\n    InvoiceEgresoInput:\n      title: Egreso\n      allOf:\n        - type: object\n          required:\n            - type\n            - customer\n            - payment_form\n            - related\n            - products\n          properties:\n            type:\n              type: string\n              enum:\n                - E\n            payment_form:\n              type: string\n              minLength: 2\n              maxLength: 2\n              description: Código que representa la forma de pago, de acuerdo al [catálogo del SAT](#forma-de-pago).\n            related:\n              type: array\n              default: []\n              items:\n                type: string\n              description: Folios fiscales (UUID) de facturas relacionadas.\n            relation:\n              type: string\n              default: 01\n              description: Clave de relación del catálogo del SAT (que puedes consultar en [esta tabla](#relacion-entre-facturas)).\n            products:\n              type: array\n              items:\n                $ref: \"#/components/schemas/LineItemProductEgresoInput\"\n              description: Objetos con detalles del concepto a facturar.\n            currency:\n              type: string\n              default: MXN\n              description: Código de la moneda, acorde al estándar [ISO 4217](https://es.wikipedia.org/wiki/ISO_4217).\n            exchange:\n              type: number\n              default: 1\n              description: Tipo de cambio conforme a la moneda usada. Representa el número de pesos mexicanos (MXN) que equivalen a una unidad de la divisa señalada en el atributo `currency`.\n            complements:\n              type: array\n              default: []\n              items:\n                $ref: \"#/components/schemas/CustomComplementInput\"\n              description: Complementos a incluir en la factura. Puedes incluir cualquier complemento en la factura si tú mismo construyes el nodo XML del complemento y usas el tipo `custom`. No olvides que **es necesario agregar el prefijo y las URLs necesarias usando el parámetro `namespaces`**. También recuerda agregar la información del complemento al PDF usando el parámetro `pdf_custom_section`.\n        - $ref: \"#/components/schemas/InvoiceCommonInputProperties\"\n    InvoicePagoInput:\n      title: Pago\n      allOf:\n        - type: object\n          required:\n            - type\n            - payments\n            - customer\n          properties:\n            type:\n              type: string\n              enum:\n                - P\n            payments:\n              type: array\n              description: Pagos a incluir en este comprobante. Lo más común es incluir un sólo pago. Un caso en el que se debe de agregar más de uno es cuando el pago se realiza con 2 formas de pago distintas; por ejemplo, cuando se paga una parte con tarjeta y otra en efectivo.\n              items:\n                $ref: \"#/components/schemas/PaymentInput\"\n            related:\n              type: array\n              default: []\n              items:\n                type: string\n              description: Folios fiscales (UUID) de facturas relacionadas.\n            relation:\n              type: string\n              nullable: true\n              description: Clave de relación del catálogo del SAT (que puedes consultar en [esta tabla](#relacion-entre-facturas)).\n            complements:\n              type: array\n              default: []\n              items:\n                $ref: \"#/components/schemas/CustomComplementInput\"\n              description: Complementos a incluir en la factura. Puedes incluir cualquier complemento en la factura si tú mismo construyes el nodo XML del complemento y usas el tipo `custom`. No olvides que **es necesario agregar el prefijo y las URLs necesarias usando el parámetro `namespaces`**. También recuerda agregar la información del complemento al PDF usando el parámetro `pdf_custom_section`.\n        - $ref: \"#/components/schemas/InvoiceCommonInputProperties\"\n    InvoiceNominaInput:\n      title: Nómina\n      allOf:\n        - type: object\n          required:\n            - type\n            - complements\n            - customer\n          properties:\n            type:\n              type: string\n              enum:\n                - N\n            complements:\n              type: array\n              default: []\n              items:\n                $ref: \"#/components/schemas/NominaOrCustomComplementInput\"\n              description: Complementos a incluir en la factura.\n            related:\n              type: array\n              default: []\n              items:\n                type: string\n              description: Folios fiscales (UUID) de facturas relacionadas.\n            relation:\n              type: string\n              nullable: true\n              description: Clave de relación del catálogo del SAT (que puedes consultar en [esta tabla](#relacion-entre-facturas)).\n        - $ref: \"#/components/schemas/InvoiceCommonInputProperties\"\n    InvoiceTrasladoInput:\n      title: Traslado\n      allOf:\n        - type: object\n          required:\n            - type\n            - items\n            - customer\n          properties:\n            type:\n              type: string\n              enum:\n                - T\n            items:\n              type: array\n              description: Conceptos a incluir en la factura.\n              items:\n                $ref: \"#/components/schemas/LineItemTrasladoInput\"\n            complements:\n              type: array\n              default: []\n              items:\n                $ref: \"#/components/schemas/CustomComplementInput\"\n              description: Complementos a incluir en la factura. Puedes incluir cualquier complemento en la factura si tú mismo construyes el nodo XML del complemento y usas el tipo `custom`. No olvides que **es necesario agregar el prefijo y las URLs necesarias usando el parámetro `namespaces`**. También recuerda agregar la información del complemento al PDF usando el parámetro `pdf_custom_section`.\n            use:\n              type: string\n              default: G01\n              description: Código de Uso CFDI según el catálogo del SAT. Puedes ver los códigos en [esta tabla](#uso-cfdi), o utilizar las constantes incluídas en nuestras librerías.\n            currency:\n              type: string\n              default: MXN\n              description: Código de la moneda, acorde al estándar [ISO 4217](https://es.wikipedia.org/wiki/ISO_4217).\n            exchange:\n              type: number\n              default: 1\n              description: Tipo de cambio conforme a la moneda usada. Representa el número de pesos mexicanos (MXN) que equivalen a una unidad de la divisa señalada en el atributo `currency`.\n            related:\n              type: array\n              default: []\n              items:\n                type: string\n              description: Folios fiscales (UUID) de facturas relacionadas.\n            relation:\n              type: string\n              nullable: true\n              description: Clave de relación del catálogo del SAT (que puedes consultar en [esta tabla](#relacion-entre-facturas)).\n        - $ref: \"#/components/schemas/InvoiceCommonInputProperties\"\n\n    Receipt:\n      title: Objeto Receipt\n      allOf:\n        - $ref: \"#/components/schemas/ResourceAutoGeneratedProps\"\n        - $ref: \"#/components/schemas/ReceiptProperties\"\n    ReceiptProperties:\n      allOf:\n        - type: object\n          properties:\n            expires_at:\n              type: string\n              format: date-time\n              example: 2021-09-17T15:21:23.456Z\n              description: |\n                Fecha de expiración en formato ISO8601 (UTC String).\n                Es la fecha límite para que el cliente pueda facturar su recibo en el portal de autofactura.\n                Se calcula automáticamente a partir de las configuraciones de recibo de la organización.\n            status:\n              type: string\n              enum:\n                - open\n                - canceled\n                - invoiced_to_customer\n                - invoiced_globally\n              description: Estado actual del recibo.\n            self_invoice_url:\n              type: string\n              format: url\n              example: https://factura.space/empresa-demo/r9YqYarL\n              description: |\n                Dirección URL para realizar autofactura. Incluye el `key` del recibo.\n                Puedes usarla para generar un botón o un QR de facturación para tus clientes.\n            total:\n              type: number\n              example: 356.78\n              description: Monto total de la operación\n            invoice:\n              type: string\n              example: 614496b471d422de4b6cfcc4\n              description: ID de la factura asociada, en caso de estar facturado.\n            key:\n              type: string\n              example: r9YqYarL\n              description: Autogenerado. Identificador único alfanumérico corto, útil para acceder a la autofactura desde tu micrositio en factura.space\n            items:\n              type: array\n              description: Conceptos incluidos en el recibo\n              items:\n                $ref: \"#/components/schemas/LineItem\"\n        - $ref: \"#/components/schemas/ReceiptEditableProperties\"\n    ReceiptInput:\n      allOf:\n        - type: object\n          required:\n            - items\n            - payment_form\n          properties:\n            items:\n              type: array\n              description: Conceptos a incluir en el recibo.\n              items:\n                $ref: \"#/components/schemas/LineItemInput\"\n        - $ref: \"#/components/schemas/ReceiptEditableProperties\"\n    ReceiptEditableProperties:\n      type: object\n      properties:\n        payment_form:\n          type: string\n          example: \"03\"\n          description: Código que representa la forma de pago, según el [catálogo del SAT](#forma-de-pago).\n        folio_number:\n          type: integer\n          example: 120\n          description: Autoincremental. Número de folio del recibo para control interno y sin validez fiscal.\n        currency:\n          type: string\n          example: MXN\n          description: Código de la moneda, acorde al estándar [ISO 4217](https://es.wikipedia.org/wiki/ISO_4217).\n        exchange:\n          type: number\n          minimum: 0\n          example: 1\n          description: Tipo de cambio conforme a la moneda usada. Representa el número de pesos mexicanos que equivalen a una unidad de la divisa señalada en el atributo `currency`.\n        branch:\n          type: string\n          description: Nombre de la sucursal donde se expidió el recibo.\n    ReceiptSearchResult:\n      allOf:\n        - $ref: \"#/components/schemas/SearchResult\"\n        - type: object\n          properties:\n            data:\n              type: array\n              items:\n                $ref: \"#/components/schemas/Receipt\"\n    InvoiceReceiptInput:\n      type: object\n      required:\n        - customer\n      allOf:\n        - type: object\n          properties:\n            customer:\n              description: Cliente receptor de la factura.\n              oneOf:\n                - $ref: \"#/components/schemas/CustomerCreateInput\"\n                - type: string\n                  title: customer_id\n                  description: ID del objeto 'customer' previamente registrado en Facturapi.\n                  example: 58e93bd8e86eb318b0197456\n            use:\n              type: string\n              default: G01\n              description: Código de Uso CFDI según el catálogo del SAT. Puedes ver los códigos en [esta tabla](#uso-cfdi), o utilizar las constantes incluídas en nuestras librerías.\n            conditions:\n              type: string\n              nullable: true\n              minLength: 1\n              maxLength: 1000\n              description: Condiciones de pago\n        - $ref: \"#/components/schemas/InvoiceableCommonInput\"\n    GlobalInvoiceInput:\n      type: object\n      properties:\n        from:\n          type: string\n          format: date-time\n          default: Inicio del último periodo\n          description: Fecha inicial de los recibos que se incluirán en la factura global. Por default, este valor es el inicio del último periodo (día, semana, mes), según tengas configurado en tu configuración de recibos de tu organización.\n        to:\n          type: string\n          format: date-time\n          default: Fin del último periodo\n          description: |\n            Fecha final de los recibos que se incluirán en la factura global.\n            Por default, este valor es el fin del último periodo (día, semana,\n            mes), según tengas configurado en tu configuración de recibos de\n            tu organización.\n        folio_number:\n          type: integer\n          default: autoincremental\n          description: Número de folio asignado por la empresa para control interno. Si se omite, se asignará el valor autoincremental de la organización.\n        series:\n          type: string\n          maxLength: 25\n          nullable: true\n          description: Serie. Caracteres designados por la empresa para control interno y sin validez fiscal.\n\n    Retention:\n      title: Objeto Retention\n      allOf:\n        - $ref: \"#/components/schemas/ResourceAutoGeneratedProps\"\n        - $ref: \"#/components/schemas/RetentionReadOnlyProperties\"\n        - $ref: \"#/components/schemas/RetentionProperties\"\n    RetentionReadOnlyProperties:\n      type: object\n      properties:\n        status:\n          type: string\n          enum:\n            - valid\n            - canceled\n          description: |\n            Estado actual de la retención.\n          example: valid\n        verification_url:\n          type: string\n          format: uri\n          description: Dirección URL para verificar el estado de la retención en el portal del SAT. Este link es el mismo que aparece en el código QR, en el PDF de la retención.\n          example: https://verificacfdi.facturaelectronica.sat.gob.mx/default.aspx?id=45BEC0CA-5F1E-491E-9417-698EA48C382A\u0026re=AAA010101AAA\u0026rr=ABC101010111\u0026tt=345.600000\u0026fe=bWApPw==\n        cancellation_receipt:\n          type: string\n          format: xml\n          description: Si el comprobante fue cancelado, este campo contiene el acuse de recibo de cancelación en formato XML.\n        type:\n          type: string\n          enum:\n            - Retención\n          example: Retención\n          description: Tipo de comprobante.\n        uuid:\n          type: string\n          format: uuid\n          description: Folio fiscal de la retención, asignado por el SAT.\n          example: 39c85a3f-275b-4341-b259-e8971d9f8a94\n        stamp:\n          $ref: \"#/components/schemas/Stamp\"\n        customer:\n          $ref: \"#/components/schemas/CustomerInfo\"\n    RetentionProperties:\n      type: object\n      properties:\n        cve_retenc:\n          type: string\n          example: 01\n          description: Clave de la retención o información de pagos de acuerdo al catálogo del SAT.\n        fecha_exp:\n          type: string\n          format: date-time\n          example: \"2021-09-15T06:03:23.000Z\"\n          description: Fecha de expedición del comprobante en formato ISO8601 (UTC String).\n        desc_retenc:\n          type: string\n          description: Si la clave de la retención es “25” (Otro tipo de retenciones), este campo se usa para registrar la descripción de la retención.\n        folio_int:\n          type: string\n          description: Identificador alfanumérico para control interno de la empresa y sin relevancia fiscal.\n        periodo:\n          type: object\n          description: Información sobre el periodo de la retención.\n          properties:\n            mes_ini:\n              type: integer\n              minimum: 1\n              maximum: 12\n              description: Mes inicial del periodo de la retención.\n            mes_fin:\n              type: integer\n              minimum: 1\n              maximum: 12\n              description: Mes final del periodo de la retención.\n            ejerc:\n              type: integer\n              description: Año o ejercicio fiscal en que se realizó la retención.\n        totales:\n          type: object\n          description: Información sobre el total de retenciones efectuadas en el periodo correspondiente.\n          properties:\n            monto_tot_operacion:\n              type: number\n              minimum: 0\n              description: Monto total de la operación, con precisión de hasta 6 decimales.\n            monto_tot_grav:\n              type: number\n              minimum: 0\n              description: Monto total gravado.\n            monto_tot_exent:\n              type: number\n              minimum: 0\n              description: Monto total exento.\n            monto_tot_ret:\n              type: number\n              minimum: 0\n              description: Suma de los montos de impuestos retenidos.\n            imp_retenidos:\n              type: array\n              description: Colección de impuestos retenidos.\n              items:\n                type: object\n                properties:\n                  base_ret:\n                    type: number\n                    minimum: 0\n                    description: Base del impuesto retenido.\n                  impuesto:\n                    type: string\n                    enum:\n                      - IVA\n                      - ISR\n                    example: IVA\n                    description: Clave del tipo de impuesto retenido, del catálogo del SAT.\n                  monto_ret:\n                    type: number\n                    minimum: 0\n                    description: Importe del impuesto retenido\n                  pago_provisional:\n                    type: boolean\n                    description: |\n                      - `true`: Pago provisional\n                      - `false`: Pago definitivo\n        external_id:\n          type: string\n          description: Identificador opcional que puedes usar para relacionar esta retención con tus registros y poder hacer búsquedas usando este identificador. Facturapi no valida que este campo sea único.\n        complements:\n          type: array\n          default: []\n          items:\n            $ref: \"#/components/schemas/CustomComplementProperties\"\n          description: Complementos a incluir en la factura.\n        pdf_custom_section:\n          type: string\n          format: html\n          description: En caso de que necesites incluir más información en el PDF, este campo te permite insertar código HTML con tu propio contenido.\n        addenda:\n          type: string\n          format: xml\n          description: Código XML con la Addenda que se necesite agregar a la factura.\n        namespaces:\n          type: array\n          description: Namespaces a insertar en el nodo raíz de la factura. Requerido en complementos y addenda.\n          items:\n            $ref: \"#/components/schemas/NamespaceProperties\"\n    RetentionSearchResult:\n      allOf:\n        - $ref: \"#/components/schemas/SearchResult\"\n        - type: object\n          properties:\n            data:\n              type: array\n              items:\n                $ref: \"#/components/schemas/Retention\"\n    RetentionInput:\n      type: object\n      required:\n        - customer\n        - cve_retenc\n        - periodo\n        - totales\n      properties:\n        customer:\n          description: Cliente receptor de la factura.\n          oneOf:\n            - $ref: \"#/components/schemas/CustomerCreateInput\"\n            - type: string\n              title: customer_id\n              description: ID del objeto 'customer' previamente registrado en Facturapi.\n              example: 58e93bd8e86eb318b0197456\n        cve_retenc:\n          type: string\n          example: 26\n          description: Clave de la retención o información de pagos de acuerdo al [catálogo del SAT](#clave-de-retención).\n        fecha_exp:\n          type: string\n          format: date-time\n          example: \"2021-09-15T06:03:23.000Z\"\n          description: Fecha de expedición del comprobante en formato ISO8601 (UTC String).\n        desc_retenc:\n          type: string\n          description: Si la clave de la retención es “25” (Otro tipo de retenciones), este campo se usa para registrar la descripción de la retención.\n        folio_int:\n          type: string\n          example: R123\n          description: Identificador alfanumérico para control interno de la empresa y sin relevancia fiscal.\n        periodo:\n          type: object\n          description: Información sobre el periodo de la retención.\n          required:\n            - mes_ini\n            - mes_fin\n            - ejerc\n          properties:\n            mes_ini:\n              type: integer\n              minimum: 1\n              maximum: 12\n              example: 9\n              description: Mes inicial del periodo de la retención.\n            mes_fin:\n              type: integer\n              minimum: 1\n              maximum: 12\n              example: 9\n              description: Mes final del periodo de la retención.\n            ejerc:\n              type: integer\n              example: 2021\n              description: Año o ejercicio fiscal en que se realizó la retención.\n        totales:\n          type: object\n          description: Información sobre el total de retenciones efectuadas en el periodo correspondiente.\n          required:\n            - monto_tot_operacion\n            - monto_tot_exent\n            - imp_retenidos\n          properties:\n            monto_tot_operacion:\n              type: number\n              minimum: 0\n              description: Monto total de la operación, con precisión de hasta 6 decimales.\n            monto_tot_grav:\n              type: number\n              minimum: 0\n              description: Monto total gravado.\n            monto_tot_exent:\n              type: number\n              minimum: 0\n              description: Monto total exento.\n            monto_tot_ret:\n              type: number\n              minimum: 0\n              description: Suma de los montos de impuestos retenidos.\n            imp_retenidos:\n              type: array\n              description: Colección de impuestos retenidos.\n              required:\n                - monto_ret\n              items:\n                type: object\n                properties:\n                  base_ret:\n                    type: number\n                    minimum: 0\n                    description: Base del impuesto retenido.\n                  impuesto:\n                    type: string\n                    enum:\n                      - IVA\n                      - ISR\n                    example: IVA\n                    description: Clave del tipo de impuesto retenido, del catálogo del SAT.\n                  monto_ret:\n                    type: number\n                    minimum: 0\n                    description: Importe del impuesto retenido\n                  pago_provisional:\n                    type: boolean\n                    description: |\n                      - `true`: Pago provisional\n                      - `false`: Pago definitivo\n        external_id:\n          type: string\n          description: Identificador opcional que puedes usar para relacionar esta retención con tus registros y poder hacer búsquedas usando este identificador. Facturapi no valida que este campo sea único.\n        complements:\n          type: array\n          default: []\n          items:\n            $ref: \"#/components/schemas/CustomComplementInput\"\n          description: Complementos a incluir en la factura.\n        pdf_custom_section:\n          type: string\n          format: html\n          description: En caso de que necesites incluir más información en el PDF, este campo te permite insertar código HTML con tu propio contenido.\n        addenda:\n          type: string\n          format: xml\n          description: Código XML con la Addenda que se necesite agregar a la factura.\n        namespaces:\n          type: array\n          description: Namespaces a insertar en el nodo raíz de la factura. Requerido en complementos y addenda.\n          items:\n            allOf:\n              - $ref: \"#/components/schemas/NamespaceRequiredProperties\"\n              - $ref: \"#/components/schemas/NamespaceProperties\"\n\n    OrganizationAddress:\n      allOf:\n        - $ref: \"#/components/schemas/CommonAddressProperties\"\n        - type: object\n          description: Domicilio fiscal de la organización emisora.\n          properties:\n            state:\n              type: string\n              description: Nombre del Estado o Entidad Federativa.\n              example: Sonora\n    OrganizationSearchResult:\n      allOf:\n        - $ref: \"#/components/schemas/SearchResult\"\n        - type: object\n          properties:\n            data:\n              type: array\n              items:\n                $ref: \"#/components/schemas/Organization\"\n    Organization:\n      title: Objeto Organization\n      type: object\n      properties:\n        id:\n          type: string\n          description: ID del objeto\n          example: \"5a2a307be93a2f00129ea035\"\n        created_at:\n          type: string\n          format: date-time\n          description: Fecha de registro\n          example: \"2017-05-05T20:55:33.468Z\"\n        is_production_ready:\n          type: boolean\n          description: Indica si la organización tiene información necesaria para facturar en ambiente Live.\n        pending_steps:\n          type: array\n          description: Lista de pasos que se necesitan completar para que esta organización pueda emitir facturas válidas en ambiente Live.\n          items:\n            type: object\n            properties:\n              type:\n                type: string\n                enum:\n                  - legal\n                  - logo\n                  - certificate\n                description: Código que representa el tiop de paso que se requiere completar\n              description:\n                type: string\n                description: Texto que describe el paso que se requiere completar y que puedes usar para mostrárselo al usuario.\n        legal:\n          type: object\n          description: Datos fiscales de la empresa.\n          properties:\n            name:\n              type: string\n              description: Nombre comercial de la organización.\n            legal_name:\n              type: string\n              description: Nombre Fiscal o Razón Social de la organización.\n            tax_system:\n              type: string\n              description: Código de Régimen Fiscal, del [catálogo del SAT](#tipo-de-régimen).\n            website:\n              type: string\n              description: Sitio web de la organización, que se utilizará al enviar la factura por correo electrónico.\n            phone:\n              type: string\n              description: Teléfono de la organización, que aparecerá en el PDF de la factura.\n            address:\n              allOf:\n                - type: object\n                  description: Domicilio fiscal de la organización.\n                - $ref: \"#/components/schemas/OrganizationAddress\"\n\n    OrganizationCreateInput:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          maxLength: 100\n          description: Nombre comercial de la organización.\n    OrganizationLegalInput:\n      type: object\n      required:\n        - name\n        - legal_name\n        - tax_system\n        - address\n      properties:\n        name:\n          type: string\n          maxLength: 100\n          description: Nombre comercial de la organización.\n        legal_name:\n          type: string\n          maxLength: 100\n          description: Nombre Fiscal o Razón Social de la organización.\n        tax_system:\n          type: string\n          maxLength: 3\n          minLength: 3\n          description: Código del Régimen Fiscal, del [catálogo del SAT](#régimen-fiscal).\n        website:\n          type: string\n          description: Sitio web de la organización, que aparecerá en el PDF y correos de facturas y recibos.\n        support_email:\n          type: string\n          description: Dirección de correo electrónico para aclaraciones. Aparecerá en el PDF y correos de facturas y recibos.\n        phone:\n          type: string\n          description: Teléfono de la organización, que aparecerá en el PDF y correos de facturas y recibos.\n        address:\n          allOf:\n            - type: object\n              description: Domicilio fiscal de la organización emisora.\n              required:\n                - zip\n                - street\n                - exterior\n            - $ref: \"#/components/schemas/OrganizationAddress\"\n    OrganizationCertsInput:\n      type: object\n      required:\n        - cerFile\n        - keyFile\n        - password\n      properties:\n        cerFile:\n          type: string\n          format: binary\n          description: Contenido binario del archivo con extensión `.cer` del certificado CSD.\n        keyFile:\n          type: string\n          format: binary\n          description: Contenido binario del archivo con extensión `.key` del certificado CSD.\n        password:\n          type: string\n          description: Contraseña de la llave del certificado.\n    OrganizationLogoInput:\n      type: object\n      required:\n        - file\n      properties:\n        file:\n          type: string\n          format: binary\n          description: |\n            Contenido binario del archivo con la imagen que se usará como\n            logotipo. Formatos soportados:\n            - jpg\n            - png\n            - svg\n    OrganizationCustomizationInput:\n      type: object\n      properties:\n        color:\n          type: string\n          format: hex\n          example: #BADA55\n          description: Color en representación Hexadecimal RGB de 6 caracteres. El caracter de almohadilla (#) al inicio es opcional.\n        next_folio_number:\n          type: integer\n          example: 123\n          description: Número de folio que se asignará a la siguiente factura en ambiente Live (y que se incrementará automáticamente por cada nueva factura).\n        next_folio_number_test:\n          type: integer\n          example: 123\n          description: Número de folio que se asignará a la siguiente factura en ambiente Test (y que se incrementará automáticamente por cada nueva factura).\n        pdf_extra:\n          type: object\n          description: Configura qué campos opcionales se queiren mostrar en el PDF. El SAT no obliga a mostrar estos campos, pero pueden activarse según la preferencia de la organización.\n          properties:\n            codes:\n              type: boolean\n              default: false\n              description: |\n                Mostrar códigos de catálogos del SAT junto a sus descripciones. Ejemplo: “KGM Kilogramo”.\n            product_key:\n              type: boolean\n              default: false\n              description: |\n                Mostrar la clave de producto-servicio.\n    OrganizationReceiptsInput:\n      type: object\n      properties:\n        invoicing_period:\n          type: string\n          default: month\n          enum:\n            - day\n            - week\n            - month\n            - two_months\n          description: |\n            Periodicidad con la que la empresa decide realizar una factura global (al público en general) por todos los recibos no facturados.\n        duration_days:\n          type: integer\n          default: 7\n          description: |\n            Días máximos para facturar por medio del portal de autofactura\n            después de emitido el recibo y antes del último día del “Periodo de\n            facturación” (`invoicing_period`). El valor `0` desactiva esta\n            opción, haciendo que los recibos expiren siempre el último día del\n            periodo.\n        next_folio_number:\n          type: integer\n          description: Número de folio que se asignará al siguiente recibo creado en esta organización en ambiente Live.\n        next_folio_number_test:\n          type: integer\n          description: Número de folio que se asignará al siguiente recibo creado en esta organización en ambiente Test.\n        ask_address:\n          type: string\n          enum:\n            - optional\n            - hidden\n            - required\n          default: optional\n          description: |\n            Opción que define si se le debe pedir el domicilio al usuario en el sitio de autofactura. Puede tener los siguientes valores:\n            - `optional`: El usuario tendrá la opción de agregar su domicilio si así lo desea, pero no será obligatorio.\n            - `hidden`: El usuario no tendrá la opción de agregar su domicilio.\n            - `required`: El usuario deberá llenar la información sobre su domicilio para crear su factura.\n    DomainField:\n      type: string\n      maxLength: 50\n      minLength: 4\n      pattern: ^[a-z][a-z0-9-_]{2,48}[a-z0-9]$\n      description: |\n        Nombre del dominio. Se permiten caracteres alfanuméricos, sólo minúsculas,\n        guión (-) y guión bajo (_). Debe empezar con una letra y\n        terminar en letra o número.\n    OrganizationDomainInput:\n      type: object\n      required:\n        - domain\n      properties:\n        domain:\n          $ref: \"#/components/schemas/DomainField\"\n    OrganizationApiKeys:\n      type: object\n      properties:\n        live_key:\n          type: string\n          description: Llave secreta para crear recursos para la organización en ambiente Live\n        test_key:\n          type: string\n          description: Llave secreta para crear recursos para la organización en ambiente Test\n  securitySchemes:\n    \"Secret Live Key\":\n      type: http\n      scheme: bearer\n      bearerFormat: sk_live_XXXXXXXXXXXX\n      description: Única por organización. Permite crear, obtener y administrar recursos en ambiente Live para una organización en específico.\n    \"Secret Test Key\":\n      type: http\n      scheme: bearer\n      bearerFormat: sk_test_XXXXXXXXXXXX\n      description: Única por organización. Permite crear, obtener y administrar recursos en ambiente Test para una organización en específico.\n    \"Secret User Key\":\n      type: http\n      scheme: bearer\n      bearerFormat: sk_user_XXXXXXXXXXXX\n      description: Única por cuenta. Permite crear y configurar organizaciones pertenecientes a la cuenta del usuario.\n",
			"canonicalURL": "/github.com/FacturAPI/facturapi-docs@68085bc644af1a1c6d512130eb64f54207d0f23d/-/blob/website/openapi_v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/FacturAPI/facturapi-docs/blob/68085bc644af1a1c6d512130eb64f54207d0f23d/website/openapi_v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: securitySchemes: at website/openapi_v1.yaml:6806:5: invalid name: \"Secret Live Key\" doesn't match \"^[a-zA-Z0-9.\\\\-_]+$\""
}