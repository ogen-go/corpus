{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/DataBooster/PyWebApi"
		},
		"file": {
			"name": "powerbipusher.swagger.yaml",
			"size": 0,
			"path": "Sample/UserApps/PowerBIPusher/powerbipusher.swagger.yaml",
			"byteSize": 9287,
			"content": "openapi: 3.0.0\ninfo:\n  description: \u003e-\n    Power BI Data Pusher acts as a data pump to read multiple resultsets from\n    database stored procedure and push them into multiple tables in Power BI\n    Push Datasets. It provides 3 main functions:\n  version: 1.0.0\n  title: Power BI Data Pusher\n  contact:\n    name: PyWebApi\n    url: 'https://github.com/DataBooster/PyWebApi'\n  license:\n    name: MIT\n    url: 'https://github.com/DataBooster/PyWebApi/blob/master/LICENSE'\n\nexternalDocs:\n  url: 'https://github.com/DataBooster/PyWebApi#powerbi-data-pusher'\n  description: Wiki\n\ntags:\n  - name: Design-time\n  - name: Deployment-time\n  - name: Run-time\n\npaths:\n  /db_to_pbi.derive_bim:\n    post:\n      summary: \"Derive Tabular Model from ResultSets of a Stored Procedure.\"\n      operationId: derive_bim\n      description: |-\n        Generate and download a **Tabular Model (.bim file)** based on [ResultSets of a Stored Procedure](https://github.com/DataBooster/DbWebApi/wiki#http-response) as sample data for all tables to be created in a Power BI dataset.\n\n        The first result set of the stored procedure must be used to indicate the corresponding Power BI table name for all subsequent result sets.\n      tags:\n        - Design-time\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/derive_bim'\n        description: Payload\n      responses:\n        \"200\":\n          description: Download the tabular model (.bim) file\n          content:\n            application/json:\n              schema:\n                type: object\n                example: {\"name\": \"PushDatasetName\", \"compatibilityLevel\": 1520, \"model\": {\"defaultPowerBIDataSourceVersion\": \"powerBI_V3\", \"tables\": [{\"name\": \"Table1\", \"columns\": [{\"name\": \"Columnl\", \"dataType\": \"dateTime\"}], \"partitions\": [{\"name\": \"None\", \"source\": {\"type\": \"m\"}}]}]}}\n        \"401\":\n          $ref: '#/components/responses/Unauthorized'\n        default:\n          $ref: '#/components/responses/ServerError'\n\n  /db_to_pbi.deploy_dataset:\n    post:\n      summary: \"Deploy a Tabular Model (.bim file) to Power BI workspace as a Push Dataset.\"\n      operationId: deploy_dataset\n      description: Create a pushable dataset (or update the metadata and schema for existing tables) in Power BI Service by a Tabular Model (.bim) file.\n      tags:\n        - Deployment-time\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/deploy_dataset'\n        description: Payload\n      responses:\n        \"200\":\n          description: Return the dataset_id that just been created or updated.\n          content:\n            application/json:\n              schema:\n                type: string\n                format: uuid\n        \"401\":\n          $ref: '#/components/responses/Unauthorized'\n        default:\n          $ref: '#/components/responses/ServerError'\n        \n  /db_to_pbi.push_data:\n    post:\n      summary: \"Push new data to a Power BI Push Dataset.\"\n      operationId: push_data\n      description: |-\n        Push all ResultSets of a Stored Procedure - data for multiple tables into a Power BI Push Dataset.\n\n        The first result set of the stored procedure must be used to indicate the corresponding Power BI table name in Push Dataset for all subsequent result sets, and (optional) the Sequence Number for the corresponding table if you need to enable the **X-PowerBI-PushData-SequenceNumber** feature - a Power BI build-in mechanism to guarantee which rows have been successfully pushed.\n      tags:\n        - Run-time\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/push_data'\n        description: Payload\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                example: null\n        \"401\":\n          $ref: '#/components/responses/Unauthorized'\n        default:\n          $ref: '#/components/responses/ServerError'\n\n  /db_to_pbi.get_seq_num:\n    post:\n      summary: \"Get all current sequence numbers of specified (or all) tables.\"\n      operationId: get_seq_num\n      description: Discover the current sequence numbers which are stored with the specified list of tables in a Power BI Push Dataset.\n      tags:\n        - Run-time\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/table_list'\n        description: Payload\n      responses:\n        \"200\":\n          description: Return a list of table names with associated sequence numbers.\n          content:\n            application/json:\n              schema:\n                type: object\n        \"401\":\n          $ref: '#/components/responses/Unauthorized'\n        default:\n          $ref: '#/components/responses/ServerError'\n  \n  /db_to_pbi.truncate:\n    post:\n      summary: \"Truncate specified (or all) tables.\"\n      operationId: truncate\n      description: Removes all rows from specified (or all) tables in a Power BI Push Dataset.\n      tags:\n        - Run-time\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/table_list'\n        description: Payload\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        \"401\":\n          $ref: '#/components/responses/Unauthorized'\n        default:\n          $ref: '#/components/responses/ServerError'\n\ncomponents:\n\n  responses:\n    Unauthorized:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error-response'\n    ServerError:\n      description: Internal Server Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error-response'\n\n  schemas:\n    _sp-base:\n      type: object\n      required:\n        - sp_url\n        - sp_args\n      properties:\n        sp_url:\n          type: string\n          format: url\n          example: http://localhost/dbwebapi/oradev/my_app/schema.package_for_pbi.test_dataset/json?NamingCase=Pascal\n          description: URL of the stored procedure\n        sp_args:\n          type: object\n          default: {}\n          description: Payload of the stored procedure\n      description: \u003chttps://github.com/DataBooster/DbWebApi/wiki\u003e\n        \n    derive_bim:\n      allOf:\n        - $ref: '#/components/schemas/_sp-base'\n        - type: object\n          properties:\n            dataset_name: \u0026dataset_name_sp\n              type: string\n              default: (same as the stored procedure name)\n              example: PushDatasetTest1\n              description: The name of Push Dataset. If this argument is omitted, the name of the stored procedure will be passed as the name of the dataset.\n            timeout: \u0026timeout\n              type: number\n              default: \u0026timeout_default 180\n              example: *timeout_default\n              description: Stop waiting for the stored procedure's response after a given number of seconds.\n          description: derive_bim request payload\n\n    deploy_dataset:\n      type: object\n      required:\n        - model_bim\n        - dataset_name\n      properties:\n        model_bim:\n          type: string\n          example: \\\\network_server\\share_folder\\test_model.bim\n          description: This argument can be a JSON object, a JSON string, or a network path of the .bim file that the server can read.\n        dataset_name: \u0026dataset_name\n          type: string\n          example: PushDatasetTest1\n          description: The name of Power BI Push Dataset.\n        workspace: \u0026workspace\n          type: string\n          default: null\n          example: Power BI Workspace1\n          description: Power BI workspace\n      description: deploy_dataset request payload\n\n    push_data:\n      allOf:\n        - $ref: '#/components/schemas/_sp-base'\n        - type: object\n          required:\n            - dataset_name\n          properties:\n            dataset_name: *dataset_name_sp\n            workspace: *workspace\n            timeout: *timeout\n          description: push_data request payload\n\n    table_list:\n      type: object\n      required:\n        - table_names\n        - dataset_name\n      properties:\n        table_names:\n          type: array\n          items:\n            type: string\n            description: table name\n          example: null\n          description: An array of table names. *(null indicates all tables in the Power BI Push Dataset)*\n        dataset_name: *dataset_name\n        workspace: *workspace\n\n    error-response:\n      type: object\n      required:\n        - ExceptionMessage\n      properties:\n        ExceptionMessage:\n          type: string\n        ExceptionType:\n          type: string\n        StackTrace:\n          type: string\n\nservers:\n  - description: (Please update the local-test base URL to your actual path)\n    url: http://localhost/PyWebApi/pys/test_app/samples/powerbipusher\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"derive_bim\": parse schema: allOf: [0]: parse schema: resolve \"#/components/schemas/_sp-base\": parse schema: property \"sp_args\": parse default: unexpected type: \"object\""
}