{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/deuxfleurs-org/garage"
		},
		"file": {
			"name": "garage-admin-v0.yml",
			"size": 0,
			"path": "doc/api/garage-admin-v0.yml",
			"byteSize": 41567,
			"content": "openapi: 3.0.0\ninfo:\n  version: v0.8.0\n  title: Garage Administration API v0+garage-v0.8.0\n  description: |\n    Administrate your Garage cluster programatically, including status, layout, keys, buckets, and maintainance tasks.\n    \n    *Disclaimer: The API is not stable yet, hence its v0 tag. The API can change at any time, and changes can include breaking backward compatibility. Read the changelog and upgrade your scripts before upgrading. Additionnaly, this specification is very early stage and can contain bugs, especially on error return codes/types that are not tested yet. Do not expect a well finished and polished product!*\npaths: \n  /status:\n    get:\n      tags: \n        - Nodes\n      operationId: \"GetNodes\"\n      summary: \"Status of this node and other nodes in the cluster\"\n      description: |\n        Returns the cluster's current status, including:\n         - ID of the node being queried and its version of the Garage daemon\n         - Live nodes\n         - Currently configured cluster layout\n         - Staged changes to the cluster layout\n      responses:\n        '500':\n          description: |\n            The server can not answer your request because it is in a bad state\n        '200':\n          description: |\n            Information about the queried node, its environment and the current layout\n          content:\n            application/json:\n              schema:\n                type: object\n                required: [ node, garageVersion, knownNodes, layout ]\n                properties:\n                  node: \n                    type: string\n                    example: \"ec79480e0ce52ae26fd00c9da684e4fa56658d9c64cdcecb094e936de0bfe71f\"\n                  garageVersion:\n                    type: string\n                    example: \"v0.7.3\"\n                  knownNodes:\n                    type: object\n                    example:\n                      \"ec79480e0ce52ae26fd00c9da684e4fa56658d9c64cdcecb094e936de0bfe71f\":\n                        addr: \"10.0.0.11:3901\"\n                        is_up: true\n                        last_seen_secs_ago: 9\n                        hostname: orion\n                      \"4a6ae5a1d0d33bf895f5bb4f0a418b7dc94c47c0dd2eb108d1158f3c8f60b0ff\":\n                        addr: \"10.0.0.12:3901\"\n                        is_up: true\n                        last_seen_secs_ago: 13\n                        hostname: pegasus\n                      \"e2ee7984ee65b260682086ec70026165903c86e601a4a5a501c1900afe28d84b\":\n                        addr: \"10.0.0.13:3901\"\n                        is_up: true\n                        last_seen_secs_ago: 2\n                        hostname: neptune\n                    additionalProperties:\n                      $ref: '#/components/schemas/NodeNetworkInfo'\n                  layout:\n                    $ref: '#/components/schemas/ClusterLayout'\n                          \n  /connect:\n    post:\n      tags:\n        - Nodes\n      operationId: \"AddNode\"\n      summary: \"Connect target node to other Garage nodes\"\n      description: |\n        Instructs this Garage node to connect to other Garage nodes at specified `\u003cnode_id\u003e@\u003cnet_address\u003e`. `node_id` is generated automatically on node start.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              example:\n                - \"ec79480e0ce52ae26fd00c9da684e4fa56658d9c64cdcecb094e936de0bfe71f@10.0.0.11:3901\"\n                - \"4a6ae5a1d0d33bf895f5bb4f0a418b7dc94c47c0dd2eb108d1158f3c8f60b0ff@10.0.0.12:3901\"\n              items:\n                type: string\n                \n      responses:\n        '500':\n          description: |\n            The server can not answer your request because it is in a bad state\n        '400':\n          description: |\n            Your request is malformed, check your JSON\n        '200':\n          description: |\n            The request has been handled correctly but it does not mean that all connection requests succeeded; some might have fail, you need to check the body!\n          content:\n            application/json:\n              schema:\n                type: array\n                example:\n                  - success: true\n                    error:\n                  - success: false\n                    error: \"Handshake error\"\n                items:\n                  type: object\n                  properties:\n                    success:\n                      type: boolean\n                      example: true\n                    error:\n                      type: string\n                      nullable: true\n                      example: \n                \n  /layout:\n    get:\n      tags:\n        - Layout\n      operationId: \"GetLayout\"\n      summary: \"Details on the current and staged layout\"\n      description: |\n        Returns the cluster's current layout, including:\n          - Currently configured cluster layout\n          - Staged changes to the cluster layout\n          \n        *The info returned by this endpoint is a subset of the info returned by `GET /status`.*\n      responses:\n        '500':\n          description: |\n            The server can not answer your request because it is in a bad state\n        '200':\n          description: |\n            Returns the cluster's current cluster layout:\n              - Currently configured cluster layout\n              - Staged changes to the cluster layout\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterLayout'\n                \n    post:\n      tags:\n        - Layout\n      operationId: \"AddLayout\"\n      summary: \"Send modifications to the cluster layout\"\n      description: |\n        Send modifications to the cluster layout. These modifications will be included in the staged role changes, visible in subsequent calls of `GET /layout`. Once the set of staged changes is satisfactory, the user may call `POST /layout/apply` to apply the changed changes, or `POST /layout/revert` to clear all of the staged changes in the layout.\n        Note that setting the capacity to `null` will configure the node as a gateway.\n      requestBody:\n        description: |\n          To add a new node to the layout or to change the configuration of an existing node, simply set the values you want.\n          To remove a node, set it to `null` instead of passing a configuration object.\n        \n          Contrary to the CLI that may update only a subset of the fields capacity, zone and tags, when calling this API all of these values must be specified.\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              example:\n                \"e2ee7984ee65b260682086ec70026165903c86e601a4a5a501c1900afe28d84b\":\n                  zone: \"geneva\"\n                  capacity: 4\n                  tags:\n                    - gateway\n                \"4a6ae5a1d0d33bf895f5bb4f0a418b7dc94c47c0dd2eb108d1158f3c8f60b0ff\":\n                \n              additionalProperties:\n                $ref: '#/components/schemas/NodeClusterInfo'\n      responses:\n        '500':\n          description: \"The server can not handle your request. Check your connectivity with the rest of the cluster.\"\n        '400':\n          description: \"Invalid syntax or requested change\"\n        '200':\n          description: \"The layout modification has been correctly staged\"\n          \n  /layout/apply:\n    post:\n      tags:\n        - Layout\n      operationId: \"ApplyLayout\"\n      summary: \"Apply staged layout\"\n      description: |\n        Applies to the cluster the layout changes currently registered as staged layout changes.\n      requestBody:\n        description: |\n          Similarly to the CLI, the body must include the version of the new layout that will be created, which MUST be 1 + the value of the currently existing layout in the cluster.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LayoutVersion'\n              \n      responses:\n        '500':\n          description: \"The server can not handle your request. Check your connectivity with the rest of the cluster.\"\n        '400':\n          description: \"Invalid syntax or requested change\"\n        '200':\n          description: \"The staged layout has been applied as the new layout of the cluster, a rebalance has been triggered.\"\n          \n  /layout/revert:\n    post:\n      tags:\n        - Layout\n      operationId: \"RevertLayout\"\n      summary: \"Clear staged layout\"\n      description: |\n        Clears all of the staged layout changes.\n      requestBody:\n        description: |\n          Reverting the staged changes is done by incrementing the version number and clearing the contents of the staged change list. Similarly to the CLI, the body must include the incremented version number, which MUST be 1 + the value of the currently existing layout in the cluster.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LayoutVersion'\n      responses:\n        '500':\n          description: \"The server can not handle your request. Check your connectivity with the rest of the cluster.\"\n        '400':\n          description: \"Invalid syntax or requested change\"\n        '200':\n          description: \"The staged layout has been cleared, you can start again sending modification from a fresh copy with `POST /layout`.\"\n          \n  /key:\n    get:\n      tags:\n        - Key\n      operationId: \"ListKeys\"\n      summary: \"List all keys\"\n      description: |\n        Returns all API access keys in the cluster.\n      responses:\n        '500':\n          description: \"The server can not handle your request. Check your connectivity with the rest of the cluster.\"\n        '200':\n          description: |\n            Returns the key identifier (aka `AWS_ACCESS_KEY_ID`) and its associated, human friendly, name if any (otherwise return an empty string)\n          content:\n            application/json:\n              schema:\n                type: array\n                example:\n                  - id: \"GK31c2f218a2e44f485b94239e\"\n                    name: \"test-key\"\n                  - id: \"GKe10061ac9c2921f09e4c5540\"\n                    name: \"\"\n                items:\n                  type: object\n                  required: [ id ]\n                  properties:\n                    id:\n                      type: string\n                    name:\n                      type: string\n    post:\n      tags:\n        - Key\n      operationId: \"AddKey\"\n      summary: \"Create a new API key\"\n      description: |\n        Creates a new API access key.\n      requestBody:\n        description: |\n          \"You can set a friendly name for this key, send an empty string instead\"\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  example: \"test-key\"\n      responses:\n        '500':\n          description: \"The server can not handle your request. Check your connectivity with the rest of the cluster.\"\n        '400':\n          description: \"Invalid syntax or requested change\"\n        '200':\n          description: \"The key has been added\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KeyInfo'\n          \n  \"/key?id={access_key}\":\n    get:\n      tags:\n        - Key\n      operationId: \"GetKey\"\n      summary: \"Get key information\"\n      description: |\n        Return information about a specific key and return its information\n      parameters:\n        - name: access_key\n          in: path\n          required: true\n          description: \"The exact API access key generated by Garage\"\n          example: \"GK31c2f218a2e44f485b94239e\"\n          schema:\n            type: string\n      responses:\n        '500':\n          description: \"The server can not handle your request. Check your connectivity with the rest of the cluster.\"\n        '200':\n          description: |\n            Returns information about the key\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KeyInfo'\n              \n    delete:\n      tags: \n        - Key\n      operationId: \"DeleteKey\"\n      summary: \"Delete a key\"\n      description: |\n       Delete a key from the cluster. Its access will be removed from all the buckets. Buckets are not automatically deleted and can be dangling. You should manually delete them before. \n      parameters:\n        - name: access_key\n          in: path\n          required: true\n          description: \"The exact API access key generated by Garage\"\n          example: \"GK31c2f218a2e44f485b94239e\"\n          schema:\n            type: string\n      responses:\n        '500':\n          description: \"The server can not handle your request. Check your connectivity with the rest of the cluster.\"\n        '200':\n          description: \"The key has been deleted\"\n\n        \n    post:\n      tags:\n        - Key\n      operationId: \"UpdateKey\"\n      summary: \"Update a key\"\n      description: |\n        Updates information about the specified API access key.\n      parameters:\n        - name: access_key\n          in: path\n          required: true\n          description: \"The exact API access key generated by Garage\"\n          example: \"GK31c2f218a2e44f485b94239e\"\n          schema:\n            type: string\n      requestBody:\n        description: |\n          For a given key, provide a first set with the permissions to grant, and a second set with the permissions to remove\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  example: \"test-key\"\n                allow:\n                  type: object\n                  example:\n                  properties:\n                    createBucket:\n                      type: boolean\n                      example: true\n                deny:\n                  type: object\n                  properties:\n                    createBucket:\n                      type: boolean\n                      example: true\n      responses:\n        '500':\n          description: \"The server can not handle your request. Check your connectivity with the rest of the cluster.\"\n        '400':\n          description: \"Invalid syntax or requested change\"\n        '200':\n          description: |\n            Returns information about the key\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KeyInfo'\n\n        \n  \"/key?search={pattern}\":\n    get:\n      tags:\n        - Key\n      operationId: \"SearchKey\"\n      summary: \"Select key by pattern\"\n      description: |\n        Find the first key matching the given pattern based on its identifier aor friendly name and return its information.\n      parameters:\n        - name: pattern\n          in: path\n          required: true\n          description: \"A pattern (beginning or full string) corresponding to a key identifier or friendly name\"\n          example: \"test-k\"\n          schema:\n            type: string\n      responses:\n        '500':\n          description: \"The server can not handle your request. Check your connectivity with the rest of the cluster.\"\n        '200':\n          description: |\n            Returns information about the key\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KeyInfo'\n\n  /key/import:\n    post:\n      tags:\n        - Key\n      operationId: \"ImportKey\"\n      summary: \"Import an existing key\"\n      description: |\n        Imports an existing API key. This feature must only be used for migrations and backup restore.\n\n        **Do not use it to generate custom key identifiers or you will break your Garage cluster.**\n      requestBody:\n        description: |\n          Information on the key to import\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required: [ name, accessKeyId, secretAccessKey ]\n              properties:\n                name:\n                  type: string\n                  example: \"test-key\"\n                accessKeyId:\n                  type: string\n                  example: \"GK31c2f218a2e44f485b94239e\"\n                secretAccessKey:\n                  type: string\n                  example: \"b892c0665f0ada8a4755dae98baa3b133590e11dae3bcc1f9d769d67f16c3835\"\n      responses:\n        '500':\n          description: \"The server can not handle your request. Check your connectivity with the rest of the cluster.\"\n        '400':\n          description: \"Invalid syntax or requested change\"\n        '200':\n          description: \"The key has been imported into the system\"\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KeyInfo' \n\n  /bucket:\n    get:\n      tags:\n        - Bucket\n      operationId: \"ListBuckets\"\n      summary: \"List all buckets\"\n      description: |\n        List all the buckets on the cluster with their UUID and their global and local aliases.\n      responses:\n        '500':\n          description: \"The server can not handle your request. Check your connectivity with the rest of the cluster.\"\n        '200':\n          description: |\n            Returns the UUID of the bucket and all its aliases\n          content:\n            application/json:\n              schema:\n                type: array\n                example:\n                  - id: \"70dc3bed7fe83a75e46b66e7ddef7d56e65f3c02f9f80b6749fb97eccb5e1033\"\n                    globalAliases: \n                      - \"container_registry\"\n                  - id: \"96470e0df00ec28807138daf01915cfda2bee8eccc91dea9558c0b4855b5bf95\"\n                    localAliases:\n                      - alias: \"my_documents\"\n                        accessKeyid: \"GK31c2f218a2e44f485b94239e\"\n                  - id: \"d7452a935e663fc1914f3a5515163a6d3724010ce8dfd9e4743ca8be5974f995\"\n                    globalAliases:\n                      - \"example.com\"\n                      - \"www.example.com\"\n                    localAliases:\n                      - alias: \"corp_website\"\n                        accessKeyId: \"GKe10061ac9c2921f09e4c5540\"\n                      - alias: \"web\"\n                        accessKeyid: \"GK31c2f218a2e44f485b94239e\"\n                  - id: \"\"\n                items:\n                  type: object\n                  required: [ id ]\n                  properties:\n                    id:\n                      type: string\n                    globalAliases:\n                      type: array\n                      items:\n                        type: string\n                    localAliases:\n                      type: array\n                      items:\n                        type: object\n                        required: [ alias, accessKeyId ]\n                        properties:\n                          alias:\n                            type: string\n                          accessKeyId:\n                            type: string\n    post:\n      tags:\n        - Bucket\n      operationId: \"CreateBucket\"\n      summary: \"Create a bucket\"\n      description: |\n        Creates a new bucket, either with a global alias, a local one, or no alias at all.\n        Technically, you can also specify both `globalAlias` and `localAlias` and that would create two aliases.\n      requestBody:\n        description: |\n          Aliases to put on the new bucket\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required: [ ]\n              properties:\n                globalAlias:\n                  type: string\n                  example: \"my_documents\"\n                localAlias:\n                  type: object\n                  properties:\n                    accessKeyId:\n                      type: string\n                    alias:\n                      type: string\n                    allow:\n                      type: object\n                      properties:\n                        read:\n                          type: boolean\n                          example: true\n                        write:\n                          type: boolean\n                          example: true\n                        owner:\n                          type: boolean\n                          example: true\n      responses:\n        '500': \n          description: \"The server can not handle your request. Check your connectivity with the rest of the cluster.\"\n        '400':\n          description: \"The payload is not formatted correctly\"\n        '200':\n          description: Returns exhaustive information about the bucket\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BucketInfo'\n\n\n  \"/bucket?id={bucket_id}\":\n    get:\n      tags:\n        - Bucket\n      operationId: \"GetBucketInfo\"\n      summary: \"Get a bucket\"\n      description: |\n        Given a bucket identifier, get its information.\n        It includes its aliases, its web configuration, keys that have some permissions\n        on it, some statistics (number of objects, size), number of dangling multipart uploads,\n        and its quotas (if any).\n      parameters:\n        - name: bucket_id\n          in: path\n          required: true\n          description: \"The exact bucket identifier, a 32 bytes hexadecimal string\"\n          example: \"b4018dc61b27ccb5c64ec1b24f53454bbbd180697c758c4d47a22a8921864a87\"\n          schema:\n            type: string\n      responses:\n        '500': \n          description: \"The server can not handle your request. Check your connectivity with the rest of the cluster.\"\n        '404':\n          description: \"Bucket not found\"\n        '200':\n          description: Returns exhaustive information about the bucket\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BucketInfo'\n\n\n    delete:\n      tags:\n        - Bucket\n      operationId: \"DeleteBucket\"\n      summary: \"Delete a bucket\"\n      description: |\n        Delete a bucket.Deletes a storage bucket. A bucket cannot be deleted if it is not empty.\n\n        **Warning:** this will delete all aliases associated with the bucket!\n      parameters:\n        - name: bucket_id\n          in: path\n          required: true\n          description: \"The exact bucket identifier, a 32 bytes hexadecimal string\"\n          example: \"b4018dc61b27ccb5c64ec1b24f53454bbbd180697c758c4d47a22a8921864a87\"\n          schema:\n            type: string\n      responses:\n        '500': \n          description: \"The server can not handle your request. Check your connectivity with the rest of the cluster.\"\n        '400':\n          description: \"Bucket is not empty\"\n        '404':\n          description: \"Bucket not found\"\n        '204':\n          description: Bucket has been deleted\n\n\n      \n    put:\n      tags:\n        - Bucket\n      operationId: \"UpdateBucket\"\n      summary: \"Update a bucket\"\n      description: |\n        All fields (`websiteAccess` and `quotas`) are optionnal.\n        If they are present, the corresponding modifications are applied to the bucket, otherwise nothing is changed.\n\n        In `websiteAccess`: if `enabled` is `true`, `indexDocument` must be specified.\n        The field `errorDocument` is optional, if no error document is set a generic\n        error message is displayed when errors happen. Conversely, if `enabled` is\n        `false`, neither `indexDocument` nor `errorDocument` must be specified.\n\n        In `quotas`: new values of `maxSize` and `maxObjects` must both be specified, or set to `null`\n        to remove the quotas. An absent value will be considered the same as a `null`. It is not possible\n        to change only one of the two quotas.\n      parameters:\n        - name: bucket_id\n          in: path\n          required: true\n          description: \"The exact bucket identifier, a 32 bytes hexadecimal string\"\n          example: \"b4018dc61b27ccb5c64ec1b24f53454bbbd180697c758c4d47a22a8921864a87\"\n          schema:\n            type: string       \n      requestBody:\n        description: |\n          Requested changes on the bucket. Both root fields are optionals.\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required: [ ]\n              properties:\n                websiteAccess:\n                  type: object\n                  properties:\n                    enabled: \n                      type: boolean\n                      example: true\n                    indexDocument:\n                      type: string\n                      example: \"index.html\"\n                    errorDocument:\n                      type: string\n                      example: \"error/400.html\"\n                quotas:\n                  type: object\n                  properties:\n                    maxSize: \n                      type: integer\n                      nullable: true\n                      example: 19029801\n                    maxObjects:\n                      type: integer\n                      nullable: true\n                      example: null\n\n      responses:\n        '500': \n          description: \"The server can not handle your request. Check your connectivity with the rest of the cluster.\"\n        '400':\n          description: \"Bad request, check your body.\"\n        '404':\n          description: \"Bucket not found\"\n        '200':\n          description: Returns exhaustive information about the bucket\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BucketInfo'\n\n  \"/bucket?globalAlias={alias}\":\n    get:\n      tags:\n        - Bucket\n      operationId: \"FindBucketInfo\"\n      summary: \"Find a bucket\"\n      description: |\n        Find a bucket by its global alias\n      parameters:\n        - name: alias\n          in: path\n          required: true\n          description: \"The exact global alias of one of the existing buckets\"\n          example: \"my_documents\"\n          schema:\n            type: string\n      responses:\n        '500': \n          description: \"The server can not handle your request. Check your connectivity with the rest of the cluster.\"\n        '404':\n          description: \"Bucket not found\"\n        '200':\n          description: Returns exhaustive information about the bucket\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BucketInfo'\n\n  /bucket/allow:\n    post:\n      tags:\n        - Bucket\n      operationId: \"AllowBucketKey\"\n      summary: \"Allow key\"\n      description: |\n        ⚠️ **DISCLAIMER**: Garage's developers are aware that this endpoint has an unconventional semantic. Be extra careful when implementing it, its behavior is not obvious.\n\n        Allows a key to do read/write/owner operations on a bucket.\n\n        Flags in permissions which have the value true will be activated. Other flags will remain unchanged (ie. they will keep their internal value).\n\n        For example, if you set read to true, the key will be allowed to read the bucket.\n        If you set it to false, the key will keeps its previous read permission.\n        If you want to disallow read for the key, check the DenyBucketKey operation.\n\n      requestBody:\n        description: |\n          Aliases to put on the new bucket\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required: [ bucketId, accessKeyId, permissions ]\n              properties:\n                bucketId:\n                  type: string\n                  example: \"e6a14cd6a27f48684579ec6b381c078ab11697e6bc8513b72b2f5307e25fff9b\"\n                accessKeyId:\n                  type: string\n                  example: \"GK31c2f218a2e44f485b94239e\"\n                permissions:\n                  type: object\n                  required: [ read, write, owner ]\n                  properties:\n                    read:\n                      type: boolean\n                      example: true\n                    write:\n                      type: boolean\n                      example: true\n                    owner:\n                      type: boolean\n                      example: true\n      responses:\n        '500': \n          description: \"The server can not handle your request. Check your connectivity with the rest of the cluster.\"\n        '400':\n          description: \"Bad request, check your request body\"\n        '404':\n          description: \"Bucket not found\"\n        '200':\n          description: Returns exhaustive information about the bucket\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BucketInfo'\n\n  /bucket/deny:\n    post:\n      tags:\n        - Bucket\n      operationId: \"DenyBucketKey\"\n      summary: \"Deny key\"\n      description: |\n        ⚠️ **DISCLAIMER**: Garage's developers are aware that this endpoint has an unconventional semantic. Be extra careful when implementing it, its behavior is not obvious.\n\n        Denies a key from doing read/write/owner operations on a bucket.\n\n        Flags in permissions which have the value true will be deactivated. Other flags will remain unchanged.\n\n        For example, if you set read to true, the key will be denied from reading.\n        If you set read to false,  the key will keep its previous permissions.\n        If you want the key to have the reading permission, check the AllowBucketKey operation.\n\n      requestBody:\n        description: |\n          Aliases to put on the new bucket\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required: [ bucketId, accessKeyId, permissions ]\n              properties:\n                bucketId:\n                  type: string\n                  example: \"e6a14cd6a27f48684579ec6b381c078ab11697e6bc8513b72b2f5307e25fff9b\"\n                accessKeyId:\n                  type: string\n                  example: \"GK31c2f218a2e44f485b94239e\"\n                permissions:\n                  type: object\n                  required: [ read, write, owner ]\n                  properties:\n                    read:\n                      type: boolean\n                      example: true\n                    write:\n                      type: boolean\n                      example: true\n                    owner:\n                      type: boolean\n                      example: true\n      responses:\n        '500': \n          description: \"The server can not handle your request. Check your connectivity with the rest of the cluster.\"\n        '400':\n          description: \"Bad request, check your request body\"\n        '404':\n          description: \"Bucket not found\"\n        '200':\n          description: Returns exhaustive information about the bucket\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BucketInfo'\n\n  /bucket/alias/global:\n    put:\n      tags:\n        - Bucket\n      operationId: \"PutBucketGlobalAlias\"\n      summary: \"Add a global alias\"\n      description: |\n        Add a global alias to the target bucket\n      parameters:\n        - name: id\n          in: query\n          required: true\n          schema:\n            type: string\n          example: e6a14cd6a27f48684579ec6b381c078ab11697e6bc8513b72b2f5307e25fff9b\n        - name: alias\n          in: query\n          required: true\n          example: my_documents\n          schema:\n            type: string\n      responses:\n        '500': \n          description: \"The server can not handle your request. Check your connectivity with the rest of the cluster.\"\n        '400':\n          description: \"Bad request, check your request body\"\n        '404':\n          description: \"Bucket not found\"\n        '200':\n          description: Returns exhaustive information about the bucket\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BucketInfo'\n\n    delete:\n      tags:\n        - Bucket\n      operationId: \"DeleteBucketGlobalAlias\"\n      summary: \"Delete a global alias\"\n      description: |\n        Delete a global alias from the target bucket\n      parameters:\n        - name: id\n          in: query\n          required: true\n          schema:\n            type: string\n          example: e6a14cd6a27f48684579ec6b381c078ab11697e6bc8513b72b2f5307e25fff9b\n        - name: alias\n          in: query\n          required: true\n          schema:\n            type: string\n          example: my_documents\n      responses:\n        '500': \n          description: \"The server can not handle your request. Check your connectivity with the rest of the cluster.\"\n        '400':\n          description: \"Bad request, check your request body\"\n        '404':\n          description: \"Bucket not found\"\n        '200':\n          description: Returns exhaustive information about the bucket\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BucketInfo'\n\n  /bucket/alias/local:\n    put:\n      tags:\n        - Bucket\n      operationId: \"PutBucketLocalAlias\"\n      summary: \"Add a local alias\"\n      description: |\n        Add a local alias, bound to specified account, to the target bucket\n      parameters:\n        - name: id\n          in: query\n          required: true\n          schema:\n            type: string\n          example: e6a14cd6a27f48684579ec6b381c078ab11697e6bc8513b72b2f5307e25fff9b\n        - name: accessKeyId\n          in: query\n          required: true\n          schema:\n            type: string\n          example: GK31c2f218a2e44f485b94239e\n        - name: alias\n          in: query\n          required: true\n          schema:\n            type: string\n          example: my_documents\n      responses:\n        '500': \n          description: \"The server can not handle your request. Check your connectivity with the rest of the cluster.\"\n        '400':\n          description: \"Bad request, check your request body\"\n        '404':\n          description: \"Bucket not found\"\n        '200':\n          description: Returns exhaustive information about the bucket\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BucketInfo'\n\n    delete:\n      tags:\n        - Bucket\n      operationId: \"DeleteBucketLocalAlias\"\n      summary: \"Delete a local alias\"\n      description: |\n        Delete a local alias, bound to specified account, from the target bucket\n      parameters:\n        - name: id\n          in: query\n          required: true\n          schema:\n            type: string\n          example: e6a14cd6a27f48684579ec6b381c078ab11697e6bc8513b72b2f5307e25fff9b\n        - name: accessKeyId\n          in: query\n          schema:\n            type: string\n          required: true\n          example: GK31c2f218a2e44f485b94239e\n        - name: alias\n          in: query\n          schema:\n            type: string\n          required: true\n          example: my_documents\n      responses:\n        '500': \n          description: \"The server can not handle your request. Check your connectivity with the rest of the cluster.\"\n        '400':\n          description: \"Bad request, check your request body\"\n        '404':\n          description: \"Bucket not found\"\n        '200':\n          description: Returns exhaustive information about the bucket\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BucketInfo'\n        \ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n  schemas:\n    NodeNetworkInfo:\n      type: object\n      required: [ addr, is_up, last_seen_secs_ago, hostname ]\n      properties:\n        addr:\n          type: string\n          example: \"10.0.0.11:3901\"\n        is_up:\n          type: boolean\n          example: true\n        last_seen_secs_ago:\n          type: integer\n          nullable: true\n          example: 9\n        hostname:\n          type: string\n          example: \"node1\"\n    NodeClusterInfo:\n      type: object\n      required: [ zone, capacity, tags ]\n      properties:\n        zone:\n          type: string\n          example: dc1\n        capacity:\n          type: integer\n          nullable: true\n          example: 4\n        tags:\n          type: array\n          description: |\n            User defined tags, put whatever makes sense for you, these tags are not interpreted by Garage\n          example:\n            - gateway\n            - fast\n          items:\n            type: string\n    ClusterLayout:\n      type: object\n      required: [ version, roles, stagedRoleChanges ]\n      properties:\n        version:\n          type: integer\n          example: 12\n        roles:\n          type: object\n          example:\n            \"ec79480e0ce52ae26fd00c9da684e4fa56658d9c64cdcecb094e936de0bfe71f\":\n              zone: \"madrid\"\n              capacity: 3\n              tags:\n                - fast\n                - amd64\n            \"4a6ae5a1d0d33bf895f5bb4f0a418b7dc94c47c0dd2eb108d1158f3c8f60b0ff\":\n              zone: \"geneva\"\n              capacity: 7\n              tags:\n                - arm64\n          additionalProperties:\n            $ref: '#/components/schemas/NodeClusterInfo'\n        stagedRoleChanges:\n          type: object\n          example:\n            \"e2ee7984ee65b260682086ec70026165903c86e601a4a5a501c1900afe28d84b\":\n              zone: \"geneva\"\n              capacity: 4\n              tags:\n                - gateway\n          additionalProperties:\n            $ref: '#/components/schemas/NodeClusterInfo'\n    LayoutVersion:\n      type: object\n      properties:\n        version:\n          type: integer\n          example: 13\n          \n    KeyInfo:\n      type: object\n      properties:\n        name:\n          type: string\n          example: \"test-key\"\n        accessKeyId:\n          type: string\n          example: \"GK31c2f218a2e44f485b94239e\"\n        secretAccessKey:\n          type: string\n          example: \"b892c0665f0ada8a4755dae98baa3b133590e11dae3bcc1f9d769d67f16c3835\"\n        permissions:\n          type: object\n          properties:\n            createBucket:\n              type: boolean\n              example: false\n        buckets:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n                example: \"70dc3bed7fe83a75e46b66e7ddef7d56e65f3c02f9f80b6749fb97eccb5e1033\"\n              globalAliases:\n                type: array\n                items:\n                  type: string\n                  example: \"my-bucket\"\n              localAliases:\n                type: array\n                items:\n                  type: string\n                  example: \"GK31c2f218a2e44f485b94239e:localname\"\n              permissions:\n                type: object\n                properties:\n                  read:\n                    type: boolean\n                    example: true\n                  write:\n                    type: boolean\n                    example: true\n                  owner:\n                    type: boolean\n                    example: false\n    BucketInfo:\n      type: object\n      properties:\n        id:\n          type: string\n          example: afa8f0a22b40b1247ccd0affb869b0af5cff980924a20e4b5e0720a44deb8d39\n        globalAliases:\n          type: array\n          items:\n            type: string\n            example: \"my_documents\"\n        websiteAccess:\n          type: boolean\n          example: true\n        websiteConfig:\n          type: object\n          nullable: true\n          properties:\n            indexDocument:\n              type: string\n              example: \"index.html\"\n            errorDocument:\n              type: string\n              example: \"error/400.html\"\n        keys:\n          type: array\n          items:\n            $ref: '#/components/schemas/BucketKeyInfo'\n        objects:\n          type: integer\n          example: 14827\n        bytes:\n          type: integer\n          example: 13189855625\n        unfinishedUploads:\n          type: integer\n          example: 0\n        quotas:\n          type: object\n          properties:\n            maxSize:\n              nullable: true\n              type: integer\n              example: null\n            maxObjects:\n              nullable: true\n              type: integer\n              example: null\n\n\n    BucketKeyInfo:\n      type: object\n      properties:\n        accessKeyId:\n          type: string\n        name:\n          type: string\n        permissions:\n          type: object\n          properties:\n            read:\n              type: boolean\n              example: true\n            write:\n              type: boolean\n              example: true\n            owner:\n              type: boolean\n              example: true\n        bucketLocalAliases:\n          type: array\n          items:\n            type: string\n            example: \"my_documents\"\n\n\nsecurity:\n  - bearerAuth: []\n\nservers:\n  - description: A local server\n    url: http://localhost:3903/v0/\n",
			"canonicalURL": "/github.com/deuxfleurs-org/garage@1af4a5ed569e42f77dd4ecc9364a27f7ed43df63/-/blob/doc/api/garage-admin-v0.yml",
			"externalURLs": [
				{
					"url": "https://github.com/deuxfleurs-org/garage/blob/1af4a5ed569e42f77dd4ecc9364a27f7ed43df63/doc/api/garage-admin-v0.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/bucket?globalAlias={alias}\": get: operation \"FindBucketInfo\": at doc/api/garage-admin-v0.yml:704:7: parse path \"/bucket?globalAlias={alias}\": path MUST NOT contain a query string"
}