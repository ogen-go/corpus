{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wikimedia/restbase"
		},
		"file": {
			"name": "metrics.yaml",
			"size": 0,
			"path": "v1/metrics.yaml",
			"byteSize": 142402,
			"content": "openapi: 3.0.1\ninfo:\n  version: 1.0.0-beta\n  title: Analytics Metrics API\n  description: Analytics Metrics API\n  termsOfService: https://github.com/wikimedia/restbase#restbase\n  contact:\n    name: Analytics\n    email: analytics@lists.wikimedia.org\n    url: https://www.mediawiki.org/wiki/Analytics\n  license:\n    name: Apache licence, v2\n    url: https://www.apache.org/licenses/LICENSE-2.0\npaths:\n\n  ########################################\n  # Pageviews\n  ########################################\n  /pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}:\n    get:\n      tags:\n        - Pageviews data\n      summary: Get pageview counts for a page.\n      description: |\n        Given a Mediawiki article and a date range, returns a daily timeseries of its pageview\n        counts. You can also filter by access method and/or agent type.\n\n        - Stability: [stable](https://www.mediawiki.org/wiki/API_versioning#Stable)\n        - Rate limit: 100 req/s\n        - License: Data accessible via this endpoint is available under the\n          [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).\n      parameters:\n        - name: project\n          in: path\n          description: |\n            If you want to filter by project, use the domain of any Wikimedia project,\n            for example 'en.wikipedia.org', 'www.mediawiki.org' or 'commons.wikimedia.org'.\n          required: true\n          schema:\n            type: string\n        - name: access\n          in: path\n          description: |\n            If you want to filter by access method, use one of desktop, mobile-app\n            or mobile-web. If you are interested in pageviews regardless of access method,\n            use all-access.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-access\n              - desktop\n              - mobile-app\n              - mobile-web\n        - name: agent\n          in: path\n          description: |\n            If you want to filter by agent type, use one of user, automated or spider. If you are\n            interested in pageviews regardless of agent type, use all-agents.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-agents\n              - user\n              - spider\n              - automated\n        - name: article\n          in: path\n          description: |\n            'The title of any article in the specified project. Any spaces should be replaced\n            with underscores. It also should be URI-encoded, so that non-URI-safe characters like\n            %, / or ? are accepted. Example: Are_You_the_One%3F'.\n          required: true\n          schema:\n            type: string\n        - name: granularity\n          in: path\n          description: |\n            The time unit for the response data. As of today, the only supported granularity for\n            this endpoint is daily and monthly.\n          required: true\n          schema:\n            type: string\n            enum:\n              - daily\n              - monthly\n        - name: start\n          in: path\n          description: The date of the first day to include, in YYYYMMDD or YYYYMMDDHH\n            format\n          required: true\n          schema:\n            type: string\n        - name: end\n          in: path\n          description: The date of the last day to include, in YYYYMMDD or YYYYMMDDHH\n            format\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: The list of values\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/pageview-article'\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - type: default\n          name: ratelimit_route\n          options:\n            limits:\n              internal: 100\n              external: 100\n      x-request-handler:\n        - get_from_backend:\n            request:\n              uri: '{{options.host}}/pageviews/per-article/{project}/{access}/{agent}/{article}/{granularity}/{start}/{end}'\n              headers:\n                x-client-ip: '{{x-client-ip}}'\n              agentOptions:\n                keepAlive: true\n      x-monitor: false\n\n  /pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}:\n    get:\n      tags:\n        - Pageviews data\n      summary: Get pageview counts for a project.\n      description: |\n        Given a date range, returns a timeseries of pageview counts. You can filter by project,\n        access method and/or agent type. You can choose between daily and hourly granularity\n        as well.\n\n        - Stability: [stable](https://www.mediawiki.org/wiki/API_versioning#Stable)\n        - Rate limit: 100 req/s\n        - License: Data accessible via this endpoint is available under the\n          [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).\n      parameters:\n        - name: project\n          in: path\n          description: |\n            If you want to filter by project, use the domain of any Wikimedia project,\n            for example 'en.wikipedia.org', 'www.mediawiki.org' or 'commons.wikimedia.org'.\n            If you are interested in all pageviews regardless of project, use all-projects.\n          required: true\n          schema:\n            type: string\n        - name: access\n          in: path\n          description: |\n            If you want to filter by access method, use one of desktop, mobile-app or mobile-web.\n            If you are interested in pageviews regardless of access method, use all-access.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-access\n              - desktop\n              - mobile-app\n              - mobile-web\n        - name: agent\n          in: path\n          description: |\n            If you want to filter by agent type, use one of user, automated or spider. If you are interested\n            in pageviews regardless of agent type, use all-agents.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-agents\n              - user\n              - spider\n              - automated\n        - name: granularity\n          in: path\n          description: |\n            The time unit for the response data. As of today, the supported granularities for this\n            endpoint are hourly, daily, and monthly.\n          required: true\n          schema:\n            type: string\n            enum:\n              - hourly\n              - daily\n              - monthly\n        - name: start\n          in: path\n          description: The timestamp of the first hour/day/month to include, in YYYYMMDDHH\n            format\n          required: true\n          schema:\n            type: string\n        - name: end\n          in: path\n          description: The timestamp of the last hour/day/month to include, in YYYYMMDDHH\n            format\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: The list of values\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/pageview-project'\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - type: default\n          name: ratelimit_route\n          options:\n            limits:\n              internal: 100\n              external: 100\n      x-request-handler:\n        - get_from_backend:\n            request:\n              uri: '{{options.host}}/pageviews/aggregate/{project}/{access}/{agent}/{granularity}/{start}/{end}'\n              headers:\n                x-client-ip: '{{x-client-ip}}'\n              agentOptions:\n                keepAlive: true\n      x-monitor: true\n      x-amples:\n        - title: Get aggregate page views\n          request:\n            params:\n              domain: wikimedia.org\n              project: en.wikipedia\n              access: all-access\n              agent: all-agents\n              granularity: hourly\n              start: 1970010100\n              end: 1970010100\n          response:\n            status: 200\n            headers:\n              content-type: application/json\n            body:\n              items:\n                - project: en.wikipedia\n                  access: all-access\n                  agent: all-agents\n                  granularity: hourly\n                  timestamp: 1970010100\n                  views: 0\n\n  /pageviews/top/{project}/{access}/{year}/{month}/{day}:\n    get:\n      tags:\n        - Pageviews data\n      summary: Get the most viewed articles for a project.\n      description: |\n        Lists the 1000 most viewed articles for a given project and timespan (month or day).\n        You can filter by access method.\n\n        - Stability: [stable](https://www.mediawiki.org/wiki/API_versioning#Stable)\n        - Rate limit: 100 req/s\n        - License: Data accessible via this endpoint is available under the\n          [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).\n      parameters:\n        - name: project\n          in: path\n          description: |\n            If you want to filter by project, use the domain of any Wikimedia project,\n            for example 'en.wikipedia.org', 'www.mediawiki.org' or 'commons.wikimedia.org'.\n          required: true\n          schema:\n            type: string\n        - name: access\n          in: path\n          description: |\n            If you want to filter by access method, use one of desktop, mobile-app or mobile-web.\n            If you are interested in pageviews regardless of access method, use all-access.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-access\n              - desktop\n              - mobile-app\n              - mobile-web\n        - name: year\n          in: path\n          description: The year of the date for which to retrieve top articles, in YYYY\n            format.\n          required: true\n          schema:\n            type: string\n        - name: month\n          in: path\n          description: |\n            The month of the date for which to retrieve top articles, in MM format. If you want\n            to get the top articles of a whole month, the day parameter should be all-days.\n          required: true\n          schema:\n            type: string\n        - name: day\n          in: path\n          description: The day of the date for which to retrieve top articles, in DD\n            format.\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: The list of top articles in the project\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/pageview-tops'\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - type: default\n          name: ratelimit_route\n          options:\n            limits:\n              internal: 100\n              external: 100\n      x-request-handler:\n        - get_from_backend:\n            request:\n              uri: '{{options.host}}/pageviews/top/{project}/{access}/{year}/{month}/{day}'\n              headers:\n                x-client-ip: '{{x-client-ip}}'\n              agentOptions:\n                keepAlive: true\n      x-monitor: false\n\n  /pageviews/top-by-country/{project}/{access}/{year}/{month}:\n    get:\n      tags:\n        - Pageviews data\n      summary: Get pageviews by country and access method.\n      description: |\n        Lists the pageviews to this project, split by country of origin for a given month.\n        Because of privacy reasons, pageviews are given in a bucketed format, and countries\n        with less than 100 views do not get reported.\n        Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental)\n        - Rate limit: 100 req/s\n        - License: Data accessible via this endpoint is available under the\n          [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).\n      parameters:\n        - name: project\n          in: path\n          description: |\n            If you want to filter by project, use the domain of any Wikimedia project,\n            for example 'en.wikipedia.org', 'www.mediawiki.org' or 'commons.wikimedia.org'.\n          required: true\n          schema:\n            type: string\n        - name: access\n          in: path\n          description: |\n            If you want to filter by access method, use one of desktop, mobile-app or mobile-web.\n            If you are interested in pageviews regardless of access method, use all-access.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-access\n              - desktop\n              - mobile-app\n              - mobile-web\n        - name: year\n          in: path\n          description: The year of the date for which to retrieve top countries, in\n            YYYY format.\n          required: true\n          schema:\n            type: string\n        - name: month\n          in: path\n          description: |\n            The month of the date for which to retrieve top countries, in MM format.\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: The list of top countries by pageviews in the project\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/by-country'\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - type: default\n          name: ratelimit_route\n          options:\n            limits:\n              internal: 100\n              external: 100\n      x-request-handler:\n        - get_from_backend:\n            request:\n              uri: '{{options.host}}/pageviews/top-by-country/{project}/{access}/{year}/{month}'\n              headers:\n                x-client-ip: '{{x-client-ip}}'\n              agentOptions:\n                keepAlive: true\n      x-monitor: false\n\n  /pageviews/top-per-country/{country}/{access}/{year}/{month}/{day}:\n    get:\n      tags:\n        - Pageviews data\n      summary: Get the most viewed articles for a country.\n      description: |\n        Lists the 1000 most viewed articles for a given country and date, across all projects.\n        You can filter by access method.\n        Because of privacy reasons, pageview counts are given in a bounded format and are not reported for certain countries.\n        Furthermore, articles visited by 1000 unique individuals or fewer on the given date will be excluded from the returned data.\n        Also, views produced by agents categorized as bots or web crawlers will be excluded from all calculations.\n\n        - Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental)\n        - Rate limit: 100 req/s\n        - License: Data accessible via this endpoint is available under the\n          [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).\n      parameters:\n        - name: country\n          in: path\n          description: The ISO 3166-1 alpha-2 code of a country for which to retrieve top articles, like 'FR' or 'IN'.\n          required: true\n          schema:\n            type: string\n        - name: access\n          in: path\n          description: |\n            If you want to filter by access method, use one of desktop, mobile-app or mobile-web.\n            If you are interested in pageviews regardless of access method, use all-access.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-access\n              - desktop\n              - mobile-app\n              - mobile-web\n        - name: year\n          in: path\n          description: The year for which to retrieve top articles, in YYYY format.\n          required: true\n          schema:\n            type: string\n        - name: month\n          in: path\n          description: The month for which to retrieve top articles, in MM format.\n          required: true\n          schema:\n            type: string\n        - name: day\n          in: path\n          description: The day for which to retrieve top articles, in DD format.\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: The list of top articles by pageviews in the country.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/per-country'\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - type: default\n          name: ratelimit_route\n          options:\n            limits:\n              internal: 100\n              external: 100\n      x-request-handler:\n        - get_from_backend:\n            request:\n              uri: '{{options.host}}/pageviews/top-per-country/{country}/{access}/{year}/{month}/{day}'\n              headers:\n                x-client-ip: '{{x-client-ip}}'\n              agentOptions:\n                keepAlive: true\n      x-monitor: false\n\n  ########################################\n  # Unique Devices\n  ########################################\n  /unique-devices/{project}/{access-site}/{granularity}/{start}/{end}:\n    get:\n      tags:\n        - Unique devices data\n      summary: Get unique devices count per project\n      description: |\n        Given a project and a date range, returns a timeseries of unique devices counts.\n        You need to specify a project, and can filter by accessed site (mobile or desktop).\n        You can choose between daily and hourly granularity as well.\n\n        - Stability: [stable](https://www.mediawiki.org/wiki/API_versioning#Stable)\n        - Rate limit: 100 req/s\n        - License: Data accessible via this endpoint is available under the\n          [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).\n      parameters:\n        - name: project\n          in: path\n          description: |\n            If you want to filter by project, use the domain of any Wikimedia project,\n            for example 'en.wikipedia.org', 'www.mediawiki.org' or 'commons.wikimedia.org'.\n          required: true\n          schema:\n            type: string\n        - name: access-site\n          in: path\n          description: |\n            If you want to filter by accessed site, use one of desktop-site or mobile-site.\n            If you are interested in unique devices regardless of accessed site, use or all-sites.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-sites\n              - desktop-site\n              - mobile-site\n        - name: granularity\n          in: path\n          description: |\n            The time unit for the response data. As of today, the supported granularities\n            for this endpoint are daily and monthly.\n          required: true\n          schema:\n            type: string\n            enum:\n              - daily\n              - monthly\n        - name: start\n          in: path\n          description: The timestamp of the first day/month to include, in YYYYMMDD\n            format\n          required: true\n          schema:\n            type: string\n        - name: end\n          in: path\n          description: The timestamp of the last day/month to include, in YYYYMMDD format\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: The list of values\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/unique-devices'\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - type: default\n          name: ratelimit_route\n          options:\n            limits:\n              internal: 100\n              external: 100\n      x-request-handler:\n        - get_from_backend:\n            request:\n              uri: '{{options.host}}/unique-devices/{project}/{access-site}/{granularity}/{start}/{end}'\n              headers:\n                x-client-ip: '{{x-client-ip}}'\n              agentOptions:\n                keepAlive: true\n      x-monitor: false\n\n  ########################################\n  # Legacy\n  ########################################\n  /legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}:\n    get:\n      tags:\n        - Legacy data\n      description: |\n        Given a project and a date range, returns a timeseries of pagecounts.\n        You can filter by access site (mobile or desktop) and you can choose between monthly,\n        daily and hourly granularity as well.\n\n        - Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental)\n        - Rate limit: 100 req/s\n        - License: Data accessible via this endpoint is available under the\n          [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).\n      parameters:\n        - name: project\n          in: path\n          description: |\n            The name of any Wikimedia project formatted like {language code}.{project name},\n            for example en.wikipedia. You may pass en.wikipedia.org and the .org will be stripped\n            off. For projects like commons without language codes, use commons.wikimedia.\n          required: true\n          schema:\n            type: string\n        - name: access-site\n          in: path\n          description: If you want to filter by access site, use one of desktop-site\n            or mobile-site. If you are interested in pagecounts regardless of access\n            site use all-sites.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-sites\n              - desktop-site\n              - mobile-site\n        - name: granularity\n          in: path\n          description: |\n            The time unit for the response data. As of today, the supported granularities for\n            this endpoint are hourly, daily and monthly.\n          required: true\n          schema:\n            type: string\n            enum:\n              - hourly\n              - daily\n              - monthly\n        - name: start\n          in: path\n          description: The timestamp of the first hour/day/month to include, in YYYYMMDDHH\n            format.\n          required: true\n          schema:\n            type: string\n        - name: end\n          in: path\n          description: |\n            The timestamp of the last hour/day/month to include, in YYYYMMDDHH format.\n            In hourly and daily granularities this value is inclusive, in the monthly granularity\n            this value is exclusive.\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: The list of values\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/pagecounts-project'\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - type: default\n          name: ratelimit_route\n          options:\n            limits:\n              internal: 100\n              external: 100\n      x-request-handler:\n        - get_from_backend:\n            request:\n              uri: '{{options.host}}/legacy/pagecounts/aggregate/{project}/{access-site}/{granularity}/{start}/{end}'\n              headers:\n                x-client-ip: '{{x-client-ip}}'\n              agentOptions:\n                keepAlive: true\n      x-monitor: false\n\n  ########################################\n  # Edited Pages\n  ########################################\n  /edited-pages/new/{project}/{editor-type}/{page-type}/{granularity}/{start}/{end}:\n    get:\n      tags:\n        - Edited pages data\n      summary: Get new pages counts for a project.\n      description: |\n        Given a Mediawiki project and a date range, returns a timeseries of its new pages counts.\n        You can filter by editor type (all-editor-types, anonymous, group-bot, name-bot, user)\n        or page-type (all-page-types, content or non-content). You can choose between daily and\n        monthly granularity as well.\n\n        - Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental)\n        - Rate limit: 25 req/s\n        - License: Data accessible via this endpoint is available under the\n          [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).\n      parameters:\n        - name: project\n          in: path\n          description: |\n            The name of any Wikimedia project formatted like {language code}.{project name},\n            for example en.wikipedia. You may pass en.wikipedia.org and the .org will be stripped\n            off.  For projects like commons without language codes, use commons.wikimedia.\n            For projects like www.mediawiki.org, you can use that full string, or just use\n            mediawiki or mediawiki.org. If you're interested in the aggregation of all\n            projects, use all-projects.\n          required: true\n          schema:\n            type: string\n        - name: editor-type\n          in: path\n          description: |\n            If you want to filter by editor-type, use one of anonymous, group-bot (registered\n            accounts belonging to the bot group), name-bot (registered accounts not belonging\n            to the bot group but having bot-like names) or user (registered account not in bot\n            group nor having bot-like name). If you are interested in edits regardless of\n            their editor-type, use all-editor-types.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-editor-types\n              - anonymous\n              - group-bot\n              - name-bot\n              - user\n        - name: page-type\n          in: path\n          description: |\n            If you want to filter by page-type, use one of content (new pages in content\n            namespaces) or non-content (new pages in non-content namespaces). If you are\n            interested in new-articles regardless of their page-type, use all-page-types.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-page-types\n              - content\n              - non-content\n        - name: granularity\n          in: path\n          description: |\n            The time unit for the response data. As of today, supported values are\n            daily and monthly.\n          required: true\n          schema:\n            type: string\n            enum:\n              - daily\n              - monthly\n        - name: start\n          in: path\n          description: The date of the first day to include, in YYYYMMDD format\n          required: true\n          schema:\n            type: string\n        - name: end\n          in: path\n          description: The date of the last day to include, in YYYYMMDD format\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: The list of values\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/new-pages'\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - type: default\n          name: ratelimit_route\n          options:\n            limits:\n              internal: 25\n              external: 25\n      x-request-handler:\n        - get_from_backend:\n            request:\n              uri: '{{options.host}}/edited-pages/new/{project}/{editor-type}/{page-type}/{granularity}/{start}/{end}'\n              headers:\n                x-client-ip: '{{x-client-ip}}'\n              agentOptions:\n                keepAlive: true\n      x-monitor: false\n\n  /edited-pages/aggregate/{project}/{editor-type}/{page-type}/{activity-level}/{granularity}/{start}/{end}:\n    get:\n      tags:\n        - Edited pages data\n      summary: Get edited-pages counts for a project.\n      description: |\n        Given a Mediawiki project and a date range, returns a timeseries of its edited-pages counts.\n        You can filter by editor-type (all-editor-types, anonymous, group-bot, name-bot, user),\n        page-type (all-page-types, content or non-content) or activity-level (1..4-edits,\n        5..24-edits, 25..99-edits, 100..-edits). You can choose between daily and monthly\n        granularity as well.\n\n        - Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental)\n        - Rate limit: 25 req/s\n        - License: Data accessible via this endpoint is available under the\n          [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).\n      parameters:\n        - name: project\n          in: path\n          description: |\n            The name of any Wikimedia project formatted like {language code}.{project name},\n            for example en.wikipedia. You may pass en.wikipedia.org and the .org will be stripped\n            off.  For projects like commons without language codes, use commons.wikimedia.\n            For projects like www.mediawiki.org, you can use that full string, or just use\n            mediawiki or mediawiki.org.\n          required: true\n          schema:\n            type: string\n        - name: editor-type\n          in: path\n          description: |\n            If you want to filter by editor-type, use one of anonymous, group-bot (registered\n            accounts belonging to the bot group), name-bot (registered accounts not belonging to\n            the bot group but having bot-like names) or user (registered account not in bot group\n            nor having bot-like name). If you are interested in edits regardless of their\n            editor-type, use all-editor-types.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-editor-types\n              - anonymous\n              - group-bot\n              - name-bot\n              - user\n        - name: page-type\n          in: path\n          description: |\n            If you want to filter by page-type, use one of content (edited-pages in content\n            namespaces) or non-content (edited-pages in non-content namespaces). If you are\n            interested in edited-pages regardless of their page-type, use all-page-types.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-page-types\n              - content\n              - non-content\n        - name: activity-level\n          in: path\n          description: |\n            If you want to filter by activity-level, use one of 1..4-edits, 5..24-edits,\n            25..99-edits or 100..-edits. If you are interested in edited-pages regardless\n            of their activity level, use all-activity-levels.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-activity-levels\n              - 1..4-edits\n              - 5..24-edits\n              - 25..99-edits\n              - 100..-edits\n        - name: granularity\n          in: path\n          description: |\n            The time unit for the response data. As of today, supported values are\n            daily and monthly.\n          required: true\n          schema:\n            type: string\n            enum:\n              - daily\n              - monthly\n        - name: start\n          in: path\n          description: The date of the first day to include, in YYYYMMDD format\n          required: true\n          schema:\n            type: string\n        - name: end\n          in: path\n          description: The date of the last day to include, in YYYYMMDD format\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: The list of values\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/edited-pages'\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - type: default\n          name: ratelimit_route\n          options:\n            limits:\n              internal: 25\n              external: 25\n      x-request-handler:\n        - get_from_backend:\n            request:\n              uri: '{{options.host}}/edited-pages/aggregate/{project}/{editor-type}/{page-type}/{activity-level}/{granularity}/{start}/{end}'\n              headers:\n                x-client-ip: '{{x-client-ip}}'\n              agentOptions:\n                keepAlive: true\n      x-monitor: false\n\n  /edited-pages/top-by-edits/{project}/{editor-type}/{page-type}/{year}/{month}/{day}:\n    get:\n      tags:\n        - Edited pages data\n      summary: Get top 100 edited-pages by edits count.\n      description: |\n        Given a Mediawiki project and a date (day or month), returns a timeseries of the top\n        100 edited-pages by edits count. You can filter by editor-type (all-editor-types,\n        anonymous, group-bot, name-bot, user) or page-type (all-page-types, content or\n        non-content).\n\n        - Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental)\n        - Rate limit: 25 req/s\n        - License: Data accessible via this endpoint is available under the\n          [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).\n      parameters:\n        - name: project\n          in: path\n          description: |\n            The name of any Wikimedia project formatted like {language code}.{project name},\n            for example en.wikipedia. You may pass en.wikipedia.org and the .org will be stripped\n            off. For projects like commons without language codes, use commons.wikimedia. For\n            projects like www.mediawiki.org, you can use that full string, or just use mediawiki\n            or mediawiki.org.\n          required: true\n          schema:\n            type: string\n        - name: editor-type\n          in: path\n          description: |\n            If you want to filter by editor-type, use one of anonymous, group-bot (registered\n            accounts belonging to the bot group), name-bot (registered accounts not belonging to\n            the bot group but having bot-like names) or user (registered account not in bot group\n            nor having bot-like name). If you are interested in edits regardless of their\n            editor-type, use all-editor-types.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-editor-types\n              - anonymous\n              - group-bot\n              - name-bot\n              - user\n        - name: page-type\n          in: path\n          description: |\n            If you want to filter by page-type, use one of content (edits on pages in content\n            namespaces) or non-content (edits on pages in non-content namespaces). If you are\n            interested in edits regardless of their page-type, use all-page-types.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-page-types\n              - content\n              - non-content\n        - name: year\n          in: path\n          description: The year of the date for which to retrieve top edited-pages,\n            in YYYY format.\n          required: true\n          schema:\n            type: string\n        - name: month\n          in: path\n          description: The month of the date for which to retrieve top edited-pages,\n            in MM format. If you want to get the top edited-pages of a whole month,\n            the day parameter should be all-days.\n          required: true\n          schema:\n            type: string\n        - name: day\n          in: path\n          description: The day of the date for which to retrieve top edited-pages, in\n            DD format, or all-days for a monthly value.\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: The list of values\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/top-edited-pages-by-edits'\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - type: default\n          name: ratelimit_route\n          options:\n            limits:\n              internal: 25\n              external: 25\n      x-request-handler:\n        - get_from_backend:\n            request:\n              uri: '{{options.host}}/edited-pages/top-by-edits/{project}/{editor-type}/{page-type}/{year}/{month}/{day}'\n              headers:\n                x-client-ip: '{{x-client-ip}}'\n              agentOptions:\n                keepAlive: true\n      x-monitor: false\n\n  /edited-pages/top-by-net-bytes-difference/{project}/{editor-type}/{page-type}/{year}/{month}/{day}:\n    get:\n      tags:\n        - Edited pages data\n      summary: Get top 100 edited-pages by net bytes-difference.\n      description: |\n        Given a Mediawiki project and a date (day or month), returns a timeseries of the top 100\n        edited-pages by net bytes-difference. You can filter by editor-type (all-editor-types,\n        anonymous, group-bot, name-bot, user) or page-type (all-page-types, content or non-content).\n\n        - Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental)\n        - Rate limit: 25 req/s\n        - License: Data accessible via this endpoint is available under the\n          [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).\n      parameters:\n        - name: project\n          in: path\n          description: |\n            The name of any Wikimedia project formatted like {language code}.{project name},\n            for example en.wikipedia. You may pass en.wikipedia.org and the .org will be stripped\n            off. For projects like commons without language codes, use commons.wikimedia. For\n            projects like www.mediawiki.org, you can use that full string, or just use mediawiki\n            or mediawiki.org.\n          required: true\n          schema:\n            type: string\n        - name: editor-type\n          in: path\n          description: |\n            If you want to filter by editor-type, use one of anonymous, group-bot (registered\n            accounts belonging to the bot group), name-bot (registered accounts not belonging to\n            the bot group but having bot-like names) or user (registered account not in bot group\n            nor having bot-like name). If you are interested in edits regardless of their\n            editor-type, use all-editor-types.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-editor-types\n              - anonymous\n              - group-bot\n              - name-bot\n              - user\n        - name: page-type\n          in: path\n          description: |\n            If you want to filter by page-type, use one of content (edits on pages in content\n            namespaces) or non-content (edits on pages in non-content namespaces). If you are\n            interested in edits regardless of their page-type, use all-page-types.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-page-types\n              - content\n              - non-content\n        - name: year\n          in: path\n          description: The year of the date for which to retrieve top edited-pages,\n            in YYYY format.\n          required: true\n          schema:\n            type: string\n        - name: month\n          in: path\n          description: The month of the date for which to retrieve top edited-pages,\n            in MM format. If you want to get the top edited-pages of a whole month,\n            the day parameter should be all-days.\n          required: true\n          schema:\n            type: string\n        - name: day\n          in: path\n          description: The day of the date for which to retrieve top edited-pages, in\n            DD format, or all-days for a monthly value.\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: The list of values\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/top-edited-pages-by-net-bytes-diff'\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - type: default\n          name: ratelimit_route\n          options:\n            limits:\n              internal: 25\n              external: 25\n      x-request-handler:\n        - get_from_backend:\n            request:\n              uri: '{{options.host}}/edited-pages/top-by-net-bytes-difference/{project}/{editor-type}/{page-type}/{year}/{month}/{day}'\n              headers:\n                x-client-ip: '{{x-client-ip}}'\n              agentOptions:\n                keepAlive: true\n      x-monitor: false\n\n  /edited-pages/top-by-absolute-bytes-difference/{project}/{editor-type}/{page-type}/{year}/{month}/{day}:\n    get:\n      tags:\n        - Edited pages data\n      summary: Get top 100 edited-pages by absolute bytes-difference.\n      description: |\n        Given a Mediawiki project and a date (day or month), returns a timeseries of the top 100\n        edited-pages by absolute bytes-difference. You can filter by editor-type (all-editor-types,\n        anonymous, group-bot, name-bot, user) or page-type (all-page-types, content or non-content).\n\n        - Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental)\n        - Rate limit: 25 req/s\n        - License: Data accessible via this endpoint is available under the\n          [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).\n      parameters:\n        - name: project\n          in: path\n          description: |\n            The name of any Wikimedia project formatted like {language code}.{project name},\n            for example en.wikipedia. You may pass en.wikipedia.org and the .org will be stripped\n            off. For projects like commons without language codes, use commons.wikimedia. For\n            projects like www.mediawiki.org, you can use that full string, or just use mediawiki\n            or mediawiki.org.\n          required: true\n          schema:\n            type: string\n        - name: editor-type\n          in: path\n          description: |\n            If you want to filter by editor-type, use one of anonymous, group-bot (registered\n            accounts belonging to the bot group), name-bot (registered accounts not belonging to\n            the bot group but having bot-like names) or user (registered account not in bot group\n            nor having bot-like name). If you are interested in edits regardless of their\n            editor-type, use all-editor-types.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-editor-types\n              - anonymous\n              - group-bot\n              - name-bot\n              - user\n        - name: page-type\n          in: path\n          description: |\n            If you want to filter by page-type, use one of content (edits on pages in content\n            namespaces) or non-content (edits on pages in non-content namespaces). If you are\n            interested in edits regardless of their page-type, use all-page-types.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-page-types\n              - content\n              - non-content\n        - name: year\n          in: path\n          description: The year of the date for which to retrieve top edited-pages,\n            in YYYY format.\n          required: true\n          schema:\n            type: string\n        - name: month\n          in: path\n          description: The month of the date for which to retrieve top edited-pages,\n            in MM format. If you want to get the top edited-pages of a whole month,\n            the day parameter should be all-days.\n          required: true\n          schema:\n            type: string\n        - name: day\n          in: path\n          description: The day of the date for which to retrieve top edited-pages, in\n            DD format, or all-days for a monthly value.\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: The list of values\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/top-edited-pages-by-abs-bytes-diff'\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - type: default\n          name: ratelimit_route\n          options:\n            limits:\n              internal: 25\n              external: 25\n      x-request-handler:\n        - get_from_backend:\n            request:\n              uri: '{{options.host}}/edited-pages/top-by-absolute-bytes-difference/{project}/{editor-type}/{page-type}/{year}/{month}/{day}'\n              headers:\n                x-client-ip: '{{x-client-ip}}'\n              agentOptions:\n                keepAlive: true\n      x-monitor: false\n\n\n  ########################################\n  # Editors\n  ########################################\n  /editors/aggregate/{project}/{editor-type}/{page-type}/{activity-level}/{granularity}/{start}/{end}:\n    get:\n      tags:\n        - Editors data\n      summary: Get editors counts for a project.\n      description: |\n        Given a Mediawiki project and a date range, returns a timeseries of its editors counts.\n        You can filter by editory-type (all-editor-types, anonymous, group-bot, name-bot, user),\n        page-type (all-page-types, content or non-content) or activity-level (1..4-edits,\n        5..24-edits, 25..99-edits or 100..-edits). You can choose between daily and monthly\n        granularity as well.\n\n        - Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental)\n        - Rate limit: 25 req/s\n        - License: Data accessible via this endpoint is available under the\n          [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).\n      parameters:\n        - name: project\n          in: path\n          description: |\n            The name of any Wikimedia project formatted like {language code}.{project name},\n            for example en.wikipedia. You may pass en.wikipedia.org and the .org will be stripped\n            off.  For projects like commons without language codes, use commons.wikimedia.\n            For projects like www.mediawiki.org, you can use that full string, or just use\n            mediawiki or mediawiki.org.\n          required: true\n          schema:\n            type: string\n        - name: editor-type\n          in: path\n          description: |\n            If you want to filter by editor-type, use one of anonymous, group-bot (registered\n            accounts belonging to the bot group), name-bot (registered accounts not belonging\n            to the bot group but having bot-like names) or user (registered account not in bot\n            group nor having bot-like name). If you are interested in edits regardless\n            of their editor-type, use all-editor-types.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-editor-types\n              - anonymous\n              - group-bot\n              - name-bot\n              - user\n        - name: page-type\n          in: path\n          description: |\n            If you want to filter by page-type, use one of content (edits made in content\n            namespaces) or non-content (edits made in non-content namespaces). If you are\n            interested in editors regardless of their page-type, use all-page-types.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-page-types\n              - content\n              - non-content\n        - name: activity-level\n          in: path\n          description: |\n            If you want to filter by activity-level, use one of 1..4-edits, 5..24-edits,\n            25..99-edits or 100..-edits. If you are interested in editors regardless\n            of their activity-level, use all-activity-levels.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-activity-levels\n              - 1..4-edits\n              - 5..24-edits\n              - 25..99-edits\n              - 100..-edits\n        - name: granularity\n          in: path\n          description: |\n            The time unit for the response data. As of today, supported values are\n            daily and monthly.\n          required: true\n          schema:\n            type: string\n            enum:\n              - daily\n              - monthly\n        - name: start\n          in: path\n          description: The date of the first day to include, in YYYYMMDD format\n          required: true\n          schema:\n            type: string\n        - name: end\n          in: path\n          description: The date of the last day to include, in YYYYMMDD format\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: The list of values\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/editors'\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - type: default\n          name: ratelimit_route\n          options:\n            limits:\n              internal: 25\n              external: 25\n      x-request-handler:\n        - get_from_backend:\n            request:\n              uri: '{{options.host}}/editors/aggregate/{project}/{editor-type}/{page-type}/{activity-level}/{granularity}/{start}/{end}'\n              headers:\n                x-client-ip: '{{x-client-ip}}'\n              agentOptions:\n                keepAlive: true\n      x-monitor: false\n\n  /editors/top-by-edits/{project}/{editor-type}/{page-type}/{year}/{month}/{day}:\n    get:\n      tags:\n        - Editors data\n      summary: Get top 100 editors by edits count.\n      description: |\n        Given a Mediawiki project and a date (day or month), returns a timeseries of the top\n        100 editors by edits count. You can filter by editor-type (all-editor-types,\n        anonymous, group-bot, name-bot, user) or page-type (all-page-types, content or\n        non-content). The user_text returned is either the mediawiki user_text if the user is\n        registered, or null if user is anonymous.\n\n        - Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental)\n        - Rate limit: 25 req/s\n        - License: Data accessible via this endpoint is available under the\n          [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).\n      parameters:\n        - name: project\n          in: path\n          description: |\n            The name of any Wikimedia project formatted like {language code}.{project name},\n            for example en.wikipedia. You may pass en.wikipedia.org and the .org will be stripped\n            off. For projects like commons without language codes, use commons.wikimedia. For\n            projects like www.mediawiki.org, you can use that full string, or just use mediawiki\n            or mediawiki.org.\n          required: true\n          schema:\n            type: string\n        - name: editor-type\n          in: path\n          description: |\n            If you want to filter by editor-type, use one of anonymous, group-bot (registered\n            accounts belonging to the bot group), name-bot (registered accounts not belonging to\n            the bot group but having bot-like names) or user (registered account not in bot group\n            nor having bot-like name). If you are interested in edits regardless of their\n            editor-type, use all-editor-types.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-editor-types\n              - anonymous\n              - group-bot\n              - name-bot\n              - user\n        - name: page-type\n          in: path\n          description: |\n            If you want to filter by page-type, use one of content (edits on pages in content\n            namespaces) or non-content (edits on pages in non-content namespaces). If you are\n            interested in edits regardless of their page-type, use all-page-types.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-page-types\n              - content\n              - non-content\n        - name: year\n          in: path\n          description: The year of the date for which to retrieve top editors, in YYYY\n            format.\n          required: true\n          schema:\n            type: string\n        - name: month\n          in: path\n          description: The month of the date for which to retrieve top editors, in MM\n            format. If you want to get the top editors of a whole month, the day parameter\n            should be all-days.\n          required: true\n          schema:\n            type: string\n        - name: day\n          in: path\n          description: The day of the date for which to retrieve top editors, in DD\n            format, or all-days for a monthly value.\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: The list of values\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/top-editors-by-edits'\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - type: default\n          name: ratelimit_route\n          options:\n            limits:\n              internal: 25\n              external: 25\n      x-request-handler:\n        - get_from_backend:\n            request:\n              uri: '{{options.host}}/editors/top-by-edits/{project}/{editor-type}/{page-type}/{year}/{month}/{day}'\n              headers:\n                x-client-ip: '{{x-client-ip}}'\n              agentOptions:\n                keepAlive: true\n      x-monitor: false\n\n  /editors/top-by-net-bytes-difference/{project}/{editor-type}/{page-type}/{year}/{month}/{day}:\n    get:\n      tags:\n        - Editors data\n      summary: Get top 100 editors by net bytes-difference.\n      description: |\n        Given a Mediawiki project and a date (day or month), returns a timeseries of the top 100\n        editors by net bytes-difference. You can filter by editor-type (all-editor-types, anonymous,\n        group-bot, name-bot, user) or page-type (all-page-types, content or non-content). The\n        user_text returned is either the mediawiki user_text if the user is registered, or\n        \"Anonymous Editor\" if user is anonymous.\n\n        - Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental)\n        - Rate limit: 25 req/s\n        - License: Data accessible via this endpoint is available under the\n          [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).\n      parameters:\n        - name: project\n          in: path\n          description: |\n            The name of any Wikimedia project formatted like {language code}.{project name},\n            for example en.wikipedia. You may pass en.wikipedia.org and the .org will be stripped\n            off. For projects like commons without language codes, use commons.wikimedia. For\n            projects like www.mediawiki.org, you can use that full string, or just use mediawiki\n            or mediawiki.org.\n          required: true\n          schema:\n            type: string\n        - name: editor-type\n          in: path\n          description: |\n            If you want to filter by editor-type, use one of anonymous, group-bot (registered\n            accounts belonging to the bot group), name-bot (registered accounts not belonging to\n            the bot group but having bot-like names) or user (registered account not in bot group\n            nor having bot-like name). If you are interested in edits regardless of their\n            editor-type, use all-editor-types.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-editor-types\n              - anonymous\n              - group-bot\n              - name-bot\n              - user\n        - name: page-type\n          in: path\n          description: |\n            If you want to filter by page-type, use one of content (edits on pages in content\n            namespaces) or non-content (edits on pages in non-content namespaces). If you are\n            interested in edits regardless of their page-type, use all-page-types.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-page-types\n              - content\n              - non-content\n        - name: year\n          in: path\n          description: The year of the date for which to retrieve top editors, in YYYY\n            format.\n          required: true\n          schema:\n            type: string\n        - name: month\n          in: path\n          description: The month of the date for which to retrieve top editors, in MM\n            format. If you want to get the top editors of a whole month, the day parameter\n            should be all-days.\n          required: true\n          schema:\n            type: string\n        - name: day\n          in: path\n          description: The day of the date for which to retrieve top editors, in DD\n            format, or all-days for a monthly value.\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: The list of values\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/top-editors-by-net-bytes-diff'\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - type: default\n          name: ratelimit_route\n          options:\n            limits:\n              internal: 25\n              external: 25\n      x-request-handler:\n        - get_from_backend:\n            request:\n              uri: '{{options.host}}/editors/top-by-net-bytes-difference/{project}/{editor-type}/{page-type}/{year}/{month}/{day}'\n              headers:\n                x-client-ip: '{{x-client-ip}}'\n              agentOptions:\n                keepAlive: true\n      x-monitor: false\n\n  /editors/top-by-absolute-bytes-difference/{project}/{editor-type}/{page-type}/{year}/{month}/{day}:\n    get:\n      tags:\n        - Editors data\n      summary: Get top 100 editors by absolute bytes-difference.\n      description: |\n        Given a Mediawiki project and a date (day or month), returns a timeseries of the top 100\n        editors by absolute bytes-difference. You can filter by editor-type (all-editor-types,\n        anonymous, group-bot, name-bot, user) or page-type (all-page-types, content or non-content).\n        The user_text returned is either the mediawiki user_text if the user is registered, or\n        null if user is anonymous.\n\n        - Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental)\n        - Rate limit: 25 req/s\n        - License: Data accessible via this endpoint is available under the\n          [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).\n      parameters:\n        - name: project\n          in: path\n          description: |\n            The name of any Wikimedia project formatted like {language code}.{project name},\n            for example en.wikipedia. You may pass en.wikipedia.org and the .org will be stripped\n            off. For projects like commons without language codes, use commons.wikimedia. For\n            projects like www.mediawiki.org, you can use that full string, or just use mediawiki\n            or mediawiki.org.\n          required: true\n          schema:\n            type: string\n        - name: editor-type\n          in: path\n          description: |\n            If you want to filter by editor-type, use one of anonymous, group-bot (registered\n            accounts belonging to the bot group), name-bot (registered accounts not belonging to\n            the bot group but having bot-like names) or user (registered account not in bot group\n            nor having bot-like name). If you are interested in edits regardless of their\n            editor-type, use all-editor-types.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-editor-types\n              - anonymous\n              - group-bot\n              - name-bot\n              - user\n        - name: page-type\n          in: path\n          description: |\n            If you want to filter by page-type, use one of content (edits on pages in content\n            namespaces) or non-content (edits on pages in non-content namespaces). If you are\n            interested in edits regardless of their page-type, use all-page-types.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-page-types\n              - content\n              - non-content\n        - name: year\n          in: path\n          description: The year of the date for which to retrieve top editors, in YYYY\n            format.\n          required: true\n          schema:\n            type: string\n        - name: month\n          in: path\n          description: The month of the date for which to retrieve top editors, in MM\n            format. If you want to get the top editors of a whole month, the day parameter\n            should be all-days.\n          required: true\n          schema:\n            type: string\n        - name: day\n          in: path\n          description: The day of the date for which to retrieve top editors, in DD\n            format, or all-days for a monthly value.\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: The list of values\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/top-editors-by-abs-bytes-diff'\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - type: default\n          name: ratelimit_route\n          options:\n            limits:\n              internal: 25\n              external: 25\n      x-request-handler:\n        - get_from_backend:\n            request:\n              uri: '{{options.host}}/editors/top-by-absolute-bytes-difference/{project}/{editor-type}/{page-type}/{year}/{month}/{day}'\n              headers:\n                x-client-ip: '{{x-client-ip}}'\n              agentOptions:\n                keepAlive: true\n      x-monitor: false\n\n\n  ########################################\n  # Edits\n  ########################################\n  /edits/aggregate/{project}/{editor-type}/{page-type}/{granularity}/{start}/{end}:\n    get:\n      tags:\n        - Edits data\n      summary: Get edits counts for a project.\n      description: |\n        Given a Mediawiki project and a date range, returns a timeseries of edits counts.\n        You can filter by editors-type (all-editor-types, anonymous, bot, registered) and\n        page-type (all-page-types, content or non-content). You can choose between daily and\n        monthly granularity as well.\n\n        - Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental)\n        - Rate limit: 25 req/s\n        - License: Data accessible via this endpoint is available under the\n          [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).\n      parameters:\n        - name: project\n          in: path\n          description: |\n            The name of any Wikimedia project formatted like {language code}.{project name},\n            for example en.wikipedia. You may pass en.wikipedia.org and the .org will be stripped\n            off.  For projects like commons without language codes, use commons.wikimedia.\n            For projects like www.mediawiki.org, you can use that full string, or just use\n            mediawiki or mediawiki.org. If you're interested in the aggregation of\n            all projects, use all-projects.\n          required: true\n          schema:\n            type: string\n        - name: editor-type\n          in: path\n          description: |\n            If you want to filter by editor-type, use one of anonymous, group-bot (registered\n            accounts belonging to the bot group), name-bot (registered accounts not belonging\n            to the bot group but having bot-like names) or user (registered account not in bot\n            group nor having bot-like name). If you are interested in edits regardless\n            of their editor-type, use all-editor-types.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-editor-types\n              - anonymous\n              - group-bot\n              - name-bot\n              - user\n        - name: page-type\n          in: path\n          description: |\n            If you want to filter by page-type, use one of content (edits on pages in content\n            namespaces) or non-content (edits on pages in non-content namespaces). If you are\n            interested in edits regardless of their page-type, use all-page-types.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-page-types\n              - content\n              - non-content\n        - name: granularity\n          in: path\n          description: |\n            The time unit for the response data. As of today, supported values are\n            daily and monthly.\n          required: true\n          schema:\n            type: string\n            enum:\n              - daily\n              - monthly\n        - name: start\n          in: path\n          description: The date of the first day to include, in YYYYMMDD format\n          required: true\n          schema:\n            type: string\n        - name: end\n          in: path\n          description: The date of the last day to include, in YYYYMMDD format\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: The list of values\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/edits'\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - type: default\n          name: ratelimit_route\n          options:\n            limits:\n              internal: 25\n              external: 25\n      x-request-handler:\n        - get_from_backend:\n            request:\n              uri: '{{options.host}}/edits/aggregate/{project}/{editor-type}/{page-type}/{granularity}/{start}/{end}'\n              headers:\n                x-client-ip: '{{x-client-ip}}'\n              agentOptions:\n                keepAlive: true\n      x-monitor: false\n\n  /edits/per-page/{project}/{page-title}/{editor-type}/{granularity}/{start}/{end}:\n    get:\n      tags:\n        - Edits data\n      summary: Get edit counts for a page in a project.\n      description: |\n        Given a Mediawiki project, a page-title prefixed with its canonical namespace (for\n        instance 'User:Jimbo_Wales') and a date range, returns a timeseries of edit counts.\n        You can filter by editors-type (all-editor-types, anonymous, group-bot, name-bot, user).\n        You can choose between daily and monthly granularity as well.\n\n        Note: Due to performance of the data-serving backend, this endpoint limits the queryable\n        timespan to one year (whether in daily or monthly granularity).\n\n        - Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental)\n        - Rate limit: 5 req/s\n        - License: Data accessible via this endpoint is available under the\n          [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).\n      parameters:\n        - name: project\n          in: path\n          description: |\n            The name of any Wikimedia project formatted like {language code}.{project name},\n            for example en.wikipedia. You may pass en.wikipedia.org and the .org will be stripped\n            off. For projects like commons without language codes, use commons.wikimedia. For\n            projects like www.mediawiki.org, you can use that full string, or just use mediawiki\n            or mediawiki.org.\n          required: true\n          schema:\n            type: string\n        - name: page-title\n          in: path\n          description: |\n            The page-title to request edits for. It should be prefixed with canonical namespace.\n            Spaces will be converted to underscores.\n          required: true\n          schema:\n            type: string\n        - name: editor-type\n          in: path\n          description: |\n            If you want to filter by editor-type, use one of anonymous, group-bot (registered\n            accounts belonging to the bot group), name-bot (registered accounts not belonging to\n            the bot group but having bot-like names) or user (registered account not in bot group\n            nor having bot-like name). If you are interested in edits regardless of their\n            editor-type, use all-editor-types.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-editor-types\n              - anonymous\n              - group-bot\n              - name-bot\n              - user\n        - name: granularity\n          in: path\n          description: |\n            Time unit for the response data. As of today, supported values are daily and monthly\n          required: true\n          schema:\n            type: string\n            enum:\n              - daily\n              - monthly\n        - name: start\n          in: path\n          description: The date of the first day to include, in YYYYMMDD format\n          required: true\n          schema:\n            type: string\n        - name: end\n          in: path\n          description: The date of the last day to include, in YYYYMMDD format\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: The list of values\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/edits-per-page'\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - type: default\n          name: ratelimit_route\n          options:\n            limits:\n              internal: 5\n              external: 5\n      x-request-handler:\n        - get_from_backend:\n            request:\n              uri: '{{options.host}}/edits/per-page/{project}/{page-title}/{editor-type}/{granularity}/{start}/{end}'\n              headers:\n                x-client-ip: '{{x-client-ip}}'\n              agentOptions:\n                keepAlive: true\n      x-monitor: false\n\n####################################################\n# Commented because of https://meta.wikimedia.org/wiki/Requests_for_comment/X!%27s_Edit_Counter\n# This RfC results in per-editor monthly stats should be opt-in\n# https://phabricator.wikimedia.org/T203826\n####################################################\n#\n#  /edits/per-editor/{project}/{user-text}/{page-type}/{granularity}/{start}/{end}:\n#    get:\n#      tags:\n#        - Edits data\n#      summary: Get the edits counts for an editor in a project.\n#      description: |\n#        Given a Mediawiki project, a user-text and a date range, returns a timeseries of edits\n#        counts. You can filter by page type (all-page-types, content or non-content). You can\n#        choose between daily and monthly granularity as well.\n#\n#        - Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental)\n#        - Rate limit: 25 req/s\n#        - License: Data accessible via this endpoint is available under the\n#          [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).\n#      produces:\n#        - application/json\n#        - application/problem+json\n#      parameters:\n#        - name: project\n#          in: path\n#          description: |\n#            The name of any Wikimedia project formatted like {language code}.{project name},\n#            for example en.wikipedia. You may pass en.wikipedia.org and the .org will be stripped\n#            off. For projects like commons without language codes, use commons.wikimedia. For\n#            projects like www.mediawiki.org, you can use that full string, or just use mediawiki\n#            or mediawiki.org.\n#          type: string\n#          required: true\n#        - name: user-text\n#          in: path\n#          description: |\n#            The user you want to get edits for. Can be either a registered user-name, or an\n#            anonymous user IP.\n#          type: string\n#          required: true\n#        - name: page-type\n#          in: path\n#          description: |\n#            If you want to filter by page-type, use one of content (edits on pages in content\n#            namespaces) or non-content (edits on pages in non-content namespaces). If you are\n#            interested in edits regardless of their page-type, use all-page-types.\n#          type: string\n#          enum: ['all-page-types', 'content', 'non-content']\n#          required: true\n#        - name: granularity\n#          in: path\n#          description: |\n#            Time unit for the response data. As of today, supported values are daily and monthly\n#          type: string\n#          enum: ['daily', 'monthly']\n#          required: true\n#        - name: start\n#          in: path\n#          description: The date of the first day to include, in YYYYMMDD format\n#          type: string\n#          required: true\n#        - name: end\n#          in: path\n#          description: The date of the last day to include, in YYYYMMDD format\n#          type: string\n#          required: true\n#      responses:\n#        '200':\n#          description: The list of values\n#          schema:\n#            $ref: '#/definitions/edits-per-editor'\n#        default:\n#          description: Error\n#          schema:\n#            $ref: '#/definitions/problem'\n#      x-route-filters:\n#        - type: default\n#          name: ratelimit_route\n#          options:\n#            limits:\n#              internal: 25\n#              external: 25\n#      x-request-handler:\n#        - get_from_backend:\n#            request:\n#              uri: '{{options.host}}/edits/per-editor/{project}/{user-text}/{page-type}/{granularity}/{start}/{end}'\n#              headers:\n#                x-client-ip: '{{x-client-ip}}'\n#              agentOptions:\n#                keepAlive: true\n#      x-monitor: false\n\n\n  ########################################\n  # Registered Users\n  ########################################\n  /registered-users/new/{project}/{granularity}/{start}/{end}:\n    get:\n      tags:\n        - Registered users data\n      summary: Get newly registered users counts for a project.\n      description: |\n        Given a Mediawiki project and a date range, returns a timeseries of its newly registered\n        users counts. You can choose between daily and monthly granularity. The newly registered\n        users value is computed with self-created users only, not auto-login created ones.\n\n        - Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental)\n        - Rate limit: 25 req/s\n        - License: Data accessible via this endpoint is available under the\n          [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).\n      parameters:\n        - name: project\n          in: path\n          description: |\n            The name of any Wikimedia project formatted like {language code}.{project name},\n            for example en.wikipedia. You may pass en.wikipedia.org and the .org will be stripped\n            off.  For projects like commons without language codes, use commons.wikimedia.\n            For projects like www.mediawiki.org, you can use that full string, or just use\n            mediawiki or mediawiki.org. If you're interested in the aggregation of\n            all projects, use all.\n          required: true\n          schema:\n            type: string\n        - name: granularity\n          in: path\n          description: |\n            The time unit for the response data. As of today, supported values are\n            daily and monthly.\n          required: true\n          schema:\n            type: string\n            enum:\n              - daily\n              - monthly\n        - name: start\n          in: path\n          description: The date of the first day to include, in YYYYMMDD format\n          required: true\n          schema:\n            type: string\n        - name: end\n          in: path\n          description: The date of the last day to include, in YYYYMMDD format\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: The list of values\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/new-registered-users'\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - type: default\n          name: ratelimit_route\n          options:\n            limits:\n              internal: 25\n              external: 25\n      x-request-handler:\n        - get_from_backend:\n            request:\n              uri: '{{options.host}}/registered-users/new/{project}/{granularity}/{start}/{end}'\n              headers:\n                x-client-ip: '{{x-client-ip}}'\n              agentOptions:\n                keepAlive: true\n      x-monitor: false\n\n\n  ########################################\n  # Net Bytes difference\n  ########################################\n  /bytes-difference/net/aggregate/{project}/{editor-type}/{page-type}/{granularity}/{start}/{end}:\n    get:\n      tags:\n        - Bytes difference data\n      summary: Get the sum of net text bytes difference between current edit and previous\n        one.\n      description: |\n        Given a Mediawiki project and a date range, returns a timeseries of bytes difference net\n        sums. You can filter by editors-type (all-editor-types, anonymous, group-bot, name-bot,\n        user) and page-type (all-page-types, content or non-content). You can choose between\n        daily and monthly granularity as well.\n\n        - Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental)\n        - Rate limit: 25 req/s\n        - License: Data accessible via this endpoint is available under the\n          [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).\n      parameters:\n        - name: project\n          in: path\n          description: |\n            The name of any Wikimedia project formatted like {language code}.{project name},\n            for example en.wikipedia. You may pass en.wikipedia.org and the .org will be stripped\n            off. For projects like commons without language codes, use commons.wikimedia. For\n            projects like www.mediawiki.org, you can use that full string, or just use mediawiki\n            or mediawiki.org. If you're interested in the aggregation of all projects, use\n            all-projects.\n          required: true\n          schema:\n            type: string\n        - name: editor-type\n          in: path\n          description: |\n            If you want to filter by editor-type, use one of anonymous, group-bot (registered\n            accounts belonging to the bot group), name-bot (registered accounts not belonging to\n            the bot group but having bot-like names) or user (registered account not in bot group\n            nor having bot-like name). If you are interested in edits regardless of their\n            editor-type, use all-editor-types.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-editor-types\n              - anonymous\n              - group-bot\n              - name-bot\n              - user\n        - name: page-type\n          in: path\n          description: |\n            If you want to filter by page-type, use one of content (edits on pages in content\n            namespaces) or non-content (edits on pages in non-content namespaces). If you are\n            interested in edits regardless of their page-type, use all-page-types.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-page-types\n              - content\n              - non-content\n        - name: granularity\n          in: path\n          description: |\n            Time unit for the response data. As of today, supported values are daily and monthly\n          required: true\n          schema:\n            type: string\n            enum:\n              - daily\n              - monthly\n        - name: start\n          in: path\n          description: The date of the first day to include, in YYYYMMDD format\n          required: true\n          schema:\n            type: string\n        - name: end\n          in: path\n          description: The date of the last day to include, in YYYYMMDD format\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: The list of values\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/net-bytes-difference'\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - type: default\n          name: ratelimit_route\n          options:\n            limits:\n              internal: 25\n              external: 25\n      x-request-handler:\n        - get_from_backend:\n            request:\n              uri: '{{options.host}}/bytes-difference/net/aggregate/{project}/{editor-type}/{page-type}/{granularity}/{start}/{end}'\n              headers:\n                x-client-ip: '{{x-client-ip}}'\n              agentOptions:\n                keepAlive: true\n      x-monitor: false\n\n  /bytes-difference/net/per-page/{project}/{page-title}/{editor-type}/{granularity}/{start}/{end}:\n    get:\n      tags:\n        - Bytes difference data\n      summary: Get the sum of net text bytes difference per page.\n      description: |\n        Given a Mediawiki project, a page-title prefixed with canonical namespace (for\n        instance 'User:Jimbo_Wales') and a date range, returns a timeseries of bytes\n        difference net sums. You can filter by editors-type (all-editor-types, anonymous,\n        group-bot, name-bot, user). You can choose between daily and monthly granularity as well.\n\n        Note: Due to performance of the data-serving backend, this endpoint limits the queryable\n        timespan to one year (whether in daily or monthly granularity).\n\n        - Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental)\n        - Rate limit: 25 req/s\n        - License: Data accessible via this endpoint is available under the\n          [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).\n      parameters:\n        - name: project\n          in: path\n          description: |\n            The name of any Wikimedia project formatted like {language code}.{project name},\n            for example en.wikipedia. You may pass en.wikipedia.org and the .org will be stripped\n            off. For projects like commons without language codes, use commons.wikimedia. For\n            projects like www.mediawiki.org, you can use that full string, or just use mediawiki\n            or mediawiki.org.\n          required: true\n          schema:\n            type: string\n        - name: page-title\n          in: path\n          description: |\n            The page-title to request net bytes-difference for. Should be prefixed with the\n            page canonical namespace.\n          required: true\n          schema:\n            type: string\n        - name: editor-type\n          in: path\n          description: |\n            If you want to filter by editor-type, use one of anonymous, group-bot (registered\n            accounts belonging to the bot group), name-bot (registered accounts not belonging to\n            the bot group but having bot-like names) or user (registered account not in bot group\n            nor having bot-like name). If you are interested in edits regardless of their\n            editor-type, use all-editor-types.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-editor-types\n              - anonymous\n              - group-bot\n              - name-bot\n              - user\n        - name: granularity\n          in: path\n          description: |\n            Time unit for the response data. As of today, supported values are daily and monthly\n          required: true\n          schema:\n            type: string\n            enum:\n              - daily\n              - monthly\n        - name: start\n          in: path\n          description: The date of the first day to include, in YYYYMMDD format\n          required: true\n          schema:\n            type: string\n        - name: end\n          in: path\n          description: The date of the last day to include, in YYYYMMDD format\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: The list of values\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/net-bytes-difference-per-page'\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - type: default\n          name: ratelimit_route\n          options:\n            limits:\n              internal: 25\n              external: 25\n      x-request-handler:\n        - get_from_backend:\n            request:\n              uri: '{{options.host}}/bytes-difference/net/per-page/{project}/{page-title}/{editor-type}/{granularity}/{start}/{end}'\n              headers:\n                x-client-ip: '{{x-client-ip}}'\n              agentOptions:\n                keepAlive: true\n      x-monitor: false\n\n####################################################\n# Commented because of https://meta.wikimedia.org/wiki/Requests_for_comment/X!%27s_Edit_Counter\n# This RfC results in per-editor monthly stats should be opt-in\n# https://phabricator.wikimedia.org/T203826\n####################################################\n#  /bytes-difference/net/per-editor/{project}/{user-text}/{page-type}/{granularity}/{start}/{end}:\n#    get:\n#      tags:\n#        - Bytes difference data\n#      summary: Get the sum of net text bytes difference per editor.\n#      description: |\n#        Given a Mediawiki project, an user-text and a date range, returns a timeseries of bytes\n#        difference net sums. You can filter by page-type (all-page-types, content, non-content).\n#        You can choose between daily and monthly granularity as well.\n#\n#        - Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental)\n#        - Rate limit: 25 req/s\n#        - License: Data accessible via this endpoint is available under the\n#          [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).\n#      produces:\n#        - application/json\n#        - application/problem+json\n#      parameters:\n#        - name: project\n#          in: path\n#          description: |\n#            The name of any Wikimedia project formatted like {language code}.{project name},\n#            for example en.wikipedia. You may pass en.wikipedia.org and the .org will be stripped\n#            off. For projects like commons without language codes, use commons.wikimedia. For\n#            projects like www.mediawiki.org, you can use that full string, or just use mediawiki\n#            or mediawiki.org.\n#          type: string\n#          required: true\n#        - name: user-text\n#          in: path\n#          description: |\n#            The user-text to request net bytes-difference for. Can be either a registered\n#            user-name or an anonymous user IP.\n#          type: string\n#          required: true\n#        - name: page-type\n#          in: path\n#          description: |\n#            If you want to filter by page-type, use one of content (edits on pages in content\n#            namespaces) or non-content (edits on pages in non-content namespaces). If you are\n#            interested in edits regardless of their page-type, use all-page-types.\n#          type: string\n#          enum: ['all-page-types', 'content', 'non-content']\n#          required: true\n#        - name: granularity\n#          in: path\n#          description: |\n#            Time unit for the response data. As of today, supported values are daily and monthly\n#          type: string\n#          enum: ['daily', 'monthly']\n#          required: true\n#        - name: start\n#          in: path\n#          description: The date of the first day to include, in YYYYMMDD format\n#          type: string\n#          required: true\n#        - name: end\n#          in: path\n#          description: The date of the last day to include, in YYYYMMDD format\n#          type: string\n#          required: true\n#      responses:\n#        '200':\n#          description: The list of values\n#          schema:\n#            $ref: '#/definitions/net-bytes-difference-per-editor'\n#        default:\n#          description: Error\n#          schema:\n#            $ref: '#/definitions/problem'\n#      x-route-filters:\n#        - type: default\n#          name: ratelimit_route\n#          options:\n#            limits:\n#              internal: 25\n#              external: 25\n#      x-request-handler:\n#        - get_from_backend:\n#            request:\n#              uri: '{{options.host}}/bytes-difference/net/per-editor/{project}/{user-text}/{page-type}/{granularity}/{start}/{end}'\n#              headers:\n#                x-client-ip: '{{x-client-ip}}'\n#              agentOptions:\n#                keepAlive: true\n#      x-monitor: false\n\n\n  ########################################\n  # Absolute Bytes difference\n  ########################################\n  /bytes-difference/absolute/aggregate/{project}/{editor-type}/{page-type}/{granularity}/{start}/{end}:\n    get:\n      tags:\n        - Bytes difference data\n      summary: |\n        Get the sum of absolute value of text bytes difference between current edit and\n        previous one.\n      description: |\n        Given a Mediawiki project and a date range, returns a timeseries of absolute bytes\n        difference sums. You can filter by editors-type (all-editor-types, anonymous, group-bot,\n        name-bot, user) and page-type (all-page-types, content, non-content). You can choose\n        between daily and monthly granularity as well.\n\n        - Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental)\n        - Rate limit: 25 req/s\n        - License: Data accessible via this endpoint is available under the\n          [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).\n      parameters:\n        - name: project\n          in: path\n          description: |\n            The name of any Wikimedia project formatted like {language code}.{project name},\n            for example en.wikipedia. You may pass en.wikipedia.org and the .org will be stripped\n            off. For projects like commons without language codes, use commons.wikimedia. For\n            projects like www.mediawiki.org, you can use that full string, or just use mediawiki\n            or mediawiki.org. If you're interested in the aggregation of all projects, use\n            all-projects.\n          required: true\n          schema:\n            type: string\n        - name: editor-type\n          in: path\n          description: |\n            If you want to filter by editor-type, use one of anonymous, group-bot (registered\n            accounts belonging to the bot group), name-bot (registered accounts not belonging to\n            the bot group but having bot-like names) or user (registered account not in bot group\n            nor having bot-like name). If you are interested in edits regardless of their\n            editor-type, use all-editor-types.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-editor-types\n              - anonymous\n              - group-bot\n              - name-bot\n              - user\n        - name: page-type\n          in: path\n          description: |\n            If you want to filter by page-type, use one of content (edits on pages in content\n            namespaces) or non-content (edits on pages in non-content namespaces). If you are\n            interested in edits regardless of their page-type, use all-page-types.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-page-types\n              - content\n              - non-content\n        - name: granularity\n          in: path\n          description: |\n            Time unit for the response data. As of today, supported values are daily and monthly\n          required: true\n          schema:\n            type: string\n            enum:\n              - daily\n              - monthly\n        - name: start\n          in: path\n          description: The date of the first day to include, in YYYYMMDD format\n          required: true\n          schema:\n            type: string\n        - name: end\n          in: path\n          description: The date of the last day to include, in YYYYMMDD format\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: The list of values\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/absolute-bytes-difference'\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - type: default\n          name: ratelimit_route\n          options:\n            limits:\n              internal: 25\n              external: 25\n      x-request-handler:\n        - get_from_backend:\n            request:\n              uri: '{{options.host}}/bytes-difference/absolute/aggregate/{project}/{editor-type}/{page-type}/{granularity}/{start}/{end}'\n              headers:\n                x-client-ip: '{{x-client-ip}}'\n              agentOptions:\n                keepAlive: true\n      x-monitor: false\n\n  /bytes-difference/absolute/per-page/{project}/{page-title}/{editor-type}/{granularity}/{start}/{end}:\n    get:\n      tags:\n        - Bytes difference data\n      summary: Get the sum of absolute text bytes difference per page.\n      description: |\n        Given a Mediawiki project, a page-title prefixed with canonical namespace (for\n        instance 'User:Jimbo_Wales') and a date range, returns a timeseries of bytes\n        difference absolute sums. You can filter by editors-type (all-editor-types, anonymous,\n        group-bot, name-bot, user). You can choose between daily and monthly granularity as well.\n\n        Note: Due to performance of the data-serving backend, this endpoint limits the queryable\n        timespan to one year (whether in daily or monthly granularity).\n\n        - Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental)\n        - Rate limit: 25 req/s\n        - License: Data accessible via this endpoint is available under the\n          [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).\n      parameters:\n        - name: project\n          in: path\n          description: |\n            The name of any Wikimedia project formatted like {language code}.{project name},\n            for example en.wikipedia. You may pass en.wikipedia.org and the .org will be stripped\n            off. For projects like commons without language codes, use commons.wikimedia. For\n            projects like www.mediawiki.org, you can use that full string, or just use mediawiki\n            or mediawiki.org.\n          required: true\n          schema:\n            type: string\n        - name: page-title\n          in: path\n          description: |\n            The page-title to request absolute bytes-difference for. Should be prefixed with the\n            page canonical namespace.\n          required: true\n          schema:\n            type: string\n        - name: editor-type\n          in: path\n          description: |\n            If you want to filter by editor-type, use one of anonymous, group-bot (registered\n            accounts belonging to the bot group), name-bot (registered accounts not belonging to\n            the bot group but having bot-like names) or user (registered account not in bot group\n            nor having bot-like name). If you are interested in edits regardless of their\n            editor-type, use all-editor-types.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-editor-types\n              - anonymous\n              - group-bot\n              - name-bot\n              - user\n        - name: granularity\n          in: path\n          description: |\n            Time unit for the response data. As of today, supported values are daily and monthly\n          required: true\n          schema:\n            type: string\n            enum:\n              - daily\n              - monthly\n        - name: start\n          in: path\n          description: The date of the first day to include, in YYYYMMDD format\n          required: true\n          schema:\n            type: string\n        - name: end\n          in: path\n          description: The date of the last day to include, in YYYYMMDD format\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: The list of values\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/absolute-bytes-difference-per-page'\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - type: default\n          name: ratelimit_route\n          options:\n            limits:\n              internal: 25\n              external: 25\n      x-request-handler:\n        - get_from_backend:\n            request:\n              uri: '{{options.host}}/bytes-difference/absolute/per-page/{project}/{page-title}/{editor-type}/{granularity}/{start}/{end}'\n              headers:\n                x-client-ip: '{{x-client-ip}}'\n              agentOptions:\n                keepAlive: true\n      x-monitor: false\n\n####################################################\n# Commented because of https://meta.wikimedia.org/wiki/Requests_for_comment/X!%27s_Edit_Counter\n# This RfC results in per-editor monthly stats should be opt-in\n# https://phabricator.wikimedia.org/T203826\n####################################################\n#  /bytes-difference/absolute/#tor/{project}/{user-text}/{page-type}/{granularity}/{start}/{end}:\n#    get:\n#      tags:\n#        - Bytes difference data\n#      summary: Get the sum of absolute text bytes difference per editor.\n#      description: |\n#        Given a Mediawiki project, an user_text and a date range, returns a timeseries of bytes\n#        difference absolute sums. You can filter by page-type (all-page-types, content,\n#        non-content). You can choose between daily and monthly granularity as well.\n#\n#        - Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental)\n#        - Rate limit: 25 req/s\n#        - License: Data accessible via this endpoint is available under the\n#          [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).\n#      produces:\n#        - application/json\n#        - application/problem+json\n#      parameters:\n#        - name: project\n#          in: path\n#          description: |\n#            The name of any Wikimedia project formatted like {language code}.{project name},\n#            for example en.wikipedia. You may pass en.wikipedia.org and the .org will be stripped\n#            off. For projects like commons without language codes, use commons.wikimedia. For\n#            projects like www.mediawiki.org, you can use that full string, or just use mediawiki\n#            or mediawiki.org.\n#          type: string\n#          required: true\n#        - name: user-text\n#          in: path\n#          description: |\n#            The user-text to request absolute bytes-difference for. Can be either a registered\n#            user-name or an anonymous user IP.\n#          type: string\n#          required: true\n#        - name: page-type\n#          in: path\n#          description: |\n#            If you want to filter by page-type, use one of content (edits on pages in content\n#            namespaces) or non-content (edits on pages in non-content namespaces). If you are\n#            interested in edits regardless of their page-type, use all-page-types.\n#          type: string\n#          enum: ['all-page-types', 'content', 'non-content']\n#          required: true\n#        - name: granularity\n#          in: path\n#          description: |\n#            Time unit for the response data. As of today, supported values are daily and monthly\n#          type: string\n#          enum: ['daily', 'monthly']\n#          required: true\n#        - name: start\n#          in: path\n#          description: The date of the first day to include, in YYYYMMDD format\n#          type: string\n#          required: true\n#        - name: end\n#          in: path\n#          description: The date of the last day to include, in YYYYMMDD format\n#          type: string\n#          required: true\n#      responses:\n#        '200':\n#          description: The list of values\n#          schema:\n#            $ref: '#/definitions/absolute-bytes-difference-per-editor'\n#        default:\n#          description: Error\n#          schema:\n#            $ref: '#/definitions/problem'\n#      x-route-filters:\n#        - type: default\n#          name: ratelimit_route\n#          options:\n#            limits:\n#              internal: 25\n#              external: 25\n#      x-request-handler:\n#        - get_from_backend:\n#            request:\n#              uri: '{{options.host}}/bytes-difference/absolute/per-editor/{project}/{user-text}/{page-type}/{granularity}/{start}/{end}'\n#              headers:\n#                x-client-ip: '{{x-client-ip}}'\n#              agentOptions:\n#                keepAlive: true\n#      x-monitor: false\n  /mediarequests/aggregate/{referer}/{media_type}/{agent}/{granularity}/{start}/{end}:\n    get:\n      tags:\n        - Mediarequests data\n      summary: Get aggregated mediarequest counts per referer.\n      description: |\n        Given a date range, returns a timeseries of mediarequest counts. You can filter by referer, media types and/or agent type. You can choose between daily and monthly granularity.\n        counts. The data can be filtered by agent type.\n        - Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental)\n        - Rate limit: 100 req/s\n        - License: Data accessible via this endpoint is available under the\n          [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).\n      parameters:\n        - name: referer\n          in: path\n          description: |\n            The place that the request was made from. It can be any Wikimedia project (e.g. de.wikipedia),\n            \"all-referers\", \"internal\", \"external\", \"search-engine\", \"unknown\" or \"none\".\n          required: true\n          schema:\n            type: string\n        - name: media_type\n          in: path\n          description: |\n            The media type that each file belongs to. It can be image, audio, video, document, or other. Use 'all-media-types if you want all.'\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-media-types\n              - image\n              - video\n              - audio\n              - document\n              - other\n        - name: agent\n          in: path\n          description: |\n            If you want to filter by agent type, use one of user or spider. If you are interested\n            in mediarequests regardless of agent type, use all-agents.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-agents\n              - user\n              - spider\n        - name: granularity\n          in: path\n          description: |\n            The time unit for the response data. As of today, the supported granularities for this\n            endpoint are daily and monthly.\n          required: true\n          schema:\n            type: string\n            enum:\n              - daily\n              - monthly\n        - name: start\n          in: path\n          description: The timestamp of the first hour/day/month to include, in YYYYMMDD\n            format\n          required: true\n          schema:\n            type: string\n        - name: end\n          in: path\n          description: The timestamp of the last hour/day/month to include, in YYYYMMDD\n            format\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: The list of values\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/mediarequest-referer'\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - type: default\n          name: ratelimit_route\n          options:\n            limits:\n              internal: 100\n              external: 100\n      x-request-handler:\n        - get_from_backend:\n            request:\n              uri: '{{options.host}}/mediarequests/aggregate/{referer}/{media_type}/{agent}/{granularity}/{start}/{end}'\n              headers:\n                x-client-ip: '{{x-client-ip}}'\n              agentOptions:\n                keepAlive: true\n      x-monitor: true\n      x-amples:\n        - title: Get aggregate mediarequests\n          request:\n            params:\n              domain: wikimedia.org\n              referer: en.wikipedia\n              media_type: all-media-types\n              agent: all-agents\n              granularity: daily\n              start: 1970010100\n              end: 1970010100\n          response:\n            status: 200\n            headers:\n              content-type: application/json\n            body:\n              items:\n                - referer: en.wikipedia\n                  media_type: all-media-types\n                  agent: all-agents\n                  granularity: daily\n                  timestamp: 1970010100\n                  requests: 0\n\n  /mediarequests/per-file/{referer}/{agent}/{file_path}/{granularity}/{start}/{end}:\n    get:\n      tags:\n        - Mediarequests data\n      summary: Get aggregated mediarequest counts for a media file.\n      description: |\n        Given a file stored in upload.wikimedia.org (the file storage for all media in any wiki) and a date range,\n        returns a daily timeseries of its request counts. The data can be filtered by agent type.\n\n        - Stability: [stable](https://www.mediawiki.org/wiki/API_versioning#Stable)\n        - Rate limit: 100 req/s\n        - License: Data accessible via this endpoint is available under the\n          [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).\n      parameters:\n        - name: referer\n          in: path\n          description: |\n            The place that the request was made from. It can be any Wikimedia project (e.g. de.wikipedia), \"all-referers\",\n            \"internal\", \"external\", \"search-engine\", \"unknown\" or \"none\".\n          required: true\n          schema:\n            type: string\n        - name: agent\n          in: path\n          description: |\n            If you want to filter by agent type, use one of user or spider. If you are interested\n            in media requests regardless of agent type, use all-agents.\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-agents\n              - user\n              - spider\n        - name: file_path\n          in: path\n          description: |\n            The upload.wikimedia.org (the file storage for all media in any wiki) path to the file. It also should\n            be URI-encoded, so that non-URI-safe characters like %, / or ? are accepted.\n            Example: %2Fwiktionary%2Fte%2F4%2F40%2Fpeacocks.JPG\n          required: true\n          schema:\n            type: string\n        - name: granularity\n          in: path\n          description: |\n            The time unit for the response data. As of today, the only supported granularity for\n            this endpoint is daily and monthly.\n          required: true\n          schema:\n            type: string\n            enum:\n              - daily\n              - monthly\n        - name: start\n          in: path\n          description: The date of the first day to include, in YYYYMMDD or YYYYMMDDHH\n            format\n          required: true\n          schema:\n            type: string\n        - name: end\n          in: path\n          description: The date of the last day to include, in YYYYMMDD or YYYYMMDDHH\n            format\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: The list of values\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/mediarequest-file'\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - type: default\n          name: ratelimit_route\n          options:\n            limits:\n              internal: 100\n              external: 100\n      x-request-handler:\n        - get_from_backend:\n            request:\n              uri: '{{options.host}}/mediarequests/per-file/{referer}/{agent}/{file_path}/{granularity}/{start}/{end}'\n              headers:\n                x-client-ip: '{{x-client-ip}}'\n              agentOptions:\n                keepAlive: true\n      x-monitor: false\n\n  /mediarequests/top/{referer}/{media_type}/{year}/{month}/{day}:\n    get:\n      tags:\n        - Mediarequests data\n      summary: Get the most requested files for a referer.\n      description: |\n        Lists the 1000 most requested files for a given referer and timespan (month or day). You can filter by access method.\n        - Stability: [stable](https://www.mediawiki.org/wiki/API_versioning#Stable)\n        - Rate limit: 100 req/s\n        - License: Data accessible via this endpoint is available under the\n          [CC0 1.0 license](https://creativecommons.org/publicdomain/zero/1.0/).\n      parameters:\n        - name: referer\n          in: path\n          description: |\n            The place that the request was made from. Non Wikimedia projects appear aggreggated under the classification \"external\".\n            It can be any Wikimedia project (e.g. de.wikipedia), \"all-referers\", \"internal\", \"external\", \"search-engine\", \"unknown\" or \"none\".\n          required: true\n          schema:\n            type: string\n        - name: media_type\n          in: path\n          description: |\n            The media type that each file belongs to. It can be image, audio, video, document, or other. Use 'all-media-types if you want all.'\n          required: true\n          schema:\n            type: string\n            enum:\n              - all-media-types\n              - image\n              - video\n              - audio\n              - document\n              - other\n        - name: year\n          in: path\n          description: The year of the date for which to retrieve top files, in YYYY\n            format.\n          required: true\n          schema:\n            type: string\n        - name: month\n          in: path\n          description: |\n            The month of the date for which to retrieve top files, in MM format. If you want\n            to get the top files of a whole month, the day parameter should be all-days.\n          required: true\n          schema:\n            type: string\n        - name: day\n          in: path\n          description: The day of the date for which to retrieve top files, in DD\n            format.\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: The list of top files in the project\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/mediarequest-tops'\n        default:\n          description: Error\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      x-route-filters:\n        - type: default\n          name: ratelimit_route\n          options:\n            limits:\n              internal: 100\n              external: 100\n      x-request-handler:\n        - get_from_backend:\n            request:\n              uri: '{{options.host}}/mediarequests/top/{referer}/{media_type}/{year}/{month}/{day}'\n              headers:\n                x-client-ip: '{{x-client-ip}}'\n              agentOptions:\n                keepAlive: true\n      x-monitor: false\n\n  /editors/by-country/{project}/{activity-level}/{year}/{month}:\n    get:\n      tags:\n        - Editors data\n      summary: Get editor counts by country.\n      description: |\n        Given a Wikipedia project, an activity level, and a month, returns the upper bounds of\n        the editor counts, split by country of origin. Because of privacy reasons, editor counts\n        are given in a bounded format and are not reported for certain countries or for inactive\n        Wikipedias. Read more about privacy considerations\n        [here](https://wikitech.wikimedia.org/wiki/Analytics/Data_Lake/Edits/Geoeditors/Public#Privacy).\n        Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental)\n      parameters:\n        - name: project\n          in: path\n          description: |\n            The name of any Wikipedia project formatted like {language code}.{project name},\n            for example en.wikipedia. You may pass en.wikipedia.org and the .org will be stripped\n            off. Non-Wikipedia projects are not available for this endpoint.\n          schema:\n            type: string\n          required: true\n        - name: activity-level\n          in: path\n          description: |\n            Use either '5..99-edits' or '100..-edits' for activity level filtering.\n            Counts for 0..4-edits are not available due to privacy reasons.\n          schema:\n            type: string\n            enum: ['5..99-edits', '100..-edits']\n          required: true\n        - name: year\n          in: path\n          description: The year of the date for which to retrieve editor counts, in YYYY format.\n          schema:\n            type: string\n          required: true\n        - name: month\n          in: path\n          description: The month of the date for which to retrieve editor counts, in MM format.\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: The list of values\n          content:\n            'application/json':\n              schema:\n                $ref: '#/definitions/editors-by-country'\n        default:\n          description: Error\n          content:\n            'application/json':\n              schema:\n                $ref: '#/definitions/problem'\n      x-route-filters:\n        - type: default\n          name: ratelimit_route\n          options:\n            limits:\n              internal: 100\n              external: 100\n      x-request-handler:\n        - get_from_backend:\n            request:\n              uri: '{{options.host}}/editors/by-country/{project}/{activity-level}/{year}/{month}'\n              headers:\n                x-client-ip: '{{x-client-ip}}'\n              agentOptions:\n                keepAlive: true\n      x-monitor: false\n\n\n########################################\n# Components\n########################################\ncomponents:\n  schemas:\n    listing:\n      description: The result format for listings\n      required:\n        - items\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: string\n\n    pageview-article:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: object\n            properties:\n              project:\n                type: string\n              access:\n                type: string\n              article:\n                type: string\n              agent:\n                type: string\n              granularity:\n                type: string\n              timestamp:\n                type: string\n              views:\n                type: integer\n                format: int64\n\n    pageview-project:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: object\n            properties:\n              project:\n                type: string\n              access:\n                type: string\n              agent:\n                type: string\n              granularity:\n                type: string\n              timestamp:\n                # the hourly timestamp will be stored as YYYYMMDDHH\n                type: string\n              views:\n                type: integer\n                format: int64\n\n    pageview-tops:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: object\n            properties:\n              project:\n                type: string\n              access:\n                type: string\n              year:\n                type: string\n              month:\n                type: string\n              day:\n                type: string\n              articles:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    rank:\n                      type: integer\n                      format: int32\n                    article:\n                      type: string\n                    views:\n                      type: integer\n                      format: int64\n\n    by-country:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: object\n            properties:\n              project:\n                type: string\n              access:\n                type: string\n              year:\n                type: string\n              month:\n                type: string\n              countries:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    rank:\n                      type: integer\n                      format: int32\n                    country:\n                      type: string\n                    views:\n                      type: integer\n                      format: int64\n\n    per-country:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: object\n            properties:\n              country:\n                type: string\n              access:\n                type : string\n              year:\n                type: string\n              month:\n                type: string\n              day:\n                type: string\n              articles:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    rank:\n                      type: integer\n                      format: int32\n                    article:\n                      type: string\n                    project:\n                      type: string\n                    views_ceil:\n                      type: integer\n                      format: int64\n\n    unique-devices:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: object\n            properties:\n              project:\n                type: string\n              access-site:\n                type: string\n              granularity:\n                type: string\n              timestamp:\n                # the daily timestamp will be stored as YYYYMMDD\n                type: string\n              devices:\n                type: integer\n                format: int64\n\n    pagecounts-project:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: object\n            properties:\n              project:\n                type: string\n              access-site:\n                type: string\n              granularity:\n                type: string\n              timestamp:\n                type: string\n              count:\n                type: integer\n                format: int64\n\n    ## Edited Pages\n    new-pages:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: object\n            properties:\n              project:\n                type: string\n              editor-type:\n                type: string\n              page-type:\n                type: string\n              granularity:\n                type: string\n              results:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    timestamp:\n                      type: string\n                    new_pages:\n                      type: integer\n                      format: int32\n\n    edited-pages:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: object\n            properties:\n              project:\n                type: string\n              editor-type:\n                type: string\n              page-type:\n                type: string\n              activity-level:\n                type: string\n              granularity:\n                type: string\n              results:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    timestamp:\n                      type: string\n                    edited_pages:\n                      type: integer\n                      format: int32\n\n    top-edited-pages-by-edits:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: object\n            properties:\n              project:\n                type: string\n              editor-type:\n                type: string\n              page-type:\n                type: string\n              granularity:\n                type: string\n              results:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    timestamp:\n                      type: string\n                    top:\n                      type: array\n                      items:\n                        type: object\n                        properties:\n                          rank:\n                            type: integer\n                            format: int32\n                          page_title:\n                            type: string\n                          edits:\n                            type: integer\n                            format: int64\n\n    top-edited-pages-by-net-bytes-diff:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: object\n            properties:\n              project:\n                type: string\n              editor-type:\n                type: string\n              page-type:\n                type: string\n              granularity:\n                type: string\n              results:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    timestamp:\n                      type: string\n                    top:\n                      type: array\n                      items:\n                        type: object\n                        properties:\n                          rank:\n                            type: integer\n                            format: int32\n                          page_title:\n                            type: string\n                          net_bytes_diff:\n                            type: integer\n                            format: int64\n\n    top-edited-pages-by-abs-bytes-diff:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: object\n            properties:\n              project:\n                type: string\n              editor-type:\n                type: string\n              page-type:\n                type: string\n              granularity:\n                type: string\n              results:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    timestamp:\n                      type: string\n                    top:\n                      type: array\n                      items:\n                        type: object\n                        properties:\n                          rank:\n                            type: integer\n                            format: int32\n                          page_title:\n                            type: string\n                          abs_bytes_diff:\n                            type: integer\n                            format: int64\n\n    ## Editors\n    editors:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: object\n            properties:\n              project:\n                type: string\n              editor-type:\n                type: string\n              page-type:\n                type: string\n              activity-level:\n                type: string\n              granularity:\n                type: string\n              results:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    timestamp:\n                      type: string\n                    editors:\n                      type: integer\n                      format: int32\n\n    top-editors-by-edits:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: object\n            properties:\n              project:\n                type: string\n              editor-type:\n                type: string\n              page-type:\n                type: string\n              granularity:\n                type: string\n              results:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    timestamp:\n                      type: string\n                    top:\n                      type: array\n                      items:\n                        type: object\n                        properties:\n                          rank:\n                            type: integer\n                            format: int32\n                          user_text:\n                            type: string\n                          edits:\n                            type: integer\n                            format: int64\n\n    top-editors-by-net-bytes-diff:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: object\n            properties:\n              project:\n                type: string\n              editor-type:\n                type: string\n              page-type:\n                type: string\n              granularity:\n                type: string\n              results:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    timestamp:\n                      type: string\n                    top:\n                      type: array\n                      items:\n                        type: object\n                        properties:\n                          rank:\n                            type: integer\n                            format: int32\n                          user_text:\n                            type: string\n                          net_bytes_diff:\n                            type: integer\n                            format: int64\n\n    top-editors-by-abs-bytes-diff:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: object\n            properties:\n              project:\n                type: string\n              editor-type:\n                type: string\n              page-type:\n                type: string\n              granularity:\n                type: string\n              results:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    timestamp:\n                      type: string\n                    top:\n                      type: array\n                      items:\n                        type: object\n                        properties:\n                          rank:\n                            type: integer\n                            format: int32\n                          user_text:\n                            type: string\n                          abs_bytes_diff:\n                            type: integer\n                            format: int64\n\n    ## Edits\n    edits:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: object\n            properties:\n              project:\n                type: string\n              editor-type:\n                type: string\n              page-type:\n                type: string\n              granularity:\n                type: string\n              results:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    timestamp:\n                      type: string\n                    edits:\n                      type: integer\n                      format: int64\n\n    edits-per-page:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: object\n            properties:\n              project:\n                type: string\n              page-title:\n                type: string\n              editor-type:\n                type: string\n              granularity:\n                type: string\n              results:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    timestamp:\n                      type: string\n                    edits:\n                      type: integer\n                      format: int64\n\n    edits-per-editor:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: object\n            properties:\n              project:\n                type: string\n              user-text:\n                type: string\n              page-type:\n                type: string\n              granularity:\n                type: string\n              results:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    timestamp:\n                      type: string\n                    edits:\n                      type: integer\n                      format: int64\n\n    ## New Registered Users\n    new-registered-users:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: object\n            properties:\n              project:\n                type: string\n              granularity:\n                type: string\n              results:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    timestamp:\n                      type: string\n                    new_registered_users:\n                      type: integer\n                      format: int32\n\n    ## Net Bytes Difference\n    net-bytes-difference:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: object\n            properties:\n              project:\n                type: string\n              editor-type:\n                type: string\n              page-type:\n                type: string\n              granularity:\n                type: string\n              results:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    timestamp:\n                      type: string\n                    net_bytes_diff:\n                      type: integer\n                      format: int64\n\n    net-bytes-difference-per-page:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: object\n            properties:\n              project:\n                type: string\n              page-title:\n                type: string\n              editor-type:\n                type: string\n              granularity:\n                type: string\n              results:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    timestamp:\n                      type: string\n                    net_bytes_diff:\n                      type: integer\n                      format: int64\n\n    net-bytes-difference-per-editor:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: object\n            properties:\n              project:\n                type: string\n              user-text:\n                type: string\n              page-type:\n                type: string\n              granularity:\n                type: string\n              results:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    timestamp:\n                      type: string\n                    net_bytes_diff:\n                      type: integer\n                      format: int64\n\n    ## Net Bytes Difference\n    absolute-bytes-difference:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: object\n            properties:\n              project:\n                type: string\n              editor-type:\n                type: string\n              page-type:\n                type: string\n              granularity:\n                type: string\n              results:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    timestamp:\n                      type: string\n                    abs_bytes_diff:\n                      type: integer\n                      format: int64\n\n    absolute-bytes-difference-per-page:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: object\n            properties:\n              project:\n                type: string\n              page-title:\n                type: string\n              editor-type:\n                type: string\n              granularity:\n                type: string\n              results:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    timestamp:\n                      type: string\n                    abs_bytes_diff:\n                      type: integer\n                      format: int64\n\n    absolute-bytes-difference-per-editor:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: object\n            properties:\n              project:\n                type: string\n              user-text:\n                type: string\n              page-type:\n                type: string\n              granularity:\n                type: string\n              results:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    timestamp:\n                      type: string\n                    abs_bytes_diff:\n                      type: integer\n                      format: int64\n\n# Mediarequests\n    mediarequest-referer:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: object\n            properties:\n              referer:\n                type: string\n              media_type:\n                type: string\n              agent:\n                type: string\n              granularity:\n                type: string\n              timestamp:\n                # the hourly timestamp will be stored as YYYYMMDDHH\n                type: string\n              requests:\n                type: integer\n                format: int64\n\n    mediarequest-file:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            type: object\n            properties:\n              referer:\n                type: string\n              file_path:\n                type: string\n              agent:\n                type: string\n              granularity:\n                type: string\n              timestamp:\n                type: string\n              requests:\n                type: integer\n                format: int64\n\n    mediarequest-tops:\n      properties:\n        items:\n          type: array\n          items:\n            properties:\n              referer:\n                type: string\n              media-type:\n                type : string\n              year:\n                type: string\n              month:\n                type: string\n              day:\n                type: string\n              files:\n                type: array\n                items:\n                  properties:\n                    rank:\n                      type: integer\n                      format: int32\n                    file_path:\n                      type: string\n                    requests:\n                      type: integer\n                      format: int64\n\n    # Geoeditors (editors by country)\n    editors-by-country:\n      properties:\n        items:\n          type: array\n          items:\n            properties:\n              project:\n                type : string\n              activity-level:\n                type: string\n              year:\n                type: string\n              month:\n                type: string\n              results:\n                type: array\n                items:\n                  properties:\n                    country:\n                      type: string\n                    editors-ceil:\n                      type: integer\n                      format: int64\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /pageviews/top-per-country/{country}/{access}/{year}/{month}/{day}: get: operation \"\": responses: default: content: \"application/problem+json\": schema: parse schema: resolve \"#/components/schemas/problem\": find schema: resolve \"#/components/schemas/problem\": can't find value for \"components/schemas/problem\""
}