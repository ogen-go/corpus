{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bioinformatics-ua/dicoogle"
		},
		"file": {
			"name": "dicoogle_web_api.yaml",
			"size": 0,
			"path": "dicoogle_web_api.yaml",
			"byteSize": 35322,
			"content": "openapi: 3.0.0\ninfo:\n  description:\n    \u003cp\u003eSpecification of the Dicoogle's PACS archive public API. This page describes all services available\n    by default to the common user of the Dicoogle open-source PACS archive.\n    In the given examples, the Demo website is used to try out the services. They may also be tried in\n    your local deploy of Dicoogle through the base path \u003ca href=\"http://localhost:8080\"\u003ehttp://localhost:8080\u003c/a\u003e,\n    or another base path previously set. More information about Dicoogle configuration available in\n    \u003ca href=\"https://bioinformatics-ua.github.io/dicoogle-learning-pack/\"\u003eDicoogle Learning Pack\u003c/a\u003e.\u003c/p\u003e\n\n    \u003cp\u003eFinally, the Dicoogle Team encourage you to try out the official Javascript client API,\n    dicoogle-client-js, available in \u003ca href=\"https://github.com/bioinformatics-ua/dicoogle-client-js\"\u003eGitHub\u003c/a\u003e\n    and documented in detail in \u003ca href=\"https://bioinformatics-ua.github.io/dicoogle-client-js/\"\u003eGitHub Pages\u003c/a\u003e.\u003c/p\u003e\n\n    \u003cp\u003eUseful external links:\u003c/p\u003e\n    \u003cp\u003e- \u003ca href=\"http://www.dicoogle.com\"\u003eDicoogle Website\u003c/a\u003e \u003c/p\u003e\n    \u003cp\u003e- \u003ca href=\"https://github.com/bioinformatics-ua/dicoogle\"\u003eDicoogle GitHub\u003c/a\u003e \u003c/p\u003e\n    \u003cp\u003e- \u003ca href=\"https://bioinformatics-ua.github.io/dicoogle-learning-pack/\"\u003eDicoogle Learning Pack\u003c/a\u003e \u003c/p\u003e\n    \u003cp\u003e- \u003ca href=\"https://bioinformatics-ua.github.io/dicoogle-api/javadoc/\"\u003eDicoogle Javadoc\u003c/a\u003e \u003c/p\u003e\n    \u003cp\u003e- \u003ca href=\"https://github.com/bioinformatics-ua/dicoogle-client-js\"\u003eDicoogle Javascript Client\u003c/a\u003e \u003c/p\u003e\n    \u003cbr\u003e\n  version: 3.0.0\n  title: Dicoogle\n  contact:\n    name: Support\n    url: http://dicoogle.com/about/\n  license:\n    name: GNU General Public License v3.0\n    url: https://www.gnu.org/licenses/gpl-3.0.en.html\nservers:\n  - url: http://demo.dicoogle.com/\n  - url: http://localhost:8080/\n  - url: http://yourdicooglehost/\nexternalDocs:\n  description: Dicoogle API\n  url: https://bioinformatics-ua.github.io/dicoogle-api/\ntags:\n  - name: Authentication\n    description: Authentication related services\n  - name: User\n    description: User related services\n  - name: Search\n    description: Search related services\n  - name: Index\n    description: Index related services\n  - name: Management\n    description: Management related services\n  - name: Misc\n    description: Misc related services\npaths:\n  /login:\n    post:\n      tags:\n        - Authentication\n      summary: Log in to Dicoogle using the given credentials\n      operationId: login\n      parameters:\n        - in: query\n          name: username\n          description: The unique user name for the client\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: password\n          description: The user's password for authentication\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n        \"401\":\n          description: Wrong login credentials\n    get:\n      tags:\n        - Authentication\n      summary: Check if logged in\n      operationId: status\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FullUser\"\n      security:\n        - dicoogle_auth:\n            - user\n  /logout:\n    post:\n      tags:\n        - Authentication\n      summary: Log out from the server\n      operationId: logout\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n      security:\n        - dicoogle_auth:\n            - user\n  /user:\n    put:\n      tags:\n        - User\n      summary: Create a user in the system\n      operationId: createUser\n      parameters:\n        - in: query\n          name: username\n          description: The unique user name for the client\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: password\n          description: The user's password for authentication\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: admin\n          description: Whether the user has administrator privileges or not\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n    get:\n      tags:\n        - User\n      summary: Get all the users in the system\n      operationId: getUsers\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Users\"\n    delete:\n      tags:\n        - User\n      summary: Remove a user from the system\n      operationId: deleteUser\n      parameters:\n        - in: query\n          name: username\n          description: The unique user name for the client\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n  /search:\n    get:\n      tags:\n        - Search\n      summary: Perform a text query\n      operationId: search\n      parameters:\n        - in: query\n          name: query\n          description: the text query\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: provider\n          description: a list of provider plugins\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: field\n          description: \"\"\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Results\"\n        \"400\":\n          description: Invalid supplied parameters\n  /searchDIM:\n    get:\n      tags:\n        - Search\n      summary: Perform a text query with DIM-formatted outcome\n      operationId: searchDIM\n      parameters:\n        - in: query\n          name: query\n          description: the text query\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: provider\n          description: a list of provider plugins\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: field\n          description: \"\"\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DIMResults\"\n        \"400\":\n          description: Invalid supplied parameters\n  /dump:\n    get:\n      tags:\n        - Misc\n      summary: Retrieve an image's meta-data (perform an information dump)\n      operationId: dumpMetadata\n      parameters:\n        - in: query\n          name: uid\n          description: the SOP instance UID\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: provider\n          description: a list of provider plugins\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Result\"\n        \"400\":\n          description: Invalid supplied parameters\n  /management/settings/index/path:\n    get:\n      tags:\n        - Management\n      summary: Get the current Dicoogle watcher directory\n      operationId: getWatchingDir\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            text/plain:\n              schema:\n                type: string\n    post:\n      tags:\n        - Management\n      summary: Set the current Dicoogle watcher directory\n      operationId: setWatchDir\n      parameters:\n        - in: query\n          name: path\n          description: the Dicoogle watcher directory\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful operation\n        \"400\":\n          description: Invalid supplied parameters\n  /management/settings/index/effort:\n    get:\n      tags:\n        - Management\n      summary: Get the indexation effort\n      operationId: getIndexEffort\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            text/plain:\n              schema:\n                type: string\n    post:\n      tags:\n        - Management\n      summary: Set the indexation effort\n      operationId: setIndexEffort\n      parameters:\n        - in: query\n          name: effort\n          description: the indexation effort\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Successful operation\n        \"400\":\n          description: Invalid supplied parameters\n  /management/settings/index/thumbnail:\n    get:\n      tags:\n        - Management\n      summary: Check thumbnail indexation\n      operationId: getThumbnailIndex\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            text/plain:\n              schema:\n                type: string\n    post:\n      tags:\n        - Management\n      summary: Set thumbnail indexation\n      operationId: setThumbnailIndex\n      parameters:\n        - in: query\n          name: saveThumbnail\n          description: save thumbnail\n          required: true\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Successful operation\n        \"400\":\n          description: Invalid supplied parameters\n  /management/settings/index/watcher:\n    get:\n      tags:\n        - Management\n      summary: Check if Dicoogle watcher directory is enabled\n      operationId: getWatchDirEnabled\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            text/plain:\n              schema:\n                type: string\n    post:\n      tags:\n        - Management\n      summary: Set if the watcher directory is enabled\n      operationId: setWatchDirEnabled\n      parameters:\n        - in: query\n          name: watcher\n          description: enable the Dicoogle watcher directory\n          required: true\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Successful operation\n        \"400\":\n          description: Invalid supplied parameters\n  /management/settings/index/thumbnail/size:\n    get:\n      tags:\n        - Management\n      summary: Get the thumbnail size\n      operationId: getThumbnailSize\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            text/plain:\n              schema:\n                type: string\n    post:\n      tags:\n        - Management\n      summary: Set the thumbnail size\n      operationId: setThumbnailSize\n      parameters:\n        - in: query\n          name: thumbnailSize\n          description: the thumbnail size\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Successful operation\n        \"400\":\n          description: Invalid supplied parameters\n  /management/settings/index:\n    get:\n      tags:\n        - Management\n      summary: Get all of the current Indexer settings\n      operationId: getIndexSettings\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IndexSettings\"\n    post:\n      tags:\n        - Management\n      summary: Set all the Indexer settings\n      operationId: setIndexSettings\n      parameters:\n        - in: query\n          name: path\n          description: the Dicoogle watcher directory\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: watcher\n          description: enable the Dicoogle watcher directory\n          required: true\n          schema:\n            type: boolean\n        - in: query\n          name: zip\n          description: index zip files\n          required: true\n          schema:\n            type: boolean\n        - in: query\n          name: saveThumbnail\n          description: save thumbnail\n          required: true\n          schema:\n            type: boolean\n        - in: query\n          name: effort\n          description: the indexation effort\n          required: true\n          schema:\n            type: integer\n        - in: query\n          name: thumbnailSize\n          description: the thumbnail size\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Successful operation\n        \"400\":\n          description: Invalid supplied parameters\n  /management/settings/transfer:\n    get:\n      tags:\n        - Management\n      summary: Get the list of current transfer syntax settings available\n      operationId: getAvailableTS\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TransferSyntaxSettingsList\"\n    post:\n      tags:\n        - Management\n      summary: Set (or reset) an option of a particular transfer syntax\n      operationId: setOptionTS\n      parameters:\n        - in: query\n          name: uid\n          description: the unique identifier of the transfer syntax\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: option\n          description: the name of the option to modify\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: value\n          description: whether to set (true) or reset (false) the option\n          required: true\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n  /wado:\n    get:\n      tags:\n        - Misc\n      summary: \"\"\n      operationId: wado\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            text/plain:\n              schema:\n                type: string\n  /providers:\n    get:\n      tags:\n        - Index\n      summary: Retrieve a list of index provider plugins\n      operationId: getIndexPlugins\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListOfStrings\"\n  /management/settings/dicom/query:\n    get:\n      tags:\n        - Management\n      summary: Get all of the current DICOM Query-Retrieve settings\n      operationId: getQueryRetrieveSettings\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/QuerySettings\"\n    post:\n      tags:\n        - Management\n      summary: Set a group of DICOM Query/Retrieve settings\n      operationId: setQueryRetrieveSettings\n      parameters:\n        - in: query\n          name: acceptTimeout\n          description: \"\"\n          required: false\n          schema:\n            type: integer\n        - in: query\n          name: connectionTimeout\n          description: \"\"\n          required: false\n          schema:\n            type: integer\n        - in: query\n          name: idleTimeout\n          description: \"\"\n          required: false\n          schema:\n            type: integer\n        - in: query\n          name: maxAssociations\n          description: \"\"\n          required: false\n          schema:\n            type: integer\n        - in: query\n          name: maxPduReceive\n          description: \"\"\n          required: false\n          schema:\n            type: integer\n        - in: query\n          name: maxPduSend\n          description: \"\"\n          required: false\n          schema:\n            type: integer\n        - in: query\n          name: responseTimeout\n          description: \"\"\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Successful operation\n  /management/tasks/index:\n    post:\n      tags:\n        - Index\n      summary: Request a new indexing task over a given URI (recursively)\n      operationId: addIndexTaskURI\n      parameters:\n        - in: query\n          name: uri\n          description:\n            a URI or array of URIs representing the root resource of the files\n            to be indexed\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: plugin\n          description: a list of provider plugins\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  tasks:\n                    $ref: \"#/components/schemas/Tasks\"\n        \"400\":\n          description: Invalid supplied parameters\n  /management/tasks/unindex:\n    post:\n      tags:\n        - Index\n      summary:\n        Request that a list of entries is unindexed in the specified indexers,\n        or all of them if left unspecified. Exactly one of the fields `uri`,\n        `SOPInstanceUID` and `SeriesInstanceUID` must be given.\n      operationId: addUnindexTaskList\n      parameters:\n        - in: query\n          name: uri\n          description:\n            a URI or array of URIs representing the root resource of the files\n            to be unindexed\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: SOPInstanceUID\n          description:\n            a UID or list of UIDs representing the DICOM instances to be\n            unindexed\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: SeriesInstanceUID\n          description: a UID or list of UIDs representing the DICOM series to be unindexed\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: StudyInstanceUID\n          description: a UID or list of UIDs representing the DICOM studies to be unindexed\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: provider\n          description: a list of provider plugins\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful operation\n        \"400\":\n          description: Invalid supplied parameters\n  /management/tasks/remove:\n    post:\n      tags:\n        - Index\n      summary: Request that the file at the given URI is permanently removed\n      operationId: addUnindexTaskURI\n      parameters:\n        - in: query\n          name: uri\n          description:\n            a URI or array of URIs representing the root resource of the files\n            to be indexed\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful operation\n        \"400\":\n          description: Invalid supplied parameters\n  /management/dicom/storage:\n    get:\n      tags:\n        - Management\n      summary: Check the storage's service status\n      operationId: getStorageStatus\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  tasks:\n                    $ref: \"#/components/schemas/ServiceStatus\"\n    post:\n      tags:\n        - Management\n      summary: Change the storage's service status\n      operationId: setStorageStatus\n      parameters:\n        - in: query\n          name: isRunning\n          description: whether the service runs or not\n          required: false\n          schema:\n            type: boolean\n        - in: query\n          name: port\n          description: the port where the service is running\n          required: false\n          schema:\n            type: integer\n        - in: query\n          name: autostart\n          description: whether the service autostarts or not\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n  /management/dicom/query:\n    get:\n      tags:\n        - Management\n      summary: Check the query's service status\n      operationId: getQueryStatus\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  tasks:\n                    $ref: \"#/components/schemas/ServiceStatus\"\n    post:\n      tags:\n        - Management\n      summary: Change the query's service status\n      operationId: setQueryStatus\n      parameters:\n        - in: query\n          name: isRunning\n          description: whether the service runs or not\n          required: false\n          schema:\n            type: boolean\n        - in: query\n          name: port\n          description: the port where the service is running\n          required: false\n          schema:\n            type: integer\n        - in: query\n          name: autostart\n          description: whether the service autostarts or not\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n  /management/settings/dicom:\n    get:\n      tags:\n        - Management\n      summary: Retrieve the AE title of the Dicoogle archive\n      operationId: getAETitle\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  tasks:\n                    $ref: \"#/components/schemas/AETitle\"\n    put:\n      tags:\n        - Management\n      summary: Redefine the AE title of the Dicoogle archive\n      operationId: setAETitle\n      parameters:\n        - in: query\n          name: aetitle\n          description: a valid AE title for the PACS archive\n          required: true\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Success\"\n        \"400\":\n          description: Invalid supplied parameter\n  /plugins:\n    get:\n      tags:\n        - Management\n      summary: Retrieve the list of existing plugins\n      operationId: getPluginList\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  plugins:\n                    $ref: \"#/components/schemas/Plugins\"\n  /logger:\n    get:\n      tags:\n        - Misc\n      summary: Retrieve the Dicoogle server's log text\n      operationId: getLogText\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            text/plain:\n              schema:\n                type: string\n        \"400\":\n          description: Invalid supplied parameters\n  /index/task:\n    get:\n      tags:\n        - Index\n      summary: Get indexing tasks\n      operationId: getIndexTasks\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaskResults\"\n        \"400\":\n          description: Invalid supplied parameters\n    post:\n      tags:\n        - Index\n      summary: Change an indexing task\n      operationId: setIndexTask\n      parameters:\n        - in: query\n          name: type\n          description: the type of action to change the task\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: uid\n          description: \"\"\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful operation\n        \"400\":\n          description: Invalid supplied parameters\n  /export/cvs:\n    get:\n      tags:\n        - Misc\n      summary: Request a CSV file export of the results\n      operationId: exportCSV\n      parameters:\n        - in: query\n          name: query\n          description: the query to perform\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: fields\n          description:\n            a set of field names to be passed to the query providers when\n            requesting the query\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: providers\n          description: a set of query provider names\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: keyword\n          description: force whether the query is keyword-based\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Successful operation\n        \"400\":\n          description: Invalid supplied parameter\n  /export/list:\n    get:\n      tags:\n        - Misc\n      summary: Get a list of known valid DICOM fields\n      operationId: getValidDicomFields\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n  /management/settings/storage/dicom:\n    get:\n      tags:\n        - Management\n      summary: Get the currently associated remote servers\n      operationId: getAssociatedServers\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RemoteServers\"\n        \"400\":\n          description: Invalid supplied parameters\n    post:\n      tags:\n        - Management\n      summary: Associate or remove a remote server\n      operationId: setAssociatedServer\n      parameters:\n        - in: query\n          name: type\n          description: whether the server is being associated or removed\n          required: true\n          schema:\n            type: boolean\n        - in: query\n          name: ip\n          description: \"\"\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: aetitle\n          description: \"\"\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: port\n          description: \"\"\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  tasks:\n                    $ref: \"#/components/schemas/Tasks\"\n        \"400\":\n          description: Invalid supplied parameters\n  /ext/version:\n    get:\n      tags:\n        - Misc\n      summary: Retrieve the running Dicoogle version\n      operationId: getVersion\n      responses:\n        \"200\":\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Version\"\n        \"400\":\n          description: Invalid supplied parameters\ncomponents:\n  securitySchemes:\n    dicoogle_auth:\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: yourdicoogledomain/login\n          scopes:\n            user: perform operations as a regular user\n            admin: perform administration operations\n  schemas:\n    Success:\n      type: object\n      properties:\n        success:\n          type: boolean\n    User:\n      type: object\n      properties:\n        username:\n          type: string\n    Users:\n      type: array\n      items:\n        $ref: \"#/components/schemas/User\"\n    FullUser:\n      type: object\n      properties:\n        user:\n          type: string\n        admin:\n          type: boolean\n        roles:\n          $ref: \"#/components/schemas/ListOfStrings\"\n    Result:\n      type: object\n      properties:\n        uri:\n          type: string\n          format: uri\n          example: file:/1bf65303-88a6-4c7e-bbd3-95cd3d2901a7\n        fields:\n          type: object\n          properties:\n            PatientID:\n              type: string\n              example: 9850721e-27bf-4e8c-a9cd-00680c3c83d7\n            SeriesDate:\n              type: string\n              example: \"20150120\"\n            StudyDate:\n              type: string\n              example: \"20150120\"\n            PatientName:\n              type: string\n              example: e8344a6c-3385-497f-bf47-01a89914d572\n            StudyInstanceUID:\n              type: string\n              example: 0c69d902-6cb1-4df5-8d1b-c17051d96c9a\n            SOPInstanceUID:\n              type: string\n              example: bd6ac908-a061-4ed4-9083-5a5dfb12e7f4\n            Modality:\n              type: string\n              example: CT\n            SeriesInstanceUID:\n              type: string\n              example: fd76f30b-2ee2-46ad-ac40-856266e6a396\n    Results:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Result\"\n        elapsedTime:\n          type: integer\n          example: 559\n        numResults:\n          type: integer\n          example: 5\n    DIMResult:\n      type: object\n    DIMResults:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            $ref: \"#/components/schemas/DIMResult\"\n        elapsedTime:\n          type: integer\n          example: 5\n        numResults:\n          type: integer\n          example: 5\n    IndexSettings:\n      type: object\n      properties:\n        path:\n          type: string\n          example: /tmp\n        zip:\n          type: boolean\n          example: false\n        effort:\n          type: integer\n          example: false\n        thumbnail:\n          type: boolean\n          example: true\n        thumbnailSize:\n          type: integer\n          example: 64\n        watcher:\n          type: boolean\n          example: false\n    QuerySettings:\n      type: object\n      properties:\n        acceptTimeout:\n          type: integer\n          example: 60\n        connectionTimeout:\n          type: integer\n          example: 60\n        idleTimeout:\n          type: integer\n          example: 60\n        maxAssociations:\n          type: integer\n          example: 20\n        maxPduReceive:\n          type: integer\n          example: 16364\n        maxPduSend:\n          type: integer\n          example: 6364\n        responseTimeout:\n          type: integer\n          example: 0\n    Task:\n      type: object\n      properties:\n        canceled:\n          type: boolean\n          example: false\n        done:\n          type: boolean\n          example: false\n        name:\n          type: string\n          example: \"[lucene]index storage/\"\n        progress:\n          type: integer\n          example: 0\n        uid:\n          type: string\n          example: 5c5f36ec-a946-49db-b903-e815e2f08dee\n    Tasks:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Task\"\n    ServiceStatus:\n      type: object\n      properties:\n        isRunning:\n          type: boolean\n          example: true\n        port:\n          type: integer\n          example: 6666\n        autostart:\n          type: boolean\n          example: true\n    AETitle:\n      type: object\n      properties:\n        aetitle:\n          type: string\n    Plugin:\n      type: object\n      properties:\n        name:\n          type: string\n          example: lucene\n        type:\n          type: string\n          example: query\n        enabled:\n          type: boolean\n          example: true\n    Plugins:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Plugin\"\n    TaskResult:\n      type: object\n      properties:\n        uid:\n          type: string\n          example: 92b099fe-eea1-49bd-9a84-b3d0d6135c37\n        taskName:\n          type: string\n          example: \"[lucene]index\"\n        taskProgress:\n          type: number\n          example: 0.1\n        complete:\n          type: boolean\n          example: false\n        elapsedTime:\n          type: integer\n          example: 9\n        nIndexed:\n          type: integer\n          example: 3\n        nErrors:\n          type: integer\n          example: 0\n    TaskResults:\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            $ref: \"#/components/schemas/TaskResult\"\n        count:\n          type: integer\n    RemoteServer:\n      type: object\n      properties:\n        AETitle:\n          type: string\n        description:\n          type: string\n        ipAddrs:\n          type: string\n        isPublic:\n          type: boolean\n        port:\n          type: integer\n        public:\n          type: boolean\n    RemoteServers:\n      type: array\n      items:\n        $ref: \"#/components/schemas/RemoteServer\"\n    TransferSyntaxSettingsOption:\n      type: object\n      properties:\n        name:\n          type: string\n        value:\n          type: boolean\n    TransferSyntaxSettings:\n      type: object\n      properties:\n        uid:\n          type: string\n        sop_name:\n          type: string\n        options:\n          type: array\n          items:\n            $ref: \"#/components/schemas/TransferSyntaxSettingsOption\"\n    TransferSyntaxSettingsList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/TransferSyntaxSettings\"\n    Version:\n      type: object\n      properties:\n        version:\n          type: string\n    ListOfStrings:\n      type: array\n      items:\n        type: string\n",
			"canonicalURL": "/github.com/bioinformatics-ua/dicoogle@dc4ac0921264ae26082d2ce5cdc707e95f876cbb/-/blob/dicoogle_web_api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/bioinformatics-ua/dicoogle/blob/dc4ac0921264ae26082d2ce5cdc707e95f876cbb/dicoogle_web_api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/login\": at 1:9890: get: operation \"status\": at 1:9897: at 1:10074: security: parse security scheme \"dicoogle_auth\": at 1:4611: oauth2: at 1:4620: flow \"implicit\": at 1:4632: at 1:4652: \"authorizationUrl\" MUST be in the form of a URL: parse \"yourdicoogledomain/login\": invalid URI for request"
}