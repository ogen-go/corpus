{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/geoserver/geoserver"
		},
		"file": {
			"name": "styles.yaml",
			"size": 0,
			"path": "src/community/rest-openapi/openapi/src/main/resources/org/geoserver/rest/openapi/1.0.0/styles.yaml",
			"byteSize": 17597,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: GeoServer Styles\n  description: A style describes how a resource is symbolized or rendered by the Web Map Service.\n\nservers:\n  - url: http://localhost:8080/geoserver/rest\n  \nsecurity:\n  - basicAuth: []\n\ntags:\n  - name: styles\n    description: Styles API\n\npaths:\n  /styles:\n    get:\n      operationId: getStyles\n      tags:\n        - styles\n      summary: Get a list of styles\n      description: Displays a list of all styles on the server.\n      responses:\n        \"200\":\n          $ref: '#/components/responses/StyleList'\n    post:\n      operationId: createStyle\n      tags:\n        - styles\n      summary: Add a new style\n      description: \u003e\n        Adds a new style entry to the server.\n        Using POST with the `application/xml` or `application/json` content only adds the style info to the catalog and does not upload style content. PUT to `/styles/{style}` to upload the style in this case.\n        Use POST with a style file (`application/vnd.ogc.sld+xml` or `application/vnd.ogc.sld+xml` for SLD; additional style types are added by extensions) to generate a style info and upload the style all at once. Then seperately PUT the style info at `/styles/{style}` to make any desired changes to the generated catalog entry.\n        You can also use POST with a ZIP file to upload a SLD 1.0 (`application/vnd.ogc.sld+xml`) file and any associated icon files, and then separately PUT the style info at /styles/{style}. POST with a ZIP file does not support any other style types.\n      parameters:\n        - name: name\n          in: query\n          description: The name of the style. Used only when POSTing a style file or ZIP\n            bundle, to determine the name of the style in the catalog. Generated\n            from the filename if not provided.\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/StyleInfoPost\"\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/CreateStyleResponse\"\n\n  /styles/{style}:\n    parameters:\n      - name: style\n        in: path\n        required: true\n        description: Name of the style to retrieve.\n        schema:\n          type: string\n    get:\n      operationId: getStyle\n      tags:\n        - styles\n      summary: Retrieve a style\n      description: \u003e\n        Retrieves a single style. Used to both request the style info and the style defintion body, depending on the media type requested. The media\n        type can be specified either by using the \"Accept:\" header or by appending an extension to the endpoint. For example, a style info can be\n        requested in XML format using \"/styles/{style}.xml\" or \"Accept: application/xml\". (Also available: \"{style}.json\", \n        \"Accept: application/json\" \"{style}.html\", and \"Accept: text/html\").\n\n        The style definition body can be requested by either appending the file extension of the style file (e.g., \"{style}.sld\" or \"{style}.css\") or by specifying the correct media type for the style definition in the \"Accept\" header. Below are common style formats and the corresponding media types that can be used in the Accept header to request the style definition body.\n\n        - application/vnd.ogc.sld+xml for SLD 1.0.0 SLDs\n        - application/vnd.ogc.se+xml for SLD 1.1.0 SLDs\n        - application/vnd.geoserver.geocss+css for css styles\n        - application/vnd.geoserver.ysld+yaml for ysld styles\n        - application/vnd.geoserver.mbstyle+json for mb styles\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/StyleInfoResponse\"\n    put:\n      operationId: uploadStyle\n      tags:\n        - styles\n      summary: Modify a single style\n      description: Modifies a single style.\n        Use the \"Accept:\" header to specify format or append an extension to the endpoint (example `/styles/{style}.xml` for XML).\n        Using PUT with the `application/xml` or `application/json` content modifies the style info in the catalog and does not alter the style content.\n        Using PUT with any other format will modify the content of the style. You can also use PUT with a ZIP file to upload a SLD 1.0 (`application/vnd.ogc.sld+xml`) file and any associated icon files\n      parameters:\n        - name: raw\n          in: query\n          description: When set to \"true\", will forgo parsing and encoding of the uploaded\n            style content, and instead the style will be streamed directly to\n            the GeoServer configuration. Use this setting if the content and\n            formatting of the style is to be preserved exactly. May result in an\n            invalid and unusable style if the payload is malformed. Allowable\n            values are \"true\" or \"false\" (default). Only used when uploading a\n            style file.\n          required: false\n          schema:\n            type: boolean\n            default: false\n      requestBody:\n        $ref: \"#/components/requestBodies/StyleBody\"\n      responses:\n        \"200\":\n          description: OK\n        \"401\":\n          description: Unauthorized\n    delete:\n      operationId: deleteStyle\n      tags:\n        - styles\n      summary: Delete style\n      description: Deletes a style.\n      parameters:\n        - name: purge\n          in: query\n          required: false\n          description: Specifies whether the underlying file containing the style should be\n            deleted on disk.\n          schema:\n            type: boolean\n            default: false\n        - name: recurse\n          in: query\n          required: false\n          description: Removes references to the specified style in existing layers.\n          schema:\n            type: boolean\n            default: false\n      responses:\n        \"200\":\n          description: OK\n        \"401\":\n          description: Unauthorized\n\n  /workspaces/{workspace}/styles:\n    parameters:\n      - name: workspace\n        in: path\n        required: true\n        description: Name of workspace\n        schema:\n          type: string\n    get:\n      operationId: getStylesByWorkspace\n      tags:\n        - styles\n      summary: Get a list of styles in a given workspace\n      description: Displays a list of all styles in a given workspace. Use the \"Accept:\"\n        header to specify format or append an extension to the endpoint (example \"/workspaces/{workspace}/styles.xml\" for XML).\n      responses:\n        \"200\":\n          $ref: '#/components/responses/StyleList'\n    post:\n      operationId: createStyleByWorkspace\n      tags:\n        - styles\n      summary: Add a new style to a given workspace\n      description: Adds a new style entry to the server.\n        Using POST with the `application/xml` or `application/json` content only adds the style info to the catalog and does not upload style content. PUT to `/workspaces/{workspace}/styles/{style}` to upload the style in this case.\n        Use POST with a style file (`application/vnd.ogc.sld+xml` or `application/vnd.ogc.sld+xml` for SLD; additional style types are added by extensions) to generate a style info and upload the style all at once. Then seperately PUT the style info at `/workspaces/{workspace}/styles/{style}` to make any desired changes to the generated catalog entry.\n        You can also use POST with a ZIP file to upload a SLD 1.0 (`application/vnd.ogc.sld+xml`) file and any associated icon files, and then separately PUT the style info at /workspaces/{workspace}/styles/{style}. POST with a ZIP file does not support any other style types.\n      parameters:\n        - name: name\n          in: query\n          description: The name of the style. Used only when POSTing a style file or ZIP\n            bundle, to determine the name of the style in the catalog. Generated from the filename if not provided.\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/StyleInfoPost\"\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/CreateStyleResponse\"\n\n\n\n  /workspaces/{workspace}/styles/{style}:\n    parameters:\n      - name: workspace\n        in: path\n        required: true\n        description: Name of the workspace for style definitions\n        schema:\n          type: string\n      - name: style\n        in: path\n        required: true\n        description: Name of the style to retrieve.\n        schema:\n          type: string\n    get:\n      operationId: getStyleByWorkspace\n      tags:\n        - styles\n      summary: Retrieve a style from a given workspace\n      description: \u003e\n        Retrieves a single style. Used to both request the style info and the\n        style defintion body, depending on the media type requested. The media\n        type can be specified either by using the \"Accept:\" header or by\n        appending an extension to the endpoint. For example, a style info can be\n        requested in XML format using \"/styles/{style}.xml\" or \"Accept:\n        application/xml\". (Also available: \"{style}.json\", \"Accept:\n        application/json\" \"{style}.html\", and \"Accept: text/html\").\n\n        The style definition body can be requested by either appending the file extension of the style file (e.g., \"{style}.sld\" or \"{style}.css\") or by specifying the correct media type for the style definition in the \"Accept\" header. Below are common style formats and the corresponding media types that can be used in the Accept header to request the style definition body.\n        - application/vnd.ogc.sld+xml for SLD 1.0.0 SLDs\n        - application/vnd.ogc.se+xml for SLD 1.1.0 SLDs\n        - application/vnd.geoserver.geocss+css for css styles\n        - application/vnd.geoserver.ysld+yaml for ysld styles\n        - application/vnd.geoserver.mbstyle+json for mb styles\n      parameters:\n        - in: query\n          name: quietOnNotFound\n          required: false\n          schema:\n             type: boolean\n             default: true\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/StyleInfoResponse\"\n    put:\n      operationId: uploadStyleByWorkspace\n      tags:\n        - styles\n      summary: Modify a single style in a given workspace\n      description: \u003e\n        Modifies a single style in a given workspace.\n        Use the \"Accept:\" header to specify format or append an extension to the endpoint (example `/workspaces/{workspace}/styles/{style}.xml` for XML).\n        Using PUT with the `application/xml` or `application/json` content modifies the style info in the catalog and does not alter the style content.\n        Using PUT with any other format will modify the content of the style. You can also use PUT with a ZIP file to upload a SLD 1.0 (`application/vnd.ogc.sld+xml`) file and any associated icon files\n      parameters:\n        - name: raw\n          in: query\n          description: When set to \"true\", will forgo parsing and encoding of the uploaded\n            style content, and instead the style will be streamed directly to\n            the GeoServer configuration. Use this setting if the content and\n            formatting of the style is to be preserved exactly. May result in an\n            invalid and unusable style if the payload is malformed. Allowable\n            values are \"true\" or \"false\" (default). Only used when uploading a\n            style file.\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        $ref: \"#/components/requestBodies/StyleBody\"\n      responses:\n        \"200\":\n          description: OK\n        \"401\":\n          description: Unauthorized\n    delete:\n      operationId: deleteStyleByWorkspace\n      tags:\n        - styles\n      summary: Delete style in a given workspace\n      description: Deletes a style in a given workspace.\n      parameters:\n        - name: purge\n          in: query\n          required: false\n          description: Specifies whether the underlying file containing the style should be\n            deleted on disk.\n          schema:\n            type: boolean\n            default: false\n        - name: recurse\n          in: query\n          required: false\n          description: Removes references to the specified style in existing layers.\n          schema:\n            type: boolean\n            default: false\n      responses:\n        \"200\":\n          description: OK\n        \"401\":\n          description: Unauthorized\n\n  /layers/{layer}/styles:\n    parameters:\n      - name: layer\n        in: path\n        required: true\n        description: Name of the layer to manage styles for\n        schema:\n          type: string\n    get:\n      operationId: getStylesByLayer\n      tags:\n        - styles\n      summary: Get a list of layer alternate styles\n      description: Displays a list of all alternate styles for a given layer. Use the\n        \"Accept:\" header to specify format or append an extension to the endpoint (example \"/layers/{layer}/styles.xml\" for XML).\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/StyleList\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StyleList\"\n              examples:\n                response:\n                  value: \u003e\n                    {\n                      \"styles\": {\n                        \"style\": [\n                          {\n                            \"name\": \"pophatch\",\n                            \"href\": \"http://localhost:8080/geoserver/rest/layers/topp:states/styles/pophatch.json\"\n                          },\n                          {\n                            \"name\": \"polygon\",\n                            \"href\": \"http://localhost:8080/geoserver/rest/layers/topp:states/styles/polygon.json\"\n                          }\n                        ]\n                      }\n                    }\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/StyleList\"\n    post:\n      operationId: addStyleToLayer\n      tags:\n        - styles\n      summary: Add a new style\n      description: Adds a new style entry to the layer. The style named in styleBody must\n        alread exist, and will not be altered by this request.\n      parameters:\n        - name: default\n          in: query\n          description: Whether to make this the default style for the layer.\n          required: false\n          schema:\n            type: boolean\n            default: false\n      requestBody:\n        content:\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/StyleInfoPost\"\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/StyleInfoPost\"\n        description: Style body information naming an existing style to add to the layer\n        required: true\n      responses:\n        \"201\":\n          description: Created\n\ncomponents:\n  securitySchemes:\n    basicAuth:     # \u003c-- arbitrary name for the security scheme\n      type: http\n      scheme: basic\n\n  requestBodies:\n    StyleInfoPost:\n      required: true\n      description: The StyleInfo body of a request.\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/StyleInfoWrapper\"\n        application/zip:\n          schema:\n            type: string\n            format: binary\n\n    StyleBody:\n      required: true\n      description: The style body of a request.\n      content:\n        application/vnd.geoserver.mbstyle+json:\n          schema:\n            type: string\n            format: binary\n        application/vnd.ogc.sld+xml:\n          schema:\n            type: string\n            format: binary\n        application/vnd.ogc.se+xml:\n          schema:\n            type: string\n            format: binary\n      \n  responses:\n    CreateStyleResponse:\n      description: Created, returns the name of the style in plain text\n      content:\n        text/plain:\n          schema:\n            type: string\n    \n    StyleList:\n      description: List of style references\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/StyleListWrapper\"\n    StyleInfoResponse:\n      description: List of style references\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/StyleInfoWrapper\"\n        application/xml:\n          schema:\n            type: string\n        application/vnd.ogc.sld+xml:\n          schema:\n            type: string\n        application/vnd.ogc.se+xml:\n          schema:\n            type: string\n        text/html:\n          schema:\n            type: string\n\n  schemas:\n    StyleInfoPost:\n      title: style\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of style\n          example: roads_style\n        filename:\n          type: string\n          description: Name of filename containing SLD code\n          example: roads.sld\n    StyleListWrapper:\n      type: object\n      properties:\n        styles:\n          $ref: \"#/components/schemas/StyleList\"\n      example:\n        styles:\n         style:\n           - href: http://localhost:8080/geoserver/rest/styles/burg.json\n             name: burg\n           - href: http://localhost:8080/geoserver/rest/styles/capitals.json\n             name: capitals\n    StyleInfoWrapper:\n      type: object\n      properties:\n        style:\n          $ref: \"catalog.yaml#/components/schemas/StyleInfo\"\n        \n    StyleList:\n      type: object\n      properties:\n        style:\n          $ref: \"catalogresponses.yaml#/components/schemas/NamedLinks\"\n",
			"canonicalURL": "/github.com/geoserver/geoserver@bb7e444e656dc4c5ffa82d7092c0130cb3d2a395/-/blob/src/community/rest-openapi/openapi/src/main/resources/org/geoserver/rest/openapi/1.0.0/styles.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/geoserver/geoserver/blob/bb7e444e656dc4c5ffa82d7092c0130cb3d2a395/src/community/rest-openapi/openapi/src/main/resources/org/geoserver/rest/openapi/1.0.0/styles.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: schemas: \"StyleInfoWrapper\": parse schema: property \"style\": at 1:1568: parse schema: resolve \"catalog.yaml#/components/schemas/StyleInfo\": external \"catalog.yaml\": get: file: local file reference is not allowed"
}