{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/medusajs/medusa"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "docs/api/store/openapi.yaml",
			"byteSize": 6485,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: Medusa Storefront API\n  description: \u003e\n    API reference for Medusa's Storefront endpoints. All endpoints are prefixed\n    with `/store`.\n\n\n    ## Authentication\n\n\n    To send requests as an authenticated customer, you must use the Cookie\n    Session ID.\n\n\n    \u003c!-- ReDoc-Inject: \u003cSecurityDefinitions\u003e --\u003e\n  license:\n    name: MIT\n    url: https://github.com/medusajs/medusa/blob/master/LICENSE\ntags:\n  - name: Auth\n    description: \u003e-\n      Auth endpoints that allow authorization of customers and manages their\n      sessions.\n  - name: Cart\n    description: Cart endpoints that allow handling carts in Medusa.\n    x-resourceId: cart\n  - name: Collection\n    description: Collection endpoints that allow handling collections in Medusa.\n    x-resourceId: product_collection\n  - name: Customer\n    description: Customer endpoints that allow handling customers in Medusa.\n    x-resourceId: customer\n  - name: Gift Card\n    description: Gift Card endpoints that allow handling gift cards in Medusa.\n    x-resourceId: gift_card\n  - name: Order\n    description: Order endpoints that allow handling orders in Medusa.\n    x-resourceId: order\n  - name: Product\n    description: Product endpoints that allow handling products in Medusa.\n    x-resourceId: product\n  - name: Product Variant\n    description: Product Variant endpoints that allow handling product variants in Medusa.\n    x-resourceId: product_variant\n  - name: Region\n    description: Region endpoints that allow handling regions in Medusa.\n    x-resourceId: region\n  - name: Return Reason\n    description: Return Reason endpoints that allow handling return reasons in Medusa.\n    x-resourceId: return_reason\n  - name: Return\n    description: Return endpoints that allow handling returns in Medusa.\n    x-resourceId: return\n  - name: Shipping Option\n    description: Shipping Option endpoints that allow handling shipping options in Medusa.\n    x-resourceId: shipping_option\n  - name: Swap\n    description: Swap endpoints that allow handling swaps in Medusa.\n    x-resourceId: swap\nservers:\n  - url: https://api.medusa-commerce.com/store\npaths:\n  /auth:\n    $ref: paths/auth.yaml\n  /auth/{email}:\n    $ref: paths/auth_{email}.yaml\n  /carts/{id}/shipping-methods:\n    $ref: paths/carts_{id}_shipping-methods.yaml\n  /carts/{id}/taxes:\n    $ref: paths/carts_{id}_taxes.yaml\n  /carts/{id}/complete:\n    $ref: paths/carts_{id}_complete.yaml\n  /carts:\n    $ref: paths/carts.yaml\n  /carts/{id}/line-items:\n    $ref: paths/carts_{id}_line-items.yaml\n  /carts/{id}/payment-sessions:\n    $ref: paths/carts_{id}_payment-sessions.yaml\n  /carts/{id}/discounts/{code}:\n    $ref: paths/carts_{id}_discounts_{code}.yaml\n  /carts/{id}/line-items/{line_id}:\n    $ref: paths/carts_{id}_line-items_{line_id}.yaml\n  /carts/{id}/payment-sessions/{provider_id}:\n    $ref: paths/carts_{id}_payment-sessions_{provider_id}.yaml\n  /carts/{id}:\n    $ref: paths/carts_{id}.yaml\n  /carts/{id}/payment-sessions/{provider_id}/refresh:\n    $ref: paths/carts_{id}_payment-sessions_{provider_id}_refresh.yaml\n  /carts/{id}/payment-session:\n    $ref: paths/carts_{id}_payment-session.yaml\n  /collections/{id}:\n    $ref: paths/collections_{id}.yaml\n  /collections:\n    $ref: paths/collections.yaml\n  /customers/me/addresses:\n    $ref: paths/customers_me_addresses.yaml\n  /customers:\n    $ref: paths/customers.yaml\n  /customers/me/addresses/{address_id}:\n    $ref: paths/customers_me_addresses_{address_id}.yaml\n  /customers/me:\n    $ref: paths/customers_me.yaml\n  /customers/me/payment-methods:\n    $ref: paths/customers_me_payment-methods.yaml\n  /customers/me/orders:\n    $ref: paths/customers_me_orders.yaml\n  /customers/password-token:\n    $ref: paths/customers_password-token.yaml\n  /customers/password-reset:\n    $ref: paths/customers_password-reset.yaml\n  /gift-cards/{code}:\n    $ref: paths/gift-cards_{code}.yaml\n  /orders/cart/{cart_id}:\n    $ref: paths/orders_cart_{cart_id}.yaml\n  /orders/{id}:\n    $ref: paths/orders_{id}.yaml\n  /orders:\n    $ref: paths/orders.yaml\n  /products/{id}:\n    $ref: paths/products_{id}.yaml\n  /products:\n    $ref: paths/products.yaml\n  /products/search:\n    $ref: paths/products_search.yaml\n  /regions/{id}:\n    $ref: paths/regions_{id}.yaml\n  /regions:\n    $ref: paths/regions.yaml\n  /return-reasons/{id}:\n    $ref: paths/return-reasons_{id}.yaml\n  /return-reasons:\n    $ref: paths/return-reasons.yaml\n  /returns:\n    $ref: paths/returns.yaml\n  /shipping-options:\n    $ref: paths/shipping-options.yaml\n  /shipping-options/{cart_id}:\n    $ref: paths/shipping-options_{cart_id}.yaml\n  /swaps:\n    $ref: paths/swaps.yaml\n  /swaps/{cart_id}:\n    $ref: paths/swaps_{cart_id}.yaml\n  /variants/{variant_id}:\n    $ref: paths/variants_{variant_id}.yaml\n  /variants:\n    $ref: paths/variants.yaml\ncomponents:\n  securitySchemes:\n    cookie_auth:\n      type: apiKey\n      x-displayName: Cookie Session ID\n      in: cookie\n      name: connect.sid\n      description: \u003e\n        Use a cookie session to send authenticated requests.\n\n\n        ### How to Obtain the Cookie Session\n\n\n        If you're sending requests through a browser, using JS Client, or using\n        tools like Postman, the cookie session should be automatically set when\n        the customer is logged in.\n\n\n        If you're sending requests using cURL, you must set the Session ID in\n        the cookie manually.\n\n\n        To do that, send a request to [authenticate the\n        customer](#tag/Auth/operation/PostAuth) and pass the cURL option `-v`:\n\n\n        ```bash\n\n        curl -v --location --request POST 'https://medusa-url.com/store/auth' \\\n\n        --header 'Content-Type: application/json' \\\n\n        --data-raw '{\n          \"email\": \"user@example.com\",\n          \"password\": \"supersecret\"\n        }'\n\n        ```\n\n\n        The headers will be logged in the terminal as well as the response. You\n        should find in the headers a Cookie header similar to this:\n\n\n        ```bash\n\n        Set-Cookie:\n        connect.sid=s%3A2Bu8BkaP9JUfHu9rG59G16Ma0QZf6Gj1.WT549XqX37PN8n0OecqnMCq798eLjZC5IT7yiDCBHPM;\n\n        ```\n\n\n        Copy the value after `connect.sid` (without the `;` at the end) and pass\n        it as a cookie in subsequent requests as the following:\n\n\n        ```bash\n\n        curl --location --request GET\n        'https://medusa-url.com/store/customers/me/orders' \\\n\n        --header 'Cookie: connect.sid={sid}'\n\n        ```\n\n\n        Where `{sid}` is the value of `connect.sid` that you copied.\n",
			"canonicalURL": "/github.com/medusajs/medusa@f32804a43c62a47f1930eb28cb73b6f3dbc3447e/-/blob/docs/api/store/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/medusajs/medusa/blob/f32804a43c62a47f1930eb28cb73b6f3dbc3447e/docs/api/store/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/auth\": at 1:1932: external \"paths/auth.yaml\": get: file: local file reference is not allowed"
}