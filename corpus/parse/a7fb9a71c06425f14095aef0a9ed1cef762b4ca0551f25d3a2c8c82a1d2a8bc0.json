{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "amazonaws.com-sts-2011-06-15-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/amazonaws.com-sts-2011-06-15-swagger.yaml",
			"byteSize": 194867,
			"content": "openapi: 3.0.0\ninfo:\n  version: 2011-06-15\n  x-release: v4\n  title: AWS Security Token Service\n  description: <fullname>AWS Security Token Service</fullname> <p>The AWS Security Token\n    Service (STS) is a web service that enables you to request temporary,\n    limited-privilege credentials for AWS Identity and Access Management (IAM)\n    users or for users that you authenticate (federated users). This guide\n    provides descriptions of the STS API. For more detailed information about\n    using this service, go to <a\n    href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html\">Temporary\n    Security Credentials</a>. </p> <p>For information about setting up\n    signatures and authorization through the API, go to <a\n    href=\"https://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html\">Signing\n    AWS API Requests</a> in the <i>AWS General Reference</i>. For general\n    information about the Query API, go to <a\n    href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html\">Making\n    Query Requests</a> in <i>Using IAM</i>. For information about using security\n    tokens with other AWS products, go to <a\n    href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-services-that-work-with-iam.html\">AWS\n    Services That Work with IAM</a> in the <i>IAM User Guide</i>. </p> <p>If\n    you're new to AWS and need additional technical information about a specific\n    AWS product, you can find the product's technical documentation at <a\n    href=\"http://aws.amazon.com/documentation/\">http://aws.amazon.com/documentation/</a>.\n    </p> <p> <b>Endpoints</b> </p> <p>By default, AWS Security Token Service\n    (STS) is available as a global service, and all AWS STS requests go to a\n    single endpoint at <code>https://sts.amazonaws.com</code>. Global requests\n    map to the US East (N. Virginia) region. AWS recommends using Regional AWS\n    STS endpoints instead of the global endpoint to reduce latency, build in\n    redundancy, and increase session token validity. For more information, see\n    <a\n    href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_enable-regions.html\">Managing\n    AWS STS in an AWS Region</a> in the <i>IAM User Guide</i>.</p> <p>Most AWS\n    Regions are enabled for operations in all AWS services by default. Those\n    Regions are automatically activated for use with AWS STS. Some Regions, such\n    as Asia Pacific (Hong Kong), must be manually enabled. To learn more about\n    enabling and disabling AWS Regions, see <a\n    href=\"https://docs.aws.amazon.com/general/latest/gr/rande-manage.html\">Managing\n    AWS Regions</a> in the <i>AWS General Reference</i>. When you enable these\n    AWS Regions, they are automatically activated for use with AWS STS. You\n    cannot activate the STS endpoint for a Region that is disabled. Tokens that\n    are valid in all AWS Regions are longer than tokens that are valid in\n    Regions that are enabled by default. Changing this setting might affect\n    existing systems where you temporarily store tokens. For more information,\n    see <a\n    href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_enable-regions.html#sts-regions-manage-tokens\">Managing\n    Global Endpoint Session Tokens</a> in the <i>IAM User Guide</i>.</p>\n    <p>After you activate a Region for use with AWS STS, you can direct AWS STS\n    API calls to that Region. AWS STS recommends that you provide both the\n    Region and endpoint when you make calls to a Regional endpoint. You can\n    provide the Region alone for manually enabled Regions, such as Asia Pacific\n    (Hong Kong). In this case, the calls are directed to the STS Regional\n    endpoint. However, if you provide the Region alone for Regions enabled by\n    default, the calls are directed to the global endpoint of\n    <code>https://sts.amazonaws.com</code>.</p> <p>To view the list of AWS STS\n    endpoints and whether they are active by default, see <a\n    href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_enable-regions.html#id_credentials_temp_enable-regions_writing_code\">Writing\n    Code to Use AWS STS Regions</a> in the <i>IAM User Guide</i>.</p> <p>\n    <b>Recording API requests</b> </p> <p>STS supports AWS CloudTrail, which is\n    a service that records AWS calls for your AWS account and delivers log files\n    to an Amazon S3 bucket. By using information collected by CloudTrail, you\n    can determine what requests were successfully made to STS, who made the\n    request, when it was made, and so on.</p> <p>If you activate AWS STS\n    endpoints in Regions other than the default global endpoint, then you must\n    also turn on CloudTrail logging in those Regions. This is necessary to\n    record any AWS STS API calls that are made in those Regions. For more\n    information, see <a\n    href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/aggregating_logs_regions_turn_on_ct.html\">Turning\n    On CloudTrail in Additional Regions</a> in the <i>AWS CloudTrail User\n    Guide</i>.</p> <p>AWS Security Token Service (STS) is a global service with\n    a single endpoint at <code>https://sts.amazonaws.com</code>. Calls to this\n    endpoint are logged as calls to a global service. However, because this\n    endpoint is physically located in the US East (N. Virginia) Region, your\n    logs list <code>us-east-1</code> as the event Region. CloudTrail does not\n    write these logs to the US East (Ohio) Region unless you choose to include\n    global service logs in that Region. CloudTrail writes calls to all Regional\n    endpoints to their respective Regions. For example, calls to\n    sts.us-east-2.amazonaws.com are published to the US East (Ohio) Region and\n    calls to sts.eu-central-1.amazonaws.com are published to the EU (Frankfurt)\n    Region.</p> <p>To learn more about CloudTrail, including how to turn it on\n    and find your log files, see the <a\n    href=\"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/what_is_cloud_trail_top_level.html\">AWS\n    CloudTrail User Guide</a>.</p>\n  x-logo:\n    url: https://twitter.com/awscloud/profile_image?size=original\n    backgroundColor: \"#FFFFFF\"\n  termsOfService: https://aws.amazon.com/service-terms/\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: https://github.com/mermade/aws2openapi\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: http://www.apache.org/licenses/\n  x-providerName: amazonaws.com\n  x-serviceName: sts\n  x-origin:\n    - contentType: application/json\n      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/sts-2011-06-15.normal.json\n      converter:\n        url: https://github.com/mermade/aws2openapi\n        version: 1.0.0\n      x-apisguru-direct: true\n  x-apiClientRegistration:\n    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: https://docs.aws.amazon.com/sts/\nx-hasEquivalentPaths: true\nsecurity:\n  - hmac: []\npaths:\n  /#Action=AssumeRole:\n    get:\n      x-aws-operation-name: AssumeRole\n      operationId: GET AssumeRole\n      description: \"<p>Returns a set of temporary security credentials that you can use to\n        access AWS resources that you might not normally have access to. These\n        temporary credentials consist of an access key ID, a secret access key,\n        and a security token. Typically, you use <code>AssumeRole</code> within\n        your account or for cross-account access. For a comparison of\n        <code>AssumeRole</code> with other API operations that produce temporary\n        credentials, see <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_\\\n        temp_request.html\\\">Requesting Temporary Security Credentials</a> and <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_\\\n        temp_request.html#stsapi_comparison\\\">Comparing the AWS STS API\n        operations</a> in the <i>IAM User Guide</i>.</p> <important> <p>You\n        cannot use AWS account root user credentials to call\n        <code>AssumeRole</code>. You must use credentials for an IAM user or an\n        IAM role to call <code>AssumeRole</code>.</p> </important> <p>For\n        cross-account access, imagine that you own multiple accounts and need to\n        access resources in each account. You could create long-term credentials\n        in each account to access those resources. However, managing all those\n        credentials and remembering which one can access which account can be\n        time consuming. Instead, you can create one set of long-term credentials\n        in one account. Then use temporary security credentials to access all\n        the other accounts by assuming roles in those accounts. For more\n        information about roles, see <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html\\\"\\\n        >IAM Roles</a> in the <i>IAM User Guide</i>. </p> <p>By default, the\n        temporary security credentials created by <code>AssumeRole</code> last\n        for one hour. However, you can use the optional\n        <code>DurationSeconds</code> parameter to specify the duration of your\n        session. You can provide a value from 900 seconds (15 minutes) up to the\n        maximum session duration setting for the role. This setting can have a\n        value from 1 hour to 12 hours. To learn how to view the maximum value\n        for your role, see <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.ht\\\n        ml#id_roles_use_view-role-max-session\\\">View the Maximum Session\n        Duration Setting for a Role</a> in the <i>IAM User Guide</i>. The\n        maximum session duration limit applies when you use the\n        <code>AssumeRole*</code> API operations or the <code>assume-role*</code>\n        CLI commands. However the limit does not apply when you use those\n        operations to create a console URL. For more information, see <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.ht\\\n        ml\\\">Using IAM Roles</a> in the <i>IAM User Guide</i>.</p> <p>The\n        temporary security credentials created by <code>AssumeRole</code> can be\n        used to make API calls to any AWS service with the following exception:\n        You cannot call the AWS STS <code>GetFederationToken</code> or\n        <code>GetSessionToken</code> API operations.</p> <p>(Optional) You can\n        pass inline or managed <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies\\\n        .html#policies_session\\\">session policies</a> to this operation. You can\n        pass a single JSON policy document to use as an inline session policy.\n        You can also specify up to 10 managed policies to use as managed session\n        policies. The plain text that you use for both inline and managed\n        session policies shouldn't exceed 2048 characters. Passing policies to\n        this operation returns new temporary credentials. The resulting\n        session's permissions are the intersection of the role's identity-based\n        policy and the session policies. You can use the role's temporary\n        credentials in subsequent AWS API calls to access resources in the\n        account that owns the role. You cannot use session policies to grant\n        more permissions than those allowed by the identity-based policy of the\n        role that is being assumed. For more information, see <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies\\\n        .html#policies_session\\\">Session Policies</a> in the <i>IAM User\n        Guide</i>.</p> <p>To assume a role from a different account, your AWS\n        account must be trusted by the role. The trust relationship is defined\n        in the role's trust policy when the role is created. That trust policy\n        states which accounts are allowed to delegate that access to users in\n        the account. </p> <p>A user who wants to access a role in a different\n        account must also have permissions that are delegated from the user\n        account administrator. The administrator must attach a policy that\n        allows the user to call <code>AssumeRole</code> for the ARN of the role\n        in the other account. If the user is in the same account as the role,\n        then you can do either of the following:</p> <ul> <li> <p>Attach a\n        policy to the user (identical to the previous user in a different\n        account).</p> </li> <li> <p>Add the user as a principal directly in the\n        role's trust policy.</p> </li> </ul> <p>In this case, the trust policy\n        acts as an IAM resource-based policy. Users in the same account as the\n        role do not need explicit permission to assume the role. For more\n        information about trust policies and resource-based policies, see <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies\\\n        .html\\\">IAM Policies</a> in the <i>IAM User Guide</i>.</p> <p> <b>Using\n        MFA with AssumeRole</b> </p> <p>(Optional) You can include multi-factor\n        authentication (MFA) information when you call <code>AssumeRole</code>.\n        This is useful for cross-account scenarios to ensure that the user that\n        assumes the role has been authenticated with an AWS MFA device. In that\n        scenario, the trust policy of the role being assumed includes a\n        condition that tests for MFA authentication. If the caller does not\n        include valid MFA information, the request to assume the role is denied.\n        The condition in a trust policy that tests for MFA authentication might\n        look like the following example.</p> <p> <code>\\\"Condition\\\": {\\\"Bool\\\":\n        {\\\"aws:MultiFactorAuthPresent\\\": true}}</code> </p> <p>For more\n        information, see <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/MFAProtectedAPI\\\n        .html\\\">Configuring MFA-Protected API Access</a> in the <i>IAM User\n        Guide</i> guide.</p> <p>To use MFA with <code>AssumeRole</code>, you\n        pass values for the <code>SerialNumber</code> and <code>TokenCode</code>\n        parameters. The <code>SerialNumber</code> value identifies the user's\n        hardware or virtual MFA device. The <code>TokenCode</code> is the\n        time-based one-time password (TOTP) that the MFA device produces. </p>\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/AssumeRoleResponse\"\n        \"480\":\n          description: MalformedPolicyDocumentException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/MalformedPolicyDocumentException\"\n        \"481\":\n          description: PackedPolicyTooLargeException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PackedPolicyTooLargeException\"\n        \"482\":\n          description: RegionDisabledException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/RegionDisabledException\"\n      parameters:\n        - name: RoleArn\n          in: query\n          required: true\n          description: The Amazon Resource Name (ARN) of the role to assume.\n          schema:\n            type: string\n            minLength: 20\n            maxLength: 2048\n            pattern: \"[\\\\u0009\\\\u000A\\\\u000D\\\\u0020-\\\\u007E\\\\u0085\\\\u00A0-\\\\uD7FF\\\\uE0\\\n              00-\\\\uFFFD\\\\u10000-\\\\u10FFFF]+\"\n        - name: RoleSessionName\n          in: query\n          required: true\n          description: \"<p>An identifier for the assumed role session.</p> <p>Use the role\n            session name to uniquely identify a session when the same role is\n            assumed by different principals or for different reasons. In\n            cross-account scenarios, the role session name is visible to, and\n            can be logged by the account that owns the role. The role session\n            name is also used in the ARN of the assumed role principal. This\n            means that subsequent cross-account API requests that use the\n            temporary security credentials will expose the role session name to\n            the external account in their AWS CloudTrail logs.</p> <p>The regex\n            used to validate this parameter is a string of characters consisting\n            of upper- and lower-case alphanumeric characters with no spaces. You\n            can also include underscores or any of the following characters:\n            =,.@-</p>\"\n          schema:\n            type: string\n            minLength: 2\n            maxLength: 64\n            pattern: \"[\\\\w+=,.@-]*\"\n        - name: PolicyArns\n          in: query\n          required: false\n          description: <p>The Amazon Resource Names (ARNs) of the IAM managed policies that\n            you want to use as managed session policies. The policies must exist\n            in the same account as the role.</p> <p>This parameter is optional.\n            You can provide up to 10 managed policy ARNs. However, the plain\n            text that you use for both inline and managed session policies\n            shouldn't exceed 2048 characters. For more information about ARNs,\n            see <a\n            href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\n            Resource Names (ARNs) and AWS Service Namespaces</a> in the AWS\n            General Reference.</p> <note> <p>The characters in this parameter\n            count towards the 2048 character session policy guideline. However,\n            an AWS conversion compresses the session policies into a packed\n            binary format that has a separate limit. This is the enforced limit.\n            The <code>PackedPolicySize</code> response element indicates by\n            percentage how close the policy is to the upper size limit.</p>\n            </note> <p>Passing policies to this operation returns new temporary\n            credentials. The resulting session's permissions are the\n            intersection of the role's identity-based policy and the session\n            policies. You can use the role's temporary credentials in subsequent\n            AWS API calls to access resources in the account that owns the role.\n            You cannot use session policies to grant more permissions than those\n            allowed by the identity-based policy of the role that is being\n            assumed. For more information, see <a\n            href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">Session\n            Policies</a> in the <i>IAM User Guide</i>.</p>\n          schema:\n            type: array\n            items:\n              type: string\n        - name: Policy\n          in: query\n          required: false\n          description: <p>An IAM policy in JSON format that you want to use as an inline\n            session policy.</p> <p>This parameter is optional. Passing policies\n            to this operation returns new temporary credentials. The resulting\n            session's permissions are the intersection of the role's\n            identity-based policy and the session policies. You can use the\n            role's temporary credentials in subsequent AWS API calls to access\n            resources in the account that owns the role. You cannot use session\n            policies to grant more permissions than those allowed by the\n            identity-based policy of the role that is being assumed. For more\n            information, see <a\n            href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">Session\n            Policies</a> in the <i>IAM User Guide</i>.</p> <p>The plain text\n            that you use for both inline and managed session policies shouldn't\n            exceed 2048 characters. The JSON policy characters can be any ASCII\n            character from the space character to the end of the valid character\n            list (\\u0020 through \\u00FF). It can also include the tab (\\u0009),\n            linefeed (\\u000A), and carriage return (\\u000D) characters.</p>\n            <note> <p>The characters in this parameter count towards the 2048\n            character session policy guideline. However, an AWS conversion\n            compresses the session policies into a packed binary format that has\n            a separate limit. This is the enforced limit. The\n            <code>PackedPolicySize</code> response element indicates by\n            percentage how close the policy is to the upper size limit.</p>\n            </note>\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 2048\n            pattern: \"[\\\\u0009\\\\u000A\\\\u000D\\\\u0020-\\\\u00FF]+\"\n        - name: DurationSeconds\n          in: query\n          required: false\n          description: <p>The duration, in seconds, of the role session. The value can\n            range from 900 seconds (15 minutes) up to the maximum session\n            duration setting for the role. This setting can have a value from 1\n            hour to 12 hours. If you specify a value higher than this setting,\n            the operation fails. For example, if you specify a session duration\n            of 12 hours, but your administrator set the maximum session duration\n            to 6 hours, your operation fails. To learn how to view the maximum\n            value for your role, see <a\n            href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html#id_roles_use_view-role-max-session\">View\n            the Maximum Session Duration Setting for a Role</a> in the <i>IAM\n            User Guide</i>.</p> <p>By default, the value is set to\n            <code>3600</code> seconds. </p> <note> <p>The\n            <code>DurationSeconds</code> parameter is separate from the duration\n            of a console session that you might request using the returned\n            credentials. The request to the federation endpoint for a console\n            sign-in token takes a <code>SessionDuration</code> parameter that\n            specifies the maximum length of the console session. For more\n            information, see <a\n            href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_enable-console-custom-url.html\">Creating\n            a URL that Enables Federated Users to Access the AWS Management\n            Console</a> in the <i>IAM User Guide</i>.</p> </note>\n          schema:\n            type: integer\n            minimum: 900\n            maximum: 43200\n        - name: ExternalId\n          in: query\n          required: false\n          description: '<p>A unique identifier that might be required when you assume a\n            role in another account. If the administrator of the account to\n            which the role belongs provided you with an external ID, then\n            provide that value in the <code>ExternalId</code> parameter. This\n            value can be any string, such as a passphrase or account number. A\n            cross-account role is usually set up to trust everyone in an\n            account. Therefore, the administrator of the trusting account might\n            send an external ID to the administrator of the trusted account.\n            That way, only someone with the ID can assume the role, rather than\n            everyone in the account. For more information about the external ID,\n            see <a\n            href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html\">How\n            to Use an External ID When Granting Access to Your AWS Resources to\n            a Third Party</a> in the <i>IAM User Guide</i>.</p> <p>The regex\n            used to validate this parameter is a string of characters consisting\n            of upper- and lower-case alphanumeric characters with no spaces. You\n            can also include underscores or any of the following characters:\n            =,.@:/-</p>'\n          schema:\n            type: string\n            minLength: 2\n            maxLength: 1224\n            pattern: \"[\\\\w+=,.@:\\\\/-]*\"\n        - name: SerialNumber\n          in: query\n          required: false\n          description: \"<p>The identification number of the MFA device that is associated\n            with the user who is making the <code>AssumeRole</code> call.\n            Specify this value if the trust policy of the role being assumed\n            includes a condition that requires MFA authentication. The value is\n            either the serial number for a hardware device (such as\n            <code>GAHT12345678</code>) or an Amazon Resource Name (ARN) for a\n            virtual device (such as\n            <code>arn:aws:iam::123456789012:mfa/user</code>).</p> <p>The regex\n            used to validate this parameter is a string of characters consisting\n            of upper- and lower-case alphanumeric characters with no spaces. You\n            can also include underscores or any of the following characters:\n            =,.@-</p>\"\n          schema:\n            type: string\n            minLength: 9\n            maxLength: 256\n            pattern: \"[\\\\w+=/:,.@-]*\"\n        - name: TokenCode\n          in: query\n          required: false\n          description: <p>The value provided by the MFA device, if the trust policy of the\n            role being assumed requires MFA (that is, if the policy includes a\n            condition that tests for MFA). If the role being assumed requires\n            MFA and if the <code>TokenCode</code> value is missing or expired,\n            the <code>AssumeRole</code> call returns an \"access denied\"\n            error.</p> <p>The format for this parameter, as described by its\n            regex pattern, is a sequence of six numeric digits.</p>\n          schema:\n            type: string\n            minLength: 6\n            maxLength: 6\n            pattern: \"[\\\\d]*\"\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - AssumeRole\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2011-06-15\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      x-aws-operation-name: AssumeRole\n      operationId: POST AssumeRole\n      description: \"<p>Returns a set of temporary security credentials that you can use to\n        access AWS resources that you might not normally have access to. These\n        temporary credentials consist of an access key ID, a secret access key,\n        and a security token. Typically, you use <code>AssumeRole</code> within\n        your account or for cross-account access. For a comparison of\n        <code>AssumeRole</code> with other API operations that produce temporary\n        credentials, see <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_\\\n        temp_request.html\\\">Requesting Temporary Security Credentials</a> and <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_\\\n        temp_request.html#stsapi_comparison\\\">Comparing the AWS STS API\n        operations</a> in the <i>IAM User Guide</i>.</p> <important> <p>You\n        cannot use AWS account root user credentials to call\n        <code>AssumeRole</code>. You must use credentials for an IAM user or an\n        IAM role to call <code>AssumeRole</code>.</p> </important> <p>For\n        cross-account access, imagine that you own multiple accounts and need to\n        access resources in each account. You could create long-term credentials\n        in each account to access those resources. However, managing all those\n        credentials and remembering which one can access which account can be\n        time consuming. Instead, you can create one set of long-term credentials\n        in one account. Then use temporary security credentials to access all\n        the other accounts by assuming roles in those accounts. For more\n        information about roles, see <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html\\\"\\\n        >IAM Roles</a> in the <i>IAM User Guide</i>. </p> <p>By default, the\n        temporary security credentials created by <code>AssumeRole</code> last\n        for one hour. However, you can use the optional\n        <code>DurationSeconds</code> parameter to specify the duration of your\n        session. You can provide a value from 900 seconds (15 minutes) up to the\n        maximum session duration setting for the role. This setting can have a\n        value from 1 hour to 12 hours. To learn how to view the maximum value\n        for your role, see <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.ht\\\n        ml#id_roles_use_view-role-max-session\\\">View the Maximum Session\n        Duration Setting for a Role</a> in the <i>IAM User Guide</i>. The\n        maximum session duration limit applies when you use the\n        <code>AssumeRole*</code> API operations or the <code>assume-role*</code>\n        CLI commands. However the limit does not apply when you use those\n        operations to create a console URL. For more information, see <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.ht\\\n        ml\\\">Using IAM Roles</a> in the <i>IAM User Guide</i>.</p> <p>The\n        temporary security credentials created by <code>AssumeRole</code> can be\n        used to make API calls to any AWS service with the following exception:\n        You cannot call the AWS STS <code>GetFederationToken</code> or\n        <code>GetSessionToken</code> API operations.</p> <p>(Optional) You can\n        pass inline or managed <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies\\\n        .html#policies_session\\\">session policies</a> to this operation. You can\n        pass a single JSON policy document to use as an inline session policy.\n        You can also specify up to 10 managed policies to use as managed session\n        policies. The plain text that you use for both inline and managed\n        session policies shouldn't exceed 2048 characters. Passing policies to\n        this operation returns new temporary credentials. The resulting\n        session's permissions are the intersection of the role's identity-based\n        policy and the session policies. You can use the role's temporary\n        credentials in subsequent AWS API calls to access resources in the\n        account that owns the role. You cannot use session policies to grant\n        more permissions than those allowed by the identity-based policy of the\n        role that is being assumed. For more information, see <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies\\\n        .html#policies_session\\\">Session Policies</a> in the <i>IAM User\n        Guide</i>.</p> <p>To assume a role from a different account, your AWS\n        account must be trusted by the role. The trust relationship is defined\n        in the role's trust policy when the role is created. That trust policy\n        states which accounts are allowed to delegate that access to users in\n        the account. </p> <p>A user who wants to access a role in a different\n        account must also have permissions that are delegated from the user\n        account administrator. The administrator must attach a policy that\n        allows the user to call <code>AssumeRole</code> for the ARN of the role\n        in the other account. If the user is in the same account as the role,\n        then you can do either of the following:</p> <ul> <li> <p>Attach a\n        policy to the user (identical to the previous user in a different\n        account).</p> </li> <li> <p>Add the user as a principal directly in the\n        role's trust policy.</p> </li> </ul> <p>In this case, the trust policy\n        acts as an IAM resource-based policy. Users in the same account as the\n        role do not need explicit permission to assume the role. For more\n        information about trust policies and resource-based policies, see <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies\\\n        .html\\\">IAM Policies</a> in the <i>IAM User Guide</i>.</p> <p> <b>Using\n        MFA with AssumeRole</b> </p> <p>(Optional) You can include multi-factor\n        authentication (MFA) information when you call <code>AssumeRole</code>.\n        This is useful for cross-account scenarios to ensure that the user that\n        assumes the role has been authenticated with an AWS MFA device. In that\n        scenario, the trust policy of the role being assumed includes a\n        condition that tests for MFA authentication. If the caller does not\n        include valid MFA information, the request to assume the role is denied.\n        The condition in a trust policy that tests for MFA authentication might\n        look like the following example.</p> <p> <code>\\\"Condition\\\": {\\\"Bool\\\":\n        {\\\"aws:MultiFactorAuthPresent\\\": true}}</code> </p> <p>For more\n        information, see <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/MFAProtectedAPI\\\n        .html\\\">Configuring MFA-Protected API Access</a> in the <i>IAM User\n        Guide</i> guide.</p> <p>To use MFA with <code>AssumeRole</code>, you\n        pass values for the <code>SerialNumber</code> and <code>TokenCode</code>\n        parameters. The <code>SerialNumber</code> value identifies the user's\n        hardware or virtual MFA device. The <code>TokenCode</code> is the\n        time-based one-time password (TOTP) that the MFA device produces. </p>\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/AssumeRoleResponse\"\n        \"480\":\n          description: MalformedPolicyDocumentException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/MalformedPolicyDocumentException\"\n        \"481\":\n          description: PackedPolicyTooLargeException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PackedPolicyTooLargeException\"\n        \"482\":\n          description: RegionDisabledException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/RegionDisabledException\"\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - AssumeRole\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2011-06-15\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                RoleArn:\n                  description: The Amazon Resource Name (ARN) of the role to assume.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                  pattern: \"[\\\\u0009\\\\u000A\\\\u000D\\\\u0020-\\\\u007E\\\\u0085\\\\u00A0-\\\\uD7FF\\\n                    \\\\uE000-\\\\uFFFD\\\\u10000-\\\\u10FFFF]+\"\n                RoleSessionName:\n                  description: \"<p>An identifier for the assumed role session.</p> <p>Use\n                    the role session name to uniquely identify a session when\n                    the same role is assumed by different principals or for\n                    different reasons. In cross-account scenarios, the role\n                    session name is visible to, and can be logged by the account\n                    that owns the role. The role session name is also used in\n                    the ARN of the assumed role principal. This means that\n                    subsequent cross-account API requests that use the temporary\n                    security credentials will expose the role session name to\n                    the external account in their AWS CloudTrail logs.</p>\n                    <p>The regex used to validate this parameter is a string of\n                    characters consisting of upper- and lower-case alphanumeric\n                    characters with no spaces. You can also include underscores\n                    or any of the following characters: =,.@-</p>\"\n                  type: string\n                  minLength: 2\n                  maxLength: 64\n                  pattern: \"[\\\\w+=,.@-]*\"\n                PolicyArns:\n                  description: <p>The Amazon Resource Names (ARNs) of the IAM managed\n                    policies that you want to use as managed session policies.\n                    The policies must exist in the same account as the role.</p>\n                    <p>This parameter is optional. You can provide up to 10\n                    managed policy ARNs. However, the plain text that you use\n                    for both inline and managed session policies shouldn't\n                    exceed 2048 characters. For more information about ARNs, see\n                    <a\n                    href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\n                    Resource Names (ARNs) and AWS Service Namespaces</a> in the\n                    AWS General Reference.</p> <note> <p>The characters in this\n                    parameter count towards the 2048 character session policy\n                    guideline. However, an AWS conversion compresses the session\n                    policies into a packed binary format that has a separate\n                    limit. This is the enforced limit. The\n                    <code>PackedPolicySize</code> response element indicates by\n                    percentage how close the policy is to the upper size\n                    limit.</p> </note> <p>Passing policies to this operation\n                    returns new temporary credentials. The resulting session's\n                    permissions are the intersection of the role's\n                    identity-based policy and the session policies. You can use\n                    the role's temporary credentials in subsequent AWS API calls\n                    to access resources in the account that owns the role. You\n                    cannot use session policies to grant more permissions than\n                    those allowed by the identity-based policy of the role that\n                    is being assumed. For more information, see <a\n                    href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">Session\n                    Policies</a> in the <i>IAM User Guide</i>.</p>\n                  type: array\n                  items:\n                    type: string\n                Policy:\n                  description: <p>An IAM policy in JSON format that you want to use as an\n                    inline session policy.</p> <p>This parameter is optional.\n                    Passing policies to this operation returns new temporary\n                    credentials. The resulting session's permissions are the\n                    intersection of the role's identity-based policy and the\n                    session policies. You can use the role's temporary\n                    credentials in subsequent AWS API calls to access resources\n                    in the account that owns the role. You cannot use session\n                    policies to grant more permissions than those allowed by the\n                    identity-based policy of the role that is being assumed. For\n                    more information, see <a\n                    href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">Session\n                    Policies</a> in the <i>IAM User Guide</i>.</p> <p>The plain\n                    text that you use for both inline and managed session\n                    policies shouldn't exceed 2048 characters. The JSON policy\n                    characters can be any ASCII character from the space\n                    character to the end of the valid character list (\\u0020\n                    through \\u00FF). It can also include the tab (\\u0009),\n                    linefeed (\\u000A), and carriage return (\\u000D)\n                    characters.</p> <note> <p>The characters in this parameter\n                    count towards the 2048 character session policy guideline.\n                    However, an AWS conversion compresses the session policies\n                    into a packed binary format that has a separate limit. This\n                    is the enforced limit. The <code>PackedPolicySize</code>\n                    response element indicates by percentage how close the\n                    policy is to the upper size limit.</p> </note>\n                  type: string\n                  minLength: 1\n                  maxLength: 2048\n                  pattern: \"[\\\\u0009\\\\u000A\\\\u000D\\\\u0020-\\\\u00FF]+\"\n                DurationSeconds:\n                  description: <p>The duration, in seconds, of the role session. The value\n                    can range from 900 seconds (15 minutes) up to the maximum\n                    session duration setting for the role. This setting can have\n                    a value from 1 hour to 12 hours. If you specify a value\n                    higher than this setting, the operation fails. For example,\n                    if you specify a session duration of 12 hours, but your\n                    administrator set the maximum session duration to 6 hours,\n                    your operation fails. To learn how to view the maximum value\n                    for your role, see <a\n                    href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html#id_roles_use_view-role-max-session\">View\n                    the Maximum Session Duration Setting for a Role</a> in the\n                    <i>IAM User Guide</i>.</p> <p>By default, the value is set\n                    to <code>3600</code> seconds. </p> <note> <p>The\n                    <code>DurationSeconds</code> parameter is separate from the\n                    duration of a console session that you might request using\n                    the returned credentials. The request to the federation\n                    endpoint for a console sign-in token takes a\n                    <code>SessionDuration</code> parameter that specifies the\n                    maximum length of the console session. For more information,\n                    see <a\n                    href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_enable-console-custom-url.html\">Creating\n                    a URL that Enables Federated Users to Access the AWS\n                    Management Console</a> in the <i>IAM User Guide</i>.</p>\n                    </note>\n                  type: integer\n                  minimum: 900\n                  maximum: 43200\n                ExternalId:\n                  description: '<p>A unique identifier that might be required when you\n                    assume a role in another account. If the administrator of\n                    the account to which the role belongs provided you with an\n                    external ID, then provide that value in the\n                    <code>ExternalId</code> parameter. This value can be any\n                    string, such as a passphrase or account number. A\n                    cross-account role is usually set up to trust everyone in an\n                    account. Therefore, the administrator of the trusting\n                    account might send an external ID to the administrator of\n                    the trusted account. That way, only someone with the ID can\n                    assume the role, rather than everyone in the account. For\n                    more information about the external ID, see <a\n                    href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html\">How\n                    to Use an External ID When Granting Access to Your AWS\n                    Resources to a Third Party</a> in the <i>IAM User\n                    Guide</i>.</p> <p>The regex used to validate this parameter\n                    is a string of characters consisting of upper- and\n                    lower-case alphanumeric characters with no spaces. You can\n                    also include underscores or any of the following characters:\n                    =,.@:/-</p>'\n                  type: string\n                  minLength: 2\n                  maxLength: 1224\n                  pattern: \"[\\\\w+=,.@:\\\\/-]*\"\n                SerialNumber:\n                  description: \"<p>The identification number of the MFA device that is\n                    associated with the user who is making the\n                    <code>AssumeRole</code> call. Specify this value if the\n                    trust policy of the role being assumed includes a condition\n                    that requires MFA authentication. The value is either the\n                    serial number for a hardware device (such as\n                    <code>GAHT12345678</code>) or an Amazon Resource Name (ARN)\n                    for a virtual device (such as\n                    <code>arn:aws:iam::123456789012:mfa/user</code>).</p> <p>The\n                    regex used to validate this parameter is a string of\n                    characters consisting of upper- and lower-case alphanumeric\n                    characters with no spaces. You can also include underscores\n                    or any of the following characters: =,.@-</p>\"\n                  type: string\n                  minLength: 9\n                  maxLength: 256\n                  pattern: \"[\\\\w+=/:,.@-]*\"\n                TokenCode:\n                  description: <p>The value provided by the MFA device, if the trust policy\n                    of the role being assumed requires MFA (that is, if the\n                    policy includes a condition that tests for MFA). If the role\n                    being assumed requires MFA and if the <code>TokenCode</code>\n                    value is missing or expired, the <code>AssumeRole</code>\n                    call returns an \"access denied\" error.</p> <p>The format for\n                    this parameter, as described by its regex pattern, is a\n                    sequence of six numeric digits.</p>\n                  type: string\n                  minLength: 6\n                  maxLength: 6\n                  pattern: \"[\\\\d]*\"\n              required:\n                - RoleArn\n                - RoleSessionName\n  /#Action=AssumeRoleWithSAML:\n    get:\n      x-aws-operation-name: AssumeRoleWithSAML\n      operationId: GET AssumeRoleWithSAML\n      description: \"<p>Returns a set of temporary security credentials for users who have\n        been authenticated via a SAML authentication response. This operation\n        provides a mechanism for tying an enterprise identity store or directory\n        to role-based AWS access without user-specific credentials or\n        configuration. For a comparison of <code>AssumeRoleWithSAML</code> with\n        the other API operations that produce temporary credentials, see <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_\\\n        temp_request.html\\\">Requesting Temporary Security Credentials</a> and <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_\\\n        temp_request.html#stsapi_comparison\\\">Comparing the AWS STS API\n        operations</a> in the <i>IAM User Guide</i>.</p> <p>The temporary\n        security credentials returned by this operation consist of an access key\n        ID, a secret access key, and a security token. Applications can use\n        these temporary security credentials to sign calls to AWS services.</p>\n        <p>By default, the temporary security credentials created by\n        <code>AssumeRoleWithSAML</code> last for one hour. However, you can use\n        the optional <code>DurationSeconds</code> parameter to specify the\n        duration of your session. Your role session lasts for the duration that\n        you specify, or until the time specified in the SAML authentication\n        response's <code>SessionNotOnOrAfter</code> value, whichever is shorter.\n        You can provide a <code>DurationSeconds</code> value from 900 seconds\n        (15 minutes) up to the maximum session duration setting for the role.\n        This setting can have a value from 1 hour to 12 hours. To learn how to\n        view the maximum value for your role, see <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.ht\\\n        ml#id_roles_use_view-role-max-session\\\">View the Maximum Session\n        Duration Setting for a Role</a> in the <i>IAM User Guide</i>. The\n        maximum session duration limit applies when you use the\n        <code>AssumeRole*</code> API operations or the <code>assume-role*</code>\n        CLI commands. However the limit does not apply when you use those\n        operations to create a console URL. For more information, see <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.ht\\\n        ml\\\">Using IAM Roles</a> in the <i>IAM User Guide</i>.</p> <p>The\n        temporary security credentials created by\n        <code>AssumeRoleWithSAML</code> can be used to make API calls to any AWS\n        service with the following exception: you cannot call the STS\n        <code>GetFederationToken</code> or <code>GetSessionToken</code> API\n        operations.</p> <p>(Optional) You can pass inline or managed <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies\\\n        .html#policies_session\\\">session policies</a> to this operation. You can\n        pass a single JSON policy document to use as an inline session policy.\n        You can also specify up to 10 managed policies to use as managed session\n        policies. The plain text that you use for both inline and managed\n        session policies shouldn't exceed 2048 characters. Passing policies to\n        this operation returns new temporary credentials. The resulting\n        session's permissions are the intersection of the role's identity-based\n        policy and the session policies. You can use the role's temporary\n        credentials in subsequent AWS API calls to access resources in the\n        account that owns the role. You cannot use session policies to grant\n        more permissions than those allowed by the identity-based policy of the\n        role that is being assumed. For more information, see <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies\\\n        .html#policies_session\\\">Session Policies</a> in the <i>IAM User\n        Guide</i>.</p> <p>Before your application can call\n        <code>AssumeRoleWithSAML</code>, you must configure your SAML identity\n        provider (IdP) to issue the claims required by AWS. Additionally, you\n        must use AWS Identity and Access Management (IAM) to create a SAML\n        provider entity in your AWS account that represents your identity\n        provider. You must also create an IAM role that specifies this SAML\n        provider in its trust policy. </p> <p>Calling\n        <code>AssumeRoleWithSAML</code> does not require the use of AWS security\n        credentials. The identity of the caller is validated by using keys in\n        the metadata document that is uploaded for the SAML provider entity for\n        your identity provider. </p> <important> <p>Calling\n        <code>AssumeRoleWithSAML</code> can result in an entry in your AWS\n        CloudTrail logs. The entry includes the value in the <code>NameID</code>\n        element of the SAML assertion. We recommend that you use a\n        <code>NameIDType</code> that is not associated with any personally\n        identifiable information (PII). For example, you could instead use the\n        Persistent Identifier\n        (<code>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</code>).</p>\n        </important> <p>For more information, see the following resources:</p>\n        <ul> <li> <p> <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_provid\\\n        ers_saml.html\\\">About SAML 2.0-based Federation</a> in the <i>IAM User\n        Guide</i>. </p> </li> <li> <p> <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_provid\\\n        ers_create_saml.html\\\">Creating SAML Identity Providers</a> in the\n        <i>IAM User Guide</i>. </p> </li> <li> <p> <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_provid\\\n        ers_create_saml_relying-party.html\\\">Configuring a Relying Party and\n        Claims</a> in the <i>IAM User Guide</i>. </p> </li> <li> <p> <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create\\\n        _for-idp_saml.html\\\">Creating a Role for SAML 2.0 Federation</a> in the\n        <i>IAM User Guide</i>. </p> </li> </ul>\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/AssumeRoleWithSAMLResponse\"\n        \"480\":\n          description: MalformedPolicyDocumentException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/MalformedPolicyDocumentException\"\n        \"481\":\n          description: PackedPolicyTooLargeException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PackedPolicyTooLargeException\"\n        \"482\":\n          description: IDPRejectedClaimException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/IDPRejectedClaimException\"\n        \"483\":\n          description: InvalidIdentityTokenException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/InvalidIdentityTokenException\"\n        \"484\":\n          description: ExpiredTokenException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ExpiredTokenException\"\n        \"485\":\n          description: RegionDisabledException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/RegionDisabledException\"\n      parameters:\n        - name: RoleArn\n          in: query\n          required: true\n          description: The Amazon Resource Name (ARN) of the role that the caller is\n            assuming.\n          schema:\n            type: string\n            minLength: 20\n            maxLength: 2048\n            pattern: \"[\\\\u0009\\\\u000A\\\\u000D\\\\u0020-\\\\u007E\\\\u0085\\\\u00A0-\\\\uD7FF\\\\uE0\\\n              00-\\\\uFFFD\\\\u10000-\\\\u10FFFF]+\"\n        - name: PrincipalArn\n          in: query\n          required: true\n          description: The Amazon Resource Name (ARN) of the SAML provider in IAM that\n            describes the IdP.\n          schema:\n            type: string\n            minLength: 20\n            maxLength: 2048\n            pattern: \"[\\\\u0009\\\\u000A\\\\u000D\\\\u0020-\\\\u007E\\\\u0085\\\\u00A0-\\\\uD7FF\\\\uE0\\\n              00-\\\\uFFFD\\\\u10000-\\\\u10FFFF]+\"\n        - name: SAMLAssertion\n          in: query\n          required: true\n          description: <p>The base-64 encoded SAML authentication response provided by the\n            IdP.</p> <p>For more information, see <a\n            href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/create-role-saml-IdP-tasks.html\">Configuring\n            a Relying Party and Adding Claims</a> in the <i>IAM User Guide</i>.\n            </p>\n          schema:\n            type: string\n            minLength: 4\n            maxLength: 100000\n        - name: PolicyArns\n          in: query\n          required: false\n          description: <p>The Amazon Resource Names (ARNs) of the IAM managed policies that\n            you want to use as managed session policies. The policies must exist\n            in the same account as the role.</p> <p>This parameter is optional.\n            You can provide up to 10 managed policy ARNs. However, the plain\n            text that you use for both inline and managed session policies\n            shouldn't exceed 2048 characters. For more information about ARNs,\n            see <a\n            href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\n            Resource Names (ARNs) and AWS Service Namespaces</a> in the AWS\n            General Reference.</p> <note> <p>The characters in this parameter\n            count towards the 2048 character session policy guideline. However,\n            an AWS conversion compresses the session policies into a packed\n            binary format that has a separate limit. This is the enforced limit.\n            The <code>PackedPolicySize</code> response element indicates by\n            percentage how close the policy is to the upper size limit.</p>\n            </note> <p>Passing policies to this operation returns new temporary\n            credentials. The resulting session's permissions are the\n            intersection of the role's identity-based policy and the session\n            policies. You can use the role's temporary credentials in subsequent\n            AWS API calls to access resources in the account that owns the role.\n            You cannot use session policies to grant more permissions than those\n            allowed by the identity-based policy of the role that is being\n            assumed. For more information, see <a\n            href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">Session\n            Policies</a> in the <i>IAM User Guide</i>.</p>\n          schema:\n            type: array\n            items:\n              type: string\n        - name: Policy\n          in: query\n          required: false\n          description: <p>An IAM policy in JSON format that you want to use as an inline\n            session policy.</p> <p>This parameter is optional. Passing policies\n            to this operation returns new temporary credentials. The resulting\n            session's permissions are the intersection of the role's\n            identity-based policy and the session policies. You can use the\n            role's temporary credentials in subsequent AWS API calls to access\n            resources in the account that owns the role. You cannot use session\n            policies to grant more permissions than those allowed by the\n            identity-based policy of the role that is being assumed. For more\n            information, see <a\n            href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">Session\n            Policies</a> in the <i>IAM User Guide</i>. </p> <p>The plain text\n            that you use for both inline and managed session policies shouldn't\n            exceed 2048 characters. The JSON policy characters can be any ASCII\n            character from the space character to the end of the valid character\n            list (\\u0020 through \\u00FF). It can also include the tab (\\u0009),\n            linefeed (\\u000A), and carriage return (\\u000D) characters.</p>\n            <note> <p>The characters in this parameter count towards the 2048\n            character session policy guideline. However, an AWS conversion\n            compresses the session policies into a packed binary format that has\n            a separate limit. This is the enforced limit. The\n            <code>PackedPolicySize</code> response element indicates by\n            percentage how close the policy is to the upper size limit.</p>\n            </note>\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 2048\n            pattern: \"[\\\\u0009\\\\u000A\\\\u000D\\\\u0020-\\\\u00FF]+\"\n        - name: DurationSeconds\n          in: query\n          required: false\n          description: <p>The duration, in seconds, of the role session. Your role session\n            lasts for the duration that you specify for the\n            <code>DurationSeconds</code> parameter, or until the time specified\n            in the SAML authentication response's\n            <code>SessionNotOnOrAfter</code> value, whichever is shorter. You\n            can provide a <code>DurationSeconds</code> value from 900 seconds\n            (15 minutes) up to the maximum session duration setting for the\n            role. This setting can have a value from 1 hour to 12 hours. If you\n            specify a value higher than this setting, the operation fails. For\n            example, if you specify a session duration of 12 hours, but your\n            administrator set the maximum session duration to 6 hours, your\n            operation fails. To learn how to view the maximum value for your\n            role, see <a\n            href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html#id_roles_use_view-role-max-session\">View\n            the Maximum Session Duration Setting for a Role</a> in the <i>IAM\n            User Guide</i>.</p> <p>By default, the value is set to\n            <code>3600</code> seconds. </p> <note> <p>The\n            <code>DurationSeconds</code> parameter is separate from the duration\n            of a console session that you might request using the returned\n            credentials. The request to the federation endpoint for a console\n            sign-in token takes a <code>SessionDuration</code> parameter that\n            specifies the maximum length of the console session. For more\n            information, see <a\n            href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_enable-console-custom-url.html\">Creating\n            a URL that Enables Federated Users to Access the AWS Management\n            Console</a> in the <i>IAM User Guide</i>.</p> </note>\n          schema:\n            type: integer\n            minimum: 900\n            maximum: 43200\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - AssumeRoleWithSAML\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2011-06-15\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      x-aws-operation-name: AssumeRoleWithSAML\n      operationId: POST AssumeRoleWithSAML\n      description: \"<p>Returns a set of temporary security credentials for users who have\n        been authenticated via a SAML authentication response. This operation\n        provides a mechanism for tying an enterprise identity store or directory\n        to role-based AWS access without user-specific credentials or\n        configuration. For a comparison of <code>AssumeRoleWithSAML</code> with\n        the other API operations that produce temporary credentials, see <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_\\\n        temp_request.html\\\">Requesting Temporary Security Credentials</a> and <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_\\\n        temp_request.html#stsapi_comparison\\\">Comparing the AWS STS API\n        operations</a> in the <i>IAM User Guide</i>.</p> <p>The temporary\n        security credentials returned by this operation consist of an access key\n        ID, a secret access key, and a security token. Applications can use\n        these temporary security credentials to sign calls to AWS services.</p>\n        <p>By default, the temporary security credentials created by\n        <code>AssumeRoleWithSAML</code> last for one hour. However, you can use\n        the optional <code>DurationSeconds</code> parameter to specify the\n        duration of your session. Your role session lasts for the duration that\n        you specify, or until the time specified in the SAML authentication\n        response's <code>SessionNotOnOrAfter</code> value, whichever is shorter.\n        You can provide a <code>DurationSeconds</code> value from 900 seconds\n        (15 minutes) up to the maximum session duration setting for the role.\n        This setting can have a value from 1 hour to 12 hours. To learn how to\n        view the maximum value for your role, see <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.ht\\\n        ml#id_roles_use_view-role-max-session\\\">View the Maximum Session\n        Duration Setting for a Role</a> in the <i>IAM User Guide</i>. The\n        maximum session duration limit applies when you use the\n        <code>AssumeRole*</code> API operations or the <code>assume-role*</code>\n        CLI commands. However the limit does not apply when you use those\n        operations to create a console URL. For more information, see <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.ht\\\n        ml\\\">Using IAM Roles</a> in the <i>IAM User Guide</i>.</p> <p>The\n        temporary security credentials created by\n        <code>AssumeRoleWithSAML</code> can be used to make API calls to any AWS\n        service with the following exception: you cannot call the STS\n        <code>GetFederationToken</code> or <code>GetSessionToken</code> API\n        operations.</p> <p>(Optional) You can pass inline or managed <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies\\\n        .html#policies_session\\\">session policies</a> to this operation. You can\n        pass a single JSON policy document to use as an inline session policy.\n        You can also specify up to 10 managed policies to use as managed session\n        policies. The plain text that you use for both inline and managed\n        session policies shouldn't exceed 2048 characters. Passing policies to\n        this operation returns new temporary credentials. The resulting\n        session's permissions are the intersection of the role's identity-based\n        policy and the session policies. You can use the role's temporary\n        credentials in subsequent AWS API calls to access resources in the\n        account that owns the role. You cannot use session policies to grant\n        more permissions than those allowed by the identity-based policy of the\n        role that is being assumed. For more information, see <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies\\\n        .html#policies_session\\\">Session Policies</a> in the <i>IAM User\n        Guide</i>.</p> <p>Before your application can call\n        <code>AssumeRoleWithSAML</code>, you must configure your SAML identity\n        provider (IdP) to issue the claims required by AWS. Additionally, you\n        must use AWS Identity and Access Management (IAM) to create a SAML\n        provider entity in your AWS account that represents your identity\n        provider. You must also create an IAM role that specifies this SAML\n        provider in its trust policy. </p> <p>Calling\n        <code>AssumeRoleWithSAML</code> does not require the use of AWS security\n        credentials. The identity of the caller is validated by using keys in\n        the metadata document that is uploaded for the SAML provider entity for\n        your identity provider. </p> <important> <p>Calling\n        <code>AssumeRoleWithSAML</code> can result in an entry in your AWS\n        CloudTrail logs. The entry includes the value in the <code>NameID</code>\n        element of the SAML assertion. We recommend that you use a\n        <code>NameIDType</code> that is not associated with any personally\n        identifiable information (PII). For example, you could instead use the\n        Persistent Identifier\n        (<code>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</code>).</p>\n        </important> <p>For more information, see the following resources:</p>\n        <ul> <li> <p> <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_provid\\\n        ers_saml.html\\\">About SAML 2.0-based Federation</a> in the <i>IAM User\n        Guide</i>. </p> </li> <li> <p> <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_provid\\\n        ers_create_saml.html\\\">Creating SAML Identity Providers</a> in the\n        <i>IAM User Guide</i>. </p> </li> <li> <p> <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_provid\\\n        ers_create_saml_relying-party.html\\\">Configuring a Relying Party and\n        Claims</a> in the <i>IAM User Guide</i>. </p> </li> <li> <p> <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create\\\n        _for-idp_saml.html\\\">Creating a Role for SAML 2.0 Federation</a> in the\n        <i>IAM User Guide</i>. </p> </li> </ul>\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/AssumeRoleWithSAMLResponse\"\n        \"480\":\n          description: MalformedPolicyDocumentException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/MalformedPolicyDocumentException\"\n        \"481\":\n          description: PackedPolicyTooLargeException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PackedPolicyTooLargeException\"\n        \"482\":\n          description: IDPRejectedClaimException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/IDPRejectedClaimException\"\n        \"483\":\n          description: InvalidIdentityTokenException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/InvalidIdentityTokenException\"\n        \"484\":\n          description: ExpiredTokenException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ExpiredTokenException\"\n        \"485\":\n          description: RegionDisabledException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/RegionDisabledException\"\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - AssumeRoleWithSAML\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2011-06-15\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                RoleArn:\n                  description: The Amazon Resource Name (ARN) of the role that the caller\n                    is assuming.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                  pattern: \"[\\\\u0009\\\\u000A\\\\u000D\\\\u0020-\\\\u007E\\\\u0085\\\\u00A0-\\\\uD7FF\\\n                    \\\\uE000-\\\\uFFFD\\\\u10000-\\\\u10FFFF]+\"\n                PrincipalArn:\n                  description: The Amazon Resource Name (ARN) of the SAML provider in IAM\n                    that describes the IdP.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                  pattern: \"[\\\\u0009\\\\u000A\\\\u000D\\\\u0020-\\\\u007E\\\\u0085\\\\u00A0-\\\\uD7FF\\\n                    \\\\uE000-\\\\uFFFD\\\\u10000-\\\\u10FFFF]+\"\n                SAMLAssertion:\n                  description: <p>The base-64 encoded SAML authentication response provided\n                    by the IdP.</p> <p>For more information, see <a\n                    href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/create-role-saml-IdP-tasks.html\">Configuring\n                    a Relying Party and Adding Claims</a> in the <i>IAM User\n                    Guide</i>. </p>\n                  type: string\n                  minLength: 4\n                  maxLength: 100000\n                PolicyArns:\n                  description: <p>The Amazon Resource Names (ARNs) of the IAM managed\n                    policies that you want to use as managed session policies.\n                    The policies must exist in the same account as the role.</p>\n                    <p>This parameter is optional. You can provide up to 10\n                    managed policy ARNs. However, the plain text that you use\n                    for both inline and managed session policies shouldn't\n                    exceed 2048 characters. For more information about ARNs, see\n                    <a\n                    href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\n                    Resource Names (ARNs) and AWS Service Namespaces</a> in the\n                    AWS General Reference.</p> <note> <p>The characters in this\n                    parameter count towards the 2048 character session policy\n                    guideline. However, an AWS conversion compresses the session\n                    policies into a packed binary format that has a separate\n                    limit. This is the enforced limit. The\n                    <code>PackedPolicySize</code> response element indicates by\n                    percentage how close the policy is to the upper size\n                    limit.</p> </note> <p>Passing policies to this operation\n                    returns new temporary credentials. The resulting session's\n                    permissions are the intersection of the role's\n                    identity-based policy and the session policies. You can use\n                    the role's temporary credentials in subsequent AWS API calls\n                    to access resources in the account that owns the role. You\n                    cannot use session policies to grant more permissions than\n                    those allowed by the identity-based policy of the role that\n                    is being assumed. For more information, see <a\n                    href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">Session\n                    Policies</a> in the <i>IAM User Guide</i>.</p>\n                  type: array\n                  items:\n                    type: string\n                Policy:\n                  description: <p>An IAM policy in JSON format that you want to use as an\n                    inline session policy.</p> <p>This parameter is optional.\n                    Passing policies to this operation returns new temporary\n                    credentials. The resulting session's permissions are the\n                    intersection of the role's identity-based policy and the\n                    session policies. You can use the role's temporary\n                    credentials in subsequent AWS API calls to access resources\n                    in the account that owns the role. You cannot use session\n                    policies to grant more permissions than those allowed by the\n                    identity-based policy of the role that is being assumed. For\n                    more information, see <a\n                    href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">Session\n                    Policies</a> in the <i>IAM User Guide</i>. </p> <p>The plain\n                    text that you use for both inline and managed session\n                    policies shouldn't exceed 2048 characters. The JSON policy\n                    characters can be any ASCII character from the space\n                    character to the end of the valid character list (\\u0020\n                    through \\u00FF). It can also include the tab (\\u0009),\n                    linefeed (\\u000A), and carriage return (\\u000D)\n                    characters.</p> <note> <p>The characters in this parameter\n                    count towards the 2048 character session policy guideline.\n                    However, an AWS conversion compresses the session policies\n                    into a packed binary format that has a separate limit. This\n                    is the enforced limit. The <code>PackedPolicySize</code>\n                    response element indicates by percentage how close the\n                    policy is to the upper size limit.</p> </note>\n                  type: string\n                  minLength: 1\n                  maxLength: 2048\n                  pattern: \"[\\\\u0009\\\\u000A\\\\u000D\\\\u0020-\\\\u00FF]+\"\n                DurationSeconds:\n                  description: <p>The duration, in seconds, of the role session. Your role\n                    session lasts for the duration that you specify for the\n                    <code>DurationSeconds</code> parameter, or until the time\n                    specified in the SAML authentication response's\n                    <code>SessionNotOnOrAfter</code> value, whichever is\n                    shorter. You can provide a <code>DurationSeconds</code>\n                    value from 900 seconds (15 minutes) up to the maximum\n                    session duration setting for the role. This setting can have\n                    a value from 1 hour to 12 hours. If you specify a value\n                    higher than this setting, the operation fails. For example,\n                    if you specify a session duration of 12 hours, but your\n                    administrator set the maximum session duration to 6 hours,\n                    your operation fails. To learn how to view the maximum value\n                    for your role, see <a\n                    href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html#id_roles_use_view-role-max-session\">View\n                    the Maximum Session Duration Setting for a Role</a> in the\n                    <i>IAM User Guide</i>.</p> <p>By default, the value is set\n                    to <code>3600</code> seconds. </p> <note> <p>The\n                    <code>DurationSeconds</code> parameter is separate from the\n                    duration of a console session that you might request using\n                    the returned credentials. The request to the federation\n                    endpoint for a console sign-in token takes a\n                    <code>SessionDuration</code> parameter that specifies the\n                    maximum length of the console session. For more information,\n                    see <a\n                    href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_enable-console-custom-url.html\">Creating\n                    a URL that Enables Federated Users to Access the AWS\n                    Management Console</a> in the <i>IAM User Guide</i>.</p>\n                    </note>\n                  type: integer\n                  minimum: 900\n                  maximum: 43200\n              required:\n                - RoleArn\n                - PrincipalArn\n                - SAMLAssertion\n  /#Action=AssumeRoleWithWebIdentity:\n    get:\n      x-aws-operation-name: AssumeRoleWithWebIdentity\n      operationId: GET AssumeRoleWithWebIdentity\n      description: \"<p>Returns a set of temporary security credentials for users who have\n        been authenticated in a mobile or web application with a web identity\n        provider. Example providers include Amazon Cognito, Login with Amazon,\n        Facebook, Google, or any OpenID Connect-compatible identity\n        provider.</p> <note> <p>For mobile applications, we recommend that you\n        use Amazon Cognito. You can use Amazon Cognito with the <a\n        href=\\\"http://aws.amazon.com/sdkforios/\\\">AWS SDK for iOS Developer\n        Guide</a> and the <a href=\\\"http://aws.amazon.com/sdkforandroid/\\\">AWS\n        SDK for Android Developer Guide</a> to uniquely identify a user. You can\n        also supply the user with a consistent identity throughout the lifetime\n        of an application.</p> <p>To learn more about Amazon Cognito, see <a\n        href=\\\"https://docs.aws.amazon.com/mobile/sdkforandroid/developerguide/\\\n        cognito-auth.html#d0e840\\\">Amazon Cognito Overview</a> in <i>AWS SDK for\n        Android Developer Guide</i> and <a\n        href=\\\"https://docs.aws.amazon.com/mobile/sdkforios/developerguide/cogn\\\n        ito-auth.html#d0e664\\\">Amazon Cognito Overview</a> in the <i>AWS SDK for\n        iOS Developer Guide</i>.</p> </note> <p>Calling\n        <code>AssumeRoleWithWebIdentity</code> does not require the use of AWS\n        security credentials. Therefore, you can distribute an application (for\n        example, on mobile devices) that requests temporary security credentials\n        without including long-term AWS credentials in the application. You also\n        don't need to deploy server-based proxy services that use long-term AWS\n        credentials. Instead, the identity of the caller is validated by using a\n        token from the web identity provider. For a comparison of\n        <code>AssumeRoleWithWebIdentity</code> with the other API operations\n        that produce temporary credentials, see <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_\\\n        temp_request.html\\\">Requesting Temporary Security Credentials</a> and <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_\\\n        temp_request.html#stsapi_comparison\\\">Comparing the AWS STS API\n        operations</a> in the <i>IAM User Guide</i>.</p> <p>The temporary\n        security credentials returned by this API consist of an access key ID, a\n        secret access key, and a security token. Applications can use these\n        temporary security credentials to sign calls to AWS service API\n        operations.</p> <p>By default, the temporary security credentials\n        created by <code>AssumeRoleWithWebIdentity</code> last for one hour.\n        However, you can use the optional <code>DurationSeconds</code> parameter\n        to specify the duration of your session. You can provide a value from\n        900 seconds (15 minutes) up to the maximum session duration setting for\n        the role. This setting can have a value from 1 hour to 12 hours. To\n        learn how to view the maximum value for your role, see <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.ht\\\n        ml#id_roles_use_view-role-max-session\\\">View the Maximum Session\n        Duration Setting for a Role</a> in the <i>IAM User Guide</i>. The\n        maximum session duration limit applies when you use the\n        <code>AssumeRole*</code> API operations or the <code>assume-role*</code>\n        CLI commands. However the limit does not apply when you use those\n        operations to create a console URL. For more information, see <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.ht\\\n        ml\\\">Using IAM Roles</a> in the <i>IAM User Guide</i>. </p> <p>The\n        temporary security credentials created by\n        <code>AssumeRoleWithWebIdentity</code> can be used to make API calls to\n        any AWS service with the following exception: you cannot call the STS\n        <code>GetFederationToken</code> or <code>GetSessionToken</code> API\n        operations.</p> <p>(Optional) You can pass inline or managed <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies\\\n        .html#policies_session\\\">session policies</a> to this operation. You can\n        pass a single JSON policy document to use as an inline session policy.\n        You can also specify up to 10 managed policies to use as managed session\n        policies. The plain text that you use for both inline and managed\n        session policies shouldn't exceed 2048 characters. Passing policies to\n        this operation returns new temporary credentials. The resulting\n        session's permissions are the intersection of the role's identity-based\n        policy and the session policies. You can use the role's temporary\n        credentials in subsequent AWS API calls to access resources in the\n        account that owns the role. You cannot use session policies to grant\n        more permissions than those allowed by the identity-based policy of the\n        role that is being assumed. For more information, see <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies\\\n        .html#policies_session\\\">Session Policies</a> in the <i>IAM User\n        Guide</i>.</p> <p>Before your application can call\n        <code>AssumeRoleWithWebIdentity</code>, you must have an identity token\n        from a supported identity provider and create a role that the\n        application can assume. The role that your application assumes must\n        trust the identity provider that is associated with the identity token.\n        In other words, the identity provider must be specified in the role's\n        trust policy. </p> <important> <p>Calling\n        <code>AssumeRoleWithWebIdentity</code> can result in an entry in your\n        AWS CloudTrail logs. The entry includes the <a\n        href=\\\"http://openid.net/specs/openid-connect-core-1_0.html#Claims\\\">Su\\\n        bject</a> of the provided Web Identity Token. We recommend that you\n        avoid using any personally identifiable information (PII) in this field.\n        For example, you could instead use a GUID or a pairwise identifier, as\n        <a\n        href=\\\"http://openid.net/specs/openid-connect-core-1_0.html#SubjectIDTy\\\n        pes\\\">suggested in the OIDC specification</a>.</p> </important> <p>For\n        more information about how to use web identity federation and the\n        <code>AssumeRoleWithWebIdentity</code> API, see the following resources:\n        </p> <ul> <li> <p> <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_provid\\\n        ers_oidc_manual.html\\\">Using Web Identity Federation API Operations for\n        Mobile Apps</a> and <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_\\\n        temp_request.html#api_assumerolewithwebidentity\\\">Federation Through a\n        Web-based Identity Provider</a>. </p> </li> <li> <p> <a\n        href=\\\"https://web-identity-federation-playground.s3.amazonaws.com/inde\\\n        x.html\\\"> Web Identity Federation Playground</a>. Walk through the\n        process of authenticating through Login with Amazon, Facebook, or\n        Google, getting temporary security credentials, and then using those\n        credentials to make a request to AWS. </p> </li> <li> <p> <a\n        href=\\\"http://aws.amazon.com/sdkforios/\\\">AWS SDK for iOS Developer\n        Guide</a> and <a href=\\\"http://aws.amazon.com/sdkforandroid/\\\">AWS SDK\n        for Android Developer Guide</a>. These toolkits contain sample apps that\n        show how to invoke the identity providers, and then how to use the\n        information from these providers to get and use temporary security\n        credentials. </p> </li> <li> <p> <a\n        href=\\\"http://aws.amazon.com/articles/web-identity-federation-with-mobi\\\n        le-applications\\\">Web Identity Federation with Mobile Applications</a>.\n        This article discusses web identity federation and shows an example of\n        how to use web identity federation to get access to content in Amazon\n        S3. </p> </li> </ul>\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/AssumeRoleWithWebIdentityResponse\"\n        \"480\":\n          description: MalformedPolicyDocumentException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/MalformedPolicyDocumentException\"\n        \"481\":\n          description: PackedPolicyTooLargeException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PackedPolicyTooLargeException\"\n        \"482\":\n          description: IDPRejectedClaimException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/IDPRejectedClaimException\"\n        \"483\":\n          description: IDPCommunicationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/IDPCommunicationErrorException\"\n        \"484\":\n          description: InvalidIdentityTokenException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/InvalidIdentityTokenException\"\n        \"485\":\n          description: ExpiredTokenException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ExpiredTokenException\"\n        \"486\":\n          description: RegionDisabledException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/RegionDisabledException\"\n      parameters:\n        - name: RoleArn\n          in: query\n          required: true\n          description: The Amazon Resource Name (ARN) of the role that the caller is\n            assuming.\n          schema:\n            type: string\n            minLength: 20\n            maxLength: 2048\n            pattern: \"[\\\\u0009\\\\u000A\\\\u000D\\\\u0020-\\\\u007E\\\\u0085\\\\u00A0-\\\\uD7FF\\\\uE0\\\n              00-\\\\uFFFD\\\\u10000-\\\\u10FFFF]+\"\n        - name: RoleSessionName\n          in: query\n          required: true\n          description: \"<p>An identifier for the assumed role session. Typically, you pass\n            the name or identifier that is associated with the user who is using\n            your application. That way, the temporary security credentials that\n            your application will use are associated with that user. This\n            session name is included as part of the ARN and assumed role ID in\n            the <code>AssumedRoleUser</code> response element.</p> <p>The regex\n            used to validate this parameter is a string of characters consisting\n            of upper- and lower-case alphanumeric characters with no spaces. You\n            can also include underscores or any of the following characters:\n            =,.@-</p>\"\n          schema:\n            type: string\n            minLength: 2\n            maxLength: 64\n            pattern: \"[\\\\w+=,.@-]*\"\n        - name: WebIdentityToken\n          in: query\n          required: true\n          description: \"The OAuth 2.0 access token or OpenID Connect ID token that is\n            provided by the identity provider. Your application must get this\n            token by authenticating the user who is using your application with\n            a web identity provider before the application makes an\n            <code>AssumeRoleWithWebIdentity</code> call. \"\n          schema:\n            type: string\n            minLength: 4\n            maxLength: 2048\n        - name: ProviderId\n          in: query\n          required: false\n          description: <p>The fully qualified host component of the domain name of the\n            identity provider.</p> <p>Specify this value only for OAuth 2.0\n            access tokens. Currently <code>www.amazon.com</code> and\n            <code>graph.facebook.com</code> are the only supported identity\n            providers for OAuth 2.0 access tokens. Do not include URL schemes\n            and port numbers.</p> <p>Do not specify this value for OpenID\n            Connect ID tokens.</p>\n          schema:\n            type: string\n            minLength: 4\n            maxLength: 2048\n        - name: PolicyArns\n          in: query\n          required: false\n          description: <p>The Amazon Resource Names (ARNs) of the IAM managed policies that\n            you want to use as managed session policies. The policies must exist\n            in the same account as the role.</p> <p>This parameter is optional.\n            You can provide up to 10 managed policy ARNs. However, the plain\n            text that you use for both inline and managed session policies\n            shouldn't exceed 2048 characters. For more information about ARNs,\n            see <a\n            href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\n            Resource Names (ARNs) and AWS Service Namespaces</a> in the AWS\n            General Reference.</p> <note> <p>The characters in this parameter\n            count towards the 2048 character session policy guideline. However,\n            an AWS conversion compresses the session policies into a packed\n            binary format that has a separate limit. This is the enforced limit.\n            The <code>PackedPolicySize</code> response element indicates by\n            percentage how close the policy is to the upper size limit.</p>\n            </note> <p>Passing policies to this operation returns new temporary\n            credentials. The resulting session's permissions are the\n            intersection of the role's identity-based policy and the session\n            policies. You can use the role's temporary credentials in subsequent\n            AWS API calls to access resources in the account that owns the role.\n            You cannot use session policies to grant more permissions than those\n            allowed by the identity-based policy of the role that is being\n            assumed. For more information, see <a\n            href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">Session\n            Policies</a> in the <i>IAM User Guide</i>.</p>\n          schema:\n            type: array\n            items:\n              type: string\n        - name: Policy\n          in: query\n          required: false\n          description: <p>An IAM policy in JSON format that you want to use as an inline\n            session policy.</p> <p>This parameter is optional. Passing policies\n            to this operation returns new temporary credentials. The resulting\n            session's permissions are the intersection of the role's\n            identity-based policy and the session policies. You can use the\n            role's temporary credentials in subsequent AWS API calls to access\n            resources in the account that owns the role. You cannot use session\n            policies to grant more permissions than those allowed by the\n            identity-based policy of the role that is being assumed. For more\n            information, see <a\n            href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">Session\n            Policies</a> in the <i>IAM User Guide</i>.</p> <p>The plain text\n            that you use for both inline and managed session policies shouldn't\n            exceed 2048 characters. The JSON policy characters can be any ASCII\n            character from the space character to the end of the valid character\n            list (\\u0020 through \\u00FF). It can also include the tab (\\u0009),\n            linefeed (\\u000A), and carriage return (\\u000D) characters.</p>\n            <note> <p>The characters in this parameter count towards the 2048\n            character session policy guideline. However, an AWS conversion\n            compresses the session policies into a packed binary format that has\n            a separate limit. This is the enforced limit. The\n            <code>PackedPolicySize</code> response element indicates by\n            percentage how close the policy is to the upper size limit.</p>\n            </note>\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 2048\n            pattern: \"[\\\\u0009\\\\u000A\\\\u000D\\\\u0020-\\\\u00FF]+\"\n        - name: DurationSeconds\n          in: query\n          required: false\n          description: <p>The duration, in seconds, of the role session. The value can\n            range from 900 seconds (15 minutes) up to the maximum session\n            duration setting for the role. This setting can have a value from 1\n            hour to 12 hours. If you specify a value higher than this setting,\n            the operation fails. For example, if you specify a session duration\n            of 12 hours, but your administrator set the maximum session duration\n            to 6 hours, your operation fails. To learn how to view the maximum\n            value for your role, see <a\n            href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html#id_roles_use_view-role-max-session\">View\n            the Maximum Session Duration Setting for a Role</a> in the <i>IAM\n            User Guide</i>.</p> <p>By default, the value is set to\n            <code>3600</code> seconds. </p> <note> <p>The\n            <code>DurationSeconds</code> parameter is separate from the duration\n            of a console session that you might request using the returned\n            credentials. The request to the federation endpoint for a console\n            sign-in token takes a <code>SessionDuration</code> parameter that\n            specifies the maximum length of the console session. For more\n            information, see <a\n            href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_enable-console-custom-url.html\">Creating\n            a URL that Enables Federated Users to Access the AWS Management\n            Console</a> in the <i>IAM User Guide</i>.</p> </note>\n          schema:\n            type: integer\n            minimum: 900\n            maximum: 43200\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - AssumeRoleWithWebIdentity\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2011-06-15\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      x-aws-operation-name: AssumeRoleWithWebIdentity\n      operationId: POST AssumeRoleWithWebIdentity\n      description: \"<p>Returns a set of temporary security credentials for users who have\n        been authenticated in a mobile or web application with a web identity\n        provider. Example providers include Amazon Cognito, Login with Amazon,\n        Facebook, Google, or any OpenID Connect-compatible identity\n        provider.</p> <note> <p>For mobile applications, we recommend that you\n        use Amazon Cognito. You can use Amazon Cognito with the <a\n        href=\\\"http://aws.amazon.com/sdkforios/\\\">AWS SDK for iOS Developer\n        Guide</a> and the <a href=\\\"http://aws.amazon.com/sdkforandroid/\\\">AWS\n        SDK for Android Developer Guide</a> to uniquely identify a user. You can\n        also supply the user with a consistent identity throughout the lifetime\n        of an application.</p> <p>To learn more about Amazon Cognito, see <a\n        href=\\\"https://docs.aws.amazon.com/mobile/sdkforandroid/developerguide/\\\n        cognito-auth.html#d0e840\\\">Amazon Cognito Overview</a> in <i>AWS SDK for\n        Android Developer Guide</i> and <a\n        href=\\\"https://docs.aws.amazon.com/mobile/sdkforios/developerguide/cogn\\\n        ito-auth.html#d0e664\\\">Amazon Cognito Overview</a> in the <i>AWS SDK for\n        iOS Developer Guide</i>.</p> </note> <p>Calling\n        <code>AssumeRoleWithWebIdentity</code> does not require the use of AWS\n        security credentials. Therefore, you can distribute an application (for\n        example, on mobile devices) that requests temporary security credentials\n        without including long-term AWS credentials in the application. You also\n        don't need to deploy server-based proxy services that use long-term AWS\n        credentials. Instead, the identity of the caller is validated by using a\n        token from the web identity provider. For a comparison of\n        <code>AssumeRoleWithWebIdentity</code> with the other API operations\n        that produce temporary credentials, see <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_\\\n        temp_request.html\\\">Requesting Temporary Security Credentials</a> and <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_\\\n        temp_request.html#stsapi_comparison\\\">Comparing the AWS STS API\n        operations</a> in the <i>IAM User Guide</i>.</p> <p>The temporary\n        security credentials returned by this API consist of an access key ID, a\n        secret access key, and a security token. Applications can use these\n        temporary security credentials to sign calls to AWS service API\n        operations.</p> <p>By default, the temporary security credentials\n        created by <code>AssumeRoleWithWebIdentity</code> last for one hour.\n        However, you can use the optional <code>DurationSeconds</code> parameter\n        to specify the duration of your session. You can provide a value from\n        900 seconds (15 minutes) up to the maximum session duration setting for\n        the role. This setting can have a value from 1 hour to 12 hours. To\n        learn how to view the maximum value for your role, see <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.ht\\\n        ml#id_roles_use_view-role-max-session\\\">View the Maximum Session\n        Duration Setting for a Role</a> in the <i>IAM User Guide</i>. The\n        maximum session duration limit applies when you use the\n        <code>AssumeRole*</code> API operations or the <code>assume-role*</code>\n        CLI commands. However the limit does not apply when you use those\n        operations to create a console URL. For more information, see <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.ht\\\n        ml\\\">Using IAM Roles</a> in the <i>IAM User Guide</i>. </p> <p>The\n        temporary security credentials created by\n        <code>AssumeRoleWithWebIdentity</code> can be used to make API calls to\n        any AWS service with the following exception: you cannot call the STS\n        <code>GetFederationToken</code> or <code>GetSessionToken</code> API\n        operations.</p> <p>(Optional) You can pass inline or managed <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies\\\n        .html#policies_session\\\">session policies</a> to this operation. You can\n        pass a single JSON policy document to use as an inline session policy.\n        You can also specify up to 10 managed policies to use as managed session\n        policies. The plain text that you use for both inline and managed\n        session policies shouldn't exceed 2048 characters. Passing policies to\n        this operation returns new temporary credentials. The resulting\n        session's permissions are the intersection of the role's identity-based\n        policy and the session policies. You can use the role's temporary\n        credentials in subsequent AWS API calls to access resources in the\n        account that owns the role. You cannot use session policies to grant\n        more permissions than those allowed by the identity-based policy of the\n        role that is being assumed. For more information, see <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies\\\n        .html#policies_session\\\">Session Policies</a> in the <i>IAM User\n        Guide</i>.</p> <p>Before your application can call\n        <code>AssumeRoleWithWebIdentity</code>, you must have an identity token\n        from a supported identity provider and create a role that the\n        application can assume. The role that your application assumes must\n        trust the identity provider that is associated with the identity token.\n        In other words, the identity provider must be specified in the role's\n        trust policy. </p> <important> <p>Calling\n        <code>AssumeRoleWithWebIdentity</code> can result in an entry in your\n        AWS CloudTrail logs. The entry includes the <a\n        href=\\\"http://openid.net/specs/openid-connect-core-1_0.html#Claims\\\">Su\\\n        bject</a> of the provided Web Identity Token. We recommend that you\n        avoid using any personally identifiable information (PII) in this field.\n        For example, you could instead use a GUID or a pairwise identifier, as\n        <a\n        href=\\\"http://openid.net/specs/openid-connect-core-1_0.html#SubjectIDTy\\\n        pes\\\">suggested in the OIDC specification</a>.</p> </important> <p>For\n        more information about how to use web identity federation and the\n        <code>AssumeRoleWithWebIdentity</code> API, see the following resources:\n        </p> <ul> <li> <p> <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_provid\\\n        ers_oidc_manual.html\\\">Using Web Identity Federation API Operations for\n        Mobile Apps</a> and <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_\\\n        temp_request.html#api_assumerolewithwebidentity\\\">Federation Through a\n        Web-based Identity Provider</a>. </p> </li> <li> <p> <a\n        href=\\\"https://web-identity-federation-playground.s3.amazonaws.com/inde\\\n        x.html\\\"> Web Identity Federation Playground</a>. Walk through the\n        process of authenticating through Login with Amazon, Facebook, or\n        Google, getting temporary security credentials, and then using those\n        credentials to make a request to AWS. </p> </li> <li> <p> <a\n        href=\\\"http://aws.amazon.com/sdkforios/\\\">AWS SDK for iOS Developer\n        Guide</a> and <a href=\\\"http://aws.amazon.com/sdkforandroid/\\\">AWS SDK\n        for Android Developer Guide</a>. These toolkits contain sample apps that\n        show how to invoke the identity providers, and then how to use the\n        information from these providers to get and use temporary security\n        credentials. </p> </li> <li> <p> <a\n        href=\\\"http://aws.amazon.com/articles/web-identity-federation-with-mobi\\\n        le-applications\\\">Web Identity Federation with Mobile Applications</a>.\n        This article discusses web identity federation and shows an example of\n        how to use web identity federation to get access to content in Amazon\n        S3. </p> </li> </ul>\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/AssumeRoleWithWebIdentityResponse\"\n        \"480\":\n          description: MalformedPolicyDocumentException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/MalformedPolicyDocumentException\"\n        \"481\":\n          description: PackedPolicyTooLargeException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PackedPolicyTooLargeException\"\n        \"482\":\n          description: IDPRejectedClaimException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/IDPRejectedClaimException\"\n        \"483\":\n          description: IDPCommunicationErrorException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/IDPCommunicationErrorException\"\n        \"484\":\n          description: InvalidIdentityTokenException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/InvalidIdentityTokenException\"\n        \"485\":\n          description: ExpiredTokenException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ExpiredTokenException\"\n        \"486\":\n          description: RegionDisabledException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/RegionDisabledException\"\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - AssumeRoleWithWebIdentity\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2011-06-15\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                RoleArn:\n                  description: The Amazon Resource Name (ARN) of the role that the caller\n                    is assuming.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                  pattern: \"[\\\\u0009\\\\u000A\\\\u000D\\\\u0020-\\\\u007E\\\\u0085\\\\u00A0-\\\\uD7FF\\\n                    \\\\uE000-\\\\uFFFD\\\\u10000-\\\\u10FFFF]+\"\n                RoleSessionName:\n                  description: \"<p>An identifier for the assumed role session. Typically,\n                    you pass the name or identifier that is associated with the\n                    user who is using your application. That way, the temporary\n                    security credentials that your application will use are\n                    associated with that user. This session name is included as\n                    part of the ARN and assumed role ID in the\n                    <code>AssumedRoleUser</code> response element.</p> <p>The\n                    regex used to validate this parameter is a string of\n                    characters consisting of upper- and lower-case alphanumeric\n                    characters with no spaces. You can also include underscores\n                    or any of the following characters: =,.@-</p>\"\n                  type: string\n                  minLength: 2\n                  maxLength: 64\n                  pattern: \"[\\\\w+=,.@-]*\"\n                WebIdentityToken:\n                  description: \"The OAuth 2.0 access token or OpenID Connect ID token that\n                    is provided by the identity provider. Your application must\n                    get this token by authenticating the user who is using your\n                    application with a web identity provider before the\n                    application makes an <code>AssumeRoleWithWebIdentity</code>\n                    call. \"\n                  type: string\n                  minLength: 4\n                  maxLength: 2048\n                ProviderId:\n                  description: <p>The fully qualified host component of the domain name of\n                    the identity provider.</p> <p>Specify this value only for\n                    OAuth 2.0 access tokens. Currently\n                    <code>www.amazon.com</code> and\n                    <code>graph.facebook.com</code> are the only supported\n                    identity providers for OAuth 2.0 access tokens. Do not\n                    include URL schemes and port numbers.</p> <p>Do not specify\n                    this value for OpenID Connect ID tokens.</p>\n                  type: string\n                  minLength: 4\n                  maxLength: 2048\n                PolicyArns:\n                  description: <p>The Amazon Resource Names (ARNs) of the IAM managed\n                    policies that you want to use as managed session policies.\n                    The policies must exist in the same account as the role.</p>\n                    <p>This parameter is optional. You can provide up to 10\n                    managed policy ARNs. However, the plain text that you use\n                    for both inline and managed session policies shouldn't\n                    exceed 2048 characters. For more information about ARNs, see\n                    <a\n                    href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\n                    Resource Names (ARNs) and AWS Service Namespaces</a> in the\n                    AWS General Reference.</p> <note> <p>The characters in this\n                    parameter count towards the 2048 character session policy\n                    guideline. However, an AWS conversion compresses the session\n                    policies into a packed binary format that has a separate\n                    limit. This is the enforced limit. The\n                    <code>PackedPolicySize</code> response element indicates by\n                    percentage how close the policy is to the upper size\n                    limit.</p> </note> <p>Passing policies to this operation\n                    returns new temporary credentials. The resulting session's\n                    permissions are the intersection of the role's\n                    identity-based policy and the session policies. You can use\n                    the role's temporary credentials in subsequent AWS API calls\n                    to access resources in the account that owns the role. You\n                    cannot use session policies to grant more permissions than\n                    those allowed by the identity-based policy of the role that\n                    is being assumed. For more information, see <a\n                    href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">Session\n                    Policies</a> in the <i>IAM User Guide</i>.</p>\n                  type: array\n                  items:\n                    type: string\n                Policy:\n                  description: <p>An IAM policy in JSON format that you want to use as an\n                    inline session policy.</p> <p>This parameter is optional.\n                    Passing policies to this operation returns new temporary\n                    credentials. The resulting session's permissions are the\n                    intersection of the role's identity-based policy and the\n                    session policies. You can use the role's temporary\n                    credentials in subsequent AWS API calls to access resources\n                    in the account that owns the role. You cannot use session\n                    policies to grant more permissions than those allowed by the\n                    identity-based policy of the role that is being assumed. For\n                    more information, see <a\n                    href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">Session\n                    Policies</a> in the <i>IAM User Guide</i>.</p> <p>The plain\n                    text that you use for both inline and managed session\n                    policies shouldn't exceed 2048 characters. The JSON policy\n                    characters can be any ASCII character from the space\n                    character to the end of the valid character list (\\u0020\n                    through \\u00FF). It can also include the tab (\\u0009),\n                    linefeed (\\u000A), and carriage return (\\u000D)\n                    characters.</p> <note> <p>The characters in this parameter\n                    count towards the 2048 character session policy guideline.\n                    However, an AWS conversion compresses the session policies\n                    into a packed binary format that has a separate limit. This\n                    is the enforced limit. The <code>PackedPolicySize</code>\n                    response element indicates by percentage how close the\n                    policy is to the upper size limit.</p> </note>\n                  type: string\n                  minLength: 1\n                  maxLength: 2048\n                  pattern: \"[\\\\u0009\\\\u000A\\\\u000D\\\\u0020-\\\\u00FF]+\"\n                DurationSeconds:\n                  description: <p>The duration, in seconds, of the role session. The value\n                    can range from 900 seconds (15 minutes) up to the maximum\n                    session duration setting for the role. This setting can have\n                    a value from 1 hour to 12 hours. If you specify a value\n                    higher than this setting, the operation fails. For example,\n                    if you specify a session duration of 12 hours, but your\n                    administrator set the maximum session duration to 6 hours,\n                    your operation fails. To learn how to view the maximum value\n                    for your role, see <a\n                    href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html#id_roles_use_view-role-max-session\">View\n                    the Maximum Session Duration Setting for a Role</a> in the\n                    <i>IAM User Guide</i>.</p> <p>By default, the value is set\n                    to <code>3600</code> seconds. </p> <note> <p>The\n                    <code>DurationSeconds</code> parameter is separate from the\n                    duration of a console session that you might request using\n                    the returned credentials. The request to the federation\n                    endpoint for a console sign-in token takes a\n                    <code>SessionDuration</code> parameter that specifies the\n                    maximum length of the console session. For more information,\n                    see <a\n                    href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_enable-console-custom-url.html\">Creating\n                    a URL that Enables Federated Users to Access the AWS\n                    Management Console</a> in the <i>IAM User Guide</i>.</p>\n                    </note>\n                  type: integer\n                  minimum: 900\n                  maximum: 43200\n              required:\n                - RoleArn\n                - RoleSessionName\n                - WebIdentityToken\n  /#Action=DecodeAuthorizationMessage:\n    get:\n      x-aws-operation-name: DecodeAuthorizationMessage\n      operationId: GET DecodeAuthorizationMessage\n      description: <p>Decodes additional information about the authorization status of a\n        request from an encoded message returned in response to an AWS\n        request.</p> <p>For example, if a user is not authorized to perform an\n        operation that he or she has requested, the request returns a\n        <code>Client.UnauthorizedOperation</code> response (an HTTP 403\n        response). Some AWS operations additionally return an encoded message\n        that can provide details about this authorization failure. </p> <note>\n        <p>Only certain AWS operations return an encoded authorization message.\n        The documentation for an individual operation indicates whether that\n        operation returns an encoded message in addition to returning an HTTP\n        code.</p> </note> <p>The message is encoded because the details of the\n        authorization status can constitute privileged information that the user\n        who requested the operation should not see. To decode an authorization\n        status message, a user must be granted permissions via an IAM policy to\n        request the <code>DecodeAuthorizationMessage</code>\n        (<code>sts:DecodeAuthorizationMessage</code>) action. </p> <p>The\n        decoded message includes the following type of information:</p> <ul>\n        <li> <p>Whether the request was denied due to an explicit deny or due to\n        the absence of an explicit allow. For more information, see <a\n        href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html#policy-eval-denyallow\">Determining\n        Whether a Request is Allowed or Denied</a> in the <i>IAM User Guide</i>.\n        </p> </li> <li> <p>The principal who made the request.</p> </li> <li>\n        <p>The requested action.</p> </li> <li> <p>The requested resource.</p>\n        </li> <li> <p>The values of condition keys in the context of the user's\n        request.</p> </li> </ul>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/DecodeAuthorizationMessageResponse\"\n        \"480\":\n          description: InvalidAuthorizationMessageException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/InvalidAuthorizationMessageException\"\n      parameters:\n        - name: EncodedMessage\n          in: query\n          required: true\n          description: The encoded message that was returned with the response.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 10240\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DecodeAuthorizationMessage\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2011-06-15\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      x-aws-operation-name: DecodeAuthorizationMessage\n      operationId: POST DecodeAuthorizationMessage\n      description: <p>Decodes additional information about the authorization status of a\n        request from an encoded message returned in response to an AWS\n        request.</p> <p>For example, if a user is not authorized to perform an\n        operation that he or she has requested, the request returns a\n        <code>Client.UnauthorizedOperation</code> response (an HTTP 403\n        response). Some AWS operations additionally return an encoded message\n        that can provide details about this authorization failure. </p> <note>\n        <p>Only certain AWS operations return an encoded authorization message.\n        The documentation for an individual operation indicates whether that\n        operation returns an encoded message in addition to returning an HTTP\n        code.</p> </note> <p>The message is encoded because the details of the\n        authorization status can constitute privileged information that the user\n        who requested the operation should not see. To decode an authorization\n        status message, a user must be granted permissions via an IAM policy to\n        request the <code>DecodeAuthorizationMessage</code>\n        (<code>sts:DecodeAuthorizationMessage</code>) action. </p> <p>The\n        decoded message includes the following type of information:</p> <ul>\n        <li> <p>Whether the request was denied due to an explicit deny or due to\n        the absence of an explicit allow. For more information, see <a\n        href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html#policy-eval-denyallow\">Determining\n        Whether a Request is Allowed or Denied</a> in the <i>IAM User Guide</i>.\n        </p> </li> <li> <p>The principal who made the request.</p> </li> <li>\n        <p>The requested action.</p> </li> <li> <p>The requested resource.</p>\n        </li> <li> <p>The values of condition keys in the context of the user's\n        request.</p> </li> </ul>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/DecodeAuthorizationMessageResponse\"\n        \"480\":\n          description: InvalidAuthorizationMessageException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/InvalidAuthorizationMessageException\"\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - DecodeAuthorizationMessage\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2011-06-15\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                EncodedMessage:\n                  description: The encoded message that was returned with the response.\n                  type: string\n                  minLength: 1\n                  maxLength: 10240\n              required:\n                - EncodedMessage\n  /#Action=GetAccessKeyInfo:\n    get:\n      x-aws-operation-name: GetAccessKeyInfo\n      operationId: GET GetAccessKeyInfo\n      description: \"<p>Returns the account identifier for the specified access key ID.</p>\n        <p>Access keys consist of two parts: an access key ID (for example,\n        <code>AKIAIOSFODNN7EXAMPLE</code>) and a secret access key (for example,\n        <code>wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY</code>). For more\n        information about access keys, see <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_\\\n        access-keys.html\\\">Managing Access Keys for IAM Users</a> in the <i>IAM\n        User Guide</i>.</p> <p>When you pass an access key ID to this operation,\n        it returns the ID of the AWS account to which the keys belong. Access\n        key IDs beginning with <code>AKIA</code> are long-term credentials for\n        an IAM user or the AWS account root user. Access key IDs beginning with\n        <code>ASIA</code> are temporary credentials that are created using STS\n        operations. If the account in the response belongs to you, you can sign\n        in as the root user and review your root user access keys. Then, you can\n        pull a <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_\\\n        getting-report.html\\\">credentials report</a> to learn which IAM user\n        owns the keys. To learn who requested the temporary credentials for an\n        <code>ASIA</code> access key, view the STS events in your <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/cloudtrail-inte\\\n        gration.html\\\">CloudTrail logs</a>.</p> <p>This operation does not\n        indicate the state of the access key. The key might be active, inactive,\n        or deleted. Active keys might not have permissions to perform an\n        operation. Providing a deleted access key might return an error that the\n        key doesn't exist.</p>\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/GetAccessKeyInfoResponse\"\n      parameters:\n        - name: AccessKeyId\n          in: query\n          required: true\n          description: <p>The identifier of an access key.</p> <p>This parameter allows\n            (through its regex pattern) a string of characters that can consist\n            of any upper- or lowercased letter or digit.</p>\n          schema:\n            type: string\n            minLength: 16\n            maxLength: 128\n            pattern: \"[\\\\w]*\"\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - GetAccessKeyInfo\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2011-06-15\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      x-aws-operation-name: GetAccessKeyInfo\n      operationId: POST GetAccessKeyInfo\n      description: \"<p>Returns the account identifier for the specified access key ID.</p>\n        <p>Access keys consist of two parts: an access key ID (for example,\n        <code>AKIAIOSFODNN7EXAMPLE</code>) and a secret access key (for example,\n        <code>wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY</code>). For more\n        information about access keys, see <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_\\\n        access-keys.html\\\">Managing Access Keys for IAM Users</a> in the <i>IAM\n        User Guide</i>.</p> <p>When you pass an access key ID to this operation,\n        it returns the ID of the AWS account to which the keys belong. Access\n        key IDs beginning with <code>AKIA</code> are long-term credentials for\n        an IAM user or the AWS account root user. Access key IDs beginning with\n        <code>ASIA</code> are temporary credentials that are created using STS\n        operations. If the account in the response belongs to you, you can sign\n        in as the root user and review your root user access keys. Then, you can\n        pull a <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_\\\n        getting-report.html\\\">credentials report</a> to learn which IAM user\n        owns the keys. To learn who requested the temporary credentials for an\n        <code>ASIA</code> access key, view the STS events in your <a\n        href=\\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/cloudtrail-inte\\\n        gration.html\\\">CloudTrail logs</a>.</p> <p>This operation does not\n        indicate the state of the access key. The key might be active, inactive,\n        or deleted. Active keys might not have permissions to perform an\n        operation. Providing a deleted access key might return an error that the\n        key doesn't exist.</p>\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/GetAccessKeyInfoResponse\"\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - GetAccessKeyInfo\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2011-06-15\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                AccessKeyId:\n                  description: <p>The identifier of an access key.</p> <p>This parameter\n                    allows (through its regex pattern) a string of characters\n                    that can consist of any upper- or lowercased letter or\n                    digit.</p>\n                  type: string\n                  minLength: 16\n                  maxLength: 128\n                  pattern: \"[\\\\w]*\"\n              required:\n                - AccessKeyId\n  /#Action=GetCallerIdentity:\n    get:\n      x-aws-operation-name: GetCallerIdentity\n      operationId: GET GetCallerIdentity\n      description: '<p>Returns details about the IAM user or role whose credentials are\n        used to call the operation.</p> <note> <p>No permissions are required to\n        perform this operation. If an administrator adds a policy to your IAM\n        user or role that explicitly denies access to the\n        <code>sts:GetCallerIdentity</code> action, you can still perform this\n        operation. Permissions are not required because the same information is\n        returned when an IAM user or role is denied access. To view an example\n        response, see <a\n        href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_access-denied-delete-mfa\">I\n        Am Not Authorized to Perform: iam:DeleteVirtualMFADevice</a>.</p>\n        </note>'\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/GetCallerIdentityResponse\"\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - GetCallerIdentity\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2011-06-15\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      x-aws-operation-name: GetCallerIdentity\n      operationId: POST GetCallerIdentity\n      description: '<p>Returns details about the IAM user or role whose credentials are\n        used to call the operation.</p> <note> <p>No permissions are required to\n        perform this operation. If an administrator adds a policy to your IAM\n        user or role that explicitly denies access to the\n        <code>sts:GetCallerIdentity</code> action, you can still perform this\n        operation. Permissions are not required because the same information is\n        returned when an IAM user or role is denied access. To view an example\n        response, see <a\n        href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_access-denied-delete-mfa\">I\n        Am Not Authorized to Perform: iam:DeleteVirtualMFADevice</a>.</p>\n        </note>'\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/GetCallerIdentityResponse\"\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - GetCallerIdentity\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2011-06-15\n  /#Action=GetFederationToken:\n    get:\n      x-aws-operation-name: GetFederationToken\n      operationId: GET GetFederationToken\n      description: <p>Returns a set of temporary security credentials (consisting of an\n        access key ID, a secret access key, and a security token) for a\n        federated user. A typical use is in a proxy application that gets\n        temporary security credentials on behalf of distributed applications\n        inside a corporate network. You must call the\n        <code>GetFederationToken</code> operation using the long-term security\n        credentials of an IAM user. As a result, this call is appropriate in\n        contexts where those credentials can be safely stored, usually in a\n        server-based application. For a comparison of\n        <code>GetFederationToken</code> with the other API operations that\n        produce temporary credentials, see <a\n        href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html\">Requesting\n        Temporary Security Credentials</a> and <a\n        href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison\">Comparing\n        the AWS STS API operations</a> in the <i>IAM User Guide</i>.</p> <note>\n        <p>You can create a mobile-based or browser-based app that can\n        authenticate users using a web identity provider like Login with Amazon,\n        Facebook, Google, or an OpenID Connect-compatible identity provider. In\n        this case, we recommend that you use <a\n        href=\"http://aws.amazon.com/cognito/\">Amazon Cognito</a> or\n        <code>AssumeRoleWithWebIdentity</code>. For more information, see <a\n        href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_assumerolewithwebidentity\">Federation\n        Through a Web-based Identity Provider</a>.</p> </note> <p>You can also\n        call <code>GetFederationToken</code> using the security credentials of\n        an AWS account root user, but we do not recommend it. Instead, we\n        recommend that you create an IAM user for the purpose of the proxy\n        application. Then attach a policy to the IAM user that limits federated\n        users to only the actions and resources that they need to access. For\n        more information, see <a\n        href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html\">IAM\n        Best Practices</a> in the <i>IAM User Guide</i>. </p> <p>The temporary\n        credentials are valid for the specified duration, from 900 seconds (15\n        minutes) up to a maximum of 129,600 seconds (36 hours). The default is\n        43,200 seconds (12 hours). Temporary credentials that are obtained by\n        using AWS account root user credentials have a maximum duration of 3,600\n        seconds (1 hour).</p> <p>The temporary security credentials created by\n        <code>GetFederationToken</code> can be used to make API calls to any AWS\n        service with the following exceptions:</p> <ul> <li> <p>You cannot use\n        these credentials to call any IAM API operations.</p> </li> <li> <p>You\n        cannot call any STS API operations except\n        <code>GetCallerIdentity</code>.</p> </li> </ul> <p> <b>Permissions</b>\n        </p> <p>You must pass an inline or managed <a\n        href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">session\n        policy</a> to this operation. You can pass a single JSON policy document\n        to use as an inline session policy. You can also specify up to 10\n        managed policies to use as managed session policies. The plain text that\n        you use for both inline and managed session policies shouldn't exceed\n        2048 characters.</p> <p>Though the session policy parameters are\n        optional, if you do not pass a policy, then the resulting federated user\n        session has no permissions. The only exception is when the credentials\n        are used to access a resource that has a resource-based policy that\n        specifically references the federated user session in the\n        <code>Principal</code> element of the policy. When you pass session\n        policies, the session permissions are the intersection of the IAM user\n        policies and the session policies that you pass. This gives you a way to\n        further restrict the permissions for a federated user. You cannot use\n        session policies to grant more permissions than those that are defined\n        in the permissions policy of the IAM user. For more information, see <a\n        href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">Session\n        Policies</a> in the <i>IAM User Guide</i>. For information about using\n        <code>GetFederationToken</code> to create temporary security\n        credentials, see <a\n        href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_getfederationtoken\">GetFederationToken—Federation\n        Through a Custom Identity Broker</a>. </p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/GetFederationTokenResponse\"\n        \"480\":\n          description: MalformedPolicyDocumentException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/MalformedPolicyDocumentException\"\n        \"481\":\n          description: PackedPolicyTooLargeException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PackedPolicyTooLargeException\"\n        \"482\":\n          description: RegionDisabledException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/RegionDisabledException\"\n      parameters:\n        - name: Name\n          in: query\n          required: true\n          description: \"<p>The name of the federated user. The name is used as an\n            identifier for the temporary security credentials (such as\n            <code>Bob</code>). For example, you can reference the federated user\n            name in a resource-based policy, such as in an Amazon S3 bucket\n            policy.</p> <p>The regex used to validate this parameter is a string\n            of characters consisting of upper- and lower-case alphanumeric\n            characters with no spaces. You can also include underscores or any\n            of the following characters: =,.@-</p>\"\n          schema:\n            type: string\n            minLength: 2\n            maxLength: 32\n            pattern: \"[\\\\w+=,.@-]*\"\n        - name: Policy\n          in: query\n          required: false\n          description: <p>An IAM policy in JSON format that you want to use as an inline\n            session policy.</p> <p>You must pass an inline or managed <a\n            href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">session\n            policy</a> to this operation. You can pass a single JSON policy\n            document to use as an inline session policy. You can also specify up\n            to 10 managed policies to use as managed session policies.</p>\n            <p>This parameter is optional. However, if you do not pass any\n            session policies, then the resulting federated user session has no\n            permissions. The only exception is when the credentials are used to\n            access a resource that has a resource-based policy that specifically\n            references the federated user session in the <code>Principal</code>\n            element of the policy.</p> <p>When you pass session policies, the\n            session permissions are the intersection of the IAM user policies\n            and the session policies that you pass. This gives you a way to\n            further restrict the permissions for a federated user. You cannot\n            use session policies to grant more permissions than those that are\n            defined in the permissions policy of the IAM user. For more\n            information, see <a\n            href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">Session\n            Policies</a> in the <i>IAM User Guide</i>.</p> <p>The plain text\n            that you use for both inline and managed session policies shouldn't\n            exceed 2048 characters. The JSON policy characters can be any ASCII\n            character from the space character to the end of the valid character\n            list (\\u0020 through \\u00FF). It can also include the tab (\\u0009),\n            linefeed (\\u000A), and carriage return (\\u000D) characters.</p>\n            <note> <p>The characters in this parameter count towards the 2048\n            character session policy guideline. However, an AWS conversion\n            compresses the session policies into a packed binary format that has\n            a separate limit. This is the enforced limit. The\n            <code>PackedPolicySize</code> response element indicates by\n            percentage how close the policy is to the upper size limit.</p>\n            </note>\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 2048\n            pattern: \"[\\\\u0009\\\\u000A\\\\u000D\\\\u0020-\\\\u00FF]+\"\n        - name: PolicyArns\n          in: query\n          required: false\n          description: <p>The Amazon Resource Names (ARNs) of the IAM managed policies that\n            you want to use as a managed session policy. The policies must exist\n            in the same account as the IAM user that is requesting federated\n            access.</p> <p>You must pass an inline or managed <a\n            href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">session\n            policy</a> to this operation. You can pass a single JSON policy\n            document to use as an inline session policy. You can also specify up\n            to 10 managed policies to use as managed session policies. The plain\n            text that you use for both inline and managed session policies\n            shouldn't exceed 2048 characters. You can provide up to 10 managed\n            policy ARNs. For more information about ARNs, see <a\n            href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\n            Resource Names (ARNs) and AWS Service Namespaces</a> in the AWS\n            General Reference.</p> <p>This parameter is optional. However, if\n            you do not pass any session policies, then the resulting federated\n            user session has no permissions. The only exception is when the\n            credentials are used to access a resource that has a resource-based\n            policy that specifically references the federated user session in\n            the <code>Principal</code> element of the policy.</p> <p>When you\n            pass session policies, the session permissions are the intersection\n            of the IAM user policies and the session policies that you pass.\n            This gives you a way to further restrict the permissions for a\n            federated user. You cannot use session policies to grant more\n            permissions than those that are defined in the permissions policy of\n            the IAM user. For more information, see <a\n            href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">Session\n            Policies</a> in the <i>IAM User Guide</i>.</p> <note> <p>The\n            characters in this parameter count towards the 2048 character\n            session policy guideline. However, an AWS conversion compresses the\n            session policies into a packed binary format that has a separate\n            limit. This is the enforced limit. The <code>PackedPolicySize</code>\n            response element indicates by percentage how close the policy is to\n            the upper size limit.</p> </note>\n          schema:\n            type: array\n            items:\n              type: string\n        - name: DurationSeconds\n          in: query\n          required: false\n          description: The duration, in seconds, that the session should last. Acceptable\n            durations for federation sessions range from 900 seconds (15\n            minutes) to 129,600 seconds (36 hours), with 43,200 seconds (12\n            hours) as the default. Sessions obtained using AWS account root user\n            credentials are restricted to a maximum of 3,600 seconds (one hour).\n            If the specified duration is longer than one hour, the session\n            obtained by using root user credentials defaults to one hour.\n          schema:\n            type: integer\n            minimum: 900\n            maximum: 129600\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - GetFederationToken\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2011-06-15\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      x-aws-operation-name: GetFederationToken\n      operationId: POST GetFederationToken\n      description: <p>Returns a set of temporary security credentials (consisting of an\n        access key ID, a secret access key, and a security token) for a\n        federated user. A typical use is in a proxy application that gets\n        temporary security credentials on behalf of distributed applications\n        inside a corporate network. You must call the\n        <code>GetFederationToken</code> operation using the long-term security\n        credentials of an IAM user. As a result, this call is appropriate in\n        contexts where those credentials can be safely stored, usually in a\n        server-based application. For a comparison of\n        <code>GetFederationToken</code> with the other API operations that\n        produce temporary credentials, see <a\n        href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html\">Requesting\n        Temporary Security Credentials</a> and <a\n        href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison\">Comparing\n        the AWS STS API operations</a> in the <i>IAM User Guide</i>.</p> <note>\n        <p>You can create a mobile-based or browser-based app that can\n        authenticate users using a web identity provider like Login with Amazon,\n        Facebook, Google, or an OpenID Connect-compatible identity provider. In\n        this case, we recommend that you use <a\n        href=\"http://aws.amazon.com/cognito/\">Amazon Cognito</a> or\n        <code>AssumeRoleWithWebIdentity</code>. For more information, see <a\n        href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_assumerolewithwebidentity\">Federation\n        Through a Web-based Identity Provider</a>.</p> </note> <p>You can also\n        call <code>GetFederationToken</code> using the security credentials of\n        an AWS account root user, but we do not recommend it. Instead, we\n        recommend that you create an IAM user for the purpose of the proxy\n        application. Then attach a policy to the IAM user that limits federated\n        users to only the actions and resources that they need to access. For\n        more information, see <a\n        href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html\">IAM\n        Best Practices</a> in the <i>IAM User Guide</i>. </p> <p>The temporary\n        credentials are valid for the specified duration, from 900 seconds (15\n        minutes) up to a maximum of 129,600 seconds (36 hours). The default is\n        43,200 seconds (12 hours). Temporary credentials that are obtained by\n        using AWS account root user credentials have a maximum duration of 3,600\n        seconds (1 hour).</p> <p>The temporary security credentials created by\n        <code>GetFederationToken</code> can be used to make API calls to any AWS\n        service with the following exceptions:</p> <ul> <li> <p>You cannot use\n        these credentials to call any IAM API operations.</p> </li> <li> <p>You\n        cannot call any STS API operations except\n        <code>GetCallerIdentity</code>.</p> </li> </ul> <p> <b>Permissions</b>\n        </p> <p>You must pass an inline or managed <a\n        href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">session\n        policy</a> to this operation. You can pass a single JSON policy document\n        to use as an inline session policy. You can also specify up to 10\n        managed policies to use as managed session policies. The plain text that\n        you use for both inline and managed session policies shouldn't exceed\n        2048 characters.</p> <p>Though the session policy parameters are\n        optional, if you do not pass a policy, then the resulting federated user\n        session has no permissions. The only exception is when the credentials\n        are used to access a resource that has a resource-based policy that\n        specifically references the federated user session in the\n        <code>Principal</code> element of the policy. When you pass session\n        policies, the session permissions are the intersection of the IAM user\n        policies and the session policies that you pass. This gives you a way to\n        further restrict the permissions for a federated user. You cannot use\n        session policies to grant more permissions than those that are defined\n        in the permissions policy of the IAM user. For more information, see <a\n        href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">Session\n        Policies</a> in the <i>IAM User Guide</i>. For information about using\n        <code>GetFederationToken</code> to create temporary security\n        credentials, see <a\n        href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_getfederationtoken\">GetFederationToken—Federation\n        Through a Custom Identity Broker</a>. </p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/GetFederationTokenResponse\"\n        \"480\":\n          description: MalformedPolicyDocumentException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/MalformedPolicyDocumentException\"\n        \"481\":\n          description: PackedPolicyTooLargeException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/PackedPolicyTooLargeException\"\n        \"482\":\n          description: RegionDisabledException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/RegionDisabledException\"\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - GetFederationToken\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2011-06-15\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                Name:\n                  description: \"<p>The name of the federated user. The name is used as an\n                    identifier for the temporary security credentials (such as\n                    <code>Bob</code>). For example, you can reference the\n                    federated user name in a resource-based policy, such as in\n                    an Amazon S3 bucket policy.</p> <p>The regex used to\n                    validate this parameter is a string of characters consisting\n                    of upper- and lower-case alphanumeric characters with no\n                    spaces. You can also include underscores or any of the\n                    following characters: =,.@-</p>\"\n                  type: string\n                  minLength: 2\n                  maxLength: 32\n                  pattern: \"[\\\\w+=,.@-]*\"\n                Policy:\n                  description: <p>An IAM policy in JSON format that you want to use as an\n                    inline session policy.</p> <p>You must pass an inline or\n                    managed <a\n                    href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">session\n                    policy</a> to this operation. You can pass a single JSON\n                    policy document to use as an inline session policy. You can\n                    also specify up to 10 managed policies to use as managed\n                    session policies.</p> <p>This parameter is optional.\n                    However, if you do not pass any session policies, then the\n                    resulting federated user session has no permissions. The\n                    only exception is when the credentials are used to access a\n                    resource that has a resource-based policy that specifically\n                    references the federated user session in the\n                    <code>Principal</code> element of the policy.</p> <p>When\n                    you pass session policies, the session permissions are the\n                    intersection of the IAM user policies and the session\n                    policies that you pass. This gives you a way to further\n                    restrict the permissions for a federated user. You cannot\n                    use session policies to grant more permissions than those\n                    that are defined in the permissions policy of the IAM user.\n                    For more information, see <a\n                    href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">Session\n                    Policies</a> in the <i>IAM User Guide</i>.</p> <p>The plain\n                    text that you use for both inline and managed session\n                    policies shouldn't exceed 2048 characters. The JSON policy\n                    characters can be any ASCII character from the space\n                    character to the end of the valid character list (\\u0020\n                    through \\u00FF). It can also include the tab (\\u0009),\n                    linefeed (\\u000A), and carriage return (\\u000D)\n                    characters.</p> <note> <p>The characters in this parameter\n                    count towards the 2048 character session policy guideline.\n                    However, an AWS conversion compresses the session policies\n                    into a packed binary format that has a separate limit. This\n                    is the enforced limit. The <code>PackedPolicySize</code>\n                    response element indicates by percentage how close the\n                    policy is to the upper size limit.</p> </note>\n                  type: string\n                  minLength: 1\n                  maxLength: 2048\n                  pattern: \"[\\\\u0009\\\\u000A\\\\u000D\\\\u0020-\\\\u00FF]+\"\n                PolicyArns:\n                  description: <p>The Amazon Resource Names (ARNs) of the IAM managed\n                    policies that you want to use as a managed session policy.\n                    The policies must exist in the same account as the IAM user\n                    that is requesting federated access.</p> <p>You must pass an\n                    inline or managed <a\n                    href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">session\n                    policy</a> to this operation. You can pass a single JSON\n                    policy document to use as an inline session policy. You can\n                    also specify up to 10 managed policies to use as managed\n                    session policies. The plain text that you use for both\n                    inline and managed session policies shouldn't exceed 2048\n                    characters. You can provide up to 10 managed policy ARNs.\n                    For more information about ARNs, see <a\n                    href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\">Amazon\n                    Resource Names (ARNs) and AWS Service Namespaces</a> in the\n                    AWS General Reference.</p> <p>This parameter is optional.\n                    However, if you do not pass any session policies, then the\n                    resulting federated user session has no permissions. The\n                    only exception is when the credentials are used to access a\n                    resource that has a resource-based policy that specifically\n                    references the federated user session in the\n                    <code>Principal</code> element of the policy.</p> <p>When\n                    you pass session policies, the session permissions are the\n                    intersection of the IAM user policies and the session\n                    policies that you pass. This gives you a way to further\n                    restrict the permissions for a federated user. You cannot\n                    use session policies to grant more permissions than those\n                    that are defined in the permissions policy of the IAM user.\n                    For more information, see <a\n                    href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">Session\n                    Policies</a> in the <i>IAM User Guide</i>.</p> <note> <p>The\n                    characters in this parameter count towards the 2048\n                    character session policy guideline. However, an AWS\n                    conversion compresses the session policies into a packed\n                    binary format that has a separate limit. This is the\n                    enforced limit. The <code>PackedPolicySize</code> response\n                    element indicates by percentage how close the policy is to\n                    the upper size limit.</p> </note>\n                  type: array\n                  items:\n                    type: string\n                DurationSeconds:\n                  description: The duration, in seconds, that the session should last.\n                    Acceptable durations for federation sessions range from 900\n                    seconds (15 minutes) to 129,600 seconds (36 hours), with\n                    43,200 seconds (12 hours) as the default. Sessions obtained\n                    using AWS account root user credentials are restricted to a\n                    maximum of 3,600 seconds (one hour). If the specified\n                    duration is longer than one hour, the session obtained by\n                    using root user credentials defaults to one hour.\n                  type: integer\n                  minimum: 900\n                  maximum: 129600\n              required:\n                - Name\n  /#Action=GetSessionToken:\n    get:\n      x-aws-operation-name: GetSessionToken\n      operationId: GET GetSessionToken\n      description: <p>Returns a set of temporary credentials for an AWS account or IAM\n        user. The credentials consist of an access key ID, a secret access key,\n        and a security token. Typically, you use <code>GetSessionToken</code> if\n        you want to use MFA to protect programmatic calls to specific AWS API\n        operations like Amazon EC2 <code>StopInstances</code>. MFA-enabled IAM\n        users would need to call <code>GetSessionToken</code> and submit an MFA\n        code that is associated with their MFA device. Using the temporary\n        security credentials that are returned from the call, IAM users can then\n        make programmatic calls to API operations that require MFA\n        authentication. If you do not supply a correct MFA code, then the API\n        returns an access denied error. For a comparison of\n        <code>GetSessionToken</code> with the other API operations that produce\n        temporary credentials, see <a\n        href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html\">Requesting\n        Temporary Security Credentials</a> and <a\n        href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison\">Comparing\n        the AWS STS API operations</a> in the <i>IAM User Guide</i>.</p> <p>The\n        <code>GetSessionToken</code> operation must be called by using the\n        long-term AWS security credentials of the AWS account root user or an\n        IAM user. Credentials that are created by IAM users are valid for the\n        duration that you specify. This duration can range from 900 seconds (15\n        minutes) up to a maximum of 129,600 seconds (36 hours), with a default\n        of 43,200 seconds (12 hours). Credentials based on account credentials\n        can range from 900 seconds (15 minutes) up to 3,600 seconds (1 hour),\n        with a default of 1 hour. </p> <p>The temporary security credentials\n        created by <code>GetSessionToken</code> can be used to make API calls to\n        any AWS service with the following exceptions:</p> <ul> <li> <p>You\n        cannot call any IAM API operations unless MFA authentication information\n        is included in the request.</p> </li> <li> <p>You cannot call any STS\n        API <i>except</i> <code>AssumeRole</code> or\n        <code>GetCallerIdentity</code>.</p> </li> </ul> <note> <p>We recommend\n        that you do not call <code>GetSessionToken</code> with AWS account root\n        user credentials. Instead, follow our <a\n        href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#create-iam-users\">best\n        practices</a> by creating one or more IAM users, giving them the\n        necessary permissions, and using IAM users for everyday interaction with\n        AWS. </p> </note> <p>The credentials that are returned by\n        <code>GetSessionToken</code> are based on permissions associated with\n        the user whose credentials were used to call the operation. If\n        <code>GetSessionToken</code> is called using AWS account root user\n        credentials, the temporary credentials have root user permissions.\n        Similarly, if <code>GetSessionToken</code> is called using the\n        credentials of an IAM user, the temporary credentials have the same\n        permissions as the IAM user. </p> <p>For more information about using\n        <code>GetSessionToken</code> to create temporary credentials, go to <a\n        href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_getsessiontoken\">Temporary\n        Credentials for Users in Untrusted Environments</a> in the <i>IAM User\n        Guide</i>. </p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/GetSessionTokenResponse\"\n        \"480\":\n          description: RegionDisabledException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/RegionDisabledException\"\n      parameters:\n        - name: DurationSeconds\n          in: query\n          required: false\n          description: The duration, in seconds, that the credentials should remain valid.\n            Acceptable durations for IAM user sessions range from 900 seconds\n            (15 minutes) to 129,600 seconds (36 hours), with 43,200 seconds (12\n            hours) as the default. Sessions for AWS account owners are\n            restricted to a maximum of 3,600 seconds (one hour). If the duration\n            is longer than one hour, the session for AWS account owners defaults\n            to one hour.\n          schema:\n            type: integer\n            minimum: 900\n            maximum: 129600\n        - name: SerialNumber\n          in: query\n          required: false\n          description: \"<p>The identification number of the MFA device that is associated\n            with the IAM user who is making the <code>GetSessionToken</code>\n            call. Specify this value if the IAM user has a policy that requires\n            MFA authentication. The value is either the serial number for a\n            hardware device (such as <code>GAHT12345678</code>) or an Amazon\n            Resource Name (ARN) for a virtual device (such as\n            <code>arn:aws:iam::123456789012:mfa/user</code>). You can find the\n            device for an IAM user by going to the AWS Management Console and\n            viewing the user's security credentials. </p> <p>The regex used to\n            validate this parameter is a string of characters consisting of\n            upper- and lower-case alphanumeric characters with no spaces. You\n            can also include underscores or any of the following characters:\n            =,.@:/-</p>\"\n          schema:\n            type: string\n            minLength: 9\n            maxLength: 256\n            pattern: \"[\\\\w+=/:,.@-]*\"\n        - name: TokenCode\n          in: query\n          required: false\n          description: <p>The value provided by the MFA device, if MFA is required. If any\n            policy requires the IAM user to submit an MFA code, specify this\n            value. If MFA authentication is required, the user must provide a\n            code when requesting a set of temporary security credentials. A user\n            who fails to provide the code receives an \"access denied\" response\n            when requesting resources that require MFA authentication.</p>\n            <p>The format for this parameter, as described by its regex pattern,\n            is a sequence of six numeric digits.</p>\n          schema:\n            type: string\n            minLength: 6\n            maxLength: 6\n            pattern: \"[\\\\d]*\"\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - GetSessionToken\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2011-06-15\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      x-aws-operation-name: GetSessionToken\n      operationId: POST GetSessionToken\n      description: <p>Returns a set of temporary credentials for an AWS account or IAM\n        user. The credentials consist of an access key ID, a secret access key,\n        and a security token. Typically, you use <code>GetSessionToken</code> if\n        you want to use MFA to protect programmatic calls to specific AWS API\n        operations like Amazon EC2 <code>StopInstances</code>. MFA-enabled IAM\n        users would need to call <code>GetSessionToken</code> and submit an MFA\n        code that is associated with their MFA device. Using the temporary\n        security credentials that are returned from the call, IAM users can then\n        make programmatic calls to API operations that require MFA\n        authentication. If you do not supply a correct MFA code, then the API\n        returns an access denied error. For a comparison of\n        <code>GetSessionToken</code> with the other API operations that produce\n        temporary credentials, see <a\n        href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html\">Requesting\n        Temporary Security Credentials</a> and <a\n        href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison\">Comparing\n        the AWS STS API operations</a> in the <i>IAM User Guide</i>.</p> <p>The\n        <code>GetSessionToken</code> operation must be called by using the\n        long-term AWS security credentials of the AWS account root user or an\n        IAM user. Credentials that are created by IAM users are valid for the\n        duration that you specify. This duration can range from 900 seconds (15\n        minutes) up to a maximum of 129,600 seconds (36 hours), with a default\n        of 43,200 seconds (12 hours). Credentials based on account credentials\n        can range from 900 seconds (15 minutes) up to 3,600 seconds (1 hour),\n        with a default of 1 hour. </p> <p>The temporary security credentials\n        created by <code>GetSessionToken</code> can be used to make API calls to\n        any AWS service with the following exceptions:</p> <ul> <li> <p>You\n        cannot call any IAM API operations unless MFA authentication information\n        is included in the request.</p> </li> <li> <p>You cannot call any STS\n        API <i>except</i> <code>AssumeRole</code> or\n        <code>GetCallerIdentity</code>.</p> </li> </ul> <note> <p>We recommend\n        that you do not call <code>GetSessionToken</code> with AWS account root\n        user credentials. Instead, follow our <a\n        href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#create-iam-users\">best\n        practices</a> by creating one or more IAM users, giving them the\n        necessary permissions, and using IAM users for everyday interaction with\n        AWS. </p> </note> <p>The credentials that are returned by\n        <code>GetSessionToken</code> are based on permissions associated with\n        the user whose credentials were used to call the operation. If\n        <code>GetSessionToken</code> is called using AWS account root user\n        credentials, the temporary credentials have root user permissions.\n        Similarly, if <code>GetSessionToken</code> is called using the\n        credentials of an IAM user, the temporary credentials have the same\n        permissions as the IAM user. </p> <p>For more information about using\n        <code>GetSessionToken</code> to create temporary credentials, go to <a\n        href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_getsessiontoken\">Temporary\n        Credentials for Users in Untrusted Environments</a> in the <i>IAM User\n        Guide</i>. </p>\n      responses:\n        \"200\":\n          description: Success\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/GetSessionTokenResponse\"\n        \"480\":\n          description: RegionDisabledException\n          content:\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/RegionDisabledException\"\n      parameters:\n        - name: Action\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - GetSessionToken\n        - name: Version\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - 2011-06-15\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                DurationSeconds:\n                  description: The duration, in seconds, that the credentials should remain\n                    valid. Acceptable durations for IAM user sessions range from\n                    900 seconds (15 minutes) to 129,600 seconds (36 hours), with\n                    43,200 seconds (12 hours) as the default. Sessions for AWS\n                    account owners are restricted to a maximum of 3,600 seconds\n                    (one hour). If the duration is longer than one hour, the\n                    session for AWS account owners defaults to one hour.\n                  type: integer\n                  minimum: 900\n                  maximum: 129600\n                SerialNumber:\n                  description: \"<p>The identification number of the MFA device that is\n                    associated with the IAM user who is making the\n                    <code>GetSessionToken</code> call. Specify this value if the\n                    IAM user has a policy that requires MFA authentication. The\n                    value is either the serial number for a hardware device\n                    (such as <code>GAHT12345678</code>) or an Amazon Resource\n                    Name (ARN) for a virtual device (such as\n                    <code>arn:aws:iam::123456789012:mfa/user</code>). You can\n                    find the device for an IAM user by going to the AWS\n                    Management Console and viewing the user's security\n                    credentials. </p> <p>The regex used to validate this\n                    parameter is a string of characters consisting of upper- and\n                    lower-case alphanumeric characters with no spaces. You can\n                    also include underscores or any of the following characters:\n                    =,.@:/-</p>\"\n                  type: string\n                  minLength: 9\n                  maxLength: 256\n                  pattern: \"[\\\\w+=/:,.@-]*\"\n                TokenCode:\n                  description: <p>The value provided by the MFA device, if MFA is required.\n                    If any policy requires the IAM user to submit an MFA code,\n                    specify this value. If MFA authentication is required, the\n                    user must provide a code when requesting a set of temporary\n                    security credentials. A user who fails to provide the code\n                    receives an \"access denied\" response when requesting\n                    resources that require MFA authentication.</p> <p>The format\n                    for this parameter, as described by its regex pattern, is a\n                    sequence of six numeric digits.</p>\n                  type: string\n                  minLength: 6\n                  maxLength: 6\n                  pattern: \"[\\\\d]*\"\nservers:\n  - url: https://sts.amazonaws.com\n    variables: {}\n    description: The general AWS STS multi-region endpoint\n  - url: http://sts.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-gov-west-1\n          - us-gov-east-1\n        default: us-gov-west-1\n    description: The AWS STS endpoint for AWS GovCloud (US) and AWS GovCloud (US-East)\n  - url: https://sts.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-gov-west-1\n          - us-gov-east-1\n        default: us-gov-west-1\n    description: The AWS STS endpoint for AWS GovCloud (US) and AWS GovCloud (US-East)\n  - url: http://sts.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS STS endpoint for China (Beijing) and China (Ningxia)\n  - url: https://sts.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS STS endpoint for China (Beijing) and China (Ningxia)\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      required: false\n      schema:\n        type: string\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    AssumeRoleResponse:\n      type: object\n      example:\n        AssumedRoleUser:\n          Arn: arn:aws:sts::123456789012:assumed-role/demo/Bob\n          AssumedRoleId: ARO123EXAMPLE123:Bob\n        Credentials:\n          AccessKeyId: AKIAIOSFODNN7EXAMPLE\n          Expiration: 2011-07-15T23:28:33.359Z\n          SecretAccessKey: wJalrXUtnFEMI/K7MDENG/bPxRfiCYzEXAMPLEKEY\n          SessionToken: AQoDYXdzEPT//////////wEXAMPLEtc764bNrC9SAPBSM22wDOk4x4HIZ8j4FZTwdQWLWsKWHGBuFqwAeMicRXmxfpSPfIeoIYRqTflfKD8YUuwthAx7mSEI/qkPpKPi/kMcGdQrmGdeehM4IC1NtBmUpp2wUE8phUZampKsburEDy0KPkyQDYwT7WZ0wq5VSXDvp75YU9HFvlRd8Tx6q6fE8YQcHNVXAkiY9q6d+xo0rKwT38xVqr7ZD0u0iPPkUL64lIZbqBAz+scqKmlzm8FDrypNC9Yjc8fPOLn9FX9KSYvKTr4rvx3iSIlTJabIQwj2ICCR/oLxBA==\n        PackedPolicySize: 6\n      properties:\n        Credentials:\n          $ref: \"#/components/schemas/Credentials\"\n        AssumedRoleUser:\n          $ref: \"#/components/schemas/AssumedRoleUser\"\n        PackedPolicySize:\n          $ref: \"#/components/schemas/nonNegativeIntegerType\"\n      description: \"Contains the response to a successful <a>AssumeRole</a> request,\n        including temporary AWS credentials that can be used to make AWS\n        requests. \"\n    PolicyDescriptorType:\n      type: object\n      properties:\n        arn:\n          $ref: \"#/components/schemas/arnType\"\n      description: A reference to the IAM managed policy that is passed as a session policy\n        for a role session or a federated user session.\n    MalformedPolicyDocumentException: {}\n    PackedPolicyTooLargeException: {}\n    RegionDisabledException: {}\n    AssumeRoleWithSAMLResponse:\n      type: object\n      properties:\n        Credentials:\n          $ref: \"#/components/schemas/Credentials\"\n        AssumedRoleUser:\n          $ref: \"#/components/schemas/AssumedRoleUser\"\n        PackedPolicySize:\n          $ref: \"#/components/schemas/nonNegativeIntegerType\"\n        Subject:\n          $ref: \"#/components/schemas/Subject\"\n        SubjectType:\n          $ref: \"#/components/schemas/SubjectType\"\n        Issuer:\n          $ref: \"#/components/schemas/Issuer\"\n        Audience:\n          $ref: \"#/components/schemas/Audience\"\n        NameQualifier:\n          $ref: \"#/components/schemas/NameQualifier\"\n      description: \"Contains the response to a successful <a>AssumeRoleWithSAML</a>\n        request, including temporary AWS credentials that can be used to make\n        AWS requests. \"\n    IDPRejectedClaimException: {}\n    InvalidIdentityTokenException: {}\n    ExpiredTokenException: {}\n    AssumeRoleWithWebIdentityResponse:\n      type: object\n      example:\n        AssumedRoleUser:\n          Arn: arn:aws:sts::123456789012:assumed-role/FederatedWebIdentityRole/app1\n          AssumedRoleId: AROACLKWSDQRAOEXAMPLE:app1\n        Audience: client.5498841531868486423.1548@apps.example.com\n        Credentials:\n          AccessKeyId: AKIAIOSFODNN7EXAMPLE\n          Expiration: 2014-10-24T23:00:23Z\n          SecretAccessKey: wJalrXUtnFEMI/K7MDENG/bPxRfiCYzEXAMPLEKEY\n          SessionToken: AQoDYXdzEE0a8ANXXXXXXXXNO1ewxE5TijQyp+IEXAMPLE\n        PackedPolicySize: 123\n        Provider: www.amazon.com\n        SubjectFromWebIdentityToken: amzn1.account.AF6RHO7KZU5XRVQJGXK6HEXAMPLE\n      properties:\n        Credentials:\n          $ref: \"#/components/schemas/Credentials\"\n        SubjectFromWebIdentityToken:\n          $ref: \"#/components/schemas/webIdentitySubjectType\"\n        AssumedRoleUser:\n          $ref: \"#/components/schemas/AssumedRoleUser\"\n        PackedPolicySize:\n          $ref: \"#/components/schemas/nonNegativeIntegerType\"\n        Provider:\n          $ref: \"#/components/schemas/Issuer\"\n        Audience:\n          $ref: \"#/components/schemas/Audience\"\n      description: \"Contains the response to a successful <a>AssumeRoleWithWebIdentity</a>\n        request, including temporary AWS credentials that can be used to make\n        AWS requests. \"\n    IDPCommunicationErrorException: {}\n    DecodeAuthorizationMessageResponse:\n      type: object\n      example:\n        DecodedMessage: '{\"allowed\": \"false\",\"explicitDeny\": \"false\",\"matchedStatements\":\n          \"\",\"failures\": \"\",\"context\": {\"principal\": {\"id\":\n          \"AIDACKCEVSQ6C2EXAMPLE\",\"name\": \"Bob\",\"arn\":\n          \"arn:aws:iam::123456789012:user/Bob\"},\"action\":\n          \"ec2:StopInstances\",\"resource\":\n          \"arn:aws:ec2:us-east-1:123456789012:instance/i-dd01c9bd\",\"conditions\":\n          [{\"item\": {\"key\": \"ec2:Tenancy\",\"values\": [\"default\"]},{\"item\":\n          {\"key\": \"ec2:ResourceTag/elasticbeanstalk:environment-name\",\"values\":\n          [\"Default-Environment\"]}},(Additional items ...)]}}'\n      properties:\n        DecodedMessage:\n          $ref: \"#/components/schemas/decodedMessageType\"\n      description: A document that contains additional information about the authorization\n        status of a request from an encoded message that is returned in response\n        to an AWS request.\n    InvalidAuthorizationMessageException: {}\n    GetAccessKeyInfoResponse:\n      type: object\n      properties:\n        Account:\n          $ref: \"#/components/schemas/accountType\"\n    GetCallerIdentityResponse:\n      type: object\n      example:\n        Account: \"123456789012\"\n        Arn: arn:aws:sts::123456789012:federated-user/my-federated-user-name\n        UserId: 123456789012:my-federated-user-name\n      properties:\n        UserId:\n          $ref: \"#/components/schemas/userIdType\"\n        Account:\n          $ref: \"#/components/schemas/accountType\"\n        Arn:\n          $ref: \"#/components/schemas/arnType\"\n      description: Contains the response to a successful <a>GetCallerIdentity</a> request,\n        including information about the entity making the request.\n    GetFederationTokenResponse:\n      type: object\n      example:\n        Credentials:\n          AccessKeyId: AKIAIOSFODNN7EXAMPLE\n          Expiration: 2011-07-15T23:28:33.359Z\n          SecretAccessKey: wJalrXUtnFEMI/K7MDENG/bPxRfiCYzEXAMPLEKEY\n          SessionToken: AQoDYXdzEPT//////////wEXAMPLEtc764bNrC9SAPBSM22wDOk4x4HIZ8j4FZTwdQWLWsKWHGBuFqwAeMicRXmxfpSPfIeoIYRqTflfKD8YUuwthAx7mSEI/qkPpKPi/kMcGdQrmGdeehM4IC1NtBmUpp2wUE8phUZampKsburEDy0KPkyQDYwT7WZ0wq5VSXDvp75YU9HFvlRd8Tx6q6fE8YQcHNVXAkiY9q6d+xo0rKwT38xVqr7ZD0u0iPPkUL64lIZbqBAz+scqKmlzm8FDrypNC9Yjc8fPOLn9FX9KSYvKTr4rvx3iSIlTJabIQwj2ICCR/oLxBA==\n        FederatedUser:\n          Arn: arn:aws:sts::123456789012:federated-user/Bob\n          FederatedUserId: 123456789012:Bob\n        PackedPolicySize: 6\n      properties:\n        Credentials:\n          $ref: \"#/components/schemas/Credentials\"\n        FederatedUser:\n          $ref: \"#/components/schemas/FederatedUser\"\n        PackedPolicySize:\n          $ref: \"#/components/schemas/nonNegativeIntegerType\"\n      description: \"Contains the response to a successful <a>GetFederationToken</a>\n        request, including temporary AWS credentials that can be used to make\n        AWS requests. \"\n    GetSessionTokenResponse:\n      type: object\n      example:\n        Credentials:\n          AccessKeyId: AKIAIOSFODNN7EXAMPLE\n          Expiration: 2011-07-11T19:55:29.611Z\n          SecretAccessKey: wJalrXUtnFEMI/K7MDENG/bPxRfiCYzEXAMPLEKEY\n          SessionToken: AQoEXAMPLEH4aoAH0gNCAPyJxz4BlCFFxWNE1OPTgk5TthT+FvwqnKwRcOIfrRh3c/LTo6UDdyJwOOvEVPvLXCrrrUtdnniCEXAMPLE/IvU1dYUg2RVAJBanLiHb4IgRmpRV3zrkuWJOgQs8IZZaIv2BXIa2R4OlgkBN9bkUDNCJiBeb/AXlzBBko7b15fjrBs2+cTQtpZ3CYWFXG8C5zqx37wnOE49mRl/+OtkIKGO7fAE\n      properties:\n        Credentials:\n          $ref: \"#/components/schemas/Credentials\"\n      description: \"Contains the response to a successful <a>GetSessionToken</a> request,\n        including temporary AWS credentials that can be used to make AWS\n        requests. \"\n    arnType:\n      type: string\n      pattern: \"[\\\\u0009\\\\u000A\\\\u000D\\\\u0020-\\\\u007E\\\\u0085\\\\u00A0-\\\\uD7FF\\\\uE000-\\\\u\\\n        FFFD\\\\u10000-\\\\u10FFFF]+\"\n      minLength: 20\n      maxLength: 2048\n    roleSessionNameType:\n      type: string\n      pattern: \"[\\\\w+=,.@-]*\"\n      minLength: 2\n      maxLength: 64\n    policyDescriptorListType:\n      type: array\n      items:\n        $ref: \"#/components/schemas/PolicyDescriptorType\"\n    sessionPolicyDocumentType:\n      type: string\n      pattern: \"[\\\\u0009\\\\u000A\\\\u000D\\\\u0020-\\\\u00FF]+\"\n      minLength: 1\n      maxLength: 2048\n    roleDurationSecondsType:\n      type: integer\n      minimum: 900\n      maximum: 43200\n    externalIdType:\n      type: string\n      pattern: \"[\\\\w+=,.@:\\\\/-]*\"\n      minLength: 2\n      maxLength: 1224\n    serialNumberType:\n      type: string\n      pattern: \"[\\\\w+=/:,.@-]*\"\n      minLength: 9\n      maxLength: 256\n    tokenCodeType:\n      type: string\n      pattern: \"[\\\\d]*\"\n      minLength: 6\n      maxLength: 6\n    AssumeRoleRequest:\n      type: object\n      required:\n        - RoleArn\n        - RoleSessionName\n      properties:\n        RoleArn:\n          $ref: \"#/components/schemas/arnType\"\n        RoleSessionName:\n          $ref: \"#/components/schemas/roleSessionNameType\"\n        PolicyArns:\n          $ref: \"#/components/schemas/policyDescriptorListType\"\n        Policy:\n          $ref: \"#/components/schemas/sessionPolicyDocumentType\"\n        DurationSeconds:\n          $ref: \"#/components/schemas/roleDurationSecondsType\"\n        ExternalId:\n          $ref: \"#/components/schemas/externalIdType\"\n        SerialNumber:\n          $ref: \"#/components/schemas/serialNumberType\"\n        TokenCode:\n          $ref: \"#/components/schemas/tokenCodeType\"\n    Credentials:\n      type: object\n      required:\n        - AccessKeyId\n        - SecretAccessKey\n        - SessionToken\n        - Expiration\n      properties:\n        AccessKeyId:\n          $ref: \"#/components/schemas/accessKeyIdType\"\n        SecretAccessKey:\n          $ref: \"#/components/schemas/accessKeySecretType\"\n        SessionToken:\n          $ref: \"#/components/schemas/tokenType\"\n        Expiration:\n          $ref: \"#/components/schemas/dateType\"\n      description: AWS credentials for API authentication.\n    AssumedRoleUser:\n      type: object\n      required:\n        - AssumedRoleId\n        - Arn\n      properties:\n        AssumedRoleId:\n          $ref: \"#/components/schemas/assumedRoleIdType\"\n        Arn:\n          $ref: \"#/components/schemas/arnType\"\n      description: The identifiers for the temporary security credentials that the\n        operation returns.\n    nonNegativeIntegerType:\n      type: integer\n      minimum: 0\n    SAMLAssertionType:\n      type: string\n      minLength: 4\n      maxLength: 100000\n    AssumeRoleWithSAMLRequest:\n      type: object\n      required:\n        - RoleArn\n        - PrincipalArn\n        - SAMLAssertion\n      properties:\n        RoleArn:\n          $ref: \"#/components/schemas/arnType\"\n        PrincipalArn:\n          $ref: \"#/components/schemas/arnType\"\n        SAMLAssertion:\n          $ref: \"#/components/schemas/SAMLAssertionType\"\n        PolicyArns:\n          $ref: \"#/components/schemas/policyDescriptorListType\"\n        Policy:\n          $ref: \"#/components/schemas/sessionPolicyDocumentType\"\n        DurationSeconds:\n          $ref: \"#/components/schemas/roleDurationSecondsType\"\n    Subject:\n      type: string\n    SubjectType:\n      type: string\n    Issuer:\n      type: string\n    Audience:\n      type: string\n    NameQualifier:\n      type: string\n    clientTokenType:\n      type: string\n      minLength: 4\n      maxLength: 2048\n    urlType:\n      type: string\n      minLength: 4\n      maxLength: 2048\n    AssumeRoleWithWebIdentityRequest:\n      type: object\n      required:\n        - RoleArn\n        - RoleSessionName\n        - WebIdentityToken\n      properties:\n        RoleArn:\n          $ref: \"#/components/schemas/arnType\"\n        RoleSessionName:\n          $ref: \"#/components/schemas/roleSessionNameType\"\n        WebIdentityToken:\n          $ref: \"#/components/schemas/clientTokenType\"\n        ProviderId:\n          $ref: \"#/components/schemas/urlType\"\n        PolicyArns:\n          $ref: \"#/components/schemas/policyDescriptorListType\"\n        Policy:\n          $ref: \"#/components/schemas/sessionPolicyDocumentType\"\n        DurationSeconds:\n          $ref: \"#/components/schemas/roleDurationSecondsType\"\n    webIdentitySubjectType:\n      type: string\n      minLength: 6\n      maxLength: 255\n    assumedRoleIdType:\n      type: string\n      pattern: \"[\\\\w+=,.@:-]*\"\n      minLength: 2\n      maxLength: 193\n    accessKeyIdType:\n      type: string\n      pattern: \"[\\\\w]*\"\n      minLength: 16\n      maxLength: 128\n    accessKeySecretType:\n      type: string\n    tokenType:\n      type: string\n    dateType:\n      type: string\n      format: date-time\n    encodedMessageType:\n      type: string\n      minLength: 1\n      maxLength: 10240\n    DecodeAuthorizationMessageRequest:\n      type: object\n      required:\n        - EncodedMessage\n      properties:\n        EncodedMessage:\n          $ref: \"#/components/schemas/encodedMessageType\"\n    decodedMessageType:\n      type: string\n    federatedIdType:\n      type: string\n      pattern: \"[\\\\w+=,.@\\\\:-]*\"\n      minLength: 2\n      maxLength: 193\n    FederatedUser:\n      type: object\n      required:\n        - FederatedUserId\n        - Arn\n      properties:\n        FederatedUserId:\n          $ref: \"#/components/schemas/federatedIdType\"\n        Arn:\n          $ref: \"#/components/schemas/arnType\"\n      description: Identifiers for the federated user that is associated with the\n        credentials.\n    GetAccessKeyInfoRequest:\n      type: object\n      required:\n        - AccessKeyId\n      properties:\n        AccessKeyId:\n          $ref: \"#/components/schemas/accessKeyIdType\"\n    accountType:\n      type: string\n    GetCallerIdentityRequest:\n      type: object\n      properties: {}\n    userIdType:\n      type: string\n    userNameType:\n      type: string\n      pattern: \"[\\\\w+=,.@-]*\"\n      minLength: 2\n      maxLength: 32\n    durationSecondsType:\n      type: integer\n      minimum: 900\n      maximum: 129600\n    GetFederationTokenRequest:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          $ref: \"#/components/schemas/userNameType\"\n        Policy:\n          $ref: \"#/components/schemas/sessionPolicyDocumentType\"\n        PolicyArns:\n          $ref: \"#/components/schemas/policyDescriptorListType\"\n        DurationSeconds:\n          $ref: \"#/components/schemas/durationSecondsType\"\n    GetSessionTokenRequest:\n      type: object\n      properties:\n        DurationSeconds:\n          $ref: \"#/components/schemas/durationSecondsType\"\n        SerialNumber:\n          $ref: \"#/components/schemas/serialNumberType\"\n        TokenCode:\n          $ref: \"#/components/schemas/tokenCodeType\"\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/amazonaws.com-sts-2011-06-15-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/amazonaws.com-sts-2011-06-15-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/#Action=GetSessionToken\": at 1:163375: get: operation \"GET GetSessionToken\": at 1:163382: parse path \"/#Action=GetSessionToken\": path MUST NOT contain a fragment"
}