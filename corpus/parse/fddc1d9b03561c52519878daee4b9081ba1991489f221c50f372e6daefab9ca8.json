{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/DiegoZoracKy/oas-client"
		},
		"file": {
			"name": "openapi-pets.yml",
			"size": 0,
			"path": "test/test-data/openapi-pets.yml",
			"byteSize": 3054,
			"content": "---\nopenapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: Swagger Petstore\n  license:\n    name: MIT\nservers:\n- url: http://127.0.0.1/{version}\n  variables:\n    version:\n      default: v2\n      enum:\n      - v1\n      - v2\npaths:\n  \"/login\":\n    get:\n      summary: Login\n      operationId: login\n  \"/pets\":\n    get:\n      summary: List all pets\n      operationId: listPets\n      tags:\n      - pets\n      parameters:\n      - name: limit\n        in: query\n        description: How many items to return at one time (max 100)\n        required: true\n        schema:\n          type: integer\n          format: int32\n      responses:\n        '200':\n          description: An paged array of pets\n          headers:\n            x-next:\n              description: A link to the next page of responses\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Pets\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n    post:\n      summary: Create a pet\n      operationId: createPets\n      tags:\n      - pets\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: Updated name of the pet\n                  type: string\n                status:\n                  description: Updated status of the pet\n                  type: string\n              required:\n              - status\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\n  \"/pets/{petId}\":\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n      - pets\n      parameters:\n      - name: petId\n        in: path\n        required: true\n        description: The id of the pet to retrieve\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Pets\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Error\"\ncomponents:\n  schemas:\n    Pet:\n      required:\n      - id\n      - name\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        tag:\n          type: string\n    Pets:\n      type: array\n      items:\n        \"$ref\": \"#/components/schemas/Pet\"\n    Error:\n      required:\n      - code\n      - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /login: get: operation \"login\": responses: no responses"
}