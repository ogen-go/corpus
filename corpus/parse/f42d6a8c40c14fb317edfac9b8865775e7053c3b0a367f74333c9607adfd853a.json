{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/vanilla/vanilla"
		},
		"file": {
			"name": "conversations.yml",
			"size": 0,
			"path": "applications/conversations/openapi/conversations.yml",
			"byteSize": 10408,
			"content": "openapi: 3.0.2\ninfo:\npaths:\n    /conversations:\n        get:\n            parameters:\n                - description: |\n                      Filter by author.\n                  in: query\n                  name: insertUserID\n                  schema:\n                      type: integer\n                - description: >\n                      Filter by participating user. (Has no effect if insertUserID is\n                      used)\n                  in: query\n                  name: participantUserID\n                  schema:\n                      type: integer\n                - $ref: \"#/components/parameters/Page\"\n                - description: |\n                      Desired number of items per page.\n                  in: query\n                  name: limit\n                  schema:\n                      type: integer\n                      default: 50\n                      maximum: 100\n                      minimum: 1\n                - description: >\n                      Expand associated records using one or more valid field names. A\n                      value of \"all\" will expand all expandable fields.\n                  in: query\n                  name: expand\n                  schema:\n                      items:\n                          enum:\n                              - insertUser\n                              - lastInsertUser\n                              - all\n                          type: string\n                      type: array\n                  style: form\n            responses:\n                \"200\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/Conversation\"\n                                type: array\n                    description: Success\n            tags:\n                - Conversations\n            summary: List user conversations.\n        post:\n            responses:\n                \"201\":\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/Conversation\"\n                    description: Success\n            tags:\n                - Conversations\n            requestBody:\n                $ref: \"#/components/requestBodies/ConversationPost\"\n            summary: Add a conversation.\n    \"/conversations/{id}\":\n        get:\n            parameters:\n                - description: |\n                      The conversation ID.\n                  in: path\n                  name: id\n                  required: true\n                  schema:\n                      type: integer\n            responses:\n                \"200\":\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/Conversation\"\n                    description: Success\n            tags:\n                - Conversations\n            summary: Get a conversation.\n    \"/conversations/{id}/leave\":\n        delete:\n            parameters:\n                - description: |\n                      The conversation ID.\n                  in: path\n                  name: id\n                  required: true\n                  schema:\n                      type: integer\n            responses:\n                \"204\":\n                    description: Success\n            tags:\n                - Conversations\n            summary: Leave a conversation.\n    \"/conversations/{id}/participants\":\n        get:\n            parameters:\n                - description: |\n                      The conversation ID.\n                  in: path\n                  name: id\n                  required: true\n                  schema:\n                      type: integer\n                - description: |\n                      Filter by participant status.\n                  in: query\n                  name: status\n                  schema:\n                      type: string\n                      default: participating\n                      enum:\n                          - all\n                          - participating\n                          - deleted\n                - $ref: \"#/components/parameters/Page\"\n                - description: |\n                      Desired number of items per page.\n                  in: query\n                  name: limit\n                  schema:\n                      type: integer\n                      default: 5\n                      maximum: 100\n                      minimum: 5\n                - description: >\n                      Expand associated records using one or more valid field names. A\n                      value of \"all\" will expand all expandable fields.\n                  in: query\n                  name: expand\n                  schema:\n                      items:\n                          enum:\n                              - user\n                              - all\n                          type: string\n                      type: array\n                  style: form\n            responses:\n                \"200\":\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/ConversationParticipants\"\n                    description: List of participants.\n            tags:\n                - Conversations\n            summary: Get participants of a conversation.\n        post:\n            parameters:\n                - description: The conversation ID.\n                  in: path\n                  name: id\n                  required: true\n                  schema:\n                      type: integer\n            responses:\n                \"200\":\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/ConversationParticipants\"\n                    description: List of participants.\n            tags:\n                - Conversations\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/ConversationPost\"\n                required: true\n            summary: Add participants to a conversation.\ncomponents:\n    requestBodies:\n        ConversationPost:\n            content:\n                application/json:\n                    schema:\n                        $ref: \"#/components/schemas/ConversationPost\"\n            required: true\n    schemas:\n        Conversation:\n            properties:\n                body:\n                    description: The most recent unread message in the conversation.\n                    minLength: 1\n                    type: string\n                conversationID:\n                    description: The ID of the conversation.\n                    type: integer\n                countMessages:\n                    description: The number of messages on the conversation.\n                    type: integer\n                countParticipants:\n                    description: The number of participants on the conversation.\n                    type: integer\n                countUnread:\n                    description: The number of unread messages.\n                    type: integer\n                dateInserted:\n                    description: When the conversation was created.\n                    format: date-time\n                    type: string\n                insertUser:\n                    $ref: \"#/components/schemas/UserFragment\"\n                insertUserID:\n                    description: The user that created the conversation.\n                    type: integer\n                lastMessage:\n                    properties:\n                        dateInserted:\n                            description: The date of the message.\n                            format: date-time\n                            type: string\n                        insertUser:\n                            $ref: \"#/components/schemas/UserFragment\"\n                        insertUserID:\n                            description: The author of the your most recent message.\n                            type: integer\n                    required:\n                        - insertUserID\n                        - dateInserted\n                        - insertUser\n                    type: object\n                name:\n                    description: The name of the conversation.\n                    minLength: 1\n                    type: string\n                participants:\n                    $ref: \"#/components/schemas/ConversationParticipants\"\n                unread:\n                    description: Whether the conversation has an unread indicator.\n                    type: boolean\n                url:\n                    description: The URL of the conversation.\n                    minLength: 1\n                    type: string\n            required:\n                - conversationID\n                - name\n                - body\n                - url\n                - dateInserted\n                - insertUserID\n                - countParticipants\n                - countMessages\n            type: object\n        ConversationParticipants:\n            description: List of participants.\n            items:\n                properties:\n                    userID:\n                        description: The userID of the participant.\n                        type: integer\n                    status:\n                        description: Participation status of the user.\n                        enum:\n                            - participating\n                            - deleted\n                        type: string\n                    user:\n                        $ref: \"#/components/schemas/UserFragment\"\n                required:\n                    - userID\n                    - status\n                type: object\n            type: array\n        ConversationPost:\n            properties:\n                participantUserIDs:\n                    description: List of userID of the participants.\n                    items:\n                        type: integer\n                    type: array\n            required:\n                - participantUserIDs\n                - name\n            type: object\n",
			"canonicalURL": "/github.com/vanilla/vanilla@dfe2732ec86d37eed7eec0956151e79f2f414b4f/-/blob/applications/conversations/openapi/conversations.yml",
			"externalURLs": [
				{
					"url": "https://github.com/vanilla/vanilla/blob/dfe2732ec86d37eed7eec0956151e79f2f414b4f/applications/conversations/openapi/conversations.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: schemas: \"Conversation\": parse schema: property \"insertUser\": at 1:786: parse schema: resolve \"#/components/schemas/UserFragment\": find schema: resolve \"#/components/schemas/UserFragment\": can't find value for \"components/schemas/UserFragment\""
}