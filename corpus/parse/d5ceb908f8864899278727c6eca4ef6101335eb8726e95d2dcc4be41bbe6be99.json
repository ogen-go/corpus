{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wtimme/openstreetmap-openapi"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "_build/swagger.yaml",
			"byteSize": 15599,
			"content": "openapi: 3.0.0\ninfo:\n  title: OpenStreetMap\n  description: This is the editing API for OpenStreetMap.\n  version: '0.6'\n  termsOfService: 'https://operations.osmfoundation.org/policies/api/'\n  license:\n    name: ISC License\n    url: 'https://github.com/bryceco/GoMap/blob/master/LICENSE.md'\nservers:\n  - url: 'https://api.openstreetmap.org'\n    description: Production server (uses live data)\n  - url: 'https://master.apis.dev.openstreetmap.org'\n    description: Sandbox server (uses test data)\ntags:\n  - name: map\n    description: Operations related to map data\n  - name: user\n    description: Everything on the user\n  - name: misc\n    description: Meta-information on the API and the server\npaths:\n  /api/versions:\n    get:\n      tags:\n        - misc\n      summary: Returns a list of API versions supported by this instance.\n      operationId: getAPIVersions\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/APIVersionsResponse'\n  /api/capabilities:\n    get:\n      tags:\n        - misc\n      summary: This API call is meant to provide information about the capabilities and limitations of the current API.\n      operationId: getAPICapabilities\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/APICapabilitiesResponse'\n  /api/0.6/map:\n    get:\n      tags:\n        - map\n      summary: Retrieves map data by the given bounding box.\n      description: |\n        The operation returns:\n        - All nodes that are inside a given bounding box and any relations that reference them.\n        - All ways that reference at least one node that is inside a given bounding box, any relations that reference them [the ways],\n          and any nodes outside the bounding box that the ways may reference.\n\n        - All relations that reference one of the nodes, ways or relations included due to the above rules.\n          (Does not apply recursively, see explanation below.)\n\n\n        Note that, while this operation returns those relations that reference the aforementioned nodes and ways, the reverse is not true: it does not (necessarily) return all of the nodes and ways that are referenced by these relations. This prevents unreasonably-large result sets. For example, imagine the case where:\n        - There is a relation named \"England\" that references every node in England.\n        - The nodes, ways, and relations are retrieved for a bounding box that covers a small portion of England.\n\n        While the result would include the nodes, ways, and relations as specified by the rules for the command,  including the \"England\" relation, it would (fortuitously) not include every node and way in England.  If desired, the nodes and ways referenced by the \"England\" relation could be retrieved by their respective IDs.\n\n        Also note that ways which intersect the bounding box but have no nodes within the bounding box will not be returned. \n      operationId: getMapDataByBoundingBox\n      parameters:\n        - in: query\n          name: bbox\n          schema:\n            type: string\n            example: '13.377639198,52.5162399276,13.3778497142,52.5163460219'\n          description: |\n            The comma-separated bounding box for which to download the data.\n\n            `left`,`bottom`,`right`,`top`, where:\n            - `left` is the longitude of the left (westernmost) side of the bounding box.\n            - `bottom` is the latitude of the bottom (southernmost) side of the bounding box.\n            - `right` is the longitude of the right (easternmost) side of the bounding box.\n            - `top` is the latitude of the top (northernmost) side of the bounding box.\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                allOf:\n                  - $ref: '#/components/schemas/OSMResponse'\n                properties:\n                  bounds:\n                    type: object\n                    properties:\n                      minlat:\n                        $ref: '#/components/schemas/Node/allOf/1/properties/lat'\n                      minlon:\n                        $ref: '#/components/schemas/Node/allOf/1/properties/lon'\n                      maxlat:\n                        $ref: '#/components/schemas/Node/allOf/1/properties/lat'\n                      maxlon:\n                        $ref: '#/components/schemas/Node/allOf/1/properties/lon'\n                  elements:\n                    type: array\n                    items:\n                      oneOf:\n                        - $ref: '#/components/schemas/Node'\n                        - $ref: '#/components/schemas/Relation'\n                        - $ref: '#/components/schemas/Way'\n                xml:\n                  wrapped: true\n                  name: osm\n        '400':\n          description: 'When any of the node/way/relation limits are exceeded, in particular if the call would return more than 50''000 nodes.'\n        '509':\n          description: |\n            \"Error: You have downloaded too much data. Please try again later.\" See [Developer FAQ](https://wiki.openstreetmap.org/wiki/Developer_FAQ#I.27ve_been_blocked_from_the_API_for_downloading_too_much._Now_what.3F).\n  /api/0.6/permissions:\n    get:\n      tags:\n        - misc\n      summary: Returns the permissions granted to the current API connection.\n      operationId: getAPIPermissions\n      security:\n        - basicAuth: []\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                type: object\n                allOf:\n                  - $ref: '#/components/schemas/OSMResponse'\n                properties:\n                  permissions:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        name:\n                          $ref: '#/components/schemas/APIPermission'\n                      xml:\n                        name: permission\n                    xml:\n                      wrapped: true\n                xml:\n                  wrapped: true\n                  name: osm\n  /api/0.6/user/details.json:\n    get:\n      tags:\n        - user\n      summary: Get the user's profile as well as their OSM messages and preferences\n      description: The messages section has been available since mid-2013.\n      operationId: getSignedInUserDetails\n      security:\n        - basicAuth: []\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserDetailsResponse'\ncomponents:\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n  schemas:\n    APICapabilities:\n      type: object\n      properties:\n        version:\n          type: object\n          description: The API call versions that the server will accept\n          properties:\n            minimum:\n              type: number\n              format: double\n              example: 0.6\n              xml:\n                attribute: true\n            maximum:\n              type: number\n              format: double\n              example: 0.6\n              xml:\n                attribute: true\n        area:\n          type: object\n          properties:\n            maximum:\n              type: number\n              format: double\n              description: The maximum area in square degrees that can be queried by API calls\n              example: 0.25\n              xml:\n                attribute: true\n        note_area:\n          type: object\n          properties:\n            maximum:\n              type: number\n              example: 25\n              xml:\n                attribute: true\n        tracepoints:\n          type: object\n          properties:\n            per_page:\n              type: number\n              description: The maximum number of points in a single GPS trace. (Possibly incorrect)\n              example: 5000\n              xml:\n                attribute: true\n        waynodes:\n          type: object\n          properties:\n            maximum:\n              type: number\n              description: The maximum number of nodes that a way may contain\n              example: 2000\n              xml:\n                attribute: true\n        changesets:\n          type: object\n          properties:\n            maximum_elements:\n              type: number\n              description: 'The maximum number of combined nodes, ways and relations that can be contained in a changeset'\n              example: 10000\n              xml:\n                attribute: true\n        timeout:\n          type: object\n          properties:\n            seconds:\n              type: number\n              example: 300\n              xml:\n                attribute: true\n        status:\n          type: object\n          description: 'The status of the database, API and GPX API. The database field is informational, and the API/GPX-API fields indicate what the client should expect.'\n          properties:\n            database:\n              $ref: '#/components/schemas/APIStatus'\n            api:\n              $ref: '#/components/schemas/APIStatus'\n            gpx:\n              $ref: '#/components/schemas/APIStatus'\n    APICapabilitiesResponse:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/OSMResponse'\n      properties:\n        api:\n          $ref: '#/components/schemas/APICapabilities'\n      xml:\n        wrapped: true\n        name: osm\n    APIPermission:\n      type: string\n      example: allow_read_prefs\n      description: |\n        Permissions:\n          * `allow_read_prefs` - Read user preferences\n          * `allow_write_prefs` - Modify user preferences\n          * `allow_write_diary` - Create diary entries, comments and make friends\n          * `allow_write_api` - Modify the map\n          * `allow_read_gpx` - Read private GPS traces\n          * `allow_write_gpx` - Upload GPS traces\n          * `allow_write_notes` - Modify notes\n      xml:\n        attribute: true\n    APIStatus:\n      type: string\n      enum:\n        - online\n        - readonly\n        - offline\n      example: online\n      description: |\n        Status:\n          * `online` - Both read and write requests work\n          * `readonly` - Only read requests work\n          * `offline` - No requests work\n      xml:\n        attribute: true\n    APIVersionsResponse:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/OSMResponse'\n      properties:\n        api:\n          type: object\n          properties:\n            version:\n              type: number\n              format: double\n              example: 0.6\n      xml:\n        wrapped: true\n        name: osm\n    Node:\n      allOf:\n        - $ref: '#/components/schemas/Way/allOf/0'\n        - type: object\n          properties:\n            lat:\n              type: number\n              format: double\n              minimum: -90\n              maximum: 90\n              example: 52.515785\n            lon:\n              type: number\n              format: double\n              minimum: -180\n              maximum: 180\n              example: 13.3776392\n          required:\n            - lat\n            - lon\n    OSMResponse:\n      type: object\n      properties:\n        version:\n          type: string\n          example: '0.6'\n          xml:\n            attribute: true\n        copyright:\n          type: string\n          example: OpenStreetMap and contributors\n          xml:\n            attribute: true\n        attribution:\n          type: string\n          example: 'http://www.openstreetmap.org/copyright'\n          xml:\n            attribute: true\n      required:\n        - version\n        - copyright\n        - attribution\n    Relation:\n      allOf:\n        - $ref: '#/components/schemas/Way/allOf/0'\n        - type: object\n          properties:\n            members:\n              type: array\n              items:\n                type: object\n                properties:\n                  type:\n                    $ref: '#/paths/~1api~10.6~1map/get/responses/200/content/application~1json/schema/properties/elements/items/oneOf/0/allOf/0/properties/type'\n                  ref:\n                    $ref: '#/components/schemas/Way/allOf/1/properties/nodes/items'\n                  role:\n                    type: string\n                    example: part\n          required:\n            - members\n    User:\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1234\n        display_name:\n          type: string\n          example: JaneDoe\n        account_created:\n          type: string\n          example: '2010-01-19T23:01:0Z'\n          format: date-time\n        description:\n          type: string\n          example: |-\n            # Heading\n\n            The description can contain markdown\n        changesets:\n          type: object\n          properties:\n            count:\n              type: integer\n              example: 34\n        traces:\n          type: object\n          properties:\n            count:\n              type: integer\n              example: 2\n        messages:\n          type: object\n          properties:\n            received:\n              type: object\n              properties:\n                count:\n                  type: integer\n                  example: 2\n                unread:\n                  type: integer\n                  example: 1\n            sent:\n              type: object\n              properties:\n                count:\n                  type: integer\n                  example: 1\n    UserDetailsResponse:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/OSMResponse'\n      properties:\n        user:\n          $ref: '#/components/schemas/User'\n    Way:\n      allOf:\n        - type: object\n          properties:\n            type:\n              type: string\n              enum:\n                - node\n                - way\n                - relation\n              example: node\n            id:\n              $ref: '#/components/schemas/Way/allOf/1/properties/nodes/items'\n            timestamp:\n              type: string\n              format: date-time\n              example: '2015-10-01T19:36:42Z'\n            version:\n              type: number\n              example: 14\n            changeset:\n              type: number\n              format: int64\n              example: 34376083\n            user:\n              type: string\n              example: anbr\n            uid:\n              type: number\n              example: 43566\n            tags:\n              type: object\n              additionalProperties:\n                type: string\n              example:\n                'building:architecture': neoclassicism\n                'building:material': sandstone\n          required:\n            - type\n            - id\n            - timestamp\n            - version\n            - changeset\n            - user\n            - uid\n        - type: object\n          properties:\n            nodes:\n              type: array\n              items:\n                type: number\n                format: int64\n                example: 85883220\n          required:\n            - nodes\nexternalDocs:\n  description: Find more information on the OSM wiki\n  url: 'https://wiki.openstreetmap.org/'\n",
			"canonicalURL": "/github.com/wtimme/openstreetmap-openapi@931b8e4f477e302be7101d6168d31093fe2f356c/-/blob/_build/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/wtimme/openstreetmap-openapi/blob/931b8e4f477e302be7101d6168d31093fe2f356c/_build/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"Relation\": resolve \"#/components/schemas/Relation\": allOf: property \"members\": items: property \"type\": at _build/swagger.yaml:363:27: $ref: resolve \"#/paths/~1api~10.6~1map/get/responses/200/content/application~1json/schema/properties/elements/items/oneOf/0/allOf/0/properties/type\": resolve: can't find value for \"paths/~1api~10.6~1map/get/responses/200/content/application~1json/schema/properties/elements/items/oneOf/0/allOf/0/properties/type\""
}