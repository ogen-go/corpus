{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/openbankingproject-ch/obp-apis"
		},
		"file": {
			"name": "securities-orders.yaml",
			"size": 0,
			"path": "securities-orders.yaml",
			"byteSize": 93785,
			"content": "openapi: 3.0.3\ninfo:\n  title: Bankable Assets API - Securities Orders\n  version: 0.1.0\n  description: \u003e-\n\n    # Use Cases\n\n    This API covers the following use cases for **private clients** and **external asset managers**:\n\n    1. Retrieve all available information regarding current and completed securities orders, including their status\n       and list of trades -- partial and full executions.\n\n    2. Request single purchase/sale of a financial instrument for a single client account in specific markets\n       and trade currencies or in best execution mode.\n\n    3. Request single purchase/sale of a financial instrument for multiple client acoounts according to a given\n       allocation in specific markets and trade currencies or in best execution mode.\n\n    4. Request the modification of a current securities order.\n\n    5. Request the cancellation of a current securities order.\n\n    # General Remarks\n\n    * This API definition is inspired by the ISO 20022 standard messages\n      [RedemptionOrder (setr.004)](https://www.iso20022.org/standardsrepository/type/setr.004.001.04),\n      [SubscriptionOrder (setr.010)](https://www.iso20022.org/standardsrepository/type/setr.010.001.04) and\n      [SecuritiesTradeConfirmation (setr.027)](https://www.iso20022.org/standardsrepository/type/setr.027.001.03) and\n      the Financial Information eXchange (FIX) messages [NewOrderSingle (35=D)] and [ExecutionReport (35=8)].\n\n    * Schemas are generally based on datatype definitions with the same name in the\n      [ISO 20022 Repository](https://www.iso20022.org/standardsrepository).\n      In some cases, schemas may correspond to a restrictive version of the standard datatype definition without some\n      or all optional fields.\n      Any other deviations to the standard datatype definition are explicitly described below.\n\n    * Pagination is not described in any defined\n      [Operation Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md#operation-object).\n      A productive implementation of this API may support additional query parameters for implementing pagination\n      according to the possibilities of the underlying systems.\n      These additional query parameters must be optional and they must not clash with any parameter here defined.\n\n      To allow implementing pagination and avoid clashes, this API will not use the following parameters names\n      in this or future versions of the API: `limit`, `offset` and `cursor`.\n\n    * According to the definition of\n      [Parameter Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md#parameter-object)\n      in the OpenAPI Specification:\n      *If `in` is `\"header\"` and the `name` field is `\"Accept\"`, `\"Content-Type\"` or `\"Authorization\"`, the parameter\n      definition SHALL be ignored.* Therefore:\n      * The parameter `\"Accept\"` will not be defined in this file at any place.\n      * The parameters `\"Content-Type\"` and `\"Authorization\"` are implicitly defined by the fields `content` in\n        [Response Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md#response-object)\n        and `security` in\n        [Operation Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md#operation-object).\n\n  contact:\n    name: Open Banking Project Switzerland\n    url: https://www.openbankingproject.ch\n    email: info@obp.ch\n\nservers:\n  # --------------------------------------------------------------------------------------------------------------------\n  # SERVERS\n  # --------------------------------------------------------------------------------------------------------------------\n  - url: /api1/securities-orders\n    description: Development server\n\npaths:\n  # --------------------------------------------------------------------------------------------------------------------\n  # PATHS\n  # --------------------------------------------------------------------------------------------------------------------\n\n  /orders:\n\n    get: # OrderCollection\n      tags:\n        - Orders\n      summary: Get all securities orders\n      description: \u003e-\n        Get a collection of Securities Orders.\n      operationId: getOrders\n      parameters:\n      - $ref: '#/components/parameters/Accept-Language'\n      responses:\n        '200':\n          $ref: '#/components/responses/OK_200_OrderCollection'\n        '400':\n          $ref: '#/components/responses/BAD_REQUEST_400'\n        '401':\n          $ref: '#/components/responses/UNAUTHORIZED_401'\n\n    post: # OrderCreation\n      tags:\n        - Orders\n      summary: Add new securities order\n      description: \u003e-\n        Generate new securities order\n      operationId: postOrder\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SecuritiesOrder'\n      responses:\n        '201':\n          $ref: '#/components/responses/CREATED_201_OrderCreation'\n        '202':\n          $ref: '#/components/responses/ACCEPTED_202_OrderCreation'\n        '400':\n          $ref: '#/components/responses/BAD_REQUEST_400'\n        '401':\n          $ref: '#/components/responses/UNAUTHORIZED_401'\n        '403':\n          $ref: '#/components/responses/FORBIDDEN_403_Post'\n        '405':\n          $ref: '#/components/responses/METHOD_NOT_ALLOWED_405_Post'\n\n  /orders/{orderIdentification}:\n\n    get: # Order\n      tags:\n        - Orders\n      summary: Get single securities order\n      description: \u003e-\n        *Get securities order identified by `orderIdentification`*.\n      operationId: getOrder\n      parameters:\n      - $ref: '#/components/parameters/OrderIdentification'\n      - $ref: '#/components/parameters/Accept-Language'\n      responses:\n        '200':\n          $ref: '#/components/responses/OK_200_Order'\n        '400':\n          $ref: '#/components/responses/BAD_REQUEST_400'\n        '401':\n          $ref: '#/components/responses/UNAUTHORIZED_401'\n        '403':\n          $ref: '#/components/responses/FORBIDDEN_403'\n        '404':\n          $ref: '#/components/responses/NOT_FOUND_404'\n\n    put: # OrderModification\n      tags:\n      - Orders\n      summary: Update single securities order\n      description: \u003e-\n        *Update securities order identified by `orderIdentification`.*\n      operationId: putOrder\n      parameters:\n      - $ref: '#/components/parameters/OrderIdentification'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SecuritiesOrder'\n      responses:\n        '200':\n          $ref: '#/components/responses/OK_200_OrderModification'\n        '202':\n          $ref: '#/components/responses/ACCEPTED_202_OrderModification'\n        '400':\n          $ref: '#/components/responses/BAD_REQUEST_400'\n        '401':\n          $ref: '#/components/responses/UNAUTHORIZED_401'\n        '403':\n          $ref: '#/components/responses/FORBIDDEN_403'\n        '404':\n          $ref: '#/components/responses/NOT_FOUND_404'\n        '405':\n          $ref: '#/components/responses/METHOD_NOT_ALLOWED_405_Put'\n\n    delete: # OrderCancellation\n      tags:\n      - Orders\n      summary: Delete single securities order\n      description: \u003e-\n        *Delete securities order identified by `orderIdentification`.*\n      operationId: deleteOrder\n      parameters:\n      - $ref: '#/components/parameters/OrderIdentification'\n      responses:\n        '200':\n          $ref: '#/components/responses/OK_200_OrderCancellation'\n        '202':\n          $ref: '#/components/responses/ACCEPTED_202_OrderCancellation'\n        '400':\n          $ref: '#/components/responses/BAD_REQUEST_400'\n        '401':\n          $ref: '#/components/responses/UNAUTHORIZED_401'\n        '403':\n          $ref: '#/components/responses/FORBIDDEN_403'\n        '404':\n          $ref: '#/components/responses/NOT_FOUND_404'\n        '405':\n          $ref: '#/components/responses/METHOD_NOT_ALLOWED_405_Delete'\n\n  /orders/{orderIdentification}/executions:\n\n    get: # TradeCollection\n      tags:\n        - Executions\n      summary: Get all executions of securities order\n      description: \u003e-\n        *Get all executions of the securities order identified by `orderIdentification`.*\n      operationId: getTrades\n      parameters:\n      - $ref: '#/components/parameters/OrderIdentification'\n      - $ref: '#/components/parameters/Accept-Language'\n      responses:\n        '200':\n          $ref: '#/components/responses/OK_200_TradeCollection'\n        '400':\n          $ref: '#/components/responses/BAD_REQUEST_400'\n        '401':\n          $ref: '#/components/responses/UNAUTHORIZED_401'\n\n  /orders/{orderIdentification}/executions/{tradeIdentification}:\n\n    get: # Trade\n      tags:\n      - Executions\n      summary: Get single execution of securities order\n      description: \u003e-\n        *Get an execution identified by `tradeIdentification` of the securities order identified\n        by `orderIdentification`.*\n\n        An execution or trade is a fill or a partial fill for a securities order.\n      operationId: getTrade\n      parameters:\n      - $ref: '#/components/parameters/OrderIdentification'\n      - $ref: '#/components/parameters/TradeIdentification'\n      - $ref: '#/components/parameters/Accept-Language'\n      responses:\n        '200':\n          $ref: '#/components/responses/OK_200_Trade'\n        '400':\n          $ref: '#/components/responses/BAD_REQUEST_400'\n        '401':\n          $ref: '#/components/responses/UNAUTHORIZED_401'\n        '403':\n          $ref: '#/components/responses/FORBIDDEN_403'\n        '404':\n          $ref: '#/components/responses/NOT_FOUND_404'\n\ncomponents:\n  # --------------------------------------------------------------------------------------------------------------------\n  # COMPONENTS\n  # --------------------------------------------------------------------------------------------------------------------\n  \n  headers:\n    # ------------------------------------------------------------------------------------------------------------------\n    # COMPONENTS/HEADERS\n    # ------------------------------------------------------------------------------------------------------------------\n\n    Accept-Language:\n      description: \u003e-\n        List of acceptable human languages for response.\n        [RFC 7231, Section 5.3.5]\n      schema:\n        type: string\n      example: da, en-gb;q=0.8, en;q=0.7\n\n    Content-Language:\n      description: \u003e-\n        The natural language or languages of the intended audience for the enclosed content.\n        [RFC 7231, Section 3.1.3.2]\n      schema:\n        type: string\n      example: da\n\n    Last-Modified:\n      description: \u003e-\n        Timestamp indicating the date and time at which the origin server believes the selected representation\n        was last modified, as determined at the conclusion of handling the request.\n        [RFC 7232, Section 2.2]\n      schema:\n        type: string\n      example: 'Tue, 15 Nov 1994 12:45:26 GMT' # HTTP-date\n\n    Location:\n      description: \u003e-\n        Used in redirection, or when a new resource has been created.\n        [RFC 7231, Section 7.1.2]\n      schema:\n        type: string\n      example: '/pub/WWW/People.html'\n\n    WWW-Authenticate:\n      description: \u003e-\n        Indicates the authentication scheme that should be used to access the requested entity.\n        [RFC 7235, Section 4.1]\n      schema:\n        type: string\n      example: 'Basic'\n\n  parameters:\n    # ------------------------------------------------------------------------------------------------------------------\n    # COMPONENTS/PARAMETERS\n    # ------------------------------------------------------------------------------------------------------------------\n\n    OrderIdentification:\n      name: orderIdentification\n      in: path\n      description: Identification for the order as assigned by the receiving party.\n      required: true\n      schema:\n        $ref: '#/components/schemas/Max35Text'\n\n    TradeIdentification:\n      name: tradeIdentification\n      in: path\n      description: Identification for the trade of an order as assigned by the executing party.\n      required: true\n      schema:\n        $ref: '#/components/schemas/Max35Text'\n      \n    Accept-Language:\n      name: Accept-Language\n      in: header\n      description: List of acceptable human languages for response. [RFC 7231, Section 5.3.5]\n      schema:\n        type: string\n      example: da, en-gb;q=0.8, en;q=0.7\n\n  responses:\n    # ------------------------------------------------------------------------------------------------------------------\n    # COMPONENTS/RESPONSES\n    # ------------------------------------------------------------------------------------------------------------------\n\n    OK_200_OrderCollection:\n      description: \u003e-\n        The requested collection of securities orders is delivered in the response.\n\n        *The 200 (OK) status code indicates that the request has succeeded.*\n        [RFC 7231, Section 6.3.1]\n      headers:\n        Content-Language:\n          $ref: '#/components/headers/Content-Language'\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/SecuritiesOrder'\n\n    OK_200_Order:\n      description: \u003e-\n        The requested securities order is delivered in the response.\n\n\n        *The 200 (OK) status code indicates that the request has succeeded.*\n        [RFC 7231, Section 6.3.1]\n      headers:\n        Content-Language:\n          $ref: '#/components/headers/Content-Language'\n        Last-Modified:\n          $ref: '#/components/headers/Last-Modified'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SecuritiesOrder'\n\n    OK_200_TradeCollection:\n      description: \u003e-\n        The requested securities trade collection is delivered in the response.\n\n\n        *The 200 (OK) status code indicates that the request has succeeded.*\n        [RFC 7231, Section 6.3.1]\n      headers:\n        Content-Language:\n          $ref: '#/components/headers/Content-Language'\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/SecuritiesTrade'\n\n    OK_200_Trade:\n      description: \u003e-\n        The requested securities trade is delivered in the response.\n\n\n        *The 200 (OK) status code indicates that the request has succeeded.*\n        [RFC 7231, Section 6.3.1]\n      headers:\n        Content-Language:\n          $ref: '#/components/headers/Content-Language'\n        Last-Modified:\n          $ref: '#/components/headers/Last-Modified'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SecuritiesTrade'\n\n    OK_200_OrderModification:\n      description: \u003e-\n        The securities order has been modified.\n\n\n        *The 200 (OK) status code indicates that the request has succeeded.*\n        [RFC 7231, Section 6.3.1]\n\n    OK_200_OrderCancellation:\n      description: \u003e-\n        The securities order has been cancelled.\n\n\n        *The 200 (OK) status code indicates that the request has succeeded.*\n        [RFC 7231, Section 6.3.1]\n\n    CREATED_201_OrderCreation:\n      description: \u003e-\n        The securities order has been accepted, processed and it is now available at the\n        URI delivered in the Location header field of this response.\n\n\n        *The 201 (Created) status code indicates that the request has been\n        fulfilled and has resulted in one or more new resources being\n        created.  The primary resource created by the request is identified\n        by a Location header field in the response.*\n        [RFC7231, Section 6.3.2]\n      headers:\n        Location:\n          $ref: '#/components/headers/Location'\n\n    ACCEPTED_202_OrderCreation:\n      description: \u003e-\n        The securities order has been accepted and will be processed asynchronously.\n\n\n        *The 202 (Accepted) status code indicates that the request has been\n        accepted for processing, but the processing has not been completed.\n        The request might or might not eventually be acted upon, as it might\n        be disallowed when processing actually takes place.  There is no\n        facility in HTTP for re-sending a status code from an asynchronous\n        operation.*\n        [RFC 7231, Section 6.3.3]\n\n    ACCEPTED_202_OrderModification:\n      description: \u003e-\n        The order modification has been requested and the securities order is now waiting for the broker to accept\n        or reject the modification.\n\n\n        *The 202 (Accepted) status code indicates that the request has been\n        accepted for processing, but the processing has not been completed.\n        The request might or might not eventually be acted upon, as it might\n        be disallowed when processing actually takes place.  There is no\n        facility in HTTP for re-sending a status code from an asynchronous\n        operation.*\n        [RFC 7231, Section 6.3.3]\n\n    ACCEPTED_202_OrderCancellation:\n      description: \u003e-\n        The order cancellation has been requested and the securities order is now waiting for the broker to accept\n        or reject the cancellation.\n\n\n        *The 202 (Accepted) status code indicates that the request has been\n        accepted for processing, but the processing has not been completed.\n        The request might or might not eventually be acted upon, as it might\n        be disallowed when processing actually takes place.  There is no\n        facility in HTTP for re-sending a status code from an asynchronous\n        operation.*\n        [RFC 7231, Section 6.3.3]\n\n    BAD_REQUEST_400:\n      description: \u003e-\n        The request could not be understood by the server because it is malformed or contains invalid fields.\n\n\n        *The 400 (Bad Request) status code indicates that the server cannot or\n        will not process the request due to something that is perceived to be\n        a client error (e.g., malformed request syntax, invalid request\n        message framing, or deceptive request routing).*\n        [RFC 7231, Section 6.5.1]\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              message:\n                type: string\n\n    UNAUTHORIZED_401:\n      description: \u003e-\n        The request has no authentication credentials for the target resource or the authentication credentials\n        are not valid.\n\n\n        *The 401 (Unauthorized) status code indicates that the request has not\n        been applied because it lacks valid authentication credentials for\n        the target resource.  The server generating a 401 response MUST send\n        a WWW-Authenticate header field (Section 4.1) containing at least one\n        challenge applicable to the target resource.*\n        [RFC 7235, Section 3.1]\n      headers:\n        WWW-Authenticate:\n          $ref: '#/components/headers/WWW-Authenticate'\n\n    FORBIDDEN_403:\n      description: \u003e-\n        The request has valid authentication credentials but they are not sufficient for the server to grant access\n        to the target resource.\n        In case that the server wants to hide the fact that the target resource even exists it may send a\n        404 (Not Found) status code instead of this 403 (Forbidden) status code.\n\n\n        *The 403 (Forbidden) status code indicates that the server understood\n        the request but refuses to authorize it.  A server that wishes to\n        make public why the request has been forbidden can describe that\n        reason in the response payload (if any).*\n        [RFC 7231, Section 6.5.3]\n\n    FORBIDDEN_403_Post:\n      description: \u003e-\n        The request has valid authentication credentials but they are not sufficient for the server to allow the\n        creation of the target resource.\n\n\n        *The 403 (Forbidden) status code indicates that the server understood\n        the request but refuses to authorize it.  A server that wishes to\n        make public why the request has been forbidden can describe that\n        reason in the response payload (if any).*\n        [RFC 7231, Section 6.5.3]\n\n    NOT_FOUND_404:\n      description: \u003e-\n        The target resource could not be found or the authentication credentials are not sufficient for the server\n        to grant access to it.\n\n\n        *The 404 (Not Found) status code indicates that the origin server did\n        not find a current representation for the target resource or is not\n        willing to disclose that one exists.  A 404 status code does not\n        indicate whether this lack of representation is temporary or\n        permanent.*\n        [RFC 7231, Section 6.5.4]\n\n    METHOD_NOT_ALLOWED_405_Post:\n      description: \u003e-\n        The creation of the target resource is not possible at this time.\n\n\n        *The 405 (Method Not Allowed) status code indicates that the method\n        received in the request-line is known by the origin server but not\n        supported by the target resource.  The origin server MUST generate an\n        Allow header field in a 405 response containing a list of the target\n        resource's currently supported methods.*\n        [RFC 7231, Section 6.5.5]\n\n    METHOD_NOT_ALLOWED_405_Put:\n      description: \u003e-\n        The modification of the target resource is not possible at this time.\n\n\n        *The 405 (Method Not Allowed) status code indicates that the method\n        received in the request-line is known by the origin server but not\n        supported by the target resource.  The origin server MUST generate an\n        Allow header field in a 405 response containing a list of the target\n        resource's currently supported methods.*\n        [RFC 7231, Section 6.5.5]\n\n    METHOD_NOT_ALLOWED_405_Delete:\n      description: \u003e-\n        The deletion of the target resource is not possible at this time.\n\n\n        *The 405 (Method Not Allowed) status code indicates that the method\n        received in the request-line is known by the origin server but not\n        supported by the target resource.  The origin server MUST generate an\n        Allow header field in a 405 response containing a list of the target\n        resource's currently supported methods.*\n        [RFC 7231, Section 6.5.5]\n\n  schemas:\n    # ------------------------------------------------------------------------------------------------------------------\n    # COMPONENTS/SCHEMAS\n    # ------------------------------------------------------------------------------------------------------------------\n\n    AccountIdentification4Choice:\n      description: Specifies the unique identification of an account as assigned by the account servicer.\n      oneOf:\n      - title: IBAN\n        type: object\n        description: \u003e-\n          International Bank Account Number (IBAN) - identifier used internationally by financial institutions to\n          uniquely identify the account of a customer. Further specifications of the format and content of the IBAN\n          can be found in the standard ISO 13616 \"Banking and related financial services - International Bank Account\n          Number (IBAN)\" version 1997-10-01, or later revisions.\n        properties:\n          iban:\n            $ref: '#/components/schemas/IBAN2007Identifier'\n        required:\n        - iban\n      - title: Other\n        type: object\n        description: \u003e-\n          Unique identification of an account, as assigned by the account servicer, using an identification scheme.\n        properties:\n          other:\n            $ref: '#/components/schemas/GenericAccountIdentification1'\n        required:\n        - other\n\n    AccountSchemeName1Choice:\n      description: Sets of elements to identify a name of the identification scheme.\n      oneOf:\n      - type: object\n        title: Code\n        description: Name of the identification scheme, in a coded form as published in an external list.\n        properties:\n          code:\n            $ref: '#/components/schemas/ExternalAccountIdentification1Code'\n        required:\n        - code\n      - type: object\n        title: Proprietary\n        description: Name of the identification scheme, in a free tex.\n        properties:\n          proprietary:\n            $ref: '#/components/schemas/Max35Text'\n        required:\n        - proprietary\n\n    ActiveCurrencyCode:\n      type: string\n      description: \u003e-\n        A code allocated to a currency by a Maintenance Agency under an international identification scheme,\n        as described in the latest edition of the international standard ISO 4217 \"Codes for the representation\n        of currencies and funds\".\n\n\n        Validation Rules:\n\n        * ActiveCurrency: The currency code must be a valid active currency code, not yet withdrawn on the day\n          the message containing the currency is exchanged. Valid active currency codes are registered with the\n          ISO 4217 Maintenance Agency, consist of three (3) contiguous letters, and are not yet withdrawn on the\n          day the message containing the Currency is exchanged.\n      pattern: '^[A-Z]{3}$'\n      minLength: 3\n      maxLength: 3\n\n    ActiveOrHistoricCurrencyAndAmount:\n      type: object\n      description: \u003e-\n        A number of monetary units specified in an active or a historic currency where the unit of currency\n        is explicit and compliant with ISO 4217.\n      properties:\n        currency:\n          $ref: '#/components/schemas/ActiveOrHistoricCurrencyCode'\n        amount:\n          $ref: '#/components/schemas/ImpliedCurrencyAndAmount'\n      required:\n      - currency\n      - amount\n\n    ActiveOrHistoricCurrencyCode:\n      type: string\n      description: \u003e-\n        A code allocated to a currency by a Maintenance Agency under an international identification scheme,\n        as described in the latest edition of the international standard ISO 4217 \"Codes for the representation\n        of currencies and funds\".\n\n        Validation Rules:\n        * ActiveOrHistoricCurrency: The Currency Code must be registered, or have already been registered.\n          Valid active or historic currency codes are registered with the ISO 4217 Maintenance Agency,\n          consist of three (3) contiguous letters, and may be or not be withdrawn on the day the message containing\n          the Currency is exchanged.\n      pattern: '^[A-Z]{3}$'\n      minLength: 3\n      maxLength: 3\n\n    AllocationDetails:\n      # Not part of the ISO 20022 Repository\n      type: object\n      description: Client impacted by the order.\n      properties:\n        allocationIdentification:\n          description: Unique and unambiguous identifier for the allocation, as assigned by the receiving party.\n          allOf:\n          - $ref: '#/components/schemas/Max35Text'\n          readOnly: true\n        clientAllocationReference:\n          description: Unique and unambiguous identifier for the allocation, as assigned by the instructing party.\n          allOf:\n          - $ref: '#/components/schemas/Max35Text'\n        investmentAccountDetails:\n          $ref: '#/components/schemas/InvestmentAccount58'\n        cashAccountDetails:\n          $ref: '#/components/schemas/CashAccount38'\n        allocationQuantity:\n          $ref: '#/components/schemas/OrderQuantityChoice'\n      required:\n      - allocationIdentification\n      - clientAllocationReference\n      - investmentAccountDetails\n      - allocationQuantity\n\n    AmountAndDirection28:\n      description: \u003e-\n        Posting of an item to a cash account, in the context of a cash transaction, that results in an increase or\n        decrease to the balance of the account.\n      properties:\n        accruedInterestIndicator:\n          type: boolean\n          description: Indicates whether the net proceeds include interest accrued on the financial instrument.\n        stampDutyIndicator:\n          type: boolean\n          description: Indicates whether the settlement amount includes the stamp duty amount.\n        currency:\n          description: Currency of amount of money in the cash entry.\n          allOf:\n          - $ref: '#/components/schemas/ActiveOrHistoricCurrencyCode'\n        amount:\n          description: Amount of money in the cash entry.\n          allOf:\n          - $ref: '#/components/schemas/ImpliedCurrencyAndAmount'\n        creditDebitIndicator:\n          $ref: '#/components/schemas/CreditDebitCode'\n        originalCurrency: \n          description: \u003e-\n            Original currency of posting/settlement amount when conversion from/into another currency has occurred.\n          allOf:\n          - $ref: '#/components/schemas/ActiveOrHistoricCurrencyCode'\n        originalAmount:\n          description: \u003e-\n            Posting/settlement amount in its original currency when conversion from/into another currency has occurred.\n          allOf:\n          - $ref: '#/components/schemas/ImpliedCurrencyAndAmount'\n        foreignExchangeDetails:\n          description: Information needed to process a currency exchange or conversion.\n          allOf:\n          - $ref: '#/components/schemas/ForeignExchangeTerms18'\n        valueDate:\n          description: \u003e-\n            Date and time at which the cash is at the disposal of the credit account owner, or ceases\n            to be at the disposal of the debit account owner.\n          allOf:\n          - $ref: '#/components/schemas/DateAndDateTime1Choice'\n      required:\n      - currency\n      - amount\n\n    AmountAndDirection29:\n      type: object\n      description: Amount of money debited or credited on the books of an account servicer.\n      properties:\n        currency:\n          description: Currency of amount of money in the cash entry.\n          allOf:\n          - $ref: '#/components/schemas/ActiveOrHistoricCurrencyCode'\n        amount:\n          description: Amount of money in the cash entry.\n          allOf:\n          - $ref: '#/components/schemas/ImpliedCurrencyAndAmount'\n        creditDebitIndicator:\n          $ref: '#/components/schemas/CreditDebitCode'\n        originalCurrency: \n          description: \u003e-\n            Original currency of posting/settlement amount when conversion from/into another currency has occurred.\n          allOf:\n          - $ref: '#/components/schemas/ActiveOrHistoricCurrencyCode'\n        originalAmount:\n          description: \u003e-\n            Posting/settlement amount in its original currency when conversion from/into another currency has occurred.\n          allOf:\n          - $ref: '#/components/schemas/ImpliedCurrencyAndAmount'\n        foreignExchangeDetails:\n          description: Information needed to process a currency exchange or conversion.\n          allOf:\n          - $ref: '#/components/schemas/ForeignExchangeTerms18'\n      required:\n      - currency\n      - amount\n\n    BaseOneRate:\n      type: string\n      description: \u003e- \n        Rate expressed as a decimal, for example, 0.7 is 7/10 and 70%.\n\n        * Total number of digits: 11\n\n        * Number of digits in fractional part: 10\n\n        * Base value: 1\n      pattern: '^-?[0-9]{1,11}(\\.[0-9]{1,10})?$'\n      minLength: 1\n      maxLength: 13\n\n    CashAccount38:\n      type: object\n      description: \u003e-\n        Unique and unambiguous identification for the cash account between the account owner\n        and the account servicer.\n      properties:\n        identification:\n          $ref: '#/components/schemas/AccountIdentification4Choice'\n      required:\n      - identification\n\n    CFIIdentifier:\n      type: string\n      description: \u003e-\n        Classification type of the financial instrument, as per the ISO 10962 Classification of Financial Instrument\n        (CFI) codification, eg, common share with voting rights, fully paid, or registered.\n      pattern: '^[A-Z]{1,6}$'\n      minLength: 1\n      maxLength: 6\n\n    ChargeBasis2Choice:\n      description: Choice of formats for the charge or commission basis.\n      oneOf:\n      - title: Code\n        type: object\n        description: Fee (charge/commission) basis expressed as a code.\n        properties:\n          code:\n            $ref: '#/components/schemas/TaxationBasis5Code'\n        required:\n        - code\n      - title: Proprietary\n        type: object\n        description: Fee (charge/commission) basis expressed as a proprietary code.\n        properties:\n          proprietary:\n            $ref: '#/components/schemas/GenericIdentification47'\n        required:\n        - proprietary\n\n    ChargeType5Choice:\n      description: Choice of formats for the type of fee (charge/commission).\n      oneOf:\n      - title: Code\n        type: object\n        description: Fee (charge/commission) expressed as a code.\n        properties:\n          code:\n            $ref: '#/components/schemas/InvestmentFundFee1Code'\n        required:\n        - code\n      - title: Proprietary\n        type: object\n        description: Fee (charge/commission) expressed as a proprietary code.\n        properties:\n          proprietary:\n            $ref: '#/components/schemas/GenericIdentification47'\n        required:\n        - proprietary\n\n    ClassificationType30Choice:\n      description: Choice of format for the classification.\n      oneOf:\n      - title: ClassificationFinancialInstrument\n        type: object\n        description: ISO 10962 Classification of Financial Instrument (CFI).\n        properties:\n          classificationFinancialInstrument:\n            $ref: '#/components/schemas/CFIIdentifier'\n        required:\n        - classificationFinancialInstrument\n      - title: AlternateClasification\n        type: object\n        description: Proprietary classification of financial instrument.\n        properties:\n          alternateClassifiction:\n            $ref: '#/components/schemas/GenericIdentification36'\n        required:\n        - alternateClassification\n\n    CountryCode:\n      type: string\n      description: \u003e-\n        Code to identify a country, a dependency, or another area of particular geopolitical interest, on the basis\n        of country names obtained from the United Nations (ISO 3166, Alpha-2 code).\n\n\n        Validation Rules:\n\n        * Country: The code is checked against the list of country names obtained from the United Nations (ISO 3166,\n        Alpha-2 code).\n      pattern: '^[A-Z]{2}$'\n      minLength: 2\n      maxLength: 2\n\n    CreditDebitCode:\n      type: string\n      description: Specifies if an operation is an increase or a decrease.\n      enum:\n      - CRDT # Credit\n      - DBIT # Debit\n\n    DateAndDateTime1Choice:\n      description: Choice between a date or a date and time format.\n      oneOf:\n      - title: Date\n        type: object\n        description: Numeric representation of the day of the month and year.\n        properties:\n          date:\n            $ref: '#/components/schemas/ISODate'\n        required:\n        - date\n      - title: DateTime\n        type: object\n        description: Numeric representation of time of the day and the day of the month and year.\n        properties:\n          dateTime:\n            $ref:  \"#/components/schemas/ISODateTime\"\n        required:\n        - dateTime\n\n    DateFormat42Choice:\n      description: Choice of formats for a date.\n      oneOf:\n      - title: YearMonth\n        type: object\n        description: Year and month.\n        properties:\n          yearMonth:\n            $ref: '#/components/schemas/ISOYearMonth'\n        required:\n        - yearMonth\n      - title: YearMonthDay\n        type: object\n        description: Year, month and date.\n        properties:\n          yearMonthDay:\n            $ref: '#/components/schemas/ISODate'\n        required:\n        - yearMonthDay\n\n    DecimalNumber:\n      type: string\n      description: \u003e-\n        Number of objects represented as a decimal number, for example 0.75 or 45.6.\n\n        * Total number of digits: 18\n\n        * Number of digits in fractional part: 17\n      pattern: '^-?[0-9]{1,18}(\\.[0-9]{1,17})?$'\n      minLength: 1\n      maxLength: 20\n\n    Exact4AlphaNumericText:\n      type: string\n      description: Specifies an alphanumeric string with a length of 4 characters.\n      pattern: '^[a-zA-Z0-9]{4}$'\n      minLength: 4\n      maxLength: 4\n\n    ExecutionTimeLimit1Code:\n      type: string\n      description: Indicates from/until when an order must be executed.\n      enum:\n      - OPEN # AtTheOpening\n      - CLOS # AtTheClosing\n      - GDAY # GoodForTheDay\n      - GTCA # GoodUntilCancelled\n      - GTHD # GoodThroughDate\n      - GTMO # GoodForTheMonth\n      - FIKI # FillOrKill\n      - GTNM # GoodUntilTheEndOfNextMonth\n      - GTXO # GoodTillCrossed\n      - IOCA # ImmediateOrCance\n\n    ExecutionTypeChoice:\n      description: Indicates the type of instruction to a broker or dealer to buy or sell a financial instrument.\n      oneOf:\n      - title: Code\n        type: object\n        description: Indicates the type of instruction to a broker or dealer to buy or sell a financial instrument.\n        properties:\n          code:\n            $ref: '#/components/schemas/OrderType2Code'\n        required:\n        - code\n      - title: Proprietary\n        type: object\n        description: Proprietary type of instruction.\n        properties:\n          proprietary:\n            $ref: '#/components/schemas/GenericIdentification38'\n        required:\n        - proprietary\n\n    ExemptionReason1Choice:\n      description: Choice of formats for the exemption reason.\n      oneOf:\n      - title: Code\n        type: object\n        description: Exemption reason expressed as a code.\n        properties:\n          code:\n            $ref: '#/components/schemas/TaxExemptReason1Code'\n        required:\n        - code\n      - title: Proprietary\n        type: object\n        description: Exemption reason expressed as a proprietary code.\n        properties:\n          proprietary:\n            $ref: '#/components/schemas/GenericIdentification47'\n        required:\n        - proprietary\n\n    ExternalAccountIdentification1Code:\n      type: string\n      description: \u003e-\n        Specifies the external account identification scheme name code in the format of character string with a\n        maximum length of 4 characters. The list of valid codes is an external code list published separately.\n        External code sets can be downloaded from www.iso20022.org.\n      minLength: 1\n      maxLength: 4\n\n    ExternalTradeTransactionCondition1Code:\n      type: string\n      description: \u003e-\n        Specifies the external Trade Transaction Condition code in the format of character string with a maximum\n        length of 4 characters. The list of valid codes is an external code list published separately.\n        External code sets can be downloaded from www.iso20022.org.\n      minLength: 1\n      maxLength: 4\n      example: BTEX\n\n    Fee1:\n      type: object\n      description: \u003e-\n        Individual fee (charge/commission).\n\n\n        Validation Rules:\n\n        * [requestedCurrency] is required when [requestedAmount] is present.\n\n        * [requestedAmount] is required when [requestedCurrency] is present.\n\n        * FeeElementRule: One of the elements ( [requestedAmount], [requestedRate] ) must be present.\n      properties:\n        type:\n          description: Type of fee (charge/commission).\n          allOf:\n          - $ref: '#/components/schemas/ChargeType5Choice'\n        basis:\n          description: Method used to calculate the fee (charge/commission).\n          allOf:\n          - $ref: '#/components/schemas/ChargeBasis2Choice'\n        requestedCurrency:\n          description: Currency of requested fee (charge/commission) amount as agreed for the account.\n          allOf:\n          - $ref: '#/components/schemas/ActiveCurrencyCode'\n        requestedAmount:\n          description: Requested fee (charge/commission) amount as agreed for the account.\n          allOf:\n          - $ref: '#/components/schemas/ImpliedCurrencyAndAmount'\n        requestedRate:\n          description: \u003e-\n            Requested rate used to calculate the amount of the fee (charge/commission), as agreed for the account.\n          allOf:\n          - $ref: '#/components/schemas/PercentageRate'\n      required:\n      - type\n\n    FeeAndTax1:\n      type: object\n      description: Amount of money associated with a service.\n      properties:\n        commercialAgreementReference:\n          description: \u003e-\n            Reference to the agreement established between the fund and another party.\n            This element, amongst others, defines the conditions of the commissions.\n          allOf:\n          - $ref: '#/components/schemas/Max35Text'\n        individualFee:\n          type: array\n          items:\n            $ref: '#/components/schemas/Fee1'\n          readOnly: true\n        individualTax:\n          type: array\n          items:\n            $ref: '#/components/schemas/Tax30'\n          readOnly: true\n\n    FinancialInstrumentDetails:\n      # Not part of the ISO 20022 Repository\n      # Properties from FinancialInstrument57 and FinancialInstrumentAttributes44\n      type: object\n      description: Financial instrument identification and elements characterising it.\n      properties:\n        instrumentIdentification:\n          $ref: '#/components/schemas/InstrumentIdentification'\n        alternativeInstrumentIdentification:\n          type: array\n          description: Alternative identifications of a financial instrument.\n          items:\n            $ref: '#/components/schemas/InstrumentIdentification'\n        seriesIdentification:\n          $ref: '#/components/schemas/Series1'\n        versionNumber:\n          $ref: '#/components/schemas/Number1Choice'\n        classificationType:\n          $ref: '#/components/schemas/ClassificationType30Choice'\n        optionStyle:\n          $ref: '#/components/schemas/OptionStyle6Choice'\n        optionType:\n          $ref: '#/components/schemas/OptionType4Choice'\n        maturityDate:\n          description: Planned final repayment date at the time of issuance.\n          allOf:\n          - $ref: '#/components/schemas/ISODate'\n        currentFactor:\n          description: \u003e-\n            Rate expressed as a decimal between 0 and 1 defining the outstanding principal of the\n            financial instrument (for factored securities).\n          allOf:\n          - $ref: '#/components/schemas/BaseOneRate'\n        exercisePrice:\n          description: \u003e-\n            Predetermined price at which the holder of a derivative will buy or sell the underlying instrument.\n          allOf:\n          - $ref: '#/components/schemas/Price4'\n        contractSize:\n          description: Ratio or multiplying factor used to convert one contract into a quantity.\n          allOf:\n          - $ref: '#/components/schemas/FinancialInstrumentQuantity18Choice'\n      required:\n      - instrumentIdentification\n\n    FinancialInstrumentQuantity1Choice:\n      description: Choice between formats for the quantity of security.\n      oneOf:\n      - title: Unit\n        type: object\n        description: Quantity expressed as a number, for example, a number of shares.\n        properties:\n          unit:\n            $ref: '#/components/schemas/DecimalNumber'\n        required:\n        - unit\n      - title: FaceAmount\n        type: object\n        description: \u003e-\n          Quantity expressed as an amount representing the face amount, that is, the principal, of a debt instrument.\n        properties:\n          faceAmount:\n            $ref: '#/components/schemas/ImpliedCurrencyAndAmount'\n        required:\n          - faceAmount\n\n    FinancialInstrumentQuantity18Choice:\n      description: Choice between formats for the quantity of security.\n      oneOf:\n      - title: Unit\n        type: object\n        description: Quantity expressed as a number, for example, a number of shares.\n        properties:\n          unit:\n            $ref: '#/components/schemas/DecimalNumber'\n        required:\n        - unit\n      - title: FaceAmount\n        type: object\n        description: \u003e-\n          Quantity expressed as an amount representing the face amount, that is, the principal, of a debt instrument.\n        properties:\n          faceAmount:\n            $ref: '#/components/schemas/ImpliedCurrencyAndAmount'\n        required:\n          - faceAmount\n\n    ForeignExchangeTerms18:\n      type: object\n      description: Provides information about the terms of the foreign exchange transaction.\n      properties:\n        unitCurrency:\n          description: \u003e-\n            Currency in which the rate of exchange is expressed in a currency exchange.\n            In the example 1GBP = xxxCUR, the unit currency is GBP.\n          allOf:\n          - $ref: '#/components/schemas/ActiveCurrencyCode'\n        quotedCurrency:\n          description: Currency into which the base currency is converted, in a currency exchange.\n          allOf:\n          - $ref: '#/components/schemas/ActiveCurrencyCode'\n        exchangeRate:\n          description: \u003e-\n            Factor used for the conversion of an amount from one currency into another. This reflects the price\n            at which one currency was bought with another currency. Usage: ExchangeRate expresses the ratio between\n            UnitCurrency and QuotedCurrency  (ExchangeRate = UnitCurrency/QuotedCurrency).\n          allOf:\n          - $ref: '#/components/schemas/BaseOneRate'\n        convertedCurrency:\n          description: Currency following a foreign exchange conversion.\n          allOf:\n          - $ref: '#/components/schemas/ActiveCurrencyCode'\n        convertedAmount:\n          description: Amount following a foreign exchange conversion.\n          allOf:\n          - $ref: '#/components/schemas/ImpliedCurrencyAndAmount'\n      required:\n      - unitCurrency\n      - quotedCurrency\n      - exchangeRate\n      - convertedCurrency\n      - convertedAmount\n\n    GenericAccountIdentification1:\n      type: object\n      properties:\n        identification:\n          description: Identification assigned by an institution.\n          allOf:\n          - $ref: '#/components/schemas/Max34Text'\n        schemeName:\n          title: AccountSchemeName1Choice\n          description: Name of the identification scheme.\n          allOf:\n          - $ref: '#/components/schemas/AccountSchemeName1Choice'\n        issuer:\n          description: Entity that assigns the identification.\n          allOf:\n          - $ref: '#/components/schemas/Max35Text'\n      required:\n      - identification\n\n    GenericIdentification7:\n      type: object\n      description: Information expressed in a proprietary format.\n      properties:\n        issuer:\n          description: Entity that assigns the identification.\n          allOf:\n          - $ref: '#/components/schemas/Max8Text'\n        information:\n          description: Proprietary information, often a code, issued by the data source scheme issuer.\n          allOf:\n          - $ref: '#/components/schemas/Max35Text'\n      required:\n      - issuer\n      - information\n\n    GenericIdentification36:\n      type: object\n      description: Identification using a proprietary scheme.\n      properties:\n        identification:\n          description: Proprietary information, often a code, issued by the data source scheme issuer.\n          allOf:\n          - $ref: '#/components/schemas/Max35Text'\n        issuer:\n          description: Entity that assigns the identification.\n          allOf:\n          - $ref: '#/components/schemas/Max35Text'\n        schemeName:\n          description: Short textual description of the scheme.\n          allOf:\n          - $ref: '#/components/schemas/Max35Text'\n      required:\n      - identification\n      - issuer\n\n    GenericIdentification38:\n      type: object\n      description: Identification expressed as a proprietary type and narrative description.\n      properties:\n        identification:\n          description: Proprietary information, often a code, issued by the data source scheme issuer.\n          allOf:\n          - $ref: '#/components/schemas/Exact4AlphaNumericText'\n        issuer:\n          description: Entity that assigns the identification.\n          allOf:\n          - $ref: '#/components/schemas/Max35Text'\n        schemeName:\n          description: Short textual description of the scheme.\n          allOf:\n          - $ref: '#/components/schemas/Max35Text'\n      required:\n      - identification\n      - issuer\n\n    GenericIdentification47:\n      type: object\n      description: Identification expressed as a proprietary type and narrative description.\n      properties:\n        identification:\n          description: Proprietary information, often a code, issued by the data source scheme issuer.\n          allOf:\n          - $ref: '#/components/schemas/Exact4AlphaNumericText'\n        issuer:\n          description: Entity that assigns the identification.\n          allOf:\n          - $ref: '#/components/schemas/Max4AlphaNumericText'\n        schemeName:\n          description: Short textual description of the scheme.\n          allOf:\n          - $ref: '#/components/schemas/Max4AlphaNumericText'\n      required:\n      - identification\n      - issuer\n\n    IBAN2007Identifier:\n      type: string\n      description: \u003e-\n        An identifier used internationally by financial institutions to uniquely identify the account of a customer\n        at a financial institution, as described in the latest edition of the international standard ISO 13616:\n        2007 - \"Banking and related financial services - International Bank Account Number (IBAN)\".\n\n\n        Validation Rules:\n\n        * IBAN: A valid IBAN consists of all three of the following components: Country Code, check digits and BBAN.\n      pattern: '^[A-Z]{2}[0-9]{2}[a-zA-Z0-9]{1,30}$'\n      minLength: 5\n      maxLength: 34\n\n    ImpliedCurrencyAnd13DecimalAmount:\n      # Not part of the ISO 20022 Repository\n      type: string\n      description: \u003e-\n        Number of monetary units specified in a currency where the unit of currency is implied by the context and\n        compliant with ISO 4217. The decimal separator is a dot.  \n        Note: a zero amount is considered a positive amount.\n\n        * Total number of digits: 18\n\n        * Number of digits in fractional part: 13\n\n        * minInclusive: 0\n      pattern: '^[0-9]{1,18}(\\.[0-9]{1,13})?$'\n      minLength: 1\n      maxLength: 19\n\n    ImpliedCurrencyAndAmount:\n      type: string\n      description: \u003e-\n        Number of monetary units specified in a currency where the unit of currency is implied by the context and\n        compliant with ISO 4217. The decimal separator is a dot.  \n        Note: a zero amount is considered a positive amount.\n\n        * Total number of digits: 18\n\n        * Number of digits in fractional part: 5\n\n        * minInclusive: 0\n      pattern: '^[0-9]{1,18}(\\.[0-9]{1,5})?$'\n      minLength: 1\n      maxLength: 19\n\n    InstrumentIdentification:\n      # Not part of the ISO 20022 Repository\n      type: object\n      properties:\n        identification:\n          description: Identification of a financial instrument.\n          allOf:\n          - $ref: '#/components/schemas/Max35Text'\n        identificationType:\n          description: Type of identification of a financial instrument.\n          allOf:\n          - $ref: '#/components/schemas/Max35Text'\n      required:\n      - identification\n      - identificationType\n\n    InvestmentAccount58:\n      type: object\n      properties:\n        accountIdentification:\n          description: \u003e-\n            Unique and unambiguous identification for the account between the account owner and the account servicer.\n          allOf:\n          - $ref: '#/components/schemas/Max35Text'\n      required:\n      - accountIdentification\n\n    InvestmentFundFee1Code:\n      type: string\n      description: Specifies the type of service for which a fee is asked or paid.\n      enum:\n      - BEND # BackEndLoad\n      - BRKF # BrokerageFee\n      - COMM # Commission\n      - CDPL # CommissionDePlacement\n      - CDSC # ContingentDeferredSalesCharge\n      - CBCH # CorrespondentBankCharge\n      - DLEV # DilutionLevy\n      - FEND # FrontEndLoad\n      - INIT # InitialCharge\n      - ADDF # AdditionalFee\n      - POST # PostageCharge\n      - PREM # Premium\n      - CHAR # ServiceProvisionFee\n      - SHIP # ShippingCharge\n      - SWIT # Switch\n      - UCIC # UCITSCommission\n      - REGF # RegulatoryFee\n      - PENA # Penalty\n\n    ISODate:\n      type: string\n      description: \u003e-\n        A particular point in the progression of time in a calendar year expressed in the YYYY-MM-DD format. This\n        representation is defined in \"XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October\n        2004\" which is aligned with ISO 8601.\n      format: date\n\n    ISODateTime:\n      type: string\n      description: \u003e-\n        A particular point in the progression of time defined by a mandatory date and a mandatory time component,\n        expressed in either UTC time format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format\n        (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format (YYYY-MM-DDThh:mm:ss.sss). These representations\n        are defined in \"XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004\"\n        which is aligned with ISO 8601.\n\n\n        Note on the time format:\n\n        1) beginning / end of calendar day\n\n        * 00:00:00 = the beginning of a calendar day\n\n        * 24:00:00 = the end of a calendar day\n\n        2) fractions of second in time format\n\n        * Decimal fractions of seconds may be included. In this case, the involved parties shall agree on the\n        maximum number of digits that are allowed.\n      format: date-time\n\n    ISOYearMonth:\n      type: string\n      description: \u003e-\n        Month within a particular calendar year represented by YYYY-MM (ISO 8601).\n      pattern: '^[0-9]{4}-(0[1-9]|1[0-2])$'\n      minLength: 7\n      maxLength: 7\n\n    MarketIdentification3Choice:\n      description: \u003e-\n        Choice of market identification.\n\n\n        Note: The element \"Description\" in the ISO 20022 definition of MarketIdentification3CHoice has been replaced\n        here by a new element \"Proprietary\" based on GenericIdentification36.\n      oneOf:\n      - title: MarketIdentifierCode\n        type: object\n        description: \u003e-\n          Market Identifier Code. Identification of a financial market, as stipulated in the norm ISO 10383\n          \"Codes for exchanges and market identifications\".\n        properties:\n          marketIdentifierCode:\n            $ref: '#/components/schemas/MICIdentifier'\n        required:\n        - marketIdentifierCode\n      - title: Proprietary\n        type: object\n        description: Description of the market when no Market Identifier Code is available.\n        properties:\n          proprietary:\n            $ref: '#/components/schemas/GenericIdentification36'\n        required:\n        - proprietary\n\n    MarketIdentification79:\n      type: object\n      description: \u003e-\n        Context, or geographic environment, in which trading parties may meet in order to negotiate\n        and execute trades among themselves.\n      properties:\n        identification:\n          title: MarketIdentification3Choice\n          description: \u003e-\n            Code allocated to places of trade, ie, stock exchanges, regulated markets, eg, Electronic Trading\n            Platforms (ECN), and unregulated markets, eg, Automated Trading Systems (ATS), as sources of prices\n            and related information, in order to facilitate automated processing.\n          allOf:\n          - $ref: '#/components/schemas/MarketIdentification3Choice'\n        type:\n          title: MarketType11Choice\n          description: Nature of a market in which transactions take place.\n          allOf:\n          - $ref: '#/components/schemas/MarketType11Choice'\n\n    MarketType6Code:\n      type: string\n      description: \u003e-\n        Specifies the type of place where a trade was executed, a price was sourced from, an instrument is listed.\n      enum:\n      - OTCO # OverTheCounter\n      - VARI # Various\n      - EXCH # StockExchange\n\n    MarketType11Choice:\n      description: Choice of format for the market type.\n      oneOf:\n      - title: Code\n        type: object\n        description: Market type expressed as an ISO 20022 code.\n        properties:\n          code:\n            $ref: '#/components/schemas/MarketType6Code'\n        required:\n        - code\n      - title: Proprietary\n        type: object\n        description: Market type expressed as a proprietary code.\n        properties:\n          proprietary:\n            $ref: '#/components/schemas/GenericIdentification38'\n        required:\n        - proprietary\n\n    Max3Number:\n      type: integer\n      description: \u003e-\n        Number (max 999) of objects represented as an integer.\n\n        * Total number of digit: 3\n\n        * Number of digits in fractional part: 0\n\n\n        Validation Rules:\n\n        * NumberRule: If Number is negative, then Sign must be present.\n      format: int32\n      maximum: 999\n      minimum: -999\n\n    Max3NumericText:\n      type: string\n      description: Specifies a numeric string with a maximum length of 3 digits.\n      pattern: '^[0-9]{1,3}$'\n      minLength: 1\n      maxLength: 3\n\n    Max4AlphaNumericText:\n      type: string\n      description: Specifies an alphanumeric string with a maximum length of 4 characters.\n      pattern: '^[a-zA-Z0-9]{1,4}$'\n      minLength: 1\n      maxLength: 4\n\n    Max8Text:\n      type: string\n      description: Specifies a character string with a maximum length of 8 characters.\n      minLength: 1\n      maxLength: 8\n\n    Max34Text:\n      type: string\n      description: Specifies a character string with a maximum length of 34 characters.\n      minLength: 1\n      maxLength: 34\n      \n    Max35Text:\n      type: string\n      description: Specifies a character string with a maximum length of 35 characters.\n      minLength: 1\n      maxLength: 35\n\n    MICIdentifier:\n      type: string\n      description: \u003e-\n        Market Identifier Code. The identification of a financial market, as stipulated in the norm ISO 10383\n        'Codes for exchanges and market identifications'.\n      pattern: '^[A-Z0-9]{4}$'\n      minLength: 4\n      maxLength: 4\n\n    Number1Choice:\n      description: Choice of format for the number.\n      oneOf:\n      - title: NumberIdentification\n        type: object\n        description: Number of maximum 3 numeric text.\n        properties:\n          numberIdentification:\n            $ref: '#/components/schemas/Max3NumericText'\n        required:\n        - numberIdentification\n      - title: Proprietary\n        type: object\n        description: Proprietary number format.\n        properties:\n          proprietary:\n            $ref: '#/components/schemas/GenericIdentification7'\n        required:\n        - proprietary\n\n    OptionStyle4Code:\n      type: string\n      description: Defines how an option can be exercised.\n      enum:\n      - AMER # American - Option can be exercised before or on expiry date.\n      - EURO # European - Option that can be exercised on expiry date only.\n      - BERM # Bermudan - Option that can be exercised on multiple discrete dates prior to, or on expiry date.\n\n    OptionStyle6Choice:\n      description: Choice of format for the option style.\n      oneOf:\n      - title: Code\n        type: object\n        description: Option style expressed as an ISO 20022 code.\n        properties:\n          code:\n            $ref: '#/components/schemas/OptionStyle4Code'\n        required:\n        - code\n      - title: Proprietary\n        type: object\n        description: Option style expressed as a proprietary code.\n        properties:\n          proprietary:\n            $ref: '#/components/schemas/GenericIdentification38'\n        required:\n        - proprietary\n\n    OptionType1Code:\n      type: string\n      description: \u003e-\n        Indicates whether it is a Call option (right to purchase a specific underlying asset) or a Put option\n        (right to sell a specific underlying asset).\n      enum:\n      - CALL # Call - Right to buy a quantity of an asset for an agreed price at exercise date.\n      - PUTO # Put - Right to sell a quantity of an asset for an agreed price at exercise date.\n\n    OptionType4Choice:\n      description: Choice of format for the option type.\n      oneOf:\n      - title: Code\n        type: object\n        description: \u003e-\n          Indicates whether it is a Call option (right to purchase a specific underlying asset) or a Put option\n          (right to sell a specific underlying asset).\n        properties:\n          code:\n            $ref: '#/components/schemas/OptionType1Code'\n        required:\n        - code\n      - title: Proprietary\n        type: object\n        description: Option type expressed as a proprietary code.\n        properties:\n          proprietary:\n            $ref: '#/components/schemas/GenericIdentification38'\n        required:\n        - proprietary\n\n    OrderQuantityChoice:\n      # Not part of the ISO 20022 Repository\n      # Based on Quantity6Choice and FinancialInstrumentQuantity28Choice\n      oneOf:\n      - title: Quantity\n        type: object\n        description: Quantity of financial instrument in units, original face amount or current face amount.\n        properties:\n          quantity:\n            $ref: '#/components/schemas/FinancialInstrumentQuantity1Choice'\n        required:\n        - quantity\n      - title: GrossAmount\n        type: object\n        description: \u003e-\n          Amount of money to be invested in the fund or to be redeemed from the fund.\n\n          * Gross Amount = Quantity * Price.\n        properties:\n          grossAmount:\n            $ref: '#/components/schemas/ActiveOrHistoricCurrencyAndAmount'\n        required:\n        - grossAmount\n      - title: NetAmount\n        type: object\n        description: \u003e-\n          Amount of money to be paid by the investor when subscribing to fund units or to be received following\n          redemption of fund units.\n\n          * Net Amount = (Quantity * Price) + (Fees + Taxes) [Subscription of fund units]  \n\n          * Net Amount = (Quantity * Price) - (Fees + Taxes) [Redemption of fund units]\n        properties:\n          netAmount:\n            $ref: '#/components/schemas/ActiveOrHistoricCurrencyAndAmount'\n        required:\n        - netAmount\n\n    OrderStatusAndReason:\n      # Not part of the ISO 20022 Repository.\n      type: object\n      description: Specifies the current status of the order including a reason if applicable.\n      properties:\n        status:\n          $ref: '#/components/schemas/OrderStatusChoice'\n        reason:\n          $ref: '#/components/schemas/OrderStatusReasonChoice'\n        description:\n          description: Additional information regarding the current status of the order, in free text form.\n          allOf:\n          - $ref: '#/components/schemas/Max35Text'\n      required:\n      - status\n\n    OrderStatusChoice:\n      # Not part of the ISO 20022 Repository.\n      description: Choice of format for the order status.\n      oneOf:\n      - title: Code\n        type: object\n        description: Order status expressed as an ISO 20022 code.\n        properties:\n          code:\n            $ref: '#/components/schemas/OrderStatusCode'\n        required:\n        - code\n      - title: Proprietary\n        type: object\n        description: Order status expressed as a proprietary code.\n        properties:\n          proprietary:\n            $ref: '#/components/schemas/GenericIdentification38'\n        required:\n        - proprietary\n\n    OrderStatusCode:\n      type: string\n      description: Specifies the current status of the order.\n      enum:\n      - NEWW # New\n      - PARF # PartialFill\n      - FILL # Filled\n      - DONE # DoneForDay\n      - CANC # Cancelled\n      - REPL # Replaced\n      - CANP # PendingCancel\n      - STOP # Stopped\n      - REJT # Rejected\n      - SUSP # Suspended\n      - PENN # PendingNew\n      - CALC # Calculated\n      - EXPI # Expired\n      - ACBI # AcceptedForBidding\n      - PENR # PendingReplace\n      - CAND # Completed\n      - PACK # Accepted\n      - COSE # AlreadyExecuted\n      - STNP # SentToNextParty\n      - RECE # Received\n      - SETT # Settled\n      - CPNP # CommunicationProblemNextParty\n      - CNFC # ConfirmationAmendment\n      - DONF # PartiallyDone\n      - OPOD # Open\n      - IACO # InvalidAgentConfirmation\n      - CSNE # CashSettledOrderNotExecuted\n      - EXEC # Executing\n      - CACE # Cancelling\n      - ALER # Alert\n\n    OrderStatusReasonChoice:\n      description: \u003e-\n        Choice of format for the order status reason.\n\n\n        Note: Not part of the ISO 20022 Repository.\n      oneOf:\n      - title: Code\n        type: object\n        description: Order status reason expressed as an ISO 20022 code.\n        properties:\n          code:\n            $ref: '#/components/schemas/OrderStatusReasonCode'\n        required:\n        - code\n      - title: Proprietary\n        type: object\n        description: Order status reason expressed as a proprietary code.\n        properties:\n          proprietary:\n            $ref: '#/components/schemas/GenericIdentification38'\n        required:\n        - proprietary\n\n    OrderStatusReasonCode:\n      type: string\n      description: \u003e-\n        Specifies the reason for the current status of the order.\n\n        Note: This is a combination of the ISO 20022 defitions CancelledStatusReasonV2Code and\n        RejectedStatusReasonCode.\n      enum:\n      # Cancellation\n      - CANI # CancelledByYourself\n      - CANS # CancelledBySystem\n      - CSUB # CancelledByAgent\n      - CANH # CancelledByHub\n      - CANP # CancelledByInstructingParty\n      - CANO # CancelledByOther\n      - CNTA # CancelledByTransferAgent\n      - CNCL # CancelledByClient\n      - CNIN # CancelledByIntermediary\n      - CANT # CancelledDueToTransformation\n      - CANZ # CancelledSplitPartialSettlement\n      - CORP # CancelledDueToCorporateAction\n      - CREG # CancelledByIssuerRegistrar\n      - CTHP # CancelledByThirdParty\n      - BYIY # CancelledDueToBuyIn\n      - SCEX # SecuritiesNoLongerEligible\n      - CXLR # EndOfLife\n      - NARR # NarrativeReason\n      - OTHR # Other\n      # Rejection\n      - DDAT # SettlementDate\n      - IAQD # AcquisitionDate\n      - POIN # DifferentValuationPoints\n      - ICAG # DeliveringAgent\n      - IDDB # DirectDebit\n      - INTE # Intermediary\n      - SAFE # InvestmentAccount\n      - IPAY # PaymentCard\n      - ICTR # InvalidCreditTransfer\n      - DEPT # SettlementPlace\n      - IVAG # ReceivingAgent\n      - ISAF # SafekeepingPlace\n      - DFOR # InvalidSecurityForm\n      - DSEC # FinancialInstrumentIdentification\n      - BLCA # AccountBlockedForCorporateAction\n      - BLTR # AccountBlockedForTransfer\n      - DOCC # AccountBlockedMissingDocuments\n      - MONY # NotEnoughCash\n      - SECU # NotEnoughFinancialInstrument\n      - IDNA # FinancialInstrumentIdentificationAndName\n      - UWAI # UnacceptedCommissionWaiving\n      - UDCY # UnacceptedDealCurrency\n      - UNAV # UnacceptedNAVCurrency\n      - UPAY # UnacceptedPaymentMethod\n      - URSC # UnacceptedRequestedSettlementCurrency\n      - SHIG # TooHighUnitsOrAmountToSubscribe\n      - SLOW # TooLowUnitsOrAmountToSubscribe\n      - ULNK # UnknownLinkagesReference\n      - DLVY # PhysicalDeliveryImpossible\n      - ORRF # DuplicateOrderReference\n      - IPAC # InstructingPartyNotAllowedForAccount\n      - IOTP # InvalidOrderType\n      - NSLA # NotCompliantWithSLA\n      - CUTO # CutOffTime\n      - REFE # InvalidOrUnrecognisedReference\n      - NALO # NotAllowedRequest\n      - COSE # AlreadyExecuted\n      - NALC # NotAllowedToCancel\n      - LEGL # LegallyImpossible\n      - OTHR # Other\n      - DQUA # FinancialInstrumentQuantity\n      - ICTN # CertificateNumber\n      - ISTP # SettlementParties\n      - LATE # TooLate\n      - ADEA # AfterDeadline\n      - DTRD # TradeDate\n      - FEEE # FeeOrCommission\n      - IEXE # SubscriberOrRedeemer\n      - NCRR # SettlementAmountCurrency\n      - PHYS # PhysicalSettlement\n      - PLCE # PlaceOfTrade\n      - SETR # SettlementTransaction\n      - RTGS # RTGSSystem\n      - NRGM # NoCancellationMatch\n      - INUK # InvestorNameAddressUnknown\n      - INID # InsufficientInvestorData\n      - INAC # InvalidAccountServicer\n      - INNA # InvalidNomineeAccount\n      - INPM # InvalidNewPlanManager\n      - CYPA # CurrentYearPartial\n      - PTNS # PartialNotSupported\n      - FTAX # FinancialInstrumentTaxYear\n      - ISAT # InvalidISAType\n      - CASH # InvalidCashAccount\n      - TREF # DuplicateTransferReference\n      - DMON # InvalidSettlementAmount\n      - ORDR # InvalidOrderedAmount\n      - BMIN # BelowMinimumInitialInvestmentAmount\n      - BMTO # BelowMinimumTopUpAmount\n      - INSU # InsufficientCapacity\n      - PRCT # PercentageHoldingBreach\n      - BMRA # BelowMinimumRedemptionAmount\n      - BMRV # BelowMinimumRetainedAmount\n      - LOCK # LockUp\n      - ILLI # AssetsIlliquid\n      - DINV # DataInvalid\n      - CLOS # FundClosed\n      - UNSC # UnacceptableSwitchCombination\n      - NCON # NotConvertable\n      - ACLO # AssetClosed\n      - NQTY # QuantityBelowMinimum\n      - NASS # AssetNotSupported\n\n    OrderType2Code:\n      type: string\n      description: Specifies a type of order based on the Financial Information Exchange Protocol.\n      enum:\n      - MRKT # Market\n      - LMTO # Limit\n      - STOP # Stop\n      - LIWI # LimitWith\n      - LIWO # LimitWithout\n      - BAPR # OnBasisPrice\n      - MATH # MarketTouched\n      - WTWO # WithOrWithout\n      - PRQT # PreviouslyQuoted\n      - PRID # PreviouslyIndicated\n      - FXSW # ForexSwap\n      - FNRI # Funari\n      - MKLO # MarketWithLeftover\n      - PGGD # Pegged\n      - SLOS # StopLoss\n      - STLI # StopLimit\n      - COSE # CounterOrderSelection\n\n    PercentageRate:\n      type: string\n      description: \u003e-\n        Rate expressed as a percentage, that is, in hundredths, for example, 0.7 is 7/10 of a percent, and 7.0 is 7%.\n\n\n        * Total number of digits: 11\n\n        * Number of digits in fractional part: 10\n\n        * Base value: 100\n      pattern: '^-?[0-9]{1,11}(\\.[0-9]{1,10})?$'\n      minLength: 1\n      maxLength: 13\n\n    PositionEffect2Code:\n      type: string\n      description: \u003e-\n        Indicates whether the resulting position after a trade should be an opening position or closing position.\n      enum:\n      - OPEN # OpenPosition\n      - CLOS # ClosePosition\n      - ROLL # Rolled\n      - FIFO # Fifo\n      - CLOA # CloseAccount\n\n    Price4:\n      type: object\n      description: Provides the value and optionaly the type of price.\n      properties:\n        value:\n          $ref: '#/components/schemas/PriceRateOrAmountChoice'\n        type:\n          $ref: '#/components/schemas/PriceValueType7Code'\n      required:\n      - value\n      - type\n\n    PriceRateOrAmountChoice:\n      description: Choice of formats for the price.\n      oneOf:\n      - title: Rate\n        type: object\n        description: Price expressed as a rate, that is percentage.\n        properties:\n          rate:\n            $ref: '#/components/schemas/PercentageRate'\n        required:\n        - rate\n      - title: Amount\n        type: object\n        description: Price expressed as a currency and value.\n        properties:\n          currency:\n            $ref: '#/components/schemas/ActiveOrHistoricCurrencyCode'\n          amount:\n            $ref: '#/components/schemas/ImpliedCurrencyAnd13DecimalAmount'\n        required:\n        - currency\n        - amount\n\n    PriceValueType7Code:\n      type: string\n      description: Specifies a type of value of the price.\n      enum:\n      - DISC # Discount\n      - PERM # Premium\n      - PARV # Par\n      - YIEL # Yield\n      - SPRE # Spread\n      - PEUN # PerUnit\n      - ABSO # Absolute\n      - TEDP # TEDPrice\n      - TEDY # TEDYield\n      - FICT # FixedCabinetTrade\n      - VACT # VariableCabinetTrade\n      - PRCT # Percentage\n      - ACTU # ActualAmount\n\n    Quantity6Choice:\n      description: Choice of format for the quantity.\n      oneOf:\n      - title: Quantity\n        type: object\n        description: Quantity of financial instrument in units, original face amount or current face amount.\n        properties:\n          quantity:\n            $ref: '#/components/schemas/FinancialInstrumentQuantity1Choice'\n        required:\n        - quantity\n\n    SecuritiesOrder:\n      # Not part of the ISO 20022 Repository\n      type: object\n      description: \u003e-\n        A securities order represents the instruction on behalf of one or more investors for the purchase or sale\n        of a financial instrument sent to a broker or brokerage firm for trading in a stock exchange.\n        Allowed financial instruments in securities orders include shares, bonds, funds, futures and options.\n\n\n        Securities orders allow for investors to place restrictions affecting the price and time at which the order\n        can be executed and provide means for brokers or brokerage firms to communicate the status of the order back\n        to the investors.\n\n\n        This shema supports single client orders by filling [investmentAccountDetails] or multi-client orders\n        by filling [allocationDetails].\n\n\n        Validation Rules:\n\n        1. [investmentAccountDetails] is required when [allocationDetails] is empty.\n\n\n        2. [placeOfTrade] is required when [tradeTransactionCondition] does not include the code BTEX.\n\n\n        3. [tradeCurrency] is required when [tradeTransactionCondition] does not include the code BTEX.\n\n\n        4. [positionEffect] is required when [financialInstrumentDetails] corresponds to a derivative.\n\n\n        5. The following read-only fields are required when the order has been filled or partially filled:\n          * [dealPrice] and [typeOfPrice] are required.\n          * [dayExecutedQuantityForDay], [dayDealPrice] and [dayTypeOfPrice] are required.\n          * [numberOfDaysAccrued] and [accruedInterestAmount] are required.\n          * [grossTradeAmount] and [settlementAmount] are required.\n      properties:\n\n        # ORDER DETAILS\n        orderIdentification:\n          description: Unique and unambiguous identifier for the order, as assigned by the receiving party.\n          allOf:\n          - $ref: '#/components/schemas/Max35Text'\n          readOnly: true\n        clientOrderReference:\n          description: Unique and unambiguous identifier for the order, as assigned by the instructing party.\n          allOf:\n          - $ref: '#/components/schemas/Max35Text'\n        investmentAccountDetails:\n          $ref: '#/components/schemas/InvestmentAccount58'\n        cashAccountDetails:\n          $ref: '#/components/schemas/CashAccount38'\n        allocationDetails:\n          type: array\n          items:\n            $ref: '#/components/schemas/AllocationDetails'\n        side:\n          $ref: '#/components/schemas/Side3Code'\n        financialInstrumentDetails:\n          $ref: '#/components/schemas/FinancialInstrumentDetails'\n        orderQuantity:\n          $ref: '#/components/schemas/OrderQuantityChoice'\n        placeOfTrade:\n          $ref: '#/components/schemas/MarketIdentification79'\n        tradeTransactionCondition:\n          type: array\n          description: Indicates the conditions under which the order/trade is to be/was executed.\n          items:\n            $ref: '#/components/schemas/TradeTransactionCondition4Choice'\n        tradeCurrency:\n          description: \u003e-\n            Currency in which a trade transaction is to be or has been executed.\n          allOf:\n          - $ref: '#/components/schemas/ActiveCurrencyCode'\n        positionEffect:\n          $ref: '#/components/schemas/PositionEffect2Code'\n        derivativeCovered:\n          type: boolean\n          description: \u003e-\n            Indicates whether the derivative product is covered or not by an underlying financial instrument position.\n        \n        # EXECUTION DETAILS\n        executionType:\n          $ref: '#/components/schemas/ExecutionTypeChoice'\n        displayQuantity:\n          $ref: '#/components/schemas/FinancialInstrumentQuantity1Choice'\n        limitPrice:\n          $ref: '#/components/schemas/Price4'\n        stopPrice:\n          $ref: '#/components/schemas/Price4'\n        timeInForce:\n          $ref: '#/components/schemas/TimeInForceChoice'\n        expiryDateAndTime:\n          $ref: '#/components/schemas/ISODateTime'\n        \n        # ORDER STATUS\n        orderStatus:\n          allOf:\n          - $ref: '#/components/schemas/OrderStatusAndReason'\n          readOnly: true\n        executedQuantity:\n          description: \u003e-\n            Quantity of financial instrument that has been executed.\n          \n            * [executedQuantiy] = [orderQuantity] - [remainingQuantity]\n          allOf:\n          - $ref: '#/components/schemas/FinancialInstrumentQuantity1Choice'\n          readOnly: true\n        remainingQuantity:\n          description: \u003e-\n            Quantity of financial instrument that is remaining in order.\n          \n            * [remainingQuantity] = [orderQuantity] - [executedQuantity]\n          allOf:\n          - $ref: '#/components/schemas/FinancialInstrumentQuantity1Choice'\n          readOnly: true\n        dealPrice:\n          description: Amount of money for which goods or services are offered, sold, or bought.\n          allOf:\n          - $ref: '#/components/schemas/Price4'\n          readOnly: true\n        typeOfPrice:\n          description: Specifies the type of deal price.\n          allOf:\n          - $ref: '#/components/schemas/TypeOfPrice10Choice'\n          readOnly: true\n        dayOrderQuantity:\n          description: \u003e-\n            Order quantity for today.\n            \n            * [dayOrderQuantity] = [orderQuantity] - ( [executedQuantity] - [dayExecutedQuantity] )\n          allOf:\n          - $ref: '#/components/schemas/FinancialInstrumentQuantity1Choice'\n          readOnly: true\n        dayExecutedQuantity:\n          description: Quantity of order executed today.\n          allOf:\n          - $ref: '#/components/schemas/FinancialInstrumentQuantity1Choice'\n          readOnly: true\n        dayDealPrice:\n          description: Amount of money for which goods or services are offered, sold, or bought today.\n          allOf:\n          - $ref: '#/components/schemas/Price4'\n          readOnly: true\n        dayTypeOfPrice:\n          description: Specifies the type of deal price for today.\n          allOf:\n          - $ref: '#/components/schemas/TypeOfPrice10Choice'\n          readOnly: true\n\n        # BILLING DETAILS\n        numberOfDaysAccrued:\n          description: Number of days on which the interest rate accrues (daily accrual note).\n          allOf:\n          - $ref: '#/components/schemas/Max3Number'\n          readOnly: true\n        accruedInterestAmount:\n          description: \u003e-\n            Interest amount that has accrued in between two periods, for example, in between interest payment periods.\n          allOf:\n          - $ref: '#/components/schemas/AmountAndDirection29'\n          readOnly: true\n        grossTradeAmount:\n          description: Principal amount of a trade (price multiplied by quantity).\n          allOf:\n          - $ref: '#/components/schemas/AmountAndDirection29'\n          readOnly: true\n        transactionOverhead:\n          description: Fees (charges/commission) and tax to be applied to the net amount.\n          allOf:\n          - $ref: '#/components/schemas/FeeAndTax1'\n        settlementAmount:\n          description: \u003e-\n            Total amount of money to be paid or received in exchange for the securities.\n            The amount includes the principal with any commissions and fees or accrued interest.\n          allOf:\n          - $ref: '#/components/schemas/AmountAndDirection28'\n          readOnly: true\n      required:\n      - orderIdentification\n      - clientOrderReference\n      - side\n      - financialInstrumentDetails\n      - orderQuantity\n      - executionType\n      - timeInForce\n      - orderStatus\n      - dayOrderQuantity\n\n    SecuritiesTrade:\n      # Not part of the ISO 20022 Repository\n      type: object\n      description: \u003e-\n        A securities trade represents an execution of an order as occurred at a stock exchange.\n        Executions can be partial or complete fills of orders and provides the price, the time and other details\n        regarding the transaction.\n      properties:\n        tradeIdentification:\n          description: Unambiguous identifier for the trade of an order, as assigned by the executing party.\n          allOf:\n          - $ref: '#/components/schemas/Max35Text'\n          readOnly: true\n        investmentAccountDetails:\n          description: Account impacted by the trade.\n          allOf:\n          - $ref: '#/components/schemas/InvestmentAccount58'\n          readOnly: true\n        side:\n          description: Side taken by a party on an order.\n          allOf:\n          - $ref: '#/components/schemas/Side3Code'\n          readOnly: true\n        placeOfTrade:\n          description: Market in which a trade transaction has been executed.\n          allOf:\n          - $ref: '#/components/schemas/MarketIdentification79'\n          readOnly: true\n        tradeDate:\n          description: Processing date of the trading session.\n          allOf:\n          - $ref: '#/components/schemas/DateAndDateTime1Choice'\n          readOnly: true\n        confirmationQuantity:\n          description: Confirmed quantity in the current trade.\n          allOf:\n          - $ref: '#/components/schemas/Quantity6Choice'\n          readOnly: true\n        dealPrice:\n          description: Amount of money for which goods or services are offered, sold, or bought.\n          allOf:\n          - $ref: '#/components/schemas/Price4'\n          readOnly: true\n        numberOfDaysAccrued:\n          description: Number of days on which the interest rate accrues (daily accrual note).\n          allOf:\n          - $ref: '#/components/schemas/Max3Number'\n          readOnly: true\n        accruedInterestAmount:\n          description: \u003e-\n            Interest amount that has accrued in between two periods, for example, in between interest payment periods.\n          allOf:\n          - $ref: '#/components/schemas/AmountAndDirection29'\n          readOnly: true\n        grossTradeAmount:\n          description: Principal amount of a trade (price multiplied by quantity).\n          allOf:\n          - $ref: '#/components/schemas/AmountAndDirection29'\n          readOnly: true\n        transactionOverhead:\n          description: Fees (charges/commission) and tax to be applied to the net amount.\n          allOf:\n          - $ref: '#/components/schemas/FeeAndTax1'\n          readOnly: true\n        settlementAmount:\n          description: \u003e-\n            Total amount of money to be paid or received in exchange for the securities.\n            The amount includes the principal with any commissions and fees or accrued interest.\n          allOf:\n          - $ref: '#/components/schemas/AmountAndDirection28'\n          readOnly: true\n      required:\n      - tradeIdentification\n      - side\n      - placeOfTrade\n      - tradeDate\n      - confirmationQuantity\n      - dealPrice\n      - grossTradeAmount\n      - settlementAmount\n\n    Series1:\n      type: object\n      description: Choice of formats for the identification of a series.\n      properties:\n        seriesDate:\n          description: \u003e-\n            Issue date of the fund series. It is typically applicable to a redemption order, subscription order\n            confirmation or redemption order confirmation, but may be specified in the subscription order, if known.\n          allOf:\n          - $ref: '#/components/schemas/DateFormat42Choice'\n        seriesName:\n          description: \u003e-\n            Name of the fund series. It is typically applicable to a redemption order, subscription order\n            confirmation or redemption order confirmation, but may be specified in the subscription, if known.\n          allOf:\n          - $ref: '#/components/schemas/Max35Text'\n\n    Side3Code:\n      type: string\n      description: \u003e-\n        Side taken by a party on an order.\n        Includes SUBS (Subscription) and REDM (Redemption) in addition to the ISO 20022 codes.\n      minLength: 4\n      maxLength: 4\n      enum:\n      - BUYI # Buy\n      - SELL # Sell\n      - CROS # Cross\n      - CRSH # CrossShort\n      - CSHE # CrossShortExempt\n      - DEFI # AsDefined\n      - OPPO # Opposite\n      - UNDI # Undisclosed\n      - TWOS # TwoSided\n      - BUMI # BuyMinus\n      - SEPL # SellPlus\n      - SESH # SellShort\n      - SSEX # SellShortExempt\n      - LEND # Lend\n      - BORW # Borrow\n      - OPEX # OptionExercise\n      - SUBS # Subscription (not part of Side3Code in ISO 20022)\n      - REDM # Redemption (not part of Side3Code in ISO 20022)\n\n    Tax30:\n      type: object\n      description: Tax related to an investment fund order.\n      properties:\n        type:\n          description: Type of tax.\n          allOf:\n          - $ref: '#/components/schemas/TaxType3Choice'\n        tax:\n          description: Tax to be applied.\n          allOf:\n          - $ref: '#/components/schemas/TaxAmountOrRate4Choice'\n        country:\n          description: Country where the tax is due.\n          allOf:\n          - $ref: '#/components/schemas/CountryCode'\n        exemptionIndicator:\n          type: boolean\n          description: Indicates whether a tax exemption applies.\n        exemptionReason:\n          description: Reason for the tax exemption.\n          allOf:\n          - $ref: '#/components/schemas/ExemptionReason1Choice'\n        taxCalculationDetails:\n          description: Information used to calculate the tax.\n          allOf:\n          - $ref: '#/components/schemas/TaxCalculationInformation9'\n      required:\n      - type\n      - exemptionIndicator\n\n    TaxAmountOrRate4Choice:\n      description: Choice between formats for the specification of a tax.\n      oneOf:\n      - title: Amount\n        type: object\n        description: Amount of money resulting from the calculation of the tax.\n        properties:\n          currency:\n            $ref: '#/components/schemas/ActiveCurrencyCode'\n          amount:\n            $ref: '#/components/schemas/ImpliedCurrencyAndAmount'\n        required:\n        - currency\n        - amount\n      - title: Rate\n        type: object\n        description: Rate used to calculate the tax.\n        properties:\n          rate:\n            $ref: '#/components/schemas/PercentageRate'\n        required:\n        - rate\n\n    TaxationBasis5Code:\n      type: string\n      description: Specifies the tax or charge basis.\n      enum:\n      - FLAT # Flat\n      - GRAM # GrossAmount\n      - NEAM # NetAmount\n      - NAVP # NetAssetValuePrice\n      - PERU # PerUnit\n\n    TaxBasis1Choice:\n      description: Choice of formats for the tax basis.\n      oneOf:\n      - title: Code\n        type: object\n        description: Tax basis expressed as a code.\n        properties:\n          code:\n            $ref: '#/components/schemas/TaxationBasis2Code'\n        required:\n        - code\n      - title: Proprietary\n        type: object\n        description: Tax basis expressed as a proprietary code.\n        properties:\n          proprietary:\n            $ref: '#/components/schemas/GenericIdentification47'\n        required:\n        - proprietary\n\n    TaxationBasis2Code:\n      type: string\n      description: Specifies the tax basis.\n      enum:\n      - FLAT # Flat\n      - PERU # PerUnit\n\n    TaxCalculationInformation9:\n      type: object\n      description: Information used to calculate the tax.\n      properties:\n        basis:\n          $ref: '#/components/schemas/TaxBasis1Choice'\n      required:\n      - basis\n\n    TaxExemptReason1Code:\n      type: string\n      description: Specifies the reason a specific tax has not been levied/deducted on a given transaction.\n      enum:\n      - NONE # None\n      - MASA # MaxiISA\n      - MISA # MiniCashISA\n      - SISA # MiniStocksAndSharesISA\n      - IISA # MiniInsuranceISA\n      - CUYP # CurrentYearPayment\n      - PRYP # PriorYearPayment\n      - ASTR # AssetTransfer\n      - EMPY # EmployeePriorYear\n      - EMCY # EmployeeCurrentYear\n      - EPRY # EmployerPriorYear\n      - ECYE # EmployerCurrentYear\n      - NFPI # NonFundPrototypeIRA\n      - NFQP # NonFundQualifiedPlan\n      - DECP # DefinedContributionPlan\n      - IRAC # IndividualRetirementAccount\n      - IRAR # IndividualRetirementAccountRollover\n      - KEOG # KEOGH\n      - PFSP # ProfitSharingPlan\n      - 401K # FourHundredAndOneK\n      - SIRA # SelfDirectedIRA\n      - 403B # FourHundredAndThreeB\n      - 457X # FourHundredFiftySeven\n      - RIRA # RothIRAFundPrototype\n      - RIAN # RothIRANonPrototype\n      - RCRF # RothConversionIRAFundPrototype\n      - RCIP # RothConversionIRANonPrototype\n      - EIFP # EducationIRAFundPrototype\n      - EIOP # EducationIRANonPrototyp\n\n    TaxType17Code:\n      type: string\n      description: Specifies the type of tax.\n      enum:\n      - PROV # Provincial\n      - NATI # NationalTax\n      - STAT # StateTax\n      - WITH # WithholdingTax\n      - KAPA # CapitalGainTax\n      - NKAP # CapitalLossCredit\n      - INPO # InterimProfitTax\n      - STAM # StampDuty\n      - WTAX # WealthTax\n      - INHT # InheritanceTax\n      - SOSU # SolidaritySurcharge\n      - CTAX # TaxCredit\n      - GIFT # GiftTax\n      - COAX # ConsumptionTax\n      - EUTR # EUTaxRetention\n      - AKT1 # Aktiengewinn1\n      - AKT2 # Aktiengewinn2\n      - ZWIS # Zwischengewinn\n\n    TaxType3Choice:\n      description: Choice of formats for the type of tax.\n      oneOf:\n      - title: Code\n        type: object\n        description: Type of tax expressed as a code.\n        properties:\n          code:\n            $ref: '#/components/schemas/TaxType17Code'\n        required:\n        - code\n      - title: Proprietary\n        type: object\n        description: Type of tax expressed as a proprietary code.\n        properties:\n          proprietary:\n            $ref: '#/components/schemas/GenericIdentification47'\n        required:\n        - proprietary\n\n    TimeInForceChoice:\n      description: Indicates from/until when an order must be executed.\n      oneOf:\n      - title: Code\n        type: object\n        properties:\n          code:\n            $ref: '#/components/schemas/ExecutionTimeLimit1Code'\n        required:\n        - code\n      - title: Proprietary\n        type: object\n        properties:\n          proprietary:\n            $ref: '#/components/schemas/GenericIdentification38'\n        required:\n        - proprietary\n\n    TradeTransactionCondition4Choice:\n      description: Choice of format for the trade transaction condition.\n      oneOf:\n      - title: Code\n        type: object\n        description: Trade conditions expressed in a coded form as published in an external list.\n        properties:\n          code:\n            $ref: '#/components/schemas/ExternalTradeTransactionCondition1Code'\n        required:\n        - code\n      - title: Proprietary\n        type: object\n        description: Trade conditions expressed as a proprietary code.\n        properties:\n          proprietary:\n            $ref: '#/components/schemas/GenericIdentification38'\n        required:\n        - proprietary\n\n    TypeOfPrice3Code:\n      type: string\n      description: Type of price expressed as an ISO 20022 code.\n      enum:\n      - AVER # Average\n      - AVOV # AverageOverride\n      - GREX # GrossOfAll\n      - NET2 # Net\n      - NET1 # NetOfAll\n      - PARV # ParValue\n      - RDAV # RoundedAverage\n\n    TypeOfPrice10Choice:\n      description: Choice of format for the type of price.\n      oneOf:\n      - title: Code\n        type: object\n        description: Type of price expressed as an ISO 20022 code.\n        properties:\n          code:\n            $ref: '#/components/schemas/TypeOfPrice3Code'\n        required:\n        - code\n      - title: Proprietary\n        type: object\n        description: Type of price expressed as a proprietary code.\n        properties:\n          proprietary:\n            $ref: '#/components/schemas/GenericIdentification38'\n        required:\n        - proprietary\n\n  securitySchemes:\n    # ------------------------------------------------------------------------------------------------------------------\n    # COMPONENTS/SECURITY SCHEMES\n    # In this file it is only described the basic security element to transport the bearer token of an OAuth2 process.\n    # The bearer token must be included in the HTTP header.\n    #\n    # WARNING:\n    # If you want to use this file for a productive implementation, it is recommended to adjust the security schemes\n    # according to your system environments and security policies.\n    # ------------------------------------------------------------------------------------------------------------------\n    bearerAuth:\n      description: OAuth 2.0 Bearer Token [RFC 6750].\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n\nsecurity:\n  # --------------------------------------------------------------------------------------------------------------------\n  # SECURITY\n  # In this file it is only described the basic security element to transport the bearer token of an OAuth2 process.\n  # The bearer token must be included in the HTTP header.\n  #\n  # WARNING:\n  # If you want to use this file for a productive implementation, it is recommended to adjust the security schemes\n  # according to your system environments and security policies.\n  # --------------------------------------------------------------------------------------------------------------------\n  - {}\n  - bearerAuth: []\n\ntags:\n  # --------------------------------------------------------------------------------------------------------------------\n  # TAGS\n  #---------------------------------------------------------------------------------------------------------------------\n- name: Orders\n  description: Get, add, modify and delete securities orders\n- name: Executions\n  description: Get fills and partial fills of securities order executions\n"
		}
	},
	"Error": "parse: parse spec: paths: /orders/{orderIdentification}: get: operation \"getOrder\": responses: 200: resolve \"#/components/responses/OK_200_Order\" reference: content: \"application/json\": schema: parse schema: reference \"#/components/schemas/SecuritiesOrder\": parse schema: orderStatus: parse schema: allOf: [0]: parse schema: reference \"#/components/schemas/OrderStatusAndReason\": parse schema: reason: parse schema: reference \"#/components/schemas/OrderStatusReasonChoice\": parse schema: oneOf: [0]: parse schema: code: parse schema: reference \"#/components/schemas/OrderStatusReasonCode\": parse enum values: duplicate enum value: 'OTHR'"
}