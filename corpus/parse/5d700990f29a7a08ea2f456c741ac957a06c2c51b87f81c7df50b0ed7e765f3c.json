{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/opengeospatial/ogcapi-movingfeatures"
		},
		"file": {
			"name": "openapi-movingfeatures-1.yaml",
			"size": 0,
			"path": "openapi/openapi-movingfeatures-1.yaml",
			"byteSize": 18256,
			"content": "openapi: 3.0.2\ninfo:\n  title: \"Building Blocks specified in OGC API - MovingFeatures - Part 1: Features Extension\"\n  version: 0.0.1\n  description: \u003e-\n    This is the OpenAPI definition of Moving Features API specification that conforms to the OGC Moving Features Encoding Extension - JSON.\n  contact:\n    name: Taehoon Kim\n    email: kim.taehoon@aist.go.jp\n  license:\n    name: OGC License\n    url: \"https://www.ogc.org/ogc/Document\"\n  x-logo:\n    url: \"https://www.ogc.org/pub/www/files/OGC_Logo_2D_Blue_x_0_0.png\"\n    backgroundColor: \"#FFFFFF\"\n    altText: \"OGC logo\"\n    href: \"https://www.ogc.org/contacts\"\n\ntags:\n  - name: Capabilities\n    description: Essential characteristics of the information available from the API.\n  - name: MovingFeatureCollection\n    description: Collections of moving features to be logically managed by a user.\n  - name: MovingFeatures\n    description: Moving feature data, including the temporal geometry, temporal properties, etc.\n  - name: TemporalGeometryCollection\n    description: The spatial change over time (temporal geometry), representing the movement of the rigid or nonrigid body of a feature.\n  - name: TemporalPropertyCollection\n    description: The thematic change over time (temporal property), representing the variation of the value of any descriptive characteristic of a feature.\npaths:\n  /:\n    get:\n      operationId: getLandingpage\n      summary: Landing page\n      description: The landing page provides links to the API definition, the conformance statements and to the feature collections in this dataset.\n      tags:\n        - Capabilities\n      responses:\n        '200':\n          $ref: \"responses/LandingPage.yaml\"\n        '500':\n          $ref: \"responses/ServerError.yaml\"\n\n  /conformance:\n    get:\n      operationId: getConformance\n      summary: Information about specifications that this API conforms to\n      description: A list of all conformance classes specified in a standard that the server conforms to.\n      tags:\n        - Capabilities\n      responses:\n        '200':\n          $ref: \"responses/Conformance.yaml\"\n        '500':\n          $ref: \"responses/ServerError.yaml\"\n\n  /api:\n    get:\n      operationId: getAPIList\n      summary: API definition\n      description: A list of all API definition\n      tags:\n        - Capabilities\n      responses:\n        '200':\n          description: A list of all API definition generated by Open API Specification\n          content:\n            application/json:\n              example:\n                $ref: \"openapi-movingfeatures-1.json\"\n        '500':\n          $ref: \"responses/ServerError.yaml\"\n\n  /collections:\n    get:\n      operationId: searchCatalog\n      summary: Retrieve catalogs of moving features collection\n      description: |\n        A user can retrieve catalogs to access collections by simple filtering and a limit.\n      tags:\n        - Capabilities\n      parameters:\n        - $ref: \"parameters/bbox.yaml\"\n        - $ref: \"parameters/datetime.yaml\"\n        - $ref: \"parameters/limit.yaml\"\n      responses:\n        '200':\n          $ref: \"responses/Collections.yaml\"\n        '500':\n          $ref: \"responses/ServerError.yaml\"\n    post:\n      operationId: registerMetadata\n      summary: Register metadata about a collection of moving features\n      description: |\n        A user SHOULD register metadata about a collection of moving features into the system.\n      tags:\n        - MovingFeatureCollection\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"schemas/requestBody/collection.yaml\"\n            example:\n              $ref: \"examples/collections_post.json\"\n      responses:\n        '201':\n          description: Successful create a collection to manage moving features.\n          headers:\n            Location:\n              description: A URI of the newly added resource\n              schema:\n                type: string\n                example: \"https://data.example.org/collections/mfc1\"\n        '500':\n          $ref: \"responses/ServerError.yaml\"\n\n  /collections/{collectionId}:\n    get:\n      operationId: accessMetadata\n      summary: Access metadata about the collection\n      description: |\n        A user can access metadata with id `collectionId`.\n      tags:\n        - MovingFeatureCollection\n      parameters:\n        - $ref: \"parameters/collectionId.yaml\"\n      responses:\n        '200':\n          $ref: \"responses/Collection.yaml\"\n        '404':\n          description: A collection with the specified id was not found.\n        '500':\n          $ref: \"responses/ServerError.yaml\"\n    delete:\n      operationId: deleteCollection\n      summary: Delete the collection\n      description: |\n        The collection catalog with id `collectionId` and including metadata and moving features SHOULD be deleted.\n      tags:\n        - MovingFeatureCollection\n      parameters:\n        - $ref: \"parameters/collectionId.yaml\"\n      responses:\n        '204':\n          description: Successfully deleted.\n        '404':\n          description: A collection with the specified name was not found.\n        '500':\n          $ref: \"responses/ServerError.yaml\"\n    put:\n      operationId: replaceMetadata\n      summary: Replace metadata about the collection\n      description: |\n        A user SHOULD replace metadata with id `collectionId`.\n      tags:\n        - MovingFeatureCollection\n      parameters:\n        - $ref: \"parameters/collectionId.yaml\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"schemas/requestBody/collection.yaml\"\n            example:\n              $ref: \"examples/collections_post.json\"\n      responses:\n        '204':\n          description: Successfully replaced.\n        '404':\n          description: A collection with the specified name was not found.\n        '500':\n          $ref: \"responses/ServerError.yaml\"\n\n  /collections/{collectionId}/items:\n    get:\n      operationId: retrieveMovingFeatures\n      summary: Retrieve moving feature collection\n      description: |\n        A user can retrieve moving feature collection to access the static information of the moving feature by simple filtering and a limit.\n      tags:\n        - MovingFeatures\n      parameters:\n        - $ref: \"parameters/bbox.yaml\"\n        - $ref: \"parameters/datetime.yaml\"\n        - $ref: \"parameters/limit.yaml\"\n      responses:\n        '200':\n          $ref: \"responses/MovingFeatures.yaml\"\n        '404':\n          description: A collection with the specified id was not found.\n        '500':\n          $ref: \"responses/ServerError.yaml\"\n    post:\n      operationId: insertMovingFeatures\n      summary: Insert moving features\n      description: |\n        A user SHOULD insert a set of moving features or a moving feature into a collection with id `collectionId`.\n        \n        The request body schema SHALL follows the [MovingFeature object](https://docs.opengeospatial.org/is/19-045r3/19-045r3.html#mfeature) \n        (and [MovingFeatureCollection object](https://docs.opengeospatial.org/is/19-045r3/19-045r3.html#mfeaturecollection)) in the OGC MF-JSON.\n      tags:\n        - MovingFeatures\n      parameters:\n        - $ref: \"parameters/collectionId.yaml\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: \"schemas/requestBody/MF-JSON_Prism.schema.json#/definitions/movingFeature\"\n                - $ref: \"schemas/requestBody/MF-JSON_Prism.schema.json#/definitions/movingFeatureCollection\"\n              example:\n                - $ref: \"examples/movingFeatures_MF_JSON.json\"\n      responses:\n        '201':\n          description: |\n            Successful create a set of moving features or a moving feature into a specific collection.\n          headers:\n            Location:\n              description: A URI of the newly added resource\n              # TODO: id duplication issue should be mentioned\n              schema:\n                type: string\n                example: \"https://data.example.org/collections/mfc-1/items/mf-1\"\n        '404':\n          description: A collection with the specified id was not found.\n        '500':\n          $ref: \"responses/ServerError.yaml\"\n\n  /collections/{collectionId}/items/{mFeatureId}:\n    get:\n      operationId: accessMovingFeature\n      summary: Access the static data of the moving feature\n      description: |\n        A user can access a static data of a moving feature with id `mFeatureId`.\n        \n        The static data of a moving feature is not included temporal geometries and temporal properties.\n      tags:\n        - MovingFeatures\n      parameters:\n        - $ref: \"parameters/collectionId.yaml\"\n        - $ref: \"parameters/mFeatureId.yaml\"\n      responses:\n        '200':\n          $ref: \"responses/MovingFeature.yaml\"\n        '404':\n          description: |\n            - A collection with the specified id was not found.\n            - Or a moving feature with the specified id was not found.\n        '500':\n          $ref: \"responses/ServerError.yaml\"\n    delete:\n      operationId: deleteMovingFeature\n      summary: Delete a single moving feature\n      description: |\n        The moving feature with id `mFeatureId` and including temporal geometries and properties SHOULD be deleted.\n      tags:\n        - MovingFeatures\n      parameters:\n        - $ref: \"parameters/collectionId.yaml\"\n        - $ref: \"parameters/mFeatureId.yaml\"\n      responses:\n        '204':\n          description: Successfully deleted.\n        '404':\n          description: |\n            - A collection with the specified id was not found.\n            - Or a moving feature with the specified id was not found.\n        '500':\n          $ref: \"responses/ServerError.yaml\"\n\n  /collections/{collectionId}/items/{mFeatureId}/tgeometries:\n    get:\n      operationId: retrieveTemporalGeometries\n      summary: Retrieve the movement data of the single moving feature\n      description: |\n        A user can retrieve only the movement data of a moving feature with id `mFeatureId`.\n      tags:\n        - TemporalGeometryCollection\n      parameters:\n        - $ref: \"parameters/collectionId.yaml\"\n        - $ref: \"parameters/mFeatureId.yaml\"\n        - $ref: \"parameters/leaf.yaml\"\n        - $ref: \"parameters/bbox.yaml\"\n        - $ref: \"parameters/datetime.yaml\"\n        - $ref: \"parameters/limit.yaml\"\n      responses:\n        '200':\n          $ref: \"responses/TemporalGeometryCollection.yaml\"\n        '500':\n          $ref: \"responses/ServerError.yaml\"\n    post:\n      operationId: insertTemporalGeometry\n      summary: Add movement data into the moving feature\n      description: |\n        A user SHOULD add more movement data into a moving feature with id `mFeatureId`.\n        \n        The request body schema SHALL follows the [TemporalGeometry object](https://docs.opengeospatial.org/is/19-045r3/19-045r3.html#tgeometry) in the OGC MF-JSON.\n      tags:\n        - TemporalGeometryCollection\n      parameters:\n        - $ref: \"parameters/collectionId.yaml\"\n        - $ref: \"parameters/mFeatureId.yaml\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"schemas/requestBody/MF-JSON_Prism.schema.json#/definitions/temporalGeometry\"\n            example:\n              $ref: \"examples/temporalGeometry_MF_JSON.json\"\n              # TODO: TemporalComplexGeometry example also necessary?\n      responses:\n        '201':\n          description: |\n            Successful add more movement data into a specified moving feature.\n          headers:\n            Location:\n              description: A URI of the newly added resource\n              schema:\n                type: string\n                example: \"https://data.example.org/collections/mfc-1/items/mf-1/tgeometries/tg-2\"\n        '404':\n          description: |\n            - A collection with the specified id was not found.\n            - Or a moving feature with the specified id was not found.\n        '500':\n          $ref: \"responses/ServerError.yaml\"\n\n  /collections/{collectionId}/items/{mFeatureId}/tgeometries/{tGeometryId}:\n    delete:\n      operationId: deleteTemporalGeometry\n      summary: Delete a singe temporal geometry\n      description: |\n        The temporal geometry with id `tGeometryId` SHOULD be deleted.\n      tags:\n        - TemporalGeometryCollection\n      parameters:\n        - $ref: \"parameters/collectionId.yaml\"\n        - $ref: \"parameters/mFeatureId.yaml\"\n        - $ref: \"parameters/tGeometryId.yaml\"\n      responses:\n        '204':\n          description: Successfully deleted.\n        '404':\n          description: |\n            - A collection with the specified id was not found.\n            - Or a moving feature with the specified id was not found.\n            - Or a temporal geometry with the specified id was not found.\n        '500':\n          $ref: \"responses/ServerError.yaml\"\n\n  /collections/{collectionId}/items/{mFeatureId}/tproperties:\n    get:\n      operationId: retrieveTemporalPropertyCollection\n      summary: Retrieve the static information of the temporal properties data\n      description: |\n        A user can retrieve only the static information of the temporal property data that included a single moving feature with id `mFeatureId`.\n        \n        The static data of a temporal property is not included temporal values (property `values`).\n      tags:\n        - TemporalPropertyCollection\n      parameters:\n        - $ref: \"parameters/collectionId.yaml\"\n        - $ref: \"parameters/mFeatureId.yaml\"\n        - $ref: \"parameters/datetime.yaml\"\n        - $ref: \"parameters/limit.yaml\"\n      responses:\n        '200':\n          $ref: \"responses/TemporalPropertyCollection.yaml\"\n        '500':\n          $ref: \"responses/ServerError.yaml\"\n    post:\n      operationId: insertTemporalProperty\n      summary: Add temporal property data\n      description: |\n        A user SHOULD add more temporal property data into a moving feature with id `mFeatureId`.\n        \n        The request body schema SHALL follows the [TemporalProperties object](https://docs.opengeospatial.org/is/19-045r3/19-045r3.html#tproperties) in the OGC MF-JSON.\n      tags:\n        - TemporalPropertyCollection\n      parameters:\n        - $ref: \"parameters/collectionId.yaml\"\n        - $ref: \"parameters/mFeatureId.yaml\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"schemas/requestBody/MF-JSON_Prism.schema.json#/definitions/temporalProperties\"\n            example:\n              $ref: \"examples/temporalProperty_MF_JSON.json\"\n              # TODO: If the user adds two or more temporal properties, how to return its resource URL?\n      responses:\n        '201':\n          description: |\n            Successful add more temporal property into a specified moving feature.\n          headers:\n            Location:\n              description: A URI of the newly added resource\n              schema:\n                type: string\n                example: \"https://data.example.org/collections/mfc-1/items/mf-1/tproperties/tp-1\"\n        '404':\n          description: |\n            - A collection with the specified id was not found.\n            - Or a moving feature with the specified id was not found.\n        '500':\n          $ref: \"responses/ServerError.yaml\"\n\n  /collections/{collectionId}/items/{mFeatureId}/tproperties/{tPropertyName}:\n    get:\n      operationId: retrieveTemporalProperty\n      summary: Retrieve a temporal property\n      description: |\n        A user can retrieve only the temporal values with a specified name `tPropertyName` of temporal property.\n      tags:\n        - TemporalPropertyCollection\n      parameters:\n        - $ref: \"parameters/collectionId.yaml\"\n        - $ref: \"parameters/mFeatureId.yaml\"\n        - $ref: \"parameters/tPropertyName.yaml\"\n        - $ref: \"parameters/leaf.yaml\"\n        - $ref: \"parameters/datetime.yaml\"\n        - $ref: \"parameters/limit.yaml\"\n      responses:\n        '200':\n          $ref: \"responses/TemporalValueCollection.yaml\"\n        '500':\n          $ref: \"responses/ServerError.yaml\"\n    post:\n      operationId: insertTemporalValues\n      summary: Add temporal values data\n      description: |\n        A user SHOULD add more temporal values data into a temporal property with id `tPropertyName`.\n      tags:\n        - TemporalPropertyCollection\n      parameters:\n        - $ref: \"parameters/collectionId.yaml\"\n        - $ref: \"parameters/mFeatureId.yaml\"\n        - $ref: \"parameters/tPropertyName.yaml\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"schemas/temporalValue.yaml\"\n            example:\n              $ref: \"examples/temporalValues.json\"\n      responses:\n        '201':\n          description: |\n            Successful add more temporal values data into a specified temporal property.\n          headers:\n            Location:\n              description: A URI of the newly added resource\n              schema:\n                type: string\n                example: \"https://data.example.org/collections/mfc-1/items/mf-1/tproperties/tproperty-1/pvalue/pvalue-1\"\n        '404':\n          description: |\n            - A collection with the specified id was not found.\n            - Or a moving feature with the specified id was not found.\n            - Or a temporal property with the specified id was not found.\n        '500':\n          $ref: \"responses/ServerError.yaml\"\n    delete:\n      operationId: deleteTemporalProperty\n      summary: Delete a specified temporal property\n      description: |\n        The temporal property with id `tPropertyName` SHOULD be deleted.\n      tags:\n        - TemporalPropertyCollection\n      parameters:\n        - $ref: \"parameters/collectionId.yaml\"\n        - $ref: \"parameters/mFeatureId.yaml\"\n        - $ref: \"parameters/tPropertyName.yaml\"\n      responses:\n        '204':\n          description: Successfully deleted.\n        '404':\n          description: |\n            - A collection with the specified id was not found.\n            - Or a moving feature with the specified id was not found.\n            - Or a temporal property with the specified id was not found.\n        '500':\n          $ref: \"responses/ServerError.yaml\"",
			"canonicalURL": "/github.com/opengeospatial/ogcapi-movingfeatures@16f78f1024283d26af0ca36f5fa1b0ec55ab77f7/-/blob/openapi/openapi-movingfeatures-1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/opengeospatial/ogcapi-movingfeatures/blob/16f78f1024283d26af0ca36f5fa1b0ec55ab77f7/openapi/openapi-movingfeatures-1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/\": get: operation \"getLandingpage\": responses: 200: at 1:824: external \"responses/LandingPage.yaml\": get: file: local file reference is not allowed"
}