{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/vanilla/vanilla"
		},
		"file": {
			"name": "oauth2.yml",
			"size": 0,
			"path": "plugins/oauth2/openapi/oauth2.yml",
			"byteSize": 6085,
			"content": "openapi: 3.0.2\ninfo:\n    description: API access to your community.\n    title: Vanilla API\n    version: \"2.0\"\nservers:\n    - url: /api/v2\npaths:\n    /authenticators/oauth2:\n        post:\n            summary: Add a new OAuth 2 connection.\n            tags:\n                - Authenticators\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/OAuth2AuthenticatorPost\"\n            responses:\n                \"201\":\n                    description: Created\n                    content:\n                        \"application/json\":\n                            schema:\n                                $ref: \"#/components/schemas/OAuth2Authenticator\"\n    \"/authenticators/oauth2/{id}\":\n        parameters:\n            - name: id\n              in: path\n              required: true\n              description: The ID of the authenticator.\n              schema:\n                  type: integer\n        get:\n            summary: \"Get an OAuth2 authenticator's information.\"\n            tags:\n                - Authenticators\n            responses:\n                \"200\":\n                    description: Success\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/OAuth2Authenticator\"\n        patch:\n            summary: \"Update an OAuth2 authenticator's information.\"\n            tags:\n                - Authenticators\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/OAuth2AuthenticatorPatch\"\n            responses:\n                \"200\":\n                    description: Success\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/OAuth2Authenticator\"\ncomponents:\n    schemas:\n        OAuth2AuthenticatorPost:\n            type: object\n            properties:\n                secret:\n                    type: string\n                urls:\n                    type: object\n                    properties:\n                        tokenUrl:\n                            description: The URL on the OAuth server used to get the access token.\n                            type: string\n                            format: uri\n                        profileUrl:\n                            description: The URL on tge OAuth server used to get the user's profile information.\n                            type: string\n                            format: uri\n                authenticationRequest:\n                    type: object\n                    properties:\n                        scope:\n                            type: string\n                            description: The scope to request from the OAuth server.\n                            x-column: AcceptedScope\n                        prompt:\n                            type: string\n                            description: Prompt Parameter to append to Authorize Url\n                            example: consent login\n                useBearerToken:\n                    type: boolean\n                    description: |\n                        When requesting the profile, pass the access token in the HTTP header. i.e Authorization: Bearer [accesstoken]\n                    default: true\n                    x-column: BearerToken\n                useBasicAuthToken:\n                    type: boolean\n                    description: |\n                        When requesting the Access Token, pass the basic Auth token in the HTTP header. i.e Authorization:  [Authorization =\\\u003e Basic base64_encode($rawToken)]\n                    default: true\n                    x-column: BasicAuthToken\n                postProfileRequest:\n                    type: boolean\n                    description: |\n                        When requesting the profile, use the HTTP POST method.\n                    default: null\n                    x-column: PostProfileRequest\n                allowAccessTokens:\n                    type: boolean\n                    description: |\n                        Allow this connection to issue Vanilla API access tokens.\n                    default: false\n                userMappings:\n                    type: object\n                    properties:\n                        uniqueID:\n                            description: The Key in the JSON array to designate UserID.\n                            type: string\n                            x-column: ProfileKeyUniqueID\n                        email:\n                            description: The Key in the JSON array to designate Emails.\n                            type: string\n                            x-column: ProfileKeyEmail\n                        name:\n                            description: The Key in the JSON array to designate Display Name.\n                            type: string\n                            x-column: ProfileKeyName\n                        photoUrl:\n                            description: The Key in the JSON array to designate Photo.\n                            type: string\n                            x-column: ProfileKeyPhoto\n                        fullName:\n                            description: The Key in the JSON array to designate Full Name.\n                            type: string\n                            x-column: ProfileKeyFullName\n                        roles:\n                            description: The Key in the JSON array to designate Roles.\n                            type: string\n                            x-column: ProfileKeyRoles\n        OAuth2AuthenticatorPatch:\n            $ref: \"#/components/schemas/OAuth2AuthenticatorPost\"\n        OAuth2Authenticator:\n            allOf:\n                - $ref: \"#/components/schemas/AuthenticatorFragment\"\n                - $ref: \"#/components/schemas/OAuth2AuthenticatorPost\"\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"OAuth2AuthenticatorPatch\": parse schema: resolve \"#/components/schemas/OAuth2AuthenticatorPost\": parse schema: property \"postProfileRequest\": unexpected default \"null\" value"
}